void sub_20AF285C4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639198);
  _Unwind_Resume(a1);
}

void sub_20AF285DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  uint64_t v25;

  sub_20AECDEE0((uint64_t)&a9);
  sub_20AEC2E90(&a25);
  if (*(char *)(v25 - 97) < 0)
    operator delete(*(void **)(v25 - 120));
  if (*(char *)(v25 - 121) < 0)
  {
    operator delete(*(void **)(v25 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF2863C(CFErrorRef ***a1, uint64_t a2)
{
  uint64_t *v4;
  __int128 v5;
  __int128 *v6;
  __int128 *v7;
  __int128 *v8;
  _BYTE v9[16];
  void *__p;
  char v11;
  char v12;
  void *v13;
  char v14;
  void *v15;
  char v16;
  char v17;
  char v18;
  char v19;
  __int128 *v20;
  __int128 *v21;
  __int128 __dst;
  uint64_t v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  sub_20AF280EC();
  v4 = sub_20AED6ED4();
  if (*((char *)v4 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    v5 = *(_OWORD *)v4;
    v23 = v4[2];
    __dst = v5;
  }
  sub_20AEC7620(&v20, (uint64_t)&__dst, 1uLL);
  sub_20AECF9B0(v9, a2);
  sub_20AECD798((uint64_t *)&xmmword_2546391D0, &v20, (uint64_t)v9, **a1);
  if (!v19 || !v18)
    goto LABEL_12;
  if (!v17)
    goto LABEL_9;
  if ((v16 & 0x80000000) == 0)
  {
    if ((v14 & 0x80000000) == 0)
      goto LABEL_9;
LABEL_24:
    operator delete(v13);
    if (!v12)
      goto LABEL_12;
    goto LABEL_10;
  }
  operator delete(v15);
  if (v14 < 0)
    goto LABEL_24;
LABEL_9:
  if (!v12)
    goto LABEL_12;
LABEL_10:
  if (v11 < 0)
    operator delete(__p);
LABEL_12:
  v6 = v20;
  if (v20)
  {
    v7 = v21;
    v8 = v20;
    if (v21 != v20)
    {
      do
      {
        if (*((char *)v7 - 1) < 0)
          operator delete(*((void **)v7 - 3));
        v7 = (__int128 *)((char *)v7 - 24);
      }
      while (v7 != v6);
      v8 = v20;
    }
    v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v23) < 0)
    operator delete((void *)__dst);
}

void sub_20AF287B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20AECDEE0((uint64_t)va);
  sub_20AEC2E90((void **)(v2 - 72));
  if (*(char *)(v2 - 25) < 0)
    operator delete(*(void **)(v2 - 48));
  _Unwind_Resume(a1);
}

uint64_t sub_20AF287F4(uint64_t result)
{
  __int128 *v1;
  void *exception;
  __int128 v3;
  _BYTE v4[112];

  v1 = (__int128 *)result;
  if (!*(_BYTE *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    v3 = *v1;
    sub_20AECEBD0(v4, v1 + 1);
    sub_20AECF558((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_24C3F22C0, (void (*)(void *))sub_20AECF5A8);
  }
  return result;
}

void sub_20AF28870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECCE40((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF28884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  sub_20AECCE40((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_20AF288A0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_20AF288B4(CFErrorRef ***a1, uint64_t a2)
{
  uint64_t *v4;
  __int128 v5;
  uint64_t *v6;
  __int128 v7;
  __int128 *v8;
  __int128 v9;
  void **v10;
  void **v11;
  void *v12;
  _BYTE v13[16];
  void *__p;
  char v15;
  char v16;
  void *v17;
  char v18;
  void *v19;
  char v20;
  char v21;
  char v22;
  char v23;
  void *v24;
  void **v25;
  __int128 __dst;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  sub_20AF280EC();
  v4 = sub_20AED733C();
  if (*((char *)v4 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    v5 = *(_OWORD *)v4;
    v27 = v4[2];
    __dst = v5;
  }
  v6 = sub_20AED7480();
  if (*((char *)v6 + 23) < 0)
  {
    sub_20AEC60F4(&v28, (void *)*v6, v6[1]);
  }
  else
  {
    v7 = *(_OWORD *)v6;
    v29 = v6[2];
    v28 = v7;
  }
  v8 = sub_20AEED13C();
  if (*((char *)v8 + 23) < 0)
  {
    sub_20AEC60F4(&v30, *(void **)v8, *((_QWORD *)v8 + 1));
  }
  else
  {
    v9 = *v8;
    v31 = *((_QWORD *)v8 + 2);
    v30 = v9;
  }
  sub_20AEC7620(&v24, (uint64_t)&__dst, 3uLL);
  sub_20AECF9B0(v13, a2);
  sub_20AECD798((uint64_t *)&xmmword_2546391D0, (__int128 **)&v24, (uint64_t)v13, **a1);
  if (!v23 || !v22)
    goto LABEL_18;
  if (!v21)
    goto LABEL_15;
  if ((v20 & 0x80000000) == 0)
  {
    if ((v18 & 0x80000000) == 0)
      goto LABEL_15;
LABEL_34:
    operator delete(v17);
    if (!v16)
      goto LABEL_18;
    goto LABEL_16;
  }
  operator delete(v19);
  if (v18 < 0)
    goto LABEL_34;
LABEL_15:
  if (!v16)
    goto LABEL_18;
LABEL_16:
  if (v15 < 0)
    operator delete(__p);
LABEL_18:
  v10 = (void **)v24;
  if (v24)
  {
    v11 = v25;
    v12 = v24;
    if (v25 != v24)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = v24;
    }
    v25 = v10;
    operator delete(v12);
  }
  if (SHIBYTE(v31) < 0)
  {
    operator delete((void *)v30);
    if ((SHIBYTE(v29) & 0x80000000) == 0)
    {
LABEL_28:
      if ((SHIBYTE(v27) & 0x80000000) == 0)
        return;
LABEL_32:
      operator delete((void *)__dst);
      return;
    }
  }
  else if ((SHIBYTE(v29) & 0x80000000) == 0)
  {
    goto LABEL_28;
  }
  operator delete((void *)v28);
  if (SHIBYTE(v27) < 0)
    goto LABEL_32;
}

void sub_20AF28AF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF28B98(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 24);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF28C00(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20AF28C5C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF28CC4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF28D2C(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 24);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF28D94(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20AF28DF0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF28E58(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t VZPoints2GetTypeID()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639238);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254639238))
    return qword_254639230;
  qword_254639230 = sub_20AECB130();
  __cxa_guard_release(&qword_254639238);
  return qword_254639230;
}

uint64_t VZPoints3GetTypeID()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639248);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254639248))
    return qword_254639240;
  qword_254639240 = sub_20AECB130();
  __cxa_guard_release(&qword_254639248);
  return qword_254639240;
}

_QWORD *VZDataCreateWithPoints2(uint64_t a1, __int128 *a2, CFErrorRef *a3)
{
  _QWORD *v5;
  int v6;
  __int128 *v7;
  _QWORD *v8;
  __int128 v10;
  void *v11;
  char v12;
  char v13;
  void *v14;
  char v15;
  void *v16;
  char v17;
  char v18;
  char v19;
  char v20;
  CFErrorRef **v21;
  CFErrorRef *v22;
  char v23[208];
  void *v24;
  char v25;
  char v26;
  void *v27;
  char v28;
  char v29;
  void *v30;
  char v31;
  char v32;
  char v33;
  char v34;
  __int128 v35[13];
  void *v36;
  char v37;
  char v38;
  void *v39;
  char v40;
  char v41;
  void *__p;
  char v43;
  char v44;
  char v45;
  char v46;
  __int128 v47;
  __int128 v48;
  char v49;
  char v50;
  void *v51;
  char v52;
  void *v53;
  char v54;
  char v55;
  char v56;
  unsigned __int8 v57;
  uint64_t v58;

  v5 = (_QWORD *)a1;
  v58 = *MEMORY[0x24BDAC8D0];
  if (sub_20AF294F4((uint64_t)"VZDataCreateWithPoints2", a1, a3))
    return 0;
  sub_20AED18DC(a2, v23);
  v21 = &v22;
  v22 = a3;
  sub_20AED4D3C(v35, (uint64_t)v23);
  sub_20B091AEC((uint64_t)(v5 + 2), v35, (uint64_t)&v47);
  if (v46)
  {
    if (v45)
    {
      if (v44 && v43 < 0)
        operator delete(__p);
      if (v41 && v40 < 0)
        operator delete(v39);
      if (v38 && v37 < 0)
        operator delete(v36);
    }
    sub_20AED30E0((uint64_t)v35);
  }
  v6 = v57;
  if (!v57)
  {
    v10 = v47;
    sub_20AECEBD0(&v11, &v48);
    v20 = 1;
    sub_20AF2CFAC(&v21, (uint64_t)&v10);
    if (!v20 || !v19)
      goto LABEL_39;
    if (v18)
    {
      if (v17 < 0)
        operator delete(v16);
      if (v15 < 0)
        operator delete(v14);
    }
    if (!v13 || (v12 & 0x80000000) == 0)
      goto LABEL_39;
    goto LABEL_37;
  }
  v7 = (__int128 *)sub_20AED4AC0((uint64_t)&v47);
  v8 = operator new(0x240uLL, MEMORY[0x24BEDB6B8]);
  if (!v8)
  {
    LOBYTE(v10) = 0;
    v20 = 0;
    sub_20AF2CFAC(&v21, (uint64_t)&v10);
    if (!v20 || !v19)
      goto LABEL_38;
    if (v18)
    {
      if (v17 < 0)
        operator delete(v16);
      if (v15 < 0)
        operator delete(v14);
    }
    v5 = 0;
    if (!v13 || (v12 & 0x80000000) == 0)
      goto LABEL_39;
LABEL_37:
    operator delete(v11);
LABEL_38:
    v5 = 0;
    goto LABEL_39;
  }
  v5 = v8;
  *v8 = off_24C3F2180;
  sub_20AED5300((uint64_t)(v8 + 2), v7);
  *v5 = &off_24C3F2BA0;
  v5[2] = &unk_24C3F2BF0;
  *((_OWORD *)v5 + 35) = 0u;
LABEL_39:
  if (v57)
  {
    sub_20AED5474((uint64_t)&v47);
  }
  else if (v56)
  {
    if (v55)
    {
      if (v54 < 0)
        operator delete(v53);
      if (v52 < 0)
        operator delete(v51);
    }
    if (v50 && v49 < 0)
      operator delete((void *)v48);
  }
  if (!v6)
    v5 = 0;
  if (v34)
  {
    if (v33)
    {
      if (v32 && v31 < 0)
        operator delete(v30);
      if (v29 && v28 < 0)
        operator delete(v27);
      if (v26 && v25 < 0)
        operator delete(v24);
    }
    sub_20AED30E0((uint64_t)v23);
  }
  return v5;
}

void sub_20AF292F8(_Unwind_Exception *a1, int a2)
{
  if (a2)
    JUMPOUT(0x20AF29300);
  _Unwind_Resume(a1);
}

void sub_20AF29310(_Unwind_Exception *a1, int a2)
{
  const std::logic_error *exception_ptr;
  void *v5;
  std::string *p_what;
  std::string *v7;
  std::logic_error v8;
  char v9;
  char v10;
  __int128 v11;
  __int128 v12[6];
  std::__fs::filesystem::filesystem_error v13[3];
  CFErrorRef **v14[102];
  __int128 v15;
  _BYTE v16[104];
  char v17;

  if (a2)
  {
    sub_20AED1998((uint64_t)&STACK[0x2F0]);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
      std::logic_error::logic_error(&v8, exception_ptr);
      v8.__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
      __cxa_begin_catch(a1);
      v7 = (std::string *)std::logic_error::what(&v8);
      sub_20AED4C84(v13, (const char **)&v7);
      sub_20B099E24((__int128 *)v13, (uint64_t)&v11);
      v15 = v11;
      sub_20AECEBD0(v16, v12);
      v17 = 1;
      sub_20AF2CFAC(v14, (uint64_t)&v15);
      sub_20AECDEE0((uint64_t)&v15);
      sub_20AECCE40((uint64_t)&v11);
      if (LOBYTE(v13[0].__ec_.__cat_))
      {
        if (*((char *)&v13[0].__ec_.__val_ + 7) < 0)
          operator delete(v13[0].__vftable);
      }
      MEMORY[0x20BD35020](&v8);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      v5 = __cxa_get_exception_ptr(a1);
      sub_20AED4C1C(&v13[0], (uint64_t)v5);
      __cxa_begin_catch(a1);
      p_what = &v13[0].__storage_.__ptr_->__what_;
      if (SHIBYTE(v13[0].__storage_.__ptr_->__what_.__r_.__value_.__r.__words[2]) < 0)
        p_what = (std::string *)p_what->__r_.__value_.__r.__words[0];
      v7 = p_what;
      sub_20AED4C84(&v8, (const char **)&v7);
      sub_20B09A738((__int128 *)&v8, (uint64_t)&v11);
      v15 = v11;
      sub_20AECEBD0(v16, v12);
      v17 = 1;
      sub_20AF2CFAC(v14, (uint64_t)&v15);
      sub_20AECDEE0((uint64_t)&v15);
      sub_20AECCE40((uint64_t)&v11);
      if (v10 && v9 < 0)
        operator delete(v8.__vftable);
      std::__fs::filesystem::filesystem_error::~filesystem_error(v13);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(a1);
      LOBYTE(v15) = 0;
      v17 = 0;
      sub_20AF2CFAC(v14, (uint64_t)&v15);
      sub_20AECDEE0((uint64_t)&v15);
      __cxa_end_catch();
    }
    JUMPOUT(0x20AF291F8);
  }
  _Unwind_Resume(a1);
}

void sub_20AF29328(_Unwind_Exception *a1, int a2)
{
  if (a2)
    JUMPOUT(0x20AF29334);
  _Unwind_Resume(a1);
}

void sub_20AF294DC(void *a1, int a2)
{
  if (!a2)
    JUMPOUT(0x20AF294E4);
  sub_20AEC01C0(a1);
}

BOOL sub_20AF294F4(uint64_t a1, uint64_t a2, CFErrorRef *a3)
{
  unsigned __int8 v6;
  int v8;
  size_t v9;
  unint64_t v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  void *v15[2];
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  void *v22[2];
  uint64_t v23;
  uint64_t v24;
  void *v25[2];
  uint64_t v26;
  char v27;
  char v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  void *__p[2];
  uint64_t v37;
  char v38;
  char v39;
  char v40;

  if (a2)
    return a2 == 0;
  v6 = atomic_load((unsigned __int8 *)&qword_254639250);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254639250))
  {
    sub_20AF2CC74();
    v8 = byte_2546392DF;
    if (byte_2546392DF >= 0)
      v9 = byte_2546392DF;
    else
      v9 = qword_2546392D0;
    v10 = v9 + 1;
    if (v9 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v10 >= 0x17)
    {
      v12 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v10 | 7) != 0x17)
        v12 = v10 | 7;
      v13 = v12 + 1;
      v11 = (__int128 *)operator new(v12 + 1);
      *((_QWORD *)&xmmword_2546392B0 + 1) = v9 + 1;
      unk_2546392C0 = v13 | 0x8000000000000000;
      *(_QWORD *)&xmmword_2546392B0 = v11;
    }
    else
    {
      unk_2546392C0 = 0;
      xmmword_2546392B0 = 0uLL;
      v11 = &xmmword_2546392B0;
      byte_2546392C7 = v9 + 1;
      if (!v9)
      {
LABEL_50:
        *(_WORD *)((char *)v11 + v9) = 42;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546392B0, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639250);
        goto LABEL_3;
      }
    }
    if (v8 >= 0)
      v14 = &qword_2546392C8;
    else
      v14 = (uint64_t *)qword_2546392C8;
    memmove(v11, v14, v9);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_2546392C7 < 0)
  {
    sub_20AEC60F4(v15, (void *)xmmword_2546392B0, *((unint64_t *)&xmmword_2546392B0 + 1));
  }
  else
  {
    *(_OWORD *)v15 = xmmword_2546392B0;
    v16 = unk_2546392C0;
  }
  v17 = 1;
  sub_20AECCECC(a1, (uint64_t)v15, (uint64_t)&v18);
  v29 = v18;
  LOBYTE(v30) = 0;
  v39 = 0;
  if (v28)
  {
    v32 = 0;
    if (v21)
    {
      v30 = v19;
      v31 = v20;
      v20 = 0;
      v19 = 0uLL;
      v32 = 1;
    }
    LOBYTE(v33) = 0;
    v38 = 0;
    if (v27)
    {
      v34 = v23;
      v33 = *(_OWORD *)v22;
      v22[0] = 0;
      v22[1] = 0;
      v35 = v24;
      *(_OWORD *)__p = *(_OWORD *)v25;
      v37 = v26;
      v23 = 0;
      v25[0] = 0;
      v25[1] = 0;
      v26 = 0;
      v38 = 1;
    }
    v39 = 1;
  }
  v40 = 0;
  sub_20AECB410(&v29, a3);
  if (!v40 && v39)
  {
    if (v38)
    {
      if (SHIBYTE(v37) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v34) < 0)
        operator delete((void *)v33);
    }
    if (v32 && SHIBYTE(v31) < 0)
      operator delete((void *)v30);
  }
  if (v28)
  {
    if (v27)
    {
      if (SHIBYTE(v26) < 0)
        operator delete(v25[0]);
      if (SHIBYTE(v23) < 0)
        operator delete(v22[0]);
    }
    if (v21 && SHIBYTE(v20) < 0)
      operator delete((void *)v19);
  }
  if (v17 && SHIBYTE(v16) < 0)
    operator delete(v15[0]);
  return a2 == 0;
}

void sub_20AF2981C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639250);
  _Unwind_Resume(a1);
}

void sub_20AF29834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_20AECD704((uint64_t)&a32);
  sub_20AECCE40((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

_QWORD *VZDataCreateWithPoints3(uint64_t a1, __int128 *a2, CFErrorRef *a3)
{
  _QWORD *v5;
  int v6;
  __int128 *v7;
  _QWORD *v8;
  __int128 v10;
  void *v11;
  char v12;
  char v13;
  void *v14;
  char v15;
  void *v16;
  char v17;
  char v18;
  char v19;
  char v20;
  CFErrorRef **v21;
  CFErrorRef *v22;
  char v23[208];
  void *v24;
  char v25;
  char v26;
  void *v27;
  char v28;
  char v29;
  void *v30;
  char v31;
  char v32;
  char v33;
  char v34;
  __int128 v35[13];
  void *v36;
  char v37;
  char v38;
  void *v39;
  char v40;
  char v41;
  void *__p;
  char v43;
  char v44;
  char v45;
  char v46;
  __int128 v47;
  __int128 v48;
  char v49;
  char v50;
  void *v51;
  char v52;
  void *v53;
  char v54;
  char v55;
  char v56;
  unsigned __int8 v57;
  uint64_t v58;

  v5 = (_QWORD *)a1;
  v58 = *MEMORY[0x24BDAC8D0];
  if (sub_20AF29DE4((uint64_t)"VZDataCreateWithPoints3", a1, a3))
    return 0;
  sub_20AED18DC(a2, v23);
  v21 = &v22;
  v22 = a3;
  sub_20AED4D3C(v35, (uint64_t)v23);
  sub_20B09323C((uint64_t)(v5 + 2), v35, (uint64_t)&v47);
  if (v46)
  {
    if (v45)
    {
      if (v44 && v43 < 0)
        operator delete(__p);
      if (v41 && v40 < 0)
        operator delete(v39);
      if (v38 && v37 < 0)
        operator delete(v36);
    }
    sub_20AED30E0((uint64_t)v35);
  }
  v6 = v57;
  if (!v57)
  {
    v10 = v47;
    sub_20AECEBD0(&v11, &v48);
    v20 = 1;
    sub_20AF2D67C(&v21, (uint64_t)&v10);
    if (!v20 || !v19)
      goto LABEL_39;
    if (v18)
    {
      if (v17 < 0)
        operator delete(v16);
      if (v15 < 0)
        operator delete(v14);
    }
    if (!v13 || (v12 & 0x80000000) == 0)
      goto LABEL_39;
    goto LABEL_37;
  }
  v7 = (__int128 *)sub_20AED4AC0((uint64_t)&v47);
  v8 = operator new(0x240uLL, MEMORY[0x24BEDB6B8]);
  if (!v8)
  {
    LOBYTE(v10) = 0;
    v20 = 0;
    sub_20AF2D67C(&v21, (uint64_t)&v10);
    if (!v20 || !v19)
      goto LABEL_38;
    if (v18)
    {
      if (v17 < 0)
        operator delete(v16);
      if (v15 < 0)
        operator delete(v14);
    }
    v5 = 0;
    if (!v13 || (v12 & 0x80000000) == 0)
      goto LABEL_39;
LABEL_37:
    operator delete(v11);
LABEL_38:
    v5 = 0;
    goto LABEL_39;
  }
  v5 = v8;
  *v8 = off_24C3F2180;
  sub_20AED5300((uint64_t)(v8 + 2), v7);
  *v5 = &off_24C3F2BA0;
  v5[2] = &unk_24C3F2BF0;
  *((_OWORD *)v5 + 35) = 0u;
LABEL_39:
  if (v57)
  {
    sub_20AED5474((uint64_t)&v47);
  }
  else if (v56)
  {
    if (v55)
    {
      if (v54 < 0)
        operator delete(v53);
      if (v52 < 0)
        operator delete(v51);
    }
    if (v50 && v49 < 0)
      operator delete((void *)v48);
  }
  if (!v6)
    v5 = 0;
  if (v34)
  {
    if (v33)
    {
      if (v32 && v31 < 0)
        operator delete(v30);
      if (v29 && v28 < 0)
        operator delete(v27);
      if (v26 && v25 < 0)
        operator delete(v24);
    }
    sub_20AED30E0((uint64_t)v23);
  }
  return v5;
}

void sub_20AF29BE8(_Unwind_Exception *a1, int a2)
{
  if (a2)
    JUMPOUT(0x20AF29BF0);
  _Unwind_Resume(a1);
}

void sub_20AF29C00(_Unwind_Exception *a1, int a2)
{
  const std::logic_error *exception_ptr;
  void *v5;
  std::string *p_what;
  std::string *v7;
  std::logic_error v8;
  char v9;
  char v10;
  __int128 v11;
  __int128 v12[6];
  std::__fs::filesystem::filesystem_error v13[3];
  CFErrorRef **v14[102];
  __int128 v15;
  _BYTE v16[104];
  char v17;

  if (a2)
  {
    sub_20AED1998((uint64_t)&STACK[0x2F0]);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
      std::logic_error::logic_error(&v8, exception_ptr);
      v8.__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
      __cxa_begin_catch(a1);
      v7 = (std::string *)std::logic_error::what(&v8);
      sub_20AED4C84(v13, (const char **)&v7);
      sub_20B099E24((__int128 *)v13, (uint64_t)&v11);
      v15 = v11;
      sub_20AECEBD0(v16, v12);
      v17 = 1;
      sub_20AF2D67C(v14, (uint64_t)&v15);
      sub_20AECDEE0((uint64_t)&v15);
      sub_20AECCE40((uint64_t)&v11);
      if (LOBYTE(v13[0].__ec_.__cat_))
      {
        if (*((char *)&v13[0].__ec_.__val_ + 7) < 0)
          operator delete(v13[0].__vftable);
      }
      MEMORY[0x20BD35020](&v8);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      v5 = __cxa_get_exception_ptr(a1);
      sub_20AED4C1C(&v13[0], (uint64_t)v5);
      __cxa_begin_catch(a1);
      p_what = &v13[0].__storage_.__ptr_->__what_;
      if (SHIBYTE(v13[0].__storage_.__ptr_->__what_.__r_.__value_.__r.__words[2]) < 0)
        p_what = (std::string *)p_what->__r_.__value_.__r.__words[0];
      v7 = p_what;
      sub_20AED4C84(&v8, (const char **)&v7);
      sub_20B09A738((__int128 *)&v8, (uint64_t)&v11);
      v15 = v11;
      sub_20AECEBD0(v16, v12);
      v17 = 1;
      sub_20AF2D67C(v14, (uint64_t)&v15);
      sub_20AECDEE0((uint64_t)&v15);
      sub_20AECCE40((uint64_t)&v11);
      if (v10 && v9 < 0)
        operator delete(v8.__vftable);
      std::__fs::filesystem::filesystem_error::~filesystem_error(v13);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(a1);
      LOBYTE(v15) = 0;
      v17 = 0;
      sub_20AF2D67C(v14, (uint64_t)&v15);
      sub_20AECDEE0((uint64_t)&v15);
      __cxa_end_catch();
    }
    JUMPOUT(0x20AF29AE8);
  }
  _Unwind_Resume(a1);
}

void sub_20AF29C18(_Unwind_Exception *a1, int a2)
{
  if (a2)
    JUMPOUT(0x20AF29C24);
  _Unwind_Resume(a1);
}

void sub_20AF29DCC(void *a1, int a2)
{
  if (!a2)
    JUMPOUT(0x20AF29DD4);
  sub_20AEC01C0(a1);
}

BOOL sub_20AF29DE4(uint64_t a1, uint64_t a2, CFErrorRef *a3)
{
  unsigned __int8 v6;
  int v8;
  size_t v9;
  unint64_t v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  void *v15[2];
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  void *v22[2];
  uint64_t v23;
  uint64_t v24;
  void *v25[2];
  uint64_t v26;
  char v27;
  char v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  void *__p[2];
  uint64_t v37;
  char v38;
  char v39;
  char v40;

  if (a2)
    return a2 == 0;
  v6 = atomic_load((unsigned __int8 *)&qword_254639280);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254639280))
  {
    sub_20AF2D344();
    v8 = byte_25463936F;
    if (byte_25463936F >= 0)
      v9 = byte_25463936F;
    else
      v9 = qword_254639360;
    v10 = v9 + 1;
    if (v9 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v10 >= 0x17)
    {
      v12 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v10 | 7) != 0x17)
        v12 = v10 | 7;
      v13 = v12 + 1;
      v11 = (__int128 *)operator new(v12 + 1);
      *((_QWORD *)&xmmword_254639340 + 1) = v9 + 1;
      unk_254639350 = v13 | 0x8000000000000000;
      *(_QWORD *)&xmmword_254639340 = v11;
    }
    else
    {
      unk_254639350 = 0;
      xmmword_254639340 = 0uLL;
      v11 = &xmmword_254639340;
      byte_254639357 = v9 + 1;
      if (!v9)
      {
LABEL_50:
        *(_WORD *)((char *)v11 + v9) = 42;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639340, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639280);
        goto LABEL_3;
      }
    }
    if (v8 >= 0)
      v14 = &qword_254639358;
    else
      v14 = (uint64_t *)qword_254639358;
    memmove(v11, v14, v9);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_254639357 < 0)
  {
    sub_20AEC60F4(v15, (void *)xmmword_254639340, *((unint64_t *)&xmmword_254639340 + 1));
  }
  else
  {
    *(_OWORD *)v15 = xmmword_254639340;
    v16 = unk_254639350;
  }
  v17 = 1;
  sub_20AECCECC(a1, (uint64_t)v15, (uint64_t)&v18);
  v29 = v18;
  LOBYTE(v30) = 0;
  v39 = 0;
  if (v28)
  {
    v32 = 0;
    if (v21)
    {
      v30 = v19;
      v31 = v20;
      v20 = 0;
      v19 = 0uLL;
      v32 = 1;
    }
    LOBYTE(v33) = 0;
    v38 = 0;
    if (v27)
    {
      v34 = v23;
      v33 = *(_OWORD *)v22;
      v22[0] = 0;
      v22[1] = 0;
      v35 = v24;
      *(_OWORD *)__p = *(_OWORD *)v25;
      v37 = v26;
      v23 = 0;
      v25[0] = 0;
      v25[1] = 0;
      v26 = 0;
      v38 = 1;
    }
    v39 = 1;
  }
  v40 = 0;
  sub_20AECB410(&v29, a3);
  if (!v40 && v39)
  {
    if (v38)
    {
      if (SHIBYTE(v37) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v34) < 0)
        operator delete((void *)v33);
    }
    if (v32 && SHIBYTE(v31) < 0)
      operator delete((void *)v30);
  }
  if (v28)
  {
    if (v27)
    {
      if (SHIBYTE(v26) < 0)
        operator delete(v25[0]);
      if (SHIBYTE(v23) < 0)
        operator delete(v22[0]);
    }
    if (v21 && SHIBYTE(v20) < 0)
      operator delete((void *)v19);
  }
  if (v17 && SHIBYTE(v16) < 0)
    operator delete(v15[0]);
  return a2 == 0;
}

void sub_20AF2A10C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639280);
  _Unwind_Resume(a1);
}

void sub_20AF2A124(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_20AECD704((uint64_t)&a32);
  sub_20AECCE40((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

_OWORD *VZDataGetPoints2(uint64_t a1, CFErrorRef *a2)
{
  _OWORD *v4;
  int v5;
  _OWORD *v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v11;
  void *v12;
  char v13;
  char v14;
  void *v15;
  char v16;
  void *__p;
  char v18;
  char v19;
  char v20;
  char v21;
  __int128 v22;
  __int128 v23;
  char v24;
  char v25;
  void *v26;
  char v27;
  void *v28;
  char v29;
  char v30;
  char v31;
  unsigned __int8 v32;
  CFErrorRef **v33;
  CFErrorRef *v34;

  if (sub_20AED21B4((uint64_t)"VZDataGetPoints2", a1, a2))
    return 0;
  v4 = *(_OWORD **)(a1 + 568);
  if (v4)
    return v4;
  v33 = &v34;
  v34 = a2;
  sub_20B094B7C(a1 + 32, (uint64_t)&v22);
  v5 = v32;
  if (!v32)
  {
    v11 = v22;
    sub_20AECEBD0(&v12, &v23);
    v21 = 1;
    sub_20AF2DA14(&v33, (uint64_t)&v11);
    if (v21 && v20)
    {
      if (v19)
      {
        if (v18 < 0)
          operator delete(__p);
        if (v16 < 0)
          operator delete(v15);
      }
      if (v14 && v13 < 0)
        operator delete(v12);
    }
    goto LABEL_28;
  }
  sub_20AF2DBCC((uint64_t)&v22);
  v6 = operator new(0x28uLL, MEMORY[0x24BEDB6B8]);
  if (v6)
  {
    v4 = v6;
    v6[1] = v22;
    v22 = 0uLL;
    *((_DWORD *)v6 + 8) = 1;
    *(_QWORD *)v6 = &off_24C3F4308;
    *((_QWORD *)v6 + 1) = &unk_24C3F4358;
  }
  else
  {
    LOBYTE(v11) = 0;
    v21 = 0;
    sub_20AF2DA14(&v33, (uint64_t)&v11);
    if (v21 && v20)
    {
      if (v19)
      {
        if (v18 < 0)
          operator delete(__p);
        if (v16 < 0)
          operator delete(v15);
      }
      v4 = 0;
      if (!v14 || (v13 & 0x80000000) == 0)
        goto LABEL_28;
      operator delete(v12);
    }
    v4 = 0;
  }
LABEL_28:
  if (v32)
  {
    v7 = (std::__shared_weak_count *)*((_QWORD *)&v22 + 1);
    if (*((_QWORD *)&v22 + 1))
    {
      v8 = (unint64_t *)(*((_QWORD *)&v22 + 1) + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  else if (v31)
  {
    if (v30)
    {
      if (v29 < 0)
        operator delete(v28);
      if (v27 < 0)
        operator delete(v26);
    }
    if (v25 && v24 < 0)
      operator delete((void *)v23);
  }
  if (!v5)
    v4 = 0;
  *(_QWORD *)(a1 + 568) = v4;
  return v4;
}

void sub_20AF2A3B4(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, __int128 a13, __int128 a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,void **__dst,size_t __dst_8,__int128 a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,char a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,uint64_t a56,void *__p,uint64_t a58,int a59,__int16 a60,char a61,char a62,char a63)
{
  __int16 a65;
  __int16 a67;
  __int128 a68;
  uint64_t v68;
  std::__shared_weak_count *v71;
  unint64_t *p_shared_owners;
  unint64_t v73;
  const std::logic_error *exception_ptr;
  const char *v75;
  size_t v76;
  size_t v77;
  void **p_dst;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t *v82;
  unint64_t v83;
  const char *v84;
  size_t v85;
  const char *v86;
  std::logic_error_vtbl *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  if ((_BYTE)a67 && (_BYTE)a65)
  {
    if (a63)
    {
      if (a62 < 0)
        operator delete(__p);
      if (a55 < 0)
        operator delete(a50);
    }
    if (a49 && a48 < 0)
      operator delete(a43);
  }
  if (*(_BYTE *)(v68 - 72))
  {
    v71 = *(std::__shared_weak_count **)(v68 - 184);
    if (v71)
    {
      p_shared_owners = (unint64_t *)&v71->__shared_owners_;
      do
        v73 = __ldaxr(p_shared_owners);
      while (__stlxr(v73 - 1, p_shared_owners));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
        std::__shared_weak_count::__release_weak(v71);
      }
    }
  }
  else if (*(_BYTE *)(v68 - 80))
  {
    if (*(_BYTE *)(v68 - 88))
    {
      if (*(char *)(v68 - 89) < 0)
        operator delete(*(void **)(v68 - 112));
      if (*(char *)(v68 - 121) < 0)
        operator delete(*(void **)(v68 - 144));
    }
    if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
      operator delete(*(void **)(v68 - 176));
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_begin_catch(a1);
    v75 = std::logic_error::what(&a10);
    v76 = strlen(v75);
    if (v76 <= 0x7FFFFFFFFFFFFFF7)
    {
      v77 = v76;
      if (v76 >= 0x17)
      {
        v88 = (v76 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v76 | 7) != 0x17)
          v88 = v76 | 7;
        v89 = v88 + 1;
        p_dst = (void **)operator new(v88 + 1);
        __dst_8 = v77;
        *(_QWORD *)&a38 = v89 | 0x8000000000000000;
        __dst = p_dst;
      }
      else
      {
        BYTE7(a38) = v76;
        p_dst = (void **)&__dst;
        if (!v76)
        {
LABEL_56:
          *((_BYTE *)p_dst + v77) = 0;
          BYTE8(a38) = 1;
          sub_20B099E24((__int128 *)&__dst, (uint64_t)&a13);
          a68 = a13;
          sub_20AECEBD0((_BYTE *)(v68 - 176), &a14);
          *(_BYTE *)(v68 - 72) = 1;
          sub_20AF2DA14((CFErrorRef ***)(v68 - 64), v68 - 192);
          if (*(_BYTE *)(v68 - 72) && *(_BYTE *)(v68 - 80))
          {
            if (*(_BYTE *)(v68 - 88))
            {
              if (*(char *)(v68 - 89) < 0)
                operator delete(*(void **)(v68 - 112));
              if (*(char *)(v68 - 121) < 0)
                operator delete(*(void **)(v68 - 144));
            }
            if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
              operator delete(*(void **)(v68 - 176));
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0)
                operator delete(a27);
              if (a25 < 0)
                operator delete(a20);
            }
            if (a19 && a18 < 0)
              operator delete((void *)a14);
          }
          if (BYTE8(a38))
          {
            if (SBYTE7(a38) < 0)
              operator delete(__dst);
          }
          MEMORY[0x20BD35020](&a10);
          __cxa_end_catch();
          goto LABEL_107;
        }
      }
      memmove(p_dst, v75, v77);
      goto LABEL_56;
    }
LABEL_106:
    sub_20AEC0138();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(_BYTE *)(v68 - 192) = 0;
    *(_BYTE *)(v68 - 72) = 0;
    sub_20AF2DA14((CFErrorRef ***)(v68 - 64), v68 - 192);
    if (*(_BYTE *)(v68 - 72) && *(_BYTE *)(v68 - 80))
    {
      if (*(_BYTE *)(v68 - 88))
      {
        if (*(char *)(v68 - 89) < 0)
          operator delete(*(void **)(v68 - 112));
        if (*(char *)(v68 - 121) < 0)
          operator delete(*(void **)(v68 - 144));
      }
      if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
        operator delete(*(void **)(v68 - 176));
    }
    __cxa_end_catch();
LABEL_107:
    JUMPOUT(0x20AF2A390);
  }
  v79 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error((std::runtime_error *)&__dst, (const std::runtime_error *)v79);
  a38 = *((_OWORD *)v79 + 1);
  v81 = *((_QWORD *)v79 + 4);
  v80 = *((_QWORD *)v79 + 5);
  __dst = (void **)(MEMORY[0x24BEDB878] + 16);
  a39 = v81;
  a40 = v80;
  if (v80)
  {
    v82 = (unint64_t *)(v80 + 8);
    do
      v83 = __ldxr(v82);
    while (__stxr(v83 + 1, v82));
  }
  __cxa_begin_catch(a1);
  v84 = (const char *)(a39 + 48);
  if (*(char *)(a39 + 71) < 0)
    v84 = *(const char **)v84;
  v85 = strlen(v84);
  if (v85 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_106;
  v86 = (const char *)v85;
  if (v85 >= 0x17)
  {
    v90 = (v85 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v85 | 7) != 0x17)
      v90 = v85 | 7;
    v91 = v90 + 1;
    v87 = (std::logic_error_vtbl *)operator new(v90 + 1);
    a10.__imp_.__imp_ = v86;
    a11 = v91 | 0x8000000000000000;
    a10.__vftable = v87;
  }
  else
  {
    HIBYTE(a11) = v85;
    v87 = (std::logic_error_vtbl *)&a10;
    if (!v85)
    {
LABEL_83:
      v86[(_QWORD)v87] = 0;
      a12 = 1;
      sub_20B09A738((__int128 *)&a10, (uint64_t)&a13);
      a68 = a13;
      sub_20AECEBD0((_BYTE *)(v68 - 176), &a14);
      *(_BYTE *)(v68 - 72) = 1;
      sub_20AF2DA14((CFErrorRef ***)(v68 - 64), v68 - 192);
      if (*(_BYTE *)(v68 - 72) && *(_BYTE *)(v68 - 80))
      {
        if (*(_BYTE *)(v68 - 88))
        {
          if (*(char *)(v68 - 89) < 0)
            operator delete(*(void **)(v68 - 112));
          if (*(char *)(v68 - 121) < 0)
            operator delete(*(void **)(v68 - 144));
        }
        if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
          operator delete(*(void **)(v68 - 176));
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0)
            operator delete(a27);
          if (a25 < 0)
            operator delete(a20);
        }
        if (a19 && a18 < 0)
          operator delete((void *)a14);
      }
      if (a12 && SHIBYTE(a11) < 0)
        operator delete(a10.__vftable);
      std::__fs::filesystem::filesystem_error::~filesystem_error((std::__fs::filesystem::filesystem_error *)&__dst);
      __cxa_end_catch();
      goto LABEL_107;
    }
  }
  memmove(v87, v84, (size_t)v86);
  goto LABEL_83;
}

_OWORD *VZDataGetPoints3(uint64_t a1, CFErrorRef *a2)
{
  _OWORD *v4;
  int v5;
  _OWORD *v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v11;
  void *v12;
  char v13;
  char v14;
  void *v15;
  char v16;
  void *__p;
  char v18;
  char v19;
  char v20;
  char v21;
  __int128 v22;
  __int128 v23;
  char v24;
  char v25;
  void *v26;
  char v27;
  void *v28;
  char v29;
  char v30;
  char v31;
  unsigned __int8 v32;
  CFErrorRef **v33;
  CFErrorRef *v34;

  if (sub_20AED21B4((uint64_t)"VZDataGetPoints3", a1, a2))
    return 0;
  v4 = *(_OWORD **)(a1 + 568);
  if (v4)
    return v4;
  v33 = &v34;
  v34 = a2;
  sub_20B096B20(a1 + 32, (uint64_t)&v22);
  v5 = v32;
  if (!v32)
  {
    v11 = v22;
    sub_20AECEBD0(&v12, &v23);
    v21 = 1;
    sub_20AF2DC8C(&v33, (uint64_t)&v11);
    if (v21 && v20)
    {
      if (v19)
      {
        if (v18 < 0)
          operator delete(__p);
        if (v16 < 0)
          operator delete(v15);
      }
      if (v14 && v13 < 0)
        operator delete(v12);
    }
    goto LABEL_28;
  }
  sub_20AF2DE44((uint64_t)&v22);
  v6 = operator new(0x28uLL, MEMORY[0x24BEDB6B8]);
  if (v6)
  {
    v4 = v6;
    v6[1] = v22;
    v22 = 0uLL;
    *((_DWORD *)v6 + 8) = 1;
    *(_QWORD *)v6 = &off_24C3F4400;
    *((_QWORD *)v6 + 1) = &unk_24C3F4450;
  }
  else
  {
    LOBYTE(v11) = 0;
    v21 = 0;
    sub_20AF2DC8C(&v33, (uint64_t)&v11);
    if (v21 && v20)
    {
      if (v19)
      {
        if (v18 < 0)
          operator delete(__p);
        if (v16 < 0)
          operator delete(v15);
      }
      v4 = 0;
      if (!v14 || (v13 & 0x80000000) == 0)
        goto LABEL_28;
      operator delete(v12);
    }
    v4 = 0;
  }
LABEL_28:
  if (v32)
  {
    v7 = (std::__shared_weak_count *)*((_QWORD *)&v22 + 1);
    if (*((_QWORD *)&v22 + 1))
    {
      v8 = (unint64_t *)(*((_QWORD *)&v22 + 1) + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  else if (v31)
  {
    if (v30)
    {
      if (v29 < 0)
        operator delete(v28);
      if (v27 < 0)
        operator delete(v26);
    }
    if (v25 && v24 < 0)
      operator delete((void *)v23);
  }
  if (!v5)
    v4 = 0;
  *(_QWORD *)(a1 + 568) = v4;
  return v4;
}

void sub_20AF2AB4C(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, __int128 a13, __int128 a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,void **__dst,size_t __dst_8,__int128 a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,char a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,uint64_t a56,void *__p,uint64_t a58,int a59,__int16 a60,char a61,char a62,char a63)
{
  __int16 a65;
  __int16 a67;
  __int128 a68;
  uint64_t v68;
  std::__shared_weak_count *v71;
  unint64_t *p_shared_owners;
  unint64_t v73;
  const std::logic_error *exception_ptr;
  const char *v75;
  size_t v76;
  size_t v77;
  void **p_dst;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t *v82;
  unint64_t v83;
  const char *v84;
  size_t v85;
  const char *v86;
  std::logic_error_vtbl *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  if ((_BYTE)a67 && (_BYTE)a65)
  {
    if (a63)
    {
      if (a62 < 0)
        operator delete(__p);
      if (a55 < 0)
        operator delete(a50);
    }
    if (a49 && a48 < 0)
      operator delete(a43);
  }
  if (*(_BYTE *)(v68 - 72))
  {
    v71 = *(std::__shared_weak_count **)(v68 - 184);
    if (v71)
    {
      p_shared_owners = (unint64_t *)&v71->__shared_owners_;
      do
        v73 = __ldaxr(p_shared_owners);
      while (__stlxr(v73 - 1, p_shared_owners));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
        std::__shared_weak_count::__release_weak(v71);
      }
    }
  }
  else if (*(_BYTE *)(v68 - 80))
  {
    if (*(_BYTE *)(v68 - 88))
    {
      if (*(char *)(v68 - 89) < 0)
        operator delete(*(void **)(v68 - 112));
      if (*(char *)(v68 - 121) < 0)
        operator delete(*(void **)(v68 - 144));
    }
    if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
      operator delete(*(void **)(v68 - 176));
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_begin_catch(a1);
    v75 = std::logic_error::what(&a10);
    v76 = strlen(v75);
    if (v76 <= 0x7FFFFFFFFFFFFFF7)
    {
      v77 = v76;
      if (v76 >= 0x17)
      {
        v88 = (v76 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v76 | 7) != 0x17)
          v88 = v76 | 7;
        v89 = v88 + 1;
        p_dst = (void **)operator new(v88 + 1);
        __dst_8 = v77;
        *(_QWORD *)&a38 = v89 | 0x8000000000000000;
        __dst = p_dst;
      }
      else
      {
        BYTE7(a38) = v76;
        p_dst = (void **)&__dst;
        if (!v76)
        {
LABEL_56:
          *((_BYTE *)p_dst + v77) = 0;
          BYTE8(a38) = 1;
          sub_20B099E24((__int128 *)&__dst, (uint64_t)&a13);
          a68 = a13;
          sub_20AECEBD0((_BYTE *)(v68 - 176), &a14);
          *(_BYTE *)(v68 - 72) = 1;
          sub_20AF2DC8C((CFErrorRef ***)(v68 - 64), v68 - 192);
          if (*(_BYTE *)(v68 - 72) && *(_BYTE *)(v68 - 80))
          {
            if (*(_BYTE *)(v68 - 88))
            {
              if (*(char *)(v68 - 89) < 0)
                operator delete(*(void **)(v68 - 112));
              if (*(char *)(v68 - 121) < 0)
                operator delete(*(void **)(v68 - 144));
            }
            if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
              operator delete(*(void **)(v68 - 176));
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0)
                operator delete(a27);
              if (a25 < 0)
                operator delete(a20);
            }
            if (a19 && a18 < 0)
              operator delete((void *)a14);
          }
          if (BYTE8(a38))
          {
            if (SBYTE7(a38) < 0)
              operator delete(__dst);
          }
          MEMORY[0x20BD35020](&a10);
          __cxa_end_catch();
          goto LABEL_107;
        }
      }
      memmove(p_dst, v75, v77);
      goto LABEL_56;
    }
LABEL_106:
    sub_20AEC0138();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(_BYTE *)(v68 - 192) = 0;
    *(_BYTE *)(v68 - 72) = 0;
    sub_20AF2DC8C((CFErrorRef ***)(v68 - 64), v68 - 192);
    if (*(_BYTE *)(v68 - 72) && *(_BYTE *)(v68 - 80))
    {
      if (*(_BYTE *)(v68 - 88))
      {
        if (*(char *)(v68 - 89) < 0)
          operator delete(*(void **)(v68 - 112));
        if (*(char *)(v68 - 121) < 0)
          operator delete(*(void **)(v68 - 144));
      }
      if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
        operator delete(*(void **)(v68 - 176));
    }
    __cxa_end_catch();
LABEL_107:
    JUMPOUT(0x20AF2AB28);
  }
  v79 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error((std::runtime_error *)&__dst, (const std::runtime_error *)v79);
  a38 = *((_OWORD *)v79 + 1);
  v81 = *((_QWORD *)v79 + 4);
  v80 = *((_QWORD *)v79 + 5);
  __dst = (void **)(MEMORY[0x24BEDB878] + 16);
  a39 = v81;
  a40 = v80;
  if (v80)
  {
    v82 = (unint64_t *)(v80 + 8);
    do
      v83 = __ldxr(v82);
    while (__stxr(v83 + 1, v82));
  }
  __cxa_begin_catch(a1);
  v84 = (const char *)(a39 + 48);
  if (*(char *)(a39 + 71) < 0)
    v84 = *(const char **)v84;
  v85 = strlen(v84);
  if (v85 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_106;
  v86 = (const char *)v85;
  if (v85 >= 0x17)
  {
    v90 = (v85 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v85 | 7) != 0x17)
      v90 = v85 | 7;
    v91 = v90 + 1;
    v87 = (std::logic_error_vtbl *)operator new(v90 + 1);
    a10.__imp_.__imp_ = v86;
    a11 = v91 | 0x8000000000000000;
    a10.__vftable = v87;
  }
  else
  {
    HIBYTE(a11) = v85;
    v87 = (std::logic_error_vtbl *)&a10;
    if (!v85)
    {
LABEL_83:
      v86[(_QWORD)v87] = 0;
      a12 = 1;
      sub_20B09A738((__int128 *)&a10, (uint64_t)&a13);
      a68 = a13;
      sub_20AECEBD0((_BYTE *)(v68 - 176), &a14);
      *(_BYTE *)(v68 - 72) = 1;
      sub_20AF2DC8C((CFErrorRef ***)(v68 - 64), v68 - 192);
      if (*(_BYTE *)(v68 - 72) && *(_BYTE *)(v68 - 80))
      {
        if (*(_BYTE *)(v68 - 88))
        {
          if (*(char *)(v68 - 89) < 0)
            operator delete(*(void **)(v68 - 112));
          if (*(char *)(v68 - 121) < 0)
            operator delete(*(void **)(v68 - 144));
        }
        if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
          operator delete(*(void **)(v68 - 176));
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0)
            operator delete(a27);
          if (a25 < 0)
            operator delete(a20);
        }
        if (a19 && a18 < 0)
          operator delete((void *)a14);
      }
      if (a12 && SHIBYTE(a11) < 0)
        operator delete(a10.__vftable);
      std::__fs::filesystem::filesystem_error::~filesystem_error((std::__fs::filesystem::filesystem_error *)&__dst);
      __cxa_end_catch();
      goto LABEL_107;
    }
  }
  memmove(v87, v84, (size_t)v86);
  goto LABEL_83;
}

_OWORD *VZPoints2Create(uint64_t a1, unint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  _OWORD *v4;
  int v5;
  _OWORD *v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v11;
  void *v12;
  char v13;
  char v14;
  void *v15;
  char v16;
  void *__p;
  char v18;
  char v19;
  char v20;
  char v21;
  __int128 v22;
  __int128 v23;
  char v24;
  char v25;
  void *v26;
  char v27;
  void *v28;
  char v29;
  char v30;
  char v31;
  unsigned __int8 v32;
  CFErrorRef **v33;
  uint64_t v34;

  v33 = (CFErrorRef **)&v34;
  v34 = a4;
  sub_20B0906EC(a1, a2, a3, (uint64_t)&v22);
  v5 = v32;
  if (v32)
  {
    sub_20AF2DBCC((uint64_t)&v22);
    v6 = operator new(0x28uLL, MEMORY[0x24BEDB6B8]);
    if (v6)
    {
      v4 = v6;
      v6[1] = v22;
      v22 = 0uLL;
      *((_DWORD *)v6 + 8) = 1;
      *(_QWORD *)v6 = &off_24C3F4308;
      *((_QWORD *)v6 + 1) = &unk_24C3F4358;
      goto LABEL_25;
    }
    LOBYTE(v11) = 0;
    v21 = 0;
    sub_20AF2DF04(&v33, (uint64_t)&v11);
    if (!v21 || !v20)
      goto LABEL_24;
    if (v19)
    {
      if (v18 < 0)
        operator delete(__p);
      if (v16 < 0)
        operator delete(v15);
    }
    v4 = 0;
    if (v14 && v13 < 0)
    {
      operator delete(v12);
LABEL_24:
      v4 = 0;
    }
  }
  else
  {
    v11 = v22;
    sub_20AECEBD0(&v12, &v23);
    v21 = 1;
    sub_20AF2DF04(&v33, (uint64_t)&v11);
    if (v21 && v20)
    {
      if (v19)
      {
        if (v18 < 0)
          operator delete(__p);
        if (v16 < 0)
          operator delete(v15);
      }
      if (v14 && v13 < 0)
        operator delete(v12);
    }
  }
LABEL_25:
  if (v32)
  {
    v7 = (std::__shared_weak_count *)*((_QWORD *)&v22 + 1);
    if (*((_QWORD *)&v22 + 1))
    {
      v8 = (unint64_t *)(*((_QWORD *)&v22 + 1) + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  else if (v31)
  {
    if (v30)
    {
      if (v29 < 0)
        operator delete(v28);
      if (v27 < 0)
        operator delete(v26);
    }
    if (v25 && v24 < 0)
      operator delete((void *)v23);
  }
  if (!v5)
    return 0;
  return v4;
}

void sub_20AF2B2B0(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, __int128 a13, __int128 a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,void **__dst,size_t __dst_8,__int128 a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,char a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,uint64_t a56,void *__p,uint64_t a58,int a59,__int16 a60,char a61,char a62,char a63)
{
  __int16 a65;
  __int16 a67;
  __int128 a68;
  uint64_t v68;
  std::__shared_weak_count *v71;
  unint64_t *p_shared_owners;
  unint64_t v73;
  const std::logic_error *exception_ptr;
  const char *v75;
  size_t v76;
  size_t v77;
  void **p_dst;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t *v82;
  unint64_t v83;
  const char *v84;
  size_t v85;
  const char *v86;
  std::logic_error_vtbl *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  if ((_BYTE)a67 && (_BYTE)a65)
  {
    if (a63)
    {
      if (a62 < 0)
        operator delete(__p);
      if (a55 < 0)
        operator delete(a50);
    }
    if (a49 && a48 < 0)
      operator delete(a43);
  }
  if (*(_BYTE *)(v68 - 72))
  {
    v71 = *(std::__shared_weak_count **)(v68 - 184);
    if (v71)
    {
      p_shared_owners = (unint64_t *)&v71->__shared_owners_;
      do
        v73 = __ldaxr(p_shared_owners);
      while (__stlxr(v73 - 1, p_shared_owners));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
        std::__shared_weak_count::__release_weak(v71);
      }
    }
  }
  else if (*(_BYTE *)(v68 - 80))
  {
    if (*(_BYTE *)(v68 - 88))
    {
      if (*(char *)(v68 - 89) < 0)
        operator delete(*(void **)(v68 - 112));
      if (*(char *)(v68 - 121) < 0)
        operator delete(*(void **)(v68 - 144));
    }
    if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
      operator delete(*(void **)(v68 - 176));
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_begin_catch(a1);
    v75 = std::logic_error::what(&a10);
    v76 = strlen(v75);
    if (v76 <= 0x7FFFFFFFFFFFFFF7)
    {
      v77 = v76;
      if (v76 >= 0x17)
      {
        v88 = (v76 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v76 | 7) != 0x17)
          v88 = v76 | 7;
        v89 = v88 + 1;
        p_dst = (void **)operator new(v88 + 1);
        __dst_8 = v77;
        *(_QWORD *)&a38 = v89 | 0x8000000000000000;
        __dst = p_dst;
      }
      else
      {
        BYTE7(a38) = v76;
        p_dst = (void **)&__dst;
        if (!v76)
        {
LABEL_56:
          *((_BYTE *)p_dst + v77) = 0;
          BYTE8(a38) = 1;
          sub_20B099E24((__int128 *)&__dst, (uint64_t)&a13);
          a68 = a13;
          sub_20AECEBD0((_BYTE *)(v68 - 176), &a14);
          *(_BYTE *)(v68 - 72) = 1;
          sub_20AF2DF04((CFErrorRef ***)(v68 - 64), v68 - 192);
          if (*(_BYTE *)(v68 - 72) && *(_BYTE *)(v68 - 80))
          {
            if (*(_BYTE *)(v68 - 88))
            {
              if (*(char *)(v68 - 89) < 0)
                operator delete(*(void **)(v68 - 112));
              if (*(char *)(v68 - 121) < 0)
                operator delete(*(void **)(v68 - 144));
            }
            if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
              operator delete(*(void **)(v68 - 176));
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0)
                operator delete(a27);
              if (a25 < 0)
                operator delete(a20);
            }
            if (a19 && a18 < 0)
              operator delete((void *)a14);
          }
          if (BYTE8(a38))
          {
            if (SBYTE7(a38) < 0)
              operator delete(__dst);
          }
          MEMORY[0x20BD35020](&a10);
          __cxa_end_catch();
          goto LABEL_107;
        }
      }
      memmove(p_dst, v75, v77);
      goto LABEL_56;
    }
LABEL_106:
    sub_20AEC0138();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(_BYTE *)(v68 - 192) = 0;
    *(_BYTE *)(v68 - 72) = 0;
    sub_20AF2DF04((CFErrorRef ***)(v68 - 64), v68 - 192);
    if (*(_BYTE *)(v68 - 72) && *(_BYTE *)(v68 - 80))
    {
      if (*(_BYTE *)(v68 - 88))
      {
        if (*(char *)(v68 - 89) < 0)
          operator delete(*(void **)(v68 - 112));
        if (*(char *)(v68 - 121) < 0)
          operator delete(*(void **)(v68 - 144));
      }
      if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
        operator delete(*(void **)(v68 - 176));
    }
    __cxa_end_catch();
LABEL_107:
    JUMPOUT(0x20AF2B290);
  }
  v79 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error((std::runtime_error *)&__dst, (const std::runtime_error *)v79);
  a38 = *((_OWORD *)v79 + 1);
  v81 = *((_QWORD *)v79 + 4);
  v80 = *((_QWORD *)v79 + 5);
  __dst = (void **)(MEMORY[0x24BEDB878] + 16);
  a39 = v81;
  a40 = v80;
  if (v80)
  {
    v82 = (unint64_t *)(v80 + 8);
    do
      v83 = __ldxr(v82);
    while (__stxr(v83 + 1, v82));
  }
  __cxa_begin_catch(a1);
  v84 = (const char *)(a39 + 48);
  if (*(char *)(a39 + 71) < 0)
    v84 = *(const char **)v84;
  v85 = strlen(v84);
  if (v85 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_106;
  v86 = (const char *)v85;
  if (v85 >= 0x17)
  {
    v90 = (v85 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v85 | 7) != 0x17)
      v90 = v85 | 7;
    v91 = v90 + 1;
    v87 = (std::logic_error_vtbl *)operator new(v90 + 1);
    a10.__imp_.__imp_ = v86;
    a11 = v91 | 0x8000000000000000;
    a10.__vftable = v87;
  }
  else
  {
    HIBYTE(a11) = v85;
    v87 = (std::logic_error_vtbl *)&a10;
    if (!v85)
    {
LABEL_83:
      v86[(_QWORD)v87] = 0;
      a12 = 1;
      sub_20B09A738((__int128 *)&a10, (uint64_t)&a13);
      a68 = a13;
      sub_20AECEBD0((_BYTE *)(v68 - 176), &a14);
      *(_BYTE *)(v68 - 72) = 1;
      sub_20AF2DF04((CFErrorRef ***)(v68 - 64), v68 - 192);
      if (*(_BYTE *)(v68 - 72) && *(_BYTE *)(v68 - 80))
      {
        if (*(_BYTE *)(v68 - 88))
        {
          if (*(char *)(v68 - 89) < 0)
            operator delete(*(void **)(v68 - 112));
          if (*(char *)(v68 - 121) < 0)
            operator delete(*(void **)(v68 - 144));
        }
        if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
          operator delete(*(void **)(v68 - 176));
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0)
            operator delete(a27);
          if (a25 < 0)
            operator delete(a20);
        }
        if (a19 && a18 < 0)
          operator delete((void *)a14);
      }
      if (a12 && SHIBYTE(a11) < 0)
        operator delete(a10.__vftable);
      std::__fs::filesystem::filesystem_error::~filesystem_error((std::__fs::filesystem::filesystem_error *)&__dst);
      __cxa_end_catch();
      goto LABEL_107;
    }
  }
  memmove(v87, v84, (size_t)v86);
  goto LABEL_83;
}

_OWORD *VZPoints3Create(uint64_t a1, unint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  _OWORD *v4;
  int v5;
  _OWORD *v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v11;
  void *v12;
  char v13;
  char v14;
  void *v15;
  char v16;
  void *__p;
  char v18;
  char v19;
  char v20;
  char v21;
  __int128 v22;
  __int128 v23;
  char v24;
  char v25;
  void *v26;
  char v27;
  void *v28;
  char v29;
  char v30;
  char v31;
  unsigned __int8 v32;
  CFErrorRef **v33;
  uint64_t v34;

  v33 = (CFErrorRef **)&v34;
  v34 = a4;
  sub_20B091074(a1, a2, a3, (uint64_t)&v22);
  v5 = v32;
  if (v32)
  {
    sub_20AF2DE44((uint64_t)&v22);
    v6 = operator new(0x28uLL, MEMORY[0x24BEDB6B8]);
    if (v6)
    {
      v4 = v6;
      v6[1] = v22;
      v22 = 0uLL;
      *((_DWORD *)v6 + 8) = 1;
      *(_QWORD *)v6 = &off_24C3F4400;
      *((_QWORD *)v6 + 1) = &unk_24C3F4450;
      goto LABEL_25;
    }
    LOBYTE(v11) = 0;
    v21 = 0;
    sub_20AF2E1E8(&v33, (uint64_t)&v11);
    if (!v21 || !v20)
      goto LABEL_24;
    if (v19)
    {
      if (v18 < 0)
        operator delete(__p);
      if (v16 < 0)
        operator delete(v15);
    }
    v4 = 0;
    if (v14 && v13 < 0)
    {
      operator delete(v12);
LABEL_24:
      v4 = 0;
    }
  }
  else
  {
    v11 = v22;
    sub_20AECEBD0(&v12, &v23);
    v21 = 1;
    sub_20AF2E1E8(&v33, (uint64_t)&v11);
    if (v21 && v20)
    {
      if (v19)
      {
        if (v18 < 0)
          operator delete(__p);
        if (v16 < 0)
          operator delete(v15);
      }
      if (v14 && v13 < 0)
        operator delete(v12);
    }
  }
LABEL_25:
  if (v32)
  {
    v7 = (std::__shared_weak_count *)*((_QWORD *)&v22 + 1);
    if (*((_QWORD *)&v22 + 1))
    {
      v8 = (unint64_t *)(*((_QWORD *)&v22 + 1) + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  else if (v31)
  {
    if (v30)
    {
      if (v29 < 0)
        operator delete(v28);
      if (v27 < 0)
        operator delete(v26);
    }
    if (v25 && v24 < 0)
      operator delete((void *)v23);
  }
  if (!v5)
    return 0;
  return v4;
}

void sub_20AF2BA14(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, __int128 a13, __int128 a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,void **__dst,size_t __dst_8,__int128 a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,char a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,uint64_t a56,void *__p,uint64_t a58,int a59,__int16 a60,char a61,char a62,char a63)
{
  __int16 a65;
  __int16 a67;
  __int128 a68;
  uint64_t v68;
  std::__shared_weak_count *v71;
  unint64_t *p_shared_owners;
  unint64_t v73;
  const std::logic_error *exception_ptr;
  const char *v75;
  size_t v76;
  size_t v77;
  void **p_dst;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t *v82;
  unint64_t v83;
  const char *v84;
  size_t v85;
  const char *v86;
  std::logic_error_vtbl *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  if ((_BYTE)a67 && (_BYTE)a65)
  {
    if (a63)
    {
      if (a62 < 0)
        operator delete(__p);
      if (a55 < 0)
        operator delete(a50);
    }
    if (a49 && a48 < 0)
      operator delete(a43);
  }
  if (*(_BYTE *)(v68 - 72))
  {
    v71 = *(std::__shared_weak_count **)(v68 - 184);
    if (v71)
    {
      p_shared_owners = (unint64_t *)&v71->__shared_owners_;
      do
        v73 = __ldaxr(p_shared_owners);
      while (__stlxr(v73 - 1, p_shared_owners));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
        std::__shared_weak_count::__release_weak(v71);
      }
    }
  }
  else if (*(_BYTE *)(v68 - 80))
  {
    if (*(_BYTE *)(v68 - 88))
    {
      if (*(char *)(v68 - 89) < 0)
        operator delete(*(void **)(v68 - 112));
      if (*(char *)(v68 - 121) < 0)
        operator delete(*(void **)(v68 - 144));
    }
    if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
      operator delete(*(void **)(v68 - 176));
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_begin_catch(a1);
    v75 = std::logic_error::what(&a10);
    v76 = strlen(v75);
    if (v76 <= 0x7FFFFFFFFFFFFFF7)
    {
      v77 = v76;
      if (v76 >= 0x17)
      {
        v88 = (v76 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v76 | 7) != 0x17)
          v88 = v76 | 7;
        v89 = v88 + 1;
        p_dst = (void **)operator new(v88 + 1);
        __dst_8 = v77;
        *(_QWORD *)&a38 = v89 | 0x8000000000000000;
        __dst = p_dst;
      }
      else
      {
        BYTE7(a38) = v76;
        p_dst = (void **)&__dst;
        if (!v76)
        {
LABEL_56:
          *((_BYTE *)p_dst + v77) = 0;
          BYTE8(a38) = 1;
          sub_20B099E24((__int128 *)&__dst, (uint64_t)&a13);
          a68 = a13;
          sub_20AECEBD0((_BYTE *)(v68 - 176), &a14);
          *(_BYTE *)(v68 - 72) = 1;
          sub_20AF2E1E8((CFErrorRef ***)(v68 - 64), v68 - 192);
          if (*(_BYTE *)(v68 - 72) && *(_BYTE *)(v68 - 80))
          {
            if (*(_BYTE *)(v68 - 88))
            {
              if (*(char *)(v68 - 89) < 0)
                operator delete(*(void **)(v68 - 112));
              if (*(char *)(v68 - 121) < 0)
                operator delete(*(void **)(v68 - 144));
            }
            if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
              operator delete(*(void **)(v68 - 176));
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0)
                operator delete(a27);
              if (a25 < 0)
                operator delete(a20);
            }
            if (a19 && a18 < 0)
              operator delete((void *)a14);
          }
          if (BYTE8(a38))
          {
            if (SBYTE7(a38) < 0)
              operator delete(__dst);
          }
          MEMORY[0x20BD35020](&a10);
          __cxa_end_catch();
          goto LABEL_107;
        }
      }
      memmove(p_dst, v75, v77);
      goto LABEL_56;
    }
LABEL_106:
    sub_20AEC0138();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(_BYTE *)(v68 - 192) = 0;
    *(_BYTE *)(v68 - 72) = 0;
    sub_20AF2E1E8((CFErrorRef ***)(v68 - 64), v68 - 192);
    if (*(_BYTE *)(v68 - 72) && *(_BYTE *)(v68 - 80))
    {
      if (*(_BYTE *)(v68 - 88))
      {
        if (*(char *)(v68 - 89) < 0)
          operator delete(*(void **)(v68 - 112));
        if (*(char *)(v68 - 121) < 0)
          operator delete(*(void **)(v68 - 144));
      }
      if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
        operator delete(*(void **)(v68 - 176));
    }
    __cxa_end_catch();
LABEL_107:
    JUMPOUT(0x20AF2B9F4);
  }
  v79 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error((std::runtime_error *)&__dst, (const std::runtime_error *)v79);
  a38 = *((_OWORD *)v79 + 1);
  v81 = *((_QWORD *)v79 + 4);
  v80 = *((_QWORD *)v79 + 5);
  __dst = (void **)(MEMORY[0x24BEDB878] + 16);
  a39 = v81;
  a40 = v80;
  if (v80)
  {
    v82 = (unint64_t *)(v80 + 8);
    do
      v83 = __ldxr(v82);
    while (__stxr(v83 + 1, v82));
  }
  __cxa_begin_catch(a1);
  v84 = (const char *)(a39 + 48);
  if (*(char *)(a39 + 71) < 0)
    v84 = *(const char **)v84;
  v85 = strlen(v84);
  if (v85 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_106;
  v86 = (const char *)v85;
  if (v85 >= 0x17)
  {
    v90 = (v85 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v85 | 7) != 0x17)
      v90 = v85 | 7;
    v91 = v90 + 1;
    v87 = (std::logic_error_vtbl *)operator new(v90 + 1);
    a10.__imp_.__imp_ = v86;
    a11 = v91 | 0x8000000000000000;
    a10.__vftable = v87;
  }
  else
  {
    HIBYTE(a11) = v85;
    v87 = (std::logic_error_vtbl *)&a10;
    if (!v85)
    {
LABEL_83:
      v86[(_QWORD)v87] = 0;
      a12 = 1;
      sub_20B09A738((__int128 *)&a10, (uint64_t)&a13);
      a68 = a13;
      sub_20AECEBD0((_BYTE *)(v68 - 176), &a14);
      *(_BYTE *)(v68 - 72) = 1;
      sub_20AF2E1E8((CFErrorRef ***)(v68 - 64), v68 - 192);
      if (*(_BYTE *)(v68 - 72) && *(_BYTE *)(v68 - 80))
      {
        if (*(_BYTE *)(v68 - 88))
        {
          if (*(char *)(v68 - 89) < 0)
            operator delete(*(void **)(v68 - 112));
          if (*(char *)(v68 - 121) < 0)
            operator delete(*(void **)(v68 - 144));
        }
        if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
          operator delete(*(void **)(v68 - 176));
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0)
            operator delete(a27);
          if (a25 < 0)
            operator delete(a20);
        }
        if (a19 && a18 < 0)
          operator delete((void *)a14);
      }
      if (a12 && SHIBYTE(a11) < 0)
        operator delete(a10.__vftable);
      std::__fs::filesystem::filesystem_error::~filesystem_error((std::__fs::filesystem::filesystem_error *)&__dst);
      __cxa_end_catch();
      goto LABEL_107;
    }
  }
  memmove(v87, v84, (size_t)v86);
  goto LABEL_83;
}

uint64_t VZPoints2GetBytePtr(uint64_t a1)
{
  BOOL v2;
  uint64_t result;

  v2 = sub_20AF294F4((uint64_t)"VZPoints2GetBytePtr", a1, 0);
  result = 0;
  if (!v2)
    return *(_QWORD *)(**(_QWORD **)(a1 + 16) + 48);
  return result;
}

uint64_t VZPoints3GetBytePtr(uint64_t a1)
{
  BOOL v2;
  uint64_t result;

  v2 = sub_20AF29DE4((uint64_t)"VZPoints3GetBytePtr", a1, 0);
  result = 0;
  if (!v2)
    return *(_QWORD *)(**(_QWORD **)(a1 + 16) + 48);
  return result;
}

uint64_t VZPoints2GetCount(uint64_t a1)
{
  BOOL v2;
  uint64_t result;

  v2 = sub_20AF294F4((uint64_t)"VZPoints2GetCount", a1, 0);
  result = 0;
  if (!v2)
    return *(_QWORD *)(**(_QWORD **)(a1 + 16) + 56) >> 1;
  return result;
}

unint64_t VZPoints3GetCount(uint64_t a1)
{
  BOOL v2;
  unint64_t result;

  v2 = sub_20AF29DE4((uint64_t)"VZPoints3GetCount", a1, 0);
  result = 0;
  if (!v2)
    return *(_QWORD *)(**(_QWORD **)(a1 + 16) + 56) / 3uLL;
  return result;
}

uint64_t VZPoints2GetByteCount(uint64_t a1)
{
  BOOL v2;
  uint64_t result;

  v2 = sub_20AF294F4((uint64_t)"VZPoints2GetByteCount", a1, 0);
  result = 0;
  if (!v2)
    return *(_QWORD *)(**(_QWORD **)(a1 + 16) + 40);
  return result;
}

uint64_t VZPoints3GetByteCount(uint64_t a1)
{
  BOOL v2;
  uint64_t result;

  v2 = sub_20AF29DE4((uint64_t)"VZPoints3GetByteCount", a1, 0);
  result = 0;
  if (!v2)
    return *(_QWORD *)(**(_QWORD **)(a1 + 16) + 40);
  return result;
}

uint64_t VZPoints2GetValueType(uint64_t a1)
{
  if (sub_20AF294F4((uint64_t)"VZPoints2GetValueType", a1, 0))
    return 255;
  else
    return ***(unsigned __int8 ***)(a1 + 16);
}

uint64_t VZPoints3GetValueType(uint64_t a1)
{
  if (sub_20AF29DE4((uint64_t)"VZPoints3GetValueType", a1, 0))
    return 255;
  else
    return ***(unsigned __int8 ***)(a1 + 16);
}

uint64_t sub_20AF2C1BC(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;

  v1 = (unsigned int *)(result + 32);
  do
    v2 = __ldaxr(v1);
  while (__stlxr(v2 + 1, v1));
  return result;
}

uint64_t sub_20AF2C1D4(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;
  unsigned int v3;

  v1 = (unsigned int *)(result + 32);
  do
  {
    v2 = __ldaxr(v1);
    v3 = v2 - 1;
  }
  while (__stlxr(v3, v1));
  if (!v3)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 8) + 8))(result + 8);
  return result;
}

uint64_t sub_20AF2C1FC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639238);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254639238))
    return qword_254639230;
  qword_254639230 = sub_20AECB130();
  __cxa_guard_release(&qword_254639238);
  return qword_254639230;
}

_QWORD *sub_20AF2C25C(uint64_t a1, void *lpsrc, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _QWORD *result;
  unsigned __int8 **v17;
  unsigned __int8 *v18;
  int v19;
  unsigned __int8 *v20;
  _QWORD v21[3];
  char v22;

  result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C3F21C0, (const struct __class_type_info *)&unk_24C3F43A0, 0);
  if (result)
  {
    v17 = (unsigned __int8 **)result[2];
    v18 = **(unsigned __int8 ***)(a1 + 16);
    v19 = *v18;
    v20 = *v17;
    if (v19 == *v20)
    {
      v21[0] = &v22;
      v21[1] = v18;
      v21[2] = v20;
      return (_QWORD *)sub_20B43E450(v19, (uint64_t)v21);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

CFTypeRef sub_20AF2C330(uint64_t a1)
{
  uint64_t v2;
  _BYTE **v3;
  _QWORD *v4;
  _QWORD *v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  CFTypeRef v18;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  void *__p;
  char v24;
  CFTypeRef cf;
  std::__shared_weak_count *v26;
  void *__dst[2];
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  sub_20AF2CDF4();
  v29 = a1;
  v2 = operator new();
  *(_QWORD *)(v2 + 272) = 0;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_OWORD *)(v2 + 224) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)v2 = 0u;
  sub_20AEC0BD8(v2);
  v30 = (_QWORD *)v2;
  v3 = *(_BYTE ***)(a1 + 16);
  v4 = sub_20AEC01D0((_QWORD *)(v2 + 16), (uint64_t)"{", 1);
  LOBYTE(v31) = **v3;
  v5 = sub_20B5220B4(v4, &v31);
  sub_20AEC01D0(v5, (uint64_t)",", 1);
  v31 = v2 + 16;
  sub_20B43F644(**v3, (uint64_t)v3, (uint64_t)&v31);
  sub_20AEC01D0((_QWORD *)(v2 + 16), (uint64_t)"}", 1);
  v6 = *(_DWORD *)(v2 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v2 + 112);
    v10 = *(_QWORD *)(v2 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v2 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v2 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_29;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v28) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v2 + 40);
    v7 = *(_QWORD *)(v2 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_29:
      sub_20AEC0138();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v28 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v28) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v30;
  if (v30)
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *v30 = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)((char *)v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    v14[3] = MEMORY[0x24BEDB848] + 16;
    v14[2] = v17;
    if (*((char *)v14 + 111) < 0)
      operator delete((void *)v14[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v14 + 16);
    MEMORY[0x20BD3583C](v14, 0x10B2C40EED050F3);
  }
  sub_20AED55DC("<", (uint64_t)&xmmword_2546392E0, (uint64_t)" ", &v29, (uint64_t)">", (uint64_t)__dst);
  if (SHIBYTE(v28) < 0)
    operator delete(__dst[0]);
  sub_20B4EE2F0((uint64_t)&__p, (CFStringRef *)&cf);
  v18 = cf;
  if (cf)
    CFRetain(cf);
  v19 = v26;
  if (!v26)
    goto LABEL_26;
  p_shared_owners = (unint64_t *)&v26->__shared_owners_;
  do
    v21 = __ldaxr(p_shared_owners);
  while (__stlxr(v21 - 1, p_shared_owners));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
    if ((v24 & 0x80000000) == 0)
      return v18;
  }
  else
  {
LABEL_26:
    if ((v24 & 0x80000000) == 0)
      return v18;
  }
  operator delete(__p);
  return v18;
}

uint64_t sub_20AF2C638(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  const void *v34[2];
  char v35;
  uint64_t v36;

  sub_20AEC147C((uint64_t)&v36);
  if (v35 < 0)
    operator delete((void *)v34[0]);
  __cxa_begin_catch(a1);
  sub_20AF2CDF4();
  sub_20AEC0D64(v34, "failed to create description");
  sub_20AECD224((std::string::size_type)&xmmword_2546392E0, v34, 0);
  if (v35 < 0)
    operator delete((void *)v34[0]);
  __cxa_end_catch();
  return 0;
}

uint64_t sub_20AF2C70C(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 32));
}

uint64_t sub_20AF2C718(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;

  v1 = (unsigned int *)(result + 32);
  do
    v2 = __ldaxr(v1);
  while (__stlxr(v2 + 1, v1));
  return result;
}

uint64_t sub_20AF2C730(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;
  unsigned int v3;

  v1 = (unsigned int *)(result + 32);
  do
  {
    v2 = __ldaxr(v1);
    v3 = v2 - 1;
  }
  while (__stlxr(v3, v1));
  if (!v3)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 8) + 8))(result + 8);
  return result;
}

uint64_t sub_20AF2C758()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639248);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254639248))
    return qword_254639240;
  qword_254639240 = sub_20AECB130();
  __cxa_guard_release(&qword_254639248);
  return qword_254639240;
}

_QWORD *sub_20AF2C7B8(uint64_t a1, void *lpsrc, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _QWORD *result;
  unsigned __int8 **v17;
  unsigned __int8 *v18;
  int v19;
  unsigned __int8 *v20;
  _QWORD v21[3];
  char v22;

  result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C3F21C0, (const struct __class_type_info *)&unk_24C3F4498, 0);
  if (result)
  {
    v17 = (unsigned __int8 **)result[2];
    v18 = **(unsigned __int8 ***)(a1 + 16);
    v19 = *v18;
    v20 = *v17;
    if (v19 == *v20)
    {
      v21[0] = &v22;
      v21[1] = v18;
      v21[2] = v20;
      return (_QWORD *)sub_20B43E450(v19, (uint64_t)v21);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

CFTypeRef sub_20AF2C88C(uint64_t a1)
{
  uint64_t v2;
  _BYTE **v3;
  _QWORD *v4;
  _QWORD *v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  CFTypeRef v18;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  void *__p;
  char v24;
  CFTypeRef cf;
  std::__shared_weak_count *v26;
  void *__dst[2];
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  sub_20AF2D4C4();
  v29 = a1;
  v2 = operator new();
  *(_QWORD *)(v2 + 272) = 0;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_OWORD *)(v2 + 224) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)v2 = 0u;
  sub_20AEC0BD8(v2);
  v30 = (_QWORD *)v2;
  v3 = *(_BYTE ***)(a1 + 16);
  v4 = sub_20AEC01D0((_QWORD *)(v2 + 16), (uint64_t)"{", 1);
  LOBYTE(v31) = **v3;
  v5 = sub_20B5220B4(v4, &v31);
  sub_20AEC01D0(v5, (uint64_t)",", 1);
  v31 = v2 + 16;
  sub_20B4405CC(**v3, (uint64_t)v3, (uint64_t)&v31);
  sub_20AEC01D0((_QWORD *)(v2 + 16), (uint64_t)"}", 1);
  v6 = *(_DWORD *)(v2 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v2 + 112);
    v10 = *(_QWORD *)(v2 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v2 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v2 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_29;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v28) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v2 + 40);
    v7 = *(_QWORD *)(v2 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_29:
      sub_20AEC0138();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v28 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v28) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v30;
  if (v30)
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *v30 = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)((char *)v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    v14[3] = MEMORY[0x24BEDB848] + 16;
    v14[2] = v17;
    if (*((char *)v14 + 111) < 0)
      operator delete((void *)v14[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v14 + 16);
    MEMORY[0x20BD3583C](v14, 0x10B2C40EED050F3);
  }
  sub_20AED55DC("<", (uint64_t)&xmmword_254639370, (uint64_t)" ", &v29, (uint64_t)">", (uint64_t)__dst);
  if (SHIBYTE(v28) < 0)
    operator delete(__dst[0]);
  sub_20B4EE2F0((uint64_t)&__p, (CFStringRef *)&cf);
  v18 = cf;
  if (cf)
    CFRetain(cf);
  v19 = v26;
  if (!v26)
    goto LABEL_26;
  p_shared_owners = (unint64_t *)&v26->__shared_owners_;
  do
    v21 = __ldaxr(p_shared_owners);
  while (__stlxr(v21 - 1, p_shared_owners));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
    if ((v24 & 0x80000000) == 0)
      return v18;
  }
  else
  {
LABEL_26:
    if ((v24 & 0x80000000) == 0)
      return v18;
  }
  operator delete(__p);
  return v18;
}

uint64_t sub_20AF2CB94(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  const void *v34[2];
  char v35;
  uint64_t v36;

  sub_20AEC147C((uint64_t)&v36);
  if (v35 < 0)
    operator delete((void *)v34[0]);
  __cxa_begin_catch(a1);
  sub_20AF2D4C4();
  sub_20AEC0D64(v34, "failed to create description");
  sub_20AECD224((std::string::size_type)&xmmword_254639370, v34, 0);
  if (v35 < 0)
    operator delete((void *)v34[0]);
  __cxa_end_catch();
  return 0;
}

uint64_t sub_20AF2CC68(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 32));
}

void sub_20AF2CC74()
{
  unsigned __int8 v0;
  int v1;
  size_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 *v8;

  v0 = atomic_load((unsigned __int8 *)&qword_254639258);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639258))
  {
    sub_20AF2CDF4();
    v1 = byte_2546392F7;
    if (byte_2546392F7 >= 0)
      v2 = byte_2546392F7;
    else
      v2 = *((_QWORD *)&xmmword_2546392E0 + 1);
    v3 = v2 + 6;
    if (v2 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v3 >= 0x17)
    {
      v5 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v3 | 7) != 0x17)
        v5 = v3 | 7;
      v6 = v5 + 1;
      v7 = (char *)operator new(v5 + 1);
      qword_2546392D0 = v2 + 6;
      unk_2546392D8 = v6 | 0x8000000000000000;
      qword_2546392C8 = (uint64_t)v7;
      *(_DWORD *)v7 = 1936617315;
      *((_WORD *)v7 + 2) = 8308;
      v4 = v7 + 6;
    }
    else
    {
      qword_2546392D0 = 0;
      unk_2546392D8 = 0;
      qword_2546392C8 = 0x2074736E6F63;
      byte_2546392DF = v2 + 6;
      v4 = (char *)&qword_2546392C8 + 6;
      if (!v2)
      {
LABEL_18:
        v4[v2] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_2546392C8, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639258);
        return;
      }
    }
    if (v1 >= 0)
      v8 = &xmmword_2546392E0;
    else
      v8 = (__int128 *)xmmword_2546392E0;
    memmove(v4, v8, v2);
    goto LABEL_18;
  }
}

void sub_20AF2CDDC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639258);
  _Unwind_Resume(a1);
}

void sub_20AF2CDF4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639260);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639260))
  {
    sub_20AF2CEAC();
    if (byte_254639327 < 0)
    {
      sub_20AEC60F4(&xmmword_2546392E0, (void *)xmmword_254639310, *((unint64_t *)&xmmword_254639310 + 1));
    }
    else
    {
      xmmword_2546392E0 = xmmword_254639310;
      unk_2546392F0 = unk_254639320;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546392E0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639260);
  }
}

void sub_20AF2CE94(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639260);
  _Unwind_Resume(a1);
}

void sub_20AF2CEAC()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254639268);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639268))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZPoints2]", qword_2546392F8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546392F8, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639268);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254639270);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_254639270))
    {
      sub_20B531658((uint64_t)qword_2546392F8, (uint64_t)&xmmword_254639310);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639310, &dword_20AEBB000);
      __cxa_guard_release(&qword_254639270);
    }
  }
}

void sub_20AF2CF7C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639270);
  _Unwind_Resume(a1);
}

void sub_20AF2CF94(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639268);
  _Unwind_Resume(a1);
}

void sub_20AF2CFAC(CFErrorRef ***a1, uint64_t a2)
{
  uint64_t *v4;
  unsigned __int8 v5;
  __int128 *v6;
  __int128 v7;
  void **v8;
  void **v9;
  void *v10;
  int v11;
  size_t v12;
  unint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _BYTE v18[16];
  void *__p;
  char v20;
  char v21;
  void *v22;
  char v23;
  void *v24;
  char v25;
  char v26;
  char v27;
  char v28;
  void *v29;
  void **v30;
  __int128 __dst;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t *)sub_20AED5104();
  v5 = atomic_load((unsigned __int8 *)&qword_254639278);
  if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254639278))
    goto LABEL_2;
  sub_20AF2CC74();
  v11 = byte_2546392DF;
  if (byte_2546392DF >= 0)
    v12 = byte_2546392DF;
  else
    v12 = qword_2546392D0;
  v13 = v12 + 1;
  if (v12 + 1 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  if (v13 >= 0x17)
  {
    v15 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v15 = v13 | 7;
    v16 = v15 + 1;
    v14 = (__int128 *)operator new(v15 + 1);
    *((_QWORD *)&xmmword_254639328 + 1) = v12 + 1;
    unk_254639338 = v16 | 0x8000000000000000;
    *(_QWORD *)&xmmword_254639328 = v14;
    goto LABEL_43;
  }
  v14 = &xmmword_254639328;
  unk_254639338 = 0;
  xmmword_254639328 = 0uLL;
  byte_25463933F = v12 + 1;
  if (v12)
  {
LABEL_43:
    if (v11 >= 0)
      v17 = &qword_2546392C8;
    else
      v17 = (uint64_t *)qword_2546392C8;
    memmove(v14, v17, v12);
  }
  *(_WORD *)((char *)v14 + v12) = 38;
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639328, &dword_20AEBB000);
  __cxa_guard_release(&qword_254639278);
LABEL_2:
  if (byte_25463933F < 0)
  {
    sub_20AEC60F4(&__dst, (void *)xmmword_254639328, *((unint64_t *)&xmmword_254639328 + 1));
  }
  else
  {
    __dst = xmmword_254639328;
    v32 = unk_254639338;
  }
  v6 = sub_20AED3F9C();
  if (*((char *)v6 + 23) < 0)
  {
    sub_20AEC60F4(&v33, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v34 = *((_QWORD *)v6 + 2);
    v33 = v7;
  }
  sub_20AEC7620(&v29, (uint64_t)&__dst, 2uLL);
  sub_20AECF9B0(v18, a2);
  sub_20AECD798(v4, (__int128 **)&v29, (uint64_t)v18, **a1);
  if (!v28 || !v27)
    goto LABEL_16;
  if (!v26)
    goto LABEL_13;
  if ((v25 & 0x80000000) == 0)
  {
    if ((v23 & 0x80000000) == 0)
      goto LABEL_13;
LABEL_30:
    operator delete(v22);
    if (!v21)
      goto LABEL_16;
    goto LABEL_14;
  }
  operator delete(v24);
  if (v23 < 0)
    goto LABEL_30;
LABEL_13:
  if (!v21)
    goto LABEL_16;
LABEL_14:
  if (v20 < 0)
    operator delete(__p);
LABEL_16:
  v8 = (void **)v29;
  if (v29)
  {
    v9 = v30;
    v10 = v29;
    if (v30 != v29)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = v29;
    }
    v30 = v8;
    operator delete(v10);
  }
  if ((SHIBYTE(v34) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v32) & 0x80000000) == 0)
      return;
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v33);
  if (SHIBYTE(v32) < 0)
    goto LABEL_28;
}

void sub_20AF2D2CC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639278);
  _Unwind_Resume(a1);
}

void sub_20AF2D2E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  uint64_t v25;

  sub_20AECDEE0((uint64_t)&a9);
  sub_20AEC2E90(&a25);
  if (*(char *)(v25 - 97) < 0)
    operator delete(*(void **)(v25 - 120));
  if (*(char *)(v25 - 121) < 0)
  {
    operator delete(*(void **)(v25 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF2D344()
{
  unsigned __int8 v0;
  int v1;
  size_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 *v8;

  v0 = atomic_load((unsigned __int8 *)&qword_254639288);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639288))
  {
    sub_20AF2D4C4();
    v1 = byte_254639387;
    if (byte_254639387 >= 0)
      v2 = byte_254639387;
    else
      v2 = *((_QWORD *)&xmmword_254639370 + 1);
    v3 = v2 + 6;
    if (v2 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v3 >= 0x17)
    {
      v5 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v3 | 7) != 0x17)
        v5 = v3 | 7;
      v6 = v5 + 1;
      v7 = (char *)operator new(v5 + 1);
      qword_254639360 = v2 + 6;
      unk_254639368 = v6 | 0x8000000000000000;
      qword_254639358 = (uint64_t)v7;
      *(_DWORD *)v7 = 1936617315;
      *((_WORD *)v7 + 2) = 8308;
      v4 = v7 + 6;
    }
    else
    {
      qword_254639360 = 0;
      unk_254639368 = 0;
      qword_254639358 = 0x2074736E6F63;
      byte_25463936F = v2 + 6;
      v4 = (char *)&qword_254639358 + 6;
      if (!v2)
      {
LABEL_18:
        v4[v2] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254639358, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639288);
        return;
      }
    }
    if (v1 >= 0)
      v8 = &xmmword_254639370;
    else
      v8 = (__int128 *)xmmword_254639370;
    memmove(v4, v8, v2);
    goto LABEL_18;
  }
}

void sub_20AF2D4AC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639288);
  _Unwind_Resume(a1);
}

void sub_20AF2D4C4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639290);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639290))
  {
    sub_20AF2D57C();
    if (byte_2546393B7 < 0)
    {
      sub_20AEC60F4(&xmmword_254639370, (void *)xmmword_2546393A0, *((unint64_t *)&xmmword_2546393A0 + 1));
    }
    else
    {
      xmmword_254639370 = xmmword_2546393A0;
      unk_254639380 = unk_2546393B0;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639370, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639290);
  }
}

void sub_20AF2D564(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639290);
  _Unwind_Resume(a1);
}

void sub_20AF2D57C()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254639298);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639298))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZPoints3]", qword_254639388);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254639388, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639298);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_2546392A0);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_2546392A0))
    {
      sub_20B531658((uint64_t)qword_254639388, (uint64_t)&xmmword_2546393A0);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546393A0, &dword_20AEBB000);
      __cxa_guard_release(&qword_2546392A0);
    }
  }
}

void sub_20AF2D64C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546392A0);
  _Unwind_Resume(a1);
}

void sub_20AF2D664(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639298);
  _Unwind_Resume(a1);
}

void sub_20AF2D67C(CFErrorRef ***a1, uint64_t a2)
{
  uint64_t *v4;
  unsigned __int8 v5;
  __int128 *v6;
  __int128 v7;
  void **v8;
  void **v9;
  void *v10;
  int v11;
  size_t v12;
  unint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _BYTE v18[16];
  void *__p;
  char v20;
  char v21;
  void *v22;
  char v23;
  void *v24;
  char v25;
  char v26;
  char v27;
  char v28;
  void *v29;
  void **v30;
  __int128 __dst;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t *)sub_20AED5104();
  v5 = atomic_load((unsigned __int8 *)&qword_2546392A8);
  if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_2546392A8))
    goto LABEL_2;
  sub_20AF2D344();
  v11 = byte_25463936F;
  if (byte_25463936F >= 0)
    v12 = byte_25463936F;
  else
    v12 = qword_254639360;
  v13 = v12 + 1;
  if (v12 + 1 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  if (v13 >= 0x17)
  {
    v15 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v15 = v13 | 7;
    v16 = v15 + 1;
    v14 = (__int128 *)operator new(v15 + 1);
    *((_QWORD *)&xmmword_2546393B8 + 1) = v12 + 1;
    unk_2546393C8 = v16 | 0x8000000000000000;
    *(_QWORD *)&xmmword_2546393B8 = v14;
    goto LABEL_43;
  }
  v14 = &xmmword_2546393B8;
  unk_2546393C8 = 0;
  xmmword_2546393B8 = 0uLL;
  byte_2546393CF = v12 + 1;
  if (v12)
  {
LABEL_43:
    if (v11 >= 0)
      v17 = &qword_254639358;
    else
      v17 = (uint64_t *)qword_254639358;
    memmove(v14, v17, v12);
  }
  *(_WORD *)((char *)v14 + v12) = 38;
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546393B8, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546392A8);
LABEL_2:
  if (byte_2546393CF < 0)
  {
    sub_20AEC60F4(&__dst, (void *)xmmword_2546393B8, *((unint64_t *)&xmmword_2546393B8 + 1));
  }
  else
  {
    __dst = xmmword_2546393B8;
    v32 = unk_2546393C8;
  }
  v6 = sub_20AED3F9C();
  if (*((char *)v6 + 23) < 0)
  {
    sub_20AEC60F4(&v33, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v34 = *((_QWORD *)v6 + 2);
    v33 = v7;
  }
  sub_20AEC7620(&v29, (uint64_t)&__dst, 2uLL);
  sub_20AECF9B0(v18, a2);
  sub_20AECD798(v4, (__int128 **)&v29, (uint64_t)v18, **a1);
  if (!v28 || !v27)
    goto LABEL_16;
  if (!v26)
    goto LABEL_13;
  if ((v25 & 0x80000000) == 0)
  {
    if ((v23 & 0x80000000) == 0)
      goto LABEL_13;
LABEL_30:
    operator delete(v22);
    if (!v21)
      goto LABEL_16;
    goto LABEL_14;
  }
  operator delete(v24);
  if (v23 < 0)
    goto LABEL_30;
LABEL_13:
  if (!v21)
    goto LABEL_16;
LABEL_14:
  if (v20 < 0)
    operator delete(__p);
LABEL_16:
  v8 = (void **)v29;
  if (v29)
  {
    v9 = v30;
    v10 = v29;
    if (v30 != v29)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = v29;
    }
    v30 = v8;
    operator delete(v10);
  }
  if ((SHIBYTE(v34) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v32) & 0x80000000) == 0)
      return;
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v33);
  if (SHIBYTE(v32) < 0)
    goto LABEL_28;
}

void sub_20AF2D99C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546392A8);
  _Unwind_Resume(a1);
}

void sub_20AF2D9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  uint64_t v25;

  sub_20AECDEE0((uint64_t)&a9);
  sub_20AEC2E90(&a25);
  if (*(char *)(v25 - 97) < 0)
    operator delete(*(void **)(v25 - 120));
  if (*(char *)(v25 - 121) < 0)
  {
    operator delete(*(void **)(v25 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF2DA14(CFErrorRef ***a1, uint64_t a2)
{
  uint64_t *v4;
  __int128 v5;
  __int128 *v6;
  __int128 *v7;
  __int128 *v8;
  _BYTE v9[16];
  void *__p;
  char v11;
  char v12;
  void *v13;
  char v14;
  void *v15;
  char v16;
  char v17;
  char v18;
  char v19;
  __int128 *v20;
  __int128 *v21;
  __int128 __dst;
  uint64_t v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  sub_20AF2CDF4();
  v4 = sub_20AED6ED4();
  if (*((char *)v4 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    v5 = *(_OWORD *)v4;
    v23 = v4[2];
    __dst = v5;
  }
  sub_20AEC7620(&v20, (uint64_t)&__dst, 1uLL);
  sub_20AECF9B0(v9, a2);
  sub_20AECD798((uint64_t *)&xmmword_2546392E0, &v20, (uint64_t)v9, **a1);
  if (!v19 || !v18)
    goto LABEL_12;
  if (!v17)
    goto LABEL_9;
  if ((v16 & 0x80000000) == 0)
  {
    if ((v14 & 0x80000000) == 0)
      goto LABEL_9;
LABEL_24:
    operator delete(v13);
    if (!v12)
      goto LABEL_12;
    goto LABEL_10;
  }
  operator delete(v15);
  if (v14 < 0)
    goto LABEL_24;
LABEL_9:
  if (!v12)
    goto LABEL_12;
LABEL_10:
  if (v11 < 0)
    operator delete(__p);
LABEL_12:
  v6 = v20;
  if (v20)
  {
    v7 = v21;
    v8 = v20;
    if (v21 != v20)
    {
      do
      {
        if (*((char *)v7 - 1) < 0)
          operator delete(*((void **)v7 - 3));
        v7 = (__int128 *)((char *)v7 - 24);
      }
      while (v7 != v6);
      v8 = v20;
    }
    v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v23) < 0)
    operator delete((void *)__dst);
}

void sub_20AF2DB90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20AECDEE0((uint64_t)va);
  sub_20AEC2E90((void **)(v2 - 72));
  if (*(char *)(v2 - 25) < 0)
    operator delete(*(void **)(v2 - 48));
  _Unwind_Resume(a1);
}

uint64_t sub_20AF2DBCC(uint64_t result)
{
  __int128 *v1;
  void *exception;
  __int128 v3;
  _BYTE v4[112];

  v1 = (__int128 *)result;
  if (!*(_BYTE *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    v3 = *v1;
    sub_20AECEBD0(v4, v1 + 1);
    sub_20AECF558((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_24C3F22C0, (void (*)(void *))sub_20AECF5A8);
  }
  return result;
}

void sub_20AF2DC48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECCE40((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF2DC5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  sub_20AECCE40((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_20AF2DC78(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_20AF2DC8C(CFErrorRef ***a1, uint64_t a2)
{
  uint64_t *v4;
  __int128 v5;
  __int128 *v6;
  __int128 *v7;
  __int128 *v8;
  _BYTE v9[16];
  void *__p;
  char v11;
  char v12;
  void *v13;
  char v14;
  void *v15;
  char v16;
  char v17;
  char v18;
  char v19;
  __int128 *v20;
  __int128 *v21;
  __int128 __dst;
  uint64_t v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  sub_20AF2D4C4();
  v4 = sub_20AED6ED4();
  if (*((char *)v4 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    v5 = *(_OWORD *)v4;
    v23 = v4[2];
    __dst = v5;
  }
  sub_20AEC7620(&v20, (uint64_t)&__dst, 1uLL);
  sub_20AECF9B0(v9, a2);
  sub_20AECD798((uint64_t *)&xmmword_254639370, &v20, (uint64_t)v9, **a1);
  if (!v19 || !v18)
    goto LABEL_12;
  if (!v17)
    goto LABEL_9;
  if ((v16 & 0x80000000) == 0)
  {
    if ((v14 & 0x80000000) == 0)
      goto LABEL_9;
LABEL_24:
    operator delete(v13);
    if (!v12)
      goto LABEL_12;
    goto LABEL_10;
  }
  operator delete(v15);
  if (v14 < 0)
    goto LABEL_24;
LABEL_9:
  if (!v12)
    goto LABEL_12;
LABEL_10:
  if (v11 < 0)
    operator delete(__p);
LABEL_12:
  v6 = v20;
  if (v20)
  {
    v7 = v21;
    v8 = v20;
    if (v21 != v20)
    {
      do
      {
        if (*((char *)v7 - 1) < 0)
          operator delete(*((void **)v7 - 3));
        v7 = (__int128 *)((char *)v7 - 24);
      }
      while (v7 != v6);
      v8 = v20;
    }
    v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v23) < 0)
    operator delete((void *)__dst);
}

void sub_20AF2DE08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20AECDEE0((uint64_t)va);
  sub_20AEC2E90((void **)(v2 - 72));
  if (*(char *)(v2 - 25) < 0)
    operator delete(*(void **)(v2 - 48));
  _Unwind_Resume(a1);
}

uint64_t sub_20AF2DE44(uint64_t result)
{
  __int128 *v1;
  void *exception;
  __int128 v3;
  _BYTE v4[112];

  v1 = (__int128 *)result;
  if (!*(_BYTE *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    v3 = *v1;
    sub_20AECEBD0(v4, v1 + 1);
    sub_20AECF558((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_24C3F22C0, (void (*)(void *))sub_20AECF5A8);
  }
  return result;
}

void sub_20AF2DEC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECCE40((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF2DED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  sub_20AECCE40((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_20AF2DEF0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_20AF2DF04(CFErrorRef ***a1, uint64_t a2)
{
  uint64_t *v4;
  __int128 v5;
  uint64_t *v6;
  __int128 v7;
  __int128 *v8;
  __int128 v9;
  void **v10;
  void **v11;
  void *v12;
  _BYTE v13[16];
  void *__p;
  char v15;
  char v16;
  void *v17;
  char v18;
  void *v19;
  char v20;
  char v21;
  char v22;
  char v23;
  void *v24;
  void **v25;
  __int128 __dst;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  sub_20AF2CDF4();
  v4 = sub_20AED733C();
  if (*((char *)v4 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    v5 = *(_OWORD *)v4;
    v27 = v4[2];
    __dst = v5;
  }
  v6 = sub_20AED7480();
  if (*((char *)v6 + 23) < 0)
  {
    sub_20AEC60F4(&v28, (void *)*v6, v6[1]);
  }
  else
  {
    v7 = *(_OWORD *)v6;
    v29 = v6[2];
    v28 = v7;
  }
  v8 = sub_20AEED13C();
  if (*((char *)v8 + 23) < 0)
  {
    sub_20AEC60F4(&v30, *(void **)v8, *((_QWORD *)v8 + 1));
  }
  else
  {
    v9 = *v8;
    v31 = *((_QWORD *)v8 + 2);
    v30 = v9;
  }
  sub_20AEC7620(&v24, (uint64_t)&__dst, 3uLL);
  sub_20AECF9B0(v13, a2);
  sub_20AECD798((uint64_t *)&xmmword_2546392E0, (__int128 **)&v24, (uint64_t)v13, **a1);
  if (!v23 || !v22)
    goto LABEL_18;
  if (!v21)
    goto LABEL_15;
  if ((v20 & 0x80000000) == 0)
  {
    if ((v18 & 0x80000000) == 0)
      goto LABEL_15;
LABEL_34:
    operator delete(v17);
    if (!v16)
      goto LABEL_18;
    goto LABEL_16;
  }
  operator delete(v19);
  if (v18 < 0)
    goto LABEL_34;
LABEL_15:
  if (!v16)
    goto LABEL_18;
LABEL_16:
  if (v15 < 0)
    operator delete(__p);
LABEL_18:
  v10 = (void **)v24;
  if (v24)
  {
    v11 = v25;
    v12 = v24;
    if (v25 != v24)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = v24;
    }
    v25 = v10;
    operator delete(v12);
  }
  if (SHIBYTE(v31) < 0)
  {
    operator delete((void *)v30);
    if ((SHIBYTE(v29) & 0x80000000) == 0)
    {
LABEL_28:
      if ((SHIBYTE(v27) & 0x80000000) == 0)
        return;
LABEL_32:
      operator delete((void *)__dst);
      return;
    }
  }
  else if ((SHIBYTE(v29) & 0x80000000) == 0)
  {
    goto LABEL_28;
  }
  operator delete((void *)v28);
  if (SHIBYTE(v27) < 0)
    goto LABEL_32;
}

void sub_20AF2E140(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  _Unwind_Resume(exception_object);
}

void sub_20AF2E1E8(CFErrorRef ***a1, uint64_t a2)
{
  uint64_t *v4;
  __int128 v5;
  uint64_t *v6;
  __int128 v7;
  __int128 *v8;
  __int128 v9;
  void **v10;
  void **v11;
  void *v12;
  _BYTE v13[16];
  void *__p;
  char v15;
  char v16;
  void *v17;
  char v18;
  void *v19;
  char v20;
  char v21;
  char v22;
  char v23;
  void *v24;
  void **v25;
  __int128 __dst;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  sub_20AF2D4C4();
  v4 = sub_20AED733C();
  if (*((char *)v4 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    v5 = *(_OWORD *)v4;
    v27 = v4[2];
    __dst = v5;
  }
  v6 = sub_20AED7480();
  if (*((char *)v6 + 23) < 0)
  {
    sub_20AEC60F4(&v28, (void *)*v6, v6[1]);
  }
  else
  {
    v7 = *(_OWORD *)v6;
    v29 = v6[2];
    v28 = v7;
  }
  v8 = sub_20AEED13C();
  if (*((char *)v8 + 23) < 0)
  {
    sub_20AEC60F4(&v30, *(void **)v8, *((_QWORD *)v8 + 1));
  }
  else
  {
    v9 = *v8;
    v31 = *((_QWORD *)v8 + 2);
    v30 = v9;
  }
  sub_20AEC7620(&v24, (uint64_t)&__dst, 3uLL);
  sub_20AECF9B0(v13, a2);
  sub_20AECD798((uint64_t *)&xmmword_254639370, (__int128 **)&v24, (uint64_t)v13, **a1);
  if (!v23 || !v22)
    goto LABEL_18;
  if (!v21)
    goto LABEL_15;
  if ((v20 & 0x80000000) == 0)
  {
    if ((v18 & 0x80000000) == 0)
      goto LABEL_15;
LABEL_34:
    operator delete(v17);
    if (!v16)
      goto LABEL_18;
    goto LABEL_16;
  }
  operator delete(v19);
  if (v18 < 0)
    goto LABEL_34;
LABEL_15:
  if (!v16)
    goto LABEL_18;
LABEL_16:
  if (v15 < 0)
    operator delete(__p);
LABEL_18:
  v10 = (void **)v24;
  if (v24)
  {
    v11 = v25;
    v12 = v24;
    if (v25 != v24)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = v24;
    }
    v25 = v10;
    operator delete(v12);
  }
  if (SHIBYTE(v31) < 0)
  {
    operator delete((void *)v30);
    if ((SHIBYTE(v29) & 0x80000000) == 0)
    {
LABEL_28:
      if ((SHIBYTE(v27) & 0x80000000) == 0)
        return;
LABEL_32:
      operator delete((void *)__dst);
      return;
    }
  }
  else if ((SHIBYTE(v29) & 0x80000000) == 0)
  {
    goto LABEL_28;
  }
  operator delete((void *)v28);
  if (SHIBYTE(v27) < 0)
    goto LABEL_32;
}

void sub_20AF2E424(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20AF2E4CC(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  return a1;
}

void sub_20AF2E50C()
{
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF2E520()
{
  JUMPOUT(0x20BD3583CLL);
}

uint64_t VZProtocolVersionGetTypeID()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2546393E8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546393E8))
    return qword_2546393E0;
  qword_2546393E0 = sub_20AECB130();
  __cxa_guard_release(&qword_2546393E8);
  return qword_2546393E0;
}

uint64_t VZProtocolVersionGetCurrent()
{
  unsigned __int8 v0;
  uint64_t *v1;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t *v6;
  __int128 *v7;
  __int128 v8;
  __int128 *v9;
  __int128 *v10;
  __int128 *v11;
  char v12[16];
  void *v13;
  char v14;
  char v15;
  void *v16;
  char v17;
  void *__p;
  char v19;
  char v20;
  char v21;
  char v22;
  __int128 *v23;
  __int128 *v24;
  __int128 __dst;
  uint64_t v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2546393D8);
  v1 = &qword_254639000;
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546393D8))
  {
    v3 = (unsigned int *)operator new(0x20uLL, MEMORY[0x24BEDB6B8]);
    if (v3)
    {
      *((_QWORD *)v3 + 2) = 0x500000001;
      v4 = v3 + 7;
      *((_QWORD *)v3 + 3) = 0x100000000;
      *(_QWORD *)v3 = &off_24C3F44F8;
      *((_QWORD *)v3 + 1) = &unk_24C3F4548;
      qword_2546393D0 = (uint64_t)v3;
      do
        v5 = __ldaxr(v4);
      while (__stlxr(v5 + 1, v4));
      (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 24))(v3);
    }
    else
    {
      v6 = (uint64_t *)sub_20AF2F0C0();
      v7 = sub_20AF2F2BC();
      if (*((char *)v7 + 23) < 0)
      {
        sub_20AEC60F4(&__dst, *(void **)v7, *((_QWORD *)v7 + 1));
      }
      else
      {
        v8 = *v7;
        v26 = *((_QWORD *)v7 + 2);
        __dst = v8;
      }
      sub_20AEC7620(&v23, (uint64_t)&__dst, 1uLL);
      v12[0] = 0;
      v22 = 0;
      sub_20AECD798(v6, &v23, (uint64_t)v12, 0);
      if (v22 && v21)
      {
        if (v20)
        {
          if (v19 < 0)
            operator delete(__p);
          if (v17 < 0)
            operator delete(v16);
        }
        if (v15 && v14 < 0)
          operator delete(v13);
      }
      v9 = v23;
      if (v23)
      {
        v10 = v24;
        v11 = v23;
        if (v24 != v23)
        {
          do
          {
            if (*((char *)v10 - 1) < 0)
              operator delete(*((void **)v10 - 3));
            v10 = (__int128 *)((char *)v10 - 24);
          }
          while (v10 != v9);
          v11 = v23;
        }
        v24 = v9;
        operator delete(v11);
      }
      if (SHIBYTE(v26) < 0)
        operator delete((void *)__dst);
      qword_2546393D0 = 0;
    }
    __cxa_atexit((void (*)(void *))sub_20AF2E4CC, &qword_2546393D0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546393D8);
    v1 = &qword_254639000;
  }
  return v1[122];
}

void sub_20AF2E7BC(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_20AEC01C0(a1);
}

uint64_t VZProtocolVersionGetMajor(uint64_t a1)
{
  if (sub_20AF2E80C((uint64_t)"VZProtocolVersionGetMajor", a1))
    return 0;
  else
    return *(unsigned int *)(a1 + 16);
}

BOOL sub_20AF2E80C(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4;
  unsigned __int8 v5;
  int v7;
  size_t v8;
  unint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  void *v14[2];
  uint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  void *v21[2];
  uint64_t v22;
  uint64_t v23;
  void *v24[2];
  uint64_t v25;
  char v26;
  char v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  void *__p[2];
  uint64_t v36;
  char v37;
  char v38;
  char v39;

  if (a2)
    return a2 == 0;
  v4 = atomic_load((unsigned __int8 *)&qword_2546393F0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2546393F0))
  {
    sub_20AF2F4B8();
    v7 = byte_25463942F;
    if (byte_25463942F >= 0)
      v8 = byte_25463942F;
    else
      v8 = qword_254639420;
    v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v9 >= 0x17)
    {
      v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17)
        v11 = v9 | 7;
      v12 = v11 + 1;
      v10 = (__int128 *)operator new(v11 + 1);
      *((_QWORD *)&xmmword_254639400 + 1) = v8 + 1;
      unk_254639410 = v12 | 0x8000000000000000;
      *(_QWORD *)&xmmword_254639400 = v10;
    }
    else
    {
      unk_254639410 = 0;
      xmmword_254639400 = 0uLL;
      v10 = &xmmword_254639400;
      byte_254639417 = v8 + 1;
      if (!v8)
      {
LABEL_53:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639400, &dword_20AEBB000);
        __cxa_guard_release(&qword_2546393F0);
        goto LABEL_3;
      }
    }
    if (v7 >= 0)
      v13 = &qword_254639418;
    else
      v13 = (uint64_t *)qword_254639418;
    memmove(v10, v13, v8);
    goto LABEL_53;
  }
LABEL_3:
  if (byte_254639417 < 0)
  {
    sub_20AEC60F4(v14, (void *)xmmword_254639400, *((unint64_t *)&xmmword_254639400 + 1));
  }
  else
  {
    *(_OWORD *)v14 = xmmword_254639400;
    v15 = unk_254639410;
  }
  v16 = 1;
  sub_20AECCECC(a1, (uint64_t)v14, (uint64_t)&v17);
  v28 = v17;
  LOBYTE(v29) = 0;
  v38 = 0;
  if (v27)
  {
    v31 = 0;
    if (v20)
    {
      v29 = v18;
      v30 = v19;
      v19 = 0;
      v18 = 0uLL;
      v31 = 1;
    }
    LOBYTE(v32) = 0;
    v37 = 0;
    if (v26)
    {
      v33 = v22;
      v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      v34 = v23;
      *(_OWORD *)__p = *(_OWORD *)v24;
      v36 = v25;
      v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      v25 = 0;
      v37 = 1;
    }
    v38 = 1;
  }
  v39 = 0;
  v5 = atomic_load((unsigned __int8 *)&qword_254630258);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_254630258))
  {
    __cxa_atexit((void (*)(void *))sub_20AECE2D8, &unk_254630168, &dword_20AEBB000);
    __cxa_guard_release(&qword_254630258);
  }
  sub_20AECB50C((uint64_t)&unk_254630168, &v28);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v33) < 0)
        operator delete((void *)v32);
    }
    if (v31 && SHIBYTE(v30) < 0)
      operator delete((void *)v29);
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0)
        operator delete(v24[0]);
      if (SHIBYTE(v22) < 0)
        operator delete(v21[0]);
    }
    if (v20 && SHIBYTE(v19) < 0)
      operator delete((void *)v18);
  }
  if (v16 && SHIBYTE(v15) < 0)
    operator delete(v14[0]);
  return a2 == 0;
}

void sub_20AF2EB80(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546393F0);
  _Unwind_Resume(a1);
}

void sub_20AF2EB98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t VZProtocolVersionGetMinor(uint64_t a1)
{
  if (sub_20AF2E80C((uint64_t)"VZProtocolVersionGetMinor", a1))
    return 0;
  else
    return *(unsigned int *)(a1 + 20);
}

uint64_t VZProtocolVersionGetRevision(uint64_t a1)
{
  if (sub_20AF2E80C((uint64_t)"VZProtocolVersionGetRevision", a1))
    return 0;
  else
    return *(unsigned int *)(a1 + 24);
}

uint64_t sub_20AF2EC44(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;

  v1 = (unsigned int *)(result + 28);
  do
    v2 = __ldaxr(v1);
  while (__stlxr(v2 + 1, v1));
  return result;
}

uint64_t sub_20AF2EC5C(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;
  unsigned int v3;

  v1 = (unsigned int *)(result + 28);
  do
  {
    v2 = __ldaxr(v1);
    v3 = v2 - 1;
  }
  while (__stlxr(v3, v1));
  if (!v3)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 8) + 8))(result + 8);
  return result;
}

uint64_t sub_20AF2EC84()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2546393E8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546393E8))
    return qword_2546393E0;
  qword_2546393E0 = sub_20AECB130();
  __cxa_guard_release(&qword_2546393E8);
  return qword_2546393E0;
}

_QWORD *sub_20AF2ECE4(uint64_t a1, void *lpsrc)
{
  _QWORD *result;

  result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C3F21C0, (const struct __class_type_info *)&unk_24C3F4590, 0);
  if (result)
    return (_QWORD *)(*(_QWORD *)(a1 + 16) == result[2]
                   && *(_DWORD *)(a1 + 24) == (unint64_t)*((unsigned int *)result + 6));
  return result;
}

CFTypeRef sub_20AF2ED50(uint64_t a1)
{
  __int128 *v2;
  uint64_t v3;
  int v4;
  size_t v5;
  void **v6;
  unint64_t v7;
  unint64_t v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  CFTypeRef v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  char v22;
  CFTypeRef cf;
  std::__shared_weak_count *v24;
  void *__dst[2];
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;

  v2 = sub_20AF2F0C0();
  v27 = a1;
  v3 = operator new();
  *(_QWORD *)(v3 + 272) = 0;
  *(_OWORD *)(v3 + 240) = 0u;
  *(_OWORD *)(v3 + 256) = 0u;
  *(_OWORD *)(v3 + 208) = 0u;
  *(_OWORD *)(v3 + 224) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_OWORD *)(v3 + 192) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)v3 = 0u;
  sub_20AEC0BD8(v3);
  v28 = (_QWORD *)v3;
  sub_20B511704((_QWORD *)(v3 + 16), (uint64_t *)(a1 + 16));
  v4 = *(_DWORD *)(v3 + 120);
  if ((v4 & 0x10) != 0)
  {
    v7 = *(_QWORD *)(v3 + 112);
    v8 = *(_QWORD *)(v3 + 72);
    if (v7 < v8)
    {
      *(_QWORD *)(v3 + 112) = v8;
      v7 = v8;
    }
    v9 = *(const void **)(v3 + 64);
    v5 = v7 - (_QWORD)v9;
    if (v7 - (unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_29;
  }
  else
  {
    if ((v4 & 8) == 0)
    {
      v5 = 0;
      HIBYTE(v26) = 0;
      v6 = __dst;
      goto LABEL_14;
    }
    v9 = *(const void **)(v3 + 40);
    v5 = *(_QWORD *)(v3 + 56) - (_QWORD)v9;
    if (v5 >= 0x7FFFFFFFFFFFFFF8)
LABEL_29:
      sub_20AEC0138();
  }
  if (v5 >= 0x17)
  {
    v10 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v10 = v5 | 7;
    v11 = v10 + 1;
    v6 = (void **)operator new(v10 + 1);
    __dst[1] = (void *)v5;
    v26 = v11 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_13;
  }
  HIBYTE(v26) = v5;
  v6 = __dst;
  if (v5)
LABEL_13:
    memmove(v6, v9, v5);
LABEL_14:
  *((_BYTE *)v6 + v5) = 0;
  v12 = v28;
  if (v28)
  {
    v13 = MEMORY[0x24BEDB7F0];
    v14 = *MEMORY[0x24BEDB7F0];
    *v28 = *MEMORY[0x24BEDB7F0];
    v15 = *(_QWORD *)(v13 + 72);
    *(_QWORD *)((char *)v12 + *(_QWORD *)(v14 - 24)) = *(_QWORD *)(v13 + 64);
    v12[3] = MEMORY[0x24BEDB848] + 16;
    v12[2] = v15;
    if (*((char *)v12 + 111) < 0)
      operator delete((void *)v12[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v12 + 16);
    MEMORY[0x20BD3583C](v12, 0x10B2C40EED050F3);
  }
  sub_20AED55DC("<", (uint64_t)v2, (uint64_t)" ", &v27, (uint64_t)">", (uint64_t)__dst);
  if (SHIBYTE(v26) < 0)
    operator delete(__dst[0]);
  sub_20B4EE2F0((uint64_t)&__p, (CFStringRef *)&cf);
  v16 = cf;
  if (cf)
    CFRetain(cf);
  v17 = v24;
  if (v24)
  {
    p_shared_owners = (unint64_t *)&v24->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
      if ((v22 & 0x80000000) == 0)
        return v16;
      goto LABEL_27;
    }
  }
  if (v22 < 0)
LABEL_27:
    operator delete(__p);
  return v16;
}

void sub_20AF2EFF0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  __int128 *v23;

  sub_20AEC147C((uint64_t)&a15);
  if (a14 < 0)
    operator delete(__p);
  __cxa_begin_catch(a1);
  v23 = sub_20AF2F0C0();
  sub_20AEC0D64(&__p, "failed to create description");
  sub_20AECD224((std::string::size_type)v23, (const void **)&__p, 0);
  if (a14 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x20AF2EFD4);
}

uint64_t sub_20AF2F0B4(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 28));
}

__int128 *sub_20AF2F0C0()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631058);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631058))
    return &xmmword_254631040;
  v2 = (char *)sub_20AF2F19C();
  if (v2[23] < 0)
  {
    sub_20AEC60F4(&xmmword_254631040, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_254631050 = *((_QWORD *)v2 + 2);
    xmmword_254631040 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631040, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631058);
  return &xmmword_254631040;
}

void sub_20AF2F184(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631058);
  _Unwind_Resume(a1);
}

void *sub_20AF2F19C()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254631078);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254631078))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZProtocolVersion]", qword_254631060);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631060, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631078);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254631098);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_254631098))
    return &unk_254631080;
  sub_20B531658((uint64_t)qword_254631060, (uint64_t)&unk_254631080);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_254631080, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631098);
  return &unk_254631080;
}

void sub_20AF2F28C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631098);
  _Unwind_Resume(a1);
}

void sub_20AF2F2A4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631078);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF2F2BC()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546310B8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546310B8))
    return &xmmword_2546310A0;
  v2 = (char *)sub_20AF2F398();
  if (v2[23] < 0)
  {
    sub_20AEC60F4(&xmmword_2546310A0, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_2546310B0 = *((_QWORD *)v2 + 2);
    xmmword_2546310A0 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546310A0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546310B8);
  return &xmmword_2546310A0;
}

void sub_20AF2F380(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546310B8);
  _Unwind_Resume(a1);
}

void *sub_20AF2F398()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_2546310D8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546310D8))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::kio::Version]", qword_2546310C0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546310C0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546310D8);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_2546310F8);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_2546310F8))
    return &unk_2546310E0;
  sub_20B531658((uint64_t)qword_2546310C0, (uint64_t)&unk_2546310E0);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_2546310E0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546310F8);
  return &unk_2546310E0;
}

void sub_20AF2F488(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546310F8);
  _Unwind_Resume(a1);
}

void sub_20AF2F4A0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546310D8);
  _Unwind_Resume(a1);
}

void sub_20AF2F4B8()
{
  unsigned __int8 v0;
  __int128 *v1;
  const void **v2;
  int v3;
  size_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  const void *v10;

  v0 = atomic_load((unsigned __int8 *)&qword_2546393F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546393F8))
  {
    v1 = sub_20AF2F0C0();
    v2 = (const void **)v1;
    v3 = *((char *)v1 + 23);
    if (v3 >= 0)
      v4 = *((unsigned __int8 *)v1 + 23);
    else
      v4 = *((_QWORD *)v1 + 1);
    v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v5 >= 0x17)
    {
      v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17)
        v7 = v5 | 7;
      v8 = v7 + 1;
      v9 = (char *)operator new(v7 + 1);
      qword_254639420 = v4 + 6;
      unk_254639428 = v8 | 0x8000000000000000;
      qword_254639418 = (uint64_t)v9;
      *(_DWORD *)v9 = 1936617315;
      *((_WORD *)v9 + 2) = 8308;
      v6 = v9 + 6;
    }
    else
    {
      qword_254639420 = 0;
      unk_254639428 = 0;
      qword_254639418 = 0x2074736E6F63;
      byte_25463942F = v4 + 6;
      v6 = (char *)&qword_254639418 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254639418, &dword_20AEBB000);
        __cxa_guard_release(&qword_2546393F8);
        return;
      }
    }
    if (v3 >= 0)
      v10 = v2;
    else
      v10 = *v2;
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
}

void sub_20AF2F628(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546393F8);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF2F640(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;
  if (v2)
    MEMORY[0x20BD3583C](v2, 0x1000C4072FAA15ELL);
  return a1;
}

uint64_t sub_20AF2F680(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (result)
    return MEMORY[0x20BD3583C](result, 0x1000C4072FAA15ELL);
  return result;
}

void sub_20AF2F6B4(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;
  if (v2)
    MEMORY[0x20BD3583C](v2, 0x1000C4072FAA15ELL);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF2F704(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v2)
    MEMORY[0x20BD3583C](v2, 0x1000C4072FAA15ELL);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t VZSE3GetTypeID()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639438);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254639438))
    return qword_254639430;
  qword_254639430 = sub_20AECB130();
  __cxa_guard_release(&qword_254639438);
  return qword_254639430;
}

_QWORD *VZSE3CreateWithAlgebraF(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  _QWORD *result;
  BOOL v6;
  __n128 v7;
  uint64_t v8;
  uint64_t *v9;
  __int128 *v10;
  __int128 *v11;
  __int128 *v12;
  uint64_t v13[4];
  char v14;
  char v15;
  void *v16;
  char v17;
  void *__p;
  char v19;
  char v20;
  char v21;
  char v22;
  __int128 *v23;
  __int128 *v24;
  __int128 __dst;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v4 = sub_20AF2FAA8((uint64_t)"VZSE3CreateWithAlgebraF", a1, 0);
  result = 0;
  if (!v4)
  {
    v6 = sub_20AF2FAA8((uint64_t)"VZSE3CreateWithAlgebraF", a2, 0);
    result = 0;
    if (!v6)
    {
      if (!a1
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360)|| !a2&& sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      sub_20B09ADD0(a1, a2, v13, v7);
      result = operator new(0x20uLL, MEMORY[0x24BEDB6B8]);
      v8 = v13[0];
      if (result)
      {
        result[2] = v13[0];
        *((_DWORD *)result + 6) = 1;
        *result = &off_24C3F45F0;
        result[1] = &unk_24C3F4640;
      }
      else
      {
        v13[0] = 0;
        if (v8)
          MEMORY[0x20BD3583C](v8, 0x1000C4072FAA15ELL);
        v9 = (uint64_t *)sub_20AF31F40();
        sub_20AF3213C();
        if (byte_254639587 < 0)
        {
          sub_20AEC60F4(&__dst, (void *)xmmword_254639570, *((unint64_t *)&xmmword_254639570 + 1));
        }
        else
        {
          __dst = xmmword_254639570;
          v26 = unk_254639580;
        }
        sub_20AF3213C();
        if (byte_254639587 < 0)
        {
          sub_20AEC60F4(&v27, (void *)xmmword_254639570, *((unint64_t *)&xmmword_254639570 + 1));
        }
        else
        {
          v27 = xmmword_254639570;
          v28 = unk_254639580;
        }
        sub_20AEC7620(&v23, (uint64_t)&__dst, 2uLL);
        LOBYTE(v13[0]) = 0;
        v22 = 0;
        sub_20AECD798(v9, &v23, (uint64_t)v13, 0);
        if (v22 && v21)
        {
          if (v20)
          {
            if (v19 < 0)
              operator delete(__p);
            if (v17 < 0)
              operator delete(v16);
          }
          if (v15 && v14 < 0)
            operator delete((void *)v13[2]);
        }
        v10 = v23;
        if (v23)
        {
          v11 = v24;
          v12 = v23;
          if (v24 != v23)
          {
            do
            {
              if (*((char *)v11 - 1) < 0)
                operator delete(*((void **)v11 - 3));
              v11 = (__int128 *)((char *)v11 - 24);
            }
            while (v11 != v10);
            v12 = v23;
          }
          v24 = v10;
          operator delete(v12);
        }
        if (SHIBYTE(v28) < 0)
          operator delete((void *)v27);
        if (SHIBYTE(v26) < 0)
          operator delete((void *)__dst);
        return 0;
      }
    }
  }
  return result;
}

void sub_20AF2FA9C(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_20AEC01C0(a1);
}

BOOL sub_20AF2FAA8(uint64_t a1, uint64_t a2, CFErrorRef *a3)
{
  unsigned __int8 v6;
  unsigned __int8 v8;
  int v9;
  size_t v10;
  unint64_t v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  void *v16[2];
  uint64_t v17;
  char v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  void *v23[2];
  uint64_t v24;
  uint64_t v25;
  void *v26[2];
  uint64_t v27;
  char v28;
  char v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  void *__p[2];
  uint64_t v38;
  char v39;
  char v40;
  char v41;

  if (a2)
    return a2 == 0;
  v6 = atomic_load((unsigned __int8 *)&qword_254639440);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254639440))
  {
    v8 = atomic_load((unsigned __int8 *)&qword_254639448);
    if ((v8 & 1) == 0 && __cxa_guard_acquire(&qword_254639448))
    {
      *((_QWORD *)&xmmword_254639558 + 1) = 0x3233746100;
      unk_254639568 = 0xD00000000000000;
      LODWORD(xmmword_254639558) = 1936617315;
      WORD2(xmmword_254639558) = 8308;
      *(_DWORD *)((char *)&xmmword_254639558 + 6) = 1634692198;
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639558, &dword_20AEBB000);
      __cxa_guard_release(&qword_254639448);
    }
    v9 = byte_25463956F;
    if (byte_25463956F >= 0)
      v10 = byte_25463956F;
    else
      v10 = *((_QWORD *)&xmmword_254639558 + 1);
    v11 = v10 + 1;
    if (v10 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v11 >= 0x17)
    {
      v13 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v11 | 7) != 0x17)
        v13 = v11 | 7;
      v14 = v13 + 1;
      v12 = (__int128 *)operator new(v13 + 1);
      *((_QWORD *)&xmmword_254639540 + 1) = v10 + 1;
      unk_254639550 = v14 | 0x8000000000000000;
      *(_QWORD *)&xmmword_254639540 = v12;
    }
    else
    {
      unk_254639550 = 0;
      xmmword_254639540 = 0uLL;
      v12 = &xmmword_254639540;
      byte_254639557 = v10 + 1;
      if (!v10)
      {
LABEL_51:
        *(_WORD *)((char *)v12 + v10) = 42;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639540, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639440);
        goto LABEL_3;
      }
    }
    if (v9 >= 0)
      v15 = &xmmword_254639558;
    else
      v15 = (__int128 *)xmmword_254639558;
    memmove(v12, v15, v10);
    goto LABEL_51;
  }
LABEL_3:
  if (byte_254639557 < 0)
  {
    sub_20AEC60F4(v16, (void *)xmmword_254639540, *((unint64_t *)&xmmword_254639540 + 1));
  }
  else
  {
    *(_OWORD *)v16 = xmmword_254639540;
    v17 = unk_254639550;
  }
  v18 = 1;
  sub_20AECCECC(a1, (uint64_t)v16, (uint64_t)&v19);
  v30 = v19;
  LOBYTE(v31) = 0;
  v40 = 0;
  if (v29)
  {
    v33 = 0;
    if (v22)
    {
      v31 = v20;
      v32 = v21;
      v21 = 0;
      v20 = 0uLL;
      v33 = 1;
    }
    LOBYTE(v34) = 0;
    v39 = 0;
    if (v28)
    {
      v35 = v24;
      v34 = *(_OWORD *)v23;
      v23[0] = 0;
      v23[1] = 0;
      v36 = v25;
      *(_OWORD *)__p = *(_OWORD *)v26;
      v38 = v27;
      v24 = 0;
      v26[0] = 0;
      v26[1] = 0;
      v27 = 0;
      v39 = 1;
    }
    v40 = 1;
  }
  v41 = 0;
  sub_20AECB410(&v30, a3);
  if (!v41 && v40)
  {
    if (v39)
    {
      if (SHIBYTE(v38) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v35) < 0)
        operator delete((void *)v34);
    }
    if (v33 && SHIBYTE(v32) < 0)
      operator delete((void *)v31);
  }
  if (v29)
  {
    if (v28)
    {
      if (SHIBYTE(v27) < 0)
        operator delete(v26[0]);
      if (SHIBYTE(v24) < 0)
        operator delete(v23[0]);
    }
    if (v22 && SHIBYTE(v21) < 0)
      operator delete((void *)v20);
  }
  if (v18 && SHIBYTE(v17) < 0)
    operator delete(v16[0]);
  return a2 == 0;
}

void sub_20AF2FE4C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639440);
  _Unwind_Resume(a1);
}

void sub_20AF2FE64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_20AECD704((uint64_t)&a32);
  sub_20AECCE40((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

_QWORD *VZSE3CreateWithAlgebraD(int8x16_t *a1, int8x16_t *a2)
{
  BOOL v4;
  _QWORD *result;
  BOOL v6;
  __n128 v7;
  uint64_t v8;
  uint64_t *v9;
  __int128 *v10;
  __int128 *v11;
  __int128 *v12;
  uint64_t v13[4];
  char v14;
  char v15;
  void *v16;
  char v17;
  void *__p;
  char v19;
  char v20;
  char v21;
  char v22;
  __int128 *v23;
  __int128 *v24;
  __int128 __dst;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v4 = sub_20AF30194((uint64_t)"VZSE3CreateWithAlgebraD", (uint64_t)a1, 0);
  result = 0;
  if (!v4)
  {
    v6 = sub_20AF30194((uint64_t)"VZSE3CreateWithAlgebraD", (uint64_t)a2, 0);
    result = 0;
    if (!v6)
    {
      if (!a1
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360)|| !a2&& sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      sub_20B09AE64(a1, a2, v13, v7);
      result = operator new(0x20uLL, MEMORY[0x24BEDB6B8]);
      v8 = v13[0];
      if (result)
      {
        result[2] = v13[0];
        *((_DWORD *)result + 6) = 1;
        *result = &off_24C3F45F0;
        result[1] = &unk_24C3F4640;
      }
      else
      {
        v13[0] = 0;
        if (v8)
          MEMORY[0x20BD3583C](v8, 0x1000C4072FAA15ELL);
        v9 = (uint64_t *)sub_20AF31F40();
        sub_20AF327CC();
        if (byte_254639647 < 0)
        {
          sub_20AEC60F4(&__dst, (void *)xmmword_254639630, *((unint64_t *)&xmmword_254639630 + 1));
        }
        else
        {
          __dst = xmmword_254639630;
          v26 = unk_254639640;
        }
        sub_20AF327CC();
        if (byte_254639647 < 0)
        {
          sub_20AEC60F4(&v27, (void *)xmmword_254639630, *((unint64_t *)&xmmword_254639630 + 1));
        }
        else
        {
          v27 = xmmword_254639630;
          v28 = unk_254639640;
        }
        sub_20AEC7620(&v23, (uint64_t)&__dst, 2uLL);
        LOBYTE(v13[0]) = 0;
        v22 = 0;
        sub_20AECD798(v9, &v23, (uint64_t)v13, 0);
        if (v22 && v21)
        {
          if (v20)
          {
            if (v19 < 0)
              operator delete(__p);
            if (v17 < 0)
              operator delete(v16);
          }
          if (v15 && v14 < 0)
            operator delete((void *)v13[2]);
        }
        v10 = v23;
        if (v23)
        {
          v11 = v24;
          v12 = v23;
          if (v24 != v23)
          {
            do
            {
              if (*((char *)v11 - 1) < 0)
                operator delete(*((void **)v11 - 3));
              v11 = (__int128 *)((char *)v11 - 24);
            }
            while (v11 != v10);
            v12 = v23;
          }
          v24 = v10;
          operator delete(v12);
        }
        if (SHIBYTE(v28) < 0)
          operator delete((void *)v27);
        if (SHIBYTE(v26) < 0)
          operator delete((void *)__dst);
        return 0;
      }
    }
  }
  return result;
}

void sub_20AF30188(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_20AEC01C0(a1);
}

BOOL sub_20AF30194(uint64_t a1, uint64_t a2, CFErrorRef *a3)
{
  unsigned __int8 v6;
  unsigned __int8 v8;
  int v9;
  size_t v10;
  unint64_t v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  void *v16[2];
  uint64_t v17;
  char v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  void *v23[2];
  uint64_t v24;
  uint64_t v25;
  void *v26[2];
  uint64_t v27;
  char v28;
  char v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  void *__p[2];
  uint64_t v38;
  char v39;
  char v40;
  char v41;

  if (a2)
    return a2 == 0;
  v6 = atomic_load((unsigned __int8 *)&qword_254639480);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254639480))
  {
    v8 = atomic_load((unsigned __int8 *)&qword_254639488);
    if ((v8 & 1) == 0 && __cxa_guard_acquire(&qword_254639488))
    {
      *((_QWORD *)&xmmword_254639618 + 1) = 0x3436746100;
      unk_254639628 = 0xD00000000000000;
      LODWORD(xmmword_254639618) = 1936617315;
      WORD2(xmmword_254639618) = 8308;
      *(_DWORD *)((char *)&xmmword_254639618 + 6) = 1634692198;
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639618, &dword_20AEBB000);
      __cxa_guard_release(&qword_254639488);
    }
    v9 = byte_25463962F;
    if (byte_25463962F >= 0)
      v10 = byte_25463962F;
    else
      v10 = *((_QWORD *)&xmmword_254639618 + 1);
    v11 = v10 + 1;
    if (v10 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v11 >= 0x17)
    {
      v13 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v11 | 7) != 0x17)
        v13 = v11 | 7;
      v14 = v13 + 1;
      v12 = (__int128 *)operator new(v13 + 1);
      *((_QWORD *)&xmmword_254639600 + 1) = v10 + 1;
      unk_254639610 = v14 | 0x8000000000000000;
      *(_QWORD *)&xmmword_254639600 = v12;
    }
    else
    {
      unk_254639610 = 0;
      xmmword_254639600 = 0uLL;
      v12 = &xmmword_254639600;
      byte_254639617 = v10 + 1;
      if (!v10)
      {
LABEL_51:
        *(_WORD *)((char *)v12 + v10) = 42;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639600, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639480);
        goto LABEL_3;
      }
    }
    if (v9 >= 0)
      v15 = &xmmword_254639618;
    else
      v15 = (__int128 *)xmmword_254639618;
    memmove(v12, v15, v10);
    goto LABEL_51;
  }
LABEL_3:
  if (byte_254639617 < 0)
  {
    sub_20AEC60F4(v16, (void *)xmmword_254639600, *((unint64_t *)&xmmword_254639600 + 1));
  }
  else
  {
    *(_OWORD *)v16 = xmmword_254639600;
    v17 = unk_254639610;
  }
  v18 = 1;
  sub_20AECCECC(a1, (uint64_t)v16, (uint64_t)&v19);
  v30 = v19;
  LOBYTE(v31) = 0;
  v40 = 0;
  if (v29)
  {
    v33 = 0;
    if (v22)
    {
      v31 = v20;
      v32 = v21;
      v21 = 0;
      v20 = 0uLL;
      v33 = 1;
    }
    LOBYTE(v34) = 0;
    v39 = 0;
    if (v28)
    {
      v35 = v24;
      v34 = *(_OWORD *)v23;
      v23[0] = 0;
      v23[1] = 0;
      v36 = v25;
      *(_OWORD *)__p = *(_OWORD *)v26;
      v38 = v27;
      v24 = 0;
      v26[0] = 0;
      v26[1] = 0;
      v27 = 0;
      v39 = 1;
    }
    v40 = 1;
  }
  v41 = 0;
  sub_20AECB410(&v30, a3);
  if (!v41 && v40)
  {
    if (v39)
    {
      if (SHIBYTE(v38) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v35) < 0)
        operator delete((void *)v34);
    }
    if (v33 && SHIBYTE(v32) < 0)
      operator delete((void *)v31);
  }
  if (v29)
  {
    if (v28)
    {
      if (SHIBYTE(v27) < 0)
        operator delete(v26[0]);
      if (SHIBYTE(v24) < 0)
        operator delete(v23[0]);
    }
    if (v22 && SHIBYTE(v21) < 0)
      operator delete((void *)v20);
  }
  if (v18 && SHIBYTE(v17) < 0)
    operator delete(v16[0]);
  return a2 == 0;
}

void sub_20AF30538(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639480);
  _Unwind_Resume(a1);
}

void sub_20AF30550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_20AECD704((uint64_t)&a32);
  sub_20AECCE40((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

_DWORD *VZSE3CreateWithAffine3x4F(int a1, _DWORD *a2, _DWORD *a3, CFErrorRef *a4)
{
  __n128 v8;
  __int128 v9;
  int v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  void *v16;
  char v17;
  char v18;
  void *v19;
  char v20;
  void *__p;
  char v22;
  char v23;
  char v24;
  char v25;
  __int128 v26;
  __int128 v27;
  char v28;
  char v29;
  void *v30;
  char v31;
  void *v32;
  char v33;
  char v34;
  char v35;
  unsigned __int8 v36;
  CFErrorRef **v37;
  CFErrorRef *v38;

  if (sub_20AF2FAA8((uint64_t)"VZSE3CreateWithAffine3x4F", (uint64_t)a2, a4))
    return 0;
  if (!a2
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v37 = &v38;
  v38 = a4;
  sub_20B09AF00(a1, a2, a3, (uint64_t)&v26, v8, v9);
  v10 = v36;
  if (!v36)
  {
    v15 = v26;
    sub_20AECEBD0(&v16, &v27);
    v25 = 1;
    sub_20AF32D78(&v37, (uint64_t)&v15);
    if (!v25 || !v24)
      goto LABEL_29;
    if (v23)
    {
      if (v22 < 0)
        operator delete(__p);
      if (v20 < 0)
        operator delete(v19);
    }
    if (!v18 || (v17 & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_27;
  }
  sub_20AF33120((uint64_t)&v26);
  v11 = operator new(0x20uLL, MEMORY[0x24BEDB6B8]);
  if (!v11)
  {
    LOBYTE(v15) = 0;
    v25 = 0;
    sub_20AF32D78(&v37, (uint64_t)&v15);
    if (!v25 || !v24)
      goto LABEL_28;
    if (v23)
    {
      if (v22 < 0)
        operator delete(__p);
      if (v20 < 0)
        operator delete(v19);
    }
    a3 = 0;
    if (!v18 || (v17 & 0x80000000) == 0)
      goto LABEL_29;
LABEL_27:
    operator delete(v16);
LABEL_28:
    a3 = 0;
    goto LABEL_29;
  }
  a3 = v11;
  v12 = v26;
  *(_QWORD *)&v26 = 0;
  v11[6] = 1;
  *(_QWORD *)v11 = &off_24C3F45F0;
  *((_QWORD *)v11 + 1) = &unk_24C3F4640;
  *((_QWORD *)v11 + 2) = v12;
LABEL_29:
  if (v36)
  {
    v13 = v26;
    *(_QWORD *)&v26 = 0;
    if (v13)
    {
      MEMORY[0x20BD3583C](v13, 0x1000C4072FAA15ELL);
      if (v10)
        return a3;
      return 0;
    }
  }
  else if (v35)
  {
    if (v34)
    {
      if (v33 < 0)
        operator delete(v32);
      if (v31 < 0)
        operator delete(v30);
    }
    if (v29 && v28 < 0)
      operator delete((void *)v27);
  }
  if (v10)
    return a3;
  return 0;
}

void sub_20AF30804(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, const char *a9, std::logic_error a10, int a11, __int16 a12, char a13, char a14, char a15, __int128 a16, __int128 a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35,uint64_t a36,uint64_t a37,char a38)
{
  uint64_t v38;
  const std::logic_error *exception_ptr;
  void *v42;
  const char *v43;

  sub_20AECDEE0((uint64_t)&a38);
  sub_20AF331E0((uint64_t *)(v38 - 192));
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_begin_catch(a1);
    a9 = std::logic_error::what(&a10);
    sub_20AED4C84(&__p, &a9);
    sub_20B099E24((__int128 *)&__p, (uint64_t)&a16);
    *(_OWORD *)(v38 - 192) = a16;
    sub_20AECEBD0((_BYTE *)(v38 - 176), &a17);
    *(_BYTE *)(v38 - 72) = 1;
    sub_20AF32D78((CFErrorRef ***)(v38 - 64), v38 - 192);
    sub_20AECDEE0(v38 - 192);
    sub_20AECCE40((uint64_t)&a16);
    if (a35)
    {
      if (a34 < 0)
        operator delete(__p);
    }
    MEMORY[0x20BD35020](&a10);
    __cxa_end_catch();
  }
  else if (a2 == 2)
  {
    v42 = __cxa_get_exception_ptr(a1);
    sub_20AED4C1C((std::runtime_error *)&__p, (uint64_t)v42);
    __cxa_begin_catch(a1);
    v43 = (const char *)(a36 + 48);
    if (*(char *)(a36 + 71) < 0)
      v43 = *(const char **)v43;
    a9 = v43;
    sub_20AED4C84(&a10, &a9);
    sub_20B09A738((__int128 *)&a10, (uint64_t)&a16);
    *(_OWORD *)(v38 - 192) = a16;
    sub_20AECEBD0((_BYTE *)(v38 - 176), &a17);
    *(_BYTE *)(v38 - 72) = 1;
    sub_20AF32D78((CFErrorRef ***)(v38 - 64), v38 - 192);
    sub_20AECDEE0(v38 - 192);
    sub_20AECCE40((uint64_t)&a16);
    if (a15 && a14 < 0)
      operator delete(a10.__vftable);
    std::__fs::filesystem::filesystem_error::~filesystem_error((std::__fs::filesystem::filesystem_error *)&__p);
    __cxa_end_catch();
  }
  else
  {
    __cxa_begin_catch(a1);
    *(_BYTE *)(v38 - 192) = 0;
    *(_BYTE *)(v38 - 72) = 0;
    sub_20AF32D78((CFErrorRef ***)(v38 - 64), v38 - 192);
    sub_20AECDEE0(v38 - 192);
    __cxa_end_catch();
  }
  JUMPOUT(0x20AF305C8);
}

_DWORD *VZSE3CreateWithAffine3x4D(int a1, int64x2_t *a2, _DWORD *a3, CFErrorRef *a4)
{
  __n128 v8;
  __n128 v9;
  __n128 v10;
  int v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  void *v17;
  char v18;
  char v19;
  void *v20;
  char v21;
  void *__p;
  char v23;
  char v24;
  char v25;
  char v26;
  __int128 v27;
  __int128 v28;
  char v29;
  char v30;
  void *v31;
  char v32;
  void *v33;
  char v34;
  char v35;
  char v36;
  unsigned __int8 v37;
  CFErrorRef **v38;
  CFErrorRef *v39;

  if (sub_20AF30194((uint64_t)"VZSE3CreateWithAffine3x4D", (uint64_t)a2, a4))
    return 0;
  if (!a2
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v38 = &v39;
  v39 = a4;
  sub_20B09B51C(a1, a2, a3, (uint64_t)&v27, v8, v9, v10);
  v11 = v37;
  if (!v37)
  {
    v16 = v27;
    sub_20AECEBD0(&v17, &v28);
    v26 = 1;
    sub_20AF33BDC(&v38, (uint64_t)&v16);
    if (!v26 || !v25)
      goto LABEL_29;
    if (v24)
    {
      if (v23 < 0)
        operator delete(__p);
      if (v21 < 0)
        operator delete(v20);
    }
    if (!v19 || (v18 & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_27;
  }
  sub_20AF33120((uint64_t)&v27);
  v12 = operator new(0x20uLL, MEMORY[0x24BEDB6B8]);
  if (!v12)
  {
    LOBYTE(v16) = 0;
    v26 = 0;
    sub_20AF33BDC(&v38, (uint64_t)&v16);
    if (!v26 || !v25)
      goto LABEL_28;
    if (v24)
    {
      if (v23 < 0)
        operator delete(__p);
      if (v21 < 0)
        operator delete(v20);
    }
    a3 = 0;
    if (!v19 || (v18 & 0x80000000) == 0)
      goto LABEL_29;
LABEL_27:
    operator delete(v17);
LABEL_28:
    a3 = 0;
    goto LABEL_29;
  }
  a3 = v12;
  v13 = v27;
  *(_QWORD *)&v27 = 0;
  v12[6] = 1;
  *(_QWORD *)v12 = &off_24C3F45F0;
  *((_QWORD *)v12 + 1) = &unk_24C3F4640;
  *((_QWORD *)v12 + 2) = v13;
LABEL_29:
  if (v37)
  {
    v14 = v27;
    *(_QWORD *)&v27 = 0;
    if (v14)
    {
      MEMORY[0x20BD3583C](v14, 0x1000C4072FAA15ELL);
      if (v11)
        return a3;
      return 0;
    }
  }
  else if (v36)
  {
    if (v35)
    {
      if (v34 < 0)
        operator delete(v33);
      if (v32 < 0)
        operator delete(v31);
    }
    if (v30 && v29 < 0)
      operator delete((void *)v28);
  }
  if (v11)
    return a3;
  return 0;
}

void sub_20AF30C54(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, const char *a9, std::logic_error a10, int a11, __int16 a12, char a13, char a14, char a15, __int128 a16, __int128 a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35,uint64_t a36,uint64_t a37,char a38)
{
  uint64_t v38;
  const std::logic_error *exception_ptr;
  void *v42;
  const char *v43;

  sub_20AECDEE0((uint64_t)&a38);
  sub_20AF331E0((uint64_t *)(v38 - 192));
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_begin_catch(a1);
    a9 = std::logic_error::what(&a10);
    sub_20AED4C84(&__p, &a9);
    sub_20B099E24((__int128 *)&__p, (uint64_t)&a16);
    *(_OWORD *)(v38 - 192) = a16;
    sub_20AECEBD0((_BYTE *)(v38 - 176), &a17);
    *(_BYTE *)(v38 - 72) = 1;
    sub_20AF33BDC((CFErrorRef ***)(v38 - 64), v38 - 192);
    sub_20AECDEE0(v38 - 192);
    sub_20AECCE40((uint64_t)&a16);
    if (a35)
    {
      if (a34 < 0)
        operator delete(__p);
    }
    MEMORY[0x20BD35020](&a10);
    __cxa_end_catch();
  }
  else if (a2 == 2)
  {
    v42 = __cxa_get_exception_ptr(a1);
    sub_20AED4C1C((std::runtime_error *)&__p, (uint64_t)v42);
    __cxa_begin_catch(a1);
    v43 = (const char *)(a36 + 48);
    if (*(char *)(a36 + 71) < 0)
      v43 = *(const char **)v43;
    a9 = v43;
    sub_20AED4C84(&a10, &a9);
    sub_20B09A738((__int128 *)&a10, (uint64_t)&a16);
    *(_OWORD *)(v38 - 192) = a16;
    sub_20AECEBD0((_BYTE *)(v38 - 176), &a17);
    *(_BYTE *)(v38 - 72) = 1;
    sub_20AF33BDC((CFErrorRef ***)(v38 - 64), v38 - 192);
    sub_20AECDEE0(v38 - 192);
    sub_20AECCE40((uint64_t)&a16);
    if (a15 && a14 < 0)
      operator delete(a10.__vftable);
    std::__fs::filesystem::filesystem_error::~filesystem_error((std::__fs::filesystem::filesystem_error *)&__p);
    __cxa_end_catch();
  }
  else
  {
    __cxa_begin_catch(a1);
    *(_BYTE *)(v38 - 192) = 0;
    *(_BYTE *)(v38 - 72) = 0;
    sub_20AF33BDC((CFErrorRef ***)(v38 - 64), v38 - 192);
    sub_20AECDEE0(v38 - 192);
    __cxa_end_catch();
  }
  JUMPOUT(0x20AF30A18);
}

uint64_t VZSE3GetValueType(uint64_t a1)
{
  int v3;

  if (sub_20AF30E88((uint64_t)"VZSE3GetValueType", a1, 0))
    return 255;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 16) + 136);
  if (v3 == 2 || v3 == 5)
    return 12;
  else
    return 11;
}

BOOL sub_20AF30E88(uint64_t a1, uint64_t a2, CFErrorRef *a3)
{
  uint64_t *v6;
  __int128 v7;
  void *v9[2];
  uint64_t v10;
  char v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char v15;
  void *v16[2];
  uint64_t v17;
  uint64_t v18;
  void *v19[2];
  uint64_t v20;
  char v21;
  char v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  void *__p[2];
  uint64_t v31;
  char v32;
  char v33;
  char v34;

  if (!a2)
  {
    v6 = sub_20AF34478();
    if (*((char *)v6 + 23) < 0)
    {
      sub_20AEC60F4(v9, (void *)*v6, v6[1]);
    }
    else
    {
      v7 = *(_OWORD *)v6;
      v10 = v6[2];
      *(_OWORD *)v9 = v7;
    }
    v11 = 1;
    sub_20AECCECC(a1, (uint64_t)v9, (uint64_t)&v12);
    v23 = v12;
    LOBYTE(v24) = 0;
    v33 = 0;
    if (v22)
    {
      v26 = 0;
      if (v15)
      {
        v24 = v13;
        v25 = v14;
        v14 = 0;
        v13 = 0uLL;
        v26 = 1;
      }
      LOBYTE(v27) = 0;
      v32 = 0;
      if (v21)
      {
        v28 = v17;
        v27 = *(_OWORD *)v16;
        v16[0] = 0;
        v16[1] = 0;
        v29 = v18;
        *(_OWORD *)__p = *(_OWORD *)v19;
        v31 = v20;
        v17 = 0;
        v19[0] = 0;
        v19[1] = 0;
        v20 = 0;
        v32 = 1;
      }
      v33 = 1;
    }
    v34 = 0;
    sub_20AECB410(&v23, a3);
    if (!v34 && v33)
    {
      if (v32)
      {
        if (SHIBYTE(v31) < 0)
          operator delete(__p[0]);
        if (SHIBYTE(v28) < 0)
          operator delete((void *)v27);
      }
      if (v26 && SHIBYTE(v25) < 0)
        operator delete((void *)v24);
    }
    if (v22)
    {
      if (v21)
      {
        if (SHIBYTE(v20) < 0)
          operator delete(v19[0]);
        if (SHIBYTE(v17) < 0)
          operator delete(v16[0]);
      }
      if (v15 && SHIBYTE(v14) < 0)
        operator delete((void *)v13);
    }
    if (v11 && SHIBYTE(v10) < 0)
      operator delete(v9[0]);
  }
  return a2 == 0;
}

void sub_20AF31080(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_20AECD704((uint64_t)&a32);
  sub_20AECCE40((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t VZSE3GetSEType(uint64_t a1)
{
  if (sub_20AF30E88((uint64_t)"VZSE3GetSEType", a1, 0))
    return 255;
  else
    return (*(_BYTE *)(*(_QWORD *)(a1 + 16) + 136) & 0xFE) == 4;
}

uint64_t VZSE3GetAlgebraRotationF(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  __n128 v5;
  uint64_t result;
  uint64_t *v7;
  uint64_t v8;
  unsigned int v9;
  BOOL v10;
  int v11;
  __int128 v13;
  __int128 v14;

  v4 = sub_20AF30E88((uint64_t)"VZSE3GetAlgebraRotationF", a1, 0);
  result = 0;
  if (!v4)
  {
    v8 = *(_QWORD *)(a1 + 16);
    v7 = (uint64_t *)(a1 + 16);
    result = v8;
    v9 = *(unsigned __int8 *)(v8 + 136);
    v10 = v9 > 5;
    v11 = (1 << v9) & 0x34;
    if (!v10 && v11 != 0)
    {
      if (!a2)
        return 0;
      sub_20B246908(v7, (uint64_t)&v14, v5);
      result = 0;
      v13 = v14;
LABEL_8:
      *(_DWORD *)(a2 + 8) = DWORD2(v13);
      *(_QWORD *)a2 = v13;
      return result;
    }
    if (*(_DWORD *)(result + 128) != 2)
      sub_20AECFAB8();
    if (a2)
    {
      if (result == a2)
        return a2;
      *(_QWORD *)&v13 = *(_QWORD *)result;
      DWORD2(v13) = *(_DWORD *)(result + 8);
      goto LABEL_8;
    }
  }
  return result;
}

int8x16_t *VZSE3GetAlgebraRotationD(uint64_t a1, int8x16_t *a2)
{
  BOOL v4;
  int8x16_t *result;
  uint64_t *v6;
  int8x16_t *v7;
  int v8;
  BOOL v9;
  int v10;
  uint64_t v12;
  int8x16_t v13;
  int8x16_t v14;
  uint64_t v15;

  v4 = sub_20AF30E88((uint64_t)"VZSE3GetAlgebraRotationD", a1, 0);
  result = 0;
  if (!v4)
  {
    v7 = *(int8x16_t **)(a1 + 16);
    v6 = (uint64_t *)(a1 + 16);
    result = v7;
    v8 = v7[8].u8[8];
    v9 = v8 == 2 || v8 == 5;
    v10 = v8 & 0xFE;
    if (!v9 || v10 == 4)
    {
      if (!a2)
        return 0;
      sub_20B246C1C(v6, (float64x2_t *)&v14);
      result = 0;
      v12 = v15;
      v13 = v14;
LABEL_16:
      a2[1].i64[0] = v12;
      v13.i64[1] = vextq_s8(v13, v13, 8uLL).u64[0];
      *a2 = v13;
      return result;
    }
    if (result[8].i32[0] != 3)
      sub_20AECFAB8();
    if (a2)
    {
      if (result == a2)
        return a2;
      v12 = result[1].i64[0];
      v13 = *result;
      goto LABEL_16;
    }
  }
  return result;
}

uint64_t *VZSE3GetAlgebraTranslationF(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  __n128 v5;
  uint64_t *result;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unsigned int v10;
  BOOL v11;
  int v12;
  uint64_t v14;
  int *v15;
  _BYTE v16[12];
  uint64_t v17;
  int v18;

  v4 = sub_20AF30E88((uint64_t)"VZSE3GetAlgebraTranslationF", a1, 0);
  result = 0;
  if (!v4)
  {
    v9 = *(_QWORD *)(a1 + 16);
    v8 = (uint64_t *)(a1 + 16);
    v7 = v9;
    v10 = *(unsigned __int8 *)(v9 + 136);
    v11 = v10 > 5;
    v12 = (1 << v10) & 0x34;
    if (v11 || v12 == 0)
    {
      if (*(_DWORD *)(v7 + 128) != 2)
        sub_20AECFAB8();
      result = (uint64_t *)(v7 + 12);
      if (a2)
      {
        v14 = *result;
        v15 = (int *)(v7 + 20);
        goto LABEL_13;
      }
    }
    else
    {
      if (a2)
      {
        sub_20B246908(v8, (uint64_t)v16, v5);
        result = 0;
        v14 = v17;
        v15 = &v18;
LABEL_13:
        *(_DWORD *)(a2 + 8) = *v15;
        *(_QWORD *)a2 = v14;
        return result;
      }
      return 0;
    }
  }
  return result;
}

int8x16_t *VZSE3GetAlgebraTranslationD(uint64_t a1, int8x16_t *a2)
{
  BOOL v4;
  int8x16_t *result;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  int v9;
  BOOL v10;
  int v11;
  uint64_t v13;
  int8x16_t v14;
  _QWORD v15[6];

  v4 = sub_20AF30E88((uint64_t)"VZSE3GetAlgebraTranslationD", a1, 0);
  result = 0;
  if (!v4)
  {
    v8 = *(_QWORD *)(a1 + 16);
    v7 = (uint64_t *)(a1 + 16);
    v6 = v8;
    v9 = *(unsigned __int8 *)(v8 + 136);
    v10 = v9 == 2 || v9 == 5;
    v11 = v9 & 0xFE;
    if (!v10 || v11 == 4)
    {
      if (!a2)
        return 0;
      sub_20B246C1C(v7, (float64x2_t *)v15);
      result = 0;
      v13 = v15[5];
      v14 = *(int8x16_t *)&v15[3];
      goto LABEL_15;
    }
    if (*(_DWORD *)(v6 + 128) != 3)
      sub_20AECFAB8();
    result = (int8x16_t *)(v6 + 24);
    if (a2)
    {
      v13 = *(_QWORD *)(v6 + 40);
      v14 = *result;
LABEL_15:
      a2[1].i64[0] = v13;
      v14.i64[1] = vextq_s8(v14, v14, 8uLL).u64[0];
      *a2 = v14;
    }
  }
  return result;
}

uint64_t VZSE3GetMatrix4x4F(uint64_t a1, int a2, int32x4_t *a3)
{
  BOOL v6;
  float64x2_t v7;
  uint64_t result;
  unsigned __int8 v9;
  _QWORD v10[4];
  char v11;
  char v12;
  void *v13;
  char v14;
  void *v15;
  char v16;
  char v17;
  char v18;
  char v19;
  void *v20;
  char v21;
  __int128 v22;
  void *v23;
  char v24;
  char v25;
  void *v26;
  char v27;
  void *__p;
  char v29;
  char v30;
  char v31;
  const char *v32;

  v6 = sub_20AF30E88((uint64_t)"VZSE3GetMatrix4x4F", a1, 0);
  result = 0;
  if (v6)
    return result;
  sub_20B09BB50((uint64_t *)(a1 + 16), a2, a3, (uint64_t)v10, v7);
  v32 = "VZSE3GetMatrix4x4F";
  if (v19)
    return v10[0];
  sub_20AEDBA04("in function ", (const char *)&v32);
  sub_20B529470((char *)v10, &v20, (uint64_t)&v22);
  v9 = atomic_load((unsigned __int8 *)&qword_254630258);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254630258))
  {
    __cxa_atexit((void (*)(void *))sub_20AECE2D8, &unk_254630168, &dword_20AEBB000);
    __cxa_guard_release(&qword_254630258);
  }
  sub_20AECB50C((uint64_t)&unk_254630168, &v22);
  if (v31)
  {
    if (v30)
    {
      if (v29 < 0)
        operator delete(__p);
      if (v27 < 0)
        operator delete(v26);
    }
    if (v25 && v24 < 0)
      operator delete(v23);
  }
  if (v21 < 0)
  {
    operator delete(v20);
    if (!v19)
      goto LABEL_19;
    return 0;
  }
  if (v19)
    return 0;
LABEL_19:
  if (!v18)
    return 0;
  if (v17)
  {
    if (v16 < 0)
      operator delete(v15);
    if (v14 < 0)
      operator delete(v13);
  }
  result = 0;
  if (v12 && v11 < 0)
  {
    operator delete((void *)v10[2]);
    return 0;
  }
  return result;
}

void sub_20AF3165C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a31 < 0)
  {
    operator delete(__p);
    sub_20AECD704((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_20AECD704((uint64_t)&a10);
  _Unwind_Resume(a1);
}

uint64_t VZSE3GetMatrix4x4D(uint64_t a1, int a2, uint64_t a3)
{
  BOOL v6;
  float64x2_t v7;
  float64x2_t v8;
  uint64_t result;
  unsigned __int8 v10;
  int64x2_t v11;
  void *v12;
  char v13;
  char v14;
  void *v15;
  char v16;
  void *v17;
  char v18;
  char v19;
  char v20;
  char v21;
  void *v22;
  char v23;
  __int128 v24;
  void *v25;
  char v26;
  char v27;
  void *v28;
  char v29;
  void *__p;
  char v31;
  char v32;
  char v33;
  const char *v34;

  v6 = sub_20AF30E88((uint64_t)"VZSE3GetMatrix4x4D", a1, 0);
  result = 0;
  if (v6)
    return result;
  sub_20B09BD9C((uint64_t *)(a1 + 16), a2, a3, &v11, v7, v8);
  v34 = "VZSE3GetMatrix4x4D";
  if (v21)
    return v11.i64[0];
  sub_20AEDBA04("in function ", (const char *)&v34);
  sub_20B529470(v11.i8, &v22, (uint64_t)&v24);
  v10 = atomic_load((unsigned __int8 *)&qword_254630258);
  if ((v10 & 1) == 0 && __cxa_guard_acquire(&qword_254630258))
  {
    __cxa_atexit((void (*)(void *))sub_20AECE2D8, &unk_254630168, &dword_20AEBB000);
    __cxa_guard_release(&qword_254630258);
  }
  sub_20AECB50C((uint64_t)&unk_254630168, &v24);
  if (v33)
  {
    if (v32)
    {
      if (v31 < 0)
        operator delete(__p);
      if (v29 < 0)
        operator delete(v28);
    }
    if (v27 && v26 < 0)
      operator delete(v25);
  }
  if (v23 < 0)
  {
    operator delete(v22);
    if (!v21)
      goto LABEL_19;
    return 0;
  }
  if (v21)
    return 0;
LABEL_19:
  if (!v20)
    return 0;
  if (v19)
  {
    if (v18 < 0)
      operator delete(v17);
    if (v16 < 0)
      operator delete(v15);
  }
  result = 0;
  if (v14 && v13 < 0)
  {
    operator delete(v12);
    return 0;
  }
  return result;
}

void sub_20AF3186C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a31 < 0)
  {
    operator delete(__p);
    sub_20AECD704((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_20AECD704((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void VZSE3GetAffine3x4F(uint64_t a1, int a2, uint64_t a3)
{
  float64x2_t v6;
  char v7[16];
  void *v8;
  char v9;
  char v10;
  void *v11;
  char v12;
  void *__p;
  char v14;
  char v15;
  char v16;
  char v17;

  if (!sub_20AF30E88((uint64_t)"VZSE3GetAffine3x4F", a1, 0))
  {
    sub_20B09C010((uint64_t *)(a1 + 16), a2, a3, (uint64_t)v7, v6);
    sub_20AEDCEDC((uint64_t)"VZSE3GetAffine3x4F", v7, 0);
    if (!v17)
    {
      if (v16)
      {
        if (v15)
        {
          if (v14 < 0)
            operator delete(__p);
          if (v12 < 0)
            operator delete(v11);
        }
        if (v10)
        {
          if (v9 < 0)
            operator delete(v8);
        }
      }
    }
  }
}

void sub_20AF3197C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECD704((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void VZSE3GetAffine3x4D(uint64_t a1, int a2, uint64_t a3)
{
  float64x2_t v6;
  float64x2_t v7;
  char v8[16];
  void *v9;
  char v10;
  char v11;
  void *v12;
  char v13;
  void *__p;
  char v15;
  char v16;
  char v17;
  char v18;

  if (!sub_20AF30E88((uint64_t)"VZSE3GetAffine3x4D", a1, 0))
  {
    sub_20B09C268((uint64_t *)(a1 + 16), a2, a3, (uint64_t)v8, v6, v7);
    sub_20AEDCEDC((uint64_t)"VZSE3GetAffine3x4D", v8, 0);
    if (!v18)
    {
      if (v17)
      {
        if (v16)
        {
          if (v15 < 0)
            operator delete(__p);
          if (v13 < 0)
            operator delete(v12);
        }
        if (v11)
        {
          if (v10 < 0)
            operator delete(v9);
        }
      }
    }
  }
}

void sub_20AF31A68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECD704((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF31A7C(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;

  v1 = (unsigned int *)(result + 24);
  do
    v2 = __ldaxr(v1);
  while (__stlxr(v2 + 1, v1));
  return result;
}

uint64_t sub_20AF31A94(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;
  unsigned int v3;

  v1 = (unsigned int *)(result + 24);
  do
  {
    v2 = __ldaxr(v1);
    v3 = v2 - 1;
  }
  while (__stlxr(v3, v1));
  if (!v3)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 8) + 8))(result + 8);
  return result;
}

uint64_t sub_20AF31ABC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639438);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254639438))
    return qword_254639430;
  qword_254639430 = sub_20AECB130();
  __cxa_guard_release(&qword_254639438);
  return qword_254639430;
}

uint64_t *sub_20AF31B1C(uint64_t a1, void *lpsrc)
{
  uint64_t *result;

  result = (uint64_t *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C3F21C0, (const struct __class_type_info *)&unk_24C3F46A0, 0);
  if (result)
    return (uint64_t *)sub_20B2477C4((uint64_t *)(a1 + 16), result + 2);
  return result;
}

uint64_t sub_20AF31B74(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  __int128 *v19;
  const void *v21[2];
  char v22;

  __cxa_begin_catch(a1);
  v19 = sub_20AF31F40();
  sub_20AEC0D64(v21, "failed to compare equal");
  sub_20AECD224((std::string::size_type)v19, v21, 0);
  if (v22 < 0)
    operator delete((void *)v21[0]);
  __cxa_end_catch();
  return 0;
}

CFTypeRef sub_20AF31BD0(uint64_t a1)
{
  __int128 *v2;
  uint64_t v3;
  int v4;
  size_t v5;
  void **v6;
  unint64_t v7;
  unint64_t v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  CFTypeRef v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  char v22;
  CFTypeRef cf;
  std::__shared_weak_count *v24;
  void *__dst[2];
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;

  v2 = sub_20AF31F40();
  v27 = a1;
  v3 = operator new();
  *(_QWORD *)(v3 + 272) = 0;
  *(_OWORD *)(v3 + 240) = 0u;
  *(_OWORD *)(v3 + 256) = 0u;
  *(_OWORD *)(v3 + 208) = 0u;
  *(_OWORD *)(v3 + 224) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_OWORD *)(v3 + 192) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)v3 = 0u;
  sub_20AEC0BD8(v3);
  v28 = (_QWORD *)v3;
  sub_20B247B80((_QWORD *)(v3 + 16), (uint64_t *)(a1 + 16));
  v4 = *(_DWORD *)(v3 + 120);
  if ((v4 & 0x10) != 0)
  {
    v7 = *(_QWORD *)(v3 + 112);
    v8 = *(_QWORD *)(v3 + 72);
    if (v7 < v8)
    {
      *(_QWORD *)(v3 + 112) = v8;
      v7 = v8;
    }
    v9 = *(const void **)(v3 + 64);
    v5 = v7 - (_QWORD)v9;
    if (v7 - (unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_29;
  }
  else
  {
    if ((v4 & 8) == 0)
    {
      v5 = 0;
      HIBYTE(v26) = 0;
      v6 = __dst;
      goto LABEL_14;
    }
    v9 = *(const void **)(v3 + 40);
    v5 = *(_QWORD *)(v3 + 56) - (_QWORD)v9;
    if (v5 >= 0x7FFFFFFFFFFFFFF8)
LABEL_29:
      sub_20AEC0138();
  }
  if (v5 >= 0x17)
  {
    v10 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v10 = v5 | 7;
    v11 = v10 + 1;
    v6 = (void **)operator new(v10 + 1);
    __dst[1] = (void *)v5;
    v26 = v11 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_13;
  }
  HIBYTE(v26) = v5;
  v6 = __dst;
  if (v5)
LABEL_13:
    memmove(v6, v9, v5);
LABEL_14:
  *((_BYTE *)v6 + v5) = 0;
  v12 = v28;
  if (v28)
  {
    v13 = MEMORY[0x24BEDB7F0];
    v14 = *MEMORY[0x24BEDB7F0];
    *v28 = *MEMORY[0x24BEDB7F0];
    v15 = *(_QWORD *)(v13 + 72);
    *(_QWORD *)((char *)v12 + *(_QWORD *)(v14 - 24)) = *(_QWORD *)(v13 + 64);
    v12[3] = MEMORY[0x24BEDB848] + 16;
    v12[2] = v15;
    if (*((char *)v12 + 111) < 0)
      operator delete((void *)v12[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v12 + 16);
    MEMORY[0x20BD3583C](v12, 0x10B2C40EED050F3);
  }
  sub_20AED55DC("<", (uint64_t)v2, (uint64_t)" ", &v27, (uint64_t)">", (uint64_t)__dst);
  if (SHIBYTE(v26) < 0)
    operator delete(__dst[0]);
  sub_20B4EE2F0((uint64_t)&__p, (CFStringRef *)&cf);
  v16 = cf;
  if (cf)
    CFRetain(cf);
  v17 = v24;
  if (v24)
  {
    p_shared_owners = (unint64_t *)&v24->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
      if ((v22 & 0x80000000) == 0)
        return v16;
      goto LABEL_27;
    }
  }
  if (v22 < 0)
LABEL_27:
    operator delete(__p);
  return v16;
}

void sub_20AF31E70(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  __int128 *v23;

  sub_20AEC147C((uint64_t)&a15);
  if (a14 < 0)
    operator delete(__p);
  __cxa_begin_catch(a1);
  v23 = sub_20AF31F40();
  sub_20AEC0D64(&__p, "failed to create description");
  sub_20AECD224((std::string::size_type)v23, (const void **)&__p, 0);
  if (a14 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x20AF31E54);
}

uint64_t sub_20AF31F34(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 24));
}

__int128 *sub_20AF31F40()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631118);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631118))
    return &xmmword_254631100;
  v2 = (char *)sub_20AF3201C();
  if (v2[23] < 0)
  {
    sub_20AEC60F4(&xmmword_254631100, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_254631110 = *((_QWORD *)v2 + 2);
    xmmword_254631100 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631100, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631118);
  return &xmmword_254631100;
}

void sub_20AF32004(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631118);
  _Unwind_Resume(a1);
}

void *sub_20AF3201C()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254631138);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254631138))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZSE3]", qword_254631120);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631120, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631138);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254631158);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_254631158))
    return &unk_254631140;
  sub_20B531658((uint64_t)qword_254631120, (uint64_t)&unk_254631140);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_254631140, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631158);
  return &unk_254631140;
}

void sub_20AF3210C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631158);
  _Unwind_Resume(a1);
}

void sub_20AF32124(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631138);
  _Unwind_Resume(a1);
}

void sub_20AF3213C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639450);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639450))
  {
    sub_20AF321F4();
    if (byte_25463959F < 0)
    {
      sub_20AEC60F4(&xmmword_254639570, (void *)qword_254639588, unk_254639590);
    }
    else
    {
      xmmword_254639570 = *(_OWORD *)&qword_254639588;
      unk_254639580 = unk_254639598;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639570, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639450);
  }
}

void sub_20AF321DC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639450);
  _Unwind_Resume(a1);
}

void sub_20AF321F4()
{
  unsigned __int8 v0;
  void *__p[2];
  char v2;

  v0 = atomic_load((unsigned __int8 *)&qword_254639458);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639458))
  {
    sub_20AF3250C(__p);
    sub_20AF322C8((char *)__p);
    if (v2 < 0)
      operator delete(__p[0]);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254639588, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639458);
  }
}

void sub_20AF32288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254639458);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254639458);
  _Unwind_Resume(a1);
}

void sub_20AF322C8(char *a1)
{
  unsigned __int8 v2;
  int64x2_t v3;
  int8x16_t v4;
  void **v5;
  void **v6;
  void *v7;
  void *__p;
  void **v9;
  void *__dst[2];
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254639448);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254639448))
  {
    *((_QWORD *)&xmmword_254639558 + 1) = 0x3233746100;
    unk_254639568 = 0xD00000000000000;
    LODWORD(xmmword_254639558) = 1936617315;
    WORD2(xmmword_254639558) = 8308;
    *(_DWORD *)((char *)&xmmword_254639558 + 6) = 1634692198;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639558, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639448);
  }
  if (byte_25463956F < 0)
  {
    sub_20AEC60F4(__dst, (void *)xmmword_254639558, *((unint64_t *)&xmmword_254639558 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_254639558;
    v11 = unk_254639568;
  }
  sub_20AF326E8();
  if (byte_2546395B7 < 0)
  {
    sub_20AEC60F4(&v12, (void *)xmmword_2546395A0, *((unint64_t *)&xmmword_2546395A0 + 1));
  }
  else
  {
    v12 = xmmword_2546395A0;
    v13 = unk_2546395B0;
  }
  sub_20AEC7620(&__p, (uint64_t)__dst, 2uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, (std::string *)&qword_254639588, v3, v4);
  v5 = (void **)__p;
  if (__p)
  {
    v6 = v9;
    v7 = __p;
    if (v9 != __p)
    {
      do
      {
        if (*((char *)v6 - 1) < 0)
          operator delete(*(v6 - 3));
        v6 -= 3;
      }
      while (v6 != v5);
      v7 = __p;
    }
    v9 = v5;
    operator delete(v7);
  }
  if ((SHIBYTE(v13) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v11) & 0x80000000) == 0)
      return;
LABEL_20:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v12);
  if (SHIBYTE(v11) < 0)
    goto LABEL_20;
}

void sub_20AF324C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_20AEC2E90(&a10);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
    operator delete(a13);
  _Unwind_Resume(a1);
}

void sub_20AF3250C(_QWORD *__dst)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254639468);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254639468))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::esn::span<const float, 3>]", qword_2546395B8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546395B8, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639468);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254639470);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254639470))
  {
    v5 = sub_20AED4780(qword_2546395B8, "<", 0);
    sub_20AED467C(qword_2546395B8, 0, v5, qword_2546395D0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546395D0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639470);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254639478);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254639478))
  {
    sub_20B531658((uint64_t)qword_2546395D0, (uint64_t)&xmmword_2546395E8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546395E8, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639478);
  }
  if (byte_2546395FF < 0)
  {
    sub_20AEC60F4(__dst, (void *)xmmword_2546395E8, *((unint64_t *)&xmmword_2546395E8 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_2546395E8;
    __dst[2] = unk_2546395F8;
  }
}

void sub_20AF326A0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639478);
  _Unwind_Resume(a1);
}

void sub_20AF326B8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639470);
  _Unwind_Resume(a1);
}

void sub_20AF326D0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639468);
  _Unwind_Resume(a1);
}

void sub_20AF326E8()
{
  unsigned __int8 v0;
  void *__p[2];
  char v2;

  v0 = atomic_load((unsigned __int8 *)&qword_254639460);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639460))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 3UL]", __p);
    sub_20B531884((uint64_t)__p, (std::string *)&xmmword_2546395A0);
    if (v2 < 0)
      operator delete(__p[0]);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546395A0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639460);
  }
}

void sub_20AF3278C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254639460);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254639460);
  _Unwind_Resume(a1);
}

void sub_20AF327CC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639490);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639490))
  {
    sub_20AF32884();
    if (byte_25463965F < 0)
    {
      sub_20AEC60F4(&xmmword_254639630, (void *)qword_254639648, unk_254639650);
    }
    else
    {
      xmmword_254639630 = *(_OWORD *)&qword_254639648;
      unk_254639640 = unk_254639658;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639630, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639490);
  }
}

void sub_20AF3286C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639490);
  _Unwind_Resume(a1);
}

void sub_20AF32884()
{
  unsigned __int8 v0;
  void *__p[2];
  char v2;

  v0 = atomic_load((unsigned __int8 *)&qword_254639498);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639498))
  {
    sub_20AF32B9C(__p);
    sub_20AF32958((char *)__p);
    if (v2 < 0)
      operator delete(__p[0]);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254639648, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639498);
  }
}

void sub_20AF32918(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254639498);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254639498);
  _Unwind_Resume(a1);
}

void sub_20AF32958(char *a1)
{
  unsigned __int8 v2;
  int64x2_t v3;
  int8x16_t v4;
  void **v5;
  void **v6;
  void *v7;
  void *__p;
  void **v9;
  void *__dst[2];
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254639488);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254639488))
  {
    *((_QWORD *)&xmmword_254639618 + 1) = 0x3436746100;
    unk_254639628 = 0xD00000000000000;
    LODWORD(xmmword_254639618) = 1936617315;
    WORD2(xmmword_254639618) = 8308;
    *(_DWORD *)((char *)&xmmword_254639618 + 6) = 1634692198;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639618, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639488);
  }
  if (byte_25463962F < 0)
  {
    sub_20AEC60F4(__dst, (void *)xmmword_254639618, *((unint64_t *)&xmmword_254639618 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_254639618;
    v11 = unk_254639628;
  }
  sub_20AF326E8();
  if (byte_2546395B7 < 0)
  {
    sub_20AEC60F4(&v12, (void *)xmmword_2546395A0, *((unint64_t *)&xmmword_2546395A0 + 1));
  }
  else
  {
    v12 = xmmword_2546395A0;
    v13 = unk_2546395B0;
  }
  sub_20AEC7620(&__p, (uint64_t)__dst, 2uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, (std::string *)&qword_254639648, v3, v4);
  v5 = (void **)__p;
  if (__p)
  {
    v6 = v9;
    v7 = __p;
    if (v9 != __p)
    {
      do
      {
        if (*((char *)v6 - 1) < 0)
          operator delete(*(v6 - 3));
        v6 -= 3;
      }
      while (v6 != v5);
      v7 = __p;
    }
    v9 = v5;
    operator delete(v7);
  }
  if ((SHIBYTE(v13) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v11) & 0x80000000) == 0)
      return;
LABEL_20:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v12);
  if (SHIBYTE(v11) < 0)
    goto LABEL_20;
}

void sub_20AF32B58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_20AEC2E90(&a10);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
    operator delete(a13);
  _Unwind_Resume(a1);
}

void sub_20AF32B9C(_QWORD *__dst)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2546394A0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2546394A0))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::esn::span<const double, 3>]", qword_254639660);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254639660, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546394A0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2546394A8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2546394A8))
  {
    v5 = sub_20AED4780(qword_254639660, "<", 0);
    sub_20AED467C(qword_254639660, 0, v5, qword_254639678);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254639678, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546394A8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2546394B0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2546394B0))
  {
    sub_20B531658((uint64_t)qword_254639678, (uint64_t)&xmmword_254639690);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639690, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546394B0);
  }
  if (byte_2546396A7 < 0)
  {
    sub_20AEC60F4(__dst, (void *)xmmword_254639690, *((unint64_t *)&xmmword_254639690 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_254639690;
    __dst[2] = unk_2546396A0;
  }
}

void sub_20AF32D30(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546394B0);
  _Unwind_Resume(a1);
}

void sub_20AF32D48(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546394A8);
  _Unwind_Resume(a1);
}

void sub_20AF32D60(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546394A0);
  _Unwind_Resume(a1);
}

void sub_20AF32D78(CFErrorRef ***a1, uint64_t a2)
{
  uint64_t *v4;
  unsigned __int8 v5;
  void **v6;
  void **v7;
  void *v8;
  _BYTE v9[16];
  void *__p;
  char v11;
  char v12;
  void *v13;
  char v14;
  void *v15;
  char v16;
  char v17;
  char v18;
  char v19;
  void *v20;
  void **v21;
  __int128 __dst;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t *)sub_20AF31F40();
  sub_20AF33294();
  if (byte_2546396BF < 0)
  {
    sub_20AEC60F4(&__dst, (void *)xmmword_2546396A8, *((unint64_t *)&xmmword_2546396A8 + 1));
  }
  else
  {
    __dst = xmmword_2546396A8;
    v23 = unk_2546396B8;
  }
  v5 = atomic_load((unsigned __int8 *)&qword_2546394D0);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_2546394D0))
  {
    sub_20AF3344C();
    if (byte_25463971F < 0)
    {
      sub_20AEC60F4(&xmmword_2546396F0, (void *)qword_254639708, unk_254639710);
    }
    else
    {
      xmmword_2546396F0 = *(_OWORD *)&qword_254639708;
      unk_254639700 = unk_254639718;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546396F0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546394D0);
  }
  if (byte_254639707 < 0)
  {
    sub_20AEC60F4(&v24, (void *)xmmword_2546396F0, *((unint64_t *)&xmmword_2546396F0 + 1));
  }
  else
  {
    v24 = xmmword_2546396F0;
    v25 = unk_254639700;
  }
  sub_20AF33A24();
  if (byte_254639797 < 0)
  {
    sub_20AEC60F4(&v26, (void *)xmmword_254639780, *((unint64_t *)&xmmword_254639780 + 1));
  }
  else
  {
    v26 = xmmword_254639780;
    v27 = unk_254639790;
  }
  sub_20AEC7620(&v20, (uint64_t)&__dst, 3uLL);
  sub_20AECF9B0(v9, a2);
  sub_20AECD798(v4, (__int128 **)&v20, (uint64_t)v9, **a1);
  if (v19 && v18)
  {
    if (!v17)
      goto LABEL_16;
    if (v16 < 0)
    {
      operator delete(v15);
      if ((v14 & 0x80000000) == 0)
      {
LABEL_16:
        if (!v12)
          goto LABEL_19;
LABEL_17:
        if (v11 < 0)
          operator delete(__p);
        goto LABEL_19;
      }
    }
    else if ((v14 & 0x80000000) == 0)
    {
      goto LABEL_16;
    }
    operator delete(v13);
    if (!v12)
      goto LABEL_19;
    goto LABEL_17;
  }
LABEL_19:
  v6 = (void **)v20;
  if (v20)
  {
    v7 = v21;
    v8 = v20;
    if (v21 != v20)
    {
      do
      {
        if (*((char *)v7 - 1) < 0)
          operator delete(*(v7 - 3));
        v7 -= 3;
      }
      while (v7 != v6);
      v8 = v20;
    }
    v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v27) < 0)
  {
    operator delete((void *)v26);
    if ((SHIBYTE(v25) & 0x80000000) == 0)
    {
LABEL_29:
      if ((SHIBYTE(v23) & 0x80000000) == 0)
        return;
LABEL_33:
      operator delete((void *)__dst);
      return;
    }
  }
  else if ((SHIBYTE(v25) & 0x80000000) == 0)
  {
    goto LABEL_29;
  }
  operator delete((void *)v24);
  if (SHIBYTE(v23) < 0)
    goto LABEL_33;
}

void sub_20AF33064(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  __cxa_guard_abort(&qword_2546394D0);
  while (1)
  {
    if (*(char *)(v1 - 1) < 0)
      operator delete(*(void **)(v1 - 24));
    v1 -= 24;
    if (v1 == v2 - 144)
      _Unwind_Resume(a1);
  }
}

uint64_t sub_20AF33120(uint64_t result)
{
  __int128 *v1;
  void *exception;
  __int128 v3;
  _BYTE v4[112];

  v1 = (__int128 *)result;
  if (!*(_BYTE *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    v3 = *v1;
    sub_20AECEBD0(v4, v1 + 1);
    sub_20AECF558((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_24C3F22C0, (void (*)(void *))sub_20AECF5A8);
  }
  return result;
}

void sub_20AF3319C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECCE40((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF331B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  sub_20AECCE40((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_20AF331CC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_20AF331E0(uint64_t *a1)
{
  uint64_t v2;

  if (*((_BYTE *)a1 + 120))
  {
    v2 = *a1;
    *a1 = 0;
    if (v2)
      MEMORY[0x20BD3583C](v2, 0x1000C4072FAA15ELL);
    return a1;
  }
  if (!*((_BYTE *)a1 + 112))
    return a1;
  if (!*((_BYTE *)a1 + 104))
    goto LABEL_9;
  if (*((char *)a1 + 103) < 0)
  {
    operator delete((void *)a1[10]);
    if (*((char *)a1 + 71) < 0)
      goto LABEL_13;
LABEL_9:
    if (*((_BYTE *)a1 + 40))
      goto LABEL_10;
    return a1;
  }
  if ((*((char *)a1 + 71) & 0x80000000) == 0)
    goto LABEL_9;
LABEL_13:
  operator delete((void *)a1[6]);
  if (!*((_BYTE *)a1 + 40))
    return a1;
LABEL_10:
  if ((*((char *)a1 + 39) & 0x80000000) == 0)
    return a1;
  operator delete((void *)a1[2]);
  return a1;
}

void sub_20AF33294()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2546394B8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546394B8))
  {
    sub_20AF3334C();
    if (byte_2546396EF < 0)
    {
      sub_20AEC60F4(&xmmword_2546396A8, (void *)xmmword_2546396D8, *((unint64_t *)&xmmword_2546396D8 + 1));
    }
    else
    {
      xmmword_2546396A8 = xmmword_2546396D8;
      unk_2546396B8 = unk_2546396E8;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546396A8, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546394B8);
  }
}

void sub_20AF33334(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546394B8);
  _Unwind_Resume(a1);
}

void sub_20AF3334C()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_2546394C0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546394C0))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::MatrixLayout]", qword_2546396C0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546396C0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546394C0);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_2546394C8);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_2546394C8))
    {
      sub_20B531658((uint64_t)qword_2546396C0, (uint64_t)&xmmword_2546396D8);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546396D8, &dword_20AEBB000);
      __cxa_guard_release(&qword_2546394C8);
    }
  }
}

void sub_20AF3341C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546394C8);
  _Unwind_Resume(a1);
}

void sub_20AF33434(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546394C0);
  _Unwind_Resume(a1);
}

void sub_20AF3344C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v2;

  v0 = atomic_load((unsigned __int8 *)&qword_2546394D8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546394D8))
  {
    sub_20AF33764(__p);
    sub_20AF33520((char *)__p);
    if (v2 < 0)
      operator delete(__p[0]);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254639708, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546394D8);
  }
}

void sub_20AF334E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2546394D8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2546394D8);
  _Unwind_Resume(a1);
}

void sub_20AF33520(char *a1)
{
  unsigned __int8 v2;
  int64x2_t v3;
  int8x16_t v4;
  void **v5;
  void **v6;
  void *v7;
  void *__p;
  void **v9;
  void *__dst[2];
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254639448);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254639448))
  {
    *((_QWORD *)&xmmword_254639558 + 1) = 0x3233746100;
    unk_254639568 = 0xD00000000000000;
    LODWORD(xmmword_254639558) = 1936617315;
    WORD2(xmmword_254639558) = 8308;
    *(_DWORD *)((char *)&xmmword_254639558 + 6) = 1634692198;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639558, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639448);
  }
  if (byte_25463956F < 0)
  {
    sub_20AEC60F4(__dst, (void *)xmmword_254639558, *((unint64_t *)&xmmword_254639558 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_254639558;
    v11 = unk_254639568;
  }
  sub_20AF33940();
  if (byte_254639737 < 0)
  {
    sub_20AEC60F4(&v12, (void *)xmmword_254639720, *((unint64_t *)&xmmword_254639720 + 1));
  }
  else
  {
    v12 = xmmword_254639720;
    v13 = unk_254639730;
  }
  sub_20AEC7620(&__p, (uint64_t)__dst, 2uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, (std::string *)&qword_254639708, v3, v4);
  v5 = (void **)__p;
  if (__p)
  {
    v6 = v9;
    v7 = __p;
    if (v9 != __p)
    {
      do
      {
        if (*((char *)v6 - 1) < 0)
          operator delete(*(v6 - 3));
        v6 -= 3;
      }
      while (v6 != v5);
      v7 = __p;
    }
    v9 = v5;
    operator delete(v7);
  }
  if ((SHIBYTE(v13) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v11) & 0x80000000) == 0)
      return;
LABEL_20:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v12);
  if (SHIBYTE(v11) < 0)
    goto LABEL_20;
}

void sub_20AF33720(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_20AEC2E90(&a10);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
    operator delete(a13);
  _Unwind_Resume(a1);
}

void sub_20AF33764(_QWORD *__dst)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2546394E8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2546394E8))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::esn::span<const float, 12>]", qword_254639738);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254639738, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546394E8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2546394F0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2546394F0))
  {
    v5 = sub_20AED4780(qword_254639738, "<", 0);
    sub_20AED467C(qword_254639738, 0, v5, qword_254639750);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254639750, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546394F0);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2546394F8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2546394F8))
  {
    sub_20B531658((uint64_t)qword_254639750, (uint64_t)&xmmword_254639768);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639768, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546394F8);
  }
  if (byte_25463977F < 0)
  {
    sub_20AEC60F4(__dst, (void *)xmmword_254639768, *((unint64_t *)&xmmword_254639768 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_254639768;
    __dst[2] = unk_254639778;
  }
}

void sub_20AF338F8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546394F8);
  _Unwind_Resume(a1);
}

void sub_20AF33910(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546394F0);
  _Unwind_Resume(a1);
}

void sub_20AF33928(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546394E8);
  _Unwind_Resume(a1);
}

void sub_20AF33940()
{
  unsigned __int8 v0;
  void *__p[2];
  char v2;

  v0 = atomic_load((unsigned __int8 *)&qword_2546394E0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546394E0))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 12UL]", __p);
    sub_20B531884((uint64_t)__p, (std::string *)&xmmword_254639720);
    if (v2 < 0)
      operator delete(__p[0]);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639720, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546394E0);
  }
}

void sub_20AF339E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2546394E0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2546394E0);
  _Unwind_Resume(a1);
}

void sub_20AF33A24()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639500);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639500))
  {
    sub_20AF33ADC();
    if (byte_2546397C7 < 0)
    {
      sub_20AEC60F4(&xmmword_254639780, (void *)xmmword_2546397B0, *((unint64_t *)&xmmword_2546397B0 + 1));
    }
    else
    {
      xmmword_254639780 = xmmword_2546397B0;
      unk_254639790 = unk_2546397C0;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639780, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639500);
  }
}

void sub_20AF33AC4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639500);
  _Unwind_Resume(a1);
}

void sub_20AF33ADC()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254639508);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639508))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::ArgOptions]", qword_254639798);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254639798, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639508);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254639510);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_254639510))
    {
      sub_20B531658((uint64_t)qword_254639798, (uint64_t)&xmmword_2546397B0);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546397B0, &dword_20AEBB000);
      __cxa_guard_release(&qword_254639510);
    }
  }
}

void sub_20AF33BAC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639510);
  _Unwind_Resume(a1);
}

void sub_20AF33BC4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639508);
  _Unwind_Resume(a1);
}

void sub_20AF33BDC(CFErrorRef ***a1, uint64_t a2)
{
  uint64_t *v4;
  unsigned __int8 v5;
  void **v6;
  void **v7;
  void *v8;
  _BYTE v9[16];
  void *__p;
  char v11;
  char v12;
  void *v13;
  char v14;
  void *v15;
  char v16;
  char v17;
  char v18;
  char v19;
  void *v20;
  void **v21;
  __int128 __dst;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t *)sub_20AF31F40();
  sub_20AF33294();
  if (byte_2546396BF < 0)
  {
    sub_20AEC60F4(&__dst, (void *)xmmword_2546396A8, *((unint64_t *)&xmmword_2546396A8 + 1));
  }
  else
  {
    __dst = xmmword_2546396A8;
    v23 = unk_2546396B8;
  }
  v5 = atomic_load((unsigned __int8 *)&qword_254639518);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_254639518))
  {
    sub_20AF33F84();
    if (byte_2546397F7 < 0)
    {
      sub_20AEC60F4(&xmmword_2546397C8, (void *)qword_2546397E0, unk_2546397E8);
    }
    else
    {
      xmmword_2546397C8 = *(_OWORD *)&qword_2546397E0;
      unk_2546397D8 = unk_2546397F0;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546397C8, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639518);
  }
  if (byte_2546397DF < 0)
  {
    sub_20AEC60F4(&v24, (void *)xmmword_2546397C8, *((unint64_t *)&xmmword_2546397C8 + 1));
  }
  else
  {
    v24 = xmmword_2546397C8;
    v25 = unk_2546397D8;
  }
  sub_20AF33A24();
  if (byte_254639797 < 0)
  {
    sub_20AEC60F4(&v26, (void *)xmmword_254639780, *((unint64_t *)&xmmword_254639780 + 1));
  }
  else
  {
    v26 = xmmword_254639780;
    v27 = unk_254639790;
  }
  sub_20AEC7620(&v20, (uint64_t)&__dst, 3uLL);
  sub_20AECF9B0(v9, a2);
  sub_20AECD798(v4, (__int128 **)&v20, (uint64_t)v9, **a1);
  if (v19 && v18)
  {
    if (!v17)
      goto LABEL_16;
    if (v16 < 0)
    {
      operator delete(v15);
      if ((v14 & 0x80000000) == 0)
      {
LABEL_16:
        if (!v12)
          goto LABEL_19;
LABEL_17:
        if (v11 < 0)
          operator delete(__p);
        goto LABEL_19;
      }
    }
    else if ((v14 & 0x80000000) == 0)
    {
      goto LABEL_16;
    }
    operator delete(v13);
    if (!v12)
      goto LABEL_19;
    goto LABEL_17;
  }
LABEL_19:
  v6 = (void **)v20;
  if (v20)
  {
    v7 = v21;
    v8 = v20;
    if (v21 != v20)
    {
      do
      {
        if (*((char *)v7 - 1) < 0)
          operator delete(*(v7 - 3));
        v7 -= 3;
      }
      while (v7 != v6);
      v8 = v20;
    }
    v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v27) < 0)
  {
    operator delete((void *)v26);
    if ((SHIBYTE(v25) & 0x80000000) == 0)
    {
LABEL_29:
      if ((SHIBYTE(v23) & 0x80000000) == 0)
        return;
LABEL_33:
      operator delete((void *)__dst);
      return;
    }
  }
  else if ((SHIBYTE(v25) & 0x80000000) == 0)
  {
    goto LABEL_29;
  }
  operator delete((void *)v24);
  if (SHIBYTE(v23) < 0)
    goto LABEL_33;
}

void sub_20AF33EC8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  __cxa_guard_abort(&qword_254639518);
  while (1)
  {
    if (*(char *)(v1 - 1) < 0)
      operator delete(*(void **)(v1 - 24));
    v1 -= 24;
    if (v1 == v2 - 144)
      _Unwind_Resume(a1);
  }
}

void sub_20AF33F84()
{
  unsigned __int8 v0;
  void *__p[2];
  char v2;

  v0 = atomic_load((unsigned __int8 *)&qword_254639520);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639520))
  {
    sub_20AF3429C(__p);
    sub_20AF34058((char *)__p);
    if (v2 < 0)
      operator delete(__p[0]);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_2546397E0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639520);
  }
}

void sub_20AF34018(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254639520);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254639520);
  _Unwind_Resume(a1);
}

void sub_20AF34058(char *a1)
{
  unsigned __int8 v2;
  int64x2_t v3;
  int8x16_t v4;
  void **v5;
  void **v6;
  void *v7;
  void *__p;
  void **v9;
  void *__dst[2];
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254639488);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254639488))
  {
    *((_QWORD *)&xmmword_254639618 + 1) = 0x3436746100;
    unk_254639628 = 0xD00000000000000;
    LODWORD(xmmword_254639618) = 1936617315;
    WORD2(xmmword_254639618) = 8308;
    *(_DWORD *)((char *)&xmmword_254639618 + 6) = 1634692198;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639618, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639488);
  }
  if (byte_25463962F < 0)
  {
    sub_20AEC60F4(__dst, (void *)xmmword_254639618, *((unint64_t *)&xmmword_254639618 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_254639618;
    v11 = unk_254639628;
  }
  sub_20AF33940();
  if (byte_254639737 < 0)
  {
    sub_20AEC60F4(&v12, (void *)xmmword_254639720, *((unint64_t *)&xmmword_254639720 + 1));
  }
  else
  {
    v12 = xmmword_254639720;
    v13 = unk_254639730;
  }
  sub_20AEC7620(&__p, (uint64_t)__dst, 2uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, (std::string *)&qword_2546397E0, v3, v4);
  v5 = (void **)__p;
  if (__p)
  {
    v6 = v9;
    v7 = __p;
    if (v9 != __p)
    {
      do
      {
        if (*((char *)v6 - 1) < 0)
          operator delete(*(v6 - 3));
        v6 -= 3;
      }
      while (v6 != v5);
      v7 = __p;
    }
    v9 = v5;
    operator delete(v7);
  }
  if ((SHIBYTE(v13) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v11) & 0x80000000) == 0)
      return;
LABEL_20:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v12);
  if (SHIBYTE(v11) < 0)
    goto LABEL_20;
}

void sub_20AF34258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_20AEC2E90(&a10);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
    operator delete(a13);
  _Unwind_Resume(a1);
}

void sub_20AF3429C(_QWORD *__dst)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254639528);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254639528))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::esn::span<const double, 12>]", qword_2546397F8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546397F8, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639528);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254639530);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254639530))
  {
    v5 = sub_20AED4780(qword_2546397F8, "<", 0);
    sub_20AED467C(qword_2546397F8, 0, v5, qword_254639810);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254639810, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639530);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254639538);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254639538))
  {
    sub_20B531658((uint64_t)qword_254639810, (uint64_t)&xmmword_254639828);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639828, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639538);
  }
  if (byte_25463983F < 0)
  {
    sub_20AEC60F4(__dst, (void *)xmmword_254639828, *((unint64_t *)&xmmword_254639828 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_254639828;
    __dst[2] = unk_254639838;
  }
}

void sub_20AF34430(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639538);
  _Unwind_Resume(a1);
}

void sub_20AF34448(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639530);
  _Unwind_Resume(a1);
}

void sub_20AF34460(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639528);
  _Unwind_Resume(a1);
}

uint64_t *sub_20AF34478()
{
  unsigned __int8 v0;
  uint64_t *v2;
  const void **v3;
  int v4;
  size_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;

  v0 = atomic_load((unsigned __int8 *)&qword_254631178);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254631178))
  {
    v2 = sub_20AF345BC();
    v3 = (const void **)v2;
    v4 = *((char *)v2 + 23);
    if (v4 >= 0)
      v5 = *((unsigned __int8 *)v2 + 23);
    else
      v5 = v2[1];
    v6 = v5 + 1;
    if (v5 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    v7 = &qword_254631160;
    if (v6 >= 0x17)
    {
      v8 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v8 = v6 | 7;
      v9 = v8 + 1;
      v10 = (uint64_t *)operator new(v8 + 1);
      qword_254631168 = v5 + 1;
      unk_254631170 = v9 | 0x8000000000000000;
      qword_254631160 = (uint64_t)v10;
      v7 = v10;
    }
    else
    {
      qword_254631168 = 0;
      unk_254631170 = 0;
      qword_254631160 = 0;
      byte_254631177 = v5 + 1;
      if (!v5)
      {
LABEL_18:
        *(_WORD *)((char *)v7 + v5) = 42;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254631160, &dword_20AEBB000);
        __cxa_guard_release(&qword_254631178);
        return &qword_254631160;
      }
    }
    if (v4 >= 0)
      v11 = v3;
    else
      v11 = *v3;
    memmove(v7, v11, v5);
    goto LABEL_18;
  }
  return &qword_254631160;
}

void sub_20AF345A4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631178);
  _Unwind_Resume(a1);
}

uint64_t *sub_20AF345BC()
{
  unsigned __int8 v0;
  __int128 *v2;
  const void **v3;
  int v4;
  size_t v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  const void *v11;

  v0 = atomic_load((unsigned __int8 *)&qword_254631198);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254631198))
  {
    v2 = sub_20AF31F40();
    v3 = (const void **)v2;
    v4 = *((char *)v2 + 23);
    if (v4 >= 0)
      v5 = *((unsigned __int8 *)v2 + 23);
    else
      v5 = *((_QWORD *)v2 + 1);
    v6 = v5 + 6;
    if (v5 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v6 >= 0x17)
    {
      v8 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v8 = v6 | 7;
      v9 = v8 + 1;
      v10 = (char *)operator new(v8 + 1);
      qword_254631188 = v5 + 6;
      unk_254631190 = v9 | 0x8000000000000000;
      qword_254631180 = (uint64_t)v10;
      *(_DWORD *)v10 = 1936617315;
      v7 = v10 + 6;
      *((_WORD *)v10 + 2) = 8308;
    }
    else
    {
      qword_254631188 = 0;
      unk_254631190 = 0;
      qword_254631180 = 0x2074736E6F63;
      byte_254631197 = v5 + 6;
      v7 = (char *)&qword_254631180 + 6;
      if (!v5)
      {
LABEL_18:
        v7[v5] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254631180, &dword_20AEBB000);
        __cxa_guard_release(&qword_254631198);
        return &qword_254631180;
      }
    }
    if (v4 >= 0)
      v11 = v3;
    else
      v11 = *v3;
    memmove(v7, v11, v5);
    goto LABEL_18;
  }
  return &qword_254631180;
}

void sub_20AF3471C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631198);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF34734(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;

  v2 = *(_QWORD *)(a1 + 384);
  *(_QWORD *)(a1 + 384) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 376);
  if (!v3)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    v6 = *(std::__shared_weak_count **)(a1 + 360);
    if (!v6)
      goto LABEL_13;
  }
  else
  {
LABEL_7:
    v6 = *(std::__shared_weak_count **)(a1 + 360);
    if (!v6)
      goto LABEL_13;
  }
  v7 = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
LABEL_13:
  v9 = *(std::__shared_weak_count **)(a1 + 344);
  if (!v9)
    goto LABEL_17;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    v12 = *(std::__shared_weak_count **)(a1 + 328);
    if (!v12)
      goto LABEL_23;
  }
  else
  {
LABEL_17:
    v12 = *(std::__shared_weak_count **)(a1 + 328);
    if (!v12)
      goto LABEL_23;
  }
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldaxr(v13);
  while (__stlxr(v14 - 1, v13));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
LABEL_23:
  v15 = *(std::__shared_weak_count **)(a1 + 312);
  if (!v15)
    goto LABEL_27;
  v16 = (unint64_t *)&v15->__shared_owners_;
  do
    v17 = __ldaxr(v16);
  while (__stlxr(v17 - 1, v16));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
    v18 = *(std::__shared_weak_count **)(a1 + 296);
    if (!v18)
      goto LABEL_33;
  }
  else
  {
LABEL_27:
    v18 = *(std::__shared_weak_count **)(a1 + 296);
    if (!v18)
      goto LABEL_33;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (!v20)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
  }
LABEL_33:
  v21 = *(std::__shared_weak_count **)(a1 + 280);
  if (!v21)
    goto LABEL_37;
  v22 = (unint64_t *)&v21->__shared_owners_;
  do
    v23 = __ldaxr(v22);
  while (__stlxr(v23 - 1, v22));
  if (!v23)
  {
    ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
    std::__shared_weak_count::__release_weak(v21);
    v24 = *(std::__shared_weak_count **)(a1 + 264);
    if (!v24)
      goto LABEL_43;
  }
  else
  {
LABEL_37:
    v24 = *(std::__shared_weak_count **)(a1 + 264);
    if (!v24)
      goto LABEL_43;
  }
  v25 = (unint64_t *)&v24->__shared_owners_;
  do
    v26 = __ldaxr(v25);
  while (__stlxr(v26 - 1, v25));
  if (!v26)
  {
    ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
    std::__shared_weak_count::__release_weak(v24);
  }
LABEL_43:
  sub_20AF3F978(a1 + 72);
  if (!*(_BYTE *)(a1 + 64) || (*(char *)(a1 + 63) & 0x80000000) == 0)
    return a1;
  operator delete(*(void **)(a1 + 40));
  return a1;
}

uint64_t sub_20AF34990(uint64_t a1)
{
  return sub_20AF34734(a1 - 8);
}

void sub_20AF34998(uint64_t a1)
{
  sub_20AF34734(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF349BC(uint64_t a1)
{
  sub_20AF34734(a1 - 8);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF349E4(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 264) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  sub_20AF3F978(a1 + 80);
  if (!*(_BYTE *)(a1 + 72) || (*(char *)(a1 + 71) & 0x80000000) == 0)
    return a1;
  operator delete(*(void **)(a1 + 48));
  return a1;
}

void sub_20AF34A4C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 256);
  *(_QWORD *)(a1 + 256) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  sub_20AF3F978(a1 + 72);
  if (*(_BYTE *)(a1 + 64))
  {
    if (*(char *)(a1 + 63) < 0)
      operator delete(*(void **)(a1 + 40));
  }
}

void sub_20AF34AAC(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 264) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  sub_20AF3F978(a1 + 80);
  if (*(_BYTE *)(a1 + 72))
  {
    if (*(char *)(a1 + 71) < 0)
      operator delete(*(void **)(a1 + 48));
  }
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF34B14(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 256);
  *(_QWORD *)(a1 + 256) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  sub_20AF3F978(a1 + 72);
  if (*(_BYTE *)(a1 + 64))
  {
    if (*(char *)(a1 + 63) < 0)
      operator delete(*(void **)(a1 + 40));
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF34B7C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  sub_20AEC833C(a1 + 16, *(char **)(a1 + 24));
  return a1;
}

void sub_20AF34BC0(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  sub_20AEC833C(a1 + 8, *(char **)(a1 + 16));
}

void sub_20AF34BFC(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  sub_20AEC833C(a1 + 16, *(char **)(a1 + 24));
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF34C50(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  sub_20AEC833C(a1 + 8, *(char **)(a1 + 16));
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF34CA8(uint64_t a1)
{
  sub_20AF3FA38(a1 + 8);
  return a1;
}

void sub_20AF34CD4(uint64_t a1)
{
  sub_20AF3FA38(a1 + 8);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF34D0C(uint64_t a1)
{
  sub_20AF3FA38(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF34D40(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;

  v2 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  if (*(_BYTE *)(a1 + 64))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 40);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldaxr(p_shared_owners);
      while (__stlxr(v5 - 1, p_shared_owners));
      if (!v5)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
  }
  v6 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v6)
    return a1;
  v7 = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_20AF34E00(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;

  v2 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  if (*(_BYTE *)(a1 + 56))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 32);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldaxr(p_shared_owners);
      while (__stlxr(v5 - 1, p_shared_owners));
      if (!v5)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
  }
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20AF34EB8(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;

  v2 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  if (*(_BYTE *)(a1 + 64))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 40);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldaxr(p_shared_owners);
      while (__stlxr(v5 - 1, p_shared_owners));
      if (!v5)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
  }
  v6 = *(std::__shared_weak_count **)(a1 + 24);
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF34F78(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;

  v2 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  if (*(_BYTE *)(a1 + 56))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 32);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldaxr(p_shared_owners);
      while (__stlxr(v5 - 1, p_shared_owners));
      if (!v5)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
  }
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF35038(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 24);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF350A0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20AF350FC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF35164(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t VZPeerInfoGetTypeID()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2546399F0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546399F0))
    return qword_2546399E8;
  qword_2546399E8 = sub_20AECB130();
  __cxa_guard_release(&qword_2546399F0);
  return qword_2546399E8;
}

uint64_t VZConnectionInfoGetTypeID()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639A00);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254639A00))
    return qword_2546399F8;
  qword_2546399F8 = sub_20AECB130();
  __cxa_guard_release(&qword_254639A00);
  return qword_2546399F8;
}

uint64_t VZConnectionInfoGetConnectionType(uint64_t a1)
{
  if (sub_20AF352D0((uint64_t)"VZConnectionInfoGetConnectionType", a1))
    return 0;
  else
    return *(unsigned __int8 *)(a1 + 16);
}

BOOL sub_20AF352D0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4;
  unsigned __int8 v5;
  int v7;
  size_t v8;
  unint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  void *v14[2];
  uint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  void *v21[2];
  uint64_t v22;
  uint64_t v23;
  void *v24[2];
  uint64_t v25;
  char v26;
  char v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  void *__p[2];
  uint64_t v36;
  char v37;
  char v38;
  char v39;

  if (a2)
    return a2 == 0;
  v4 = atomic_load((unsigned __int8 *)&qword_254639A08);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254639A08))
  {
    sub_20AF42D48();
    v7 = byte_25463A0EF;
    if (byte_25463A0EF >= 0)
      v8 = byte_25463A0EF;
    else
      v8 = qword_25463A0E0;
    v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v9 >= 0x17)
    {
      v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17)
        v11 = v9 | 7;
      v12 = v11 + 1;
      v10 = (__int128 *)operator new(v11 + 1);
      *((_QWORD *)&xmmword_25463A0C0 + 1) = v8 + 1;
      unk_25463A0D0 = v12 | 0x8000000000000000;
      *(_QWORD *)&xmmword_25463A0C0 = v10;
    }
    else
    {
      unk_25463A0D0 = 0;
      xmmword_25463A0C0 = 0uLL;
      v10 = &xmmword_25463A0C0;
      byte_25463A0D7 = v8 + 1;
      if (!v8)
      {
LABEL_53:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A0C0, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639A08);
        goto LABEL_3;
      }
    }
    if (v7 >= 0)
      v13 = &qword_25463A0D8;
    else
      v13 = (uint64_t *)qword_25463A0D8;
    memmove(v10, v13, v8);
    goto LABEL_53;
  }
LABEL_3:
  if (byte_25463A0D7 < 0)
  {
    sub_20AEC60F4(v14, (void *)xmmword_25463A0C0, *((unint64_t *)&xmmword_25463A0C0 + 1));
  }
  else
  {
    *(_OWORD *)v14 = xmmword_25463A0C0;
    v15 = unk_25463A0D0;
  }
  v16 = 1;
  sub_20AECCECC(a1, (uint64_t)v14, (uint64_t)&v17);
  v28 = v17;
  LOBYTE(v29) = 0;
  v38 = 0;
  if (v27)
  {
    v31 = 0;
    if (v20)
    {
      v29 = v18;
      v30 = v19;
      v19 = 0;
      v18 = 0uLL;
      v31 = 1;
    }
    LOBYTE(v32) = 0;
    v37 = 0;
    if (v26)
    {
      v33 = v22;
      v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      v34 = v23;
      *(_OWORD *)__p = *(_OWORD *)v24;
      v36 = v25;
      v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      v25 = 0;
      v37 = 1;
    }
    v38 = 1;
  }
  v39 = 0;
  v5 = atomic_load((unsigned __int8 *)&qword_254630258);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_254630258))
  {
    __cxa_atexit((void (*)(void *))sub_20AECE2D8, &unk_254630168, &dword_20AEBB000);
    __cxa_guard_release(&qword_254630258);
  }
  sub_20AECB50C((uint64_t)&unk_254630168, &v28);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v33) < 0)
        operator delete((void *)v32);
    }
    if (v31 && SHIBYTE(v30) < 0)
      operator delete((void *)v29);
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0)
        operator delete(v24[0]);
      if (SHIBYTE(v22) < 0)
        operator delete(v21[0]);
    }
    if (v20 && SHIBYTE(v19) < 0)
      operator delete((void *)v18);
  }
  if (v16 && SHIBYTE(v15) < 0)
    operator delete(v14[0]);
  return a2 == 0;
}

void sub_20AF35644(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639A08);
  _Unwind_Resume(a1);
}

void sub_20AF3565C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t VZConnectionInfoGetClientInfo(uint64_t a1)
{
  uint64_t result;
  _OWORD *v3;
  _OWORD *v4;
  unsigned int *v5;
  unsigned int v6;
  char v7;
  uint64_t v8;
  unsigned __int8 v9;
  void **v10;
  void **v11;
  void *v12;
  unsigned __int8 v13;
  int v14;
  size_t v15;
  unint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  __int128 *v21;
  const void **v22;
  int v23;
  size_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  const void *v30;
  char v31[16];
  void *v32;
  char v33;
  char v34;
  void *v35;
  char v36;
  void *__p;
  char v38;
  char v39;
  char v40;
  char v41;
  void *v42;
  void **v43;
  __int128 __dst;
  uint64_t v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  if (sub_20AF352D0((uint64_t)"VZConnectionInfoGetClientInfo", a1))
    return 0;
  result = *(_QWORD *)(a1 + 264);
  if (!result)
  {
    v3 = operator new(0x188uLL, MEMORY[0x24BEDB6B8]);
    if (v3)
    {
      v4 = v3;
      *(_QWORD *)v3 = off_24C3F2180;
      v3[1] = *(_OWORD *)(a1 + 24);
      *((_DWORD *)v3 + 8) = *(_DWORD *)(a1 + 40);
      *((_BYTE *)v3 + 40) = 0;
      *((_BYTE *)v3 + 64) = 0;
      if (*(_BYTE *)(a1 + 72))
      {
        if (*(char *)(a1 + 71) < 0)
        {
          sub_20AEC60F4((_BYTE *)v3 + 40, *(void **)(a1 + 48), *(_QWORD *)(a1 + 56));
        }
        else
        {
          *(_OWORD *)((char *)v3 + 40) = *(_OWORD *)(a1 + 48);
          *((_QWORD *)v3 + 7) = *(_QWORD *)(a1 + 64);
        }
        *((_BYTE *)v4 + 64) = 1;
      }
      *((_BYTE *)v4 + 72) = 0;
      *((_BYTE *)v4 + 216) = 0;
      if (*(_BYTE *)(a1 + 224))
      {
        sub_20AF3FE60((char *)v4 + 72, (__int128 *)(a1 + 80));
        *((_BYTE *)v4 + 216) = 1;
      }
      v4[14] = *(_OWORD *)(a1 + 232);
      *((_QWORD *)v4 + 30) = *(_QWORD *)(a1 + 248);
      *((_DWORD *)v4 + 62) = 1;
      v5 = (unsigned int *)v4 + 62;
      *(_QWORD *)v4 = &off_24C3F4700;
      *((_QWORD *)v4 + 1) = &unk_24C3F4750;
      v4[16] = 0u;
      v4[17] = 0u;
      v4[18] = 0u;
      v4[19] = 0u;
      v4[20] = 0u;
      v4[21] = 0u;
      v4[22] = 0u;
      v4[23] = 0u;
      *((_QWORD *)v4 + 48) = 0;
      do
        v6 = __ldaxr(v5);
      while (__stlxr(v6 + 1, v5));
      v7 = 0;
      v8 = *(_QWORD *)(a1 + 264);
      *(_QWORD *)(a1 + 264) = v4;
      if (!v8)
        goto LABEL_16;
      goto LABEL_15;
    }
    sub_20AF40088();
    v9 = atomic_load((unsigned __int8 *)&qword_254639868);
    if ((v9 & 1) != 0 || !__cxa_guard_acquire(&qword_254639868))
    {
LABEL_21:
      if (byte_254639C57 < 0)
      {
        sub_20AEC60F4(&__dst, (void *)xmmword_254639C40, *((unint64_t *)&xmmword_254639C40 + 1));
      }
      else
      {
        __dst = xmmword_254639C40;
        v45 = unk_254639C50;
      }
      sub_20AEC7620(&v42, (uint64_t)&__dst, 1uLL);
      v31[0] = 0;
      v41 = 0;
      sub_20AECD798((uint64_t *)&xmmword_254639BF8, (__int128 **)&v42, (uint64_t)v31, 0);
      if (v41 && v40)
      {
        if (v39)
        {
          if (v38 < 0)
            operator delete(__p);
          if (v36 < 0)
            operator delete(v35);
        }
        if (v34 && v33 < 0)
          operator delete(v32);
      }
      v10 = (void **)v42;
      if (v42)
      {
        v11 = v43;
        v12 = v42;
        if (v43 != v42)
        {
          do
          {
            if (*((char *)v11 - 1) < 0)
              operator delete(*(v11 - 3));
            v11 -= 3;
          }
          while (v11 != v10);
          v12 = v42;
        }
        v43 = v10;
        operator delete(v12);
      }
      if (SHIBYTE(v45) < 0)
        operator delete((void *)__dst);
      v4 = 0;
      v7 = 1;
      v8 = *(_QWORD *)(a1 + 264);
      *(_QWORD *)(a1 + 264) = 0;
      if (!v8)
        goto LABEL_16;
LABEL_15:
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 24))(v8);
LABEL_16:
      if ((v7 & 1) == 0)
        (*(void (**)(_OWORD *))(*(_QWORD *)v4 + 24))(v4);
      return *(_QWORD *)(a1 + 264);
    }
    v13 = atomic_load((unsigned __int8 *)&qword_254639870);
    if ((v13 & 1) != 0 || !__cxa_guard_acquire(&qword_254639870))
    {
LABEL_48:
      v14 = byte_254639C6F;
      if (byte_254639C6F >= 0)
        v15 = byte_254639C6F;
      else
        v15 = qword_254639C60;
      v16 = v15 + 1;
      if (v15 + 1 > 0x7FFFFFFFFFFFFFF7)
        sub_20AEC0138();
      if (v16 >= 0x17)
      {
        v18 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v16 | 7) != 0x17)
          v18 = v16 | 7;
        v19 = v18 + 1;
        v17 = (__int128 *)operator new(v18 + 1);
        *((_QWORD *)&xmmword_254639C40 + 1) = v15 + 1;
        unk_254639C50 = v19 | 0x8000000000000000;
        *(_QWORD *)&xmmword_254639C40 = v17;
      }
      else
      {
        v17 = &xmmword_254639C40;
        unk_254639C50 = 0;
        xmmword_254639C40 = 0uLL;
        byte_254639C57 = v15 + 1;
        if (!v15)
        {
LABEL_62:
          *(_WORD *)((char *)v17 + v15) = 38;
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639C40, &dword_20AEBB000);
          __cxa_guard_release(&qword_254639868);
          goto LABEL_21;
        }
      }
      if (v14 >= 0)
        v20 = &qword_254639C58;
      else
        v20 = (uint64_t *)qword_254639C58;
      memmove(v17, v20, v15);
      goto LABEL_62;
    }
    v21 = sub_20AF40240();
    v22 = (const void **)v21;
    v23 = *((char *)v21 + 23);
    if (v23 >= 0)
      v24 = *((unsigned __int8 *)v21 + 23);
    else
      v24 = *((_QWORD *)v21 + 1);
    v25 = v24 + 6;
    if (v24 + 6 > 0x7FFFFFFFFFFFFFF7)
      sub_20AEC0138();
    if (v25 >= 0x17)
    {
      v27 = (v25 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v25 | 7) != 0x17)
        v27 = v25 | 7;
      v28 = v27 + 1;
      v29 = (char *)operator new(v27 + 1);
      qword_254639C60 = v24 + 6;
      unk_254639C68 = v28 | 0x8000000000000000;
      qword_254639C58 = (uint64_t)v29;
      *(_DWORD *)v29 = 1936617315;
      *((_WORD *)v29 + 2) = 8308;
      v26 = v29 + 6;
    }
    else
    {
      qword_254639C60 = 0;
      unk_254639C68 = 0;
      qword_254639C58 = 0x2074736E6F63;
      byte_254639C6F = v24 + 6;
      v26 = (char *)&qword_254639C58 + 6;
      if (!v24)
      {
LABEL_79:
        v26[v24] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254639C58, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639870);
        goto LABEL_48;
      }
    }
    if (v23 >= 0)
      v30 = v22;
    else
      v30 = *v22;
    memmove(v26, v30, v24);
    goto LABEL_79;
  }
  return result;
}

void sub_20AF35BF4(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_254639870);
    __cxa_guard_abort(&qword_254639868);
    sub_20AEC01C0(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF35C24(uint64_t a1, int a2)
{
  if (!a2)
    JUMPOUT(0x20AF35C30);
  sub_20AEC01C0(a1);
}

uint64_t VZPeerInfoGetUUID(uint64_t a1)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  const __CFAllocator *Default;
  std::__shared_weak_count_vtbl *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;

  if (sub_20AF35D60((uint64_t)"VZPeerInfoGetUUID", a1))
    return 0;
  v4 = *(_QWORD *)(a1 + 256);
  v3 = *(std::__shared_weak_count **)(a1 + 264);
  if (!v3)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (v4)
      return *(_QWORD *)(a1 + 256);
  }
  else
  {
LABEL_8:
    if (v4)
      return *(_QWORD *)(a1 + 256);
  }
  Default = CFAllocatorGetDefault();
  v9 = (std::__shared_weak_count_vtbl *)CFUUIDCreateFromUUIDBytes(Default, *(CFUUIDBytes *)(a1 + 16));
  sub_20B4F6FB4((std::__shared_weak_count_vtbl **)&v13, v9, 0);
  v10 = *(std::__shared_weak_count **)(a1 + 264);
  *(_OWORD *)(a1 + 256) = v13;
  if (!v10)
    return *(_QWORD *)(a1 + 256);
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (v12)
    return *(_QWORD *)(a1 + 256);
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return *(_QWORD *)(a1 + 256);
}

BOOL sub_20AF35D60(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4;
  unsigned __int8 v5;
  int v7;
  size_t v8;
  unint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  void *v14[2];
  uint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  void *v21[2];
  uint64_t v22;
  uint64_t v23;
  void *v24[2];
  uint64_t v25;
  char v26;
  char v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  void *__p[2];
  uint64_t v36;
  char v37;
  char v38;
  char v39;

  if (a2)
    return a2 == 0;
  v4 = atomic_load((unsigned __int8 *)&qword_254639A18);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254639A18))
  {
    sub_20AF42EC8();
    v7 = byte_25463A11F;
    if (byte_25463A11F >= 0)
      v8 = byte_25463A11F;
    else
      v8 = qword_25463A110;
    v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v9 >= 0x17)
    {
      v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17)
        v11 = v9 | 7;
      v12 = v11 + 1;
      v10 = (__int128 *)operator new(v11 + 1);
      *((_QWORD *)&xmmword_25463A0F0 + 1) = v8 + 1;
      unk_25463A100 = v12 | 0x8000000000000000;
      *(_QWORD *)&xmmword_25463A0F0 = v10;
    }
    else
    {
      unk_25463A100 = 0;
      xmmword_25463A0F0 = 0uLL;
      v10 = &xmmword_25463A0F0;
      byte_25463A107 = v8 + 1;
      if (!v8)
      {
LABEL_53:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A0F0, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639A18);
        goto LABEL_3;
      }
    }
    if (v7 >= 0)
      v13 = &qword_25463A108;
    else
      v13 = (uint64_t *)qword_25463A108;
    memmove(v10, v13, v8);
    goto LABEL_53;
  }
LABEL_3:
  if (byte_25463A107 < 0)
  {
    sub_20AEC60F4(v14, (void *)xmmword_25463A0F0, *((unint64_t *)&xmmword_25463A0F0 + 1));
  }
  else
  {
    *(_OWORD *)v14 = xmmword_25463A0F0;
    v15 = unk_25463A100;
  }
  v16 = 1;
  sub_20AECCECC(a1, (uint64_t)v14, (uint64_t)&v17);
  v28 = v17;
  LOBYTE(v29) = 0;
  v38 = 0;
  if (v27)
  {
    v31 = 0;
    if (v20)
    {
      v29 = v18;
      v30 = v19;
      v19 = 0;
      v18 = 0uLL;
      v31 = 1;
    }
    LOBYTE(v32) = 0;
    v37 = 0;
    if (v26)
    {
      v33 = v22;
      v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      v34 = v23;
      *(_OWORD *)__p = *(_OWORD *)v24;
      v36 = v25;
      v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      v25 = 0;
      v37 = 1;
    }
    v38 = 1;
  }
  v39 = 0;
  v5 = atomic_load((unsigned __int8 *)&qword_254630258);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_254630258))
  {
    __cxa_atexit((void (*)(void *))sub_20AECE2D8, &unk_254630168, &dword_20AEBB000);
    __cxa_guard_release(&qword_254630258);
  }
  sub_20AECB50C((uint64_t)&unk_254630168, &v28);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v33) < 0)
        operator delete((void *)v32);
    }
    if (v31 && SHIBYTE(v30) < 0)
      operator delete((void *)v29);
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0)
        operator delete(v24[0]);
      if (SHIBYTE(v22) < 0)
        operator delete(v21[0]);
    }
    if (v20 && SHIBYTE(v19) < 0)
      operator delete((void *)v18);
  }
  if (v16 && SHIBYTE(v15) < 0)
    operator delete(v14[0]);
  return a2 == 0;
}

void sub_20AF360D4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639A18);
  _Unwind_Resume(a1);
}

void sub_20AF360EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t VZPeerInfoGetDeviceUserGivenName(uint64_t a1)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  __int128 v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;

  if (sub_20AF35D60((uint64_t)"VZPeerInfoGetDeviceUserGivenName", a1))
    return 0;
  v4 = *(_QWORD *)(a1 + 272);
  v3 = *(std::__shared_weak_count **)(a1 + 280);
  if (!v3)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (v4)
      return *(_QWORD *)(a1 + 272);
  }
  else
  {
LABEL_8:
    if (v4)
      return *(_QWORD *)(a1 + 272);
  }
  if (*(_BYTE *)(a1 + 216))
    v8 = (void *)(a1 + 72);
  else
    v8 = &unk_20B5EADE8;
  sub_20B4EE2F0((uint64_t)v8, (CFStringRef *)&v16);
  v9 = v16;
  v16 = 0uLL;
  v10 = *(std::__shared_weak_count **)(a1 + 280);
  *(_OWORD *)(a1 + 272) = v9;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (!*((_QWORD *)&v16 + 1))
    return *(_QWORD *)(a1 + 272);
  v14 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
    return *(_QWORD *)(a1 + 272);
  ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
  std::__shared_weak_count::__release_weak(v13);
  return *(_QWORD *)(a1 + 272);
}

uint64_t VZPeerInfoGetDeviceProductName(uint64_t a1)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  __int128 v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;

  if (sub_20AF35D60((uint64_t)"VZPeerInfoGetDeviceProductName", a1))
    return 0;
  v4 = *(_QWORD *)(a1 + 288);
  v3 = *(std::__shared_weak_count **)(a1 + 296);
  if (!v3)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (v4)
      return *(_QWORD *)(a1 + 288);
  }
  else
  {
LABEL_8:
    if (v4)
      return *(_QWORD *)(a1 + 288);
  }
  if (*(_BYTE *)(a1 + 216))
    v8 = (void *)(a1 + 96);
  else
    v8 = &unk_20B5EADE8;
  sub_20B4EE2F0((uint64_t)v8, (CFStringRef *)&v16);
  v9 = v16;
  v16 = 0uLL;
  v10 = *(std::__shared_weak_count **)(a1 + 296);
  *(_OWORD *)(a1 + 288) = v9;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (!*((_QWORD *)&v16 + 1))
    return *(_QWORD *)(a1 + 288);
  v14 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
    return *(_QWORD *)(a1 + 288);
  ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
  std::__shared_weak_count::__release_weak(v13);
  return *(_QWORD *)(a1 + 288);
}

uint64_t VZPeerInfoGetDeviceType(uint64_t a1)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  __int128 v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;

  if (sub_20AF35D60((uint64_t)"VZPeerInfoGetDeviceType", a1))
    return 0;
  v4 = *(_QWORD *)(a1 + 304);
  v3 = *(std::__shared_weak_count **)(a1 + 312);
  if (!v3)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (v4)
      return *(_QWORD *)(a1 + 304);
  }
  else
  {
LABEL_8:
    if (v4)
      return *(_QWORD *)(a1 + 304);
  }
  if (*(_BYTE *)(a1 + 216))
    v8 = (void *)(a1 + 120);
  else
    v8 = &unk_20B5EADE8;
  sub_20B4EE2F0((uint64_t)v8, (CFStringRef *)&v16);
  v9 = v16;
  v16 = 0uLL;
  v10 = *(std::__shared_weak_count **)(a1 + 312);
  *(_OWORD *)(a1 + 304) = v9;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (!*((_QWORD *)&v16 + 1))
    return *(_QWORD *)(a1 + 304);
  v14 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
    return *(_QWORD *)(a1 + 304);
  ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
  std::__shared_weak_count::__release_weak(v13);
  return *(_QWORD *)(a1 + 304);
}

uint64_t VZPeerInfoGetDeviceSerialNumber(uint64_t a1)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  __int128 v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;

  if (sub_20AF35D60((uint64_t)"VZPeerInfoGetDeviceSerialNumber", a1))
    return 0;
  v4 = *(_QWORD *)(a1 + 320);
  v3 = *(std::__shared_weak_count **)(a1 + 328);
  if (!v3)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (v4)
      return *(_QWORD *)(a1 + 320);
  }
  else
  {
LABEL_8:
    if (v4)
      return *(_QWORD *)(a1 + 320);
  }
  if (*(_BYTE *)(a1 + 216))
    v8 = (void *)(a1 + 144);
  else
    v8 = &unk_20B5EADE8;
  sub_20B4EE2F0((uint64_t)v8, (CFStringRef *)&v16);
  v9 = v16;
  v16 = 0uLL;
  v10 = *(std::__shared_weak_count **)(a1 + 328);
  *(_OWORD *)(a1 + 320) = v9;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (!*((_QWORD *)&v16 + 1))
    return *(_QWORD *)(a1 + 320);
  v14 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
    return *(_QWORD *)(a1 + 320);
  ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
  std::__shared_weak_count::__release_weak(v13);
  return *(_QWORD *)(a1 + 320);
}

uint64_t VZPeerInfoGetDeviceOSBuildVersion(uint64_t a1)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  __int128 v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;

  if (sub_20AF35D60((uint64_t)"VZPeerInfoGetDeviceOSBuildVersion", a1))
    return 0;
  v4 = *(_QWORD *)(a1 + 336);
  v3 = *(std::__shared_weak_count **)(a1 + 344);
  if (!v3)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (v4)
      return *(_QWORD *)(a1 + 336);
  }
  else
  {
LABEL_8:
    if (v4)
      return *(_QWORD *)(a1 + 336);
  }
  if (*(_BYTE *)(a1 + 216))
    v8 = (void *)(a1 + 168);
  else
    v8 = &unk_20B5EADE8;
  sub_20B4EE2F0((uint64_t)v8, (CFStringRef *)&v16);
  v9 = v16;
  v16 = 0uLL;
  v10 = *(std::__shared_weak_count **)(a1 + 344);
  *(_OWORD *)(a1 + 336) = v9;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (!*((_QWORD *)&v16 + 1))
    return *(_QWORD *)(a1 + 336);
  v14 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
    return *(_QWORD *)(a1 + 336);
  ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
  std::__shared_weak_count::__release_weak(v13);
  return *(_QWORD *)(a1 + 336);
}

uint64_t VZPeerInfoGetDeviceOSProductVersion(uint64_t a1)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  __int128 v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;

  if (sub_20AF35D60((uint64_t)"VZPeerInfoGetDeviceOSProductVersion", a1))
    return 0;
  v4 = *(_QWORD *)(a1 + 352);
  v3 = *(std::__shared_weak_count **)(a1 + 360);
  if (!v3)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (v4)
      return *(_QWORD *)(a1 + 352);
  }
  else
  {
LABEL_8:
    if (v4)
      return *(_QWORD *)(a1 + 352);
  }
  if (*(_BYTE *)(a1 + 216))
    v8 = (void *)(a1 + 192);
  else
    v8 = &unk_20B5EADE8;
  sub_20B4EE2F0((uint64_t)v8, (CFStringRef *)&v16);
  v9 = v16;
  v16 = 0uLL;
  v10 = *(std::__shared_weak_count **)(a1 + 360);
  *(_OWORD *)(a1 + 352) = v9;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (!*((_QWORD *)&v16 + 1))
    return *(_QWORD *)(a1 + 352);
  v14 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
    return *(_QWORD *)(a1 + 352);
  ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
  std::__shared_weak_count::__release_weak(v13);
  return *(_QWORD *)(a1 + 352);
}

uint64_t VZPeerInfoGetProcessId(uint64_t a1)
{
  if (sub_20AF35D60((uint64_t)"VZPeerInfoGetProcessId", a1))
    return 0;
  else
    return *(unsigned int *)(a1 + 32);
}

uint64_t VZPeerInfoGetProcessName(uint64_t a1)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  __int128 v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;

  if (sub_20AF35D60((uint64_t)"VZPeerInfoGetProcessName", a1))
    return 0;
  v4 = *(_QWORD *)(a1 + 368);
  v3 = *(std::__shared_weak_count **)(a1 + 376);
  if (!v3)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (v4)
      return *(_QWORD *)(a1 + 368);
  }
  else
  {
LABEL_8:
    if (v4)
      return *(_QWORD *)(a1 + 368);
  }
  if (*(_BYTE *)(a1 + 64))
    v8 = (void *)(a1 + 40);
  else
    v8 = &unk_20B5EADE8;
  sub_20B4EE2F0((uint64_t)v8, (CFStringRef *)&v16);
  v9 = v16;
  v16 = 0uLL;
  v10 = *(std::__shared_weak_count **)(a1 + 376);
  *(_OWORD *)(a1 + 368) = v9;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (!*((_QWORD *)&v16 + 1))
    return *(_QWORD *)(a1 + 368);
  v14 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
    return *(_QWORD *)(a1 + 368);
  ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
  std::__shared_weak_count::__release_weak(v13);
  return *(_QWORD *)(a1 + 368);
}

uint64_t VZPeerInfoGetCurrentProtocolVersion(uint64_t a1)
{
  uint64_t result;
  _DWORD *v3;
  _DWORD *v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  unsigned __int8 v9;
  void **v10;
  void **v11;
  void *v12;
  unsigned __int8 v13;
  int v14;
  size_t v15;
  unint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  __int128 *v21;
  size_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  __int128 *v28;
  int v29;
  char v30[16];
  void *v31;
  char v32;
  char v33;
  void *v34;
  char v35;
  void *__p;
  char v37;
  char v38;
  char v39;
  char v40;
  void *v41;
  void **v42;
  __int128 __dst;
  uint64_t v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  if (sub_20AF35D60((uint64_t)"VZPeerInfoGetCurrentProtocolVersion", a1))
    return 0;
  result = *(_QWORD *)(a1 + 384);
  if (!result)
  {
    v3 = operator new(0x20uLL, MEMORY[0x24BEDB6B8]);
    v4 = v3;
    if (v3)
    {
      v5 = *(_QWORD *)(a1 + 224);
      v3[6] = *(_DWORD *)(a1 + 232);
      v3[7] = 1;
      *(_QWORD *)v3 = &off_24C3F44F8;
      *((_QWORD *)v3 + 1) = &unk_24C3F4548;
      *((_QWORD *)v3 + 2) = v5;
      sub_20AF2EC44((uint64_t)v3);
      v6 = v4;
      v7 = *(_QWORD *)(a1 + 384);
      *(_QWORD *)(a1 + 384) = v4;
      if (!v7)
      {
LABEL_7:
        if (v4)
          (*(void (**)(_DWORD *))(*(_QWORD *)v6 + 24))(v6);
        return *(_QWORD *)(a1 + 384);
      }
LABEL_6:
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 24))(v7);
      goto LABEL_7;
    }
    v8 = (uint64_t *)sub_20AF2F0C0();
    v9 = atomic_load((unsigned __int8 *)&qword_254639840);
    if ((v9 & 1) != 0 || !__cxa_guard_acquire(&qword_254639840))
    {
LABEL_12:
      if (byte_254639BDF < 0)
      {
        sub_20AEC60F4(&__dst, (void *)xmmword_254639BC8, *((unint64_t *)&xmmword_254639BC8 + 1));
      }
      else
      {
        __dst = xmmword_254639BC8;
        v44 = unk_254639BD8;
      }
      sub_20AEC7620(&v41, (uint64_t)&__dst, 1uLL);
      v30[0] = 0;
      v40 = 0;
      sub_20AECD798(v8, (__int128 **)&v41, (uint64_t)v30, 0);
      if (v40 && v39)
      {
        if (v38)
        {
          if (v37 < 0)
            operator delete(__p);
          if (v35 < 0)
            operator delete(v34);
        }
        if (v33 && v32 < 0)
          operator delete(v31);
      }
      v10 = (void **)v41;
      if (v41)
      {
        v11 = v42;
        v12 = v41;
        if (v42 != v41)
        {
          do
          {
            if (*((char *)v11 - 1) < 0)
              operator delete(*(v11 - 3));
            v11 -= 3;
          }
          while (v11 != v10);
          v12 = v41;
        }
        v42 = v10;
        operator delete(v12);
      }
      if (SHIBYTE(v44) < 0)
        operator delete((void *)__dst);
      v6 = 0;
      v7 = *(_QWORD *)(a1 + 384);
      *(_QWORD *)(a1 + 384) = 0;
      if (!v7)
        goto LABEL_7;
      goto LABEL_6;
    }
    v13 = atomic_load((unsigned __int8 *)&qword_254639848);
    if ((v13 & 1) != 0 || !__cxa_guard_acquire(&qword_254639848))
    {
LABEL_39:
      v14 = byte_254639BF7;
      if (byte_254639BF7 >= 0)
        v15 = byte_254639BF7;
      else
        v15 = qword_254639BE8;
      v16 = v15 + 1;
      if (v15 + 1 > 0x7FFFFFFFFFFFFFF7)
        sub_20AEC0138();
      if (v16 >= 0x17)
      {
        v18 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v16 | 7) != 0x17)
          v18 = v16 | 7;
        v19 = v18 + 1;
        v17 = (__int128 *)operator new(v18 + 1);
        *((_QWORD *)&xmmword_254639BC8 + 1) = v15 + 1;
        unk_254639BD8 = v19 | 0x8000000000000000;
        *(_QWORD *)&xmmword_254639BC8 = v17;
      }
      else
      {
        unk_254639BD8 = 0;
        xmmword_254639BC8 = 0uLL;
        v17 = &xmmword_254639BC8;
        byte_254639BDF = v15 + 1;
        if (!v15)
        {
LABEL_53:
          *(_WORD *)((char *)v17 + v15) = 38;
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639BC8, &dword_20AEBB000);
          __cxa_guard_release(&qword_254639840);
          goto LABEL_12;
        }
      }
      if (v14 >= 0)
        v20 = &qword_254639BE0;
      else
        v20 = (uint64_t *)qword_254639BE0;
      memmove(v17, v20, v15);
      goto LABEL_53;
    }
    v21 = sub_20AF2F2BC();
    v29 = *((char *)v21 + 23);
    if (v29 >= 0)
      v22 = *((unsigned __int8 *)v21 + 23);
    else
      v22 = *((_QWORD *)v21 + 1);
    v23 = v22 + 6;
    if (v22 + 6 > 0x7FFFFFFFFFFFFFF7)
      sub_20AEC0138();
    if (v23 >= 0x17)
    {
      v25 = (v23 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v23 | 7) != 0x17)
        v25 = v23 | 7;
      v26 = v25 + 1;
      v27 = (char *)operator new(v25 + 1);
      qword_254639BE8 = v22 + 6;
      unk_254639BF0 = v26 | 0x8000000000000000;
      qword_254639BE0 = (uint64_t)v27;
      *(_DWORD *)v27 = 1936617315;
      *((_WORD *)v27 + 2) = 8308;
      v24 = v27 + 6;
    }
    else
    {
      qword_254639BE8 = 0;
      unk_254639BF0 = 0;
      qword_254639BE0 = 0x2074736E6F63;
      byte_254639BF7 = v22 + 6;
      v24 = (char *)&qword_254639BE0 + 6;
      if (!v22)
      {
LABEL_70:
        v24[v22] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254639BE0, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639848);
        goto LABEL_39;
      }
    }
    if (v29 >= 0)
      v28 = v21;
    else
      v28 = *(__int128 **)v21;
    memmove(v24, v28, v22);
    goto LABEL_70;
  }
  return result;
}

void sub_20AF36F64(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_254639848);
    __cxa_guard_abort(&qword_254639840);
    sub_20AEC01C0(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t VZLoggerUpdateGetTypeID()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639A30);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254639A30))
    return qword_254639A28;
  qword_254639A28 = sub_20AECB130();
  __cxa_guard_release(&qword_254639A30);
  return qword_254639A28;
}

uint64_t VZLoggerUpdateGetEnableStateChanges(_QWORD *a1)
{
  uint64_t result;
  _QWORD *v3;
  uint64_t v4;
  const void **v5;
  uint64_t v6;
  _QWORD *v7;
  const void **v8;
  const void ***v9;
  BOOL v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unsigned __int8 v17;
  int v18;
  size_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  int v25;
  size_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __int128 *v32;
  uint64_t *v33;
  unsigned __int8 v34;
  void **v35;
  void **v36;
  void *v37;
  unsigned __int8 v38;
  int v39;
  size_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  unsigned __int8 v46;
  int v47;
  size_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  __int128 *v54;
  unsigned __int8 v55;
  unsigned __int8 v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t *v59;
  _BYTE *v60;
  size_t v61;
  uint64_t *v62;
  _BYTE *v63;
  unint64_t v64;
  size_t v65;
  __int128 *v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  unsigned __int8 v70;
  unsigned __int8 v71;
  unsigned __int8 v72;
  unsigned __int8 v73;
  uint64_t *v74;
  uint64_t v75;
  _BYTE *v76;
  size_t v77;
  uint64_t *v78;
  _BYTE *v79;
  unint64_t v80;
  size_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unsigned __int8 v85;
  unsigned __int8 v86;
  unsigned __int8 v87;
  unsigned __int8 v88;
  unsigned __int8 v89;
  uint64_t *v90;
  uint64_t v91;
  _BYTE *v92;
  size_t v93;
  uint64_t *v94;
  _BYTE *v95;
  unint64_t v96;
  size_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unsigned __int8 v101;
  unsigned __int8 v102;
  unsigned __int8 v103;
  unsigned __int8 v104;
  unsigned __int8 v105;
  uint64_t *v106;
  uint64_t v107;
  _BYTE *v108;
  size_t v109;
  uint64_t *v110;
  _BYTE *v111;
  unint64_t v112;
  size_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  unsigned __int8 v117;
  unsigned __int8 v118;
  int64x2_t v119;
  int8x16_t v120;
  void **v121;
  void **v122;
  void *v123;
  int64x2_t v124;
  int8x16_t v125;
  void **v126;
  void **v127;
  void *v128;
  int64x2_t v129;
  int8x16_t v130;
  void **v131;
  void **v132;
  void *v133;
  uint64_t *__s;
  uint64_t *__sa;
  uint64_t *__sb;
  __int128 v137;
  __int128 v138;
  void *v139;
  char v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  void *__p[2];
  uint64_t v145;
  char v146;
  char v147;
  char v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  void *v152[2];
  uint64_t v153;
  void *v154;
  void **v155;
  void *v156[2];
  uint64_t v157;
  void *v158;
  void **v159;
  void *v160[2];
  uint64_t v161;
  void *v162[2];
  uint64_t v163;
  void *v164[2];
  void *v165[3];
  uint64_t v166;
  void *v167[2];
  uint64_t v168;
  _BYTE v169[24];
  uint64_t v170;
  char v171;
  char v172;
  __int128 v173;
  uint64_t v174;
  std::string __dst;
  __int128 v176;
  uint64_t v177;
  uint64_t v178;

  v178 = *MEMORY[0x24BDAC8D0];
  if (a1)
  {
    result = a1[6];
    if (result)
      return result;
    v3 = operator new(0x30uLL, MEMORY[0x24BEDB6B8]);
    if (v3)
    {
      v4 = (uint64_t)v3;
      *v3 = off_24C3F2180;
      v150 = 0;
      v151 = 0;
      v149 = &v150;
      v5 = (const void **)a1[2];
      if (v5 == a1 + 3)
      {
        v6 = 0;
        v3[3] = 0;
        v3[4] = 0;
        v7 = v3 + 3;
      }
      else
      {
        do
        {
          sub_20AF4043C(&v149, &v150, v5 + 4, (uint64_t)(v5 + 4));
          v8 = (const void **)v5[1];
          if (v8)
          {
            do
            {
              v9 = (const void ***)v8;
              v8 = (const void **)*v8;
            }
            while (v8);
          }
          else
          {
            do
            {
              v9 = (const void ***)v5[2];
              v10 = *v9 == v5;
              v5 = (const void **)v9;
            }
            while (!v10);
          }
          v5 = (const void **)v9;
        }
        while (v9 != a1 + 3);
        v13 = v149;
        v6 = v150;
        v14 = v151;
        *(_QWORD *)(v4 + 24) = v150;
        v7 = (_QWORD *)(v4 + 24);
        *(_QWORD *)(v4 + 16) = v13;
        *(_QWORD *)(v4 + 32) = v14;
        if (v14)
        {
          *(_QWORD *)(v6 + 16) = v7;
          v149 = &v150;
          v150 = 0;
          v151 = 0;
          v6 = 0;
          goto LABEL_51;
        }
      }
      *(_QWORD *)(v4 + 16) = v7;
LABEL_51:
      sub_20AEC833C((uint64_t)&v149, (char *)v6);
      *(_DWORD *)(v4 + 40) = 1;
      *(_QWORD *)v4 = &off_24C3F3298;
      *(_QWORD *)(v4 + 8) = &unk_24C3F32E8;
      sub_20AEFEFE8(v4);
      v15 = 0;
      v16 = a1[6];
      a1[6] = v4;
      if (!v16)
      {
LABEL_53:
        if ((v15 & 1) == 0)
          (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
        return a1[6];
      }
LABEL_52:
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 24))(v16);
      goto LABEL_53;
    }
    v33 = (uint64_t *)sub_20AEFF5B0();
    v34 = atomic_load((unsigned __int8 *)&qword_254639878);
    if ((v34 & 1) != 0 || !__cxa_guard_acquire(&qword_254639878))
    {
LABEL_94:
      if (byte_254639C70[23] < 0)
        sub_20AEC60F4(&__dst, *(void **)byte_254639C70, *(unint64_t *)&byte_254639C70[8]);
      else
        __dst = *(std::string *)byte_254639C70;
      sub_20AEC7620(v164, (uint64_t)&__dst, 1uLL);
      LOBYTE(v137) = 0;
      v148 = 0;
      sub_20AECD798(v33, (__int128 **)v164, (uint64_t)&v137, 0);
      if (v148 && v147)
      {
        if (v146)
        {
          if (SHIBYTE(v145) < 0)
            operator delete(__p[0]);
          if (SHIBYTE(v142) < 0)
            operator delete((void *)v141);
        }
        if (v140 && SHIBYTE(v139) < 0)
          operator delete((void *)v138);
      }
      v35 = (void **)v164[0];
      if (v164[0])
      {
        v36 = (void **)v164[1];
        v37 = v164[0];
        if (v164[1] != v164[0])
        {
          do
          {
            if (*((char *)v36 - 1) < 0)
              operator delete(*(v36 - 3));
            v36 -= 3;
          }
          while (v36 != v35);
          v37 = v164[0];
        }
        v164[1] = v35;
        operator delete(v37);
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__dst.__r_.__value_.__l.__data_);
        v4 = 0;
        v15 = 1;
        v16 = a1[6];
        a1[6] = 0;
        if (!v16)
          goto LABEL_53;
      }
      else
      {
        v4 = 0;
        v15 = 1;
        v16 = a1[6];
        a1[6] = 0;
        if (!v16)
          goto LABEL_53;
      }
      goto LABEL_52;
    }
    v38 = atomic_load((unsigned __int8 *)&qword_254639880);
    if ((v38 & 1) != 0 || !__cxa_guard_acquire(&qword_254639880))
    {
LABEL_122:
      v39 = byte_254639C9F;
      if (byte_254639C9F >= 0)
        v40 = byte_254639C9F;
      else
        v40 = qword_254639C90;
      v41 = v40 + 1;
      if (v40 + 1 > 0x7FFFFFFFFFFFFFF7)
        sub_20AEC0138();
      if (v41 >= 0x17)
      {
        v43 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v41 | 7) != 0x17)
          v43 = v41 | 7;
        v44 = v43 + 1;
        v42 = (char *)operator new(v43 + 1);
        *(_QWORD *)&byte_254639C70[8] = v40 + 1;
        *(_QWORD *)&byte_254639C70[16] = v44 | 0x8000000000000000;
        *(_QWORD *)byte_254639C70 = v42;
      }
      else
      {
        *(_QWORD *)&byte_254639C70[16] = 0;
        *(_OWORD *)byte_254639C70 = 0uLL;
        v42 = byte_254639C70;
        byte_254639C70[23] = v40 + 1;
        if (!v40)
        {
LABEL_136:
          *(_WORD *)&v42[v40] = 38;
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254639C70, &dword_20AEBB000);
          __cxa_guard_release(&qword_254639878);
          goto LABEL_94;
        }
      }
      if (v39 >= 0)
        v45 = &qword_254639C88;
      else
        v45 = (uint64_t *)qword_254639C88;
      memmove(v42, v45, v40);
      goto LABEL_136;
    }
    v46 = atomic_load((unsigned __int8 *)&qword_254639888);
    if ((v46 & 1) != 0 || !__cxa_guard_acquire(&qword_254639888))
    {
LABEL_139:
      v47 = byte_254639CB7;
      if (byte_254639CB7 >= 0)
        v48 = byte_254639CB7;
      else
        v48 = *((_QWORD *)&xmmword_254639CA0 + 1);
      v49 = v48 + 6;
      if (v48 + 6 > 0x7FFFFFFFFFFFFFF7)
        sub_20AEC0138();
      if (v49 >= 0x17)
      {
        v51 = (v49 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v49 | 7) != 0x17)
          v51 = v49 | 7;
        v52 = v51 + 1;
        v53 = (char *)operator new(v51 + 1);
        qword_254639C90 = v48 + 6;
        unk_254639C98 = v52 | 0x8000000000000000;
        qword_254639C88 = (uint64_t)v53;
        *(_DWORD *)v53 = 1936617315;
        *((_WORD *)v53 + 2) = 8308;
        v50 = v53 + 6;
      }
      else
      {
        qword_254639C90 = 0;
        unk_254639C98 = 0;
        qword_254639C88 = 0x2074736E6F63;
        byte_254639C9F = v48 + 6;
        v50 = (char *)&qword_254639C88 + 6;
        if (!v48)
        {
LABEL_154:
          v50[v48] = 0;
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254639C88, &dword_20AEBB000);
          __cxa_guard_release(&qword_254639880);
          goto LABEL_122;
        }
      }
      if (v47 >= 0)
        v54 = &xmmword_254639CA0;
      else
        v54 = (__int128 *)xmmword_254639CA0;
      memmove(v50, v54, v48);
      goto LABEL_154;
    }
    v55 = atomic_load((unsigned __int8 *)&qword_254639890);
    if ((v55 & 1) != 0 || !__cxa_guard_acquire(&qword_254639890))
    {
LABEL_422:
      if (byte_254639CCF < 0)
      {
        sub_20AEC60F4(&xmmword_254639CA0, (void *)qword_254639CB8, unk_254639CC0);
      }
      else
      {
        xmmword_254639CA0 = *(_OWORD *)&qword_254639CB8;
        unk_254639CB0 = unk_254639CC8;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639CA0, &dword_20AEBB000);
      __cxa_guard_release(&qword_254639888);
      goto LABEL_139;
    }
    v56 = atomic_load((unsigned __int8 *)&qword_254639930);
    if ((v56 & 1) == 0 && __cxa_guard_acquire(&qword_254639930))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::map<std::string, cv3d::kit::viz::EnableState>]", &qword_254639E98);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254639E98, &dword_20AEBB000);
      __cxa_guard_release(&qword_254639930);
    }
    v57 = atomic_load((unsigned __int8 *)&qword_254639938);
    if ((v57 & 1) != 0 || !__cxa_guard_acquire(&qword_254639938))
    {
LABEL_191:
      v69 = atomic_load((unsigned __int8 *)&qword_254639940);
      if ((v69 & 1) == 0 && __cxa_guard_acquire(&qword_254639940))
      {
        if (byte_254639EC7 < 0)
        {
          sub_20AEC60F4(v164, (void *)xmmword_254639EB0, *((unint64_t *)&xmmword_254639EB0 + 1));
        }
        else
        {
          *(_OWORD *)v164 = xmmword_254639EB0;
          v165[0] = (void *)unk_254639EC0;
        }
        sub_20B52B814((std::string *)v164, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254639EC8);
        if (SHIBYTE(v165[0]) < 0)
          operator delete(v164[0]);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639EC8, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639940);
      }
      if (byte_254639EDF < 0)
      {
        sub_20AEC60F4(v152, (void *)xmmword_254639EC8, *((unint64_t *)&xmmword_254639EC8 + 1));
      }
      else
      {
        *(_OWORD *)v152 = xmmword_254639EC8;
        v153 = unk_254639ED8;
      }
      *(_OWORD *)v164 = *(_OWORD *)"std::string";
      v165[0] = (void *)0xB00000000000000;
      sub_20AF408E0();
      if (byte_254639CE7 < 0)
      {
        sub_20AEC60F4(&v165[1], (void *)xmmword_254639CD0, *((unint64_t *)&xmmword_254639CD0 + 1));
      }
      else
      {
        *(_OWORD *)&v165[1] = xmmword_254639CD0;
        v166 = unk_254639CE0;
      }
      v70 = atomic_load((unsigned __int8 *)&qword_2546398B0);
      if ((v70 & 1) != 0 || !__cxa_guard_acquire(&qword_2546398B0))
      {
LABEL_258:
        if (SHIBYTE(qword_254639D28) < 0)
        {
          sub_20AEC60F4(v167, (void *)xmmword_254639D18, *((unint64_t *)&xmmword_254639D18 + 1));
        }
        else
        {
          *(_OWORD *)v167 = xmmword_254639D18;
          v168 = qword_254639D28;
        }
        v86 = atomic_load((unsigned __int8 *)&qword_2546398D8);
        if ((v86 & 1) != 0 || !__cxa_guard_acquire(&qword_2546398D8))
        {
LABEL_400:
          if (SHIBYTE(qword_254639DA0) < 0)
          {
            sub_20AEC60F4(v169, (void *)xmmword_254639D90, *((unint64_t *)&xmmword_254639D90 + 1));
          }
          else
          {
            *(_OWORD *)v169 = xmmword_254639D90;
            *(_QWORD *)&v169[16] = qword_254639DA0;
          }
          sub_20AEC7620(&v154, (uint64_t)v164, 4uLL);
          sub_20B53170C((char *)v152, (uint64_t *)&v154, (std::string *)&qword_254639CB8, v129, v130);
          v131 = (void **)v154;
          if (v154)
          {
            v132 = v155;
            v133 = v154;
            if (v155 != v154)
            {
              do
              {
                if (*((char *)v132 - 1) < 0)
                  operator delete(*(v132 - 3));
                v132 -= 3;
              }
              while (v132 != v131);
              v133 = v154;
            }
            v155 = v131;
            operator delete(v133);
          }
          if ((v169[23] & 0x80000000) != 0)
          {
            operator delete(*(void **)v169);
            if (SHIBYTE(v168) < 0)
            {
LABEL_412:
              operator delete(v167[0]);
              if ((SHIBYTE(v166) & 0x80000000) == 0)
                goto LABEL_413;
              goto LABEL_418;
            }
          }
          else if (SHIBYTE(v168) < 0)
          {
            goto LABEL_412;
          }
          if ((SHIBYTE(v166) & 0x80000000) == 0)
          {
LABEL_413:
            if (SHIBYTE(v165[0]) < 0)
              goto LABEL_414;
            goto LABEL_419;
          }
LABEL_418:
          operator delete(v165[1]);
          if (SHIBYTE(v165[0]) < 0)
          {
LABEL_414:
            operator delete(v164[0]);
            if (SHIBYTE(v153) < 0)
              goto LABEL_420;
            goto LABEL_421;
          }
LABEL_419:
          if (SHIBYTE(v153) < 0)
LABEL_420:
            operator delete(v152[0]);
LABEL_421:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254639CB8, &dword_20AEBB000);
          __cxa_guard_release(&qword_254639890);
          goto LABEL_422;
        }
        v87 = atomic_load((unsigned __int8 *)&qword_2546398E0);
        if ((v87 & 1) != 0 || !__cxa_guard_acquire(&qword_2546398E0))
        {
LABEL_396:
          if (byte_254639DBF < 0)
          {
            sub_20AEC60F4(&xmmword_254639D90, (void *)qword_254639DA8, unk_254639DB0);
          }
          else
          {
            xmmword_254639D90 = *(_OWORD *)&qword_254639DA8;
            qword_254639DA0 = unk_254639DB8;
          }
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639D90, &dword_20AEBB000);
          __cxa_guard_release(&qword_2546398D8);
          goto LABEL_400;
        }
        v88 = atomic_load((unsigned __int8 *)&qword_254639918);
        if ((v88 & 1) == 0 && __cxa_guard_acquire(&qword_254639918))
        {
          sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::allocator<std::pair<const std::string, cv3d::kit::viz::EnableState>>]", &qword_254639E50);
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254639E50, &dword_20AEBB000);
          __cxa_guard_release(&qword_254639918);
        }
        v89 = atomic_load((unsigned __int8 *)&qword_254639920);
        if ((v89 & 1) != 0 || !__cxa_guard_acquire(&qword_254639920))
        {
LABEL_296:
          v101 = atomic_load((unsigned __int8 *)&qword_254639928);
          if ((v101 & 1) == 0 && __cxa_guard_acquire(&qword_254639928))
          {
            if (byte_254639E68[23] < 0)
              sub_20AEC60F4(&__dst, *(void **)byte_254639E68, *(unint64_t *)&byte_254639E68[8]);
            else
              __dst = *(std::string *)byte_254639E68;
            sub_20B52B814(&__dst, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254639E80);
            if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__dst.__r_.__value_.__l.__data_);
            __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639E80, &dword_20AEBB000);
            __cxa_guard_release(&qword_254639928);
          }
          if (byte_254639E97 < 0)
          {
            sub_20AEC60F4(v156, (void *)xmmword_254639E80, *((unint64_t *)&xmmword_254639E80 + 1));
          }
          else
          {
            *(_OWORD *)v156 = xmmword_254639E80;
            v157 = unk_254639E90;
          }
          v102 = atomic_load((unsigned __int8 *)&qword_2546398E8);
          if ((v102 & 1) != 0 || !__cxa_guard_acquire(&qword_2546398E8))
            goto LABEL_381;
          v103 = atomic_load((unsigned __int8 *)&qword_2546398F0);
          if ((v103 & 1) != 0 || !__cxa_guard_acquire(&qword_2546398F0))
          {
LABEL_377:
            if (byte_254639DEF < 0)
            {
              sub_20AEC60F4(&xmmword_254639DC0, (void *)qword_254639DD8, unk_254639DE0);
            }
            else
            {
              xmmword_254639DC0 = *(_OWORD *)&qword_254639DD8;
              qword_254639DD0 = unk_254639DE8;
            }
            __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639DC0, &dword_20AEBB000);
            __cxa_guard_release(&qword_2546398E8);
LABEL_381:
            if (SHIBYTE(qword_254639DD0) < 0)
            {
              sub_20AEC60F4(&v173, (void *)xmmword_254639DC0, *((unint64_t *)&xmmword_254639DC0 + 1));
            }
            else
            {
              v173 = xmmword_254639DC0;
              v174 = qword_254639DD0;
            }
            sub_20AEC7620(&v158, (uint64_t)&v173, 1uLL);
            sub_20B53170C((char *)v156, (uint64_t *)&v158, (std::string *)&qword_254639DA8, v124, v125);
            v126 = (void **)v158;
            if (v158)
            {
              v127 = v159;
              v128 = v158;
              if (v159 != v158)
              {
                do
                {
                  if (*((char *)v127 - 1) < 0)
                    operator delete(*(v127 - 3));
                  v127 -= 3;
                }
                while (v127 != v126);
                v128 = v158;
              }
              v159 = v126;
              operator delete(v128);
            }
            if (SHIBYTE(v174) < 0)
              operator delete((void *)v173);
            if (SHIBYTE(v157) < 0)
              operator delete(v156[0]);
            __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254639DA8, &dword_20AEBB000);
            __cxa_guard_release(&qword_2546398E0);
            goto LABEL_396;
          }
          v104 = atomic_load((unsigned __int8 *)&qword_254639900);
          if ((v104 & 1) == 0 && __cxa_guard_acquire(&qword_254639900))
          {
            sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::pair<const std::string, cv3d::kit::viz::EnableState>]", &qword_254639E08);
            __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254639E08, &dword_20AEBB000);
            __cxa_guard_release(&qword_254639900);
          }
          v105 = atomic_load((unsigned __int8 *)&qword_254639908);
          if ((v105 & 1) != 0 || !__cxa_guard_acquire(&qword_254639908))
          {
LABEL_342:
            v117 = atomic_load((unsigned __int8 *)&qword_254639910);
            if ((v117 & 1) == 0 && __cxa_guard_acquire(&qword_254639910))
            {
              if (byte_254639E20[23] < 0)
                sub_20AEC60F4(&__dst, *(void **)byte_254639E20, *(unint64_t *)&byte_254639E20[8]);
              else
                __dst = *(std::string *)byte_254639E20;
              sub_20B52B814(&__dst, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254639E38);
              if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
                operator delete(__dst.__r_.__value_.__l.__data_);
              __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639E38, &dword_20AEBB000);
              __cxa_guard_release(&qword_254639910);
            }
            if (byte_254639E4F < 0)
            {
              sub_20AEC60F4(v160, (void *)xmmword_254639E38, *((unint64_t *)&xmmword_254639E38 + 1));
            }
            else
            {
              *(_OWORD *)v160 = xmmword_254639E38;
              v161 = unk_254639E48;
            }
            v118 = atomic_load((unsigned __int8 *)&qword_2546398F8);
            if ((v118 & 1) == 0 && __cxa_guard_acquire(&qword_2546398F8))
            {
              byte_254639DF0[17] = 0;
              *(_WORD *)&byte_254639DF0[18] = 0;
              *(_DWORD *)&byte_254639DF0[20] = 285212672;
              strcpy(byte_254639DF0, "const std::strin");
              __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254639DF0, &dword_20AEBB000);
              __cxa_guard_release(&qword_2546398F8);
            }
            if (byte_254639DF0[23] < 0)
              sub_20AEC60F4(&__dst, *(void **)byte_254639DF0, *(unint64_t *)&byte_254639DF0[8]);
            else
              __dst = *(std::string *)byte_254639DF0;
            sub_20AF408E0();
            if (byte_254639CE7 < 0)
            {
              sub_20AEC60F4(&v176, (void *)xmmword_254639CD0, *((unint64_t *)&xmmword_254639CD0 + 1));
            }
            else
            {
              v176 = xmmword_254639CD0;
              v177 = unk_254639CE0;
            }
            sub_20AEC7620(v162, (uint64_t)&__dst, 2uLL);
            sub_20B53170C((char *)v160, (uint64_t *)v162, (std::string *)&qword_254639DD8, v119, v120);
            v121 = (void **)v162[0];
            if (v162[0])
            {
              v122 = (void **)v162[1];
              v123 = v162[0];
              if (v162[1] != v162[0])
              {
                do
                {
                  if (*((char *)v122 - 1) < 0)
                    operator delete(*(v122 - 3));
                  v122 -= 3;
                }
                while (v122 != v121);
                v123 = v162[0];
              }
              v162[1] = v121;
              operator delete(v123);
            }
            if (SHIBYTE(v177) < 0)
            {
              operator delete((void *)v176);
              if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
              {
LABEL_371:
                operator delete(__dst.__r_.__value_.__l.__data_);
                if (SHIBYTE(v161) < 0)
                  goto LABEL_375;
                goto LABEL_376;
              }
            }
            else if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
            {
              goto LABEL_371;
            }
            if (SHIBYTE(v161) < 0)
LABEL_375:
              operator delete(v160[0]);
LABEL_376:
            __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254639DD8, &dword_20AEBB000);
            __cxa_guard_release(&qword_2546398F0);
            goto LABEL_377;
          }
          v106 = &qword_254639E08;
          if (byte_254639E1F >= 0)
            v107 = byte_254639E1F;
          else
            v107 = unk_254639E10;
          if (byte_254639E1F < 0)
            v106 = (uint64_t *)qword_254639E08;
          __sb = v106;
          v108 = (char *)v106 + v107;
          if (v107 >= 1)
          {
            v109 = v107;
            v110 = v106;
            do
            {
              v111 = memchr(v110, 60, v109);
              if (!v111)
                break;
              if (*v111 == 60)
                goto LABEL_327;
              v110 = (uint64_t *)(v111 + 1);
              v109 = v108 - (_BYTE *)v110;
            }
            while (v108 - (_BYTE *)v110 > 0);
          }
          v111 = v108;
LABEL_327:
          v112 = v111 - (_BYTE *)__sb;
          if (v111 == v108)
            v112 = -1;
          if (v107 >= v112)
            v113 = v112;
          else
            v113 = v107;
          if (v113 > 0x7FFFFFFFFFFFFFF7)
            sub_20AEC0138();
          if (v113 >= 0x17)
          {
            v115 = (v113 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v113 | 7) != 0x17)
              v115 = v113 | 7;
            v116 = v115 + 1;
            v114 = (char *)operator new(v115 + 1);
            *(_QWORD *)&byte_254639E20[8] = v113;
            *(_QWORD *)&byte_254639E20[16] = v116 | 0x8000000000000000;
            *(_QWORD *)byte_254639E20 = v114;
          }
          else
          {
            v114 = byte_254639E20;
            byte_254639E20[23] = v113;
            if (!v113)
              goto LABEL_341;
          }
          memmove(v114, __sb, v113);
LABEL_341:
          v114[v113] = 0;
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254639E20, &dword_20AEBB000);
          __cxa_guard_release(&qword_254639908);
          goto LABEL_342;
        }
        v90 = &qword_254639E50;
        if (byte_254639E67 >= 0)
          v91 = byte_254639E67;
        else
          v91 = unk_254639E58;
        if (byte_254639E67 < 0)
          v90 = (uint64_t *)qword_254639E50;
        __sa = v90;
        v92 = (char *)v90 + v91;
        if (v91 >= 1)
        {
          v93 = v91;
          v94 = v90;
          do
          {
            v95 = memchr(v94, 60, v93);
            if (!v95)
              break;
            if (*v95 == 60)
              goto LABEL_281;
            v94 = (uint64_t *)(v95 + 1);
            v93 = v92 - (_BYTE *)v94;
          }
          while (v92 - (_BYTE *)v94 > 0);
        }
        v95 = v92;
LABEL_281:
        v96 = v95 - (_BYTE *)__sa;
        if (v95 == v92)
          v96 = -1;
        if (v91 >= v96)
          v97 = v96;
        else
          v97 = v91;
        if (v97 > 0x7FFFFFFFFFFFFFF7)
          sub_20AEC0138();
        if (v97 >= 0x17)
        {
          v99 = (v97 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v97 | 7) != 0x17)
            v99 = v97 | 7;
          v100 = v99 + 1;
          v98 = (char *)operator new(v99 + 1);
          *(_QWORD *)&byte_254639E68[8] = v97;
          *(_QWORD *)&byte_254639E68[16] = v100 | 0x8000000000000000;
          *(_QWORD *)byte_254639E68 = v98;
        }
        else
        {
          v98 = byte_254639E68;
          byte_254639E68[23] = v97;
          if (!v97)
            goto LABEL_295;
        }
        memmove(v98, __sa, v97);
LABEL_295:
        v98[v97] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254639E68, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639920);
        goto LABEL_296;
      }
      v71 = atomic_load((unsigned __int8 *)&qword_2546398B8);
      if ((v71 & 1) != 0 || !__cxa_guard_acquire(&qword_2546398B8))
      {
LABEL_254:
        if (byte_254639D47 < 0)
        {
          sub_20AEC60F4(&xmmword_254639D18, (void *)qword_254639D30, unk_254639D38);
        }
        else
        {
          xmmword_254639D18 = *(_OWORD *)&qword_254639D30;
          qword_254639D28 = unk_254639D40;
        }
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639D18, &dword_20AEBB000);
        __cxa_guard_release(&qword_2546398B0);
        goto LABEL_258;
      }
      v72 = atomic_load((unsigned __int8 *)&qword_2546398C0);
      if ((v72 & 1) == 0 && __cxa_guard_acquire(&qword_2546398C0))
      {
        sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::less<std::string>]", &qword_254639D48);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254639D48, &dword_20AEBB000);
        __cxa_guard_release(&qword_2546398C0);
      }
      v73 = atomic_load((unsigned __int8 *)&qword_2546398C8);
      if ((v73 & 1) != 0 || !__cxa_guard_acquire(&qword_2546398C8))
      {
LABEL_240:
        v85 = atomic_load((unsigned __int8 *)&qword_2546398D0);
        if ((v85 & 1) == 0 && __cxa_guard_acquire(&qword_2546398D0))
        {
          if (byte_254639D60[23] < 0)
            sub_20AEC60F4(&__dst, *(void **)byte_254639D60, *(unint64_t *)&byte_254639D60[8]);
          else
            __dst = *(std::string *)byte_254639D60;
          sub_20B52B814(&__dst, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254639D78);
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__dst.__r_.__value_.__l.__data_);
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639D78, &dword_20AEBB000);
          __cxa_guard_release(&qword_2546398D0);
        }
        if (byte_254639D8F < 0)
        {
          sub_20AEC60F4(v162, (void *)xmmword_254639D78, *((unint64_t *)&xmmword_254639D78 + 1));
        }
        else
        {
          *(_OWORD *)v162 = xmmword_254639D78;
          v163 = unk_254639D88;
        }
        sub_20AEE8D1C((char *)v162, (std::string *)&qword_254639D30);
        if (SHIBYTE(v163) < 0)
          operator delete(v162[0]);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254639D30, &dword_20AEBB000);
        __cxa_guard_release(&qword_2546398B8);
        goto LABEL_254;
      }
      v74 = &qword_254639D48;
      if (byte_254639D5F >= 0)
        v75 = byte_254639D5F;
      else
        v75 = unk_254639D50;
      if (byte_254639D5F < 0)
        v74 = (uint64_t *)qword_254639D48;
      __s = v74;
      v76 = (char *)v74 + v75;
      if (v75 >= 1)
      {
        v77 = v75;
        v78 = v74;
        do
        {
          v79 = memchr(v78, 60, v77);
          if (!v79)
            break;
          if (*v79 == 60)
            goto LABEL_225;
          v78 = (uint64_t *)(v79 + 1);
          v77 = v76 - (_BYTE *)v78;
        }
        while (v76 - (_BYTE *)v78 > 0);
      }
      v79 = v76;
LABEL_225:
      v80 = v79 - (_BYTE *)__s;
      if (v79 == v76)
        v80 = -1;
      if (v75 >= v80)
        v81 = v80;
      else
        v81 = v75;
      if (v81 > 0x7FFFFFFFFFFFFFF7)
        sub_20AEC0138();
      if (v81 >= 0x17)
      {
        v83 = (v81 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v81 | 7) != 0x17)
          v83 = v81 | 7;
        v84 = v83 + 1;
        v82 = (char *)operator new(v83 + 1);
        *(_QWORD *)&byte_254639D60[8] = v81;
        *(_QWORD *)&byte_254639D60[16] = v84 | 0x8000000000000000;
        *(_QWORD *)byte_254639D60 = v82;
      }
      else
      {
        v82 = byte_254639D60;
        byte_254639D60[23] = v81;
        if (!v81)
          goto LABEL_239;
      }
      memmove(v82, __s, v81);
LABEL_239:
      v82[v81] = 0;
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254639D60, &dword_20AEBB000);
      __cxa_guard_release(&qword_2546398C8);
      goto LABEL_240;
    }
    if (byte_254639EAF >= 0)
      v58 = byte_254639EAF;
    else
      v58 = unk_254639EA0;
    if (byte_254639EAF >= 0)
      v59 = &qword_254639E98;
    else
      v59 = (uint64_t *)qword_254639E98;
    v60 = (char *)v59 + v58;
    if (v58 >= 1)
    {
      v61 = v58;
      v62 = v59;
      do
      {
        v63 = memchr(v62, 60, v61);
        if (!v63)
          break;
        if (*v63 == 60)
          goto LABEL_175;
        v62 = (uint64_t *)(v63 + 1);
        v61 = v60 - (_BYTE *)v62;
      }
      while (v60 - (_BYTE *)v62 > 0);
    }
    v63 = (char *)v59 + v58;
LABEL_175:
    v64 = v63 - (_BYTE *)v59;
    if (v63 == v60)
      v64 = -1;
    if (v58 >= v64)
      v65 = v64;
    else
      v65 = v58;
    if (v65 > 0x7FFFFFFFFFFFFFF7)
      sub_20AEC0138();
    if (v65 >= 0x17)
    {
      v67 = (v65 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v65 | 7) != 0x17)
        v67 = v65 | 7;
      v68 = v67 + 1;
      v66 = (__int128 *)operator new(v67 + 1);
      *((_QWORD *)&xmmword_254639EB0 + 1) = v65;
      unk_254639EC0 = v68 | 0x8000000000000000;
      *(_QWORD *)&xmmword_254639EB0 = v66;
    }
    else
    {
      v66 = &xmmword_254639EB0;
      byte_254639EC7 = v65;
      if (!v65)
        goto LABEL_190;
    }
    memmove(v66, v59, v65);
LABEL_190:
    *((_BYTE *)v66 + v65) = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639EB0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639938);
    goto LABEL_191;
  }
  v11 = atomic_load((unsigned __int8 *)&qword_254639A38);
  if ((v11 & 1) == 0 && __cxa_guard_acquire(&qword_254639A38))
  {
    v17 = atomic_load((unsigned __int8 *)&qword_254639A40);
    if ((v17 & 1) != 0 || !__cxa_guard_acquire(&qword_254639A40))
      goto LABEL_58;
    sub_20AF4280C();
    v25 = byte_25463A05F;
    if (byte_25463A05F >= 0)
      v26 = byte_25463A05F;
    else
      v26 = *((_QWORD *)&xmmword_25463A048 + 1);
    v27 = v26 + 6;
    if (v26 + 6 > 0x7FFFFFFFFFFFFFF7)
      sub_20AEC0138();
    if (v27 >= 0x17)
    {
      v29 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v27 | 7) != 0x17)
        v29 = v27 | 7;
      v30 = v29 + 1;
      v31 = (char *)operator new(v29 + 1);
      qword_25463A140 = v26 + 6;
      unk_25463A148 = v30 | 0x8000000000000000;
      qword_25463A138 = (uint64_t)v31;
      *(_DWORD *)v31 = 1936617315;
      *((_WORD *)v31 + 2) = 8308;
      v28 = v31 + 6;
    }
    else
    {
      qword_25463A140 = 0;
      unk_25463A148 = 0;
      qword_25463A138 = 0x2074736E6F63;
      byte_25463A14F = v26 + 6;
      v28 = (char *)&qword_25463A138 + 6;
      if (!v26)
      {
LABEL_91:
        v28[v26] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A138, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639A40);
LABEL_58:
        v18 = byte_25463A14F;
        if (byte_25463A14F >= 0)
          v19 = byte_25463A14F;
        else
          v19 = qword_25463A140;
        v20 = v19 + 1;
        if (v19 + 1 > 0x7FFFFFFFFFFFFFF7)
          sub_20AEC0138();
        if (v20 >= 0x17)
        {
          v22 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v20 | 7) != 0x17)
            v22 = v20 | 7;
          v23 = v22 + 1;
          v21 = (char *)operator new(v22 + 1);
          *(_QWORD *)&byte_25463A120[8] = v19 + 1;
          *(_QWORD *)&byte_25463A120[16] = v23 | 0x8000000000000000;
          *(_QWORD *)byte_25463A120 = v21;
        }
        else
        {
          v21 = byte_25463A120;
          *(_QWORD *)&byte_25463A120[16] = 0;
          *(_OWORD *)byte_25463A120 = 0uLL;
          byte_25463A120[23] = v19 + 1;
          if (!v19)
          {
LABEL_74:
            *(_WORD *)&v21[v19] = 42;
            __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_25463A120, &dword_20AEBB000);
            __cxa_guard_release(&qword_254639A38);
            goto LABEL_14;
          }
        }
        if (v18 >= 0)
          v24 = &qword_25463A138;
        else
          v24 = (uint64_t *)qword_25463A138;
        memmove(v21, v24, v19);
        goto LABEL_74;
      }
    }
    if (v25 >= 0)
      v32 = &xmmword_25463A048;
    else
      v32 = (__int128 *)xmmword_25463A048;
    memmove(v28, v32, v26);
    goto LABEL_91;
  }
LABEL_14:
  if (byte_25463A120[23] < 0)
    sub_20AEC60F4(&__dst, *(void **)byte_25463A120, *(unint64_t *)&byte_25463A120[8]);
  else
    __dst = *(std::string *)byte_25463A120;
  LOBYTE(v176) = 1;
  sub_20AECCECC((uint64_t)"VZLoggerUpdateGetEnableStateChanges", (uint64_t)&__dst, (uint64_t)v164);
  v137 = *(_OWORD *)v164;
  LOBYTE(v138) = 0;
  v147 = 0;
  if (v172)
  {
    v140 = 0;
    if ((_BYTE)v166)
    {
      v138 = *(_OWORD *)v165;
      v139 = v165[2];
      memset(v165, 0, sizeof(v165));
      v140 = 1;
    }
    LOBYTE(v141) = 0;
    v146 = 0;
    if (v171)
    {
      v142 = v168;
      v141 = *(_OWORD *)v167;
      v167[0] = 0;
      v167[1] = 0;
      v143 = *(_QWORD *)v169;
      *(_OWORD *)__p = *(_OWORD *)&v169[8];
      v145 = v170;
      v168 = 0;
      *(_QWORD *)&v169[8] = 0;
      *(_QWORD *)&v169[16] = 0;
      v170 = 0;
      v146 = 1;
    }
    v147 = 1;
  }
  v148 = 0;
  v12 = atomic_load((unsigned __int8 *)&qword_254630258);
  if ((v12 & 1) == 0 && __cxa_guard_acquire(&qword_254630258))
  {
    __cxa_atexit((void (*)(void *))sub_20AECE2D8, &unk_254630168, &dword_20AEBB000);
    __cxa_guard_release(&qword_254630258);
  }
  sub_20AECB50C((uint64_t)&unk_254630168, &v137);
  if (!v148 && v147)
  {
    if (v146)
    {
      if (SHIBYTE(v145) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v142) < 0)
        operator delete((void *)v141);
    }
    if (v140 && SHIBYTE(v139) < 0)
      operator delete((void *)v138);
  }
  if (v172)
  {
    if (v171)
    {
      if (SHIBYTE(v170) < 0)
        operator delete(*(void **)&v169[8]);
      if (SHIBYTE(v168) < 0)
        operator delete(v167[0]);
    }
    if ((_BYTE)v166 && SHIBYTE(v165[2]) < 0)
      operator delete(v165[0]);
  }
  if ((_BYTE)v176 && SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  return 0;
}

void sub_20AF38BD4(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_254639888);
    __cxa_guard_abort(&qword_254639880);
    __cxa_guard_abort(&qword_254639878);
    sub_20AEC01C0(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF39074(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_254639878);
    sub_20AEC01C0(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF39090(void *a1, int a2)
{
  if (!a2)
    JUMPOUT(0x20AF3909CLL);
  sub_20AEC01C0(a1);
}

uint64_t VZServerOptionsGetTypeID()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639A50);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254639A50))
    return qword_254639A48;
  qword_254639A48 = sub_20AECB130();
  __cxa_guard_release(&qword_254639A50);
  return qword_254639A48;
}

_OWORD *VZServerOptionsCreate()
{
  _OWORD *v0;
  _OWORD *v1;
  __int128 *v3;
  __int128 *v4;
  __int128 *v5;
  char v6[16];
  void *v7;
  char v8;
  char v9;
  void *v10;
  char v11;
  void *__p;
  char v13;
  char v14;
  char v15;
  char v16;
  __int128 *v17;
  __int128 *v18;
  uint64_t v19;

  v0 = operator new(0xA0uLL, MEMORY[0x24BEDB6B8]);
  if (v0)
  {
    v1 = v0;
    *v0 = 0u;
    v0[8] = 0u;
    v0[9] = 0u;
    v0[6] = 0u;
    v0[7] = 0u;
    v0[4] = 0u;
    v0[5] = 0u;
    v0[2] = 0u;
    v0[3] = 0u;
    v0[1] = 0u;
    *(_QWORD *)v0 = off_24C3F2180;
    sub_20B09C4B8((uint64_t)(v0 + 1));
    *((_DWORD *)v1 + 38) = 1;
    *(_QWORD *)v1 = &off_24C3F49E8;
    *((_QWORD *)v1 + 1) = &unk_24C3F4A38;
    return v1;
  }
  else
  {
    sub_20AF43048();
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v6[0] = 0;
    v16 = 0;
    sub_20AECD798((uint64_t *)&xmmword_25463A150, &v17, (uint64_t)v6, 0);
    if (v16 && v15)
    {
      if (v14)
      {
        if (v13 < 0)
          operator delete(__p);
        if (v11 < 0)
          operator delete(v10);
      }
      if (v9 && v8 < 0)
        operator delete(v7);
    }
    v3 = v17;
    if (v17)
    {
      v4 = v18;
      v5 = v17;
      if (v18 != v17)
      {
        do
        {
          if (*((char *)v4 - 1) < 0)
            operator delete(*((void **)v4 - 3));
          v4 = (__int128 *)((char *)v4 - 24);
        }
        while (v4 != v3);
        v5 = v17;
      }
      v18 = v3;
      operator delete(v5);
    }
    return 0;
  }
}

BOOL VZServerOptionsSetTcpIpPort(uint64_t a1, unsigned int a2)
{
  _BOOL8 result;

  result = sub_20AF392F4((uint64_t)"VZServerOptionsSetTcpIpPort", a1);
  if (!result)
  {
    if (a2)
    {
      if (!*(_BYTE *)(a1 + 24))
        *(_BYTE *)(a1 + 24) = 1;
      *(_QWORD *)(a1 + 16) = a2;
    }
    else if (*(_BYTE *)(a1 + 24))
    {
      *(_BYTE *)(a1 + 24) = 0;
    }
  }
  return result;
}

BOOL sub_20AF392F4(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4;
  unsigned __int8 v5;
  int v7;
  size_t v8;
  unint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  void *v14[2];
  uint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  void *v21[2];
  uint64_t v22;
  uint64_t v23;
  void *v24[2];
  uint64_t v25;
  char v26;
  char v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  void *__p[2];
  uint64_t v36;
  char v37;
  char v38;
  char v39;

  if (a2)
    return a2 == 0;
  v4 = atomic_load((unsigned __int8 *)&qword_254639A70);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254639A70))
  {
    sub_20AF43048();
    v7 = byte_25463A167;
    if (byte_25463A167 >= 0)
      v8 = byte_25463A167;
    else
      v8 = *((_QWORD *)&xmmword_25463A150 + 1);
    v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v9 >= 0x17)
    {
      v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17)
        v11 = v9 | 7;
      v12 = v11 + 1;
      v10 = (__int128 *)operator new(v11 + 1);
      *((_QWORD *)&xmmword_25463A198 + 1) = v8 + 1;
      unk_25463A1A8 = v12 | 0x8000000000000000;
      *(_QWORD *)&xmmword_25463A198 = v10;
    }
    else
    {
      unk_25463A1A8 = 0;
      xmmword_25463A198 = 0uLL;
      v10 = &xmmword_25463A198;
      byte_25463A1AF = v8 + 1;
      if (!v8)
      {
LABEL_53:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A198, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639A70);
        goto LABEL_3;
      }
    }
    if (v7 >= 0)
      v13 = &xmmword_25463A150;
    else
      v13 = (__int128 *)xmmword_25463A150;
    memmove(v10, v13, v8);
    goto LABEL_53;
  }
LABEL_3:
  if (byte_25463A1AF < 0)
  {
    sub_20AEC60F4(v14, (void *)xmmword_25463A198, *((unint64_t *)&xmmword_25463A198 + 1));
  }
  else
  {
    *(_OWORD *)v14 = xmmword_25463A198;
    v15 = unk_25463A1A8;
  }
  v16 = 1;
  sub_20AECCECC(a1, (uint64_t)v14, (uint64_t)&v17);
  v28 = v17;
  LOBYTE(v29) = 0;
  v38 = 0;
  if (v27)
  {
    v31 = 0;
    if (v20)
    {
      v29 = v18;
      v30 = v19;
      v19 = 0;
      v18 = 0uLL;
      v31 = 1;
    }
    LOBYTE(v32) = 0;
    v37 = 0;
    if (v26)
    {
      v33 = v22;
      v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      v34 = v23;
      *(_OWORD *)__p = *(_OWORD *)v24;
      v36 = v25;
      v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      v25 = 0;
      v37 = 1;
    }
    v38 = 1;
  }
  v39 = 0;
  v5 = atomic_load((unsigned __int8 *)&qword_254630258);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_254630258))
  {
    __cxa_atexit((void (*)(void *))sub_20AECE2D8, &unk_254630168, &dword_20AEBB000);
    __cxa_guard_release(&qword_254630258);
  }
  sub_20AECB50C((uint64_t)&unk_254630168, &v28);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v33) < 0)
        operator delete((void *)v32);
    }
    if (v31 && SHIBYTE(v30) < 0)
      operator delete((void *)v29);
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0)
        operator delete(v24[0]);
      if (SHIBYTE(v22) < 0)
        operator delete(v21[0]);
    }
    if (v20 && SHIBYTE(v19) < 0)
      operator delete((void *)v18);
  }
  if (v16 && SHIBYTE(v15) < 0)
    operator delete(v14[0]);
  return a2 == 0;
}

void sub_20AF39668(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639A70);
  _Unwind_Resume(a1);
}

void sub_20AF39680(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void VZServerOptionsSetSyncType(uint64_t a1, unsigned int a2)
{
  char v4[16];
  void *v5;
  char v6;
  char v7;
  void *v8;
  char v9;
  void *__p;
  char v11;
  char v12;
  char v13;
  char v14;

  if (!sub_20AF392F4((uint64_t)"VZServerOptionsSetSyncType", a1))
  {
    sub_20B09C730(a1 + 16, a2, (uint64_t)v4);
    sub_20AEDCEDC((uint64_t)"VZServerOptionsSetSyncType", v4, 0);
    if (!v14)
    {
      if (v13)
      {
        if (v12)
        {
          if (v11 < 0)
            operator delete(__p);
          if (v9 < 0)
            operator delete(v8);
        }
        if (v7)
        {
          if (v6 < 0)
            operator delete(v5);
        }
      }
    }
  }
}

void sub_20AF39764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECD704((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t VZServerOptionsSetConnectionStatusChangedBlock(uint64_t a1, const void *a2)
{
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  _QWORD *v16;
  _QWORD v17[3];
  _QWORD *v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  result = sub_20AF392F4((uint64_t)"VZServerOptionsSetConnectionStatusChangedBlock", a1);
  if ((result & 1) == 0)
  {
    if (a2)
    {
      v5 = operator new(0x20uLL);
      v5[1] = 0;
      v5[2] = 0;
      *v5 = &off_24C3F4D20;
      v5[3] = _Block_copy(a2);
      v6 = v5 + 3;
    }
    else
    {
      v6 = 0;
      v5 = 0;
    }
    v15[0] = &off_24C3F4E50;
    v15[1] = v6;
    v15[2] = v5;
    v16 = v15;
    v7 = (_QWORD *)(a1 + 72);
    if (!*(_BYTE *)(a1 + 104))
    {
      *(_QWORD *)(a1 + 72) = &off_24C3F4E50;
      *(_QWORD *)(a1 + 80) = v6;
      *(_QWORD *)(a1 + 88) = v5;
      *(_QWORD *)(a1 + 96) = v7;
      if (v5)
      {
        v12 = v5 + 1;
        do
          v13 = __ldxr(v12);
        while (__stxr(v13 + 1, v12));
      }
      *(_BYTE *)(a1 + 104) = 1;
      result = (uint64_t)v15;
      v14 = 4;
      return (*(uint64_t (**)(void))(*(_QWORD *)result + 8 * v14))();
    }
    v17[0] = &off_24C3F4E50;
    v17[1] = v6;
    v17[2] = v5;
    v18 = v17;
    if (v5)
    {
      v8 = v5 + 1;
      do
        v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
    }
    sub_20B09EC2C(v17, v7);
    v10 = v18;
    if (v18 == v17)
    {
      v11 = 4;
      v10 = v17;
    }
    else
    {
      if (!v18)
        goto LABEL_18;
      v11 = 5;
    }
    (*(void (**)(void))(*v10 + 8 * v11))();
LABEL_18:
    result = (uint64_t)v16;
    if (v16 == v15)
    {
      v14 = 4;
      result = (uint64_t)v15;
    }
    else
    {
      if (!v16)
        return result;
      v14 = 5;
    }
    return (*(uint64_t (**)(void))(*(_QWORD *)result + 8 * v14))();
  }
  return result;
}

void sub_20AF39900(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t VZServerOptionsSetConnectionStatusChangedFunction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  _QWORD *v7;
  uint64_t (***v8)();
  uint64_t v9;
  uint64_t v10;
  uint64_t (**v11)();
  __int128 v12;
  uint64_t (***v13)();
  uint64_t (**v14)();
  __int128 v15;
  uint64_t (***v16)();
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  result = sub_20AF392F4((uint64_t)"VZServerOptionsSetConnectionStatusChangedFunction", a1);
  if ((result & 1) == 0)
  {
    v11 = &off_24C3F4F50;
    *(_QWORD *)&v12 = a3;
    *((_QWORD *)&v12 + 1) = a2;
    v13 = &v11;
    v7 = (_QWORD *)(a1 + 72);
    if (!*(_BYTE *)(a1 + 104))
    {
      *(_QWORD *)(a1 + 96) = v7;
      *(_QWORD *)(a1 + 72) = &off_24C3F4F50;
      *(_OWORD *)(a1 + 80) = v12;
      *(_BYTE *)(a1 + 104) = 1;
      result = (uint64_t)&v11;
      v10 = 4;
      return (*(uint64_t (**)(void))(*(_QWORD *)result + 8 * v10))();
    }
    v16 = &v14;
    v14 = &off_24C3F4F50;
    v15 = v12;
    sub_20B09EC2C(&v14, v7);
    v8 = v16;
    if (v16 == &v14)
    {
      v9 = 4;
      v8 = &v14;
    }
    else
    {
      if (!v16)
        goto LABEL_9;
      v9 = 5;
    }
    (*v8)[v9]();
LABEL_9:
    result = (uint64_t)v13;
    if (v13 == &v11)
    {
      v10 = 4;
      result = (uint64_t)&v11;
    }
    else
    {
      if (!v13)
        return result;
      v10 = 5;
    }
    return (*(uint64_t (**)(void))(*(_QWORD *)result + 8 * v10))();
  }
  return result;
}

uint64_t VZServerOptionsSetLoggerUpdatedBlock(uint64_t a1, const void *a2)
{
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  _QWORD *v16;
  _QWORD v17[3];
  _QWORD *v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  result = sub_20AF392F4((uint64_t)"VZServerOptionsSetLoggerUpdatedBlock", a1);
  if ((result & 1) == 0)
  {
    if (a2)
    {
      v5 = operator new(0x20uLL);
      v5[1] = 0;
      v5[2] = 0;
      *v5 = &off_24C3F4D70;
      v5[3] = _Block_copy(a2);
      v6 = v5 + 3;
    }
    else
    {
      v6 = 0;
      v5 = 0;
    }
    v15[0] = &off_24C3F4ED0;
    v15[1] = v6;
    v15[2] = v5;
    v16 = v15;
    v7 = (_QWORD *)(a1 + 112);
    if (!*(_BYTE *)(a1 + 144))
    {
      *(_QWORD *)(a1 + 112) = &off_24C3F4ED0;
      *(_QWORD *)(a1 + 120) = v6;
      *(_QWORD *)(a1 + 128) = v5;
      *(_QWORD *)(a1 + 136) = v7;
      if (v5)
      {
        v12 = v5 + 1;
        do
          v13 = __ldxr(v12);
        while (__stxr(v13 + 1, v12));
      }
      *(_BYTE *)(a1 + 144) = 1;
      result = (uint64_t)v15;
      v14 = 4;
      return (*(uint64_t (**)(void))(*(_QWORD *)result + 8 * v14))();
    }
    v17[0] = &off_24C3F4ED0;
    v17[1] = v6;
    v17[2] = v5;
    v18 = v17;
    if (v5)
    {
      v8 = v5 + 1;
      do
        v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
    }
    sub_20B09EDCC(v17, v7);
    v10 = v18;
    if (v18 == v17)
    {
      v11 = 4;
      v10 = v17;
    }
    else
    {
      if (!v18)
        goto LABEL_18;
      v11 = 5;
    }
    (*(void (**)(void))(*v10 + 8 * v11))();
LABEL_18:
    result = (uint64_t)v16;
    if (v16 == v15)
    {
      v14 = 4;
      result = (uint64_t)v15;
    }
    else
    {
      if (!v16)
        return result;
      v14 = 5;
    }
    return (*(uint64_t (**)(void))(*(_QWORD *)result + 8 * v14))();
  }
  return result;
}

void sub_20AF39BD4(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t VZServerOptionsSetLoggerUpdatedFunction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  _QWORD *v7;
  uint64_t (***v8)();
  uint64_t v9;
  uint64_t v10;
  uint64_t (**v11)();
  __int128 v12;
  uint64_t (***v13)();
  uint64_t (**v14)();
  __int128 v15;
  uint64_t (***v16)();
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  result = sub_20AF392F4((uint64_t)"VZServerOptionsSetLoggerUpdatedFunction", a1);
  if ((result & 1) == 0)
  {
    v11 = &off_24C3F4FD0;
    *(_QWORD *)&v12 = a3;
    *((_QWORD *)&v12 + 1) = a2;
    v13 = &v11;
    v7 = (_QWORD *)(a1 + 112);
    if (!*(_BYTE *)(a1 + 144))
    {
      *(_QWORD *)(a1 + 136) = v7;
      *(_QWORD *)(a1 + 112) = &off_24C3F4FD0;
      *(_OWORD *)(a1 + 120) = v12;
      *(_BYTE *)(a1 + 144) = 1;
      result = (uint64_t)&v11;
      v10 = 4;
      return (*(uint64_t (**)(void))(*(_QWORD *)result + 8 * v10))();
    }
    v16 = &v14;
    v14 = &off_24C3F4FD0;
    v15 = v12;
    sub_20B09EDCC(&v14, v7);
    v8 = v16;
    if (v16 == &v14)
    {
      v9 = 4;
      v8 = &v14;
    }
    else
    {
      if (!v16)
        goto LABEL_9;
      v9 = 5;
    }
    (*v8)[v9]();
LABEL_9:
    result = (uint64_t)v13;
    if (v13 == &v11)
    {
      v10 = 4;
      result = (uint64_t)&v11;
    }
    else
    {
      if (!v13)
        return result;
      v10 = 5;
    }
    return (*(uint64_t (**)(void))(*(_QWORD *)result + 8 * v10))();
  }
  return result;
}

uint64_t VZServerGetTypeID()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639A80);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254639A80))
    return qword_254639A78;
  qword_254639A78 = sub_20AECB130();
  __cxa_guard_release(&qword_254639A80);
  return qword_254639A78;
}

uint64_t VZServerCreate(const void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unint64_t *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  std::__shared_weak_count *v39;
  unint64_t *p_shared_owners;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  __int128 v45;
  void *v46;
  char v47;
  char v48;
  void *v49;
  char v50;
  void *__p;
  char v52;
  char v53;
  char v54;
  char v55;
  __int128 v56;
  void *v57[2];
  __int128 v58;
  void *v59;
  char v60;
  void *v61;
  char v62;
  char v63;
  char v64;
  unsigned __int8 v65;
  CFErrorRef **v66;
  uint64_t v67;
  _QWORD v68[2];
  __int128 v69;
  uint64_t v70;
  char v71;
  int v72;
  _QWORD v73[3];
  _QWORD *v74;
  char v75;
  _QWORD v76[3];
  _QWORD *v77;
  char v78;
  char v79;
  _QWORD v80[3];
  _QWORD *v81;
  _QWORD v82[3];
  _QWORD *v83;
  char v84;
  _QWORD v85[2];
  __int128 v86;
  uint64_t v87;
  char v88;
  int v89;
  _BYTE v90[24];
  _BYTE *v91;
  char v92;
  _BYTE v93[24];
  _BYTE *v94;
  char v95;
  char v96;
  _QWORD v97[3];
  _QWORD *v98;
  char v99;
  uint64_t v100;

  v100 = *MEMORY[0x24BDAC8D0];
  if (a1)
  {
    v6 = operator new(0x20uLL);
    v6[1] = 0;
    v6[2] = 0;
    *v6 = &off_24C3F4CD0;
    v6[3] = _Block_copy(a1);
    v7 = v6 + 3;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v80[0] = &off_24C3F4DC0;
  v80[1] = v7;
  v80[2] = v6;
  v81 = v80;
  if (a2)
  {
    sub_20AF43528((uint64_t)v68, (uint64_t *)(a2 + 16));
    v79 = 1;
  }
  else
  {
    LOBYTE(v68[0]) = 0;
    v79 = 0;
  }
  v66 = (CFErrorRef **)&v67;
  v67 = a3;
  if (v81)
  {
    if (v81 == v80)
    {
      v98 = v97;
      (*(void (**)(uint64_t, _QWORD *))(v80[0] + 24))((uint64_t)v80, v97);
    }
    else
    {
      v98 = v81;
      v81 = 0;
    }
  }
  else
  {
    v98 = 0;
  }
  v8 = 1;
  v99 = 1;
  LOBYTE(v85[0]) = 0;
  v96 = 0;
  if (v79)
  {
    v85[0] = v68[0];
    *(_QWORD *)((char *)v85 + 5) = *(_QWORD *)((char *)v68 + 5);
    LOBYTE(v86) = 0;
    v88 = 0;
    if (v71)
    {
      v86 = v69;
      v87 = v70;
      v70 = 0;
      v69 = 0uLL;
      v88 = 1;
    }
    v89 = v72;
    v90[0] = 0;
    v92 = 0;
    if (v75)
    {
      if (v74)
      {
        if (v74 == v73)
        {
          v91 = v90;
          (*(void (**)(void))(v73[0] + 24))();
        }
        else
        {
          v91 = v74;
          v74 = 0;
        }
      }
      else
      {
        v91 = 0;
      }
      v92 = 1;
    }
    v93[0] = 0;
    v95 = 0;
    if (v78)
    {
      if (v77)
      {
        if (v77 == v76)
        {
          v94 = v93;
          (*(void (**)(void))(v76[0] + 24))();
        }
        else
        {
          v94 = v77;
          v77 = 0;
        }
      }
      else
      {
        v94 = 0;
      }
      v95 = 1;
    }
    v96 = 1;
  }
  v82[0] = &off_24C3F2898;
  v82[1] = sub_20AEDD8BC;
  v83 = v82;
  v84 = 1;
  sub_20B09D358((uint64_t)v97, (uint64_t)v85, (uint64_t)v82, (uint64_t)&v56);
  if (v84)
  {
    v9 = v83;
    if (v83 == v82)
    {
      v10 = 4;
      v9 = v82;
    }
    else
    {
      if (!v83)
        goto LABEL_36;
      v10 = 5;
    }
    (*(void (**)(void))(*v9 + 8 * v10))();
  }
LABEL_36:
  if (!v96)
    goto LABEL_61;
  if (v95)
  {
    v11 = v94;
    if (v94 == v93)
    {
      v12 = 4;
      v11 = v93;
    }
    else
    {
      if (!v94)
        goto LABEL_43;
      v12 = 5;
    }
    (*(void (**)(void))(*v11 + 8 * v12))();
  }
LABEL_43:
  if (v92)
  {
    v13 = v91;
    if (v91 == v90)
    {
      v14 = 4;
      v13 = v90;
      goto LABEL_48;
    }
    if (v91)
    {
      v14 = 5;
LABEL_48:
      (*(void (**)(void))(*v13 + 8 * v14))();
    }
  }
  if (v88)
  {
    v15 = v86;
    if ((_QWORD)v86)
    {
      v16 = *((_QWORD *)&v86 + 1);
      v17 = (void *)v86;
      if (*((_QWORD *)&v86 + 1) != (_QWORD)v86)
      {
        do
        {
          v8 = *(_QWORD *)(v16 - 8);
          if (v8)
          {
            v18 = (unint64_t *)(v8 + 8);
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              (*(void (**)(uint64_t))(*(_QWORD *)v8 + 16))(v8);
              std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v8);
            }
          }
          v16 -= 16;
        }
        while (v16 != v15);
        v17 = (void *)v86;
      }
      *((_QWORD *)&v86 + 1) = v15;
      operator delete(v17);
    }
  }
LABEL_61:
  if (!v99)
    goto LABEL_67;
  v20 = v98;
  if (v98 == v97)
  {
    v21 = 4;
    v20 = v97;
  }
  else
  {
    if (!v98)
      goto LABEL_67;
    v21 = 5;
  }
  (*(void (**)(void))(*v20 + 8 * v21))();
LABEL_67:
  v22 = v65;
  if (v65)
  {
    sub_20AF44258((uint64_t)&v56);
    v23 = operator new(0x58uLL, MEMORY[0x24BEDB6B8]);
    if (v23)
    {
      v8 = (uint64_t)v23;
      v23[1] = v56;
      v56 = 0uLL;
      *((_BYTE *)v23 + 32) = 0;
      *((_BYTE *)v23 + 64) = 0;
      if ((_BYTE)v59)
      {
        v24 = *(_OWORD *)v57;
        v25 = v58;
        v57[0] = 0;
        v57[1] = 0;
        v23[2] = v24;
        v23[3] = v25;
        *((_BYTE *)v23 + 64) = 1;
      }
      *((_DWORD *)v23 + 18) = 1;
      *(_QWORD *)v23 = &off_24C3F4AE0;
      *((_QWORD *)v23 + 1) = &unk_24C3F4B30;
      *((_QWORD *)v23 + 10) = 0;
    }
    else
    {
      LOBYTE(v45) = 0;
      v55 = 0;
      sub_20AF43ED4(&v66, (uint64_t)&v45);
      if (v55 && v54)
      {
        if (v53)
        {
          if (v52 < 0)
            operator delete(__p);
          if (v50 < 0)
            operator delete(v49);
        }
        v8 = 0;
        if (v48 && v47 < 0)
        {
          operator delete(v46);
          v8 = 0;
        }
      }
      else
      {
        v8 = 0;
      }
    }
  }
  else
  {
    v45 = v56;
    sub_20AECEBD0(&v46, (__int128 *)v57);
    v55 = 1;
    sub_20AF43ED4(&v66, (uint64_t)&v45);
    if (v55 && v54)
    {
      if (v53)
      {
        if (v52 < 0)
          operator delete(__p);
        if (v50 < 0)
          operator delete(v49);
      }
      if (v48 && v47 < 0)
        operator delete(v46);
    }
  }
  if (v65)
  {
    if ((_BYTE)v59)
    {
      v26 = (std::__shared_weak_count *)v57[1];
      if (v57[1])
      {
        v27 = (unint64_t *)((char *)v57[1] + 8);
        do
          v28 = __ldaxr(v27);
        while (__stlxr(v28 - 1, v27));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
    }
    v29 = (std::__shared_weak_count *)*((_QWORD *)&v56 + 1);
    if (*((_QWORD *)&v56 + 1))
    {
      v30 = (unint64_t *)(*((_QWORD *)&v56 + 1) + 8);
      do
        v31 = __ldaxr(v30);
      while (__stlxr(v31 - 1, v30));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
  }
  else if (v64)
  {
    if (v63)
    {
      if (v62 < 0)
        operator delete(v61);
      if (v60 < 0)
        operator delete(v59);
    }
    if (BYTE8(v58) && SBYTE7(v58) < 0)
      operator delete(v57[0]);
  }
  if (!v22)
    v8 = 0;
  if (v79)
  {
    if (!v78)
      goto LABEL_123;
    v32 = v77;
    if (v77 == v76)
    {
      v33 = 4;
      v32 = v76;
    }
    else
    {
      if (!v77)
        goto LABEL_123;
      v33 = 5;
    }
    (*(void (**)(void))(*v32 + 8 * v33))();
LABEL_123:
    if (v75)
    {
      v34 = v74;
      if (v74 == v73)
      {
        v35 = 4;
        v34 = v73;
        goto LABEL_128;
      }
      if (v74)
      {
        v35 = 5;
LABEL_128:
        (*(void (**)(void))(*v34 + 8 * v35))();
      }
    }
    if (v71)
    {
      v36 = v69;
      if ((_QWORD)v69)
      {
        v37 = *((_QWORD *)&v69 + 1);
        v38 = (void *)v69;
        if (*((_QWORD *)&v69 + 1) != (_QWORD)v69)
        {
          do
          {
            v39 = *(std::__shared_weak_count **)(v37 - 8);
            if (v39)
            {
              p_shared_owners = (unint64_t *)&v39->__shared_owners_;
              do
                v41 = __ldaxr(p_shared_owners);
              while (__stlxr(v41 - 1, p_shared_owners));
              if (!v41)
              {
                ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
                std::__shared_weak_count::__release_weak(v39);
              }
            }
            v37 -= 16;
          }
          while (v37 != v36);
          v38 = (void *)v69;
        }
        *((_QWORD *)&v69 + 1) = v36;
        operator delete(v38);
      }
    }
  }
  v42 = v81;
  if (v81 == v80)
  {
    v43 = 4;
    v42 = v80;
    goto LABEL_145;
  }
  if (v81)
  {
    v43 = 5;
LABEL_145:
    (*(void (**)(void))(*v42 + 8 * v43))();
  }
  return v8;
}

void sub_20AF3A504(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

void sub_20AF3A5B4(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const char *a9, std::logic_error a10, int a11, __int16 a12, char a13, char a14, char a15, __int128 a16, __int128 a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,__int128 a54,char a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a68;
  CFErrorRef **a70;
  uint64_t v70;
  unint64_t *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  const std::logic_error *exception_ptr;
  void *v78;
  const char *v79;

  if (!a2)
    JUMPOUT(0x20AF3A5ACLL);
  if (LOBYTE(STACK[0x2B8]))
  {
    v73 = (unint64_t *)STACK[0x2B0];
    if ((unint64_t *)STACK[0x2B0] == &STACK[0x298])
    {
      v74 = 4;
      v73 = &STACK[0x298];
    }
    else
    {
      if (!v73)
        goto LABEL_8;
      v74 = 5;
    }
    (*(void (**)(void))(*v73 + 8 * v74))();
  }
LABEL_8:
  sub_20AF3FD14(v70 - 240);
  if (!*(_BYTE *)(v70 - 64))
    goto LABEL_14;
  v75 = *(_QWORD **)(v70 - 72);
  if (v75 == (_QWORD *)(v70 - 96))
  {
    v76 = 4;
    v75 = (_QWORD *)(v70 - 96);
  }
  else
  {
    if (!v75)
      goto LABEL_14;
    v76 = 5;
  }
  (*(void (**)(void))(*v75 + 8 * v76))();
LABEL_14:
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_begin_catch(a1);
    a9 = std::logic_error::what(&a10);
    sub_20AED4C84(&a29, &a9);
    sub_20B099E24((__int128 *)&a29, (uint64_t)&a16);
    a54 = a16;
    sub_20AECEBD0(&a55, &a17);
    a68 = 1;
    sub_20AF43ED4(&a70, (uint64_t)&a54);
    sub_20AECDEE0((uint64_t)&a54);
    sub_20AECCE40((uint64_t)&a16);
    if (a35)
    {
      if (a34 < 0)
        operator delete(a29);
    }
    MEMORY[0x20BD35020](&a10);
    __cxa_end_catch();
  }
  else if (a2 == 2)
  {
    v78 = __cxa_get_exception_ptr(a1);
    sub_20AED4C1C((std::runtime_error *)&a29, (uint64_t)v78);
    __cxa_begin_catch(a1);
    v79 = (const char *)(a36 + 48);
    if (*(char *)(a36 + 71) < 0)
      v79 = *(const char **)v79;
    a9 = v79;
    sub_20AED4C84(&a10, &a9);
    sub_20B09A738((__int128 *)&a10, (uint64_t)&a16);
    a54 = a16;
    sub_20AECEBD0(&a55, &a17);
    a68 = 1;
    sub_20AF43ED4(&a70, (uint64_t)&a54);
    sub_20AECDEE0((uint64_t)&a54);
    sub_20AECCE40((uint64_t)&a16);
    if (a15 && a14 < 0)
      operator delete(a10.__vftable);
    std::__fs::filesystem::filesystem_error::~filesystem_error((std::__fs::filesystem::filesystem_error *)&a29);
    __cxa_end_catch();
  }
  else
  {
    __cxa_begin_catch(a1);
    LOBYTE(a54) = 0;
    a68 = 0;
    sub_20AF43ED4(&a70, (uint64_t)&a54);
    sub_20AECDEE0((uint64_t)&a54);
    __cxa_end_catch();
  }
  JUMPOUT(0x20AF3A3A0);
}

uint64_t VZServerCreateWithFunction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unint64_t *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  std::__shared_weak_count *v39;
  unint64_t *p_shared_owners;
  unint64_t v41;
  __int128 v43;
  void *v44;
  char v45;
  char v46;
  void *v47;
  char v48;
  void *__p;
  char v50;
  char v51;
  char v52;
  char v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  void *v57;
  char v58;
  void *v59;
  char v60;
  char v61;
  char v62;
  unsigned __int8 v63;
  CFErrorRef **v64;
  uint64_t v65;
  _QWORD v66[2];
  __int128 v67;
  uint64_t v68;
  char v69;
  int v70;
  _QWORD v71[3];
  _QWORD *v72;
  char v73;
  _QWORD v74[3];
  _QWORD *v75;
  char v76;
  char v77;
  _QWORD v78[3];
  _QWORD *v79;
  char v80;
  _QWORD v81[2];
  __int128 v82;
  uint64_t v83;
  char v84;
  int v85;
  _BYTE v86[24];
  _BYTE *v87;
  char v88;
  _BYTE v89[24];
  _BYTE *v90;
  char v91;
  char v92;
  _QWORD v93[3];
  _QWORD *v94;
  char v95;
  uint64_t v96;

  v96 = *MEMORY[0x24BDAC8D0];
  if (a3)
  {
    sub_20AF43528((uint64_t)v66, (uint64_t *)(a3 + 16));
    v7 = 1;
    v77 = 1;
  }
  else
  {
    v7 = 0;
    LOBYTE(v66[0]) = 0;
    v77 = 0;
  }
  v64 = (CFErrorRef **)&v65;
  v65 = a4;
  v93[0] = &off_24C3F5050;
  v93[1] = a2;
  v93[2] = a1;
  v94 = v93;
  v8 = 1;
  v95 = 1;
  LOBYTE(v81[0]) = 0;
  v92 = 0;
  if (v7)
  {
    v81[0] = v66[0];
    *(_QWORD *)((char *)v81 + 5) = *(_QWORD *)((char *)v66 + 5);
    LOBYTE(v82) = 0;
    v84 = 0;
    if (v69)
    {
      v82 = v67;
      v83 = v68;
      v68 = 0;
      v67 = 0uLL;
      v84 = 1;
    }
    v85 = v70;
    v86[0] = 0;
    v88 = 0;
    if (v73)
    {
      if (v72)
      {
        if (v72 == v71)
        {
          v87 = v86;
          (*(void (**)(void))(v71[0] + 24))();
        }
        else
        {
          v87 = v72;
          v72 = 0;
        }
      }
      else
      {
        v87 = 0;
      }
      v88 = 1;
    }
    v89[0] = 0;
    v91 = 0;
    if (v76)
    {
      if (v75)
      {
        if (v75 == v74)
        {
          v90 = v89;
          (*(void (**)(void))(v74[0] + 24))();
        }
        else
        {
          v90 = v75;
          v75 = 0;
        }
      }
      else
      {
        v90 = 0;
      }
      v91 = 1;
    }
    v92 = 1;
  }
  v78[0] = &off_24C3F2898;
  v78[1] = sub_20AEDD8BC;
  v79 = v78;
  v80 = 1;
  sub_20B09D358((uint64_t)v93, (uint64_t)v81, (uint64_t)v78, (uint64_t)&v54);
  if (v80)
  {
    v9 = v79;
    if (v79 == v78)
    {
      v10 = 4;
      v9 = v78;
    }
    else
    {
      if (!v79)
        goto LABEL_28;
      v10 = 5;
    }
    (*(void (**)(void))(*v9 + 8 * v10))();
  }
LABEL_28:
  if (!v92)
    goto LABEL_53;
  if (v91)
  {
    v11 = v90;
    if (v90 == v89)
    {
      v12 = 4;
      v11 = v89;
    }
    else
    {
      if (!v90)
        goto LABEL_35;
      v12 = 5;
    }
    (*(void (**)(void))(*v11 + 8 * v12))();
  }
LABEL_35:
  if (v88)
  {
    v13 = v87;
    if (v87 == v86)
    {
      v14 = 4;
      v13 = v86;
      goto LABEL_40;
    }
    if (v87)
    {
      v14 = 5;
LABEL_40:
      (*(void (**)(void))(*v13 + 8 * v14))();
    }
  }
  if (v84)
  {
    v15 = v82;
    if ((_QWORD)v82)
    {
      v16 = *((_QWORD *)&v82 + 1);
      v17 = (void *)v82;
      if (*((_QWORD *)&v82 + 1) != (_QWORD)v82)
      {
        do
        {
          v8 = *(_QWORD *)(v16 - 8);
          if (v8)
          {
            v18 = (unint64_t *)(v8 + 8);
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              (*(void (**)(uint64_t))(*(_QWORD *)v8 + 16))(v8);
              std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v8);
            }
          }
          v16 -= 16;
        }
        while (v16 != v15);
        v17 = (void *)v82;
      }
      *((_QWORD *)&v82 + 1) = v15;
      operator delete(v17);
    }
  }
LABEL_53:
  if (!v95)
    goto LABEL_59;
  v20 = v94;
  if (v94 == v93)
  {
    v21 = 4;
    v20 = v93;
  }
  else
  {
    if (!v94)
      goto LABEL_59;
    v21 = 5;
  }
  (*(void (**)(void))(*v20 + 8 * v21))();
LABEL_59:
  v22 = v63;
  if (v63)
  {
    sub_20AF44258((uint64_t)&v54);
    v23 = operator new(0x58uLL, MEMORY[0x24BEDB6B8]);
    if (v23)
    {
      v8 = (uint64_t)v23;
      v23[1] = v54;
      v54 = 0uLL;
      *((_BYTE *)v23 + 32) = 0;
      *((_BYTE *)v23 + 64) = 0;
      if ((_BYTE)v57)
      {
        v24 = v55;
        v25 = v56;
        v55 = 0uLL;
        v23[2] = v24;
        v23[3] = v25;
        *((_BYTE *)v23 + 64) = 1;
      }
      *((_DWORD *)v23 + 18) = 1;
      *(_QWORD *)v23 = &off_24C3F4AE0;
      *((_QWORD *)v23 + 1) = &unk_24C3F4B30;
      *((_QWORD *)v23 + 10) = 0;
    }
    else
    {
      LOBYTE(v43) = 0;
      v53 = 0;
      sub_20AF44B70(&v64, (uint64_t)&v43);
      if (v53 && v52)
      {
        if (v51)
        {
          if (v50 < 0)
            operator delete(__p);
          if (v48 < 0)
            operator delete(v47);
        }
        v8 = 0;
        if (v46 && v45 < 0)
        {
          operator delete(v44);
          v8 = 0;
        }
      }
      else
      {
        v8 = 0;
      }
    }
  }
  else
  {
    v43 = v54;
    sub_20AECEBD0(&v44, &v55);
    v53 = 1;
    sub_20AF44B70(&v64, (uint64_t)&v43);
    if (v53 && v52)
    {
      if (v51)
      {
        if (v50 < 0)
          operator delete(__p);
        if (v48 < 0)
          operator delete(v47);
      }
      if (v46 && v45 < 0)
        operator delete(v44);
    }
  }
  if (v63)
  {
    if ((_BYTE)v57)
    {
      v26 = (std::__shared_weak_count *)*((_QWORD *)&v55 + 1);
      if (*((_QWORD *)&v55 + 1))
      {
        v27 = (unint64_t *)(*((_QWORD *)&v55 + 1) + 8);
        do
          v28 = __ldaxr(v27);
        while (__stlxr(v28 - 1, v27));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
    }
    v29 = (std::__shared_weak_count *)*((_QWORD *)&v54 + 1);
    if (*((_QWORD *)&v54 + 1))
    {
      v30 = (unint64_t *)(*((_QWORD *)&v54 + 1) + 8);
      do
        v31 = __ldaxr(v30);
      while (__stlxr(v31 - 1, v30));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
  }
  else if (v62)
  {
    if (v61)
    {
      if (v60 < 0)
        operator delete(v59);
      if (v58 < 0)
        operator delete(v57);
    }
    if (BYTE8(v56) && SBYTE7(v56) < 0)
      operator delete((void *)v55);
  }
  if (!v22)
    v8 = 0;
  if (v77)
  {
    if (!v76)
      goto LABEL_115;
    v32 = v75;
    if (v75 == v74)
    {
      v33 = 4;
      v32 = v74;
    }
    else
    {
      if (!v75)
        goto LABEL_115;
      v33 = 5;
    }
    (*(void (**)(void))(*v32 + 8 * v33))();
LABEL_115:
    if (v73)
    {
      v34 = v72;
      if (v72 == v71)
      {
        v35 = 4;
        v34 = v71;
        goto LABEL_120;
      }
      if (v72)
      {
        v35 = 5;
LABEL_120:
        (*(void (**)(void))(*v34 + 8 * v35))();
      }
    }
    if (v69)
    {
      v36 = v67;
      if ((_QWORD)v67)
      {
        v37 = *((_QWORD *)&v67 + 1);
        v38 = (void *)v67;
        if (*((_QWORD *)&v67 + 1) != (_QWORD)v67)
        {
          do
          {
            v39 = *(std::__shared_weak_count **)(v37 - 8);
            if (v39)
            {
              p_shared_owners = (unint64_t *)&v39->__shared_owners_;
              do
                v41 = __ldaxr(p_shared_owners);
              while (__stlxr(v41 - 1, p_shared_owners));
              if (!v41)
              {
                ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
                std::__shared_weak_count::__release_weak(v39);
              }
            }
            v37 -= 16;
          }
          while (v37 != v36);
          v38 = (void *)v67;
        }
        *((_QWORD *)&v67 + 1) = v36;
        operator delete(v38);
      }
    }
  }
  return v8;
}

void sub_20AF3AEA8(_Unwind_Exception *exception_object, int a2)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20AEC01C0(exception_object);
}

void sub_20AF3AEC4(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, __int128 a13, __int128 a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,void **__dst,size_t __dst_8,__int128 a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,char a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,uint64_t a56,void *__p,uint64_t a58,int a59,__int16 a60,char a61,char a62,char a63)
{
  __int16 a65;
  __int16 a67;
  __int128 a68;
  void *a69;
  char a71;
  char a72;
  void *a73;
  char a74;
  void *a75;
  char a76;
  char a77;
  __int16 a78;
  __int16 a79;
  CFErrorRef **a80;
  const std::logic_error *exception_ptr;
  const char *v83;
  size_t v84;
  size_t v85;
  void **p_dst;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t *v90;
  unint64_t v91;
  const char *v92;
  size_t v93;
  const char *v94;
  std::logic_error_vtbl *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  if (!a2)
    JUMPOUT(0x20AF3AEB4);
  if ((_BYTE)a67 && (_BYTE)a65)
  {
    if (a63)
    {
      if (a62 < 0)
        operator delete(__p);
      if (a55 < 0)
        operator delete(a50);
    }
    if (a49 && a48 < 0)
      operator delete(a43);
  }
  if ((_BYTE)a79)
  {
    sub_20B09D904((uint64_t)&a68);
  }
  else if ((_BYTE)a78)
  {
    if (a77)
    {
      if (a76 < 0)
        operator delete(a75);
      if (a74 < 0)
        operator delete(a73);
    }
    if (a72 && a71 < 0)
      operator delete(a69);
  }
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_begin_catch(a1);
    v83 = std::logic_error::what(&a10);
    v84 = strlen(v83);
    if (v84 <= 0x7FFFFFFFFFFFFFF7)
    {
      v85 = v84;
      if (v84 >= 0x17)
      {
        v96 = (v84 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v84 | 7) != 0x17)
          v96 = v84 | 7;
        v97 = v96 + 1;
        p_dst = (void **)operator new(v96 + 1);
        __dst_8 = v85;
        *(_QWORD *)&a38 = v97 | 0x8000000000000000;
        __dst = p_dst;
      }
      else
      {
        BYTE7(a38) = v84;
        p_dst = (void **)&__dst;
        if (!v84)
        {
LABEL_53:
          *((_BYTE *)p_dst + v85) = 0;
          BYTE8(a38) = 1;
          sub_20B099E24((__int128 *)&__dst, (uint64_t)&a13);
          a68 = a13;
          sub_20AECEBD0(&a69, &a14);
          LOBYTE(a79) = 1;
          sub_20AF44B70(&a80, (uint64_t)&a68);
          if ((_BYTE)a79 && (_BYTE)a78)
          {
            if (a77)
            {
              if (a76 < 0)
                operator delete(a75);
              if (a74 < 0)
                operator delete(a73);
            }
            if (a72 && a71 < 0)
              operator delete(a69);
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0)
                operator delete(a27);
              if (a25 < 0)
                operator delete(a20);
            }
            if (a19 && a18 < 0)
              operator delete((void *)a14);
          }
          if (BYTE8(a38))
          {
            if (SBYTE7(a38) < 0)
              operator delete(__dst);
          }
          MEMORY[0x20BD35020](&a10);
          __cxa_end_catch();
          goto LABEL_105;
        }
      }
      memmove(p_dst, v83, v85);
      goto LABEL_53;
    }
LABEL_103:
    sub_20AEC0138();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    LOBYTE(a68) = 0;
    LOBYTE(a79) = 0;
    sub_20AF44B70(&a80, (uint64_t)&a68);
    if ((_BYTE)a79 && (_BYTE)a78)
    {
      if (a77)
      {
        if (a76 < 0)
          operator delete(a75);
        if (a74 < 0)
          operator delete(a73);
      }
      if (a72 && a71 < 0)
        operator delete(a69);
    }
    __cxa_end_catch();
LABEL_105:
    JUMPOUT(0x20AF3AD74);
  }
  v87 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error((std::runtime_error *)&__dst, (const std::runtime_error *)v87);
  a38 = *((_OWORD *)v87 + 1);
  v89 = *((_QWORD *)v87 + 4);
  v88 = *((_QWORD *)v87 + 5);
  __dst = (void **)(MEMORY[0x24BEDB878] + 16);
  a39 = v89;
  a40 = v88;
  if (v88)
  {
    v90 = (unint64_t *)(v88 + 8);
    do
      v91 = __ldxr(v90);
    while (__stxr(v91 + 1, v90));
  }
  __cxa_begin_catch(a1);
  v92 = (const char *)(a39 + 48);
  if (*(char *)(a39 + 71) < 0)
    v92 = *(const char **)v92;
  v93 = strlen(v92);
  if (v93 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_103;
  v94 = (const char *)v93;
  if (v93 >= 0x17)
  {
    v98 = (v93 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v93 | 7) != 0x17)
      v98 = v93 | 7;
    v99 = v98 + 1;
    v95 = (std::logic_error_vtbl *)operator new(v98 + 1);
    a10.__imp_.__imp_ = v94;
    a11 = v99 | 0x8000000000000000;
    a10.__vftable = v95;
  }
  else
  {
    HIBYTE(a11) = v93;
    v95 = (std::logic_error_vtbl *)&a10;
    if (!v93)
    {
LABEL_80:
      v94[(_QWORD)v95] = 0;
      a12 = 1;
      sub_20B09A738((__int128 *)&a10, (uint64_t)&a13);
      a68 = a13;
      sub_20AECEBD0(&a69, &a14);
      LOBYTE(a79) = 1;
      sub_20AF44B70(&a80, (uint64_t)&a68);
      if ((_BYTE)a79 && (_BYTE)a78)
      {
        if (a77)
        {
          if (a76 < 0)
            operator delete(a75);
          if (a74 < 0)
            operator delete(a73);
        }
        if (a72 && a71 < 0)
          operator delete(a69);
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0)
            operator delete(a27);
          if (a25 < 0)
            operator delete(a20);
        }
        if (a19 && a18 < 0)
          operator delete((void *)a14);
      }
      if (a12 && SHIBYTE(a11) < 0)
        operator delete(a10.__vftable);
      std::__fs::filesystem::filesystem_error::~filesystem_error((std::__fs::filesystem::filesystem_error *)&__dst);
      __cxa_end_catch();
      goto LABEL_105;
    }
  }
  memmove(v95, v92, (size_t)v94);
  goto LABEL_80;
}

BOOL VZServerIsClientLoggerEnabled(uint64_t a1, const void *a2, char *a3, CFErrorRef *a4)
{
  _BOOL8 result;
  CFTypeID v9;
  uint64_t v10;
  char v11[16];
  void *v12;
  char v13;
  char v14;
  void *v15;
  char v16;
  void *v17;
  char v18;
  char v19;
  char v20;
  char v21;
  void *v22;
  char v23;
  CFUUIDBytes v24;
  void *v25;
  char v26;
  char v27;
  void *v28;
  char v29;
  void *__p;
  char v31;
  char v32;
  char v33;
  const char *v34;
  _QWORD v35[2];
  char v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  if (sub_20AF3B7E8((uint64_t)"VZServerIsClientLoggerEnabled", a1, a4)
    || sub_20AF3BB64((uint64_t)"VZServerIsClientLoggerEnabled", (uint64_t)a2, a4))
  {
    return 0;
  }
  if (!a2 || (v9 = CFUUIDGetTypeID(), CFGetTypeID(a2) != v9))
  {
    LOBYTE(v35[0]) = 0;
    v36 = 0;
    sub_20AF3FE2C();
  }
  v24 = CFUUIDGetUUIDBytes((CFUUIDRef)a2);
  v35[0] = sub_20B4F6FA8((uint64_t)&v24);
  v35[1] = v10;
  v36 = 1;
  sub_20B09D9AC(a3, (uint64_t *)(a1 + 16), (unsigned __int8 *)v35, (uint64_t)v11);
  v34 = "VZServerIsClientLoggerEnabled";
  if (v21)
    return v11[0] != 0;
  sub_20AEDBA04("in function ", (const char *)&v34);
  sub_20B529470(v11, &v22, (uint64_t)&v24);
  sub_20AECB410((__int128 *)&v24, a4);
  if (v33)
  {
    if (v32)
    {
      if (v31 < 0)
        operator delete(__p);
      if (v29 < 0)
        operator delete(v28);
    }
    if (v27 && v26 < 0)
      operator delete(v25);
  }
  if (v23 < 0)
    operator delete(v22);
  if (v21 || !v20)
    return 0;
  if (v19)
  {
    if (v18 < 0)
      operator delete(v17);
    if (v16 < 0)
      operator delete(v15);
  }
  result = 0;
  if (v14 && v13 < 0)
  {
    operator delete(v12);
    return 0;
  }
  return result;
}

void sub_20AF3B79C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32)
{
  sub_20AECCE40((uint64_t)&a32);
  if (a31 < 0)
  {
    operator delete(__p);
    sub_20AECD704((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_20AECD704((uint64_t)&a10);
  _Unwind_Resume(a1);
}

BOOL sub_20AF3B7E8(uint64_t a1, uint64_t a2, CFErrorRef *a3)
{
  unsigned __int8 v6;
  int v8;
  size_t v9;
  unint64_t v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  void *v15[2];
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  void *v22[2];
  uint64_t v23;
  uint64_t v24;
  void *v25[2];
  uint64_t v26;
  char v27;
  char v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  void *__p[2];
  uint64_t v37;
  char v38;
  char v39;
  char v40;

  if (a2)
    return a2 == 0;
  v6 = atomic_load((unsigned __int8 *)&qword_254639B40);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254639B40))
  {
    sub_20AF452DC();
    v8 = byte_25463A407;
    if (byte_25463A407 >= 0)
      v9 = byte_25463A407;
    else
      v9 = qword_25463A3F8;
    v10 = v9 + 1;
    if (v9 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v10 >= 0x17)
    {
      v12 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v10 | 7) != 0x17)
        v12 = v10 | 7;
      v13 = v12 + 1;
      v11 = (__int128 *)operator new(v12 + 1);
      *((_QWORD *)&xmmword_25463A3D8 + 1) = v9 + 1;
      unk_25463A3E8 = v13 | 0x8000000000000000;
      *(_QWORD *)&xmmword_25463A3D8 = v11;
    }
    else
    {
      unk_25463A3E8 = 0;
      xmmword_25463A3D8 = 0uLL;
      v11 = &xmmword_25463A3D8;
      byte_25463A3EF = v9 + 1;
      if (!v9)
      {
LABEL_50:
        *(_WORD *)((char *)v11 + v9) = 42;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A3D8, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639B40);
        goto LABEL_3;
      }
    }
    if (v8 >= 0)
      v14 = &qword_25463A3F0;
    else
      v14 = (uint64_t *)qword_25463A3F0;
    memmove(v11, v14, v9);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_25463A3EF < 0)
  {
    sub_20AEC60F4(v15, (void *)xmmword_25463A3D8, *((unint64_t *)&xmmword_25463A3D8 + 1));
  }
  else
  {
    *(_OWORD *)v15 = xmmword_25463A3D8;
    v16 = unk_25463A3E8;
  }
  v17 = 1;
  sub_20AECCECC(a1, (uint64_t)v15, (uint64_t)&v18);
  v29 = v18;
  LOBYTE(v30) = 0;
  v39 = 0;
  if (v28)
  {
    v32 = 0;
    if (v21)
    {
      v30 = v19;
      v31 = v20;
      v20 = 0;
      v19 = 0uLL;
      v32 = 1;
    }
    LOBYTE(v33) = 0;
    v38 = 0;
    if (v27)
    {
      v34 = v23;
      v33 = *(_OWORD *)v22;
      v22[0] = 0;
      v22[1] = 0;
      v35 = v24;
      *(_OWORD *)__p = *(_OWORD *)v25;
      v37 = v26;
      v23 = 0;
      v25[0] = 0;
      v25[1] = 0;
      v26 = 0;
      v38 = 1;
    }
    v39 = 1;
  }
  v40 = 0;
  sub_20AECB410(&v29, a3);
  if (!v40 && v39)
  {
    if (v38)
    {
      if (SHIBYTE(v37) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v34) < 0)
        operator delete((void *)v33);
    }
    if (v32 && SHIBYTE(v31) < 0)
      operator delete((void *)v30);
  }
  if (v28)
  {
    if (v27)
    {
      if (SHIBYTE(v26) < 0)
        operator delete(v25[0]);
      if (SHIBYTE(v23) < 0)
        operator delete(v22[0]);
    }
    if (v21 && SHIBYTE(v20) < 0)
      operator delete((void *)v19);
  }
  if (v17 && SHIBYTE(v16) < 0)
    operator delete(v15[0]);
  return a2 == 0;
}

void sub_20AF3BB10(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639B40);
  _Unwind_Resume(a1);
}

void sub_20AF3BB28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_20AECD704((uint64_t)&a32);
  sub_20AECCE40((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

BOOL sub_20AF3BB64(uint64_t a1, uint64_t a2, CFErrorRef *a3)
{
  unsigned __int8 v6;
  int v8;
  size_t v9;
  unint64_t v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  void *v15[2];
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  void *v22[2];
  uint64_t v23;
  uint64_t v24;
  void *v25[2];
  uint64_t v26;
  char v27;
  char v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  void *__p[2];
  uint64_t v37;
  char v38;
  char v39;
  char v40;

  if (a2)
    return a2 == 0;
  v6 = atomic_load((unsigned __int8 *)&qword_254639B50);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254639B50))
  {
    sub_20AF4545C();
    v8 = byte_25463A437;
    if (byte_25463A437 >= 0)
      v9 = byte_25463A437;
    else
      v9 = qword_25463A428;
    v10 = v9 + 1;
    if (v9 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v10 >= 0x17)
    {
      v12 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v10 | 7) != 0x17)
        v12 = v10 | 7;
      v13 = v12 + 1;
      v11 = (__int128 *)operator new(v12 + 1);
      *((_QWORD *)&xmmword_25463A408 + 1) = v9 + 1;
      unk_25463A418 = v13 | 0x8000000000000000;
      *(_QWORD *)&xmmword_25463A408 = v11;
    }
    else
    {
      unk_25463A418 = 0;
      xmmword_25463A408 = 0uLL;
      v11 = &xmmword_25463A408;
      byte_25463A41F = v9 + 1;
      if (!v9)
      {
LABEL_50:
        *(_WORD *)((char *)v11 + v9) = 42;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A408, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639B50);
        goto LABEL_3;
      }
    }
    if (v8 >= 0)
      v14 = &qword_25463A420;
    else
      v14 = (uint64_t *)qword_25463A420;
    memmove(v11, v14, v9);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_25463A41F < 0)
  {
    sub_20AEC60F4(v15, (void *)xmmword_25463A408, *((unint64_t *)&xmmword_25463A408 + 1));
  }
  else
  {
    *(_OWORD *)v15 = xmmword_25463A408;
    v16 = unk_25463A418;
  }
  v17 = 1;
  sub_20AECCECC(a1, (uint64_t)v15, (uint64_t)&v18);
  v29 = v18;
  LOBYTE(v30) = 0;
  v39 = 0;
  if (v28)
  {
    v32 = 0;
    if (v21)
    {
      v30 = v19;
      v31 = v20;
      v20 = 0;
      v19 = 0uLL;
      v32 = 1;
    }
    LOBYTE(v33) = 0;
    v38 = 0;
    if (v27)
    {
      v34 = v23;
      v33 = *(_OWORD *)v22;
      v22[0] = 0;
      v22[1] = 0;
      v35 = v24;
      *(_OWORD *)__p = *(_OWORD *)v25;
      v37 = v26;
      v23 = 0;
      v25[0] = 0;
      v25[1] = 0;
      v26 = 0;
      v38 = 1;
    }
    v39 = 1;
  }
  v40 = 0;
  sub_20AECB410(&v29, a3);
  if (!v40 && v39)
  {
    if (v38)
    {
      if (SHIBYTE(v37) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v34) < 0)
        operator delete((void *)v33);
    }
    if (v32 && SHIBYTE(v31) < 0)
      operator delete((void *)v30);
  }
  if (v28)
  {
    if (v27)
    {
      if (SHIBYTE(v26) < 0)
        operator delete(v25[0]);
      if (SHIBYTE(v23) < 0)
        operator delete(v22[0]);
    }
    if (v21 && SHIBYTE(v20) < 0)
      operator delete((void *)v19);
  }
  if (v17 && SHIBYTE(v16) < 0)
    operator delete(v15[0]);
  return a2 == 0;
}

void sub_20AF3BE8C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639B50);
  _Unwind_Resume(a1);
}

void sub_20AF3BEA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_20AECD704((uint64_t)&a32);
  sub_20AECCE40((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t VZServerGetClientLoggerEnableState(uint64_t a1, const void *a2, char *a3, CFErrorRef *a4)
{
  uint64_t v8;
  CFTypeID v10;
  uint64_t v11;
  char v12[16];
  void *v13;
  char v14;
  char v15;
  void *v16;
  char v17;
  void *__p;
  char v19;
  char v20;
  char v21;
  char v22;
  CFUUIDBytes v23;
  _QWORD v24[2];
  char v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  if (sub_20AF3B7E8((uint64_t)"VZServerGetClientLoggerEnableState", a1, a4)
    || sub_20AF3BB64((uint64_t)"VZServerGetClientLoggerEnableState", (uint64_t)a2, a4))
  {
    return 255;
  }
  if (!a2 || (v10 = CFUUIDGetTypeID(), CFGetTypeID(a2) != v10))
    sub_20AF3FE2C();
  v23 = CFUUIDGetUUIDBytes((CFUUIDRef)a2);
  v24[0] = sub_20B4F6FA8((uint64_t)&v23);
  v24[1] = v11;
  v25 = 1;
  sub_20B09DBC4(a3, (uint64_t *)(a1 + 16), (unsigned __int8 *)v24, (uint64_t)v12);
  v8 = sub_20AEFE7B4((uint64_t)"VZServerGetClientLoggerEnableState", v12, 255, a4);
  if (!v22 && v21)
  {
    if (v20)
    {
      if (v19 < 0)
        operator delete(__p);
      if (v17 < 0)
        operator delete(v16);
    }
    if (v15 && v14 < 0)
      operator delete(v13);
  }
  return v8;
}

void sub_20AF3C048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECD704((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *VZServerCopyClientLoggerEnableStates(uint64_t a1, const void *a2, CFErrorRef *a3)
{
  _QWORD *v5;
  CFTypeID v7;
  uint64_t v8;
  int v9;
  _QWORD *v10;
  CFUUIDBytes v11;
  char *v12;
  uint64_t v13;
  CFUUIDBytes v14;
  void *v15;
  char v16;
  char v17;
  void *v18;
  char v19;
  void *__p;
  char v21;
  char v22;
  char v23;
  char v24;
  CFUUIDBytes v25;
  __int128 v26;
  char v27;
  char v28;
  void *v29;
  char v30;
  void *v31;
  char v32;
  char v33;
  char v34;
  unsigned __int8 v35;
  CFErrorRef **v36;
  CFErrorRef *v37;
  _QWORD v38[2];
  char v39;
  uint64_t v40;

  v5 = (_QWORD *)a1;
  v40 = *MEMORY[0x24BDAC8D0];
  if (sub_20AF3B7E8((uint64_t)"VZServerCopyClientLoggerEnableStates", a1, a3)
    || sub_20AF3BB64((uint64_t)"VZServerCopyClientLoggerEnableStates", (uint64_t)a2, a3))
  {
    return 0;
  }
  if (!a2 || (v7 = CFUUIDGetTypeID(), CFGetTypeID(a2) != v7))
  {
    LOBYTE(v38[0]) = 0;
    v39 = 0;
    sub_20AF3FE2C();
  }
  v25 = CFUUIDGetUUIDBytes((CFUUIDRef)a2);
  v38[0] = sub_20B4F6FA8((uint64_t)&v25);
  v38[1] = v8;
  v39 = 1;
  v36 = &v37;
  v37 = a3;
  sub_20B09DDDC((uint64_t)(v5 + 2), (unsigned __int8 *)v38, (uint64_t)&v25);
  v9 = v35;
  if (!v35)
  {
    v14 = v25;
    sub_20AECEBD0(&v15, &v26);
    v24 = 1;
    sub_20AF45794(&v36, (uint64_t)&v14);
    if (v24 && v23)
    {
      if (v22)
      {
        if (v21 < 0)
          operator delete(__p);
        if (v19 < 0)
          operator delete(v18);
      }
      if (v17 && v16 < 0)
      {
        operator delete(v15);
        if (v35)
          goto LABEL_36;
        goto LABEL_39;
      }
    }
    goto LABEL_35;
  }
  v10 = operator new(0x30uLL, MEMORY[0x24BEDB6B8]);
  if (v10)
  {
    v5 = v10;
    v11 = v25;
    v10[3] = *(_QWORD *)&v25.byte8;
    v12 = (char *)(v10 + 3);
    v10[2] = *(_QWORD *)&v11.byte0;
    v13 = v26;
    v10[4] = v26;
    if (v13)
    {
      *(_QWORD *)(*(_QWORD *)&v11.byte8 + 16) = v12;
      *(_QWORD *)&v25.byte0 = &v25.byte8;
      *(_QWORD *)&v25.byte8 = 0;
      *(_QWORD *)&v26 = 0;
    }
    else
    {
      v10[2] = v12;
    }
    *((_DWORD *)v10 + 10) = 1;
    *v10 = &off_24C3F3298;
    v10[1] = &unk_24C3F32E8;
LABEL_35:
    if (v35)
      goto LABEL_36;
    goto LABEL_39;
  }
  v14.byte0 = 0;
  v24 = 0;
  sub_20AF45794(&v36, (uint64_t)&v14);
  if (v24 && v23)
  {
    if (v22)
    {
      if (v21 < 0)
        operator delete(__p);
      if (v19 < 0)
        operator delete(v18);
    }
    v5 = 0;
    if (v17 && v16 < 0)
    {
      operator delete(v15);
      v5 = 0;
      if (v35)
        goto LABEL_36;
      goto LABEL_39;
    }
    goto LABEL_35;
  }
  v5 = 0;
  if (v35)
  {
LABEL_36:
    sub_20AEC833C((uint64_t)&v25, *(char **)&v25.byte8);
    if (v9)
      return v5;
    return 0;
  }
LABEL_39:
  if (v34)
  {
    if (v33)
    {
      if (v32 < 0)
        operator delete(v31);
      if (v30 < 0)
        operator delete(v29);
    }
    if (v28 && v27 < 0)
      operator delete((void *)v26);
  }
  if (!v9)
    return 0;
  return v5;
}

void sub_20AF3C348(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, const char *a9, std::logic_error a10, int a11, __int16 a12, char a13, char a14, char a15, __int128 a16, __int128 a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35,uint64_t a36,uint64_t a37,char a38)
{
  uint64_t v38;
  const std::logic_error *exception_ptr;
  void *v42;
  const char *v43;

  if (a2)
  {
    sub_20AECDEE0((uint64_t)&a38);
    sub_20AF45BCC(v38 - 224);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(exception_object);
      std::logic_error::logic_error(&a10, exception_ptr);
      a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
      __cxa_begin_catch(exception_object);
      a9 = std::logic_error::what(&a10);
      sub_20AED4C84(&__p, &a9);
      sub_20B099E24((__int128 *)&__p, (uint64_t)&a16);
      *(_OWORD *)(v38 - 224) = a16;
      sub_20AECEBD0((_BYTE *)(v38 - 208), &a17);
      *(_BYTE *)(v38 - 104) = 1;
      sub_20AF45794((CFErrorRef ***)(v38 - 96), v38 - 224);
      sub_20AECDEE0(v38 - 224);
      sub_20AECCE40((uint64_t)&a16);
      if (a35)
      {
        if (a34 < 0)
          operator delete(__p);
      }
      MEMORY[0x20BD35020](&a10);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      v42 = __cxa_get_exception_ptr(exception_object);
      sub_20AED4C1C((std::runtime_error *)&__p, (uint64_t)v42);
      __cxa_begin_catch(exception_object);
      v43 = (const char *)(a36 + 48);
      if (*(char *)(a36 + 71) < 0)
        v43 = *(const char **)v43;
      a9 = v43;
      sub_20AED4C84(&a10, &a9);
      sub_20B09A738((__int128 *)&a10, (uint64_t)&a16);
      *(_OWORD *)(v38 - 224) = a16;
      sub_20AECEBD0((_BYTE *)(v38 - 208), &a17);
      *(_BYTE *)(v38 - 104) = 1;
      sub_20AF45794((CFErrorRef ***)(v38 - 96), v38 - 224);
      sub_20AECDEE0(v38 - 224);
      sub_20AECCE40((uint64_t)&a16);
      if (a15 && a14 < 0)
        operator delete(a10.__vftable);
      std::__fs::filesystem::filesystem_error::~filesystem_error((std::__fs::filesystem::filesystem_error *)&__p);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(exception_object);
      *(_BYTE *)(v38 - 224) = 0;
      *(_BYTE *)(v38 - 104) = 0;
      sub_20AF45794((CFErrorRef ***)(v38 - 96), v38 - 224);
      sub_20AECDEE0(v38 - 224);
      __cxa_end_catch();
    }
    JUMPOUT(0x20AF3C0C0);
  }
  _Unwind_Resume(exception_object);
}

void VZServerEnableClientLogger(uint64_t a1, const __CFUUID *a2, char *a3, CFErrorRef *a4)
{
  CFTypeID v8;
  uint64_t v9;
  char v10[16];
  void *v11;
  char v12;
  char v13;
  void *v14;
  char v15;
  void *__p;
  char v17;
  char v18;
  char v19;
  char v20;
  CFUUIDBytes v21;
  _QWORD v22[2];
  char v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (!sub_20AF3C6AC((uint64_t)"VZServerEnableClientLogger", a1, a4))
  {
    if (a2 && (v8 = CFUUIDGetTypeID(), CFGetTypeID(a2) == v8))
    {
      v21 = CFUUIDGetUUIDBytes(a2);
      v22[0] = sub_20B4F6FA8((uint64_t)&v21);
      v22[1] = v9;
      v23 = 1;
    }
    else
    {
      LOBYTE(v22[0]) = 0;
      v23 = 0;
    }
    sub_20B09E01C(a3, (uint64_t **)(a1 + 16), (uint64_t)v22, (uint64_t)v10);
    sub_20AEDCEDC((uint64_t)"VZServerEnableClientLogger", v10, a4);
    if (!v20)
    {
      if (v19)
      {
        if (v18)
        {
          if (v17 < 0)
            operator delete(__p);
          if (v15 < 0)
            operator delete(v14);
        }
        if (v13)
        {
          if (v12 < 0)
            operator delete(v11);
        }
      }
    }
  }
}

void sub_20AF3C694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECD704((uint64_t)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_20AF3C6AC(uint64_t a1, uint64_t a2, CFErrorRef *a3)
{
  unsigned __int8 v6;
  int v8;
  size_t v9;
  unint64_t v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  void *v15[2];
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  void *v22[2];
  uint64_t v23;
  uint64_t v24;
  void *v25[2];
  uint64_t v26;
  char v27;
  char v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  void *__p[2];
  uint64_t v37;
  char v38;
  char v39;
  char v40;

  if (a2)
    return a2 == 0;
  v6 = atomic_load((unsigned __int8 *)&qword_254639B98);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254639B98))
  {
    sub_20AF44434();
    v8 = byte_25463A287;
    if (byte_25463A287 >= 0)
      v9 = byte_25463A287;
    else
      v9 = *((_QWORD *)&xmmword_25463A270 + 1);
    v10 = v9 + 1;
    if (v9 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v10 >= 0x17)
    {
      v12 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v10 | 7) != 0x17)
        v12 = v10 | 7;
      v13 = v12 + 1;
      v11 = (__int128 *)operator new(v12 + 1);
      *((_QWORD *)&xmmword_25463A4E0 + 1) = v9 + 1;
      unk_25463A4F0 = v13 | 0x8000000000000000;
      *(_QWORD *)&xmmword_25463A4E0 = v11;
    }
    else
    {
      unk_25463A4F0 = 0;
      xmmword_25463A4E0 = 0uLL;
      v11 = &xmmword_25463A4E0;
      byte_25463A4F7 = v9 + 1;
      if (!v9)
      {
LABEL_50:
        *(_WORD *)((char *)v11 + v9) = 42;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A4E0, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639B98);
        goto LABEL_3;
      }
    }
    if (v8 >= 0)
      v14 = &xmmword_25463A270;
    else
      v14 = (__int128 *)xmmword_25463A270;
    memmove(v11, v14, v9);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_25463A4F7 < 0)
  {
    sub_20AEC60F4(v15, (void *)xmmword_25463A4E0, *((unint64_t *)&xmmword_25463A4E0 + 1));
  }
  else
  {
    *(_OWORD *)v15 = xmmword_25463A4E0;
    v16 = unk_25463A4F0;
  }
  v17 = 1;
  sub_20AECCECC(a1, (uint64_t)v15, (uint64_t)&v18);
  v29 = v18;
  LOBYTE(v30) = 0;
  v39 = 0;
  if (v28)
  {
    v32 = 0;
    if (v21)
    {
      v30 = v19;
      v31 = v20;
      v20 = 0;
      v19 = 0uLL;
      v32 = 1;
    }
    LOBYTE(v33) = 0;
    v38 = 0;
    if (v27)
    {
      v34 = v23;
      v33 = *(_OWORD *)v22;
      v22[0] = 0;
      v22[1] = 0;
      v35 = v24;
      *(_OWORD *)__p = *(_OWORD *)v25;
      v37 = v26;
      v23 = 0;
      v25[0] = 0;
      v25[1] = 0;
      v26 = 0;
      v38 = 1;
    }
    v39 = 1;
  }
  v40 = 0;
  sub_20AECB410(&v29, a3);
  if (!v40 && v39)
  {
    if (v38)
    {
      if (SHIBYTE(v37) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v34) < 0)
        operator delete((void *)v33);
    }
    if (v32 && SHIBYTE(v31) < 0)
      operator delete((void *)v30);
  }
  if (v28)
  {
    if (v27)
    {
      if (SHIBYTE(v26) < 0)
        operator delete(v25[0]);
      if (SHIBYTE(v23) < 0)
        operator delete(v22[0]);
    }
    if (v21 && SHIBYTE(v20) < 0)
      operator delete((void *)v19);
  }
  if (v17 && SHIBYTE(v16) < 0)
    operator delete(v15[0]);
  return a2 == 0;
}

void sub_20AF3C9D4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639B98);
  _Unwind_Resume(a1);
}

void sub_20AF3C9EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_20AECD704((uint64_t)&a32);
  sub_20AECCE40((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void VZServerDisableClientLogger(uint64_t a1, const __CFUUID *a2, char *a3, CFErrorRef *a4)
{
  CFTypeID v8;
  uint64_t v9;
  char v10[16];
  void *v11;
  char v12;
  char v13;
  void *v14;
  char v15;
  void *__p;
  char v17;
  char v18;
  char v19;
  char v20;
  CFUUIDBytes v21;
  _QWORD v22[2];
  char v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (!sub_20AF3C6AC((uint64_t)"VZServerDisableClientLogger", a1, a4))
  {
    if (a2 && (v8 = CFUUIDGetTypeID(), CFGetTypeID(a2) == v8))
    {
      v21 = CFUUIDGetUUIDBytes(a2);
      v22[0] = sub_20B4F6FA8((uint64_t)&v21);
      v22[1] = v9;
      v23 = 1;
    }
    else
    {
      LOBYTE(v22[0]) = 0;
      v23 = 0;
    }
    sub_20B09E320(a3, (uint64_t **)(a1 + 16), (uint64_t)v22, (uint64_t)v10);
    sub_20AEDCEDC((uint64_t)"VZServerDisableClientLogger", v10, a4);
    if (!v20)
    {
      if (v19)
      {
        if (v18)
        {
          if (v17 < 0)
            operator delete(__p);
          if (v15 < 0)
            operator delete(v14);
        }
        if (v13)
        {
          if (v12 < 0)
            operator delete(v11);
        }
      }
    }
  }
}

void sub_20AF3CB70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECD704((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void VZServerSetClientLoggerEnableState(uint64_t a1, const __CFUUID *a2, char *a3, unsigned int a4, CFErrorRef *a5)
{
  CFTypeID v10;
  uint64_t v11;
  char v12[16];
  void *v13;
  char v14;
  char v15;
  void *v16;
  char v17;
  void *__p;
  char v19;
  char v20;
  char v21;
  char v22;
  CFUUIDBytes v23;
  _QWORD v24[2];
  char v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  if (!sub_20AF3C6AC((uint64_t)"VZServerSetClientLoggerEnableState", a1, a5))
  {
    if (a2 && (v10 = CFUUIDGetTypeID(), CFGetTypeID(a2) == v10))
    {
      v23 = CFUUIDGetUUIDBytes(a2);
      v24[0] = sub_20B4F6FA8((uint64_t)&v23);
      v24[1] = v11;
      v25 = 1;
    }
    else
    {
      LOBYTE(v24[0]) = 0;
      v25 = 0;
    }
    sub_20B09E624(a3, (uint64_t **)(a1 + 16), (uint64_t)v24, a4, (uint64_t)v12);
    sub_20AEDCEDC((uint64_t)"VZServerSetClientLoggerEnableState", v12, a5);
    if (!v22)
    {
      if (v21)
      {
        if (v20)
        {
          if (v19 < 0)
            operator delete(__p);
          if (v17 < 0)
            operator delete(v16);
        }
        if (v15)
        {
          if (v14 < 0)
            operator delete(v13);
        }
      }
    }
  }
}

void sub_20AF3CCD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECD704((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void VZServerSetClientLoggerEnableStates(uint64_t a1, const __CFUUID *a2, uint64_t a3, CFErrorRef *a4)
{
  CFTypeID v8;
  uint64_t v9;
  char v10[16];
  void *v11;
  char v12;
  char v13;
  void *v14;
  char v15;
  void *__p;
  char v17;
  char v18;
  char v19;
  char v20;
  CFUUIDBytes v21;
  _QWORD v22[2];
  char v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (!sub_20AF3C6AC((uint64_t)"VZServerSetClientLoggerEnableStates", a1, a4)
    && !sub_20AEFE3FC((uint64_t)"VZServerSetClientLoggerEnableStates", a3, a4))
  {
    if (a2 && (v8 = CFUUIDGetTypeID(), CFGetTypeID(a2) == v8))
    {
      v21 = CFUUIDGetUUIDBytes(a2);
      v22[0] = sub_20B4F6FA8((uint64_t)&v21);
      v22[1] = v9;
      v23 = 1;
    }
    else
    {
      LOBYTE(v22[0]) = 0;
      v23 = 0;
    }
    sub_20B09E9F8((uint64_t **)(a1 + 16), (uint64_t)v22, (const void ***)(a3 + 16), (uint64_t)v10);
    sub_20AEDCEDC((uint64_t)"VZServerSetClientLoggerEnableStates", v10, a4);
    if (!v20)
    {
      if (v19)
      {
        if (v18)
        {
          if (v17 < 0)
            operator delete(__p);
          if (v15 < 0)
            operator delete(v14);
        }
        if (v13)
        {
          if (v12 < 0)
            operator delete(v11);
        }
      }
    }
  }
}

void sub_20AF3CE50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECD704((uint64_t)&a9);
  _Unwind_Resume(a1);
}

const char *VZSyncControlStateIdProceeding()
{
  return "proceeding";
}

const char *VZSyncControlStateIdWaiting()
{
  return "waiting";
}

const char *VZSyncControlStateIdLockstep()
{
  return "lockstep";
}

uint64_t VZSyncControlGetTypeID()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639BA8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254639BA8))
    return qword_254639BA0;
  qword_254639BA0 = sub_20AECB130();
  __cxa_guard_release(&qword_254639BA8);
  return qword_254639BA0;
}

_QWORD *VZServerGetSyncControl(uint64_t a1)
{
  BOOL v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_20AF3B7E8((uint64_t)"VZServerGetSyncControl", a1, 0);
  result = 0;
  if (!v2)
  {
    result = *(_QWORD **)(a1 + 80);
    if (!result)
    {
      if (*(_BYTE *)(a1 + 64))
      {
        result = sub_20AF40A98(a1 + 32);
        v4 = *(_QWORD *)(a1 + 80);
        *(_QWORD *)(a1 + 80) = result;
        if (v4)
        {
          (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
          return *(_QWORD **)(a1 + 80);
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

_QWORD *VZServerGetSyncControlMutable(uint64_t a1)
{
  BOOL v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_20AF3C6AC((uint64_t)"VZServerGetSyncControlMutable", a1, 0);
  result = 0;
  if (!v2)
  {
    result = *(_QWORD **)(a1 + 80);
    if (!result)
    {
      if (*(_BYTE *)(a1 + 64))
      {
        result = sub_20AF40A98(a1 + 32);
        v4 = *(_QWORD *)(a1 + 80);
        *(_QWORD *)(a1 + 80) = result;
        if (v4)
        {
          (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
          return *(_QWORD **)(a1 + 80);
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t VZSyncControlGetStateId(uint64_t a1)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  int v5;
  size_t v6;
  unint64_t v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  int v12;
  size_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __int128 *v19;
  void *v20[2];
  uint64_t v21;
  char v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char v26;
  void *v27[2];
  uint64_t v28;
  uint64_t v29;
  void *v30[2];
  uint64_t v31;
  char v32;
  char v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  void *__p[2];
  uint64_t v42;
  char v43;
  char v44;
  char v45;

  if (a1)
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 56))(*(_QWORD *)(a1 + 32));
  v2 = atomic_load((unsigned __int8 *)&qword_254639BB0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254639BB0))
  {
    v4 = atomic_load((unsigned __int8 *)&qword_254639BB8);
    if ((v4 & 1) != 0 || !__cxa_guard_acquire(&qword_254639BB8))
      goto LABEL_39;
    sub_20AF40DC4();
    v12 = byte_254639EF7;
    if (byte_254639EF7 >= 0)
      v13 = byte_254639EF7;
    else
      v13 = *((_QWORD *)&xmmword_254639EE0 + 1);
    v14 = v13 + 6;
    if (v13 + 6 > 0x7FFFFFFFFFFFFFF7)
      sub_20AEC0138();
    if (v14 >= 0x17)
    {
      v16 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v14 | 7) != 0x17)
        v16 = v14 | 7;
      v17 = v16 + 1;
      v18 = (char *)operator new(v16 + 1);
      qword_25463A518 = v13 + 6;
      unk_25463A520 = v17 | 0x8000000000000000;
      qword_25463A510 = (uint64_t)v18;
      *(_DWORD *)v18 = 1936617315;
      *((_WORD *)v18 + 2) = 8308;
      v15 = v18 + 6;
    }
    else
    {
      qword_25463A518 = 0;
      unk_25463A520 = 0;
      qword_25463A510 = 0x2074736E6F63;
      byte_25463A527 = v13 + 6;
      v15 = (char *)&qword_25463A510 + 6;
      if (!v13)
      {
LABEL_72:
        v15[v13] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A510, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639BB8);
LABEL_39:
        v5 = byte_25463A527;
        if (byte_25463A527 >= 0)
          v6 = byte_25463A527;
        else
          v6 = qword_25463A518;
        v7 = v6 + 1;
        if (v6 + 1 > 0x7FFFFFFFFFFFFFF7)
          sub_20AEC0138();
        if (v7 >= 0x17)
        {
          v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v7 | 7) != 0x17)
            v9 = v7 | 7;
          v10 = v9 + 1;
          v8 = (__int128 *)operator new(v9 + 1);
          *((_QWORD *)&xmmword_25463A4F8 + 1) = v6 + 1;
          unk_25463A508 = v10 | 0x8000000000000000;
          *(_QWORD *)&xmmword_25463A4F8 = v8;
        }
        else
        {
          unk_25463A508 = 0;
          xmmword_25463A4F8 = 0uLL;
          v8 = &xmmword_25463A4F8;
          byte_25463A50F = v6 + 1;
          if (!v6)
          {
LABEL_55:
            *(_WORD *)((char *)v8 + v6) = 42;
            __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A4F8, &dword_20AEBB000);
            __cxa_guard_release(&qword_254639BB0);
            goto LABEL_4;
          }
        }
        if (v5 >= 0)
          v11 = &qword_25463A510;
        else
          v11 = (uint64_t *)qword_25463A510;
        memmove(v8, v11, v6);
        goto LABEL_55;
      }
    }
    if (v12 >= 0)
      v19 = &xmmword_254639EE0;
    else
      v19 = (__int128 *)xmmword_254639EE0;
    memmove(v15, v19, v13);
    goto LABEL_72;
  }
LABEL_4:
  if (byte_25463A50F < 0)
  {
    sub_20AEC60F4(v20, (void *)xmmword_25463A4F8, *((unint64_t *)&xmmword_25463A4F8 + 1));
  }
  else
  {
    *(_OWORD *)v20 = xmmword_25463A4F8;
    v21 = unk_25463A508;
  }
  v22 = 1;
  sub_20AECCECC((uint64_t)"VZSyncControlGetStateId", (uint64_t)v20, (uint64_t)&v23);
  v34 = v23;
  LOBYTE(v35) = 0;
  v44 = 0;
  if (v33)
  {
    v37 = 0;
    if (v26)
    {
      v35 = v24;
      v36 = v25;
      v25 = 0;
      v24 = 0uLL;
      v37 = 1;
    }
    LOBYTE(v38) = 0;
    v43 = 0;
    if (v32)
    {
      v39 = v28;
      v38 = *(_OWORD *)v27;
      v27[0] = 0;
      v27[1] = 0;
      v40 = v29;
      *(_OWORD *)__p = *(_OWORD *)v30;
      v42 = v31;
      v28 = 0;
      v30[0] = 0;
      v30[1] = 0;
      v31 = 0;
      v43 = 1;
    }
    v44 = 1;
  }
  v45 = 0;
  v3 = atomic_load((unsigned __int8 *)&qword_254630258);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254630258))
  {
    __cxa_atexit((void (*)(void *))sub_20AECE2D8, &unk_254630168, &dword_20AEBB000);
    __cxa_guard_release(&qword_254630258);
  }
  sub_20AECB50C((uint64_t)&unk_254630168, &v34);
  if (!v45 && v44)
  {
    if (v43)
    {
      if (SHIBYTE(v42) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v39) < 0)
        operator delete((void *)v38);
    }
    if (v37 && SHIBYTE(v36) < 0)
      operator delete((void *)v35);
  }
  if (v33)
  {
    if (v32)
    {
      if (SHIBYTE(v31) < 0)
        operator delete(v30[0]);
      if (SHIBYTE(v28) < 0)
        operator delete(v27[0]);
    }
    if (v26 && SHIBYTE(v25) < 0)
      operator delete((void *)v24);
  }
  if (v22)
  {
    if (SHIBYTE(v21) < 0)
      operator delete(v20[0]);
  }
  return 0;
}

void sub_20AF3D4C8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639BB8);
  __cxa_guard_abort(&qword_254639BB0);
  _Unwind_Resume(a1);
}

void sub_20AF3D4F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void VZSyncControlWaitIndefinitely(uint64_t a1)
{
  char v2[16];
  void *v3;
  char v4;
  char v5;
  void *v6;
  char v7;
  void *__p;
  char v9;
  char v10;
  char v11;
  char v12;

  if (!sub_20AF3D5E4((uint64_t)"VZSyncControlWaitIndefinitely", a1))
  {
    sub_20B09CA68(a1 + 16, (uint64_t)v2);
    sub_20AEDCEDC((uint64_t)"VZSyncControlWaitIndefinitely", v2, 0);
    if (!v12)
    {
      if (v11)
      {
        if (v10)
        {
          if (v9 < 0)
            operator delete(__p);
          if (v7 < 0)
            operator delete(v6);
        }
        if (v5)
        {
          if (v4 < 0)
            operator delete(v3);
        }
      }
    }
  }
}

void sub_20AF3D5D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECD704((uint64_t)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_20AF3D5E4(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4;
  unsigned __int8 v5;
  int v7;
  size_t v8;
  unint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  void *v14[2];
  uint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  void *v21[2];
  uint64_t v22;
  uint64_t v23;
  void *v24[2];
  uint64_t v25;
  char v26;
  char v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  void *__p[2];
  uint64_t v36;
  char v37;
  char v38;
  char v39;

  if (a2)
    return a2 == 0;
  v4 = atomic_load((unsigned __int8 *)&qword_254639BC0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254639BC0))
  {
    sub_20AF40DC4();
    v7 = byte_254639EF7;
    if (byte_254639EF7 >= 0)
      v8 = byte_254639EF7;
    else
      v8 = *((_QWORD *)&xmmword_254639EE0 + 1);
    v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v9 >= 0x17)
    {
      v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17)
        v11 = v9 | 7;
      v12 = v11 + 1;
      v10 = (__int128 *)operator new(v11 + 1);
      *((_QWORD *)&xmmword_25463A528 + 1) = v8 + 1;
      unk_25463A538 = v12 | 0x8000000000000000;
      *(_QWORD *)&xmmword_25463A528 = v10;
    }
    else
    {
      unk_25463A538 = 0;
      xmmword_25463A528 = 0uLL;
      v10 = &xmmword_25463A528;
      byte_25463A53F = v8 + 1;
      if (!v8)
      {
LABEL_53:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A528, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639BC0);
        goto LABEL_3;
      }
    }
    if (v7 >= 0)
      v13 = &xmmword_254639EE0;
    else
      v13 = (__int128 *)xmmword_254639EE0;
    memmove(v10, v13, v8);
    goto LABEL_53;
  }
LABEL_3:
  if (byte_25463A53F < 0)
  {
    sub_20AEC60F4(v14, (void *)xmmword_25463A528, *((unint64_t *)&xmmword_25463A528 + 1));
  }
  else
  {
    *(_OWORD *)v14 = xmmword_25463A528;
    v15 = unk_25463A538;
  }
  v16 = 1;
  sub_20AECCECC(a1, (uint64_t)v14, (uint64_t)&v17);
  v28 = v17;
  LOBYTE(v29) = 0;
  v38 = 0;
  if (v27)
  {
    v31 = 0;
    if (v20)
    {
      v29 = v18;
      v30 = v19;
      v19 = 0;
      v18 = 0uLL;
      v31 = 1;
    }
    LOBYTE(v32) = 0;
    v37 = 0;
    if (v26)
    {
      v33 = v22;
      v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      v34 = v23;
      *(_OWORD *)__p = *(_OWORD *)v24;
      v36 = v25;
      v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      v25 = 0;
      v37 = 1;
    }
    v38 = 1;
  }
  v39 = 0;
  v5 = atomic_load((unsigned __int8 *)&qword_254630258);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_254630258))
  {
    __cxa_atexit((void (*)(void *))sub_20AECE2D8, &unk_254630168, &dword_20AEBB000);
    __cxa_guard_release(&qword_254630258);
  }
  sub_20AECB50C((uint64_t)&unk_254630168, &v28);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v33) < 0)
        operator delete((void *)v32);
    }
    if (v31 && SHIBYTE(v30) < 0)
      operator delete((void *)v29);
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0)
        operator delete(v24[0]);
      if (SHIBYTE(v22) < 0)
        operator delete(v21[0]);
    }
    if (v20 && SHIBYTE(v19) < 0)
      operator delete((void *)v18);
  }
  if (v16 && SHIBYTE(v15) < 0)
    operator delete(v14[0]);
  return a2 == 0;
}

void sub_20AF3D958(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639BC0);
  _Unwind_Resume(a1);
}

void sub_20AF3D970(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void VZSyncControlProceedIndefinitely(uint64_t a1)
{
  char v2[16];
  void *v3;
  char v4;
  char v5;
  void *v6;
  char v7;
  void *__p;
  char v9;
  char v10;
  char v11;
  char v12;

  if (!sub_20AF3D5E4((uint64_t)"VZSyncControlProceedIndefinitely", a1))
  {
    sub_20B09CC88(a1 + 16, (uint64_t)v2);
    sub_20AEDCEDC((uint64_t)"VZSyncControlProceedIndefinitely", v2, 0);
    if (!v12)
    {
      if (v11)
      {
        if (v10)
        {
          if (v9 < 0)
            operator delete(__p);
          if (v7 < 0)
            operator delete(v6);
        }
        if (v5)
        {
          if (v4 < 0)
            operator delete(v3);
        }
      }
    }
  }
}

void sub_20AF3DA4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECD704((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void VZSyncControlContinue(uint64_t a1)
{
  char v2[16];
  void *v3;
  char v4;
  char v5;
  void *v6;
  char v7;
  void *__p;
  char v9;
  char v10;
  char v11;
  char v12;

  if (!sub_20AF3D5E4((uint64_t)"VZSyncControlContinue", a1))
  {
    (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 40))(*(_QWORD *)(a1 + 32));
    v12 = 1;
    sub_20AEDCEDC((uint64_t)"VZSyncControlContinue", v2, 0);
    if (!v12)
    {
      if (v11)
      {
        if (v10)
        {
          if (v9 < 0)
            operator delete(__p);
          if (v7 < 0)
            operator delete(v6);
        }
        if (v5)
        {
          if (v4 < 0)
            operator delete(v3);
        }
      }
    }
  }
}

void sub_20AF3DB24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECD704((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void VZSyncControlEngageLockstepPattern(uint64_t a1)
{
  char v2[16];
  void *v3;
  char v4;
  char v5;
  void *v6;
  char v7;
  void *__p;
  char v9;
  char v10;
  char v11;
  char v12;

  if (!sub_20AF3D5E4((uint64_t)"VZSyncControlEngageLockstepPattern", a1))
  {
    sub_20B09CEA8(a1 + 16, (uint64_t)v2);
    sub_20AEDCEDC((uint64_t)"VZSyncControlEngageLockstepPattern", v2, 0);
    if (!v12)
    {
      if (v11)
      {
        if (v10)
        {
          if (v9 < 0)
            operator delete(__p);
          if (v7 < 0)
            operator delete(v6);
        }
        if (v5)
        {
          if (v4 < 0)
            operator delete(v3);
        }
      }
    }
  }
}

void sub_20AF3DBF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECD704((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF3DC04(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;

  v1 = (unsigned int *)(result + 248);
  do
    v2 = __ldaxr(v1);
  while (__stlxr(v2 + 1, v1));
  return result;
}

uint64_t sub_20AF3DC1C(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;
  unsigned int v3;

  v1 = (unsigned int *)(result + 248);
  do
  {
    v2 = __ldaxr(v1);
    v3 = v2 - 1;
  }
  while (__stlxr(v3, v1));
  if (!v3)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 8) + 8))(result + 8);
  return result;
}

uint64_t sub_20AF3DC44()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2546399F0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546399F0))
    return qword_2546399E8;
  qword_2546399E8 = sub_20AECB130();
  __cxa_guard_release(&qword_2546399F0);
  return qword_2546399E8;
}

void *sub_20AF3DCA4(uint64_t a1, void *lpsrc)
{
  void *result;
  uint64_t v4[4];
  uint64_t v5[4];
  char v6;

  result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C3F21C0, (const struct __class_type_info *)&unk_24C3F4798, 0);
  if (result)
  {
    v5[0] = a1 + 16;
    v5[1] = a1 + 32;
    v5[2] = a1 + 72;
    v5[3] = a1 + 224;
    v4[0] = (uint64_t)result + 16;
    v4[1] = (uint64_t)result + 32;
    v4[2] = (uint64_t)result + 72;
    v4[3] = (uint64_t)result + 224;
    return (void *)sub_20B21412C((uint64_t)&v6, v5, v4);
  }
  return result;
}

uint64_t sub_20AF3DD2C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  const void *v28[2];
  char v29;

  __cxa_begin_catch(a1);
  sub_20AF40088();
  sub_20AEC0D64(v28, "failed to compare equal");
  sub_20AECD224((std::string::size_type)&xmmword_254639BF8, v28, 0);
  if (v29 < 0)
    operator delete((void *)v28[0]);
  __cxa_end_catch();
  return 0;
}

CFTypeRef sub_20AF3DD84(uint64_t a1)
{
  uint64_t v2;
  int v3;
  size_t v4;
  void **v5;
  unint64_t v6;
  unint64_t v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CFTypeRef v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  char v21;
  CFTypeRef cf;
  std::__shared_weak_count *v23;
  void *__dst[2];
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  sub_20AF40088();
  v26 = a1;
  v2 = operator new();
  *(_QWORD *)(v2 + 272) = 0;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_OWORD *)(v2 + 224) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)v2 = 0u;
  sub_20AEC0BD8(v2);
  v27 = (_QWORD *)v2;
  sub_20B212684((_QWORD *)(v2 + 16), a1 + 16);
  v3 = *(_DWORD *)(v2 + 120);
  if ((v3 & 0x10) != 0)
  {
    v6 = *(_QWORD *)(v2 + 112);
    v7 = *(_QWORD *)(v2 + 72);
    if (v6 < v7)
    {
      *(_QWORD *)(v2 + 112) = v7;
      v6 = v7;
    }
    v8 = *(const void **)(v2 + 64);
    v4 = v6 - (_QWORD)v8;
    if (v6 - (unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_29;
  }
  else
  {
    if ((v3 & 8) == 0)
    {
      v4 = 0;
      HIBYTE(v25) = 0;
      v5 = __dst;
      goto LABEL_14;
    }
    v8 = *(const void **)(v2 + 40);
    v4 = *(_QWORD *)(v2 + 56) - (_QWORD)v8;
    if (v4 >= 0x7FFFFFFFFFFFFFF8)
LABEL_29:
      sub_20AEC0138();
  }
  if (v4 >= 0x17)
  {
    v9 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v9 = v4 | 7;
    v10 = v9 + 1;
    v5 = (void **)operator new(v9 + 1);
    __dst[1] = (void *)v4;
    v25 = v10 | 0x8000000000000000;
    __dst[0] = v5;
    goto LABEL_13;
  }
  HIBYTE(v25) = v4;
  v5 = __dst;
  if (v4)
LABEL_13:
    memmove(v5, v8, v4);
LABEL_14:
  *((_BYTE *)v5 + v4) = 0;
  v11 = v27;
  if (v27)
  {
    v12 = MEMORY[0x24BEDB7F0];
    v13 = *MEMORY[0x24BEDB7F0];
    *v27 = *MEMORY[0x24BEDB7F0];
    v14 = *(_QWORD *)(v12 + 72);
    *(_QWORD *)((char *)v11 + *(_QWORD *)(v13 - 24)) = *(_QWORD *)(v12 + 64);
    v11[3] = MEMORY[0x24BEDB848] + 16;
    v11[2] = v14;
    if (*((char *)v11 + 111) < 0)
      operator delete((void *)v11[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v11 + 16);
    MEMORY[0x20BD3583C](v11, 0x10B2C40EED050F3);
  }
  sub_20AED55DC("<", (uint64_t)&xmmword_254639BF8, (uint64_t)" ", &v26, (uint64_t)">", (uint64_t)__dst);
  if (SHIBYTE(v25) < 0)
    operator delete(__dst[0]);
  sub_20B4EE2F0((uint64_t)&__p, (CFStringRef *)&cf);
  v15 = cf;
  if (cf)
    CFRetain(cf);
  v16 = v23;
  if (!v23)
    goto LABEL_26;
  p_shared_owners = (unint64_t *)&v23->__shared_owners_;
  do
    v18 = __ldaxr(p_shared_owners);
  while (__stlxr(v18 - 1, p_shared_owners));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    if ((v21 & 0x80000000) == 0)
      return v15;
  }
  else
  {
LABEL_26:
    if ((v21 & 0x80000000) == 0)
      return v15;
  }
  operator delete(__p);
  return v15;
}

uint64_t sub_20AF3E02C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  const void *v32[2];
  char v33;
  uint64_t v34;

  sub_20AEC147C((uint64_t)&v34);
  if (v33 < 0)
    operator delete((void *)v32[0]);
  __cxa_begin_catch(a1);
  sub_20AF40088();
  sub_20AEC0D64(v32, "failed to create description");
  sub_20AECD224((std::string::size_type)&xmmword_254639BF8, v32, 0);
  if (v33 < 0)
    operator delete((void *)v32[0]);
  __cxa_end_catch();
  return 0;
}

uint64_t sub_20AF3E100(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 248));
}

uint64_t sub_20AF3E10C(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;

  v1 = (unsigned int *)(result + 256);
  do
    v2 = __ldaxr(v1);
  while (__stlxr(v2 + 1, v1));
  return result;
}

uint64_t sub_20AF3E124(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;
  unsigned int v3;

  v1 = (unsigned int *)(result + 256);
  do
  {
    v2 = __ldaxr(v1);
    v3 = v2 - 1;
  }
  while (__stlxr(v3, v1));
  if (!v3)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 8) + 8))(result + 8);
  return result;
}

uint64_t sub_20AF3E14C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639A00);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254639A00))
    return qword_2546399F8;
  qword_2546399F8 = sub_20AECB130();
  __cxa_guard_release(&qword_254639A00);
  return qword_2546399F8;
}

unsigned __int8 *sub_20AF3E1AC(uint64_t a1, void *lpsrc, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  unsigned __int8 *result;
  uint64_t v16[4];
  uint64_t v17[4];
  char v18;

  result = (unsigned __int8 *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C3F21C0, (const struct __class_type_info *)&unk_24C3F4890, 0);
  if (result)
  {
    if (*(unsigned __int8 *)(a1 + 16) == result[16])
    {
      v17[0] = a1 + 24;
      v17[1] = a1 + 40;
      v17[2] = a1 + 80;
      v17[3] = a1 + 232;
      v16[0] = (uint64_t)(result + 24);
      v16[1] = (uint64_t)(result + 40);
      v16[2] = (uint64_t)(result + 80);
      v16[3] = (uint64_t)(result + 232);
      return (unsigned __int8 *)sub_20B21412C((uint64_t)&v18, v17, v16);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

CFTypeRef sub_20AF3E29C(uint64_t a1)
{
  uint64_t v2;
  int v3;
  size_t v4;
  void **v5;
  unint64_t v6;
  unint64_t v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CFTypeRef v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  char v21;
  CFTypeRef cf;
  std::__shared_weak_count *v23;
  void *__dst[2];
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  sub_20AF418B4();
  v26 = a1;
  v2 = operator new();
  *(_QWORD *)(v2 + 272) = 0;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_OWORD *)(v2 + 224) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)v2 = 0u;
  sub_20AEC0BD8(v2);
  v27 = (_QWORD *)v2;
  sub_20B212D10((_QWORD *)(v2 + 16), (_BYTE *)(a1 + 16));
  v3 = *(_DWORD *)(v2 + 120);
  if ((v3 & 0x10) != 0)
  {
    v6 = *(_QWORD *)(v2 + 112);
    v7 = *(_QWORD *)(v2 + 72);
    if (v6 < v7)
    {
      *(_QWORD *)(v2 + 112) = v7;
      v6 = v7;
    }
    v8 = *(const void **)(v2 + 64);
    v4 = v6 - (_QWORD)v8;
    if (v6 - (unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_29;
  }
  else
  {
    if ((v3 & 8) == 0)
    {
      v4 = 0;
      HIBYTE(v25) = 0;
      v5 = __dst;
      goto LABEL_14;
    }
    v8 = *(const void **)(v2 + 40);
    v4 = *(_QWORD *)(v2 + 56) - (_QWORD)v8;
    if (v4 >= 0x7FFFFFFFFFFFFFF8)
LABEL_29:
      sub_20AEC0138();
  }
  if (v4 >= 0x17)
  {
    v9 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v9 = v4 | 7;
    v10 = v9 + 1;
    v5 = (void **)operator new(v9 + 1);
    __dst[1] = (void *)v4;
    v25 = v10 | 0x8000000000000000;
    __dst[0] = v5;
    goto LABEL_13;
  }
  HIBYTE(v25) = v4;
  v5 = __dst;
  if (v4)
LABEL_13:
    memmove(v5, v8, v4);
LABEL_14:
  *((_BYTE *)v5 + v4) = 0;
  v11 = v27;
  if (v27)
  {
    v12 = MEMORY[0x24BEDB7F0];
    v13 = *MEMORY[0x24BEDB7F0];
    *v27 = *MEMORY[0x24BEDB7F0];
    v14 = *(_QWORD *)(v12 + 72);
    *(_QWORD *)((char *)v11 + *(_QWORD *)(v13 - 24)) = *(_QWORD *)(v12 + 64);
    v11[3] = MEMORY[0x24BEDB848] + 16;
    v11[2] = v14;
    if (*((char *)v11 + 111) < 0)
      operator delete((void *)v11[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v11 + 16);
    MEMORY[0x20BD3583C](v11, 0x10B2C40EED050F3);
  }
  sub_20AED55DC("<", (uint64_t)&xmmword_254639F88, (uint64_t)" ", &v26, (uint64_t)">", (uint64_t)__dst);
  if (SHIBYTE(v25) < 0)
    operator delete(__dst[0]);
  sub_20B4EE2F0((uint64_t)&__p, (CFStringRef *)&cf);
  v15 = cf;
  if (cf)
    CFRetain(cf);
  v16 = v23;
  if (!v23)
    goto LABEL_26;
  p_shared_owners = (unint64_t *)&v23->__shared_owners_;
  do
    v18 = __ldaxr(p_shared_owners);
  while (__stlxr(v18 - 1, p_shared_owners));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    if ((v21 & 0x80000000) == 0)
      return v15;
  }
  else
  {
LABEL_26:
    if ((v21 & 0x80000000) == 0)
      return v15;
  }
  operator delete(__p);
  return v15;
}

uint64_t sub_20AF3E544(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  const void *v32[2];
  char v33;
  uint64_t v34;

  sub_20AEC147C((uint64_t)&v34);
  if (v33 < 0)
    operator delete((void *)v32[0]);
  __cxa_begin_catch(a1);
  sub_20AF418B4();
  sub_20AEC0D64(v32, "failed to create description");
  sub_20AECD224((std::string::size_type)&xmmword_254639F88, v32, 0);
  if (v33 < 0)
    operator delete((void *)v32[0]);
  __cxa_end_catch();
  return 0;
}

uint64_t sub_20AF3E618(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 256));
}

uint64_t sub_20AF3E624(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;

  v1 = (unsigned int *)(result + 40);
  do
    v2 = __ldaxr(v1);
  while (__stlxr(v2 + 1, v1));
  return result;
}

uint64_t sub_20AF3E63C(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;
  unsigned int v3;

  v1 = (unsigned int *)(result + 40);
  do
  {
    v2 = __ldaxr(v1);
    v3 = v2 - 1;
  }
  while (__stlxr(v3, v1));
  if (!v3)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 8) + 8))(result + 8);
  return result;
}

uint64_t sub_20AF3E664()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639A30);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254639A30))
    return qword_254639A28;
  qword_254639A28 = sub_20AECB130();
  __cxa_guard_release(&qword_254639A30);
  return qword_254639A28;
}

char *sub_20AF3E6C4(uint64_t a1, void *lpsrc)
{
  char *result;
  _QWORD *v4;
  uint64_t v5;

  result = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C3F21C0, (const struct __class_type_info *)&unk_24C3F4988, 0);
  if (result)
  {
    v5 = a1 + 16;
    v4 = result + 16;
    return (char *)sub_20AF45D6C((uint64_t)&v5, &v4);
  }
  return result;
}

uint64_t sub_20AF3E730(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  const void *v22[2];
  char v23;

  __cxa_begin_catch(a1);
  sub_20AF4280C();
  sub_20AEC0D64(v22, "failed to compare equal");
  sub_20AECD224((std::string::size_type)&xmmword_25463A048, v22, 0);
  if (v23 < 0)
    operator delete((void *)v22[0]);
  __cxa_end_catch();
  return 0;
}

CFTypeRef sub_20AF3E788(uint64_t a1)
{
  uint64_t v2;
  int v3;
  size_t v4;
  void **v5;
  unint64_t v6;
  unint64_t v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CFTypeRef v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  char v21;
  CFTypeRef cf;
  std::__shared_weak_count *v23;
  void *__dst[2];
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  char v29;

  sub_20AF4280C();
  v26 = a1;
  v2 = operator new();
  *(_QWORD *)(v2 + 272) = 0;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_OWORD *)(v2 + 224) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)v2 = 0u;
  sub_20AEC0BD8(v2);
  v27 = (_QWORD *)v2;
  v28 = (_QWORD *)(v2 + 16);
  sub_20AEC01D0((_QWORD *)(v2 + 16), (uint64_t)"{", 1);
  sub_20AFB0E24((uint64_t)&v29, &v28, (_QWORD *)(a1 + 16));
  sub_20AEC01D0(v28, (uint64_t)"}", 1);
  v3 = *(_DWORD *)(v2 + 120);
  if ((v3 & 0x10) != 0)
  {
    v6 = *(_QWORD *)(v2 + 112);
    v7 = *(_QWORD *)(v2 + 72);
    if (v6 < v7)
    {
      *(_QWORD *)(v2 + 112) = v7;
      v6 = v7;
    }
    v8 = *(const void **)(v2 + 64);
    v4 = v6 - (_QWORD)v8;
    if (v6 - (unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_29;
  }
  else
  {
    if ((v3 & 8) == 0)
    {
      v4 = 0;
      HIBYTE(v25) = 0;
      v5 = __dst;
      goto LABEL_14;
    }
    v8 = *(const void **)(v2 + 40);
    v4 = *(_QWORD *)(v2 + 56) - (_QWORD)v8;
    if (v4 >= 0x7FFFFFFFFFFFFFF8)
LABEL_29:
      sub_20AEC0138();
  }
  if (v4 >= 0x17)
  {
    v9 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v9 = v4 | 7;
    v10 = v9 + 1;
    v5 = (void **)operator new(v9 + 1);
    __dst[1] = (void *)v4;
    v25 = v10 | 0x8000000000000000;
    __dst[0] = v5;
    goto LABEL_13;
  }
  HIBYTE(v25) = v4;
  v5 = __dst;
  if (v4)
LABEL_13:
    memmove(v5, v8, v4);
LABEL_14:
  *((_BYTE *)v5 + v4) = 0;
  v11 = v27;
  if (v27)
  {
    v12 = MEMORY[0x24BEDB7F0];
    v13 = *MEMORY[0x24BEDB7F0];
    *v27 = *MEMORY[0x24BEDB7F0];
    v14 = *(_QWORD *)(v12 + 72);
    *(_QWORD *)((char *)v11 + *(_QWORD *)(v13 - 24)) = *(_QWORD *)(v12 + 64);
    v11[3] = MEMORY[0x24BEDB848] + 16;
    v11[2] = v14;
    if (*((char *)v11 + 111) < 0)
      operator delete((void *)v11[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v11 + 16);
    MEMORY[0x20BD3583C](v11, 0x10B2C40EED050F3);
  }
  sub_20AED55DC("<", (uint64_t)&xmmword_25463A048, (uint64_t)" ", &v26, (uint64_t)">", (uint64_t)__dst);
  if (SHIBYTE(v25) < 0)
    operator delete(__dst[0]);
  sub_20B4EE2F0((uint64_t)&__p, (CFStringRef *)&cf);
  v15 = cf;
  if (cf)
    CFRetain(cf);
  v16 = v23;
  if (!v23)
    goto LABEL_26;
  p_shared_owners = (unint64_t *)&v23->__shared_owners_;
  do
    v18 = __ldaxr(p_shared_owners);
  while (__stlxr(v18 - 1, p_shared_owners));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    if ((v21 & 0x80000000) == 0)
      return v15;
  }
  else
  {
LABEL_26:
    if ((v21 & 0x80000000) == 0)
      return v15;
  }
  operator delete(__p);
  return v15;
}

uint64_t sub_20AF3EA5C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  const void *v34[2];
  char v35;
  uint64_t v36;

  sub_20AEC147C((uint64_t)&v36);
  if (v35 < 0)
    operator delete((void *)v34[0]);
  __cxa_begin_catch(a1);
  sub_20AF4280C();
  sub_20AEC0D64(v34, "failed to create description");
  sub_20AECD224((std::string::size_type)&xmmword_25463A048, v34, 0);
  if (v35 < 0)
    operator delete((void *)v34[0]);
  __cxa_end_catch();
  return 0;
}

uint64_t sub_20AF3EB30(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 40));
}

uint64_t sub_20AF3EB3C(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;

  v1 = (unsigned int *)(result + 152);
  do
    v2 = __ldaxr(v1);
  while (__stlxr(v2 + 1, v1));
  return result;
}

uint64_t sub_20AF3EB54(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;
  unsigned int v3;

  v1 = (unsigned int *)(result + 152);
  do
  {
    v2 = __ldaxr(v1);
    v3 = v2 - 1;
  }
  while (__stlxr(v3, v1));
  if (!v3)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 8) + 8))(result + 8);
  return result;
}

uint64_t sub_20AF3EB7C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639A50);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254639A50))
    return qword_254639A48;
  qword_254639A48 = sub_20AECB130();
  __cxa_guard_release(&qword_254639A50);
  return qword_254639A48;
}

_DWORD *sub_20AF3EBDC(uint64_t a1, void *lpsrc)
{
  _DWORD *result;
  int v4;
  BOOL v5;
  char *v7;
  char *v8;
  _QWORD *v9;

  result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C3F21C0, (const struct __class_type_info *)&unk_24C3F4A80, 0);
  if (result)
  {
    v4 = *((unsigned __int8 *)result + 24);
    if (*(_BYTE *)(a1 + 24))
      v5 = v4 == 0;
    else
      v5 = 1;
    if (!v5)
    {
      if (*(unsigned __int16 *)(a1 + 16) != *((unsigned __int16 *)result + 8) || *(_DWORD *)(a1 + 20) != result[5])
        return 0;
LABEL_15:
      if (*(unsigned __int8 *)(a1 + 28) == *((unsigned __int8 *)result + 28))
      {
        if (*(_BYTE *)(a1 + 56) && *((_BYTE *)result + 56))
        {
          v8 = *(char **)(a1 + 32);
          v7 = *(char **)(a1 + 40);
          v9 = (_QWORD *)*((_QWORD *)result + 4);
          if (v7 - v8 == *((_QWORD *)result + 5) - (_QWORD)v9)
          {
            if (v8 != v7)
            {
              while (*(_QWORD *)v8 == *v9)
              {
                v8 += 16;
                v9 += 2;
                if (v8 == v7)
                  return (_DWORD *)(*(_DWORD *)(a1 + 64) == result[16]);
              }
              return 0;
            }
            return (_DWORD *)(*(_DWORD *)(a1 + 64) == result[16]);
          }
        }
        else if ((*(_BYTE *)(a1 + 56) != 0) == (*((_BYTE *)result + 56) != 0))
        {
          return (_DWORD *)(*(_DWORD *)(a1 + 64) == result[16]);
        }
      }
      return 0;
    }
    if (!(v4 | *(unsigned __int8 *)(a1 + 24)))
      goto LABEL_15;
    return 0;
  }
  return result;
}

CFTypeRef sub_20AF3ED00(uint64_t a1)
{
  uint64_t v2;
  int v3;
  size_t v4;
  void **v5;
  unint64_t v6;
  unint64_t v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CFTypeRef v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  char v21;
  CFTypeRef cf;
  std::__shared_weak_count *v23;
  void *__dst[2];
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  sub_20AF43048();
  v26 = a1;
  v2 = operator new();
  *(_QWORD *)(v2 + 272) = 0;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_OWORD *)(v2 + 224) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)v2 = 0u;
  sub_20AEC0BD8(v2);
  v27 = (_QWORD *)v2;
  sub_20B09C954((_QWORD *)(v2 + 16), a1 + 16);
  v3 = *(_DWORD *)(v2 + 120);
  if ((v3 & 0x10) != 0)
  {
    v6 = *(_QWORD *)(v2 + 112);
    v7 = *(_QWORD *)(v2 + 72);
    if (v6 < v7)
    {
      *(_QWORD *)(v2 + 112) = v7;
      v6 = v7;
    }
    v8 = *(const void **)(v2 + 64);
    v4 = v6 - (_QWORD)v8;
    if (v6 - (unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_29;
  }
  else
  {
    if ((v3 & 8) == 0)
    {
      v4 = 0;
      HIBYTE(v25) = 0;
      v5 = __dst;
      goto LABEL_14;
    }
    v8 = *(const void **)(v2 + 40);
    v4 = *(_QWORD *)(v2 + 56) - (_QWORD)v8;
    if (v4 >= 0x7FFFFFFFFFFFFFF8)
LABEL_29:
      sub_20AEC0138();
  }
  if (v4 >= 0x17)
  {
    v9 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v9 = v4 | 7;
    v10 = v9 + 1;
    v5 = (void **)operator new(v9 + 1);
    __dst[1] = (void *)v4;
    v25 = v10 | 0x8000000000000000;
    __dst[0] = v5;
    goto LABEL_13;
  }
  HIBYTE(v25) = v4;
  v5 = __dst;
  if (v4)
LABEL_13:
    memmove(v5, v8, v4);
LABEL_14:
  *((_BYTE *)v5 + v4) = 0;
  v11 = v27;
  if (v27)
  {
    v12 = MEMORY[0x24BEDB7F0];
    v13 = *MEMORY[0x24BEDB7F0];
    *v27 = *MEMORY[0x24BEDB7F0];
    v14 = *(_QWORD *)(v12 + 72);
    *(_QWORD *)((char *)v11 + *(_QWORD *)(v13 - 24)) = *(_QWORD *)(v12 + 64);
    v11[3] = MEMORY[0x24BEDB848] + 16;
    v11[2] = v14;
    if (*((char *)v11 + 111) < 0)
      operator delete((void *)v11[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v11 + 16);
    MEMORY[0x20BD3583C](v11, 0x10B2C40EED050F3);
  }
  sub_20AED55DC("<", (uint64_t)&xmmword_25463A150, (uint64_t)" ", &v26, (uint64_t)">", (uint64_t)__dst);
  if (SHIBYTE(v25) < 0)
    operator delete(__dst[0]);
  sub_20B4EE2F0((uint64_t)&__p, (CFStringRef *)&cf);
  v15 = cf;
  if (cf)
    CFRetain(cf);
  v16 = v23;
  if (!v23)
    goto LABEL_26;
  p_shared_owners = (unint64_t *)&v23->__shared_owners_;
  do
    v18 = __ldaxr(p_shared_owners);
  while (__stlxr(v18 - 1, p_shared_owners));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    if ((v21 & 0x80000000) == 0)
      return v15;
  }
  else
  {
LABEL_26:
    if ((v21 & 0x80000000) == 0)
      return v15;
  }
  operator delete(__p);
  return v15;
}

uint64_t sub_20AF3EFA8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  const void *v32[2];
  char v33;
  uint64_t v34;

  sub_20AEC147C((uint64_t)&v34);
  if (v33 < 0)
    operator delete((void *)v32[0]);
  __cxa_begin_catch(a1);
  sub_20AF43048();
  sub_20AEC0D64(v32, "failed to create description");
  sub_20AECD224((std::string::size_type)&xmmword_25463A150, v32, 0);
  if (v33 < 0)
    operator delete((void *)v32[0]);
  __cxa_end_catch();
  return 0;
}

uint64_t sub_20AF3F07C(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 152));
}

uint64_t sub_20AF3F088(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;

  v1 = (unsigned int *)(result + 72);
  do
    v2 = __ldaxr(v1);
  while (__stlxr(v2 + 1, v1));
  return result;
}

uint64_t sub_20AF3F0A0(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;
  unsigned int v3;

  v1 = (unsigned int *)(result + 72);
  do
  {
    v2 = __ldaxr(v1);
    v3 = v2 - 1;
  }
  while (__stlxr(v3, v1));
  if (!v3)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 8) + 8))(result + 8);
  return result;
}

uint64_t sub_20AF3F0C8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639A80);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254639A80))
    return qword_254639A78;
  qword_254639A78 = sub_20AECB130();
  __cxa_guard_release(&qword_254639A80);
  return qword_254639A78;
}

_QWORD *sub_20AF3F128(uint64_t a1, void *lpsrc)
{
  _QWORD *result;

  result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C3F21C0, (const struct __class_type_info *)&unk_24C3F4B78, 0);
  if (result)
    return (_QWORD *)(*(_QWORD *)(a1 + 16) == result[2]);
  return result;
}

CFTypeRef sub_20AF3F178(uint64_t a1)
{
  uint64_t v2;
  int v3;
  size_t v4;
  void **v5;
  unint64_t v6;
  unint64_t v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CFTypeRef v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  char v21;
  CFTypeRef cf;
  std::__shared_weak_count *v23;
  void *__dst[2];
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  sub_20AF44434();
  v26 = a1;
  v2 = operator new();
  *(_QWORD *)(v2 + 272) = 0;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_OWORD *)(v2 + 224) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)v2 = 0u;
  sub_20AEC0BD8(v2);
  v27 = (_QWORD *)v2;
  sub_20B23E4E0((_QWORD *)(v2 + 16), *(_QWORD *)(a1 + 16));
  v3 = *(_DWORD *)(v2 + 120);
  if ((v3 & 0x10) != 0)
  {
    v6 = *(_QWORD *)(v2 + 112);
    v7 = *(_QWORD *)(v2 + 72);
    if (v6 < v7)
    {
      *(_QWORD *)(v2 + 112) = v7;
      v6 = v7;
    }
    v8 = *(const void **)(v2 + 64);
    v4 = v6 - (_QWORD)v8;
    if (v6 - (unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_29;
  }
  else
  {
    if ((v3 & 8) == 0)
    {
      v4 = 0;
      HIBYTE(v25) = 0;
      v5 = __dst;
      goto LABEL_14;
    }
    v8 = *(const void **)(v2 + 40);
    v4 = *(_QWORD *)(v2 + 56) - (_QWORD)v8;
    if (v4 >= 0x7FFFFFFFFFFFFFF8)
LABEL_29:
      sub_20AEC0138();
  }
  if (v4 >= 0x17)
  {
    v9 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v9 = v4 | 7;
    v10 = v9 + 1;
    v5 = (void **)operator new(v9 + 1);
    __dst[1] = (void *)v4;
    v25 = v10 | 0x8000000000000000;
    __dst[0] = v5;
    goto LABEL_13;
  }
  HIBYTE(v25) = v4;
  v5 = __dst;
  if (v4)
LABEL_13:
    memmove(v5, v8, v4);
LABEL_14:
  *((_BYTE *)v5 + v4) = 0;
  v11 = v27;
  if (v27)
  {
    v12 = MEMORY[0x24BEDB7F0];
    v13 = *MEMORY[0x24BEDB7F0];
    *v27 = *MEMORY[0x24BEDB7F0];
    v14 = *(_QWORD *)(v12 + 72);
    *(_QWORD *)((char *)v11 + *(_QWORD *)(v13 - 24)) = *(_QWORD *)(v12 + 64);
    v11[3] = MEMORY[0x24BEDB848] + 16;
    v11[2] = v14;
    if (*((char *)v11 + 111) < 0)
      operator delete((void *)v11[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v11 + 16);
    MEMORY[0x20BD3583C](v11, 0x10B2C40EED050F3);
  }
  sub_20AED55DC("<", (uint64_t)&xmmword_25463A270, (uint64_t)" ", &v26, (uint64_t)">", (uint64_t)__dst);
  if (SHIBYTE(v25) < 0)
    operator delete(__dst[0]);
  sub_20B4EE2F0((uint64_t)&__p, (CFStringRef *)&cf);
  v15 = cf;
  if (cf)
    CFRetain(cf);
  v16 = v23;
  if (!v23)
    goto LABEL_26;
  p_shared_owners = (unint64_t *)&v23->__shared_owners_;
  do
    v18 = __ldaxr(p_shared_owners);
  while (__stlxr(v18 - 1, p_shared_owners));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    if ((v21 & 0x80000000) == 0)
      return v15;
  }
  else
  {
LABEL_26:
    if ((v21 & 0x80000000) == 0)
      return v15;
  }
  operator delete(__p);
  return v15;
}

uint64_t sub_20AF3F420(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  const void *v32[2];
  char v33;
  uint64_t v34;

  sub_20AEC147C((uint64_t)&v34);
  if (v33 < 0)
    operator delete((void *)v32[0]);
  __cxa_begin_catch(a1);
  sub_20AF44434();
  sub_20AEC0D64(v32, "failed to create description");
  sub_20AECD224((std::string::size_type)&xmmword_25463A270, v32, 0);
  if (v33 < 0)
    operator delete((void *)v32[0]);
  __cxa_end_catch();
  return 0;
}

uint64_t sub_20AF3F4F4(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 72));
}

uint64_t sub_20AF3F500(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;

  v1 = (unsigned int *)(result + 48);
  do
    v2 = __ldaxr(v1);
  while (__stlxr(v2 + 1, v1));
  return result;
}

uint64_t sub_20AF3F518(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;
  unsigned int v3;

  v1 = (unsigned int *)(result + 48);
  do
  {
    v2 = __ldaxr(v1);
    v3 = v2 - 1;
  }
  while (__stlxr(v3, v1));
  if (!v3)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 8) + 8))(result + 8);
  return result;
}

uint64_t sub_20AF3F540()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639BA8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254639BA8))
    return qword_254639BA0;
  qword_254639BA0 = sub_20AECB130();
  __cxa_guard_release(&qword_254639BA8);
  return qword_254639BA0;
}

_QWORD *sub_20AF3F5A0(uint64_t a1, void *lpsrc)
{
  _QWORD *result;

  result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C3F21C0, (const struct __class_type_info *)&unk_24C3F4C70, 0);
  if (result)
    return (_QWORD *)(*(_QWORD *)(a1 + 16) == result[2]);
  return result;
}

CFTypeRef sub_20AF3F5F0(uint64_t a1)
{
  uint64_t v2;
  int v3;
  size_t v4;
  void **v5;
  unint64_t v6;
  unint64_t v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CFTypeRef v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  char v21;
  CFTypeRef cf;
  std::__shared_weak_count *v23;
  void *__dst[2];
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  sub_20AF40DC4();
  v26 = a1;
  v2 = operator new();
  *(_QWORD *)(v2 + 272) = 0;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_OWORD *)(v2 + 224) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)v2 = 0u;
  sub_20AEC0BD8(v2);
  v27 = (_QWORD *)v2;
  sub_20B09D200((_QWORD *)(v2 + 16), (uint64_t *)(a1 + 16));
  v3 = *(_DWORD *)(v2 + 120);
  if ((v3 & 0x10) != 0)
  {
    v6 = *(_QWORD *)(v2 + 112);
    v7 = *(_QWORD *)(v2 + 72);
    if (v6 < v7)
    {
      *(_QWORD *)(v2 + 112) = v7;
      v6 = v7;
    }
    v8 = *(const void **)(v2 + 64);
    v4 = v6 - (_QWORD)v8;
    if (v6 - (unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_29;
  }
  else
  {
    if ((v3 & 8) == 0)
    {
      v4 = 0;
      HIBYTE(v25) = 0;
      v5 = __dst;
      goto LABEL_14;
    }
    v8 = *(const void **)(v2 + 40);
    v4 = *(_QWORD *)(v2 + 56) - (_QWORD)v8;
    if (v4 >= 0x7FFFFFFFFFFFFFF8)
LABEL_29:
      sub_20AEC0138();
  }
  if (v4 >= 0x17)
  {
    v9 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v9 = v4 | 7;
    v10 = v9 + 1;
    v5 = (void **)operator new(v9 + 1);
    __dst[1] = (void *)v4;
    v25 = v10 | 0x8000000000000000;
    __dst[0] = v5;
    goto LABEL_13;
  }
  HIBYTE(v25) = v4;
  v5 = __dst;
  if (v4)
LABEL_13:
    memmove(v5, v8, v4);
LABEL_14:
  *((_BYTE *)v5 + v4) = 0;
  v11 = v27;
  if (v27)
  {
    v12 = MEMORY[0x24BEDB7F0];
    v13 = *MEMORY[0x24BEDB7F0];
    *v27 = *MEMORY[0x24BEDB7F0];
    v14 = *(_QWORD *)(v12 + 72);
    *(_QWORD *)((char *)v11 + *(_QWORD *)(v13 - 24)) = *(_QWORD *)(v12 + 64);
    v11[3] = MEMORY[0x24BEDB848] + 16;
    v11[2] = v14;
    if (*((char *)v11 + 111) < 0)
      operator delete((void *)v11[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v11 + 16);
    MEMORY[0x20BD3583C](v11, 0x10B2C40EED050F3);
  }
  sub_20AED55DC("<", (uint64_t)&xmmword_254639EE0, (uint64_t)" ", &v26, (uint64_t)">", (uint64_t)__dst);
  if (SHIBYTE(v25) < 0)
    operator delete(__dst[0]);
  sub_20B4EE2F0((uint64_t)&__p, (CFStringRef *)&cf);
  v15 = cf;
  if (cf)
    CFRetain(cf);
  v16 = v23;
  if (!v23)
    goto LABEL_26;
  p_shared_owners = (unint64_t *)&v23->__shared_owners_;
  do
    v18 = __ldaxr(p_shared_owners);
  while (__stlxr(v18 - 1, p_shared_owners));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    if ((v21 & 0x80000000) == 0)
      return v15;
  }
  else
  {
LABEL_26:
    if ((v21 & 0x80000000) == 0)
      return v15;
  }
  operator delete(__p);
  return v15;
}

uint64_t sub_20AF3F898(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  const void *v32[2];
  char v33;
  uint64_t v34;

  sub_20AEC147C((uint64_t)&v34);
  if (v33 < 0)
    operator delete((void *)v32[0]);
  __cxa_begin_catch(a1);
  sub_20AF40DC4();
  sub_20AEC0D64(v32, "failed to create description");
  sub_20AECD224((std::string::size_type)&xmmword_254639EE0, v32, 0);
  if (v33 < 0)
    operator delete((void *)v32[0]);
  __cxa_end_catch();
  return 0;
}

uint64_t sub_20AF3F96C(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 48));
}

uint64_t sub_20AF3F978(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 144))
    return a1;
  if (*(char *)(a1 + 143) < 0)
  {
    operator delete(*(void **)(a1 + 120));
    if ((*(char *)(a1 + 119) & 0x80000000) == 0)
    {
LABEL_4:
      if ((*(char *)(a1 + 95) & 0x80000000) == 0)
        goto LABEL_5;
      goto LABEL_11;
    }
  }
  else if ((*(char *)(a1 + 119) & 0x80000000) == 0)
  {
    goto LABEL_4;
  }
  operator delete(*(void **)(a1 + 96));
  if ((*(char *)(a1 + 95) & 0x80000000) == 0)
  {
LABEL_5:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(*(void **)(a1 + 72));
  if ((*(char *)(a1 + 71) & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(a1 + 47) & 0x80000000) == 0)
      goto LABEL_7;
LABEL_13:
    operator delete(*(void **)(a1 + 24));
    if ((*(char *)(a1 + 23) & 0x80000000) == 0)
      return a1;
    goto LABEL_14;
  }
LABEL_12:
  operator delete(*(void **)(a1 + 48));
  if (*(char *)(a1 + 47) < 0)
    goto LABEL_13;
LABEL_7:
  if ((*(char *)(a1 + 23) & 0x80000000) == 0)
    return a1;
LABEL_14:
  operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_20AF3FA38(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  if (*(_BYTE *)(a1 + 136))
  {
    v2 = *(_QWORD **)(a1 + 128);
    if (v2 == (_QWORD *)(a1 + 104))
    {
      v3 = 4;
      v2 = (_QWORD *)(a1 + 104);
    }
    else
    {
      if (!v2)
        goto LABEL_7;
      v3 = 5;
    }
    (*(void (**)(void))(*v2 + 8 * v3))();
  }
LABEL_7:
  if (*(_BYTE *)(a1 + 96))
  {
    v4 = *(_QWORD **)(a1 + 88);
    if (v4 == (_QWORD *)(a1 + 64))
    {
      v5 = 4;
      v4 = (_QWORD *)(a1 + 64);
      goto LABEL_12;
    }
    if (v4)
    {
      v5 = 5;
LABEL_12:
      (*(void (**)(void))(*v4 + 8 * v5))();
    }
  }
  if (*(_BYTE *)(a1 + 48))
  {
    v6 = *(_QWORD *)(a1 + 24);
    if (v6)
    {
      v7 = *(_QWORD *)(a1 + 32);
      v8 = *(void **)(a1 + 24);
      if (v7 != v6)
      {
        do
        {
          v9 = *(std::__shared_weak_count **)(v7 - 8);
          if (v9)
          {
            p_shared_owners = (unint64_t *)&v9->__shared_owners_;
            do
              v11 = __ldaxr(p_shared_owners);
            while (__stlxr(v11 - 1, p_shared_owners));
            if (!v11)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          v7 -= 16;
        }
        while (v7 != v6);
        v8 = *(void **)(a1 + 24);
      }
      *(_QWORD *)(a1 + 32) = v6;
      operator delete(v8);
    }
  }
  return a1;
}

uint64_t sub_20AF3FB48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  if (*(_BYTE *)(a1 + 40))
  {
    v2 = *(_QWORD *)(a1 + 16);
    if (v2)
    {
      v3 = *(_QWORD *)(a1 + 24);
      v4 = *(void **)(a1 + 16);
      if (v3 != v2)
      {
        do
        {
          v5 = *(std::__shared_weak_count **)(v3 - 8);
          if (v5)
          {
            p_shared_owners = (unint64_t *)&v5->__shared_owners_;
            do
              v7 = __ldaxr(p_shared_owners);
            while (__stlxr(v7 - 1, p_shared_owners));
            if (!v7)
            {
              ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
              std::__shared_weak_count::__release_weak(v5);
            }
          }
          v3 -= 16;
        }
        while (v3 != v2);
        v4 = *(void **)(a1 + 16);
      }
      *(_QWORD *)(a1 + 24) = v2;
      operator delete(v4);
    }
  }
  return a1;
}

void sub_20AF3FBE8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F4CD0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20AF3FBF8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F4CD0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF3FC28(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    _Block_release(v1);
}

void sub_20AF3FC4C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F4D20;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20AF3FC5C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F4D20;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF3FC8C(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    _Block_release(v1);
}

void sub_20AF3FCB0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F4D70;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20AF3FCC0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F4D70;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF3FCF0(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    _Block_release(v1);
}

uint64_t sub_20AF3FD14(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  if (!*(_BYTE *)(a1 + 136))
    return a1;
  if (*(_BYTE *)(a1 + 128))
  {
    v2 = *(_QWORD **)(a1 + 120);
    if (v2 == (_QWORD *)(a1 + 96))
    {
      v3 = 4;
      v2 = (_QWORD *)(a1 + 96);
    }
    else
    {
      if (!v2)
        goto LABEL_8;
      v3 = 5;
    }
    (*(void (**)(void))(*v2 + 8 * v3))();
  }
LABEL_8:
  if (*(_BYTE *)(a1 + 88))
  {
    v4 = *(_QWORD **)(a1 + 80);
    if (v4 == (_QWORD *)(a1 + 56))
    {
      v5 = 4;
      v4 = (_QWORD *)(a1 + 56);
      goto LABEL_13;
    }
    if (v4)
    {
      v5 = 5;
LABEL_13:
      (*(void (**)(void))(*v4 + 8 * v5))();
    }
  }
  if (*(_BYTE *)(a1 + 40))
  {
    v6 = *(_QWORD *)(a1 + 16);
    if (v6)
    {
      v7 = *(_QWORD *)(a1 + 24);
      v8 = *(void **)(a1 + 16);
      if (v7 != v6)
      {
        do
        {
          v9 = *(std::__shared_weak_count **)(v7 - 8);
          if (v9)
          {
            p_shared_owners = (unint64_t *)&v9->__shared_owners_;
            do
              v11 = __ldaxr(p_shared_owners);
            while (__stlxr(v11 - 1, p_shared_owners));
            if (!v11)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          v7 -= 16;
        }
        while (v7 != v6);
        v8 = *(void **)(a1 + 16);
      }
      *(_QWORD *)(a1 + 24) = v6;
      operator delete(v8);
    }
  }
  return a1;
}

void sub_20AF3FE2C()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8E0] + 16;
  __cxa_throw(exception, MEMORY[0x24BEDB740], MEMORY[0x24BEDABA8]);
}

char *sub_20AF3FE60(char *__dst, __int128 *a2)
{
  __int128 v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE *v10;
  __int128 v11;

  if (*((char *)a2 + 23) < 0)
  {
    sub_20AEC60F4(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
    v5 = __dst + 24;
    if ((*((char *)a2 + 47) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else
  {
    v4 = *a2;
    *((_QWORD *)__dst + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)__dst = v4;
    v5 = __dst + 24;
    if ((*((char *)a2 + 47) & 0x80000000) == 0)
    {
LABEL_3:
      v6 = *(__int128 *)((char *)a2 + 24);
      *((_QWORD *)v5 + 2) = *((_QWORD *)a2 + 5);
      *(_OWORD *)v5 = v6;
      goto LABEL_6;
    }
  }
  sub_20AEC60F4(v5, *((void **)a2 + 3), *((_QWORD *)a2 + 4));
LABEL_6:
  if (*((char *)a2 + 71) < 0)
  {
    sub_20AEC60F4(__dst + 48, *((void **)a2 + 6), *((_QWORD *)a2 + 7));
  }
  else
  {
    v7 = a2[3];
    *((_QWORD *)__dst + 8) = *((_QWORD *)a2 + 8);
    *((_OWORD *)__dst + 3) = v7;
  }
  if (*((char *)a2 + 95) < 0)
  {
    sub_20AEC60F4(__dst + 72, *((void **)a2 + 9), *((_QWORD *)a2 + 10));
  }
  else
  {
    v8 = *(__int128 *)((char *)a2 + 72);
    *((_QWORD *)__dst + 11) = *((_QWORD *)a2 + 11);
    *(_OWORD *)(__dst + 72) = v8;
  }
  if (*((char *)a2 + 119) < 0)
  {
    sub_20AEC60F4(__dst + 96, *((void **)a2 + 12), *((_QWORD *)a2 + 13));
  }
  else
  {
    v9 = a2[6];
    *((_QWORD *)__dst + 14) = *((_QWORD *)a2 + 14);
    *((_OWORD *)__dst + 6) = v9;
  }
  v10 = __dst + 120;
  if (*((char *)a2 + 143) < 0)
  {
    sub_20AEC60F4(v10, *((void **)a2 + 15), *((_QWORD *)a2 + 16));
  }
  else
  {
    v11 = *(__int128 *)((char *)a2 + 120);
    *((_QWORD *)__dst + 17) = *((_QWORD *)a2 + 17);
    *(_OWORD *)v10 = v11;
  }
  return __dst;
}

void sub_20AF3FFC4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;
  void **v4;
  void **v5;

  if (*(char *)(v1 + 119) < 0)
  {
    operator delete(*v5);
    if ((*(char *)(v1 + 95) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v1 + 71) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((*(char *)(v1 + 95) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v4);
  if ((*(char *)(v1 + 71) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v1 + 47) & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(*v3);
  if ((*(char *)(v1 + 47) & 0x80000000) == 0)
  {
LABEL_5:
    if ((*(char *)(v1 + 23) & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(*v2);
  if ((*(char *)(v1 + 23) & 0x80000000) == 0)
LABEL_6:
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_20AF40088()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639850);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639850))
  {
    sub_20AF40140();
    if (byte_254639C3F < 0)
    {
      sub_20AEC60F4(&xmmword_254639BF8, (void *)xmmword_254639C28, *((unint64_t *)&xmmword_254639C28 + 1));
    }
    else
    {
      xmmword_254639BF8 = xmmword_254639C28;
      qword_254639C08 = unk_254639C38;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639BF8, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639850);
  }
}

void sub_20AF40128(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639850);
  _Unwind_Resume(a1);
}

void sub_20AF40140()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254639858);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639858))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZPeerInfo]", qword_254639C10);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254639C10, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639858);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254639860);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_254639860))
    {
      sub_20B531658((uint64_t)qword_254639C10, (uint64_t)&xmmword_254639C28);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639C28, &dword_20AEBB000);
      __cxa_guard_release(&qword_254639860);
    }
  }
}

void sub_20AF40210(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639860);
  _Unwind_Resume(a1);
}

void sub_20AF40228(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639858);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF40240()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546311B8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546311B8))
    return &xmmword_2546311A0;
  v2 = (char *)sub_20AF4031C();
  if (v2[23] < 0)
  {
    sub_20AEC60F4(&xmmword_2546311A0, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_2546311B0 = *((_QWORD *)v2 + 2);
    xmmword_2546311A0 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546311A0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546311B8);
  return &xmmword_2546311A0;
}

void sub_20AF40304(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546311B8);
  _Unwind_Resume(a1);
}

void *sub_20AF4031C()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_2546311D8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546311D8))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::PeerInfo]", qword_2546311C0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546311C0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546311D8);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_2546311F8);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_2546311F8))
    return &unk_2546311E0;
  sub_20B531658((uint64_t)qword_2546311C0, (uint64_t)&unk_2546311E0);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_2546311E0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546311F8);
  return &unk_2546311E0;
}

void sub_20AF4040C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546311F8);
  _Unwind_Resume(a1);
}

void sub_20AF40424(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546311D8);
  _Unwind_Resume(a1);
}

char *sub_20AF4043C(uint64_t **a1, uint64_t *a2, const void **a3, uint64_t a4)
{
  uint64_t *v6;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;

  v6 = sub_20AF40538(a1, a2, &v15, &v14, a3);
  if (*v6)
    return (char *)*v6;
  v8 = v6;
  v9 = (char *)operator new(0x40uLL);
  v10 = v9 + 32;
  if (*(char *)(a4 + 23) < 0)
  {
    sub_20AEC60F4(v10, *(void **)a4, *(_QWORD *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)v10 = *(_OWORD *)a4;
    *((_QWORD *)v9 + 6) = *(_QWORD *)(a4 + 16);
  }
  v9[56] = *(_BYTE *)(a4 + 24);
  v11 = v15;
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  *((_QWORD *)v9 + 2) = v11;
  *v8 = (uint64_t)v9;
  v12 = (uint64_t *)**a1;
  v13 = (uint64_t *)v9;
  if (v12)
  {
    *a1 = v12;
    v13 = (uint64_t *)*v8;
  }
  sub_20AEC84C8(a1[1], v13);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return v9;
}

void sub_20AF40524(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_20AF40538(uint64_t **a1, uint64_t *a2, uint64_t **a3, uint64_t **a4, const void **a5)
{
  uint64_t **v8;
  int v10;
  const void *v11;
  size_t v12;
  int v13;
  const void *v14;
  size_t v15;
  size_t v16;
  int v17;
  int v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  BOOL v23;
  int v24;
  const void *v25;
  size_t v26;
  int v27;
  const void *v28;
  size_t v29;
  size_t v30;
  int v31;
  uint64_t *v32;
  uint64_t **v33;
  _QWORD *v34;
  const void *v35;
  const void *v36;
  int v37;
  const void *v38;
  size_t v39;
  size_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  int v46;
  uint64_t *v47;
  size_t v48;
  size_t v49;
  int v50;
  uint64_t *v51;
  uint64_t **v52;
  uint64_t **v53;
  _QWORD *v54;
  const void *v55;
  const void *v56;
  int v57;
  const void *v58;
  size_t v59;
  size_t v60;
  int v61;
  int v62;

  v8 = a1 + 1;
  if (a1 + 1 == (uint64_t **)a2)
    goto LABEL_23;
  v10 = *((char *)a5 + 23);
  if (v10 >= 0)
    v11 = a5;
  else
    v11 = *a5;
  if (v10 >= 0)
    v12 = *((unsigned __int8 *)a5 + 23);
  else
    v12 = (size_t)a5[1];
  v13 = *((char *)a2 + 55);
  if (v13 >= 0)
    v14 = a2 + 4;
  else
    v14 = (const void *)a2[4];
  if (v13 >= 0)
    v15 = *((unsigned __int8 *)a2 + 55);
  else
    v15 = a2[5];
  if (v15 >= v12)
    v16 = v12;
  else
    v16 = v15;
  v17 = memcmp(v11, v14, v16);
  if (!v17)
  {
    if (v12 >= v15)
      goto LABEL_19;
LABEL_23:
    v19 = (uint64_t *)*a2;
    if (*a1 == a2)
    {
      v21 = a2;
    }
    else
    {
      if (v19)
      {
        v20 = (uint64_t *)*a2;
        do
        {
          v21 = v20;
          v20 = (uint64_t *)v20[1];
        }
        while (v20);
      }
      else
      {
        v22 = a2;
        do
        {
          v21 = (uint64_t *)v22[2];
          v23 = *v21 == (_QWORD)v22;
          v22 = v21;
        }
        while (v23);
      }
      v24 = *((char *)v21 + 55);
      if (v24 >= 0)
        v25 = v21 + 4;
      else
        v25 = (const void *)v21[4];
      if (v24 >= 0)
        v26 = *((unsigned __int8 *)v21 + 55);
      else
        v26 = v21[5];
      v27 = *((char *)a5 + 23);
      if (v27 >= 0)
        v28 = a5;
      else
        v28 = *a5;
      if (v27 >= 0)
        v29 = *((unsigned __int8 *)a5 + 23);
      else
        v29 = (size_t)a5[1];
      if (v29 >= v26)
        v30 = v26;
      else
        v30 = v29;
      v31 = memcmp(v25, v28, v30);
      if (v31)
      {
        if ((v31 & 0x80000000) == 0)
          goto LABEL_48;
      }
      else if (v26 >= v29)
      {
LABEL_48:
        v32 = *v8;
        if (!*v8)
        {
          v33 = v8;
LABEL_69:
          *a3 = (uint64_t *)v33;
          return (uint64_t *)v8;
        }
        while (1)
        {
          v33 = (uint64_t **)v32;
          v36 = (const void *)v32[4];
          v34 = v32 + 4;
          v35 = v36;
          v37 = *((char *)v34 + 23);
          if (v37 >= 0)
            v38 = v34;
          else
            v38 = v35;
          if (v37 >= 0)
            v39 = *((unsigned __int8 *)v34 + 23);
          else
            v39 = v34[1];
          if (v39 >= v29)
            v40 = v29;
          else
            v40 = v39;
          v41 = memcmp(v28, v38, v40);
          if (v41)
          {
            if (v41 < 0)
              goto LABEL_50;
LABEL_64:
            v42 = memcmp(v38, v28, v40);
            if (v42)
            {
              if ((v42 & 0x80000000) == 0)
                goto LABEL_69;
            }
            else if (v39 >= v29)
            {
              goto LABEL_69;
            }
            v8 = v33 + 1;
            v32 = v33[1];
            if (!v32)
              goto LABEL_69;
          }
          else
          {
            if (v29 >= v39)
              goto LABEL_64;
LABEL_50:
            v32 = *v33;
            v8 = v33;
            if (!*v33)
              goto LABEL_69;
          }
        }
      }
    }
    if (v19)
    {
      *a3 = v21;
      return v21 + 1;
    }
    else
    {
      *a3 = a2;
      return a2;
    }
  }
  if (v17 < 0)
    goto LABEL_23;
LABEL_19:
  v18 = memcmp(v14, v11, v16);
  if (v18)
  {
    if ((v18 & 0x80000000) == 0)
    {
LABEL_21:
      *a3 = a2;
      *a4 = a2;
      return (uint64_t *)a4;
    }
  }
  else if (v15 >= v12)
  {
    goto LABEL_21;
  }
  v43 = a2[1];
  if (v43)
  {
    v44 = (uint64_t *)a2[1];
    do
    {
      a4 = (uint64_t **)v44;
      v44 = (uint64_t *)*v44;
    }
    while (v44);
  }
  else
  {
    v45 = a2;
    do
    {
      a4 = (uint64_t **)v45[2];
      v23 = *a4 == v45;
      v45 = (uint64_t *)a4;
    }
    while (!v23);
  }
  if (a4 != v8)
  {
    v46 = *((char *)a4 + 55);
    if (v46 >= 0)
      v47 = (uint64_t *)(a4 + 4);
    else
      v47 = a4[4];
    if (v46 >= 0)
      v48 = *((unsigned __int8 *)a4 + 55);
    else
      v48 = (size_t)a4[5];
    if (v48 >= v12)
      v49 = v12;
    else
      v49 = v48;
    v50 = memcmp(v11, v47, v49);
    if (v50)
    {
      if ((v50 & 0x80000000) == 0)
      {
LABEL_95:
        v51 = *v8;
        if (*v8)
        {
          v52 = a3;
          while (1)
          {
            v53 = (uint64_t **)v51;
            v56 = (const void *)v51[4];
            v54 = v51 + 4;
            v55 = v56;
            v57 = *((char *)v54 + 23);
            if (v57 >= 0)
              v58 = v54;
            else
              v58 = v55;
            if (v57 >= 0)
              v59 = *((unsigned __int8 *)v54 + 23);
            else
              v59 = v54[1];
            if (v59 >= v12)
              v60 = v12;
            else
              v60 = v59;
            v61 = memcmp(v11, v58, v60);
            if (v61)
            {
              if (v61 < 0)
                goto LABEL_97;
LABEL_111:
              v62 = memcmp(v58, v11, v60);
              if (v62)
              {
                if ((v62 & 0x80000000) == 0)
                  goto LABEL_123;
              }
              else if (v59 >= v12)
              {
                goto LABEL_123;
              }
              v8 = v53 + 1;
              v51 = v53[1];
              if (!v51)
                goto LABEL_123;
            }
            else
            {
              if (v12 >= v59)
                goto LABEL_111;
LABEL_97:
              v51 = *v53;
              v8 = v53;
              if (!*v53)
                goto LABEL_123;
            }
          }
        }
        v53 = v8;
        v52 = a3;
LABEL_123:
        *v52 = (uint64_t *)v53;
        return (uint64_t *)v8;
      }
    }
    else if (v12 >= v48)
    {
      goto LABEL_95;
    }
  }
  if (v43)
  {
    *a3 = (uint64_t *)a4;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
  return (uint64_t *)a4;
}

void sub_20AF408E0()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639898);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639898))
  {
    sub_20AF40998();
    if (byte_254639D17 < 0)
    {
      sub_20AEC60F4(&xmmword_254639CD0, (void *)xmmword_254639D00, *((unint64_t *)&xmmword_254639D00 + 1));
    }
    else
    {
      xmmword_254639CD0 = xmmword_254639D00;
      unk_254639CE0 = unk_254639D10;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639CD0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639898);
  }
}

void sub_20AF40980(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639898);
  _Unwind_Resume(a1);
}

void sub_20AF40998()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_2546398A0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546398A0))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::EnableState]", qword_254639CE8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254639CE8, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546398A0);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_2546398A8);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_2546398A8))
    {
      sub_20B531658((uint64_t)qword_254639CE8, (uint64_t)&xmmword_254639D00);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639D00, &dword_20AEBB000);
      __cxa_guard_release(&qword_2546398A8);
    }
  }
}

void sub_20AF40A68(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546398A8);
  _Unwind_Resume(a1);
}

void sub_20AF40A80(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546398A0);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF40A98(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  unsigned __int8 v6;
  __int128 *v7;
  __int128 *v8;
  __int128 *v9;
  int v10;
  size_t v11;
  unint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  _BYTE v17[16];
  void *v18;
  char v19;
  char v20;
  void *v21;
  char v22;
  void *__p;
  char v24;
  char v25;
  char v26;
  char v27;
  __int128 *v28;
  __int128 *v29;
  __int128 __dst;
  uint64_t v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  result = operator new(0x38uLL, MEMORY[0x24BEDB6B8]);
  if (result)
  {
    v3 = *(_QWORD *)(a1 + 8);
    result[2] = *(_QWORD *)a1;
    result[3] = v3;
    if (v3)
    {
      v4 = (unint64_t *)(v3 + 8);
      do
        v5 = __ldxr(v4);
      while (__stxr(v5 + 1, v4));
    }
    *((_OWORD *)result + 2) = *(_OWORD *)(a1 + 16);
    *((_DWORD *)result + 12) = 1;
    *result = &off_24C3F4BD8;
    result[1] = &unk_24C3F4C28;
    return result;
  }
  sub_20AF40DC4();
  v6 = atomic_load((unsigned __int8 *)&qword_254639960);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254639960))
  {
    sub_20AF40F7C();
    v10 = byte_254639F57;
    if (byte_254639F57 >= 0)
      v11 = byte_254639F57;
    else
      v11 = *((_QWORD *)&xmmword_254639F40 + 1);
    v12 = v11 + 1;
    if (v11 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v12 >= 0x17)
    {
      v14 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v12 | 7) != 0x17)
        v14 = v12 | 7;
      v15 = v14 + 1;
      v13 = (__int128 *)operator new(v14 + 1);
      *((_QWORD *)&xmmword_254639F28 + 1) = v11 + 1;
      unk_254639F38 = v15 | 0x8000000000000000;
      *(_QWORD *)&xmmword_254639F28 = v13;
    }
    else
    {
      v13 = &xmmword_254639F28;
      unk_254639F38 = 0;
      xmmword_254639F28 = 0uLL;
      byte_254639F3F = v11 + 1;
      if (!v11)
      {
LABEL_46:
        *(_WORD *)((char *)v13 + v11) = 38;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639F28, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639960);
        goto LABEL_7;
      }
    }
    if (v10 >= 0)
      v16 = &xmmword_254639F40;
    else
      v16 = (__int128 *)xmmword_254639F40;
    memmove(v13, v16, v11);
    goto LABEL_46;
  }
LABEL_7:
  if (byte_254639F3F < 0)
  {
    sub_20AEC60F4(&__dst, (void *)xmmword_254639F28, *((unint64_t *)&xmmword_254639F28 + 1));
  }
  else
  {
    __dst = xmmword_254639F28;
    v31 = unk_254639F38;
  }
  sub_20AEC7620(&v28, (uint64_t)&__dst, 1uLL);
  v17[0] = 0;
  v27 = 0;
  sub_20AECD798((uint64_t *)&xmmword_254639EE0, &v28, (uint64_t)v17, 0);
  if (v27 && v26)
  {
    if (v25)
    {
      if (v24 < 0)
        operator delete(__p);
      if (v22 < 0)
        operator delete(v21);
    }
    if (v20 && v19 < 0)
      operator delete(v18);
  }
  v7 = v28;
  if (v28)
  {
    v8 = v29;
    v9 = v28;
    if (v29 != v28)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*((void **)v8 - 3));
        v8 = (__int128 *)((char *)v8 - 24);
      }
      while (v8 != v7);
      v9 = v28;
    }
    v29 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v31) < 0)
    operator delete((void *)__dst);
  return 0;
}

void sub_20AF40D94(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_254639960);
    sub_20AEC01C0(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF40DC4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639948);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639948))
  {
    sub_20AF40E7C();
    if (byte_254639F27 < 0)
    {
      sub_20AEC60F4(&xmmword_254639EE0, (void *)xmmword_254639F10, *((unint64_t *)&xmmword_254639F10 + 1));
    }
    else
    {
      xmmword_254639EE0 = xmmword_254639F10;
      unk_254639EF0 = unk_254639F20;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639EE0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639948);
  }
}

void sub_20AF40E64(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639948);
  _Unwind_Resume(a1);
}

void sub_20AF40E7C()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254639950);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639950))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZSyncControl]", qword_254639EF8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254639EF8, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639950);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254639958);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_254639958))
    {
      sub_20B531658((uint64_t)qword_254639EF8, (uint64_t)&xmmword_254639F10);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639F10, &dword_20AEBB000);
      __cxa_guard_release(&qword_254639958);
    }
  }
}

void sub_20AF40F4C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639958);
  _Unwind_Resume(a1);
}

void sub_20AF40F64(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639950);
  _Unwind_Resume(a1);
}

void sub_20AF40F7C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639968);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639968))
  {
    sub_20AF41034();
    if (byte_254639F87 < 0)
    {
      sub_20AEC60F4(&xmmword_254639F40, (void *)xmmword_254639F70, *((unint64_t *)&xmmword_254639F70 + 1));
    }
    else
    {
      xmmword_254639F40 = xmmword_254639F70;
      unk_254639F50 = unk_254639F80;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639F40, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639968);
  }
}

void sub_20AF4101C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639968);
  _Unwind_Resume(a1);
}

void sub_20AF41034()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254639970);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639970))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::SyncControl]", qword_254639F58);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254639F58, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639970);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254639978);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_254639978))
    {
      sub_20B531658((uint64_t)qword_254639F58, (uint64_t)&xmmword_254639F70);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639F70, &dword_20AEBB000);
      __cxa_guard_release(&qword_254639978);
    }
  }
}

void sub_20AF41104(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639978);
  _Unwind_Resume(a1);
}

void sub_20AF4111C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639970);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF41134(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F4DC0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF411A8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F4DC0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20AF4121C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24C3F4DC0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_20AF4126C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24C3F4DC0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_20AF4129C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20AF412F4(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(__p);
  }
  else
  {
LABEL_5:
    operator delete(__p);
  }
}

uint64_t sub_20AF4135C(uint64_t result, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  char *v5;
  __int128 *v6;

  if (*(_QWORD *)(result + 8))
  {
    v4 = result;
    v5 = sub_20AF414AC(a2);
    v6 = sub_20AEF7B54(0, a3);
    result = (*(uint64_t (**)(void))(**(_QWORD **)(v4 + 8) + 16))();
    if (v6)
      result = (*(uint64_t (**)(__int128 *))(*(_QWORD *)v6 + 24))(v6);
    if (v5)
      return (*(uint64_t (**)(char *))(*(_QWORD *)v5 + 24))(v5);
  }
  return result;
}

void sub_20AF413F4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;

  if (v2)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
    if (!v1)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if (!v1)
  {
    goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF41434(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "Z30ForwardReceivedMessageFunctionU13block_pointerFvPK16VZConnectionInfoPK12VZLogMessageEE3$_1")
    return a1 + 8;
  if (((v3 & (unint64_t)"Z30ForwardReceivedMessageFunctionU13block_pointerFvPK16VZConnectionInfoPK12VZLogMessageEE3$_1" & 0x8000000000000000) != 0) == __OFSUB__(v3, "Z30ForwardReceivedMessageFunctionU13block_pointerFvPK16VZConnectionInfoPK12VZLogMessageEE3$_1"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"Z30ForwardReceivedMessageFunctionU13block_pointerFvPK16VZConnectionInfoPK12VZLogMessageEE3$_1" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20AF414A0()
{
  return &unk_24C3F4E30;
}

char *sub_20AF414AC(uint64_t a1)
{
  char *v2;
  char *v3;
  unsigned __int8 v5;
  __int128 *v6;
  __int128 *v7;
  __int128 *v8;
  int v9;
  size_t v10;
  unint64_t v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char v16[16];
  void *v17;
  char v18;
  char v19;
  void *v20;
  char v21;
  void *__p;
  char v23;
  char v24;
  char v25;
  char v26;
  __int128 *v27;
  __int128 *v28;
  __int128 __dst;
  uint64_t v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v2 = (char *)operator new(0x110uLL, MEMORY[0x24BEDB6B8]);
  if (v2)
  {
    v3 = v2;
    *(_QWORD *)v2 = off_24C3F2180;
    v2[16] = *(_BYTE *)a1;
    *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 8);
    *((_DWORD *)v2 + 10) = *(_DWORD *)(a1 + 24);
    v2[48] = 0;
    v2[72] = 0;
    if (*(_BYTE *)(a1 + 56))
    {
      if (*(char *)(a1 + 55) < 0)
      {
        sub_20AEC60F4(v2 + 48, *(void **)(a1 + 32), *(_QWORD *)(a1 + 40));
      }
      else
      {
        *((_OWORD *)v2 + 3) = *(_OWORD *)(a1 + 32);
        *((_QWORD *)v2 + 8) = *(_QWORD *)(a1 + 48);
      }
      v3[72] = 1;
    }
    v3[80] = 0;
    v3[224] = 0;
    if (*(_BYTE *)(a1 + 208))
    {
      sub_20AF3FE60(v3 + 80, (__int128 *)(a1 + 64));
      v3[224] = 1;
    }
    *(_OWORD *)(v3 + 232) = *(_OWORD *)(a1 + 216);
    *((_QWORD *)v3 + 31) = *(_QWORD *)(a1 + 232);
    *((_DWORD *)v3 + 64) = 1;
    *(_QWORD *)v3 = off_24C3F47F8;
    *((_QWORD *)v3 + 1) = &unk_24C3F4848;
    *((_QWORD *)v3 + 33) = 0;
    return v3;
  }
  sub_20AF418B4();
  v5 = atomic_load((unsigned __int8 *)&qword_254639998);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_254639998))
  {
    sub_20AF41A6C();
    v9 = byte_254639FFF;
    if (byte_254639FFF >= 0)
      v10 = byte_254639FFF;
    else
      v10 = qword_254639FF0;
    v11 = v10 + 1;
    if (v10 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v11 >= 0x17)
    {
      v13 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v11 | 7) != 0x17)
        v13 = v11 | 7;
      v14 = v13 + 1;
      v12 = (__int128 *)operator new(v13 + 1);
      *((_QWORD *)&xmmword_254639FD0 + 1) = v10 + 1;
      unk_254639FE0 = v14 | 0x8000000000000000;
      *(_QWORD *)&xmmword_254639FD0 = v12;
    }
    else
    {
      v12 = &xmmword_254639FD0;
      unk_254639FE0 = 0;
      xmmword_254639FD0 = 0uLL;
      byte_254639FE7 = v10 + 1;
      if (!v10)
      {
LABEL_51:
        *(_WORD *)((char *)v12 + v10) = 38;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639FD0, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639998);
        goto LABEL_12;
      }
    }
    if (v9 >= 0)
      v15 = &qword_254639FE8;
    else
      v15 = (uint64_t *)qword_254639FE8;
    memmove(v12, v15, v10);
    goto LABEL_51;
  }
LABEL_12:
  if (byte_254639FE7 < 0)
  {
    sub_20AEC60F4(&__dst, (void *)xmmword_254639FD0, *((unint64_t *)&xmmword_254639FD0 + 1));
  }
  else
  {
    __dst = xmmword_254639FD0;
    v30 = unk_254639FE0;
  }
  sub_20AEC7620(&v27, (uint64_t)&__dst, 1uLL);
  v16[0] = 0;
  v26 = 0;
  sub_20AECD798((uint64_t *)&xmmword_254639F88, &v27, (uint64_t)v16, 0);
  if (v26 && v25)
  {
    if (v24)
    {
      if (v23 < 0)
        operator delete(__p);
      if (v21 < 0)
        operator delete(v20);
    }
    if (v19 && v18 < 0)
      operator delete(v17);
  }
  v6 = v27;
  if (v27)
  {
    v7 = v28;
    v8 = v27;
    if (v28 != v27)
    {
      do
      {
        if (*((char *)v7 - 1) < 0)
          operator delete(*((void **)v7 - 3));
        v7 = (__int128 *)((char *)v7 - 24);
      }
      while (v7 != v6);
      v8 = v27;
    }
    v28 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v30) < 0)
    operator delete((void *)__dst);
  return 0;
}

void sub_20AF41880(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_20AEC01C0(a1);
}

void sub_20AF418B4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639980);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639980))
  {
    sub_20AF4196C();
    if (byte_254639FCF < 0)
    {
      sub_20AEC60F4(&xmmword_254639F88, (void *)xmmword_254639FB8, *((unint64_t *)&xmmword_254639FB8 + 1));
    }
    else
    {
      xmmword_254639F88 = xmmword_254639FB8;
      qword_254639F98 = unk_254639FC8;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639F88, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639980);
  }
}

void sub_20AF41954(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639980);
  _Unwind_Resume(a1);
}

void sub_20AF4196C()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254639988);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639988))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZConnectionInfo]", qword_254639FA0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254639FA0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639988);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254639990);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_254639990))
    {
      sub_20B531658((uint64_t)qword_254639FA0, (uint64_t)&xmmword_254639FB8);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254639FB8, &dword_20AEBB000);
      __cxa_guard_release(&qword_254639990);
    }
  }
}

void sub_20AF41A3C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639990);
  _Unwind_Resume(a1);
}

void sub_20AF41A54(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639988);
  _Unwind_Resume(a1);
}

void sub_20AF41A6C()
{
  unsigned __int8 v0;
  int v1;
  size_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 *v8;

  v0 = atomic_load((unsigned __int8 *)&qword_2546399A0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546399A0))
  {
    sub_20AF41BEC();
    v1 = byte_25463A017;
    if (byte_25463A017 >= 0)
      v2 = byte_25463A017;
    else
      v2 = *((_QWORD *)&xmmword_25463A000 + 1);
    v3 = v2 + 6;
    if (v2 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v3 >= 0x17)
    {
      v5 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v3 | 7) != 0x17)
        v5 = v3 | 7;
      v6 = v5 + 1;
      v7 = (char *)operator new(v5 + 1);
      qword_254639FF0 = v2 + 6;
      unk_254639FF8 = v6 | 0x8000000000000000;
      qword_254639FE8 = (uint64_t)v7;
      *(_DWORD *)v7 = 1936617315;
      *((_WORD *)v7 + 2) = 8308;
      v4 = v7 + 6;
    }
    else
    {
      qword_254639FF0 = 0;
      unk_254639FF8 = 0;
      qword_254639FE8 = 0x2074736E6F63;
      byte_254639FFF = v2 + 6;
      v4 = (char *)&qword_254639FE8 + 6;
      if (!v2)
      {
LABEL_18:
        v4[v2] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254639FE8, &dword_20AEBB000);
        __cxa_guard_release(&qword_2546399A0);
        return;
      }
    }
    if (v1 >= 0)
      v8 = &xmmword_25463A000;
    else
      v8 = (__int128 *)xmmword_25463A000;
    memmove(v4, v8, v2);
    goto LABEL_18;
  }
}

void sub_20AF41BD4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546399A0);
  _Unwind_Resume(a1);
}

void sub_20AF41BEC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2546399A8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546399A8))
  {
    sub_20AF41CA4();
    if (byte_25463A047 < 0)
    {
      sub_20AEC60F4(&xmmword_25463A000, (void *)xmmword_25463A030, *((unint64_t *)&xmmword_25463A030 + 1));
    }
    else
    {
      xmmword_25463A000 = xmmword_25463A030;
      unk_25463A010 = unk_25463A040;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A000, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546399A8);
  }
}

void sub_20AF41C8C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546399A8);
  _Unwind_Resume(a1);
}

void sub_20AF41CA4()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_2546399B0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546399B0))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ConnectionInfo]", qword_25463A018);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A018, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546399B0);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_2546399B8);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_2546399B8))
    {
      sub_20B531658((uint64_t)qword_25463A018, (uint64_t)&xmmword_25463A030);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A030, &dword_20AEBB000);
      __cxa_guard_release(&qword_2546399B8);
    }
  }
}

void sub_20AF41D74(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546399B8);
  _Unwind_Resume(a1);
}

void sub_20AF41D8C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546399B0);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF41DA4(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F4E50;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF41E18(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F4E50;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20AF41E8C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24C3F4E50;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_20AF41EDC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24C3F4E50;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_20AF41F0C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20AF41F64(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(__p);
  }
  else
  {
LABEL_5:
    operator delete(__p);
  }
}

uint64_t sub_20AF41FCC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  char *v3;

  if (*(_QWORD *)(result + 8))
  {
    v2 = result;
    v3 = sub_20AF414AC(a2);
    result = (*(uint64_t (**)(void))(**(_QWORD **)(v2 + 8) + 16))();
    if (v3)
      return (*(uint64_t (**)(char *))(*(_QWORD *)v3 + 24))(v3);
  }
  return result;
}

void sub_20AF42040(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF42060(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "Z30ForwardConnectionStatusChangedU13block_pointerFvPK16VZConnectionInfohEE3$_1")
    return a1 + 8;
  if (((v3 & (unint64_t)"Z30ForwardConnectionStatusChangedU13block_pointerFvPK16VZConnectionInfohEE3$_1" & 0x8000000000000000) != 0) == __OFSUB__(v3, "Z30ForwardConnectionStatusChangedU13block_pointerFvPK16VZConnectionInfohEE3$_1"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"Z30ForwardConnectionStatusChangedU13block_pointerFvPK16VZConnectionInfohEE3$_1" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20AF420CC()
{
  return &unk_24C3F4EB0;
}

_QWORD *sub_20AF420D8(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F4ED0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF4214C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F4ED0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20AF421C0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24C3F4ED0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_20AF42210(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24C3F4ED0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_20AF42240(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20AF42298(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(__p);
  }
  else
  {
LABEL_5:
    operator delete(__p);
  }
}

uint64_t sub_20AF42300(uint64_t result, uint64_t a2, const void ***a3)
{
  uint64_t v4;
  char *v5;
  _QWORD *v6;

  if (*(_QWORD *)(result + 8))
  {
    v4 = result;
    v5 = sub_20AF414AC(a2);
    v6 = sub_20AF4244C(a3);
    result = (*(uint64_t (**)(void))(**(_QWORD **)(v4 + 8) + 16))();
    if (v6)
      result = (*(uint64_t (**)(_QWORD *))(*v6 + 24))(v6);
    if (v5)
      return (*(uint64_t (**)(char *))(*(_QWORD *)v5 + 24))(v5);
  }
  return result;
}

void sub_20AF42394(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;

  if (v2)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
    if (!v1)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if (!v1)
  {
    goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF423D4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "Z20ForwardLoggerUpdatedU13block_pointerFvPK16VZConnectionInfoPK14VZLoggerUpdateEE3$_1")
    return a1 + 8;
  if (((v3 & (unint64_t)"Z20ForwardLoggerUpdatedU13block_pointerFvPK16VZConnectionInfoPK14VZLoggerUpdateEE3$_1" & 0x8000000000000000) != 0) == __OFSUB__(v3, "Z20ForwardLoggerUpdatedU13block_pointerFvPK16VZConnectionInfoPK14VZLoggerUpdateEE3$_1"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"Z20ForwardLoggerUpdatedU13block_pointerFvPK16VZConnectionInfoPK14VZLoggerUpdateEE3$_1" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20AF42440()
{
  return &unk_24C3F4F30;
}

_QWORD *sub_20AF4244C(const void ***a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t **v5;
  const void ***v6;
  const void **v7;
  const void **v8;
  const void **v10;
  const void ***v11;
  BOOL v12;
  unsigned __int8 v13;
  __int128 *v14;
  __int128 *v15;
  __int128 *v16;
  int v17;
  size_t v18;
  unint64_t v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char v24[16];
  void *v25;
  char v26;
  char v27;
  void *v28;
  char v29;
  void *__p;
  char v31;
  char v32;
  char v33;
  char v34;
  __int128 *v35;
  __int128 *v36;
  __int128 __dst;
  uint64_t v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v2 = operator new(0x38uLL, MEMORY[0x24BEDB6B8]);
  if (v2)
  {
    v3 = v2;
    *v2 = off_24C3F2180;
    v2[3] = 0;
    v4 = v2 + 3;
    v2[2] = v2 + 3;
    v5 = (uint64_t **)(v2 + 2);
    v2[4] = 0;
    v8 = *a1;
    v6 = a1 + 1;
    v7 = v8;
    if (v8 != (const void **)v6)
    {
      do
      {
        sub_20AF4043C(v5, v4, v7 + 4, (uint64_t)(v7 + 4));
        v10 = (const void **)v7[1];
        if (v10)
        {
          do
          {
            v11 = (const void ***)v10;
            v10 = (const void **)*v10;
          }
          while (v10);
        }
        else
        {
          do
          {
            v11 = (const void ***)v7[2];
            v12 = *v11 == v7;
            v7 = (const void **)v11;
          }
          while (!v12);
        }
        v7 = (const void **)v11;
      }
      while (v11 != v6);
    }
    *((_DWORD *)v3 + 10) = 1;
    *v3 = &off_24C3F48F0;
    v3[1] = &unk_24C3F4940;
    v3[6] = 0;
    return v3;
  }
  sub_20AF4280C();
  v13 = atomic_load((unsigned __int8 *)&qword_2546399D8);
  if ((v13 & 1) == 0 && __cxa_guard_acquire(&qword_2546399D8))
  {
    sub_20AF429C4();
    v17 = byte_25463A0BF;
    if (byte_25463A0BF >= 0)
      v18 = byte_25463A0BF;
    else
      v18 = qword_25463A0B0;
    v19 = v18 + 1;
    if (v18 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v19 >= 0x17)
    {
      v21 = (v19 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v19 | 7) != 0x17)
        v21 = v19 | 7;
      v22 = v21 + 1;
      v20 = (__int128 *)operator new(v21 + 1);
      *((_QWORD *)&xmmword_25463A090 + 1) = v18 + 1;
      unk_25463A0A0 = v22 | 0x8000000000000000;
      *(_QWORD *)&xmmword_25463A090 = v20;
    }
    else
    {
      v20 = &xmmword_25463A090;
      unk_25463A0A0 = 0;
      xmmword_25463A090 = 0uLL;
      byte_25463A0A7 = v18 + 1;
      if (!v18)
      {
LABEL_52:
        *(_WORD *)((char *)v20 + v18) = 38;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A090, &dword_20AEBB000);
        __cxa_guard_release(&qword_2546399D8);
        goto LABEL_13;
      }
    }
    if (v17 >= 0)
      v23 = &qword_25463A0A8;
    else
      v23 = (uint64_t *)qword_25463A0A8;
    memmove(v20, v23, v18);
    goto LABEL_52;
  }
LABEL_13:
  if (byte_25463A0A7 < 0)
  {
    sub_20AEC60F4(&__dst, (void *)xmmword_25463A090, *((unint64_t *)&xmmword_25463A090 + 1));
  }
  else
  {
    __dst = xmmword_25463A090;
    v38 = unk_25463A0A0;
  }
  sub_20AEC7620(&v35, (uint64_t)&__dst, 1uLL);
  v24[0] = 0;
  v34 = 0;
  sub_20AECD798((uint64_t *)&xmmword_25463A048, &v35, (uint64_t)v24, 0);
  if (v34 && v33)
  {
    if (v32)
    {
      if (v31 < 0)
        operator delete(__p);
      if (v29 < 0)
        operator delete(v28);
    }
    if (v27 && v26 < 0)
      operator delete(v25);
  }
  v14 = v35;
  if (v35)
  {
    v15 = v36;
    v16 = v35;
    if (v36 != v35)
    {
      do
      {
        if (*((char *)v15 - 1) < 0)
          operator delete(*((void **)v15 - 3));
        v15 = (__int128 *)((char *)v15 - 24);
      }
      while (v15 != v14);
      v16 = v35;
    }
    v36 = v14;
    operator delete(v16);
  }
  if (SHIBYTE(v38) < 0)
    operator delete((void *)__dst);
  return 0;
}

void sub_20AF427D8(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_2546399D8);
    sub_20AEC01C0(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF427F0(uint64_t a1, int a2)
{
  if (!a2)
    JUMPOUT(0x20AF427FCLL);
  sub_20AEC01C0(a1);
}

void sub_20AF4280C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2546399C0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546399C0))
  {
    sub_20AF428C4();
    if (byte_25463A08F < 0)
    {
      sub_20AEC60F4(&xmmword_25463A048, (void *)xmmword_25463A078, *((unint64_t *)&xmmword_25463A078 + 1));
    }
    else
    {
      xmmword_25463A048 = xmmword_25463A078;
      unk_25463A058 = unk_25463A088;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A048, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546399C0);
  }
}

void sub_20AF428AC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546399C0);
  _Unwind_Resume(a1);
}

void sub_20AF428C4()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_2546399C8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546399C8))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZLoggerUpdate]", qword_25463A060);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A060, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546399C8);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_2546399D0);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_2546399D0))
    {
      sub_20B531658((uint64_t)qword_25463A060, (uint64_t)&xmmword_25463A078);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A078, &dword_20AEBB000);
      __cxa_guard_release(&qword_2546399D0);
    }
  }
}

void sub_20AF42994(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546399D0);
  _Unwind_Resume(a1);
}

void sub_20AF429AC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546399C8);
  _Unwind_Resume(a1);
}

void sub_20AF429C4()
{
  unsigned __int8 v0;
  __int128 *v1;
  const void **v2;
  int v3;
  size_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  const void *v10;

  v0 = atomic_load((unsigned __int8 *)&qword_2546399E0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546399E0))
  {
    v1 = sub_20AF42B4C();
    v2 = (const void **)v1;
    v3 = *((char *)v1 + 23);
    if (v3 >= 0)
      v4 = *((unsigned __int8 *)v1 + 23);
    else
      v4 = *((_QWORD *)v1 + 1);
    v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v5 >= 0x17)
    {
      v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17)
        v7 = v5 | 7;
      v8 = v7 + 1;
      v9 = (char *)operator new(v7 + 1);
      qword_25463A0B0 = v4 + 6;
      unk_25463A0B8 = v8 | 0x8000000000000000;
      qword_25463A0A8 = (uint64_t)v9;
      *(_DWORD *)v9 = 1936617315;
      *((_WORD *)v9 + 2) = 8308;
      v6 = v9 + 6;
    }
    else
    {
      qword_25463A0B0 = 0;
      unk_25463A0B8 = 0;
      qword_25463A0A8 = 0x2074736E6F63;
      byte_25463A0BF = v4 + 6;
      v6 = (char *)&qword_25463A0A8 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A0A8, &dword_20AEBB000);
        __cxa_guard_release(&qword_2546399E0);
        return;
      }
    }
    if (v3 >= 0)
      v10 = v2;
    else
      v10 = *v2;
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
}

void sub_20AF42B34(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546399E0);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF42B4C()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631218);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631218))
    return &xmmword_254631200;
  v2 = (char *)sub_20AF42C28();
  if (v2[23] < 0)
  {
    sub_20AEC60F4(&xmmword_254631200, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_254631210 = *((_QWORD *)v2 + 2);
    xmmword_254631200 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631200, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631218);
  return &xmmword_254631200;
}

void sub_20AF42C10(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631218);
  _Unwind_Resume(a1);
}

void *sub_20AF42C28()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254631238);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254631238))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::UpdateEnabledContexts]", qword_254631220);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631220, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631238);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254631258);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_254631258))
    return &unk_254631240;
  sub_20B531658((uint64_t)qword_254631220, (uint64_t)&unk_254631240);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_254631240, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631258);
  return &unk_254631240;
}

void sub_20AF42D18(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631258);
  _Unwind_Resume(a1);
}

void sub_20AF42D30(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631238);
  _Unwind_Resume(a1);
}

void sub_20AF42D48()
{
  unsigned __int8 v0;
  int v1;
  size_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 *v8;

  v0 = atomic_load((unsigned __int8 *)&qword_254639A10);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639A10))
  {
    sub_20AF418B4();
    v1 = SHIBYTE(qword_254639F98);
    if (qword_254639F98 >= 0)
      v2 = HIBYTE(qword_254639F98);
    else
      v2 = *((_QWORD *)&xmmword_254639F88 + 1);
    v3 = v2 + 6;
    if (v2 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v3 >= 0x17)
    {
      v5 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v3 | 7) != 0x17)
        v5 = v3 | 7;
      v6 = v5 + 1;
      v7 = (char *)operator new(v5 + 1);
      qword_25463A0E0 = v2 + 6;
      unk_25463A0E8 = v6 | 0x8000000000000000;
      qword_25463A0D8 = (uint64_t)v7;
      *(_DWORD *)v7 = 1936617315;
      *((_WORD *)v7 + 2) = 8308;
      v4 = v7 + 6;
    }
    else
    {
      qword_25463A0E0 = 0;
      unk_25463A0E8 = 0;
      qword_25463A0D8 = 0x2074736E6F63;
      byte_25463A0EF = v2 + 6;
      v4 = (char *)&qword_25463A0D8 + 6;
      if (!v2)
      {
LABEL_18:
        v4[v2] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A0D8, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639A10);
        return;
      }
    }
    if (v1 >= 0)
      v8 = &xmmword_254639F88;
    else
      v8 = (__int128 *)xmmword_254639F88;
    memmove(v4, v8, v2);
    goto LABEL_18;
  }
}

void sub_20AF42EB0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639A10);
  _Unwind_Resume(a1);
}

void sub_20AF42EC8()
{
  unsigned __int8 v0;
  int v1;
  size_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 *v8;

  v0 = atomic_load((unsigned __int8 *)&qword_254639A20);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639A20))
  {
    sub_20AF40088();
    v1 = SHIBYTE(qword_254639C08);
    if (qword_254639C08 >= 0)
      v2 = HIBYTE(qword_254639C08);
    else
      v2 = *((_QWORD *)&xmmword_254639BF8 + 1);
    v3 = v2 + 6;
    if (v2 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v3 >= 0x17)
    {
      v5 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v3 | 7) != 0x17)
        v5 = v3 | 7;
      v6 = v5 + 1;
      v7 = (char *)operator new(v5 + 1);
      qword_25463A110 = v2 + 6;
      unk_25463A118 = v6 | 0x8000000000000000;
      qword_25463A108 = (uint64_t)v7;
      *(_DWORD *)v7 = 1936617315;
      *((_WORD *)v7 + 2) = 8308;
      v4 = v7 + 6;
    }
    else
    {
      qword_25463A110 = 0;
      unk_25463A118 = 0;
      qword_25463A108 = 0x2074736E6F63;
      byte_25463A11F = v2 + 6;
      v4 = (char *)&qword_25463A108 + 6;
      if (!v2)
      {
LABEL_18:
        v4[v2] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A108, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639A20);
        return;
      }
    }
    if (v1 >= 0)
      v8 = &xmmword_254639BF8;
    else
      v8 = (__int128 *)xmmword_254639BF8;
    memmove(v4, v8, v2);
    goto LABEL_18;
  }
}

void sub_20AF43030(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639A20);
  _Unwind_Resume(a1);
}

void sub_20AF43048()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639A58);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639A58))
  {
    sub_20AF43100();
    if (byte_25463A197 < 0)
    {
      sub_20AEC60F4(&xmmword_25463A150, (void *)xmmword_25463A180, *((unint64_t *)&xmmword_25463A180 + 1));
    }
    else
    {
      xmmword_25463A150 = xmmword_25463A180;
      unk_25463A160 = unk_25463A190;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A150, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639A58);
  }
}

void sub_20AF430E8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639A58);
  _Unwind_Resume(a1);
}

void sub_20AF43100()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254639A60);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639A60))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZServerOptions]", qword_25463A168);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A168, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639A60);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254639A68);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_254639A68))
    {
      sub_20B531658((uint64_t)qword_25463A168, (uint64_t)&xmmword_25463A180);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A180, &dword_20AEBB000);
      __cxa_guard_release(&qword_254639A68);
    }
  }
}

void sub_20AF431D0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639A68);
  _Unwind_Resume(a1);
}

void sub_20AF431E8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639A60);
  _Unwind_Resume(a1);
}

void sub_20AF43204()
{
  JUMPOUT(0x20BD3583CLL);
}

__n128 sub_20AF43218(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_24C3F4F50;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_20AF43250(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24C3F4F50;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_20AF43270(uint64_t result, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;

  if (*(_QWORD *)(result + 8))
  {
    v3 = result;
    v4 = *a3;
    v5 = sub_20AF414AC(a2);
    result = (*(uint64_t (**)(_QWORD, char *, uint64_t))(v3 + 8))(*(_QWORD *)(v3 + 16), v5, v4);
    if (v5)
      return (*(uint64_t (**)(char *))(*(_QWORD *)v5 + 24))(v5);
  }
  return result;
}

void sub_20AF432DC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF432FC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "Z49VZServerOptionsSetConnectionStatusChangedFunctionE3$_0")
    return a1 + 8;
  if (((v3 & (unint64_t)"Z49VZServerOptionsSetConnectionStatusChangedFunctionE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "Z49VZServerOptionsSetConnectionStatusChangedFunctionE3$_0"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"Z49VZServerOptionsSetConnectionStatusChangedFunctionE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20AF43368()
{
  return &unk_24C3F4FB0;
}

void sub_20AF43378()
{
  JUMPOUT(0x20BD3583CLL);
}

__n128 sub_20AF4338C(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_24C3F4FD0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_20AF433C4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24C3F4FD0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_20AF433E4(uint64_t result, uint64_t a2, const void ***a3)
{
  uint64_t v4;
  char *v5;
  _QWORD *v6;

  if (*(_QWORD *)(result + 8))
  {
    v4 = result;
    v5 = sub_20AF414AC(a2);
    v6 = sub_20AF4244C(a3);
    result = (*(uint64_t (**)(_QWORD, char *, _QWORD *))(v4 + 8))(*(_QWORD *)(v4 + 16), v5, v6);
    if (v6)
      result = (*(uint64_t (**)(_QWORD *))(*v6 + 24))(v6);
    if (v5)
      return (*(uint64_t (**)(char *))(*(_QWORD *)v5 + 24))(v5);
  }
  return result;
}

void sub_20AF43470(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;

  if (v2)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
    if (!v1)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if (!v1)
  {
    goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF434B0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "Z39VZServerOptionsSetLoggerUpdatedFunctionE3$_0")
    return a1 + 8;
  if (((v3 & (unint64_t)"Z39VZServerOptionsSetLoggerUpdatedFunctionE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "Z39VZServerOptionsSetLoggerUpdatedFunctionE3$_0"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"Z39VZServerOptionsSetLoggerUpdatedFunctionE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20AF4351C()
{
  return &unk_24C3F5030;
}

uint64_t sub_20AF43528(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  *(_QWORD *)(a1 + 5) = *(uint64_t *)((char *)a2 + 5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  if (*((_BYTE *)a2 + 40))
  {
    sub_20AF43774((_QWORD *)(a1 + 16), (uint64_t)(a2 + 2));
    *(_BYTE *)(a1 + 40) = 1;
  }
  v5 = *((_DWORD *)a2 + 12);
  *(_BYTE *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 88) = 0;
  if (*((_BYTE *)a2 + 88))
  {
    v6 = a2[10];
    if (v6)
    {
      if ((uint64_t *)v6 == a2 + 7)
      {
        *(_QWORD *)(a1 + 80) = a1 + 56;
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2[10] + 24))(a2[10], a1 + 56);
        goto LABEL_9;
      }
      v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 16))(v6);
    }
    *(_QWORD *)(a1 + 80) = v6;
LABEL_9:
    *(_BYTE *)(a1 + 88) = 1;
  }
  *(_BYTE *)(a1 + 96) = 0;
  *(_BYTE *)(a1 + 128) = 0;
  if (*((_BYTE *)a2 + 128))
  {
    v7 = a2[15];
    if (v7)
    {
      if ((uint64_t *)v7 == a2 + 12)
      {
        *(_QWORD *)(a1 + 120) = a1 + 96;
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2[15] + 24))(a2[15], a1 + 96);
        goto LABEL_16;
      }
      v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    }
    *(_QWORD *)(a1 + 120) = v7;
LABEL_16:
    *(_BYTE *)(a1 + 128) = 1;
  }
  return a1;
}

void sub_20AF43654(_Unwind_Exception *a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  if (*(_BYTE *)(v1 + 128))
  {
    v5 = *(_QWORD **)(v1 + 120);
    if (v5 == v3)
    {
      v6 = 4;
    }
    else
    {
      if (!v5)
        goto LABEL_7;
      v6 = 5;
      v3 = *(_QWORD **)(v1 + 120);
    }
    (*(void (**)(_QWORD *))(*v3 + 8 * v6))(v3);
  }
LABEL_7:
  if (!*(_BYTE *)(v1 + 88))
    goto LABEL_13;
  v7 = *(_QWORD **)(v1 + 80);
  if (v7 == v2)
  {
    v8 = 4;
  }
  else
  {
    if (!v7)
      goto LABEL_13;
    v8 = 5;
    v2 = *(_QWORD **)(v1 + 80);
  }
  (*(void (**)(_QWORD *))(*v2 + 8 * v8))(v2);
LABEL_13:
  sub_20AF3FB48(v1);
  _Unwind_Resume(a1);
}

void sub_20AF436F0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  char *v4;
  char *v5;
  void *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  if (*(_BYTE *)(v1 + 40))
  {
    v4 = (char *)*v2;
    if (*v2)
    {
      v5 = *(char **)(v1 + 24);
      v6 = *v2;
      if (v5 != v4)
      {
        do
        {
          v7 = (std::__shared_weak_count *)*((_QWORD *)v5 - 1);
          if (v7)
          {
            p_shared_owners = (unint64_t *)&v7->__shared_owners_;
            do
              v9 = __ldaxr(p_shared_owners);
            while (__stlxr(v9 - 1, p_shared_owners));
            if (!v9)
            {
              ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
              std::__shared_weak_count::__release_weak(v7);
            }
          }
          v5 -= 16;
        }
        while (v5 != v4);
        v6 = *v2;
      }
      *(_QWORD *)(v1 + 24) = v4;
      operator delete(v6);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20AF43774(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  v3 = *(_QWORD **)a2;
  v4 = *(_QWORD **)(a2 + 8);
  v5 = (uint64_t)v4 - *(_QWORD *)a2;
  if (v4 != *(_QWORD **)a2)
  {
    if (v5 < 0)
      sub_20AEC60B8();
    v6 = operator new((size_t)v4 - *(_QWORD *)a2);
    *a1 = v6;
    a1[1] = v6;
    a1[2] = &v6[2 * (v5 >> 4)];
    do
    {
      v7 = v3[1];
      *v6 = *v3;
      v6[1] = v7;
      if (v7)
      {
        v8 = (unint64_t *)(v7 + 8);
        do
          v9 = __ldxr(v8);
        while (__stxr(v9 + 1, v8));
      }
      v3 += 2;
      v6 += 2;
    }
    while (v3 != v4);
    a1[1] = v6;
  }
  return a1;
}

void sub_20AF4381C(_Unwind_Exception *exception_object)
{
  void **v1;
  char *v3;
  char *v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  v3 = (char *)*v1;
  if (*v1)
  {
    v4 = (char *)v1[1];
    v5 = *v1;
    if (v4 != v3)
    {
      do
      {
        v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 16;
      }
      while (v4 != v3);
      v5 = *v1;
    }
    v1[1] = v3;
    operator delete(v5);
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF43898()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639A88);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639A88))
  {
    sub_20AF43950();
    if (byte_25463A1DF < 0)
    {
      sub_20AEC60F4(&xmmword_25463A1B0, (void *)qword_25463A1C8, unk_25463A1D0);
    }
    else
    {
      xmmword_25463A1B0 = *(_OWORD *)&qword_25463A1C8;
      qword_25463A1C0 = unk_25463A1D8;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A1B0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639A88);
  }
}

void sub_20AF43938(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639A88);
  _Unwind_Resume(a1);
}

void sub_20AF43950()
{
  unsigned __int8 v0;
  void *__p[2];
  char v2;

  v0 = atomic_load((unsigned __int8 *)&qword_254639A90);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639A90))
  {
    sub_20AF43BF8(__p);
    sub_20AF43A24((char *)__p);
    if (v2 < 0)
      operator delete(__p[0]);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A1C8, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639A90);
  }
}

void sub_20AF439E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254639A90);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254639A90);
  _Unwind_Resume(a1);
}

void sub_20AF43A24(char *a1)
{
  unsigned __int8 v2;
  int64x2_t v3;
  int8x16_t v4;
  void **v5;
  void **v6;
  void *v7;
  void *__p;
  void **v9;
  void *__dst[2];
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254639A98);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254639A98))
  {
    sub_20AF43DD4();
    if (byte_25463A227 < 0)
    {
      sub_20AEC60F4(&xmmword_25463A1E0, (void *)xmmword_25463A210, *((unint64_t *)&xmmword_25463A210 + 1));
    }
    else
    {
      xmmword_25463A1E0 = xmmword_25463A210;
      unk_25463A1F0 = unk_25463A220;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A1E0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639A98);
  }
  if (byte_25463A1F7 < 0)
  {
    sub_20AEC60F4(__dst, (void *)xmmword_25463A1E0, *((unint64_t *)&xmmword_25463A1E0 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_25463A1E0;
    v11 = unk_25463A1F0;
  }
  sub_20AEC7620(&__p, (uint64_t)__dst, 1uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, (std::string *)&qword_25463A1C8, v3, v4);
  v5 = (void **)__p;
  if (__p)
  {
    v6 = v9;
    v7 = __p;
    if (v9 != __p)
    {
      do
      {
        if (*((char *)v6 - 1) < 0)
          operator delete(*(v6 - 3));
        v6 -= 3;
      }
      while (v6 != v5);
      v7 = __p;
    }
    v9 = v5;
    operator delete(v7);
  }
  if (SHIBYTE(v11) < 0)
    operator delete(__dst[0]);
}

void sub_20AF43BB0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639A98);
  _Unwind_Resume(a1);
}

void sub_20AF43BCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_20AEC2E90(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20AF43BF8(_QWORD *__dst)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254639AB0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254639AB0))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::optional<cv3d::vl::visual_logger::ServerOptions>]", qword_25463A228);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A228, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639AB0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254639AB8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254639AB8))
  {
    v5 = sub_20AED4780(qword_25463A228, "<", 0);
    sub_20AED467C(qword_25463A228, 0, v5, qword_25463A240);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A240, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639AB8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254639AC0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254639AC0))
  {
    sub_20B531658((uint64_t)qword_25463A240, (uint64_t)&xmmword_25463A258);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A258, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639AC0);
  }
  if (byte_25463A26F < 0)
  {
    sub_20AEC60F4(__dst, (void *)xmmword_25463A258, *((unint64_t *)&xmmword_25463A258 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_25463A258;
    __dst[2] = unk_25463A268;
  }
}

void sub_20AF43D8C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639AC0);
  _Unwind_Resume(a1);
}

void sub_20AF43DA4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639AB8);
  _Unwind_Resume(a1);
}

void sub_20AF43DBC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639AB0);
  _Unwind_Resume(a1);
}

void sub_20AF43DD4()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254639AA0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639AA0))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::ServerOptions]", qword_25463A1F8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A1F8, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639AA0);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254639AA8);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_254639AA8))
    {
      sub_20B531658((uint64_t)qword_25463A1F8, (uint64_t)&xmmword_25463A210);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A210, &dword_20AEBB000);
      __cxa_guard_release(&qword_254639AA8);
    }
  }
}

void sub_20AF43EA4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639AA8);
  _Unwind_Resume(a1);
}

void sub_20AF43EBC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639AA0);
  _Unwind_Resume(a1);
}

void sub_20AF43ED4(CFErrorRef ***a1, uint64_t a2)
{
  unsigned __int8 v4;
  uint64_t *v5;
  __int128 v6;
  void **v7;
  void **v8;
  void *v9;
  _BYTE v10[16];
  void *__p;
  char v12;
  char v13;
  void *v14;
  char v15;
  void *v16;
  char v17;
  char v18;
  char v19;
  char v20;
  void *v21;
  void **v22;
  __int128 __dst;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  sub_20AF44434();
  v4 = atomic_load((unsigned __int8 *)&qword_254639AE0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254639AE0))
  {
    sub_20AF445EC();
    if (byte_25463A2E7 < 0)
    {
      sub_20AEC60F4(&xmmword_25463A2B8, (void *)qword_25463A2D0, unk_25463A2D8);
    }
    else
    {
      xmmword_25463A2B8 = *(_OWORD *)&qword_25463A2D0;
      unk_25463A2C8 = unk_25463A2E0;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A2B8, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639AE0);
  }
  if (byte_25463A2CF < 0)
  {
    sub_20AEC60F4(&__dst, (void *)xmmword_25463A2B8, *((unint64_t *)&xmmword_25463A2B8 + 1));
  }
  else
  {
    __dst = xmmword_25463A2B8;
    v24 = unk_25463A2C8;
  }
  sub_20AF43898();
  if (SHIBYTE(qword_25463A1C0) < 0)
  {
    sub_20AEC60F4(&v25, (void *)xmmword_25463A1B0, *((unint64_t *)&xmmword_25463A1B0 + 1));
  }
  else
  {
    v25 = xmmword_25463A1B0;
    v26 = qword_25463A1C0;
  }
  v5 = sub_20AEE0FFC();
  if (*((char *)v5 + 23) < 0)
  {
    sub_20AEC60F4(&v27, (void *)*v5, v5[1]);
  }
  else
  {
    v6 = *(_OWORD *)v5;
    v28 = v5[2];
    v27 = v6;
  }
  sub_20AEC7620(&v21, (uint64_t)&__dst, 3uLL);
  sub_20AECF9B0(v10, a2);
  sub_20AECD798((uint64_t *)&xmmword_25463A270, (__int128 **)&v21, (uint64_t)v10, **a1);
  if (v20 && v19)
  {
    if (!v18)
      goto LABEL_16;
    if (v17 < 0)
    {
      operator delete(v16);
      if ((v15 & 0x80000000) == 0)
      {
LABEL_16:
        if (!v13)
          goto LABEL_19;
LABEL_17:
        if (v12 < 0)
          operator delete(__p);
        goto LABEL_19;
      }
    }
    else if ((v15 & 0x80000000) == 0)
    {
      goto LABEL_16;
    }
    operator delete(v14);
    if (!v13)
      goto LABEL_19;
    goto LABEL_17;
  }
LABEL_19:
  v7 = (void **)v21;
  if (v21)
  {
    v8 = v22;
    v9 = v21;
    if (v22 != v21)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = v21;
    }
    v22 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v28) < 0)
  {
    operator delete((void *)v27);
    if ((SHIBYTE(v26) & 0x80000000) == 0)
    {
LABEL_29:
      if ((SHIBYTE(v24) & 0x80000000) == 0)
        return;
LABEL_33:
      operator delete((void *)__dst);
      return;
    }
  }
  else if ((SHIBYTE(v26) & 0x80000000) == 0)
  {
    goto LABEL_29;
  }
  operator delete((void *)v25);
  if (SHIBYTE(v24) < 0)
    goto LABEL_33;
}

void sub_20AF44198(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639AE0);
  _Unwind_Resume(a1);
}

void sub_20AF441B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF44258(uint64_t result)
{
  __int128 *v1;
  void *exception;
  __int128 v3;
  _BYTE v4[112];

  v1 = (__int128 *)result;
  if (!*(_BYTE *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    v3 = *v1;
    sub_20AECEBD0(v4, v1 + 1);
    sub_20AECF558((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_24C3F22C0, (void (*)(void *))sub_20AECF5A8);
  }
  return result;
}

void sub_20AF442D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECCE40((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF442E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  sub_20AECCE40((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_20AF44304(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF44318(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  if (!*(_BYTE *)(a1 + 120))
  {
    if (!*(_BYTE *)(a1 + 112))
      return a1;
    if (!*(_BYTE *)(a1 + 104))
      goto LABEL_17;
    if (*(char *)(a1 + 103) < 0)
    {
      operator delete(*(void **)(a1 + 80));
      if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      {
LABEL_17:
        if (!*(_BYTE *)(a1 + 40))
          return a1;
        goto LABEL_18;
      }
    }
    else if ((*(char *)(a1 + 71) & 0x80000000) == 0)
    {
      goto LABEL_17;
    }
    operator delete(*(void **)(a1 + 48));
    if (!*(_BYTE *)(a1 + 40))
      return a1;
LABEL_18:
    if (*(char *)(a1 + 39) < 0)
    {
      operator delete(*(void **)(a1 + 16));
      return a1;
    }
    return a1;
  }
  if (*(_BYTE *)(a1 + 48))
  {
    v2 = *(std::__shared_weak_count **)(a1 + 24);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v5)
    return a1;
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (v7)
    return a1;
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_20AF44434()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639AC8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639AC8))
  {
    sub_20AF444EC();
    if (byte_25463A2B7 < 0)
    {
      sub_20AEC60F4(&xmmword_25463A270, (void *)xmmword_25463A2A0, *((unint64_t *)&xmmword_25463A2A0 + 1));
    }
    else
    {
      xmmword_25463A270 = xmmword_25463A2A0;
      unk_25463A280 = unk_25463A2B0;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A270, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639AC8);
  }
}

void sub_20AF444D4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639AC8);
  _Unwind_Resume(a1);
}

void sub_20AF444EC()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254639AD0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639AD0))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZServer]", qword_25463A288);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A288, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639AD0);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254639AD8);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_254639AD8))
    {
      sub_20B531658((uint64_t)qword_25463A288, (uint64_t)&xmmword_25463A2A0);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A2A0, &dword_20AEBB000);
      __cxa_guard_release(&qword_254639AD8);
    }
  }
}

void sub_20AF445BC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639AD8);
  _Unwind_Resume(a1);
}

void sub_20AF445D4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639AD0);
  _Unwind_Resume(a1);
}

void sub_20AF445EC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v2;

  v0 = atomic_load((unsigned __int8 *)&qword_254639AE8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639AE8))
  {
    sub_20AF44894(__p);
    sub_20AF446C0((char *)__p);
    if (v2 < 0)
      operator delete(__p[0]);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A2D0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639AE8);
  }
}

void sub_20AF44680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254639AE8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254639AE8);
  _Unwind_Resume(a1);
}

void sub_20AF446C0(char *a1)
{
  unsigned __int8 v2;
  int64x2_t v3;
  int8x16_t v4;
  void **v5;
  void **v6;
  void *v7;
  void *__p;
  void **v9;
  void *__dst[2];
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_254639AF0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254639AF0))
  {
    sub_20AF44A70();
    if (byte_25463A32F < 0)
    {
      sub_20AEC60F4(&xmmword_25463A2E8, (void *)xmmword_25463A318, *((unint64_t *)&xmmword_25463A318 + 1));
    }
    else
    {
      xmmword_25463A2E8 = xmmword_25463A318;
      unk_25463A2F8 = unk_25463A328;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A2E8, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639AF0);
  }
  if (byte_25463A2FF < 0)
  {
    sub_20AEC60F4(__dst, (void *)xmmword_25463A2E8, *((unint64_t *)&xmmword_25463A2E8 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_25463A2E8;
    v11 = unk_25463A2F8;
  }
  sub_20AEC7620(&__p, (uint64_t)__dst, 1uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, (std::string *)&qword_25463A2D0, v3, v4);
  v5 = (void **)__p;
  if (__p)
  {
    v6 = v9;
    v7 = __p;
    if (v9 != __p)
    {
      do
      {
        if (*((char *)v6 - 1) < 0)
          operator delete(*(v6 - 3));
        v6 -= 3;
      }
      while (v6 != v5);
      v7 = __p;
    }
    v9 = v5;
    operator delete(v7);
  }
  if (SHIBYTE(v11) < 0)
    operator delete(__dst[0]);
}

void sub_20AF4484C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639AF0);
  _Unwind_Resume(a1);
}

void sub_20AF44868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_20AEC2E90(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20AF44894(_QWORD *__dst)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254639B08);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254639B08))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::function<void (const cv3d::kit::viz::ConnectionInfo &, const cv3d::vl::visual_logger::LogMessage &)>]", qword_25463A330);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A330, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639B08);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254639B10);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254639B10))
  {
    v5 = sub_20AED4780(qword_25463A330, "<", 0);
    sub_20AED467C(qword_25463A330, 0, v5, qword_25463A348);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A348, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639B10);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254639B18);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254639B18))
  {
    sub_20B531658((uint64_t)qword_25463A348, (uint64_t)&xmmword_25463A360);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A360, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639B18);
  }
  if (byte_25463A377 < 0)
  {
    sub_20AEC60F4(__dst, (void *)xmmword_25463A360, *((unint64_t *)&xmmword_25463A360 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_25463A360;
    __dst[2] = unk_25463A370;
  }
}

void sub_20AF44A28(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639B18);
  _Unwind_Resume(a1);
}

void sub_20AF44A40(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639B10);
  _Unwind_Resume(a1);
}

void sub_20AF44A58(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639B08);
  _Unwind_Resume(a1);
}

void sub_20AF44A70()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254639AF8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639AF8))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = void (const cv3d::kit::viz::ConnectionInfo &, const cv3d::vl::visual_logger::LogMessage &)]", qword_25463A300);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A300, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639AF8);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254639B00);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_254639B00))
    {
      sub_20B531658((uint64_t)qword_25463A300, (uint64_t)&xmmword_25463A318);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A318, &dword_20AEBB000);
      __cxa_guard_release(&qword_254639B00);
    }
  }
}

void sub_20AF44B40(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639B00);
  _Unwind_Resume(a1);
}

void sub_20AF44B58(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639AF8);
  _Unwind_Resume(a1);
}

void sub_20AF44B70(CFErrorRef ***a1, uint64_t a2)
{
  unsigned __int8 v4;
  uint64_t *v5;
  __int128 v6;
  void **v7;
  void **v8;
  void *v9;
  unsigned __int8 v10;
  int v11;
  size_t v12;
  unint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  _BYTE v20[16];
  void *__p;
  char v22;
  char v23;
  void *v24;
  char v25;
  void *v26;
  char v27;
  char v28;
  char v29;
  char v30;
  void *v31;
  void **v32;
  void *__dst[2];
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  sub_20AF44434();
  v4 = atomic_load((unsigned __int8 *)&qword_254639B20);
  if ((v4 & 1) != 0 || !__cxa_guard_acquire(&qword_254639B20))
    goto LABEL_2;
  v10 = atomic_load((unsigned __int8 *)&qword_254639B28);
  if ((v10 & 1) == 0 && __cxa_guard_acquire(&qword_254639B28))
  {
    v18 = atomic_load((unsigned __int8 *)&qword_254639B30);
    if ((v18 & 1) == 0 && __cxa_guard_acquire(&qword_254639B30))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = (lambda at /Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/VisualLogger/src/VZServer.cpp:351:37)]", qword_25463A3A8);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A3A8, &dword_20AEBB000);
      __cxa_guard_release(&qword_254639B30);
    }
    v19 = atomic_load((unsigned __int8 *)&qword_254639B38);
    if ((v19 & 1) == 0 && __cxa_guard_acquire(&qword_254639B38))
    {
      sub_20B531658((uint64_t)qword_25463A3A8, (uint64_t)&xmmword_25463A3C0);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A3C0, &dword_20AEBB000);
      __cxa_guard_release(&qword_254639B38);
    }
    if (byte_25463A3D7 < 0)
    {
      sub_20AEC60F4(&xmmword_25463A390, (void *)xmmword_25463A3C0, *((unint64_t *)&xmmword_25463A3C0 + 1));
    }
    else
    {
      xmmword_25463A390 = xmmword_25463A3C0;
      unk_25463A3A0 = unk_25463A3D0;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A390, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639B28);
  }
  v11 = byte_25463A3A7;
  if (byte_25463A3A7 >= 0)
    v12 = byte_25463A3A7;
  else
    v12 = *((_QWORD *)&xmmword_25463A390 + 1);
  v13 = v12 + 1;
  if (v12 + 1 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  if (v13 >= 0x17)
  {
    v15 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v15 = v13 | 7;
    v16 = v15 + 1;
    v14 = (__int128 *)operator new(v15 + 1);
    *((_QWORD *)&xmmword_25463A378 + 1) = v12 + 1;
    unk_25463A388 = v16 | 0x8000000000000000;
    *(_QWORD *)&xmmword_25463A378 = v14;
    goto LABEL_49;
  }
  v14 = &xmmword_25463A378;
  unk_25463A388 = 0;
  xmmword_25463A378 = 0uLL;
  byte_25463A38F = v12 + 1;
  if (v12)
  {
LABEL_49:
    if (v11 >= 0)
      v17 = &xmmword_25463A390;
    else
      v17 = (__int128 *)xmmword_25463A390;
    memmove(v14, v17, v12);
  }
  *(_WORD *)((char *)v14 + v12) = 38;
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A378, &dword_20AEBB000);
  __cxa_guard_release(&qword_254639B20);
LABEL_2:
  if (byte_25463A38F < 0)
  {
    sub_20AEC60F4(__dst, (void *)xmmword_25463A378, *((unint64_t *)&xmmword_25463A378 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_25463A378;
    v34 = unk_25463A388;
  }
  sub_20AF43898();
  if (SHIBYTE(qword_25463A1C0) < 0)
  {
    sub_20AEC60F4(&v35, (void *)xmmword_25463A1B0, *((unint64_t *)&xmmword_25463A1B0 + 1));
  }
  else
  {
    v35 = xmmword_25463A1B0;
    v36 = qword_25463A1C0;
  }
  v5 = sub_20AEE0FFC();
  if (*((char *)v5 + 23) < 0)
  {
    sub_20AEC60F4(&v37, (void *)*v5, v5[1]);
  }
  else
  {
    v6 = *(_OWORD *)v5;
    v38 = v5[2];
    v37 = v6;
  }
  sub_20AEC7620(&v31, (uint64_t)__dst, 3uLL);
  sub_20AECF9B0(v20, a2);
  sub_20AECD798((uint64_t *)&xmmword_25463A270, (__int128 **)&v31, (uint64_t)v20, **a1);
  if (!v30 || !v29)
    goto LABEL_19;
  if (!v28)
    goto LABEL_16;
  if ((v27 & 0x80000000) == 0)
  {
    if ((v25 & 0x80000000) == 0)
      goto LABEL_16;
LABEL_35:
    operator delete(v24);
    if (!v23)
      goto LABEL_19;
    goto LABEL_17;
  }
  operator delete(v26);
  if (v25 < 0)
    goto LABEL_35;
LABEL_16:
  if (!v23)
    goto LABEL_19;
LABEL_17:
  if (v22 < 0)
    operator delete(__p);
LABEL_19:
  v7 = (void **)v31;
  if (v31)
  {
    v8 = v32;
    v9 = v31;
    if (v32 != v31)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = v31;
    }
    v32 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v38) < 0)
  {
    operator delete((void *)v37);
    if ((SHIBYTE(v36) & 0x80000000) == 0)
    {
LABEL_29:
      if ((SHIBYTE(v34) & 0x80000000) == 0)
        return;
LABEL_33:
      operator delete(__dst[0]);
      return;
    }
  }
  else if ((SHIBYTE(v36) & 0x80000000) == 0)
  {
    goto LABEL_29;
  }
  operator delete((void *)v35);
  if (SHIBYTE(v34) < 0)
    goto LABEL_33;
}

void sub_20AF45018(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639B38);
  __cxa_guard_abort(&qword_254639B28);
  __cxa_guard_abort(&qword_254639B20);
  _Unwind_Resume(a1);
}

void sub_20AF45064(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639B20);
  _Unwind_Resume(a1);
}

void sub_20AF4507C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,void *__p,uint64_t a42,int a43,__int16 a44,char a45,char a46)
{
  _Unwind_Resume(exception_object);
}

void sub_20AF45128()
{
  JUMPOUT(0x20BD3583CLL);
}

__n128 sub_20AF4513C(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_24C3F5050;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_20AF45174(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24C3F5050;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_20AF45194(uint64_t result, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  char *v5;
  __int128 *v6;

  if (*(_QWORD *)(result + 8))
  {
    v4 = result;
    v5 = sub_20AF414AC(a2);
    v6 = sub_20AEF7B54(0, a3);
    result = (*(uint64_t (**)(_QWORD, char *, __int128 *))(v4 + 8))(*(_QWORD *)(v4 + 16), v5, v6);
    if (v6)
      result = (*(uint64_t (**)(__int128 *))(*(_QWORD *)v6 + 24))(v6);
    if (v5)
      return (*(uint64_t (**)(char *))(*(_QWORD *)v5 + 24))(v5);
  }
  return result;
}

void sub_20AF45224(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;

  if (v2)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
    if (!v1)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if (!v1)
  {
    goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF45264(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "Z26VZServerCreateWithFunctionE3$_0")
    return a1 + 8;
  if (((v3 & (unint64_t)"Z26VZServerCreateWithFunctionE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "Z26VZServerCreateWithFunctionE3$_0"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"Z26VZServerCreateWithFunctionE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20AF452D0()
{
  return &unk_24C3F50B0;
}

void sub_20AF452DC()
{
  unsigned __int8 v0;
  int v1;
  size_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 *v8;

  v0 = atomic_load((unsigned __int8 *)&qword_254639B48);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639B48))
  {
    sub_20AF44434();
    v1 = byte_25463A287;
    if (byte_25463A287 >= 0)
      v2 = byte_25463A287;
    else
      v2 = *((_QWORD *)&xmmword_25463A270 + 1);
    v3 = v2 + 6;
    if (v2 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v3 >= 0x17)
    {
      v5 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v3 | 7) != 0x17)
        v5 = v3 | 7;
      v6 = v5 + 1;
      v7 = (char *)operator new(v5 + 1);
      qword_25463A3F8 = v2 + 6;
      unk_25463A400 = v6 | 0x8000000000000000;
      qword_25463A3F0 = (uint64_t)v7;
      *(_DWORD *)v7 = 1936617315;
      *((_WORD *)v7 + 2) = 8308;
      v4 = v7 + 6;
    }
    else
    {
      qword_25463A3F8 = 0;
      unk_25463A400 = 0;
      qword_25463A3F0 = 0x2074736E6F63;
      byte_25463A407 = v2 + 6;
      v4 = (char *)&qword_25463A3F0 + 6;
      if (!v2)
      {
LABEL_18:
        v4[v2] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A3F0, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639B48);
        return;
      }
    }
    if (v1 >= 0)
      v8 = &xmmword_25463A270;
    else
      v8 = (__int128 *)xmmword_25463A270;
    memmove(v4, v8, v2);
    goto LABEL_18;
  }
}

void sub_20AF45444(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639B48);
  _Unwind_Resume(a1);
}

void sub_20AF4545C()
{
  unsigned __int8 v0;
  int v1;
  size_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 *v8;

  v0 = atomic_load((unsigned __int8 *)&qword_254639B58);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639B58))
  {
    sub_20AF455DC();
    v1 = byte_25463A44F;
    if (byte_25463A44F >= 0)
      v2 = byte_25463A44F;
    else
      v2 = *((_QWORD *)&xmmword_25463A438 + 1);
    v3 = v2 + 6;
    if (v2 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v3 >= 0x17)
    {
      v5 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v3 | 7) != 0x17)
        v5 = v3 | 7;
      v6 = v5 + 1;
      v7 = (char *)operator new(v5 + 1);
      qword_25463A428 = v2 + 6;
      unk_25463A430 = v6 | 0x8000000000000000;
      qword_25463A420 = (uint64_t)v7;
      *(_DWORD *)v7 = 1936617315;
      *((_WORD *)v7 + 2) = 8308;
      v4 = v7 + 6;
    }
    else
    {
      qword_25463A428 = 0;
      unk_25463A430 = 0;
      qword_25463A420 = 0x2074736E6F63;
      byte_25463A437 = v2 + 6;
      v4 = (char *)&qword_25463A420 + 6;
      if (!v2)
      {
LABEL_18:
        v4[v2] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A420, &dword_20AEBB000);
        __cxa_guard_release(&qword_254639B58);
        return;
      }
    }
    if (v1 >= 0)
      v8 = &xmmword_25463A438;
    else
      v8 = (__int128 *)xmmword_25463A438;
    memmove(v4, v8, v2);
    goto LABEL_18;
  }
}

void sub_20AF455C4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639B58);
  _Unwind_Resume(a1);
}

void sub_20AF455DC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254639B60);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639B60))
  {
    sub_20AF45694();
    if (byte_25463A47F < 0)
    {
      sub_20AEC60F4(&xmmword_25463A438, (void *)xmmword_25463A468, *((unint64_t *)&xmmword_25463A468 + 1));
    }
    else
    {
      xmmword_25463A438 = xmmword_25463A468;
      unk_25463A448 = unk_25463A478;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A438, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639B60);
  }
}

void sub_20AF4567C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639B60);
  _Unwind_Resume(a1);
}

void sub_20AF45694()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254639B68);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639B68))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = __CFUUID]", qword_25463A450);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A450, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639B68);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254639B70);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_254639B70))
    {
      sub_20B531658((uint64_t)qword_25463A450, (uint64_t)&xmmword_25463A468);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A468, &dword_20AEBB000);
      __cxa_guard_release(&qword_254639B70);
    }
  }
}

void sub_20AF45764(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639B70);
  _Unwind_Resume(a1);
}

void sub_20AF4577C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639B68);
  _Unwind_Resume(a1);
}

void sub_20AF45794(CFErrorRef ***a1, uint64_t a2)
{
  uint64_t *v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  void **v7;
  void **v8;
  void *v9;
  int v10;
  size_t v11;
  unint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  _BYTE v17[16];
  void *__p;
  char v19;
  char v20;
  void *v21;
  char v22;
  void *v23;
  char v24;
  char v25;
  char v26;
  char v27;
  void *v28;
  void **v29;
  __int128 __dst;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t *)sub_20AEFF5B0();
  v5 = atomic_load((unsigned __int8 *)&qword_254639B78);
  if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254639B78))
    goto LABEL_2;
  sub_20AF452DC();
  v10 = byte_25463A407;
  if (byte_25463A407 >= 0)
    v11 = byte_25463A407;
  else
    v11 = qword_25463A3F8;
  v12 = v11 + 1;
  if (v11 + 1 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  if (v12 >= 0x17)
  {
    v14 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17)
      v14 = v12 | 7;
    v15 = v14 + 1;
    v13 = (__int128 *)operator new(v14 + 1);
    *((_QWORD *)&xmmword_25463A480 + 1) = v11 + 1;
    unk_25463A490 = v15 | 0x8000000000000000;
    *(_QWORD *)&xmmword_25463A480 = v13;
    goto LABEL_47;
  }
  v13 = &xmmword_25463A480;
  unk_25463A490 = 0;
  xmmword_25463A480 = 0uLL;
  byte_25463A497 = v11 + 1;
  if (v11)
  {
LABEL_47:
    if (v10 >= 0)
      v16 = &qword_25463A3F0;
    else
      v16 = (uint64_t *)qword_25463A3F0;
    memmove(v13, v16, v11);
  }
  *(_WORD *)((char *)v13 + v11) = 38;
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A480, &dword_20AEBB000);
  __cxa_guard_release(&qword_254639B78);
LABEL_2:
  if (byte_25463A497 < 0)
  {
    sub_20AEC60F4(&__dst, (void *)xmmword_25463A480, *((unint64_t *)&xmmword_25463A480 + 1));
  }
  else
  {
    __dst = xmmword_25463A480;
    v31 = unk_25463A490;
  }
  v6 = atomic_load((unsigned __int8 *)&qword_254639B80);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254639B80))
  {
    sub_20AF45C6C();
    if (byte_25463A4DF < 0)
    {
      sub_20AEC60F4(&xmmword_25463A498, (void *)xmmword_25463A4C8, *((unint64_t *)&xmmword_25463A4C8 + 1));
    }
    else
    {
      xmmword_25463A498 = xmmword_25463A4C8;
      unk_25463A4A8 = unk_25463A4D8;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A498, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639B80);
  }
  if (byte_25463A4AF < 0)
  {
    sub_20AEC60F4(&v32, (void *)xmmword_25463A498, *((unint64_t *)&xmmword_25463A498 + 1));
  }
  else
  {
    v32 = xmmword_25463A498;
    v33 = unk_25463A4A8;
  }
  sub_20AEC7620(&v28, (uint64_t)&__dst, 2uLL);
  sub_20AECF9B0(v17, a2);
  sub_20AECD798(v4, (__int128 **)&v28, (uint64_t)v17, **a1);
  if (v27 && v26)
  {
    if (!v25)
      goto LABEL_14;
    if (v24 < 0)
    {
      operator delete(v23);
      if ((v22 & 0x80000000) == 0)
      {
LABEL_14:
        if (!v20)
          goto LABEL_17;
LABEL_15:
        if (v19 < 0)
          operator delete(__p);
        goto LABEL_17;
      }
    }
    else if ((v22 & 0x80000000) == 0)
    {
      goto LABEL_14;
    }
    operator delete(v21);
    if (!v20)
      goto LABEL_17;
    goto LABEL_15;
  }
LABEL_17:
  v7 = (void **)v28;
  if (v28)
  {
    v8 = v29;
    v9 = v28;
    if (v29 != v28)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = v28;
    }
    v29 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v33) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v31) & 0x80000000) == 0)
      return;
LABEL_29:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v32);
  if (SHIBYTE(v31) < 0)
    goto LABEL_29;
}

void sub_20AF45B40(_Unwind_Exception *a1)
{
  uint64_t v1;

  __cxa_guard_abort(&qword_254639B80);
  if (*(char *)(v1 - 121) < 0)
  {
    operator delete(*(void **)(v1 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_20AF45BCC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 120))
  {
    sub_20AEC833C(a1, *(char **)(a1 + 8));
    return a1;
  }
  if (!*(_BYTE *)(a1 + 112))
    return a1;
  if (!*(_BYTE *)(a1 + 104))
    goto LABEL_8;
  if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_8;
LABEL_12:
    operator delete(*(void **)(a1 + 48));
    if (!*(_BYTE *)(a1 + 40))
      return a1;
    goto LABEL_9;
  }
  operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 71) < 0)
    goto LABEL_12;
LABEL_8:
  if (!*(_BYTE *)(a1 + 40))
    return a1;
LABEL_9:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0)
    return a1;
  operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_20AF45C6C()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254639B88);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254639B88))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::esn::random::UUID]", qword_25463A4B0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A4B0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254639B88);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254639B90);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_254639B90))
    {
      sub_20B531658((uint64_t)qword_25463A4B0, (uint64_t)&xmmword_25463A4C8);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A4C8, &dword_20AEBB000);
      __cxa_guard_release(&qword_254639B90);
    }
  }
}

void sub_20AF45D3C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639B90);
  _Unwind_Resume(a1);
}

void sub_20AF45D54(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254639B88);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF45D6C(uint64_t a1, _QWORD **a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  const void **v11;
  unsigned __int8 *v12;
  uint64_t result;
  _BOOL4 v14;
  _QWORD *v15;
  _QWORD *v16;
  BOOL v17;
  _QWORD *v18;
  _QWORD *v19;

  v2 = *(_QWORD **)a1;
  if (*(_QWORD *)(*(_QWORD *)a1 + 16) != (*a2)[2])
    return 0;
  v5 = (_QWORD *)*v2;
  v3 = v2 + 1;
  v4 = v5;
  if (v5 != v3)
  {
    v6 = (_QWORD *)**a2;
    while (1)
    {
      v7 = *((unsigned __int8 *)v4 + 55);
      if ((v7 & 0x80u) == 0)
        v8 = *((unsigned __int8 *)v4 + 55);
      else
        v8 = v4[5];
      v9 = *((unsigned __int8 *)v6 + 55);
      v10 = (char)v9;
      if ((v9 & 0x80u) != 0)
        v9 = v6[5];
      if (v8 != v9)
        return 0;
      v11 = (const void **)(v4 + 4);
      if (v10 >= 0)
        v12 = (unsigned __int8 *)(v6 + 4);
      else
        v12 = (unsigned __int8 *)v6[4];
      if ((v7 & 0x80) != 0)
      {
        v14 = memcmp(*v11, v12, v4[5]) == 0;
        result = 0;
        if (!v14)
          return result;
      }
      else
      {
        if (*((_BYTE *)v4 + 55))
        {
          while (*(unsigned __int8 *)v11 == *v12)
          {
            v11 = (const void **)((char *)v11 + 1);
            ++v12;
            if (!--v7)
              goto LABEL_17;
          }
          return 0;
        }
LABEL_17:
        result = 0;
      }
      if (*((unsigned __int8 *)v4 + 56) != *((unsigned __int8 *)v6 + 56))
        return result;
      v15 = (_QWORD *)v4[1];
      v16 = v4;
      if (v15)
      {
        do
        {
          v4 = v15;
          v15 = (_QWORD *)*v15;
        }
        while (v15);
      }
      else
      {
        do
        {
          v4 = (_QWORD *)v16[2];
          v17 = *v4 == (_QWORD)v16;
          v16 = v4;
        }
        while (!v17);
      }
      v18 = (_QWORD *)v6[1];
      if (v18)
      {
        do
        {
          v19 = v18;
          v18 = (_QWORD *)*v18;
        }
        while (v18);
      }
      else
      {
        do
        {
          v19 = (_QWORD *)v6[2];
          v17 = *v19 == (_QWORD)v6;
          v6 = v19;
        }
        while (!v17);
      }
      v6 = v19;
      if (v4 == v3)
        return 1;
    }
  }
  return 1;
}

void sub_20AF45EE0()
{
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF45EF4()
{
  JUMPOUT(0x20BD3583CLL);
}

uint64_t VZTimestampGetTypeID()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A548);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463A548))
    return qword_25463A540;
  qword_25463A540 = sub_20AECB130();
  __cxa_guard_release(&qword_25463A548);
  return qword_25463A540;
}

_QWORD *VZTimestampCreateNow()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t *v4;
  __int128 *v5;
  __int128 *v6;
  __int128 *v7;
  _BYTE v8[16];
  void *v9;
  char v10;
  char v11;
  void *v12;
  char v13;
  void *__p;
  char v15;
  char v16;
  char v17;
  char v18;
  __int128 *v19;
  __int128 *v20;
  uint64_t v21;

  v0 = sub_20B0A26EC();
  v2 = v1;
  result = operator new(0x20uLL, MEMORY[0x24BEDB6B8]);
  if (result)
  {
    result[2] = v0;
    result[3] = v2;
    *((_DWORD *)result + 7) = 1;
    *result = &off_24C3F50F0;
    result[1] = &unk_24C3F5140;
  }
  else
  {
    v4 = (uint64_t *)sub_20AEE78D4();
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v8[0] = 0;
    v18 = 0;
    sub_20AECD798(v4, &v19, (uint64_t)v8, 0);
    if (v18 && v17)
    {
      if (v16)
      {
        if (v15 < 0)
          operator delete(__p);
        if (v13 < 0)
          operator delete(v12);
      }
      if (v11 && v10 < 0)
        operator delete(v9);
    }
    v5 = v19;
    if (v19)
    {
      v6 = v20;
      v7 = v19;
      if (v20 != v19)
      {
        do
        {
          if (*((char *)v6 - 1) < 0)
            operator delete(*((void **)v6 - 3));
          v6 = (__int128 *)((char *)v6 - 24);
        }
        while (v6 != v5);
        v7 = v19;
      }
      v20 = v5;
      operator delete(v7);
    }
    return 0;
  }
  return result;
}

_QWORD *VZTimestampCreateMachContinuousNanoseconds()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t *v5;
  __int128 *v6;
  __int128 *v7;
  __int128 *v8;
  _BYTE v9[16];
  void *v10;
  char v11;
  char v12;
  void *v13;
  char v14;
  void *__p;
  char v16;
  char v17;
  char v18;
  char v19;
  __int128 *v20;
  __int128 *v21;
  __int128 __dst;
  uint64_t v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  sub_20B0A26E4();
  v1 = v0;
  v3 = v2;
  result = operator new(0x20uLL, MEMORY[0x24BEDB6B8]);
  if (result)
  {
    result[2] = v1;
    result[3] = v3;
    *((_DWORD *)result + 7) = 1;
    *result = &off_24C3F50F0;
    result[1] = &unk_24C3F5140;
  }
  else
  {
    v5 = (uint64_t *)sub_20AEE78D4();
    sub_20AF46D84();
    if (byte_25463A5F7 < 0)
    {
      sub_20AEC60F4(&__dst, (void *)xmmword_25463A5E0, *((unint64_t *)&xmmword_25463A5E0 + 1));
    }
    else
    {
      __dst = xmmword_25463A5E0;
      v23 = unk_25463A5F0;
    }
    sub_20AEC7620(&v20, (uint64_t)&__dst, 1uLL);
    v9[0] = 0;
    v19 = 0;
    sub_20AECD798(v5, &v20, (uint64_t)v9, 0);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0)
          operator delete(__p);
        if (v14 < 0)
          operator delete(v13);
      }
      if (v12 && v11 < 0)
        operator delete(v10);
    }
    v6 = v20;
    if (v20)
    {
      v7 = v21;
      v8 = v20;
      if (v21 != v20)
      {
        do
        {
          if (*((char *)v7 - 1) < 0)
            operator delete(*((void **)v7 - 3));
          v7 = (__int128 *)((char *)v7 - 24);
        }
        while (v7 != v6);
        v8 = v20;
      }
      v21 = v6;
      operator delete(v8);
    }
    if (SHIBYTE(v23) < 0)
      operator delete((void *)__dst);
    return 0;
  }
  return result;
}

void sub_20AF4627C(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

_QWORD *VZTimestampCreateFromMachContinuousTime(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t *v5;
  unsigned __int8 v6;
  __int128 *v7;
  __int128 *v8;
  __int128 *v9;
  _BYTE v10[16];
  void *v11;
  char v12;
  char v13;
  void *v14;
  char v15;
  void *__p;
  char v17;
  char v18;
  char v19;
  char v20;
  __int128 *v21;
  __int128 *v22;
  __int128 __dst;
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v1 = sub_20B0A2790(a1);
  v3 = v2;
  result = operator new(0x20uLL, MEMORY[0x24BEDB6B8]);
  if (result)
  {
    result[2] = v1;
    result[3] = v3;
    *((_DWORD *)result + 7) = 1;
    *result = &off_24C3F50F0;
    result[1] = &unk_24C3F5140;
  }
  else
  {
    v5 = (uint64_t *)sub_20AEE78D4();
    v6 = atomic_load((unsigned __int8 *)&qword_25463A5B0);
    if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_25463A5B0))
    {
      unk_25463A710 = 0x700000000000000;
      xmmword_25463A700 = 0x263436746E6975uLL;
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A700, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463A5B0);
    }
    if (byte_25463A717 < 0)
    {
      sub_20AEC60F4(&__dst, (void *)xmmword_25463A700, *((unint64_t *)&xmmword_25463A700 + 1));
    }
    else
    {
      __dst = xmmword_25463A700;
      v24 = unk_25463A710;
    }
    sub_20AEC7620(&v21, (uint64_t)&__dst, 1uLL);
    v10[0] = 0;
    v20 = 0;
    sub_20AECD798(v5, &v21, (uint64_t)v10, 0);
    if (v20 && v19)
    {
      if (v18)
      {
        if (v17 < 0)
          operator delete(__p);
        if (v15 < 0)
          operator delete(v14);
      }
      if (v13 && v12 < 0)
        operator delete(v11);
    }
    v7 = v21;
    if (v21)
    {
      v8 = v22;
      v9 = v21;
      if (v22 != v21)
      {
        do
        {
          if (*((char *)v8 - 1) < 0)
            operator delete(*((void **)v8 - 3));
          v8 = (__int128 *)((char *)v8 - 24);
        }
        while (v8 != v7);
        v9 = v21;
      }
      v22 = v7;
      operator delete(v9);
    }
    if (SHIBYTE(v24) < 0)
      operator delete((void *)__dst);
    return 0;
  }
  return result;
}

void sub_20AF464C0(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

_BYTE *VZTimestampCreateSteadyNanoseconds(uint64_t a1)
{
  return sub_20AF47908(a1, 4);
}

_BYTE *VZTimestampCreateChronologicalNanoseconds(uint64_t a1)
{
  return sub_20AF47908(a1, 1);
}

uint64_t VZTimestampGetNanosecondsSinceEpoch(uint64_t a1)
{
  if (sub_20AF46524((uint64_t)"VZTimestampGetNanosecondsSinceEpoch", a1))
    return 0;
  else
    return *(_QWORD *)(a1 + 16);
}

BOOL sub_20AF46524(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4;
  unsigned __int8 v5;
  int v7;
  size_t v8;
  unint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  void *v14[2];
  uint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  void *v21[2];
  uint64_t v22;
  uint64_t v23;
  void *v24[2];
  uint64_t v25;
  char v26;
  char v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  void *__p[2];
  uint64_t v36;
  char v37;
  char v38;
  char v39;

  if (a2)
    return a2 == 0;
  v4 = atomic_load((unsigned __int8 *)&qword_25463A5D0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463A5D0))
  {
    sub_20AF47CD4();
    v7 = byte_25463A78F;
    if (byte_25463A78F >= 0)
      v8 = byte_25463A78F;
    else
      v8 = qword_25463A780;
    v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v9 >= 0x17)
    {
      v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17)
        v11 = v9 | 7;
      v12 = v11 + 1;
      v10 = (__int128 *)operator new(v11 + 1);
      *((_QWORD *)&xmmword_25463A760 + 1) = v8 + 1;
      unk_25463A770 = v12 | 0x8000000000000000;
      *(_QWORD *)&xmmword_25463A760 = v10;
    }
    else
    {
      unk_25463A770 = 0;
      xmmword_25463A760 = 0uLL;
      v10 = &xmmword_25463A760;
      byte_25463A777 = v8 + 1;
      if (!v8)
      {
LABEL_53:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A760, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463A5D0);
        goto LABEL_3;
      }
    }
    if (v7 >= 0)
      v13 = &qword_25463A778;
    else
      v13 = (uint64_t *)qword_25463A778;
    memmove(v10, v13, v8);
    goto LABEL_53;
  }
LABEL_3:
  if (byte_25463A777 < 0)
  {
    sub_20AEC60F4(v14, (void *)xmmword_25463A760, *((unint64_t *)&xmmword_25463A760 + 1));
  }
  else
  {
    *(_OWORD *)v14 = xmmword_25463A760;
    v15 = unk_25463A770;
  }
  v16 = 1;
  sub_20AECCECC(a1, (uint64_t)v14, (uint64_t)&v17);
  v28 = v17;
  LOBYTE(v29) = 0;
  v38 = 0;
  if (v27)
  {
    v31 = 0;
    if (v20)
    {
      v29 = v18;
      v30 = v19;
      v19 = 0;
      v18 = 0uLL;
      v31 = 1;
    }
    LOBYTE(v32) = 0;
    v37 = 0;
    if (v26)
    {
      v33 = v22;
      v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      v34 = v23;
      *(_OWORD *)__p = *(_OWORD *)v24;
      v36 = v25;
      v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      v25 = 0;
      v37 = 1;
    }
    v38 = 1;
  }
  v39 = 0;
  v5 = atomic_load((unsigned __int8 *)&qword_254630258);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_254630258))
  {
    __cxa_atexit((void (*)(void *))sub_20AECE2D8, &unk_254630168, &dword_20AEBB000);
    __cxa_guard_release(&qword_254630258);
  }
  sub_20AECB50C((uint64_t)&unk_254630168, &v28);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v33) < 0)
        operator delete((void *)v32);
    }
    if (v31 && SHIBYTE(v30) < 0)
      operator delete((void *)v29);
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0)
        operator delete(v24[0]);
      if (SHIBYTE(v22) < 0)
        operator delete(v21[0]);
    }
    if (v20 && SHIBYTE(v19) < 0)
      operator delete((void *)v18);
  }
  if (v16 && SHIBYTE(v15) < 0)
    operator delete(v14[0]);
  return a2 == 0;
}

void sub_20AF46898(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A5D0);
  _Unwind_Resume(a1);
}

void sub_20AF468B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t VZTimestampGetClockType(uint64_t a1)
{
  if (sub_20AF46524((uint64_t)"VZTimestampGetClockType", a1))
    return 0;
  else
    return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_20AF46918(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;

  v1 = (unsigned int *)(result + 28);
  do
    v2 = __ldaxr(v1);
  while (__stlxr(v2 + 1, v1));
  return result;
}

uint64_t sub_20AF46930(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;
  unsigned int v3;

  v1 = (unsigned int *)(result + 28);
  do
  {
    v2 = __ldaxr(v1);
    v3 = v2 - 1;
  }
  while (__stlxr(v3, v1));
  if (!v3)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 8) + 8))(result + 8);
  return result;
}

uint64_t sub_20AF46958()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A548);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463A548))
    return qword_25463A540;
  qword_25463A540 = sub_20AECB130();
  __cxa_guard_release(&qword_25463A548);
  return qword_25463A540;
}

_QWORD *sub_20AF469B8(uint64_t a1, void *lpsrc)
{
  _QWORD *result;

  result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C3F21C0, (const struct __class_type_info *)&unk_24C3F51A0, 0);
  if (result)
    return (_QWORD *)(*(_QWORD *)(a1 + 16) == result[2]
                   && *(unsigned __int8 *)(a1 + 24) == *((unsigned __int8 *)result + 24));
  return result;
}

CFTypeRef sub_20AF46A14(uint64_t a1)
{
  __int128 *v2;
  uint64_t v3;
  int v4;
  size_t v5;
  void **v6;
  unint64_t v7;
  unint64_t v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  CFTypeRef v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  char v22;
  CFTypeRef cf;
  std::__shared_weak_count *v24;
  void *__dst[2];
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;

  v2 = sub_20AEE78D4();
  v27 = a1;
  v3 = operator new();
  *(_QWORD *)(v3 + 272) = 0;
  *(_OWORD *)(v3 + 240) = 0u;
  *(_OWORD *)(v3 + 256) = 0u;
  *(_OWORD *)(v3 + 208) = 0u;
  *(_OWORD *)(v3 + 224) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_OWORD *)(v3 + 192) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)v3 = 0u;
  sub_20AEC0BD8(v3);
  v28 = (_QWORD *)v3;
  sub_20B430618((_QWORD *)(v3 + 16), (uint64_t *)(a1 + 16));
  v4 = *(_DWORD *)(v3 + 120);
  if ((v4 & 0x10) != 0)
  {
    v7 = *(_QWORD *)(v3 + 112);
    v8 = *(_QWORD *)(v3 + 72);
    if (v7 < v8)
    {
      *(_QWORD *)(v3 + 112) = v8;
      v7 = v8;
    }
    v9 = *(const void **)(v3 + 64);
    v5 = v7 - (_QWORD)v9;
    if (v7 - (unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_29;
  }
  else
  {
    if ((v4 & 8) == 0)
    {
      v5 = 0;
      HIBYTE(v26) = 0;
      v6 = __dst;
      goto LABEL_14;
    }
    v9 = *(const void **)(v3 + 40);
    v5 = *(_QWORD *)(v3 + 56) - (_QWORD)v9;
    if (v5 >= 0x7FFFFFFFFFFFFFF8)
LABEL_29:
      sub_20AEC0138();
  }
  if (v5 >= 0x17)
  {
    v10 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v10 = v5 | 7;
    v11 = v10 + 1;
    v6 = (void **)operator new(v10 + 1);
    __dst[1] = (void *)v5;
    v26 = v11 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_13;
  }
  HIBYTE(v26) = v5;
  v6 = __dst;
  if (v5)
LABEL_13:
    memmove(v6, v9, v5);
LABEL_14:
  *((_BYTE *)v6 + v5) = 0;
  v12 = v28;
  if (v28)
  {
    v13 = MEMORY[0x24BEDB7F0];
    v14 = *MEMORY[0x24BEDB7F0];
    *v28 = *MEMORY[0x24BEDB7F0];
    v15 = *(_QWORD *)(v13 + 72);
    *(_QWORD *)((char *)v12 + *(_QWORD *)(v14 - 24)) = *(_QWORD *)(v13 + 64);
    v12[3] = MEMORY[0x24BEDB848] + 16;
    v12[2] = v15;
    if (*((char *)v12 + 111) < 0)
      operator delete((void *)v12[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v12 + 16);
    MEMORY[0x20BD3583C](v12, 0x10B2C40EED050F3);
  }
  sub_20AED55DC("<", (uint64_t)v2, (uint64_t)" ", &v27, (uint64_t)">", (uint64_t)__dst);
  if (SHIBYTE(v26) < 0)
    operator delete(__dst[0]);
  sub_20B4EE2F0((uint64_t)&__p, (CFStringRef *)&cf);
  v16 = cf;
  if (cf)
    CFRetain(cf);
  v17 = v24;
  if (v24)
  {
    p_shared_owners = (unint64_t *)&v24->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
      if ((v22 & 0x80000000) == 0)
        return v16;
      goto LABEL_27;
    }
  }
  if (v22 < 0)
LABEL_27:
    operator delete(__p);
  return v16;
}

void sub_20AF46CB4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  __int128 *v23;

  sub_20AEC147C((uint64_t)&a15);
  if (a14 < 0)
    operator delete(__p);
  __cxa_begin_catch(a1);
  v23 = sub_20AEE78D4();
  sub_20AEC0D64(&__p, "failed to create description");
  sub_20AECD224((std::string::size_type)v23, (const void **)&__p, 0);
  if (a14 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x20AF46C98);
}

uint64_t sub_20AF46D78(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 28));
}

void sub_20AF46D84()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A550);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463A550))
  {
    sub_20AF46E3C();
    if (byte_25463A60F < 0)
    {
      sub_20AEC60F4(&xmmword_25463A5E0, (void *)qword_25463A5F8, unk_25463A600);
    }
    else
    {
      xmmword_25463A5E0 = *(_OWORD *)&qword_25463A5F8;
      unk_25463A5F0 = unk_25463A608;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A5E0, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463A550);
  }
}

void sub_20AF46E24(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A550);
  _Unwind_Resume(a1);
}

void sub_20AF46E3C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v2;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A558);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463A558))
  {
    sub_20AF47160(__p);
    sub_20AF46F10((char *)__p);
    if (v2 < 0)
      operator delete(__p[0]);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A5F8, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463A558);
  }
}

void sub_20AF46ED0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25463A558);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25463A558);
  _Unwind_Resume(a1);
}

void sub_20AF46F10(char *a1)
{
  unsigned __int8 v2;
  int64x2_t v3;
  int8x16_t v4;
  void **v5;
  void **v6;
  void *v7;
  void *__p;
  void **v9;
  void *v10[2];
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  *(_OWORD *)v10 = *(_OWORD *)"int64";
  v11 = 0x500000000000000;
  v2 = atomic_load((unsigned __int8 *)&qword_25463A560);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463A560))
  {
    sub_20AF4733C();
    if (byte_25463A63F < 0)
    {
      sub_20AEC60F4(&xmmword_25463A610, (void *)qword_25463A628, unk_25463A630);
    }
    else
    {
      xmmword_25463A610 = *(_OWORD *)&qword_25463A628;
      unk_25463A620 = unk_25463A638;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A610, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463A560);
  }
  if (byte_25463A627 < 0)
  {
    sub_20AEC60F4(&v12, (void *)xmmword_25463A610, *((unint64_t *)&xmmword_25463A610 + 1));
  }
  else
  {
    v12 = xmmword_25463A610;
    v13 = unk_25463A620;
  }
  sub_20AEC7620(&__p, (uint64_t)v10, 2uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, (std::string *)&qword_25463A5F8, v3, v4);
  v5 = (void **)__p;
  if (__p)
  {
    v6 = v9;
    v7 = __p;
    if (v9 != __p)
    {
      do
      {
        if (*((char *)v6 - 1) < 0)
          operator delete(*(v6 - 3));
        v6 -= 3;
      }
      while (v6 != v5);
      v7 = __p;
    }
    v9 = v5;
    operator delete(v7);
  }
  if ((SHIBYTE(v13) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v11) & 0x80000000) == 0)
      return;
LABEL_17:
    operator delete(v10[0]);
    return;
  }
  operator delete((void *)v12);
  if (SHIBYTE(v11) < 0)
    goto LABEL_17;
}

void sub_20AF470E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  __cxa_guard_abort(&qword_25463A560);
  if ((a18 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20AF47160(_QWORD *__dst)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25463A598);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463A598))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::chrono::duration<long long, std::ratio<1, 1000000000>>]", qword_25463A6B8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A6B8, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463A598);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25463A5A0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25463A5A0))
  {
    v5 = sub_20AED4780(qword_25463A6B8, "<", 0);
    sub_20AED467C(qword_25463A6B8, 0, v5, qword_25463A6D0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A6D0, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463A5A0);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25463A5A8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463A5A8))
  {
    sub_20B531658((uint64_t)qword_25463A6D0, (uint64_t)&xmmword_25463A6E8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A6E8, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463A5A8);
  }
  if (byte_25463A6FF < 0)
  {
    sub_20AEC60F4(__dst, (void *)xmmword_25463A6E8, *((unint64_t *)&xmmword_25463A6E8 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_25463A6E8;
    __dst[2] = unk_25463A6F8;
  }
}

void sub_20AF472F4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A5A8);
  _Unwind_Resume(a1);
}

void sub_20AF4730C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A5A0);
  _Unwind_Resume(a1);
}

void sub_20AF47324(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A598);
  _Unwind_Resume(a1);
}

void sub_20AF4733C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v2;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A568);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463A568))
  {
    sub_20AF4772C(__p);
    sub_20AF47410((char *)__p);
    if (v2 < 0)
      operator delete(__p[0]);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A628, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463A568);
  }
}

void sub_20AF473D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25463A568);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25463A568);
  _Unwind_Resume(a1);
}

void sub_20AF47410(char *a1)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  int64x2_t v4;
  int8x16_t v5;
  void **v6;
  void **v7;
  void *v8;
  void *__p;
  void **v10;
  void *v11[2];
  char v12;
  void *__dst[2];
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_25463A570);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463A570))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 1L]", v11);
    sub_20B531884((uint64_t)v11, (std::string *)&xmmword_25463A640);
    if (v12 < 0)
      operator delete(v11[0]);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A640, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463A570);
  }
  if (byte_25463A657 < 0)
  {
    sub_20AEC60F4(__dst, (void *)xmmword_25463A640, *((unint64_t *)&xmmword_25463A640 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_25463A640;
    v14 = unk_25463A650;
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25463A578);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25463A578))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 1000000000L]", v11);
    sub_20B531884((uint64_t)v11, (std::string *)&xmmword_25463A658);
    if (v12 < 0)
      operator delete(v11[0]);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A658, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463A578);
  }
  if (byte_25463A66F < 0)
  {
    sub_20AEC60F4(&v15, (void *)xmmword_25463A658, *((unint64_t *)&xmmword_25463A658 + 1));
  }
  else
  {
    v15 = xmmword_25463A658;
    v16 = unk_25463A668;
  }
  sub_20AEC7620(&__p, (uint64_t)__dst, 2uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, (std::string *)&qword_25463A628, v4, v5);
  v6 = (void **)__p;
  if (__p)
  {
    v7 = v10;
    v8 = __p;
    if (v10 != __p)
    {
      do
      {
        if (*((char *)v7 - 1) < 0)
          operator delete(*(v7 - 3));
        v7 -= 3;
      }
      while (v7 != v6);
      v8 = __p;
    }
    v10 = v6;
    operator delete(v8);
  }
  if ((SHIBYTE(v16) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v14) & 0x80000000) == 0)
      return;
LABEL_21:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v15);
  if (SHIBYTE(v14) < 0)
    goto LABEL_21;
}

void sub_20AF47678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a17 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25463A578);
  if (a23 < 0)
    operator delete(a18);
  _Unwind_Resume(a1);
}

void sub_20AF4772C(_QWORD *__dst)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25463A580);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463A580))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::ratio<1, 1000000000>]", qword_25463A670);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A670, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463A580);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25463A588);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25463A588))
  {
    v5 = sub_20AED4780(qword_25463A670, "<", 0);
    sub_20AED467C(qword_25463A670, 0, v5, qword_25463A688);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A688, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463A588);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25463A590);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463A590))
  {
    sub_20B531658((uint64_t)qword_25463A688, (uint64_t)&xmmword_25463A6A0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A6A0, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463A590);
  }
  if (byte_25463A6B7 < 0)
  {
    sub_20AEC60F4(__dst, (void *)xmmword_25463A6A0, *((unint64_t *)&xmmword_25463A6A0 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_25463A6A0;
    __dst[2] = unk_25463A6B0;
  }
}

void sub_20AF478C0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A590);
  _Unwind_Resume(a1);
}

void sub_20AF478D8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A588);
  _Unwind_Resume(a1);
}

void sub_20AF478F0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A580);
  _Unwind_Resume(a1);
}

_BYTE *sub_20AF47908(uint64_t a1, char a2)
{
  _BYTE *result;
  uint64_t *v5;
  unsigned __int8 v6;
  __int128 *v7;
  __int128 *v8;
  __int128 *v9;
  _BYTE v10[16];
  void *v11;
  char v12;
  char v13;
  void *v14;
  char v15;
  void *__p;
  char v17;
  char v18;
  char v19;
  char v20;
  __int128 *v21;
  __int128 *v22;
  __int128 __dst;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  result = operator new(0x20uLL, MEMORY[0x24BEDB6B8]);
  if (!result)
  {
    v5 = (uint64_t *)sub_20AEE78D4();
    sub_20AF46D84();
    if (byte_25463A5F7 < 0)
    {
      sub_20AEC60F4(&__dst, (void *)xmmword_25463A5E0, *((unint64_t *)&xmmword_25463A5E0 + 1));
    }
    else
    {
      __dst = xmmword_25463A5E0;
      v24 = unk_25463A5F0;
    }
    v6 = atomic_load((unsigned __int8 *)&qword_25463A5B8);
    if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_25463A5B8))
    {
      sub_20AF47BD4();
      if (byte_25463A75F < 0)
      {
        sub_20AEC60F4(&xmmword_25463A718, (void *)xmmword_25463A748, *((unint64_t *)&xmmword_25463A748 + 1));
      }
      else
      {
        xmmword_25463A718 = xmmword_25463A748;
        unk_25463A728 = unk_25463A758;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A718, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463A5B8);
    }
    if (byte_25463A72F < 0)
    {
      sub_20AEC60F4(&v25, (void *)xmmword_25463A718, *((unint64_t *)&xmmword_25463A718 + 1));
    }
    else
    {
      v25 = xmmword_25463A718;
      v26 = unk_25463A728;
    }
    sub_20AEC7620(&v21, (uint64_t)&__dst, 2uLL);
    v10[0] = 0;
    v20 = 0;
    sub_20AECD798(v5, &v21, (uint64_t)v10, 0);
    if (v20 && v19)
    {
      if (v18)
      {
        if (v17 < 0)
          operator delete(__p);
        if (v15 < 0)
          operator delete(v14);
      }
      if (v13 && v12 < 0)
        operator delete(v11);
    }
    v7 = v21;
    if (v21)
    {
      v8 = v22;
      v9 = v21;
      if (v22 != v21)
      {
        do
        {
          if (*((char *)v8 - 1) < 0)
            operator delete(*((void **)v8 - 3));
          v8 = (__int128 *)((char *)v8 - 24);
        }
        while (v8 != v7);
        v9 = v21;
      }
      v22 = v7;
      operator delete(v9);
    }
    if (SHIBYTE(v26) < 0)
    {
      operator delete((void *)v25);
      if ((SHIBYTE(v24) & 0x80000000) == 0)
        return 0;
    }
    else if ((SHIBYTE(v24) & 0x80000000) == 0)
    {
      return 0;
    }
    operator delete((void *)__dst);
    return 0;
  }
  result[24] = a2;
  *((_DWORD *)result + 7) = 1;
  *(_QWORD *)result = &off_24C3F50F0;
  *((_QWORD *)result + 1) = &unk_24C3F5140;
  *((_QWORD *)result + 2) = a1;
  return result;
}

void sub_20AF47BA4(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_25463A5B8);
    sub_20AEC01C0(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF47BD4()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A5C0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463A5C0))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::time::ClockType]", qword_25463A730);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A730, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463A5C0);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25463A5C8);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_25463A5C8))
    {
      sub_20B531658((uint64_t)qword_25463A730, (uint64_t)&xmmword_25463A748);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A748, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463A5C8);
    }
  }
}

void sub_20AF47CA4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A5C8);
  _Unwind_Resume(a1);
}

void sub_20AF47CBC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A5C0);
  _Unwind_Resume(a1);
}

void sub_20AF47CD4()
{
  unsigned __int8 v0;
  __int128 *v1;
  const void **v2;
  int v3;
  size_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  const void *v10;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A5D8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463A5D8))
  {
    v1 = sub_20AEE78D4();
    v2 = (const void **)v1;
    v3 = *((char *)v1 + 23);
    if (v3 >= 0)
      v4 = *((unsigned __int8 *)v1 + 23);
    else
      v4 = *((_QWORD *)v1 + 1);
    v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v5 >= 0x17)
    {
      v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17)
        v7 = v5 | 7;
      v8 = v7 + 1;
      v9 = (char *)operator new(v7 + 1);
      qword_25463A780 = v4 + 6;
      unk_25463A788 = v8 | 0x8000000000000000;
      qword_25463A778 = (uint64_t)v9;
      *(_DWORD *)v9 = 1936617315;
      *((_WORD *)v9 + 2) = 8308;
      v6 = v9 + 6;
    }
    else
    {
      qword_25463A780 = 0;
      unk_25463A788 = 0;
      qword_25463A778 = 0x2074736E6F63;
      byte_25463A78F = v4 + 6;
      v6 = (char *)&qword_25463A778 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A778, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463A5D8);
        return;
      }
    }
    if (v3 >= 0)
      v10 = v2;
    else
      v10 = *v2;
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
}

void sub_20AF47E44(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A5D8);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF47E5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  if (*(_BYTE *)(a1 + 80) && *(char *)(a1 + 79) < 0)
  {
    operator delete(*(void **)(a1 + 56));
    if (!*(_BYTE *)(a1 + 48))
      goto LABEL_9;
  }
  else if (!*(_BYTE *)(a1 + 48))
  {
    goto LABEL_9;
  }
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
LABEL_9:
  v3 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;
  if (v3)
    MEMORY[0x20BD3583C](v3, 0x1000C4072FAA15ELL);
  return a1;
}

uint64_t sub_20AF47EF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  if (*(_BYTE *)(a1 + 72) && *(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    if (!*(_BYTE *)(a1 + 40))
      goto LABEL_9;
  }
  else if (!*(_BYTE *)(a1 + 40))
  {
    goto LABEL_9;
  }
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
LABEL_9:
  result = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (result)
    return MEMORY[0x20BD3583C](result, 0x1000C4072FAA15ELL);
  return result;
}

void sub_20AF47F80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  if (*(_BYTE *)(a1 + 80) && *(char *)(a1 + 79) < 0)
  {
    operator delete(*(void **)(a1 + 56));
    if (!*(_BYTE *)(a1 + 48))
      goto LABEL_9;
  }
  else if (!*(_BYTE *)(a1 + 48))
  {
    goto LABEL_9;
  }
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
LABEL_9:
  v3 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;
  if (v3)
    MEMORY[0x20BD3583C](v3, 0x1000C4072FAA15ELL);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF48024(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 24))(v2);
  if (*(_BYTE *)(a1 + 72) && *(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    if (!*(_BYTE *)(a1 + 40))
      goto LABEL_9;
  }
  else if (!*(_BYTE *)(a1 + 40))
  {
    goto LABEL_9;
  }
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
LABEL_9:
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v3)
    MEMORY[0x20BD3583C](v3, 0x1000C4072FAA15ELL);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t VZTransform3GetTypeID()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A7B0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463A7B0))
    return qword_25463A7A8;
  qword_25463A7A8 = sub_20AECB130();
  __cxa_guard_release(&qword_25463A7B0);
  return qword_25463A7A8;
}

_QWORD *VZDataCreateWithTransform3(uint64_t a1, __int128 *a2, CFErrorRef *a3)
{
  _QWORD *v5;
  int v6;
  __int128 *v7;
  _QWORD *v8;
  __int128 v10;
  void *v11;
  char v12;
  char v13;
  void *v14;
  char v15;
  void *v16;
  char v17;
  char v18;
  char v19;
  char v20;
  CFErrorRef **v21;
  CFErrorRef *v22;
  char v23[208];
  void *v24;
  char v25;
  char v26;
  void *v27;
  char v28;
  char v29;
  void *v30;
  char v31;
  char v32;
  char v33;
  char v34;
  __int128 v35[13];
  void *v36;
  char v37;
  char v38;
  void *v39;
  char v40;
  char v41;
  void *__p;
  char v43;
  char v44;
  char v45;
  char v46;
  __int128 v47;
  __int128 v48;
  char v49;
  char v50;
  void *v51;
  char v52;
  void *v53;
  char v54;
  char v55;
  char v56;
  unsigned __int8 v57;
  uint64_t v58;

  v5 = (_QWORD *)a1;
  v58 = *MEMORY[0x24BDAC8D0];
  if (sub_20AF4869C((uint64_t)"VZDataCreateWithTransform3", a1, a3))
    return 0;
  sub_20AED18DC(a2, v23);
  v21 = &v22;
  v22 = a3;
  sub_20AED4D3C(v35, (uint64_t)v23);
  sub_20B0A2C80(v5 + 2, v35, (uint64_t)&v47);
  if (v46)
  {
    if (v45)
    {
      if (v44 && v43 < 0)
        operator delete(__p);
      if (v41 && v40 < 0)
        operator delete(v39);
      if (v38 && v37 < 0)
        operator delete(v36);
    }
    sub_20AED30E0((uint64_t)v35);
  }
  v6 = v57;
  if (!v57)
  {
    v10 = v47;
    sub_20AECEBD0(&v11, &v48);
    v20 = 1;
    sub_20AF4A354(&v21, (uint64_t)&v10);
    if (!v20 || !v19)
      goto LABEL_39;
    if (v18)
    {
      if (v17 < 0)
        operator delete(v16);
      if (v15 < 0)
        operator delete(v14);
    }
    if (!v13 || (v12 & 0x80000000) == 0)
      goto LABEL_39;
    goto LABEL_37;
  }
  v7 = (__int128 *)sub_20AED4AC0((uint64_t)&v47);
  v8 = operator new(0x240uLL, MEMORY[0x24BEDB6B8]);
  if (!v8)
  {
    LOBYTE(v10) = 0;
    v20 = 0;
    sub_20AF4A354(&v21, (uint64_t)&v10);
    if (!v20 || !v19)
      goto LABEL_38;
    if (v18)
    {
      if (v17 < 0)
        operator delete(v16);
      if (v15 < 0)
        operator delete(v14);
    }
    v5 = 0;
    if (!v13 || (v12 & 0x80000000) == 0)
      goto LABEL_39;
LABEL_37:
    operator delete(v11);
LABEL_38:
    v5 = 0;
    goto LABEL_39;
  }
  v5 = v8;
  *v8 = off_24C3F2180;
  sub_20AED5300((uint64_t)(v8 + 2), v7);
  *v5 = &off_24C3F2BA0;
  v5[2] = &unk_24C3F2BF0;
  *((_OWORD *)v5 + 35) = 0u;
LABEL_39:
  if (v57)
  {
    sub_20AED5474((uint64_t)&v47);
  }
  else if (v56)
  {
    if (v55)
    {
      if (v54 < 0)
        operator delete(v53);
      if (v52 < 0)
        operator delete(v51);
    }
    if (v50 && v49 < 0)
      operator delete((void *)v48);
  }
  if (!v6)
    v5 = 0;
  if (v34)
  {
    if (v33)
    {
      if (v32 && v31 < 0)
        operator delete(v30);
      if (v29 && v28 < 0)
        operator delete(v27);
      if (v26 && v25 < 0)
        operator delete(v24);
    }
    sub_20AED30E0((uint64_t)v23);
  }
  return v5;
}

void sub_20AF484A0(_Unwind_Exception *a1, int a2)
{
  if (a2)
    JUMPOUT(0x20AF484A8);
  _Unwind_Resume(a1);
}

void sub_20AF484B8(_Unwind_Exception *a1, int a2)
{
  const std::logic_error *exception_ptr;
  void *v5;
  std::string *p_what;
  std::string *v7;
  std::logic_error v8;
  char v9;
  char v10;
  __int128 v11;
  __int128 v12[6];
  std::__fs::filesystem::filesystem_error v13[3];
  CFErrorRef **v14[102];
  __int128 v15;
  _BYTE v16[104];
  char v17;

  if (a2)
  {
    sub_20AED1998((uint64_t)&STACK[0x2F0]);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
      std::logic_error::logic_error(&v8, exception_ptr);
      v8.__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
      __cxa_begin_catch(a1);
      v7 = (std::string *)std::logic_error::what(&v8);
      sub_20AED4C84(v13, (const char **)&v7);
      sub_20B099E24((__int128 *)v13, (uint64_t)&v11);
      v15 = v11;
      sub_20AECEBD0(v16, v12);
      v17 = 1;
      sub_20AF4A354(v14, (uint64_t)&v15);
      sub_20AECDEE0((uint64_t)&v15);
      sub_20AECCE40((uint64_t)&v11);
      if (LOBYTE(v13[0].__ec_.__cat_))
      {
        if (*((char *)&v13[0].__ec_.__val_ + 7) < 0)
          operator delete(v13[0].__vftable);
      }
      MEMORY[0x20BD35020](&v8);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      v5 = __cxa_get_exception_ptr(a1);
      sub_20AED4C1C(&v13[0], (uint64_t)v5);
      __cxa_begin_catch(a1);
      p_what = &v13[0].__storage_.__ptr_->__what_;
      if (SHIBYTE(v13[0].__storage_.__ptr_->__what_.__r_.__value_.__r.__words[2]) < 0)
        p_what = (std::string *)p_what->__r_.__value_.__r.__words[0];
      v7 = p_what;
      sub_20AED4C84(&v8, (const char **)&v7);
      sub_20B09A738((__int128 *)&v8, (uint64_t)&v11);
      v15 = v11;
      sub_20AECEBD0(v16, v12);
      v17 = 1;
      sub_20AF4A354(v14, (uint64_t)&v15);
      sub_20AECDEE0((uint64_t)&v15);
      sub_20AECCE40((uint64_t)&v11);
      if (v10 && v9 < 0)
        operator delete(v8.__vftable);
      std::__fs::filesystem::filesystem_error::~filesystem_error(v13);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(a1);
      LOBYTE(v15) = 0;
      v17 = 0;
      sub_20AF4A354(v14, (uint64_t)&v15);
      sub_20AECDEE0((uint64_t)&v15);
      __cxa_end_catch();
    }
    JUMPOUT(0x20AF483A0);
  }
  _Unwind_Resume(a1);
}

void sub_20AF484D0(_Unwind_Exception *a1, int a2)
{
  if (a2)
    JUMPOUT(0x20AF484DCLL);
  _Unwind_Resume(a1);
}

void sub_20AF48684(void *a1, int a2)
{
  if (!a2)
    JUMPOUT(0x20AF4868CLL);
  sub_20AEC01C0(a1);
}

BOOL sub_20AF4869C(uint64_t a1, uint64_t a2, CFErrorRef *a3)
{
  unsigned __int8 v6;
  int v8;
  size_t v9;
  unint64_t v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  void *v15[2];
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  void *v22[2];
  uint64_t v23;
  uint64_t v24;
  void *v25[2];
  uint64_t v26;
  char v27;
  char v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  void *__p[2];
  uint64_t v37;
  char v38;
  char v39;
  char v40;

  if (a2)
    return a2 == 0;
  v6 = atomic_load((unsigned __int8 *)&qword_25463A7B8);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_25463A7B8))
  {
    sub_20AF4A01C();
    v8 = byte_25463A867;
    if (byte_25463A867 >= 0)
      v9 = byte_25463A867;
    else
      v9 = qword_25463A858;
    v10 = v9 + 1;
    if (v9 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v10 >= 0x17)
    {
      v12 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v10 | 7) != 0x17)
        v12 = v10 | 7;
      v13 = v12 + 1;
      v11 = (__int128 *)operator new(v12 + 1);
      *((_QWORD *)&xmmword_25463A838 + 1) = v9 + 1;
      unk_25463A848 = v13 | 0x8000000000000000;
      *(_QWORD *)&xmmword_25463A838 = v11;
    }
    else
    {
      unk_25463A848 = 0;
      xmmword_25463A838 = 0uLL;
      v11 = &xmmword_25463A838;
      byte_25463A84F = v9 + 1;
      if (!v9)
      {
LABEL_50:
        *(_WORD *)((char *)v11 + v9) = 42;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A838, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463A7B8);
        goto LABEL_3;
      }
    }
    if (v8 >= 0)
      v14 = &qword_25463A850;
    else
      v14 = (uint64_t *)qword_25463A850;
    memmove(v11, v14, v9);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_25463A84F < 0)
  {
    sub_20AEC60F4(v15, (void *)xmmword_25463A838, *((unint64_t *)&xmmword_25463A838 + 1));
  }
  else
  {
    *(_OWORD *)v15 = xmmword_25463A838;
    v16 = unk_25463A848;
  }
  v17 = 1;
  sub_20AECCECC(a1, (uint64_t)v15, (uint64_t)&v18);
  v29 = v18;
  LOBYTE(v30) = 0;
  v39 = 0;
  if (v28)
  {
    v32 = 0;
    if (v21)
    {
      v30 = v19;
      v31 = v20;
      v20 = 0;
      v19 = 0uLL;
      v32 = 1;
    }
    LOBYTE(v33) = 0;
    v38 = 0;
    if (v27)
    {
      v34 = v23;
      v33 = *(_OWORD *)v22;
      v22[0] = 0;
      v22[1] = 0;
      v35 = v24;
      *(_OWORD *)__p = *(_OWORD *)v25;
      v37 = v26;
      v23 = 0;
      v25[0] = 0;
      v25[1] = 0;
      v26 = 0;
      v38 = 1;
    }
    v39 = 1;
  }
  v40 = 0;
  sub_20AECB410(&v29, a3);
  if (!v40 && v39)
  {
    if (v38)
    {
      if (SHIBYTE(v37) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v34) < 0)
        operator delete((void *)v33);
    }
    if (v32 && SHIBYTE(v31) < 0)
      operator delete((void *)v30);
  }
  if (v28)
  {
    if (v27)
    {
      if (SHIBYTE(v26) < 0)
        operator delete(v25[0]);
      if (SHIBYTE(v23) < 0)
        operator delete(v22[0]);
    }
    if (v21 && SHIBYTE(v20) < 0)
      operator delete((void *)v19);
  }
  if (v17 && SHIBYTE(v16) < 0)
    operator delete(v15[0]);
  return a2 == 0;
}

void sub_20AF489C4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A7B8);
  _Unwind_Resume(a1);
}

void sub_20AF489DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_20AECD704((uint64_t)&a32);
  sub_20AECCE40((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

char *VZDataGetTransform3(uint64_t a1, CFErrorRef *a2)
{
  char *v4;
  char *v5;
  uint64_t v6;
  __int128 v8;
  void *v9;
  char v10;
  char v11;
  void *v12;
  char v13;
  void *__p;
  char v15;
  char v16;
  char v17;
  char v18;
  _BYTE v19[24];
  uint64_t v20;
  char v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  char v25;
  CFErrorRef **v26;
  CFErrorRef *v27;

  if (sub_20AED21B4((uint64_t)"VZDataGetTransform3", a1, a2))
    return 0;
  v4 = *(char **)(a1 + 568);
  if (!v4)
  {
    v26 = &v27;
    v27 = a2;
    sub_20B0A3264(a1 + 32, (uint64_t)v19);
    if (v25)
    {
      v5 = (char *)operator new(0x68uLL, MEMORY[0x24BEDB6B8]);
      v4 = v5;
      if (v5)
      {
        v6 = *(_QWORD *)v19;
        *(_QWORD *)v19 = 0;
        v5[24] = 0;
        *((_QWORD *)v5 + 2) = v6;
        v5[48] = 0;
        if (v21)
        {
          *(_OWORD *)(v5 + 24) = *(_OWORD *)&v19[8];
          *((_QWORD *)v5 + 5) = v20;
          *(_QWORD *)&v19[16] = 0;
          v20 = 0;
          *(_QWORD *)&v19[8] = 0;
          v5[48] = 1;
        }
        v5[56] = 0;
        v5[80] = 0;
        if (v24)
        {
          *(_OWORD *)(v5 + 56) = v22;
          *((_QWORD *)v5 + 9) = v23;
          v23 = 0;
          v22 = 0uLL;
          v5[80] = 1;
        }
        *((_DWORD *)v5 + 22) = 1;
        *(_QWORD *)v5 = off_24C3F5200;
        *((_QWORD *)v5 + 1) = &unk_24C3F5250;
        *((_QWORD *)v5 + 12) = 0;
      }
      else
      {
        LOBYTE(v8) = 0;
        v18 = 0;
        sub_20AF4A6EC(&v26, (uint64_t)&v8);
        if (v18 && v17)
        {
          if (v16)
          {
            if (v15 < 0)
              operator delete(__p);
            if (v13 < 0)
              operator delete(v12);
          }
          if (v11 && v10 < 0)
            operator delete(v9);
        }
      }
      sub_20AF4A8A4((uint64_t *)v19);
    }
    else
    {
      v8 = *(_OWORD *)v19;
      sub_20AECEBD0(&v9, (__int128 *)&v19[16]);
      v18 = 1;
      sub_20AF4A6EC(&v26, (uint64_t)&v8);
      if (v18 && v17)
      {
        if (v16)
        {
          if (v15 < 0)
            operator delete(__p);
          if (v13 < 0)
            operator delete(v12);
        }
        if (v11 && v10 < 0)
          operator delete(v9);
      }
      sub_20AF4A8A4((uint64_t *)v19);
      v4 = 0;
    }
    *(_QWORD *)(a1 + 568) = v4;
  }
  return v4;
}

void sub_20AF48C48(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, __int128 a13, __int128 a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,void **__dst,size_t __dst_8,__int128 a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,char a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,uint64_t a56,void *__p,uint64_t a58,int a59,__int16 a60,char a61,char a62,char a63)
{
  __int16 a65;
  __int16 a67;
  __int128 a68;
  uint64_t v68;
  const std::logic_error *exception_ptr;
  const char *v72;
  size_t v73;
  size_t v74;
  void **p_dst;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t *v79;
  unint64_t v80;
  const char *v81;
  size_t v82;
  const char *v83;
  std::logic_error_vtbl *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  if ((_BYTE)a67 && (_BYTE)a65)
  {
    if (a63)
    {
      if (a62 < 0)
        operator delete(__p);
      if (a55 < 0)
        operator delete(a50);
    }
    if (a49 && a48 < 0)
      operator delete(a43);
  }
  sub_20AF4A8A4((uint64_t *)(v68 - 192));
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_begin_catch(a1);
    v72 = std::logic_error::what(&a10);
    v73 = strlen(v72);
    if (v73 <= 0x7FFFFFFFFFFFFFF7)
    {
      v74 = v73;
      if (v73 >= 0x17)
      {
        v85 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v73 | 7) != 0x17)
          v85 = v73 | 7;
        v86 = v85 + 1;
        p_dst = (void **)operator new(v85 + 1);
        __dst_8 = v74;
        *(_QWORD *)&a38 = v86 | 0x8000000000000000;
        __dst = p_dst;
      }
      else
      {
        BYTE7(a38) = v73;
        p_dst = (void **)&__dst;
        if (!v73)
        {
LABEL_41:
          *((_BYTE *)p_dst + v74) = 0;
          BYTE8(a38) = 1;
          sub_20B099E24((__int128 *)&__dst, (uint64_t)&a13);
          a68 = a13;
          sub_20AECEBD0((_BYTE *)(v68 - 176), &a14);
          *(_BYTE *)(v68 - 72) = 1;
          sub_20AF4A6EC((CFErrorRef ***)(v68 - 64), v68 - 192);
          if (*(_BYTE *)(v68 - 72) && *(_BYTE *)(v68 - 80))
          {
            if (*(_BYTE *)(v68 - 88))
            {
              if (*(char *)(v68 - 89) < 0)
                operator delete(*(void **)(v68 - 112));
              if (*(char *)(v68 - 121) < 0)
                operator delete(*(void **)(v68 - 144));
            }
            if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
              operator delete(*(void **)(v68 - 176));
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0)
                operator delete(a27);
              if (a25 < 0)
                operator delete(a20);
            }
            if (a19 && a18 < 0)
              operator delete((void *)a14);
          }
          if (BYTE8(a38))
          {
            if (SBYTE7(a38) < 0)
              operator delete(__dst);
          }
          MEMORY[0x20BD35020](&a10);
          __cxa_end_catch();
          goto LABEL_92;
        }
      }
      memmove(p_dst, v72, v74);
      goto LABEL_41;
    }
LABEL_91:
    sub_20AEC0138();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(_BYTE *)(v68 - 192) = 0;
    *(_BYTE *)(v68 - 72) = 0;
    sub_20AF4A6EC((CFErrorRef ***)(v68 - 64), v68 - 192);
    if (*(_BYTE *)(v68 - 72) && *(_BYTE *)(v68 - 80))
    {
      if (*(_BYTE *)(v68 - 88))
      {
        if (*(char *)(v68 - 89) < 0)
          operator delete(*(void **)(v68 - 112));
        if (*(char *)(v68 - 121) < 0)
          operator delete(*(void **)(v68 - 144));
      }
      if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
        operator delete(*(void **)(v68 - 176));
    }
    __cxa_end_catch();
LABEL_92:
    JUMPOUT(0x20AF48BBCLL);
  }
  v76 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error((std::runtime_error *)&__dst, (const std::runtime_error *)v76);
  a38 = *((_OWORD *)v76 + 1);
  v78 = *((_QWORD *)v76 + 4);
  v77 = *((_QWORD *)v76 + 5);
  __dst = (void **)(MEMORY[0x24BEDB878] + 16);
  a39 = v78;
  a40 = v77;
  if (v77)
  {
    v79 = (unint64_t *)(v77 + 8);
    do
      v80 = __ldxr(v79);
    while (__stxr(v80 + 1, v79));
  }
  __cxa_begin_catch(a1);
  v81 = (const char *)(a39 + 48);
  if (*(char *)(a39 + 71) < 0)
    v81 = *(const char **)v81;
  v82 = strlen(v81);
  if (v82 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_91;
  v83 = (const char *)v82;
  if (v82 >= 0x17)
  {
    v87 = (v82 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v82 | 7) != 0x17)
      v87 = v82 | 7;
    v88 = v87 + 1;
    v84 = (std::logic_error_vtbl *)operator new(v87 + 1);
    a10.__imp_.__imp_ = v83;
    a11 = v88 | 0x8000000000000000;
    a10.__vftable = v84;
  }
  else
  {
    HIBYTE(a11) = v82;
    v84 = (std::logic_error_vtbl *)&a10;
    if (!v82)
    {
LABEL_68:
      v83[(_QWORD)v84] = 0;
      a12 = 1;
      sub_20B09A738((__int128 *)&a10, (uint64_t)&a13);
      a68 = a13;
      sub_20AECEBD0((_BYTE *)(v68 - 176), &a14);
      *(_BYTE *)(v68 - 72) = 1;
      sub_20AF4A6EC((CFErrorRef ***)(v68 - 64), v68 - 192);
      if (*(_BYTE *)(v68 - 72) && *(_BYTE *)(v68 - 80))
      {
        if (*(_BYTE *)(v68 - 88))
        {
          if (*(char *)(v68 - 89) < 0)
            operator delete(*(void **)(v68 - 112));
          if (*(char *)(v68 - 121) < 0)
            operator delete(*(void **)(v68 - 144));
        }
        if (*(_BYTE *)(v68 - 152) && *(char *)(v68 - 153) < 0)
          operator delete(*(void **)(v68 - 176));
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0)
            operator delete(a27);
          if (a25 < 0)
            operator delete(a20);
        }
        if (a19 && a18 < 0)
          operator delete((void *)a14);
      }
      if (a12 && SHIBYTE(a11) < 0)
        operator delete(a10.__vftable);
      std::__fs::filesystem::filesystem_error::~filesystem_error((std::__fs::filesystem::filesystem_error *)&__dst);
      __cxa_end_catch();
      goto LABEL_92;
    }
  }
  memmove(v84, v81, (size_t)v83);
  goto LABEL_68;
}

_QWORD *VZTransform3Create(uint64_t a1, char *a2, char *a3)
{
  _QWORD *v6;
  _QWORD *v7;
  unsigned __int8 v9;
  uint64_t *v10;
  __int128 v11;
  uint64_t *v12;
  __int128 v13;
  void **v14;
  void **v15;
  void *v16;
  uint64_t *v17;
  const void **v18;
  int v19;
  size_t v20;
  unint64_t v21;
  __int128 *v22;
  uint64_t v23;
  uint64_t v24;
  const void *v25;
  char v26[16];
  void *v27;
  char v28;
  char v29;
  void *v30;
  char v31;
  void *__p;
  char v33;
  char v34;
  char v35;
  char v36;
  void *v37;
  void **v38;
  __int128 __dst;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v6 = 0;
  if (!sub_20AF30E88((uint64_t)"VZTransform3Create", a1, 0))
  {
    v7 = operator new(0x68uLL, MEMORY[0x24BEDB6B8]);
    if (v7)
    {
      v6 = v7;
      *v7 = off_24C3F2180;
      sub_20B0A29D0((uint64_t)(v7 + 2), (uint64_t *)(a1 + 16), a2, a3);
      *((_DWORD *)v6 + 22) = 1;
      *v6 = off_24C3F5200;
      v6[1] = &unk_24C3F5250;
      v6[12] = 0;
      return v6;
    }
    sub_20AF4A19C();
    v9 = atomic_load((unsigned __int8 *)&qword_25463A7E8);
    if ((v9 & 1) != 0 || !__cxa_guard_acquire(&qword_25463A7E8))
    {
LABEL_6:
      if (byte_25463A8DF < 0)
      {
        sub_20AEC60F4(&__dst, (void *)xmmword_25463A8C8, *((unint64_t *)&xmmword_25463A8C8 + 1));
      }
      else
      {
        __dst = xmmword_25463A8C8;
        v40 = unk_25463A8D8;
      }
      v10 = sub_20AEE888C();
      if (*((char *)v10 + 23) < 0)
      {
        sub_20AEC60F4(&v41, (void *)*v10, v10[1]);
      }
      else
      {
        v11 = *(_OWORD *)v10;
        v42 = v10[2];
        v41 = v11;
      }
      v12 = sub_20AEE888C();
      if (*((char *)v12 + 23) < 0)
      {
        sub_20AEC60F4(&v43, (void *)*v12, v12[1]);
      }
      else
      {
        v13 = *(_OWORD *)v12;
        v44 = v12[2];
        v43 = v13;
      }
      sub_20AEC7620(&v37, (uint64_t)&__dst, 3uLL);
      v26[0] = 0;
      v36 = 0;
      sub_20AECD798((uint64_t *)&xmmword_25463A868, (__int128 **)&v37, (uint64_t)v26, 0);
      if (v36 && v35)
      {
        if (v34)
        {
          if (v33 < 0)
            operator delete(__p);
          if (v31 < 0)
            operator delete(v30);
        }
        if (v29 && v28 < 0)
          operator delete(v27);
      }
      v14 = (void **)v37;
      if (v37)
      {
        v15 = v38;
        v16 = v37;
        if (v38 != v37)
        {
          do
          {
            if (*((char *)v15 - 1) < 0)
              operator delete(*(v15 - 3));
            v15 -= 3;
          }
          while (v15 != v14);
          v16 = v37;
        }
        v38 = v14;
        operator delete(v16);
      }
      if (SHIBYTE(v44) < 0)
      {
        operator delete((void *)v43);
        if ((SHIBYTE(v42) & 0x80000000) == 0)
        {
LABEL_35:
          if ((SHIBYTE(v40) & 0x80000000) == 0)
            return 0;
LABEL_39:
          operator delete((void *)__dst);
          return 0;
        }
      }
      else if ((SHIBYTE(v42) & 0x80000000) == 0)
      {
        goto LABEL_35;
      }
      operator delete((void *)v41);
      if ((SHIBYTE(v40) & 0x80000000) == 0)
        return 0;
      goto LABEL_39;
    }
    v17 = sub_20AF345BC();
    v18 = (const void **)v17;
    v19 = *((char *)v17 + 23);
    if (v19 >= 0)
      v20 = *((unsigned __int8 *)v17 + 23);
    else
      v20 = v17[1];
    v21 = v20 + 1;
    if (v20 + 1 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v21 >= 0x17)
    {
      v23 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v21 | 7) != 0x17)
        v23 = v21 | 7;
      v24 = v23 + 1;
      v22 = (__int128 *)operator new(v23 + 1);
      *((_QWORD *)&xmmword_25463A8C8 + 1) = v20 + 1;
      unk_25463A8D8 = v24 | 0x8000000000000000;
      *(_QWORD *)&xmmword_25463A8C8 = v22;
    }
    else
    {
      v22 = &xmmword_25463A8C8;
      unk_25463A8D8 = 0;
      xmmword_25463A8C8 = 0uLL;
      byte_25463A8DF = v20 + 1;
      if (!v20)
      {
LABEL_55:
        *(_WORD *)((char *)v22 + v20) = 38;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A8C8, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463A7E8);
        goto LABEL_6;
      }
    }
    if (v19 >= 0)
      v25 = v18;
    else
      v25 = *v18;
    memmove(v22, v25, v20);
    goto LABEL_55;
  }
  return v6;
}

void sub_20AF494D8(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_25463A7E8);
    sub_20AEC01C0(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF494F0(uint64_t a1, int a2)
{
  if (!a2)
    JUMPOUT(0x20AF494FCLL);
  sub_20AEC01C0(a1);
}

uint64_t VZTransform3GetValueType(uint64_t a1)
{
  int v3;

  if (sub_20AF4869C((uint64_t)"VZTransform3GetValueType", a1, 0))
    return 255;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 16) + 136);
  if (v3 == 2 || v3 == 5)
    return 12;
  else
    return 11;
}

uint64_t VZTransform3GetSE3(uint64_t a1)
{
  BOOL v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unsigned __int8 v13;
  void **v14;
  void **v15;
  void *v16;
  _BYTE v17[16];
  void *v18;
  char v19;
  char v20;
  void *v21;
  char v22;
  void *__p;
  char v24;
  char v25;
  char v26;
  char v27;
  void *v28;
  void **v29;
  char v30;
  __int128 __dst;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v2 = sub_20AF4869C((uint64_t)"VZTransform3GetSE3", a1, 0);
  result = 0;
  if (!v2)
  {
    result = *(_QWORD *)(a1 + 96);
    if (!result)
    {
      v4 = *(_QWORD *)(a1 + 16);
      v5 = operator new();
      *(_BYTE *)v5 = 0;
      *(_DWORD *)(v5 + 128) = -1;
      v6 = *(unsigned int *)(v4 + 128);
      if ((_DWORD)v6 != -1)
      {
        ((void (*)(_BYTE *, uint64_t, uint64_t))off_24C414260[v6])(v17, v5, v4);
        *(_DWORD *)(v5 + 128) = v6;
      }
      *(_BYTE *)(v5 + 136) = *(_BYTE *)(v4 + 136);
      v7 = operator new(0x20uLL, MEMORY[0x24BEDB6B8]);
      if (v7)
      {
        v8 = v7;
        *v7 = off_24C3F2180;
        v9 = operator new();
        *(_BYTE *)v9 = 0;
        *(_DWORD *)(v9 + 128) = -1;
        v10 = *(unsigned int *)(v5 + 128);
        if ((_DWORD)v10 != -1)
        {
          ((void (*)(char *, uint64_t, uint64_t))off_24C414260[v10])(&v30, v9, v5);
          *(_DWORD *)(v9 + 128) = v10;
        }
        *(_BYTE *)(v9 + 136) = *(_BYTE *)(v5 + 136);
        *((_DWORD *)v8 + 6) = 1;
        *v8 = &off_24C3F45F0;
        v8[1] = &unk_24C3F4640;
        v8[2] = v9;
        v11 = *(_QWORD *)(a1 + 96);
        *(_QWORD *)(a1 + 96) = v8;
        if (!v11)
          goto LABEL_10;
      }
      else
      {
        v12 = (uint64_t *)sub_20AF31F40();
        v13 = atomic_load((unsigned __int8 *)&qword_25463A790);
        if ((v13 & 1) == 0 && __cxa_guard_acquire(&qword_25463A790))
        {
          sub_20AF49F1C();
          if (byte_25463A837 < 0)
          {
            sub_20AEC60F4(&xmmword_25463A7F0, (void *)xmmword_25463A820, *((unint64_t *)&xmmword_25463A820 + 1));
          }
          else
          {
            xmmword_25463A7F0 = xmmword_25463A820;
            unk_25463A800 = unk_25463A830;
          }
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A7F0, &dword_20AEBB000);
          __cxa_guard_release(&qword_25463A790);
        }
        if (byte_25463A807 < 0)
        {
          sub_20AEC60F4(&__dst, (void *)xmmword_25463A7F0, *((unint64_t *)&xmmword_25463A7F0 + 1));
        }
        else
        {
          __dst = xmmword_25463A7F0;
          v32 = unk_25463A800;
        }
        sub_20AEC7620(&v28, (uint64_t)&__dst, 1uLL);
        v17[0] = 0;
        v27 = 0;
        sub_20AECD798(v12, (__int128 **)&v28, (uint64_t)v17, 0);
        if (v27 && v26)
        {
          if (v25)
          {
            if (v24 < 0)
              operator delete(__p);
            if (v22 < 0)
              operator delete(v21);
          }
          if (v20 && v19 < 0)
            operator delete(v18);
        }
        v14 = (void **)v28;
        if (v28)
        {
          v15 = v29;
          v16 = v28;
          if (v29 != v28)
          {
            do
            {
              if (*((char *)v15 - 1) < 0)
                operator delete(*(v15 - 3));
              v15 -= 3;
            }
            while (v15 != v14);
            v16 = v28;
          }
          v29 = v14;
          operator delete(v16);
        }
        if (SHIBYTE(v32) < 0)
          operator delete((void *)__dst);
        v11 = *(_QWORD *)(a1 + 96);
        *(_QWORD *)(a1 + 96) = 0;
        if (!v11)
          goto LABEL_10;
      }
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 24))(v11);
LABEL_10:
      MEMORY[0x20BD3583C](v5, 0x1000C4072FAA15ELL);
      return *(_QWORD *)(a1 + 96);
    }
  }
  return result;
}

void sub_20AF49908(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_25463A790);
    sub_20AEC01C0(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF49924(void *a1, int a2)
{
  if (!a2)
    JUMPOUT(0x20AF49954);
  sub_20AEC01C0(a1);
}

uint64_t VZTransform3GetSource(uint64_t a1)
{
  BOOL v2;
  uint64_t result;

  v2 = sub_20AF4869C((uint64_t)"VZTransform3GetSource", a1, 0);
  result = 0;
  if (!v2)
  {
    if (*(_BYTE *)(a1 + 48))
    {
      result = a1 + 24;
      if (*(char *)(a1 + 47) < 0)
        return *(_QWORD *)result;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t VZTransform3GetDestination(uint64_t a1)
{
  BOOL v2;
  uint64_t result;

  v2 = sub_20AF4869C((uint64_t)"VZTransform3GetDestination", a1, 0);
  result = 0;
  if (!v2)
  {
    if (*(_BYTE *)(a1 + 80))
    {
      result = a1 + 56;
      if (*(char *)(a1 + 79) < 0)
        return *(_QWORD *)result;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20AF49A44(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;

  v1 = (unsigned int *)(result + 88);
  do
    v2 = __ldaxr(v1);
  while (__stlxr(v2 + 1, v1));
  return result;
}

uint64_t sub_20AF49A5C(uint64_t result)
{
  unsigned int *v1;
  unsigned int v2;
  unsigned int v3;

  v1 = (unsigned int *)(result + 88);
  do
  {
    v2 = __ldaxr(v1);
    v3 = v2 - 1;
  }
  while (__stlxr(v3, v1));
  if (!v3)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 8) + 8))(result + 8);
  return result;
}

uint64_t sub_20AF49A84()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A7B0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463A7B0))
    return qword_25463A7A8;
  qword_25463A7A8 = sub_20AECB130();
  __cxa_guard_release(&qword_25463A7B0);
  return qword_25463A7A8;
}

void *sub_20AF49AE4(uint64_t a1, void *lpsrc)
{
  void *result;

  result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C3F21C0, (const struct __class_type_info *)&unk_24C3F52B0, 0);
  if (result)
    return (void *)sub_20B2482F8(a1 + 16, (uint64_t)result + 16);
  return result;
}

uint64_t sub_20AF49B3C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  const void *v20[2];
  char v21;

  __cxa_begin_catch(a1);
  sub_20AF4A19C();
  sub_20AEC0D64(v20, "failed to compare equal");
  sub_20AECD224((std::string::size_type)&xmmword_25463A868, v20, 0);
  if (v21 < 0)
    operator delete((void *)v20[0]);
  __cxa_end_catch();
  return 0;
}

CFTypeRef sub_20AF49B94(uint64_t a1)
{
  uint64_t v2;
  int v3;
  size_t v4;
  void **v5;
  unint64_t v6;
  unint64_t v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CFTypeRef v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  char v21;
  CFTypeRef cf;
  std::__shared_weak_count *v23;
  void *__dst[2];
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  sub_20AF4A19C();
  v26 = a1;
  v2 = operator new();
  *(_QWORD *)(v2 + 272) = 0;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_OWORD *)(v2 + 224) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)v2 = 0u;
  sub_20AEC0BD8(v2);
  v27 = (_QWORD *)v2;
  sub_20B2484AC((_QWORD *)(v2 + 16), (uint64_t *)(a1 + 16));
  v3 = *(_DWORD *)(v2 + 120);
  if ((v3 & 0x10) != 0)
  {
    v6 = *(_QWORD *)(v2 + 112);
    v7 = *(_QWORD *)(v2 + 72);
    if (v6 < v7)
    {
      *(_QWORD *)(v2 + 112) = v7;
      v6 = v7;
    }
    v8 = *(const void **)(v2 + 64);
    v4 = v6 - (_QWORD)v8;
    if (v6 - (unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_29;
  }
  else
  {
    if ((v3 & 8) == 0)
    {
      v4 = 0;
      HIBYTE(v25) = 0;
      v5 = __dst;
      goto LABEL_14;
    }
    v8 = *(const void **)(v2 + 40);
    v4 = *(_QWORD *)(v2 + 56) - (_QWORD)v8;
    if (v4 >= 0x7FFFFFFFFFFFFFF8)
LABEL_29:
      sub_20AEC0138();
  }
  if (v4 >= 0x17)
  {
    v9 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v9 = v4 | 7;
    v10 = v9 + 1;
    v5 = (void **)operator new(v9 + 1);
    __dst[1] = (void *)v4;
    v25 = v10 | 0x8000000000000000;
    __dst[0] = v5;
    goto LABEL_13;
  }
  HIBYTE(v25) = v4;
  v5 = __dst;
  if (v4)
LABEL_13:
    memmove(v5, v8, v4);
LABEL_14:
  *((_BYTE *)v5 + v4) = 0;
  v11 = v27;
  if (v27)
  {
    v12 = MEMORY[0x24BEDB7F0];
    v13 = *MEMORY[0x24BEDB7F0];
    *v27 = *MEMORY[0x24BEDB7F0];
    v14 = *(_QWORD *)(v12 + 72);
    *(_QWORD *)((char *)v11 + *(_QWORD *)(v13 - 24)) = *(_QWORD *)(v12 + 64);
    v11[3] = MEMORY[0x24BEDB848] + 16;
    v11[2] = v14;
    if (*((char *)v11 + 111) < 0)
      operator delete((void *)v11[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v11 + 16);
    MEMORY[0x20BD3583C](v11, 0x10B2C40EED050F3);
  }
  sub_20AED55DC("<", (uint64_t)&xmmword_25463A868, (uint64_t)" ", &v26, (uint64_t)">", (uint64_t)__dst);
  if (SHIBYTE(v25) < 0)
    operator delete(__dst[0]);
  sub_20B4EE2F0((uint64_t)&__p, (CFStringRef *)&cf);
  v15 = cf;
  if (cf)
    CFRetain(cf);
  v16 = v23;
  if (!v23)
    goto LABEL_26;
  p_shared_owners = (unint64_t *)&v23->__shared_owners_;
  do
    v18 = __ldaxr(p_shared_owners);
  while (__stlxr(v18 - 1, p_shared_owners));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    if ((v21 & 0x80000000) == 0)
      return v15;
  }
  else
  {
LABEL_26:
    if ((v21 & 0x80000000) == 0)
      return v15;
  }
  operator delete(__p);
  return v15;
}

uint64_t sub_20AF49E3C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  const void *v32[2];
  char v33;
  uint64_t v34;

  sub_20AEC147C((uint64_t)&v34);
  if (v33 < 0)
    operator delete((void *)v32[0]);
  __cxa_begin_catch(a1);
  sub_20AF4A19C();
  sub_20AEC0D64(v32, "failed to create description");
  sub_20AECD224((std::string::size_type)&xmmword_25463A868, v32, 0);
  if (v33 < 0)
    operator delete((void *)v32[0]);
  __cxa_end_catch();
  return 0;
}

uint64_t sub_20AF49F10(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 88));
}

void sub_20AF49F1C()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A798);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463A798))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::SE3]", qword_25463A808);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A808, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463A798);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25463A7A0);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_25463A7A0))
    {
      sub_20B531658((uint64_t)qword_25463A808, (uint64_t)&xmmword_25463A820);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A820, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463A7A0);
    }
  }
}

void sub_20AF49FEC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A7A0);
  _Unwind_Resume(a1);
}

void sub_20AF4A004(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A798);
  _Unwind_Resume(a1);
}

void sub_20AF4A01C()
{
  unsigned __int8 v0;
  int v1;
  size_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 *v8;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A7C0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463A7C0))
  {
    sub_20AF4A19C();
    v1 = byte_25463A87F;
    if (byte_25463A87F >= 0)
      v2 = byte_25463A87F;
    else
      v2 = *((_QWORD *)&xmmword_25463A868 + 1);
    v3 = v2 + 6;
    if (v2 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v3 >= 0x17)
    {
      v5 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v3 | 7) != 0x17)
        v5 = v3 | 7;
      v6 = v5 + 1;
      v7 = (char *)operator new(v5 + 1);
      qword_25463A858 = v2 + 6;
      unk_25463A860 = v6 | 0x8000000000000000;
      qword_25463A850 = (uint64_t)v7;
      *(_DWORD *)v7 = 1936617315;
      *((_WORD *)v7 + 2) = 8308;
      v4 = v7 + 6;
    }
    else
    {
      qword_25463A858 = 0;
      unk_25463A860 = 0;
      qword_25463A850 = 0x2074736E6F63;
      byte_25463A867 = v2 + 6;
      v4 = (char *)&qword_25463A850 + 6;
      if (!v2)
      {
LABEL_18:
        v4[v2] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A850, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463A7C0);
        return;
      }
    }
    if (v1 >= 0)
      v8 = &xmmword_25463A868;
    else
      v8 = (__int128 *)xmmword_25463A868;
    memmove(v4, v8, v2);
    goto LABEL_18;
  }
}

void sub_20AF4A184(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A7C0);
  _Unwind_Resume(a1);
}

void sub_20AF4A19C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A7C8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463A7C8))
  {
    sub_20AF4A254();
    if (byte_25463A8AF < 0)
    {
      sub_20AEC60F4(&xmmword_25463A868, (void *)xmmword_25463A898, *((unint64_t *)&xmmword_25463A898 + 1));
    }
    else
    {
      xmmword_25463A868 = xmmword_25463A898;
      unk_25463A878 = unk_25463A8A8;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A868, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463A7C8);
  }
}

void sub_20AF4A23C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A7C8);
  _Unwind_Resume(a1);
}

void sub_20AF4A254()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A7D0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463A7D0))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZTransform3]", qword_25463A880);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463A880, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463A7D0);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25463A7D8);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_25463A7D8))
    {
      sub_20B531658((uint64_t)qword_25463A880, (uint64_t)&xmmword_25463A898);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A898, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463A7D8);
    }
  }
}

void sub_20AF4A324(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A7D8);
  _Unwind_Resume(a1);
}

void sub_20AF4A33C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A7D0);
  _Unwind_Resume(a1);
}

void sub_20AF4A354(CFErrorRef ***a1, uint64_t a2)
{
  uint64_t *v4;
  unsigned __int8 v5;
  __int128 *v6;
  __int128 v7;
  void **v8;
  void **v9;
  void *v10;
  int v11;
  size_t v12;
  unint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _BYTE v18[16];
  void *__p;
  char v20;
  char v21;
  void *v22;
  char v23;
  void *v24;
  char v25;
  char v26;
  char v27;
  char v28;
  void *v29;
  void **v30;
  __int128 __dst;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t *)sub_20AED5104();
  v5 = atomic_load((unsigned __int8 *)&qword_25463A7E0);
  if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_25463A7E0))
    goto LABEL_2;
  sub_20AF4A01C();
  v11 = byte_25463A867;
  if (byte_25463A867 >= 0)
    v12 = byte_25463A867;
  else
    v12 = qword_25463A858;
  v13 = v12 + 1;
  if (v12 + 1 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  if (v13 >= 0x17)
  {
    v15 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v15 = v13 | 7;
    v16 = v15 + 1;
    v14 = (__int128 *)operator new(v15 + 1);
    *((_QWORD *)&xmmword_25463A8B0 + 1) = v12 + 1;
    unk_25463A8C0 = v16 | 0x8000000000000000;
    *(_QWORD *)&xmmword_25463A8B0 = v14;
    goto LABEL_43;
  }
  v14 = &xmmword_25463A8B0;
  unk_25463A8C0 = 0;
  xmmword_25463A8B0 = 0uLL;
  byte_25463A8C7 = v12 + 1;
  if (v12)
  {
LABEL_43:
    if (v11 >= 0)
      v17 = &qword_25463A850;
    else
      v17 = (uint64_t *)qword_25463A850;
    memmove(v14, v17, v12);
  }
  *(_WORD *)((char *)v14 + v12) = 38;
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463A8B0, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463A7E0);
LABEL_2:
  if (byte_25463A8C7 < 0)
  {
    sub_20AEC60F4(&__dst, (void *)xmmword_25463A8B0, *((unint64_t *)&xmmword_25463A8B0 + 1));
  }
  else
  {
    __dst = xmmword_25463A8B0;
    v32 = unk_25463A8C0;
  }
  v6 = sub_20AED3F9C();
  if (*((char *)v6 + 23) < 0)
  {
    sub_20AEC60F4(&v33, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v34 = *((_QWORD *)v6 + 2);
    v33 = v7;
  }
  sub_20AEC7620(&v29, (uint64_t)&__dst, 2uLL);
  sub_20AECF9B0(v18, a2);
  sub_20AECD798(v4, (__int128 **)&v29, (uint64_t)v18, **a1);
  if (!v28 || !v27)
    goto LABEL_16;
  if (!v26)
    goto LABEL_13;
  if ((v25 & 0x80000000) == 0)
  {
    if ((v23 & 0x80000000) == 0)
      goto LABEL_13;
LABEL_30:
    operator delete(v22);
    if (!v21)
      goto LABEL_16;
    goto LABEL_14;
  }
  operator delete(v24);
  if (v23 < 0)
    goto LABEL_30;
LABEL_13:
  if (!v21)
    goto LABEL_16;
LABEL_14:
  if (v20 < 0)
    operator delete(__p);
LABEL_16:
  v8 = (void **)v29;
  if (v29)
  {
    v9 = v30;
    v10 = v29;
    if (v30 != v29)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = v29;
    }
    v30 = v8;
    operator delete(v10);
  }
  if ((SHIBYTE(v34) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v32) & 0x80000000) == 0)
      return;
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v33);
  if (SHIBYTE(v32) < 0)
    goto LABEL_28;
}

void sub_20AF4A674(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A7E0);
  _Unwind_Resume(a1);
}

void sub_20AF4A68C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  uint64_t v25;

  sub_20AECDEE0((uint64_t)&a9);
  sub_20AEC2E90(&a25);
  if (*(char *)(v25 - 97) < 0)
    operator delete(*(void **)(v25 - 120));
  if (*(char *)(v25 - 121) < 0)
  {
    operator delete(*(void **)(v25 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF4A6EC(CFErrorRef ***a1, uint64_t a2)
{
  uint64_t *v4;
  __int128 v5;
  __int128 *v6;
  __int128 *v7;
  __int128 *v8;
  _BYTE v9[16];
  void *__p;
  char v11;
  char v12;
  void *v13;
  char v14;
  void *v15;
  char v16;
  char v17;
  char v18;
  char v19;
  __int128 *v20;
  __int128 *v21;
  __int128 __dst;
  uint64_t v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  sub_20AF4A19C();
  v4 = sub_20AED6ED4();
  if (*((char *)v4 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    v5 = *(_OWORD *)v4;
    v23 = v4[2];
    __dst = v5;
  }
  sub_20AEC7620(&v20, (uint64_t)&__dst, 1uLL);
  sub_20AECF9B0(v9, a2);
  sub_20AECD798((uint64_t *)&xmmword_25463A868, &v20, (uint64_t)v9, **a1);
  if (!v19 || !v18)
    goto LABEL_12;
  if (!v17)
    goto LABEL_9;
  if ((v16 & 0x80000000) == 0)
  {
    if ((v14 & 0x80000000) == 0)
      goto LABEL_9;
LABEL_24:
    operator delete(v13);
    if (!v12)
      goto LABEL_12;
    goto LABEL_10;
  }
  operator delete(v15);
  if (v14 < 0)
    goto LABEL_24;
LABEL_9:
  if (!v12)
    goto LABEL_12;
LABEL_10:
  if (v11 < 0)
    operator delete(__p);
LABEL_12:
  v6 = v20;
  if (v20)
  {
    v7 = v21;
    v8 = v20;
    if (v21 != v20)
    {
      do
      {
        if (*((char *)v7 - 1) < 0)
          operator delete(*((void **)v7 - 3));
        v7 = (__int128 *)((char *)v7 - 24);
      }
      while (v7 != v6);
      v8 = v20;
    }
    v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v23) < 0)
    operator delete((void *)__dst);
}

void sub_20AF4A868(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20AECDEE0((uint64_t)va);
  sub_20AEC2E90((void **)(v2 - 72));
  if (*(char *)(v2 - 25) < 0)
    operator delete(*(void **)(v2 - 48));
  _Unwind_Resume(a1);
}

uint64_t *sub_20AF4A8A4(uint64_t *a1)
{
  uint64_t v2;

  if (*((_BYTE *)a1 + 120))
  {
    if (*((_BYTE *)a1 + 64) && *((char *)a1 + 63) < 0)
      operator delete((void *)a1[5]);
    if (*((_BYTE *)a1 + 32) && *((char *)a1 + 31) < 0)
      operator delete((void *)a1[1]);
    v2 = *a1;
    *a1 = 0;
    if (v2)
      MEMORY[0x20BD3583C](v2, 0x1000C4072FAA15ELL);
    return a1;
  }
  if (!*((_BYTE *)a1 + 112))
    return a1;
  if (!*((_BYTE *)a1 + 104))
    goto LABEL_15;
  if (*((char *)a1 + 103) < 0)
  {
    operator delete((void *)a1[10]);
    if (*((char *)a1 + 71) < 0)
      goto LABEL_19;
LABEL_15:
    if (*((_BYTE *)a1 + 40))
      goto LABEL_16;
    return a1;
  }
  if ((*((char *)a1 + 71) & 0x80000000) == 0)
    goto LABEL_15;
LABEL_19:
  operator delete((void *)a1[6]);
  if (!*((_BYTE *)a1 + 40))
    return a1;
LABEL_16:
  if ((*((char *)a1 + 39) & 0x80000000) == 0)
    return a1;
  operator delete((void *)a1[2]);
  return a1;
}

void sub_20AF4A988(const void *a1@<X0>, size_t a2@<X1>, uint64_t a3@<X8>)
{
  char *v6;
  char *v7;
  __int128 v8;
  char *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  void *v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  void *v23[2];
  __int128 v24;
  void *__dst[2];
  uint64_t v26;
  char v27;
  void *v28;
  char v29;
  void *v30;
  char v31;
  char v32;
  char v33;
  __int128 v34;
  __int128 __p;
  uint64_t v36;
  unsigned __int8 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  char v44;
  size_t v45;

  v45 = a2;
  if (!a1 && a2)
  {
    sub_20AF4AD58("bytes pointer is null but num_bytes is ", &v45);
    if (SBYTE7(v24) < 0)
    {
      sub_20AEC60F4(__dst, v23[0], (unint64_t)v23[1]);
    }
    else
    {
      *(_OWORD *)__dst = *(_OWORD *)v23;
      v26 = v24;
    }
    v27 = 1;
    LOBYTE(v28) = 0;
    v32 = 0;
    v33 = 1;
    sub_20AECCC3C(0xAu, (__int128 *)__dst, (uint64_t)&v34);
    *(_OWORD *)a3 = v34;
    *(_BYTE *)(a3 + 16) = 0;
    *(_BYTE *)(a3 + 112) = 0;
    if (v44)
    {
      *(_BYTE *)(a3 + 40) = 0;
      v18 = v37;
      if (v37)
      {
        *(_OWORD *)(a3 + 16) = __p;
        *(_QWORD *)(a3 + 32) = v36;
        v36 = 0;
        __p = 0uLL;
        *(_BYTE *)(a3 + 40) = 1;
      }
      *(_BYTE *)(a3 + 48) = 0;
      *(_BYTE *)(a3 + 104) = 0;
      if (v43)
      {
        v19 = v40;
        *(_QWORD *)(a3 + 64) = v39;
        *(_OWORD *)(a3 + 48) = v38;
        v38 = 0uLL;
        *(_QWORD *)(a3 + 72) = v19;
        *(_OWORD *)(a3 + 80) = v41;
        *(_QWORD *)(a3 + 96) = v42;
        v39 = 0;
        v41 = 0uLL;
        v42 = 0;
        *(_BYTE *)(a3 + 104) = 1;
      }
      *(_BYTE *)(a3 + 112) = 1;
      *(_BYTE *)(a3 + 120) = 0;
      if (v18 && SHIBYTE(v36) < 0)
        operator delete((void *)__p);
      if (!v33)
        goto LABEL_43;
    }
    else
    {
      *(_BYTE *)(a3 + 120) = 0;
      if (!v33)
        goto LABEL_43;
    }
    if (!v32)
      goto LABEL_40;
    if (v31 < 0)
    {
      operator delete(v30);
      if ((v29 & 0x80000000) == 0)
      {
LABEL_40:
        if (v27)
          goto LABEL_41;
        goto LABEL_43;
      }
    }
    else if ((v29 & 0x80000000) == 0)
    {
      goto LABEL_40;
    }
    operator delete(v28);
    if (v27)
    {
LABEL_41:
      if (SHIBYTE(v26) < 0)
        operator delete(__dst[0]);
    }
LABEL_43:
    if ((SBYTE7(v24) & 0x80000000) == 0)
      return;
    v17 = v23[0];
LABEL_46:
    operator delete(v17);
    return;
  }
  if (a1 || !a2)
  {
    v20 = 0;
    v21 = 0;
    v22 = 0;
    if (!a2)
      goto LABEL_12;
  }
  else
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v20 = 0;
    v21 = 0;
    v22 = 0;
  }
  if ((a2 & 0x8000000000000000) != 0)
    sub_20AF4BAC0();
  v6 = (char *)operator new(a2);
  v7 = &v6[a2];
  v20 = v6;
  v22 = &v6[a2];
  memcpy(v6, a1, a2);
  v21 = v7;
LABEL_12:
  sub_20B4331C4((uint64_t)&v34, (uint64_t)&v20);
  v8 = v34;
  *(_OWORD *)v23 = v34;
  v24 = __p;
  v9 = (char *)operator new(0x38uLL);
  v10 = (std::__shared_weak_count *)v9;
  *((_QWORD *)v9 + 1) = 0;
  v11 = (unint64_t *)(v9 + 8);
  *((_QWORD *)v9 + 2) = 0;
  *((_QWORD *)v9 + 3) = v8;
  *(_QWORD *)v9 = &off_24C3F5310;
  *((_QWORD *)v9 + 4) = *((_QWORD *)&v8 + 1);
  v23[0] = 0;
  v23[1] = 0;
  *(_OWORD *)(v9 + 40) = v24;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  *(_QWORD *)a3 = v9 + 24;
  *(_QWORD *)(a3 + 8) = v9;
  *(_BYTE *)(a3 + 120) = 1;
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (!v13)
  {
    (*(void (**)(char *))(*(_QWORD *)v9 + 16))(v9);
    std::__shared_weak_count::__release_weak(v10);
  }
  v14 = (std::__shared_weak_count *)v23[1];
  if (v23[1])
  {
    v15 = (unint64_t *)((char *)v23[1] + 8);
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = v20;
  if (v20)
  {
    v21 = v20;
    goto LABEL_46;
  }
}

void sub_20AF4AD04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF4AD58(char *__s, unint64_t *a2)
{
  uint64_t result;
  _DWORD v4[6];
  int v5;
  std::string v6;
  _QWORD v7[5];
  _QWORD *v8;

  v5 = 0;
  sub_20AF4C134(v4, __s);
  std::to_string(&v6, *a2);
  v7[0] = v4;
  v7[1] = &v6;
  v7[2] = v4;
  v7[3] = &v6;
  v7[4] = &v6;
  if (v5 == -1)
    sub_20AECFAB8();
  v8 = v7;
  ((void (*)(_QWORD **, _DWORD *))off_24C3F5388[v5])(&v8, v4);
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v6.__r_.__value_.__l.__data_);
  if (v5 == -1)
    sub_20AECFAB8();
  v7[0] = &v6;
  result = ((uint64_t (*)(_QWORD *, _DWORD *))off_24C3F53A0[v5])(v7, v4);
  if (v5 != -1)
    return ((uint64_t (*)(_QWORD *, _DWORD *))off_24C3F5370[v5])(v7, v4);
  return result;
}

void sub_20AF4AE54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4AE70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_20AECFA60((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x20AF4AE60);
}

void sub_20AF4AE94(void (**a1)(uint64_t)@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  void (*v10)(uint64_t);
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  __int128 v18[33];
  void (*v19[5])(uint64_t);

  v19[4] = *(void (**)(uint64_t))MEMORY[0x24BDAC8D0];
  v6 = *a1;
  v7 = *((_QWORD *)*a1 + 2);
  v8 = *((_QWORD *)*a1 + 3);
  if (v7)
    v9 = v8 == 0;
  else
    v9 = 0;
  if (v9)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v6 = *a1;
  }
  v10 = a1[1];
  v19[1] = v6;
  v19[2] = v10;
  if (v10)
  {
    v11 = (unint64_t *)((char *)v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  v19[0] = (void (*)(uint64_t))sub_20AF4BFCC;
  sub_20B4340A4(&v16, v19, v7, v8);
  if (v19[0])
    v19[0](0);
  sub_20AF4B07C((uint64_t)&v16, a2, (uint64_t)v18);
  sub_20AF4BAD4(a3, 0, v18);
  *(_BYTE *)(a3 + 528) = 1;
  sub_20AED5474((uint64_t)v18);
  v13 = v17;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_20AF4B014(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20AEC01C0(exception_object);
}

void sub_20AF4B07C(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  mach_timebase_info v7;
  int v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unsigned __int8 v12;
  unsigned __int128 *v13;
  unsigned __int128 v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  std::__shared_weak_count *v21;
  _QWORD v22[2];
  std::__shared_weak_count *v23;
  mach_timebase_info info;
  char v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  unsigned __int128 v36;
  char v37;
  _QWORD v38[6];

  v38[5] = *MEMORY[0x24BDAC8D0];
  if (*((_BYTE *)a2 + 384))
  {
    if (*((_BYTE *)a2 + 168))
    {
      v7 = (mach_timebase_info)*((_QWORD *)a2 + 19);
      v6 = *((_QWORD *)a2 + 20);
      if (*((_BYTE *)a2 + 24))
        goto LABEL_4;
    }
    else
    {
      v6 = mach_continuous_time();
      v12 = atomic_load((unsigned __int8 *)&qword_25463D170);
      if ((v12 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
      {
        mach_timebase_info(&info);
        LODWORD(v18) = info.numer;
        LODWORD(v19) = info.denom;
        *(double *)&qword_25463D168 = (double)v18 / (double)v19;
        __cxa_guard_release(&qword_25463D170);
      }
      v7 = (mach_timebase_info)llround(*(double *)&qword_25463D168 * (double)v6);
      LOBYTE(v6) = 2;
      if (*((_BYTE *)a2 + 24))
      {
LABEL_4:
        sub_20AFA84B0((uint64_t *)a2, 1000000000);
        v8 = *((unsigned __int8 *)a2 + 24);
        info = v7;
        v25 = v6;
        LOBYTE(v26) = 0;
        v28 = 0;
        if (v8)
        {
          if (*((char *)a2 + 23) < 0)
          {
            sub_20AEC60F4(&v26, *(void **)a2, *((_QWORD *)a2 + 1));
          }
          else
          {
            v26 = *a2;
            v27 = *((_QWORD *)a2 + 2);
          }
          v28 = 1;
          LOBYTE(v29) = 0;
          v31 = 0;
          if (*((_BYTE *)a2 + 120))
          {
LABEL_34:
            if (*((char *)a2 + 119) < 0)
            {
              sub_20AEC60F4(&v29, *((void **)a2 + 12), *((_QWORD *)a2 + 13));
            }
            else
            {
              v29 = a2[6];
              v30 = *((_QWORD *)a2 + 14);
            }
            v31 = 1;
            LOBYTE(v32) = 0;
            v33 = 0;
            if (!*((_BYTE *)a2 + 144))
              goto LABEL_18;
            goto LABEL_17;
          }
LABEL_16:
          LOBYTE(v32) = 0;
          v33 = 0;
          if (!*((_BYTE *)a2 + 144))
          {
LABEL_18:
            LOBYTE(v34) = 0;
            v37 = 0;
            if (*((_BYTE *)a2 + 80))
            {
              if (*((char *)a2 + 55) < 0)
              {
                sub_20AEC60F4(&v34, *((void **)a2 + 4), *((_QWORD *)a2 + 5));
              }
              else
              {
                v34 = a2[2];
                v35 = *((_QWORD *)a2 + 6);
              }
              v13 = (unsigned __int128 *)(a2 + 4);
              do
                v14 = __ldaxp(v13);
              while (__stlxp(v14, v13));
              v36 = v14;
              v37 = 1;
            }
            sub_20AED3838((uint64_t)v38, (uint64_t)(a2 + 11));
            sub_20AF4C364(a1, (uint64_t)&info, v22);
            sub_20AFA7F18(a3, (uint64_t)v22);
            v15 = v23;
            if (v23)
            {
              p_shared_owners = (unint64_t *)&v23->__shared_owners_;
              do
                v17 = __ldaxr(p_shared_owners);
              while (__stlxr(v17 - 1, p_shared_owners));
              if (!v17)
              {
                ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
                std::__shared_weak_count::__release_weak(v15);
              }
            }
            sub_20AF4EA3C((uint64_t)&info);
            return;
          }
LABEL_17:
          v32 = a2[8];
          v33 = 1;
          goto LABEL_18;
        }
LABEL_15:
        LOBYTE(v29) = 0;
        v31 = 0;
        if (*((_BYTE *)a2 + 120))
          goto LABEL_34;
        goto LABEL_16;
      }
    }
    info = v7;
    v25 = v6;
    LOBYTE(v26) = 0;
    v28 = 0;
    goto LABEL_15;
  }
  sub_20AF4C224(a1, v20);
  sub_20AFA7F18(a3, (uint64_t)v20);
  v9 = v21;
  if (v21)
  {
    v10 = (unint64_t *)&v21->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_20AF4B38C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463D170);
  _Unwind_Resume(a1);
}

void sub_20AF4B3A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  if (a23)
  {
    if (a22 < 0)
    {
      operator delete(__p);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF4B45C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  const void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  BOOL v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  unsigned __int8 v19;
  int v20;
  uint64_t v21;
  void **v22;
  void **v23;
  void *v24;
  BOOL v25;
  char *v26;
  __int128 v27;
  unint64_t *v28;
  unint64_t v29;
  unsigned __int8 v30;
  std::__shared_weak_count *v31;
  void *v32;
  __int128 v33;
  char v34;
  void *v35[2];
  uint64_t v36;
  int v37;
  void *v38;
  void **v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  __int128 v42;
  __int128 __p;
  uint64_t v44;
  unsigned __int8 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  char v51;
  char v52;
  __int128 __dst;
  __int128 v54;
  uint64_t v55;

  v55 = *MEMORY[0x24BDAC8D0];
  v4 = *(const void **)(a1 + 424);
  v5 = *(std::__shared_weak_count **)(a1 + 432);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  if (v4)
  {
    v8 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_24C411EB8, (const struct __class_type_info *)&unk_24C3F5450, 0) != 0;
    if (!v5)
      goto LABEL_11;
  }
  else
  {
    v8 = 0;
    if (!v5)
      goto LABEL_11;
  }
  v9 = (unint64_t *)&v5->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
  {
LABEL_11:
    if (v8)
      goto LABEL_12;
LABEL_24:
    v11 = 0;
    v40 = 0;
    v41 = 0;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v8)
    goto LABEL_24;
LABEL_12:
  v12 = *(_QWORD *)(a1 + 424);
  v11 = *(std::__shared_weak_count **)(a1 + 432);
  if (v11)
  {
    v13 = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    v40 = v12;
    v41 = v11;
    if (v12)
    {
      v31 = v11;
      do
        v15 = __ldxr(v13);
      while (__stxr(v15 + 1, v13));
      v16 = *(_QWORD *)(v12 + 24);
      v17 = *(_QWORD *)(v12 + 32);
      if (v16)
        v18 = v17 == 0;
      else
        v18 = 0;
      if (!v18)
        goto LABEL_67;
      goto LABEL_65;
    }
LABEL_25:
    v19 = atomic_load((unsigned __int8 *)&qword_25463CF48);
    if ((v19 & 1) != 0)
      goto LABEL_26;
LABEL_76:
    if (__cxa_guard_acquire(&qword_25463CF48))
    {
      *(_OWORD *)v35 = xmmword_20B5B0AE0;
      sub_20B1DFBA8((uint64_t *)v35);
      __cxa_atexit((void (*)(void *))sub_20B1DFE54, &xmmword_25463CDA8, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463CF48);
    }
LABEL_26:
    if (byte_25463CEBF < 0)
    {
      sub_20AEC60F4(&__dst, (void *)xmmword_25463CEA8, *((unint64_t *)&xmmword_25463CEA8 + 1));
    }
    else
    {
      __dst = xmmword_25463CEA8;
      *(_QWORD *)&v54 = unk_25463CEB8;
    }
    DWORD2(v54) = dword_25463CEC0;
    sub_20AF4BC0C(&v38, (uint64_t)&__dst, 1uLL);
    if (*(char *)(a1 + 23) < 0)
    {
      sub_20AEC60F4(v35, *(void **)a1, *(_QWORD *)(a1 + 8));
    }
    else
    {
      *(_OWORD *)v35 = *(_OWORD *)a1;
      v36 = *(_QWORD *)(a1 + 16);
    }
    v37 = *(_DWORD *)(a1 + 24);
    v32 = operator new(0x20uLL);
    v33 = xmmword_20B5B35F0;
    strcpy((char *)v32, "cannot return data as VZBlob");
    v34 = 1;
    sub_20B099ED4((uint64_t *)&v38, (uint64_t)v35, (uint64_t)&v32, (uint64_t)&v42);
    *(_OWORD *)a2 = v42;
    *(_BYTE *)(a2 + 16) = 0;
    *(_BYTE *)(a2 + 112) = 0;
    if (v52)
    {
      *(_BYTE *)(a2 + 40) = 0;
      v20 = v45;
      if (v45)
      {
        *(_OWORD *)(a2 + 16) = __p;
        *(_QWORD *)(a2 + 32) = v44;
        v44 = 0;
        __p = 0uLL;
        *(_BYTE *)(a2 + 40) = 1;
      }
      *(_BYTE *)(a2 + 48) = 0;
      *(_BYTE *)(a2 + 104) = 0;
      if (v51)
      {
        v21 = v48;
        *(_QWORD *)(a2 + 64) = v47;
        *(_OWORD *)(a2 + 48) = v46;
        v46 = 0uLL;
        *(_QWORD *)(a2 + 72) = v21;
        *(_OWORD *)(a2 + 80) = v49;
        *(_QWORD *)(a2 + 96) = v50;
        v47 = 0;
        v49 = 0uLL;
        v50 = 0;
        *(_BYTE *)(a2 + 104) = 1;
      }
      *(_BYTE *)(a2 + 112) = 1;
      *(_BYTE *)(a2 + 120) = 0;
      if (v20 && SHIBYTE(v44) < 0)
        operator delete((void *)__p);
      if (!v34)
      {
LABEL_45:
        if (SHIBYTE(v36) < 0)
          operator delete(v35[0]);
        v22 = (void **)v38;
        if (v38)
        {
          v23 = v39;
          v24 = v38;
          if (v39 != v38)
          {
            do
            {
              if (*((char *)v23 - 9) < 0)
                operator delete(*(v23 - 4));
              v23 -= 4;
            }
            while (v23 != v22);
            v24 = v38;
          }
          v39 = v22;
          operator delete(v24);
        }
        if (SBYTE7(v54) < 0)
          operator delete((void *)__dst);
        if (v11)
          goto LABEL_70;
        return;
      }
    }
    else
    {
      *(_BYTE *)(a2 + 120) = 0;
      if (!v34)
        goto LABEL_45;
    }
    if (SHIBYTE(v33) < 0)
      operator delete(v32);
    goto LABEL_45;
  }
  v40 = *(_QWORD *)(a1 + 424);
  v41 = 0;
  if (!v12)
  {
    v11 = 0;
    v30 = atomic_load((unsigned __int8 *)&qword_25463CF48);
    if ((v30 & 1) != 0)
      goto LABEL_26;
    goto LABEL_76;
  }
  v31 = 0;
  v16 = *(_QWORD *)(v12 + 24);
  v17 = *(_QWORD *)(v12 + 32);
  if (v16)
    v25 = v17 == 0;
  else
    v25 = 0;
  if (!v25)
    goto LABEL_67;
LABEL_65:
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v11 = v31;
LABEL_67:
  *((_QWORD *)&v42 + 1) = v12;
  *(_QWORD *)&__p = v11;
  *(_QWORD *)&v42 = sub_20AF4BE64;
  sub_20B4340A4(&__dst, (void (**)(uint64_t))&v42, v16, v17);
  if ((_QWORD)v42)
    ((void (*)(int))v42)(0);
  v26 = (char *)operator new(0x38uLL);
  *((_QWORD *)v26 + 1) = 0;
  *((_QWORD *)v26 + 2) = 0;
  *(_QWORD *)v26 = &off_24C3F5310;
  v27 = v54;
  *(_OWORD *)(v26 + 24) = __dst;
  *(_OWORD *)(v26 + 40) = v27;
  *(_QWORD *)a2 = v26 + 24;
  *(_QWORD *)(a2 + 8) = v26;
  *(_BYTE *)(a2 + 120) = 1;
  v11 = v41;
  if (v41)
  {
LABEL_70:
    v28 = (unint64_t *)&v11->__shared_owners_;
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
}

void sub_20AF4B988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,char a30)
{
  __cxa_guard_abort(&qword_25463CF48);
  sub_20AEC147C((uint64_t)&a28);
  _Unwind_Resume(a1);
}

void **sub_20AF4BA50(void **a1)
{
  void **v2;
  void **v3;
  void *v4;

  v2 = (void **)*a1;
  if (*a1)
  {
    v3 = (void **)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        if (*((char *)v3 - 9) < 0)
          operator delete(*(v3 - 4));
        v3 -= 4;
      }
      while (v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_20AF4BAC0()
{
  sub_20AEC014C("vector");
}

uint64_t sub_20AF4BAD4(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, __n128);

  v5 = *a3;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a3 + 2);
  *(_OWORD *)a1 = v5;
  *((_QWORD *)a3 + 1) = 0;
  *((_QWORD *)a3 + 2) = 0;
  *(_QWORD *)a3 = 0;
  *(_DWORD *)(a1 + 24) = *((_DWORD *)a3 + 6);
  v6 = sub_20AED4DE8(a1 + 32, a3 + 2);
  v7 = *((_QWORD *)a3 + 53);
  v8 = *((_QWORD *)a3 + 54);
  *(_QWORD *)(a1 + 416) = &off_24C411E78;
  *(_QWORD *)(a1 + 424) = v7;
  *(_QWORD *)(a1 + 432) = v8;
  *((_QWORD *)a3 + 53) = 0;
  *((_QWORD *)a3 + 54) = 0;
  *(_BYTE *)(a1 + 448) = 0;
  *(_BYTE *)(a1 + 480) = 0;
  if (*((_BYTE *)a3 + 480))
  {
    *(_QWORD *)(a1 + 448) = 0;
    *(_QWORD *)(a1 + 456) = 0;
    v9 = (void (*)(uint64_t, __n128))*((_QWORD *)a3 + 56);
    if (v9)
      v9(2, v6);
    *(_BYTE *)(a1 + 480) = 1;
  }
  *(_BYTE *)(a1 + 488) = 0;
  *(_BYTE *)(a1 + 512) = 0;
  if (*((_BYTE *)a3 + 512))
  {
    *(_QWORD *)(a1 + 488) = &off_24C41E150;
    *(_OWORD *)(a1 + 496) = a3[31];
    *((_QWORD *)a3 + 62) = 0;
    *((_QWORD *)a3 + 63) = 0;
    *(_BYTE *)(a1 + 512) = 1;
  }
  return a1;
}

void sub_20AF4BBAC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void (**sub_20AF4BBC8(void (**a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD)))(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD)
{
  if (*a1)
    (*a1)(0, a1, 0, 0, 0);
  return a1;
}

_QWORD *sub_20AF4BC0C(_QWORD *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __int128 v8;
  char *v9;
  __int128 *v10;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    if (a3 >> 59)
      sub_20AF4BAC0();
    v5 = 32 * a3;
    v6 = (char *)operator new(32 * a3);
    v7 = 0;
    *a1 = v6;
    a1[1] = v6;
    a1[2] = &v6[v5];
    do
    {
      v9 = &v6[v7];
      v10 = (__int128 *)(a2 + v7);
      if (*(char *)(a2 + v7 + 23) < 0)
      {
        sub_20AEC60F4(v9, *(void **)v10, *((_QWORD *)v10 + 1));
      }
      else
      {
        v8 = *v10;
        *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
        *(_OWORD *)v9 = v8;
      }
      *(_DWORD *)&v6[v7 + 24] = *(_DWORD *)(a2 + v7 + 24);
      v7 += 32;
    }
    while (v5 != v7);
    a1[1] = &v6[v7];
  }
  return a1;
}

void sub_20AF4BCE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_20AF4BD34(&a9);
  _Unwind_Resume(a1);
}

void sub_20AF4BCF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  for (; v11; v11 -= 32)
  {
    if (*(char *)(v10 + v11 - 9) < 0)
      operator delete(*(void **)(v10 + v11 - 32));
  }
  *(_QWORD *)(v9 + 8) = v10;
  sub_20AF4BD34(&a9);
  _Unwind_Resume(a1);
}

void ***sub_20AF4BD34(void ***result)
{
  void ***v1;
  void **v2;
  void **v3;
  void **v4;
  void *v5;

  v1 = result;
  if (!*((_BYTE *)result + 8))
  {
    v2 = *result;
    v3 = (void **)**result;
    if (v3)
    {
      v4 = (void **)v2[1];
      v5 = **result;
      if (v4 != v3)
      {
        do
        {
          if (*((char *)v4 - 9) < 0)
            operator delete(*(v4 - 4));
          v4 -= 4;
        }
        while (v4 != v3);
        v5 = **v1;
      }
      v2[1] = v3;
      operator delete(v5);
      return v1;
    }
  }
  return result;
}

void sub_20AF4BDC8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5310;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20AF4BDD8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5310;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF4BE08(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 32);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20AF4BE64(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20AF4BE98()
{
  _QWORD *v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t result;

  v1 = (std::__shared_weak_count *)v0[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  result = 0;
  *v0 = 0;
  return result;
}

uint64_t sub_20AF4BEE4(uint64_t a1, uint64_t a2, void (**a3)(int a1))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(v3 + 16);
  a3[1] = *(void (**)(int))(v3 + 8);
  a3[2] = (void (*)(int))v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = 0;
  *a3 = sub_20AF4BE64;
  return result;
}

__n128 sub_20AF4BF20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)a3 = sub_20AF4BE64;
  *(_QWORD *)v3 = 0;
  return result;
}

uint64_t sub_20AF4BF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  unint64_t v6;

  if (a4)
  {
    v6 = *(_QWORD *)(a4 + 8);
    if ((char *)v6 != "NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con4BlobENS3_7PackageELj9EvEEEE")
    {
      if (((v6 & (unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con4BlobENS3_7PackageELj9EvEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v6, "NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con4BlobENS3_7PackageELj9EvEEEE"))return 0;
      if (strcmp((const char *)(v6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con4BlobENS3_7PackageELj9EvEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        return 0;
      }
    }
  }
  else if (a5 != &unk_20B5B36A8)
  {
    return 0;
  }
  return v5 + 8;
}

void sub_20AF4BFCC(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20AF4C000()
{
  _QWORD *v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t result;

  v1 = (std::__shared_weak_count *)v0[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  result = 0;
  *v0 = 0;
  return result;
}

uint64_t sub_20AF4C04C(uint64_t a1, uint64_t a2, void (**a3)(int a1))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(v3 + 16);
  a3[1] = *(void (**)(int))(v3 + 8);
  a3[2] = (void (*)(int))v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = 0;
  *a3 = sub_20AF4BFCC;
  return result;
}

__n128 sub_20AF4C088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)a3 = sub_20AF4BFCC;
  *(_QWORD *)v3 = 0;
  return result;
}

uint64_t sub_20AF4C0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  unint64_t v6;

  if (a4)
  {
    v6 = *(_QWORD *)(a4 + 8);
    if ((char *)v6 != "NSt3__110shared_ptrIKN4cv3d3kit3con4BlobEEE")
    {
      if (((v6 & (unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3con4BlobEEE" & 0x8000000000000000) != 0) == __OFSUB__(v6, "NSt3__110shared_ptrIKN4cv3d3kit3con4BlobEEE"))
        return 0;
      if (strcmp((const char *)(v6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3con4BlobEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        return 0;
      }
    }
  }
  else if (a5 != &unk_20B5B36D8)
  {
    return 0;
  }
  return v5 + 8;
}

_DWORD *sub_20AF4C134(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C3F5370[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

uint64_t sub_20AF4C224@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  unsigned __int8 v5;
  unint64_t v7;
  unint64_t v8;
  mach_timebase_info info;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v4 = mach_continuous_time();
  v5 = atomic_load((unsigned __int8 *)&qword_25463D170);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
  {
    mach_timebase_info(&info);
    LODWORD(v7) = info.numer;
    LODWORD(v8) = info.denom;
    *(double *)&qword_25463D168 = (double)v7 / (double)v8;
    __cxa_guard_release(&qword_25463D170);
  }
  v10[0] = llround(*(double *)&qword_25463D168 * (double)v4);
  v10[1] = 2;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  sub_20AF4C364(a1, (uint64_t)v10, a2);
  return sub_20AF4EA3C((uint64_t)v10);
}

void sub_20AF4C338(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463D170);
  _Unwind_Resume(a1);
}

void sub_20AF4C350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AF4EA3C((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF4C364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  __int128 v7;
  _QWORD *result;

  v6 = operator new();
  *(_QWORD *)v6 = &off_24C3F5478;
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v6 + 8) = *(_OWORD *)a1;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_OWORD *)(v6 + 24) = v7;
  sub_20AF4CAF4(v6 + 48, a2);
  *(_QWORD *)v6 = &off_24C3F53F8;
  *a3 = &off_24C411E78;
  a3[1] = v6;
  result = (_QWORD *)operator new();
  *result = &off_24C411F70;
  result[1] = 0;
  result[2] = 0;
  result[3] = v6;
  a3[2] = result;
  return result;
}

void sub_20AF4C418(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_20AF4C434(_Unwind_Exception *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  MEMORY[0x20BD3583C](v1, 0x10F3C409A2DB966);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF4C490(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F5478;
  sub_20AF4EA3C((uint64_t)(a1 + 6));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_20AF4C508(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F5478;
  sub_20AF4EA3C((uint64_t)(a1 + 6));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF4C580(uint64_t a1)
{
  return a1 + 48;
}

uint64_t sub_20AF4C588(_QWORD *a1, _QWORD *lpsrc)
{
  uint64_t result;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  uint64_t i;
  uint64_t v11;

  result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C411EB8, (const struct __class_type_info *)&unk_24C3F5438, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      v5 = a1[3];
      if (v5 != *(_QWORD *)(result + 24))
        return 0;
      v6 = (unsigned __int8 *)a1[4];
      v7 = *(unsigned __int8 **)(result + 32);
      v8 = &v6[v5];
      v9 = &v7[v5];
      if (v5)
      {
        for (i = v5 - 1; ; --i)
        {
          v11 = i;
          if (*v6 != *v7)
            break;
          ++v6;
          ++v7;
          if (!v11)
          {
            v7 = v9;
            v6 = v8;
            return v6 == v8 && v7 == v9;
          }
        }
        return 0;
      }
      return v6 == v8 && v7 == v9;
    }
  }
  return result;
}

void sub_20AF4C650(uint64_t a1)
{
  __int128 *v2;
  void *__p;
  char v4;

  v2 = (__int128 *)sub_20AF4DFD4();
  sub_20AF4C704(a1);
  sub_20AF4DD70(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",", a1 + 48, (uint64_t)"}");
  if (v4 < 0)
    operator delete(__p);
}

void sub_20AF4C6E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF4C704(uint64_t a1)
{
  unsigned __int8 v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;

  v2 = atomic_load((unsigned __int8 *)&qword_2546313B8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2546313B8))
  {
    v4 = sub_20AF4D978();
    v5 = *((_QWORD *)v4 + 1);
    if (*((char *)v4 + 23) >= 0)
    {
      v6 = *((unsigned __int8 *)v4 + 23);
    }
    else
    {
      v4 = *(__int128 **)v4;
      v6 = v5;
    }
    sub_20AF4E53C((char *)v4, v6, "::", 2, 0, (uint64_t)&v8);
    if (*(char *)(v9 - 1) < 0)
    {
      sub_20AEC60F4(&xmmword_2546313A0, *(void **)(v9 - 24), *(_QWORD *)(v9 - 16));
    }
    else
    {
      v7 = *(_OWORD *)(v9 - 24);
      qword_2546313B0 = *(_QWORD *)(v9 - 8);
      xmmword_2546313A0 = v7;
    }
    sub_20AEC2E90(&v8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546313A0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546313B8);
  }
  return sub_20AF4E394(&xmmword_2546313A0, (uint64_t)"{", a1 + 8, (uint64_t)"}");
}

void sub_20AF4C814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_20AEC2E90(&a9);
  __cxa_guard_abort(&qword_2546313B8);
  _Unwind_Resume(a1);
}

void sub_20AF4C834(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546313B8);
  _Unwind_Resume(a1);
}

void sub_20AF4C84C(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 9;
}

void sub_20AF4C878(uint64_t (***lpsrc)()@<X0>, _QWORD *a2@<X8>)
{
  sub_20B2346E4(lpsrc, 9, a2);
}

_QWORD *sub_20AF4C8B0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F5478;
  sub_20AF4EA3C((uint64_t)(a1 + 6));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_20AF4C928(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F5478;
  sub_20AF4EA3C((uint64_t)(a1 + 6));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF4C9A0(uint64_t a1)
{
  __int128 *v2;

  v2 = sub_20AF4D414();
  return sub_20AF4CCA0(v2, (uint64_t)"{", a1 + 8, (uint64_t)",", a1 + 48, (uint64_t)"}");
}

uint64_t sub_20AF4C9F8(uint64_t a1)
{
  uint64_t result;
  _BYTE v2[24];
  int v3;
  char v4;
  _QWORD v5[2];

  v3 = 0;
  sub_20AF4CECC((uint64_t)v5, (uint64_t)v2, a1 + 8);
  if (v3 == -1)
    sub_20AECFAB8();
  v5[0] = &v4;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24C3F53A0[v3])(v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24C3F5370[v3])(v5, v2);
  return result;
}

void sub_20AF4CA90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;

  if (a13 != -1)
    ((void (*)(uint64_t, char *))off_24C3F5370[a13])(v13 - 17, &a10);
  _Unwind_Resume(exception_object);
}

void sub_20AF4CAC8(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_20AF4CAF4(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int128 *v9;
  unsigned __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  if (*(_BYTE *)(a2 + 40))
  {
    if (*(char *)(a2 + 39) < 0)
    {
      sub_20AEC60F4((_BYTE *)(a1 + 16), *(void **)(a2 + 16), *(_QWORD *)(a2 + 24));
    }
    else
    {
      v4 = *(_OWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = v4;
    }
    *(_BYTE *)(a1 + 40) = 1;
  }
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 72) = 0;
  if (*(_BYTE *)(a2 + 72))
  {
    if (*(char *)(a2 + 71) < 0)
    {
      sub_20AEC60F4((_BYTE *)(a1 + 48), *(void **)(a2 + 48), *(_QWORD *)(a2 + 56));
    }
    else
    {
      v5 = *(_OWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = v5;
    }
    *(_BYTE *)(a1 + 72) = 1;
  }
  v6 = *(_OWORD *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 96) = v7;
  *(_OWORD *)(a1 + 80) = v6;
  *(_BYTE *)(a1 + 160) = 0;
  if (*(_BYTE *)(a2 + 160))
  {
    if (*(char *)(a2 + 135) < 0)
    {
      sub_20AEC60F4((_BYTE *)(a1 + 112), *(void **)(a2 + 112), *(_QWORD *)(a2 + 120));
    }
    else
    {
      v8 = *(_OWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = v8;
    }
    v9 = (unsigned __int128 *)(a2 + 144);
    do
      v10 = __ldaxp(v9);
    while (__stlxp(v10, v9));
    *(_OWORD *)(a1 + 144) = v10;
    *(_BYTE *)(a1 + 160) = 1;
  }
  sub_20AED3838(a1 + 176, a2 + 176);
  return a1;
}

void sub_20AF4CC38(_Unwind_Exception *exception_object)
{
  void **v1;
  char *v2;
  void **v3;
  void **v4;

  if (v2[160] && v2[135] < 0)
    operator delete(*v4);
  if (v2[72] && v2[71] < 0)
    operator delete(*v3);
  if (v2[40])
  {
    if (v2[39] < 0)
      operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF4CCA0(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  char v12;
  char v13;
  __int128 __dst;
  uint64_t v15;
  int v16;
  __int128 *p_dst;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 **p_p_dst;

  v16 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v15 = *((_QWORD *)a1 + 2);
  }
  v16 = 1;
  p_dst = &__dst;
  v18 = a2;
  v19 = &__dst;
  v20 = a2;
  v21 = a2;
  sub_20AED5C4C((uint64_t *)&v19, (uint64_t)&__dst);
  sub_20AF4CECC((uint64_t)&v13, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v18 = a4;
  v19 = &__dst;
  v20 = a4;
  v21 = a4;
  if (v16 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F53D0[v16])(&p_p_dst, &__dst);
  sub_20AF4D170((uint64_t)&v12, (uint64_t)&__dst, a5);
  p_dst = &__dst;
  v18 = a6;
  v19 = &__dst;
  v20 = a6;
  v21 = a6;
  if (v16 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F53D0[v16])(&p_p_dst, &__dst);
  if (v16 == -1)
    sub_20AECFAB8();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C3F53A0[v16])(&p_dst, &__dst);
  if (v16 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C3F5370[v16])(&p_dst, &__dst);
  return result;
}

void sub_20AF4CE3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4CE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4CE68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4CE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4CE90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4CEA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4CEB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4CECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20AEC0BD8(v5);
  v21[0] = v5;
  sub_20B4341A0((_QWORD *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_20AEC0138();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v14 + 128);
    MEMORY[0x20BD3583C](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_20AECFAB8();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24C3F5388[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_20AF4D11C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20AF4D140(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF4D15C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B52CE84((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20AF4D170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20AEC0BD8(v5);
  v21[0] = v5;
  sub_20B216960((_QWORD *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_20AEC0138();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v14 + 128);
    MEMORY[0x20BD3583C](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_20AECFAB8();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24C3F5388[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_20AF4D3C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20AF4D3E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF4D400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B52CE84((uint64_t *)va);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF4D414()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631278);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631278))
    return &xmmword_254631260;
  v2 = sub_20AF4D4F0();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_254631260, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_254631270 = v2->__r_.__value_.__r.__words[2];
    xmmword_254631260 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631260, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631278);
  return &xmmword_254631260;
}

void sub_20AF4D4D8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631278);
  _Unwind_Resume(a1);
}

std::string *sub_20AF4D4F0()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631298);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631298))
    return &stru_254631280;
  sub_20AF4D794((uint64_t)__p);
  sub_20AF4D5E0((char *)__p, &stru_254631280);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631280, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631298);
  return &stru_254631280;
}

void sub_20AF4D5A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631298);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631298);
  _Unwind_Resume(a1);
}

void sub_20AF4D5E0(char *a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v4;
  __int128 v5;
  __int128 *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *__dst[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = sub_20AF4D978();
  if (*((char *)v4 + 23) < 0)
  {
    sub_20AEC60F4(__dst, *(void **)v4, *((_QWORD *)v4 + 1));
  }
  else
  {
    v5 = *v4;
    v16 = *((_QWORD *)v4 + 2);
    *(_OWORD *)__dst = v5;
  }
  v6 = sub_20AF4DB74();
  if (*((char *)v6 + 23) < 0)
  {
    sub_20AEC60F4(&v17, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = v7;
  }
  sub_20AEC7620(&__p, (uint64_t)__dst, 2uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_19;
}

void sub_20AF4D744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_20AEC2E90((void **)&a9);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF4D794(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254631318);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254631318))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::con::Blob>]", qword_254631300);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631300, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631318);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254631338);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254631338))
  {
    v5 = sub_20AED4780(qword_254631300, "<", 0);
    sub_20AED467C(qword_254631300, 0, v5, qword_254631320);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631320, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631338);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254631358);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254631358))
  {
    sub_20B531658((uint64_t)qword_254631320, (uint64_t)&xmmword_254631340);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631340, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631358);
  }
  if (byte_254631357 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_254631340, *((unint64_t *)&xmmword_254631340 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_254631340;
    *(_QWORD *)(a1 + 16) = unk_254631350;
  }
}

void sub_20AF4D930(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631358);
  _Unwind_Resume(a1);
}

void sub_20AF4D948(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631338);
  _Unwind_Resume(a1);
}

void sub_20AF4D960(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631318);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF4D978()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546312B8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546312B8))
    return &xmmword_2546312A0;
  v2 = (char *)sub_20AF4DA54();
  if (v2[23] < 0)
  {
    sub_20AEC60F4(&xmmword_2546312A0, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_2546312B0 = *((_QWORD *)v2 + 2);
    xmmword_2546312A0 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546312A0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546312B8);
  return &xmmword_2546312A0;
}

void sub_20AF4DA3C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546312B8);
  _Unwind_Resume(a1);
}

void *sub_20AF4DA54()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_2546312D8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546312D8))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::con::Blob]", qword_2546312C0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546312C0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546312D8);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_2546312F8);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_2546312F8))
    return &unk_2546312E0;
  sub_20B531658((uint64_t)qword_2546312C0, (uint64_t)&unk_2546312E0);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_2546312E0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546312F8);
  return &unk_2546312E0;
}

void sub_20AF4DB44(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546312F8);
  _Unwind_Resume(a1);
}

void sub_20AF4DB5C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546312D8);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF4DB74()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546313D8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546313D8))
    return &xmmword_2546313C0;
  v2 = (char *)sub_20AF4DC50();
  if (v2[23] < 0)
  {
    sub_20AEC60F4(&xmmword_2546313C0, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_2546313D0 = *((_QWORD *)v2 + 2);
    xmmword_2546313C0 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546313C0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546313D8);
  return &xmmword_2546313C0;
}

void sub_20AF4DC38(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546313D8);
  _Unwind_Resume(a1);
}

void *sub_20AF4DC50()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_2546313F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546313F8))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::UnknownPackage]", qword_2546313E0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546313E0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546313F8);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254631418);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_254631418))
    return &unk_254631400;
  sub_20B531658((uint64_t)qword_2546313E0, (uint64_t)&unk_254631400);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_254631400, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631418);
  return &unk_254631400;
}

void sub_20AF4DD40(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631418);
  _Unwind_Resume(a1);
}

void sub_20AF4DD58(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546313F8);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF4DD70(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  char v12;
  __int128 __dst;
  uint64_t v14;
  int v15;
  __int128 *p_dst;
  uint64_t v17;
  __int128 *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 **p_p_dst;

  v15 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v14 = *((_QWORD *)a1 + 2);
  }
  v15 = 1;
  p_dst = &__dst;
  v17 = a2;
  v18 = &__dst;
  v19 = a2;
  v20 = a2;
  sub_20AED5C4C((uint64_t *)&v18, (uint64_t)&__dst);
  p_dst = &__dst;
  v17 = a3;
  v18 = &__dst;
  v19 = a3;
  v20 = a3;
  if (v15 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F53B8[v15])(&p_p_dst, &__dst);
  p_dst = &__dst;
  v17 = a4;
  v18 = &__dst;
  v19 = a4;
  v20 = a4;
  if (v15 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F53D0[v15])(&p_p_dst, &__dst);
  sub_20AF4D170((uint64_t)&v12, (uint64_t)&__dst, a5);
  p_dst = &__dst;
  v17 = a6;
  v18 = &__dst;
  v19 = a6;
  v20 = a6;
  if (v15 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F53D0[v15])(&p_p_dst, &__dst);
  if (v15 == -1)
    sub_20AECFAB8();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C3F53A0[v15])(&p_dst, &__dst);
  if (v15 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C3F5370[v15])(&p_dst, &__dst);
  return result;
}

void sub_20AF4DF44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4DF5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4DF70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4DF84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4DF98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4DFAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4DFC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

std::string *sub_20AF4DFD4()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void *v8[3];
  void *v9[2];
  char v10;
  void *__dst[2];
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  void *__p[2];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254631378);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254631378))
  {
    sub_20AEC0D64(v9, "viz::PackageData");
    v2 = sub_20AF4D978();
    if (*((char *)v2 + 23) < 0)
    {
      sub_20AEC60F4(__dst, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      v12 = *((_QWORD *)v2 + 2);
      *(_OWORD *)__dst = v3;
    }
    v14 = 0xC00000000000000;
    *(_OWORD *)v13 = *(_OWORD *)"viz::Package";
    v4 = sub_20AF4E29C();
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
    }
    else
    {
      v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      v16 = v4->__r_.__value_.__r.__words[2];
      v15 = v5;
    }
    v18 = 0x400000000000000;
    *(_OWORD *)__p = *(_OWORD *)"void";
    sub_20AEC7620(v8, (uint64_t)__dst, 4uLL);
    sub_20B53170C((char *)v9, (uint64_t *)v8, &stru_254631360, v6, v7);
    sub_20AEC2E90(v8);
    if (SHIBYTE(v18) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v16) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v14) & 0x80000000) == 0)
          goto LABEL_13;
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v13[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v10 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631360, &dword_20AEBB000);
        __cxa_guard_release(&qword_254631378);
        return &stru_254631360;
      }
LABEL_20:
      operator delete(v9[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_20;
  }
  return &stru_254631360;
}

void sub_20AF4E1B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  sub_20AEC2E90(&a10);
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_254631378);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_254631378);
  _Unwind_Resume(a1);
}

std::string *sub_20AF4E29C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631398);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631398))
    return &stru_254631380;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 9U]", __p);
  sub_20B531884((uint64_t)__p, &stru_254631380);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631380, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631398);
  return &stru_254631380;
}

void sub_20AF4E354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631398);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631398);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF4E394(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  char v8;
  __int128 __dst;
  uint64_t v10;
  int v11;
  __int128 *p_dst;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 **p_p_dst;

  v11 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v10 = *((_QWORD *)a1 + 2);
  }
  v11 = 1;
  p_dst = &__dst;
  v13 = a2;
  v14 = &__dst;
  v15 = a2;
  v16 = a2;
  sub_20AED5C4C((uint64_t *)&v14, (uint64_t)&__dst);
  sub_20AF4CECC((uint64_t)&v8, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v13 = a4;
  v14 = &__dst;
  v15 = a4;
  v16 = a4;
  if (v11 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F53D0[v11])(&p_p_dst, &__dst);
  if (v11 == -1)
    sub_20AECFAB8();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C3F53A0[v11])(&p_dst, &__dst);
  if (v11 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C3F5370[v11])(&p_dst, &__dst);
  return result;
}

void sub_20AF4E4D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4E4EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4E500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4E514(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4E528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF4E53C(char *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _OWORD *v24;
  __int128 *v25;
  unint64_t v26;
  __int128 v27;
  char v28;
  char *v29;
  void *__p[2];
  char v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (a2)
  {
    v10 = a1;
    v11 = 0;
    *(_QWORD *)a6 = 0;
    *(_QWORD *)(a6 + 8) = 0;
    *(_QWORD *)(a6 + 16) = 0;
    v29 = a1;
    __p[0] = a1;
    v12 = &a1[a2];
    while (1)
    {
      v15 = v12;
      if (v10 != v12)
      {
        if (a4)
        {
          v15 = v10;
LABEL_10:
          v16 = a4;
          v17 = a3;
          while (*v17 != *v15)
          {
            ++v17;
            if (!--v16)
            {
              if (++v15 != v12)
                goto LABEL_10;
              goto LABEL_14;
            }
          }
        }
        else
        {
LABEL_14:
          v15 = v12;
        }
      }
      v29 = v15;
      if (a5 != 1 && v15 == v10)
        goto LABEL_6;
      if ((unint64_t)v11 >= *(_QWORD *)(a6 + 16))
      {
        v11 = sub_20AF4E7D8((void **)a6, (uint64_t *)__p, &v29);
        goto LABEL_5;
      }
      v18 = v15 - v10;
      if ((unint64_t)(v15 - v10) >= 0x7FFFFFFFFFFFFFF8)
        sub_20AEC0138();
      if (v18 > 0x16)
      {
        v21 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v18 | 7) != 0x17)
          v21 = v18 | 7;
        v22 = v21 + 1;
        v19 = (char *)operator new(v21 + 1);
        *((_QWORD *)v11 + 1) = v18;
        *((_QWORD *)v11 + 2) = v22 | 0x8000000000000000;
        *(_QWORD *)v11 = v19;
        v20 = v15 - v10;
        if (v15 == v10)
        {
LABEL_3:
          v13 = v19;
          goto LABEL_4;
        }
      }
      else
      {
        v11[23] = v18;
        v19 = v11;
        v20 = v15 - v10;
        if (v15 == v10)
          goto LABEL_3;
      }
      if (v20 < 0x20 || (unint64_t)(v19 - v10) < 0x20)
      {
        v23 = v10;
        v13 = v19;
      }
      else
      {
        v23 = &v10[v20 & 0xFFFFFFFFFFFFFFE0];
        v13 = &v19[v20 & 0xFFFFFFFFFFFFFFE0];
        v24 = v19 + 16;
        v25 = (__int128 *)(v10 + 16);
        v26 = v20 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v27 = *v25;
          *(v24 - 1) = *(v25 - 1);
          *v24 = v27;
          v24 += 2;
          v25 += 2;
          v26 -= 32;
        }
        while (v26);
        if (v20 == (v20 & 0xFFFFFFFFFFFFFFE0))
          goto LABEL_4;
      }
      do
      {
        v28 = *v23++;
        *v13++ = v28;
      }
      while (v23 != v15);
LABEL_4:
      *v13 = 0;
      v11 += 24;
      *(_QWORD *)(a6 + 8) = v11;
LABEL_5:
      *(_QWORD *)(a6 + 8) = v11;
      v10 = v29;
LABEL_6:
      __p[0] = v10 + 1;
      if (v10++ == v12)
        return;
    }
  }
  if (a5)
  {
    v31 = 0;
    LOBYTE(__p[0]) = 0;
    sub_20AEC7620((_QWORD *)a6, (uint64_t)__p, 1uLL);
    if (v31 < 0)
      operator delete(__p[0]);
  }
  else
  {
    *(_QWORD *)a6 = 0;
    *(_QWORD *)(a6 + 8) = 0;
    *(_QWORD *)(a6 + 16) = 0;
  }
}

void sub_20AF4E798(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_20AF4E7D8(void **a1, uint64_t *a2, char **a3)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char *v14;
  char *v15;
  _OWORD *v16;
  __int128 *v17;
  unint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  char *v24;
  void *v25;
  void **v26;
  void **v27;
  __int128 v28;
  void **v29;
  char *v31;
  char *v32;
  char *v33;

  v4 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20AEC60B8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v5)
    v5 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v8 = 0xAAAAAAAAAAAAAAALL;
  else
    v8 = v5;
  if (v8)
  {
    if (v8 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60CC();
    v9 = (char *)operator new(24 * v8);
  }
  else
  {
    v9 = 0;
  }
  v10 = &v9[24 * v4];
  v31 = v10;
  v32 = v10;
  v33 = &v9[24 * v8];
  v11 = *a2;
  v12 = *a3;
  v13 = (unint64_t)&(*a3)[-v11];
  if (v13 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  if (v13 <= 0x16)
  {
    v10[23] = v13;
    if ((char *)v11 != v12)
      goto LABEL_14;
LABEL_23:
    v15 = v10;
    goto LABEL_26;
  }
  v20 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v13 | 7) != 0x17)
    v20 = v13 | 7;
  v21 = v20 + 1;
  v22 = (char *)operator new(v20 + 1);
  *((_QWORD *)v10 + 1) = v13;
  *((_QWORD *)v10 + 2) = v21 | 0x8000000000000000;
  *(_QWORD *)v10 = v22;
  v10 = v22;
  if ((char *)v11 == v12)
    goto LABEL_23;
LABEL_14:
  if (v13 < 0x20 || (unint64_t)&v10[-v11] < 0x20)
  {
    v14 = (char *)v11;
    v15 = v10;
    do
    {
LABEL_25:
      v23 = *v14++;
      *v15++ = v23;
    }
    while (v14 != v12);
    goto LABEL_26;
  }
  v14 = (char *)(v11 + (v13 & 0xFFFFFFFFFFFFFFE0));
  v15 = &v10[v13 & 0xFFFFFFFFFFFFFFE0];
  v16 = v10 + 16;
  v17 = (__int128 *)(v11 + 16);
  v18 = v13 & 0xFFFFFFFFFFFFFFE0;
  do
  {
    v19 = *v17;
    *(v16 - 1) = *(v17 - 1);
    *v16 = v19;
    v16 += 2;
    v17 += 2;
    v18 -= 32;
  }
  while (v18);
  if (v13 != (v13 & 0x7FFFFFFFFFFFFFE0))
    goto LABEL_25;
LABEL_26:
  *v15 = 0;
  v24 = v31;
  v25 = v32 + 24;
  v26 = (void **)*a1;
  v27 = (void **)a1[1];
  if (v27 == *a1)
  {
    *a1 = v31;
    a1[1] = v25;
    a1[2] = v33;
  }
  else
  {
    do
    {
      v28 = *(_OWORD *)(v27 - 3);
      *((_QWORD *)v24 - 1) = *(v27 - 1);
      *(_OWORD *)(v24 - 24) = v28;
      v24 -= 24;
      *(v27 - 2) = 0;
      *(v27 - 1) = 0;
      *(v27 - 3) = 0;
      v27 -= 3;
    }
    while (v27 != v26);
    v27 = (void **)*a1;
    v29 = (void **)a1[1];
    *a1 = v24;
    a1[1] = v25;
    a1[2] = v33;
    while (v29 != v27)
    {
      if (*((char *)v29 - 1) < 0)
        operator delete(*(v29 - 3));
      v29 -= 3;
    }
  }
  if (v27)
    operator delete(v27);
  return v32 + 24;
}

void sub_20AF4EA28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC65A4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF4EA3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  if (*(_BYTE *)(a1 + 200))
  {
    v2 = *(_QWORD *)(a1 + 176);
    if (v2)
    {
      v3 = *(_QWORD *)(a1 + 184);
      v4 = *(void **)(a1 + 176);
      if (v3 == v2)
      {
LABEL_14:
        *(_QWORD *)(a1 + 184) = v2;
        operator delete(v4);
        goto LABEL_15;
      }
      while (1)
      {
        if (*(_BYTE *)(v3 - 16) && *(char *)(v3 - 41) < 0)
        {
          operator delete(*(void **)(v3 - 64));
          if (*(_BYTE *)(v3 - 72))
          {
LABEL_9:
            if (*(char *)(v3 - 73) < 0)
              operator delete(*(void **)(v3 - 96));
          }
        }
        else if (*(_BYTE *)(v3 - 72))
        {
          goto LABEL_9;
        }
        v3 -= 96;
        if (v3 == v2)
        {
          v4 = *(void **)(a1 + 176);
          goto LABEL_14;
        }
      }
    }
  }
LABEL_15:
  if (*(_BYTE *)(a1 + 160) && *(char *)(a1 + 135) < 0)
  {
    operator delete(*(void **)(a1 + 112));
    if (!*(_BYTE *)(a1 + 72))
      goto LABEL_21;
  }
  else if (!*(_BYTE *)(a1 + 72))
  {
    goto LABEL_21;
  }
  if (*(char *)(a1 + 71) < 0)
    operator delete(*(void **)(a1 + 48));
LABEL_21:
  if (!*(_BYTE *)(a1 + 40) || (*(char *)(a1 + 39) & 0x80000000) == 0)
    return a1;
  operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_20AF4EB48(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>, float a4@<S1>, float a5@<S2>, float a6@<S3>)
{
  int v12;

  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
  v12 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
  if ((*(unsigned int (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8)))
  {
    if (v12 == 11)
      sub_20AF4FBC8(a2, a1, a3, a4, a5, a6);
    else
      sub_20AF4FFC4(a2, a1, a3, a4, a5, a6);
  }
  else if (v12 == 11)
  {
    sub_20AF4F3A4(a2, a1, a3, a4, a5, a6);
  }
  else
  {
    sub_20AF4F7A0(a2, a1, a3, a4, a5, a6);
  }
}

void sub_20AF4EC84(uint64_t a1, int a2)
{
  int v4;
  int v5;
  int v6;
  const void *v7;
  float32x2_t *v8;
  float32x2_t *v9;
  float64x2_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  __int128 v13;
  float64x2_t v14;
  float64x2_t v15;
  unint64_t *v16;
  std::__shared_weak_count *v17;
  unint64_t v18;
  unint64_t v19;
  const void *v20;
  float32x2_t *v21;
  float32x2_t *v22;
  float64x2_t v23;
  uint64_t v24;
  __int128 v25;
  float64x2_t v26;
  float64x2_t v27;
  unint64_t *p_shared_owners;
  unint64_t v29;
  const void *v30;
  float32x4_t *v31;
  float32x2_t v32;
  float32x4_t *v33;
  float32x4_t v34;
  float64x2_t v35;
  __int16 v36;
  std::__shared_weak_count_vtbl *v37;
  unint64_t *v38;
  __int128 v39;
  std::__shared_count v40;
  __int128 v41;
  float64x2_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  const void *v47;
  float32x4_t *v48;
  float32x2_t v49;
  float32x4_t *v50;
  float32x4_t v51;
  float64x2_t v52;
  __int16 v53;
  std::__shared_weak_count_vtbl *v54;
  unint64_t *v55;
  __int128 v56;
  std::__shared_count v57;
  __int128 v58;
  float64x2_t v59;
  unint64_t v60;
  __int128 *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  char v72[8];
  __int128 v73;
  __int128 v74;
  std::__shared_count v75;
  __int128 v76;
  float64x2_t v77;
  _BYTE v78[56];
  float64x2_t v79;
  std::__shared_count v80;
  __int128 v81;
  uint64_t v82;
  __int16 v83;
  float64x2_t v84;
  float64x2_t v85;
  std::__shared_count v86;
  __int128 v87;
  uint64_t v88;
  _BYTE v89[20];
  std::__shared_count v90;
  std::__shared_count v91;
  __int128 v92;
  uint64_t v93;
  float64x2_t v94;
  float64x2_t v95;
  float64x2_t v96;
  float64x2_t v97;
  std::__shared_weak_count_vtbl *v98;
  uint64_t v99;
  int v100;
  uint64_t v101;

  v101 = *MEMORY[0x24BDAC8D0];
  v4 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
  if (a2 != 12 || v4 != 11)
    return;
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 24))(*(_QWORD *)(a1 + 8));
  if (v5 == 1)
  {
    if (v6 == 1)
    {
      v20 = *(const void **)(a1 + 8);
      if (v20)
      {
        v21 = (float32x2_t *)__dynamic_cast(v20, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5CD0, 0);
        if (v21)
        {
          v22 = v21;
          v23 = vcvtq_f64_f32(v21[3]);
          v84 = vcvtq_f64_f32(v21[2]);
          v85 = v23;
          sub_20AF55240((uint64_t)v72, (uint64_t *)&v84);
          *(_OWORD *)v89 = v73;
          v69 = v74;
          v91 = v75;
          v92 = v76;
          v96 = *(float64x2_t *)&v78[16];
          v97 = *(float64x2_t *)&v78[32];
          v98 = *(std::__shared_weak_count_vtbl **)&v78[48];
          v94 = v77;
          v95 = *(float64x2_t *)v78;
          v24 = (uint64_t)v22[11];
          v12 = (std::__shared_weak_count *)operator new(0xB8uLL);
          *(_OWORD *)&v12[1].__shared_weak_owners_ = *(_OWORD *)v89;
          *(_OWORD *)&v12[2].__shared_owners_ = v69;
          v25 = v92;
          v12[3].std::__shared_count = v91;
          *(_OWORD *)&v12[3].__shared_weak_owners_ = v25;
          v26 = v94;
          v12[5].std::__shared_count = (std::__shared_count)v95;
          v27 = v97;
          *(float64x2_t *)&v12[5].__shared_weak_owners_ = v96;
          *(float64x2_t *)&v12[6].__shared_owners_ = v27;
          v12->__shared_owners_ = 0;
          p_shared_owners = (unint64_t *)&v12->__shared_owners_;
          v12->__shared_weak_owners_ = 0;
          v12->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5878;
          v12[1].__shared_owners_ = (uint64_t)&off_24C3F5508;
          v12[7].__vftable = v98;
          *(float64x2_t *)&v12[4].__shared_owners_ = v26;
          v12[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F57F8;
          v17 = v12 + 1;
          v12[7].__shared_owners_ = v24;
          do
            v29 = __ldxr(p_shared_owners);
          while (__stxr(v29 + 1, p_shared_owners));
          do
            v19 = __ldaxr(p_shared_owners);
          while (__stlxr(v19 - 1, p_shared_owners));
          goto LABEL_25;
        }
      }
      v61 = sub_20AF56C34();
      goto LABEL_43;
    }
    goto LABEL_20;
  }
  if (v5)
    goto LABEL_20;
  if (v6 == 2)
  {
    v47 = *(const void **)(a1 + 8);
    if (v47)
    {
      v48 = (float32x4_t *)__dynamic_cast(v47, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5EE0, 0);
      if (v48)
      {
        v50 = v48;
        v49.i32[0] = v48[3].i32[0];
        v51 = v48[2];
        v52 = vcvtq_f64_f32(*(float32x2_t *)&v48[1].u32[2]);
        v94 = vcvtq_f64_f32(*(float32x2_t *)v48[1].f32);
        v95 = v52;
        v96 = vcvtq_f64_f32(*(float32x2_t *)v51.f32);
        v97 = vcvt_hight_f64_f32(v51);
        v98 = (std::__shared_weak_count_vtbl *)*(_OWORD *)&vcvtq_f64_f32(v49);
        v99 = 0x3EE4F8B588E368F1;
        v100 = 10;
        sub_20AF565F0((uint64_t)v72, (uint64_t *)&v94);
        v93 = *(_QWORD *)&v77.f64[0];
        v67 = v74;
        v71 = v73;
        v91 = v75;
        v92 = v76;
        v63 = *(_QWORD *)&v77.f64[1];
        v65 = *(_DWORD *)v78;
        *(_OWORD *)&v89[4] = *(_OWORD *)&v78[8];
        v90 = *(std::__shared_count *)&v78[24];
        v88 = v82;
        v86 = v80;
        v87 = v81;
        v84 = *(float64x2_t *)&v78[40];
        v85 = v79;
        v53 = v83;
        v54 = (std::__shared_weak_count_vtbl *)v50[7].i64[1];
        v12 = (std::__shared_weak_count *)operator new(0xF8uLL);
        v12->__shared_owners_ = 0;
        v55 = (unint64_t *)&v12->__shared_owners_;
        v12->__shared_weak_owners_ = 0;
        v12->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F57A8;
        v12[1].__shared_owners_ = (uint64_t)&off_24C3F56C8;
        *(_OWORD *)&v12[1].__shared_weak_owners_ = v71;
        *(_OWORD *)&v12[2].__shared_owners_ = v67;
        v56 = v92;
        v12[3].std::__shared_count = v91;
        *(_OWORD *)&v12[3].__shared_weak_owners_ = v56;
        v12[4].__shared_owners_ = v93;
        v12[4].__shared_weak_owners_ = v63;
        LODWORD(v12[5].__vftable) = v65;
        v57 = v90;
        *(_OWORD *)&v12[5].__shared_owners_ = *(_OWORD *)&v89[4];
        v12[6].std::__shared_count = v57;
        v12[9].__shared_owners_ = v88;
        v58 = v87;
        v12[8].std::__shared_count = v86;
        *(_OWORD *)&v12[8].__shared_weak_owners_ = v58;
        v59 = v85;
        *(float64x2_t *)&v12[6].__shared_weak_owners_ = v84;
        *(float64x2_t *)&v12[7].__shared_owners_ = v59;
        LOWORD(v12[9].__shared_weak_owners_) = v53;
        v12[10].__vftable = v54;
        v12[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5728;
        v17 = v12 + 1;
        do
          v60 = __ldxr(v55);
        while (__stxr(v60 + 1, v55));
        do
          v19 = __ldaxr(v55);
        while (__stlxr(v19 - 1, v55));
        goto LABEL_25;
      }
    }
    v61 = sub_20AF59324();
    goto LABEL_43;
  }
  if (v6 != 1)
  {
LABEL_20:
    v30 = *(const void **)(a1 + 8);
    if (v30)
    {
      v31 = (float32x4_t *)__dynamic_cast(v30, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5E80, 0);
      if (v31)
      {
        v33 = v31;
        v32.i32[0] = v31[3].i32[0];
        v34 = v31[2];
        v35 = vcvtq_f64_f32(*(float32x2_t *)&v31[1].u32[2]);
        v94 = vcvtq_f64_f32(*(float32x2_t *)v31[1].f32);
        v95 = v35;
        v96 = vcvtq_f64_f32(*(float32x2_t *)v34.f32);
        v97 = vcvt_hight_f64_f32(v34);
        v98 = (std::__shared_weak_count_vtbl *)*(_OWORD *)&vcvtq_f64_f32(v32);
        v99 = 0x3EE4F8B588E368F1;
        v100 = 10;
        sub_20AF565F0((uint64_t)v72, (uint64_t *)&v94);
        v93 = *(_QWORD *)&v77.f64[0];
        v66 = v74;
        v70 = v73;
        v91 = v75;
        v92 = v76;
        v62 = *(_QWORD *)&v77.f64[1];
        v64 = *(_DWORD *)v78;
        *(_OWORD *)&v89[4] = *(_OWORD *)&v78[8];
        v90 = *(std::__shared_count *)&v78[24];
        v88 = v82;
        v86 = v80;
        v87 = v81;
        v84 = *(float64x2_t *)&v78[40];
        v85 = v79;
        v36 = v83;
        v37 = (std::__shared_weak_count_vtbl *)v33[7].i64[1];
        v12 = (std::__shared_weak_count *)operator new(0xF8uLL);
        v12->__shared_owners_ = 0;
        v38 = (unint64_t *)&v12->__shared_owners_;
        v12->__shared_weak_owners_ = 0;
        v12->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5948;
        v12[1].__shared_owners_ = (uint64_t)&off_24C3F56C8;
        *(_OWORD *)&v12[1].__shared_weak_owners_ = v70;
        *(_OWORD *)&v12[2].__shared_owners_ = v66;
        v39 = v92;
        v12[3].std::__shared_count = v91;
        *(_OWORD *)&v12[3].__shared_weak_owners_ = v39;
        v12[4].__shared_owners_ = v93;
        v12[4].__shared_weak_owners_ = v62;
        LODWORD(v12[5].__vftable) = v64;
        v40 = v90;
        *(_OWORD *)&v12[5].__shared_owners_ = *(_OWORD *)&v89[4];
        v12[6].std::__shared_count = v40;
        v12[9].__shared_owners_ = v88;
        v41 = v87;
        v12[8].std::__shared_count = v86;
        *(_OWORD *)&v12[8].__shared_weak_owners_ = v41;
        v42 = v85;
        *(float64x2_t *)&v12[6].__shared_weak_owners_ = v84;
        *(float64x2_t *)&v12[7].__shared_owners_ = v42;
        LOWORD(v12[9].__shared_weak_owners_) = v36;
        v12[10].__vftable = v37;
        v12[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F58C8;
        v17 = v12 + 1;
        do
          v43 = __ldxr(v38);
        while (__stxr(v43 + 1, v38));
        do
          v19 = __ldaxr(v38);
        while (__stlxr(v19 - 1, v38));
        goto LABEL_25;
      }
    }
    v61 = sub_20AF596D4();
LABEL_43:
    sub_20B449200(a1, (const char *)v61, (uint64_t)"trying to cast camera");
  }
  v7 = *(const void **)(a1 + 8);
  if (!v7
    || (v8 = (float32x2_t *)__dynamic_cast(v7, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5E20, 0)) == 0)
  {
    v61 = sub_20AF54BF0();
    goto LABEL_43;
  }
  v9 = v8;
  v10 = vcvtq_f64_f32(v8[3]);
  v84 = vcvtq_f64_f32(v8[2]);
  v85 = v10;
  sub_20AF55240((uint64_t)v72, (uint64_t *)&v84);
  *(_OWORD *)v89 = v73;
  v68 = v74;
  v91 = v75;
  v92 = v76;
  v96 = *(float64x2_t *)&v78[16];
  v97 = *(float64x2_t *)&v78[32];
  v98 = *(std::__shared_weak_count_vtbl **)&v78[48];
  v94 = v77;
  v95 = *(float64x2_t *)v78;
  v11 = (uint64_t)v9[11];
  v12 = (std::__shared_weak_count *)operator new(0xB8uLL);
  *(_OWORD *)&v12[1].__shared_weak_owners_ = *(_OWORD *)v89;
  *(_OWORD *)&v12[2].__shared_owners_ = v68;
  v13 = v92;
  v12[3].std::__shared_count = v91;
  *(_OWORD *)&v12[3].__shared_weak_owners_ = v13;
  v14 = v94;
  v12[5].std::__shared_count = (std::__shared_count)v95;
  v15 = v97;
  *(float64x2_t *)&v12[5].__shared_weak_owners_ = v96;
  *(float64x2_t *)&v12[6].__shared_owners_ = v15;
  v12->__shared_owners_ = 0;
  v16 = (unint64_t *)&v12->__shared_owners_;
  v12->__shared_weak_owners_ = 0;
  v12->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5678;
  v12[1].__shared_owners_ = (uint64_t)&off_24C3F5508;
  v12[7].__vftable = v98;
  *(float64x2_t *)&v12[4].__shared_owners_ = v14;
  v12[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F55F8;
  v17 = v12 + 1;
  v12[7].__shared_owners_ = v11;
  do
    v18 = __ldxr(v16);
  while (__stxr(v18 + 1, v16));
  do
    v19 = __ldaxr(v16);
  while (__stlxr(v19 - 1, v16));
LABEL_25:
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  v44 = *(std::__shared_weak_count **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v17;
  *(_QWORD *)(a1 + 16) = v12;
  if (v44)
  {
    v45 = (unint64_t *)&v44->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
      std::__shared_weak_count::__release_weak(v44);
    }
  }
}

void sub_20AF4F37C(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

void sub_20AF4F3A4(uint64_t a1, uint64_t a2, float a3, float a4, float a5, float a6)
{
  uint64_t *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  std::__shared_weak_count *v17;
  __int128 v18;
  unint64_t *v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  int v26;
  uint64_t v27;
  __int128 v28;
  void *v29[2];
  uint64_t v30;
  void *__p[2];
  uint64_t v32;
  char v33;
  char v34[8];
  uint64_t v35;
  void *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  int v40;
  void *v41;
  char v42;
  char v43;
  char v44;
  char v45;
  float v46[4];
  char v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  unsigned __int8 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;

  v59 = *MEMORY[0x24BDAC8D0];
  v46[0] = a3;
  v46[1] = a4;
  v46[2] = a5;
  v46[3] = a6;
  sub_20AF575C4((uint64_t)v34, v46);
  if (v45)
  {
    v29[0] = (void *)__PAIR64__(LODWORD(a4), LODWORD(a3));
    v29[1] = (void *)__PAIR64__(LODWORD(a6), LODWORD(a5));
    v12 = (uint64_t *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 8) + 40))(*(_QWORD *)(a2 + 8));
    sub_20AF57428((uint64_t)v34, (int *)v29);
    v13 = v35;
    v14 = v36;
    v28 = v37;
    v48 = v38;
    v49 = v39;
    LODWORD(v50) = v40;
    v15 = *v12;
    v16 = (char *)operator new(0x78uLL);
    v17 = (std::__shared_weak_count *)v16;
    *(_OWORD *)(v16 + 56) = v28;
    v18 = v49;
    *(_OWORD *)(v16 + 72) = v48;
    *((_QWORD *)v16 + 1) = 0;
    v19 = (unint64_t *)(v16 + 8);
    *((_QWORD *)v16 + 2) = 0;
    *(_QWORD *)v16 = &off_24C3F59D8;
    *((_QWORD *)v16 + 3) = &off_24C3F5998;
    v20 = v16 + 24;
    *((_QWORD *)v16 + 4) = &off_24C3F5D38;
    *((_QWORD *)v16 + 5) = v13;
    *((_QWORD *)v16 + 6) = v14;
    *(_OWORD *)(v16 + 88) = v18;
    *((_DWORD *)v16 + 26) = v50;
    *((_QWORD *)v16 + 14) = v15;
    do
      v21 = __ldxr(v19);
    while (__stxr(v21 + 1, v19));
    do
      v22 = __ldaxr(v19);
    while (__stlxr(v22 - 1, v19));
    if (!v22)
    {
      (*(void (**)(char *))(*(_QWORD *)v16 + 16))(v16);
      std::__shared_weak_count::__release_weak(v17);
    }
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    *(_QWORD *)(a2 + 8) = v20;
    *(_QWORD *)(a2 + 16) = v17;
    if (v23)
    {
      p_shared_owners = (unint64_t *)&v23->__shared_owners_;
      do
        v25 = __ldaxr(p_shared_owners);
      while (__stlxr(v25 - 1, p_shared_owners));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    *(_BYTE *)(a1 + 120) = 1;
  }
  else
  {
    DWORD2(v49) = 0;
    sub_20AF57E5C((uint64_t)v29, (std::string::size_type)&v48, (uint64_t)v34);
    if (DWORD2(v49) == -1)
      sub_20AECFAB8();
    *(_QWORD *)&v28 = &v47;
    ((void (*)(void **__return_ptr, __int128 *, __int128 *))off_24C3F55D0[DWORD2(v49)])(v29, &v28, &v48);
    if (DWORD2(v49) != -1)
      ((void (*)(__int128 *, __int128 *))off_24C3F5558[DWORD2(v49)])(&v28, &v48);
    *(_OWORD *)__p = *(_OWORD *)v29;
    v32 = v30;
    v29[0] = 0;
    v29[1] = 0;
    v30 = 0;
    v33 = 1;
    sub_20B099E24((__int128 *)__p, (uint64_t)&v48);
    *(_OWORD *)a1 = v48;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (v58)
    {
      *(_BYTE *)(a1 + 40) = 0;
      v26 = v51;
      if (v51)
      {
        *(_OWORD *)(a1 + 16) = v49;
        *(_QWORD *)(a1 + 32) = v50;
        v50 = 0;
        v49 = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if (v57)
      {
        v27 = v54;
        *(_QWORD *)(a1 + 64) = v53;
        *(_OWORD *)(a1 + 48) = v52;
        v52 = 0uLL;
        *(_QWORD *)(a1 + 72) = v27;
        *(_OWORD *)(a1 + 80) = v55;
        *(_QWORD *)(a1 + 96) = v56;
        v53 = 0;
        v55 = 0uLL;
        v56 = 0;
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (v26 && SHIBYTE(v50) < 0)
        operator delete((void *)v49);
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 0;
    }
    if (v33 && SHIBYTE(v32) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v30) < 0)
    {
      operator delete(v29[0]);
      if (v45)
        return;
    }
    else if (v45)
    {
      return;
    }
    if (v44)
    {
      if (v43)
      {
        if (v42 < 0)
          operator delete(v41);
        if (SHIBYTE(v39) < 0)
          operator delete(*((void **)&v38 + 1));
      }
      if ((_BYTE)v38 && SHIBYTE(v37) < 0)
        operator delete(v36);
    }
  }
}

void sub_20AF4F76C(_Unwind_Exception *exception_object, int a2)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20AEC01C0(exception_object);
}

void sub_20AF4F7A0(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  std::__shared_weak_count *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  unint64_t *v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  int v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  void *v32[2];
  double v33;
  double v34;
  void *__p[2];
  double v36;
  char v37;
  double v38[4];
  char v39[8];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;

  v59 = *MEMORY[0x24BDAC8D0];
  v38[0] = a3;
  v38[1] = a4;
  v38[2] = a5;
  v38[3] = a6;
  sub_20AF553D8((uint64_t)v39, v38);
  if ((_BYTE)v47)
  {
    v32[0] = *(void **)&a3;
    v32[1] = *(void **)&a4;
    v33 = a5;
    v34 = a6;
    v12 = (uint64_t *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 8) + 40))(*(_QWORD *)(a2 + 8));
    sub_20AF55240((uint64_t)v39, (uint64_t *)v32);
    v30 = v41;
    v31 = v40;
    v28 = v42;
    v29 = v43;
    v51 = v46;
    v52 = v47;
    v53 = v48;
    v49 = v44;
    v50 = v45;
    v13 = *v12;
    v14 = (char *)operator new(0xB8uLL);
    v15 = (std::__shared_weak_count *)v14;
    *(_OWORD *)(v14 + 40) = v31;
    v16 = v29;
    *(_OWORD *)(v14 + 56) = v30;
    *(_OWORD *)(v14 + 72) = v28;
    *(_OWORD *)(v14 + 88) = v16;
    v17 = v49;
    *(_OWORD *)(v14 + 120) = v50;
    v18 = v52;
    *(_OWORD *)(v14 + 136) = v51;
    *(_OWORD *)(v14 + 152) = v18;
    *((_QWORD *)v14 + 1) = 0;
    v19 = (unint64_t *)(v14 + 8);
    *((_QWORD *)v14 + 2) = 0;
    *(_QWORD *)v14 = &off_24C3F5678;
    *((_QWORD *)v14 + 4) = &off_24C3F5508;
    *((_QWORD *)v14 + 21) = v53;
    *(_OWORD *)(v14 + 104) = v17;
    *((_QWORD *)v14 + 3) = &off_24C3F55F8;
    v20 = v14 + 24;
    *((_QWORD *)v14 + 22) = v13;
    do
      v21 = __ldxr(v19);
    while (__stxr(v21 + 1, v19));
    do
      v22 = __ldaxr(v19);
    while (__stlxr(v22 - 1, v19));
    if (!v22)
    {
      (*(void (**)(char *))(*(_QWORD *)v14 + 16))(v14);
      std::__shared_weak_count::__release_weak(v15);
    }
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    *(_QWORD *)(a2 + 8) = v20;
    *(_QWORD *)(a2 + 16) = v15;
    if (v23)
    {
      p_shared_owners = (unint64_t *)&v23->__shared_owners_;
      do
        v25 = __ldaxr(p_shared_owners);
      while (__stlxr(v25 - 1, p_shared_owners));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    *(_BYTE *)(a1 + 120) = 1;
  }
  else
  {
    DWORD2(v50) = 0;
    sub_20AF57E5C((uint64_t)v32, (std::string::size_type)&v49, (uint64_t)v39);
    if (DWORD2(v50) == -1)
      sub_20AECFAB8();
    *(_QWORD *)&v28 = &v31;
    ((void (*)(void **__return_ptr, __int128 *, __int128 *))off_24C3F55D0[DWORD2(v50)])(v32, &v28, &v49);
    if (DWORD2(v50) != -1)
      ((void (*)(__int128 *, __int128 *))off_24C3F5558[DWORD2(v50)])(&v28, &v49);
    *(_OWORD *)__p = *(_OWORD *)v32;
    v36 = v33;
    v32[0] = 0;
    v32[1] = 0;
    v33 = 0.0;
    v37 = 1;
    sub_20B099E24((__int128 *)__p, (uint64_t)&v49);
    *(_OWORD *)a1 = v49;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (v58)
    {
      *(_BYTE *)(a1 + 40) = 0;
      v26 = BYTE8(v51);
      if (BYTE8(v51))
      {
        *(_OWORD *)(a1 + 16) = v50;
        *(_QWORD *)(a1 + 32) = v51;
        *(_QWORD *)&v51 = 0;
        v50 = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if (v57)
      {
        v27 = v54;
        *(_QWORD *)(a1 + 64) = v53;
        *(_OWORD *)(a1 + 48) = v52;
        v52 = 0uLL;
        *(_QWORD *)(a1 + 72) = v27;
        *(_OWORD *)(a1 + 80) = v55;
        *(_QWORD *)(a1 + 96) = v56;
        v53 = 0;
        v55 = 0uLL;
        v56 = 0;
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (v26 && SBYTE7(v51) < 0)
        operator delete((void *)v50);
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 0;
    }
    if (v37 && SHIBYTE(v36) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v33) < 0)
    {
      operator delete(v32[0]);
      if ((_BYTE)v47)
        return;
    }
    else if ((_BYTE)v47)
    {
      return;
    }
    if (BYTE8(v46))
    {
      if ((_BYTE)v46)
      {
        if (SHIBYTE(v45) < 0)
          operator delete(*((void **)&v44 + 1));
        if (SHIBYTE(v43) < 0)
          operator delete(*((void **)&v42 + 1));
      }
      if ((_BYTE)v42 && SHIBYTE(v41) < 0)
        operator delete(*((void **)&v40 + 1));
    }
  }
}

void sub_20AF4FB94(_Unwind_Exception *exception_object, int a2)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20AEC01C0(exception_object);
}

void sub_20AF4FBC8(uint64_t a1, uint64_t a2, float a3, float a4, float a5, float a6)
{
  uint64_t *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  std::__shared_weak_count *v17;
  __int128 v18;
  unint64_t *v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  int v26;
  uint64_t v27;
  __int128 v28;
  void *v29[2];
  uint64_t v30;
  void *__p[2];
  uint64_t v32;
  char v33;
  char v34[8];
  uint64_t v35;
  void *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  int v40;
  void *v41;
  char v42;
  char v43;
  char v44;
  char v45;
  float v46[4];
  char v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  unsigned __int8 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;

  v59 = *MEMORY[0x24BDAC8D0];
  v46[0] = a3;
  v46[1] = a4;
  v46[2] = a5;
  v46[3] = a6;
  sub_20AF575C4((uint64_t)v34, v46);
  if (v45)
  {
    v29[0] = (void *)__PAIR64__(LODWORD(a4), LODWORD(a3));
    v29[1] = (void *)__PAIR64__(LODWORD(a6), LODWORD(a5));
    v12 = (uint64_t *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 8) + 40))(*(_QWORD *)(a2 + 8));
    sub_20AF57428((uint64_t)v34, (int *)v29);
    v13 = v35;
    v14 = v36;
    v28 = v37;
    v48 = v38;
    v49 = v39;
    LODWORD(v50) = v40;
    v15 = *v12;
    v16 = (char *)operator new(0x78uLL);
    v17 = (std::__shared_weak_count *)v16;
    *(_OWORD *)(v16 + 56) = v28;
    v18 = v49;
    *(_OWORD *)(v16 + 72) = v48;
    *((_QWORD *)v16 + 1) = 0;
    v19 = (unint64_t *)(v16 + 8);
    *((_QWORD *)v16 + 2) = 0;
    *(_QWORD *)v16 = &off_24C3F5D98;
    *((_QWORD *)v16 + 3) = &off_24C3F5C88;
    v20 = v16 + 24;
    *((_QWORD *)v16 + 4) = &off_24C3F5D38;
    *((_QWORD *)v16 + 5) = v13;
    *((_QWORD *)v16 + 6) = v14;
    *(_OWORD *)(v16 + 88) = v18;
    *((_DWORD *)v16 + 26) = v50;
    *((_QWORD *)v16 + 14) = v15;
    do
      v21 = __ldxr(v19);
    while (__stxr(v21 + 1, v19));
    do
      v22 = __ldaxr(v19);
    while (__stlxr(v22 - 1, v19));
    if (!v22)
    {
      (*(void (**)(char *))(*(_QWORD *)v16 + 16))(v16);
      std::__shared_weak_count::__release_weak(v17);
    }
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    *(_QWORD *)(a2 + 8) = v20;
    *(_QWORD *)(a2 + 16) = v17;
    if (v23)
    {
      p_shared_owners = (unint64_t *)&v23->__shared_owners_;
      do
        v25 = __ldaxr(p_shared_owners);
      while (__stlxr(v25 - 1, p_shared_owners));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    *(_BYTE *)(a1 + 120) = 1;
  }
  else
  {
    DWORD2(v49) = 0;
    sub_20AF57E5C((uint64_t)v29, (std::string::size_type)&v48, (uint64_t)v34);
    if (DWORD2(v49) == -1)
      sub_20AECFAB8();
    *(_QWORD *)&v28 = &v47;
    ((void (*)(void **__return_ptr, __int128 *, __int128 *))off_24C3F55D0[DWORD2(v49)])(v29, &v28, &v48);
    if (DWORD2(v49) != -1)
      ((void (*)(__int128 *, __int128 *))off_24C3F5558[DWORD2(v49)])(&v28, &v48);
    *(_OWORD *)__p = *(_OWORD *)v29;
    v32 = v30;
    v29[0] = 0;
    v29[1] = 0;
    v30 = 0;
    v33 = 1;
    sub_20B099E24((__int128 *)__p, (uint64_t)&v48);
    *(_OWORD *)a1 = v48;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (v58)
    {
      *(_BYTE *)(a1 + 40) = 0;
      v26 = v51;
      if (v51)
      {
        *(_OWORD *)(a1 + 16) = v49;
        *(_QWORD *)(a1 + 32) = v50;
        v50 = 0;
        v49 = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if (v57)
      {
        v27 = v54;
        *(_QWORD *)(a1 + 64) = v53;
        *(_OWORD *)(a1 + 48) = v52;
        v52 = 0uLL;
        *(_QWORD *)(a1 + 72) = v27;
        *(_OWORD *)(a1 + 80) = v55;
        *(_QWORD *)(a1 + 96) = v56;
        v53 = 0;
        v55 = 0uLL;
        v56 = 0;
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (v26 && SHIBYTE(v50) < 0)
        operator delete((void *)v49);
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 0;
    }
    if (v33 && SHIBYTE(v32) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v30) < 0)
    {
      operator delete(v29[0]);
      if (v45)
        return;
    }
    else if (v45)
    {
      return;
    }
    if (v44)
    {
      if (v43)
      {
        if (v42 < 0)
          operator delete(v41);
        if (SHIBYTE(v39) < 0)
          operator delete(*((void **)&v38 + 1));
      }
      if ((_BYTE)v38 && SHIBYTE(v37) < 0)
        operator delete(v36);
    }
  }
}

void sub_20AF4FF90(_Unwind_Exception *exception_object, int a2)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20AEC01C0(exception_object);
}

void sub_20AF4FFC4(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  std::__shared_weak_count *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  unint64_t *v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  int v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  void *v32[2];
  double v33;
  double v34;
  void *__p[2];
  double v36;
  char v37;
  double v38[4];
  char v39[8];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;

  v59 = *MEMORY[0x24BDAC8D0];
  v38[0] = a3;
  v38[1] = a4;
  v38[2] = a5;
  v38[3] = a6;
  sub_20AF553D8((uint64_t)v39, v38);
  if ((_BYTE)v47)
  {
    v32[0] = *(void **)&a3;
    v32[1] = *(void **)&a4;
    v33 = a5;
    v34 = a6;
    v12 = (uint64_t *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 8) + 40))(*(_QWORD *)(a2 + 8));
    sub_20AF55240((uint64_t)v39, (uint64_t *)v32);
    v30 = v41;
    v31 = v40;
    v28 = v42;
    v29 = v43;
    v51 = v46;
    v52 = v47;
    v53 = v48;
    v49 = v44;
    v50 = v45;
    v13 = *v12;
    v14 = (char *)operator new(0xB8uLL);
    v15 = (std::__shared_weak_count *)v14;
    *(_OWORD *)(v14 + 40) = v31;
    v16 = v29;
    *(_OWORD *)(v14 + 56) = v30;
    *(_OWORD *)(v14 + 72) = v28;
    *(_OWORD *)(v14 + 88) = v16;
    v17 = v49;
    *(_OWORD *)(v14 + 120) = v50;
    v18 = v52;
    *(_OWORD *)(v14 + 136) = v51;
    *(_OWORD *)(v14 + 152) = v18;
    *((_QWORD *)v14 + 1) = 0;
    v19 = (unint64_t *)(v14 + 8);
    *((_QWORD *)v14 + 2) = 0;
    *(_QWORD *)v14 = &off_24C3F5878;
    *((_QWORD *)v14 + 4) = &off_24C3F5508;
    *((_QWORD *)v14 + 21) = v53;
    *(_OWORD *)(v14 + 104) = v17;
    *((_QWORD *)v14 + 3) = &off_24C3F57F8;
    v20 = v14 + 24;
    *((_QWORD *)v14 + 22) = v13;
    do
      v21 = __ldxr(v19);
    while (__stxr(v21 + 1, v19));
    do
      v22 = __ldaxr(v19);
    while (__stlxr(v22 - 1, v19));
    if (!v22)
    {
      (*(void (**)(char *))(*(_QWORD *)v14 + 16))(v14);
      std::__shared_weak_count::__release_weak(v15);
    }
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    *(_QWORD *)(a2 + 8) = v20;
    *(_QWORD *)(a2 + 16) = v15;
    if (v23)
    {
      p_shared_owners = (unint64_t *)&v23->__shared_owners_;
      do
        v25 = __ldaxr(p_shared_owners);
      while (__stlxr(v25 - 1, p_shared_owners));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    *(_BYTE *)(a1 + 120) = 1;
  }
  else
  {
    DWORD2(v50) = 0;
    sub_20AF57E5C((uint64_t)v32, (std::string::size_type)&v49, (uint64_t)v39);
    if (DWORD2(v50) == -1)
      sub_20AECFAB8();
    *(_QWORD *)&v28 = &v31;
    ((void (*)(void **__return_ptr, __int128 *, __int128 *))off_24C3F55D0[DWORD2(v50)])(v32, &v28, &v49);
    if (DWORD2(v50) != -1)
      ((void (*)(__int128 *, __int128 *))off_24C3F5558[DWORD2(v50)])(&v28, &v49);
    *(_OWORD *)__p = *(_OWORD *)v32;
    v36 = v33;
    v32[0] = 0;
    v32[1] = 0;
    v33 = 0.0;
    v37 = 1;
    sub_20B099E24((__int128 *)__p, (uint64_t)&v49);
    *(_OWORD *)a1 = v49;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (v58)
    {
      *(_BYTE *)(a1 + 40) = 0;
      v26 = BYTE8(v51);
      if (BYTE8(v51))
      {
        *(_OWORD *)(a1 + 16) = v50;
        *(_QWORD *)(a1 + 32) = v51;
        *(_QWORD *)&v51 = 0;
        v50 = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if (v57)
      {
        v27 = v54;
        *(_QWORD *)(a1 + 64) = v53;
        *(_OWORD *)(a1 + 48) = v52;
        v52 = 0uLL;
        *(_QWORD *)(a1 + 72) = v27;
        *(_OWORD *)(a1 + 80) = v55;
        *(_QWORD *)(a1 + 96) = v56;
        v53 = 0;
        v55 = 0uLL;
        v56 = 0;
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (v26 && SBYTE7(v51) < 0)
        operator delete((void *)v50);
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 0;
    }
    if (v37 && SHIBYTE(v36) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v33) < 0)
    {
      operator delete(v32[0]);
      if ((_BYTE)v47)
        return;
    }
    else if ((_BYTE)v47)
    {
      return;
    }
    if (BYTE8(v46))
    {
      if ((_BYTE)v46)
      {
        if (SHIBYTE(v45) < 0)
          operator delete(*((void **)&v44 + 1));
        if (SHIBYTE(v43) < 0)
          operator delete(*((void **)&v42 + 1));
      }
      if ((_BYTE)v42 && SHIBYTE(v41) < 0)
        operator delete(*((void **)&v40 + 1));
    }
  }
}

void sub_20AF503B8(_Unwind_Exception *exception_object, int a2)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20AEC01C0(exception_object);
}

void sub_20AF503EC(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  int v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;

  sub_20AF4EC84(a1, 12);
  v12 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
  if ((*(unsigned int (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8)))
  {
    if (v12 == 11)
    {
      v13 = a3;
      v14 = a4;
      v15 = a5;
      v16 = a6;
      sub_20AF4FBC8(a2, a1, v13, v14, v15, v16);
    }
    else
    {
      sub_20AF4FFC4(a2, a1, a3, a4, a5, a6);
    }
  }
  else if (v12 == 11)
  {
    v17 = a3;
    v18 = a4;
    v19 = a5;
    v20 = a6;
    sub_20AF4F3A4(a2, a1, v17, v18, v19, v20);
  }
  else
  {
    sub_20AF4F7A0(a2, a1, a3, a4, a5, a6);
  }
}

void sub_20AF5051C(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>, float a4@<S1>, float a5@<S2>, float a6@<S3>, float a7@<S4>, float a8@<S5>, float a9@<S6>, float a10@<S7>, int a11)
{
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int32x2_t v27;

  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
  v20 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
  if ((*(unsigned int (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8)))
  {
    if (v20 == 11)
    {
      *(float *)v27.i32 = a4;
      sub_20AF50ECC(a2, a1, a3, v27, a5, a6, a7, a8, a9, a10, v21, v22, v23, v24, v25, v26, a11);
    }
    else
    {
      sub_20AF512AC(a2, a1, a3, a4, a5, a6, a7, a8, a9, a10, v21, v22, v23, v24, v25, v26, COERCE__INT64(*(float *)&a11));
    }
  }
  else if (v20 == 11)
  {
    *(float *)v27.i32 = a4;
    sub_20AF506F0(a2, a1, a3, v27, a5, a6, a7, a8, a9, a10, v21, v22, v23, v24, v25, v26, a11);
  }
  else
  {
    sub_20AF50AD0(a2, a1, a3, a4, a5, a6, a7, a8, a9, a10, v21, v22, v23, v24, v25, v26, COERCE__INT64(*(float *)&a11));
  }
}

void sub_20AF506F0(uint64_t a1, uint64_t a2, float a3, int32x2_t a4, float a5, float a6, float a7, float a8, float a9, float a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  int8x16_t v19;
  uint64_t *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  char *v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  int v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *p_shared_owners;
  unint64_t v35;
  int v36;
  uint64_t v37;
  void *v38[2];
  uint64_t v39;
  void *v40[2];
  uint64_t v41;
  char v42;
  __int128 v43;
  __int128 __p;
  uint64_t v45;
  unsigned __int8 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54[8];
  uint64_t v55;
  void *v56;
  __int128 v57;
  int v58;
  _BYTE v59[24];
  _BYTE v60[32];
  int v61;
  __int16 v62;
  char v63;
  char v64;
  int8x16_t v65;
  float v66;
  float v67;
  float v68;
  float v69;
  int v70;
  uint64_t v71;
  char v72;
  char *v73;

  *(float *)&a4.i32[1] = a6;
  v19.i64[0] = LODWORD(a3);
  v19.i64[1] = LODWORD(a5);
  v65 = vorrq_s8((int8x16_t)vshll_n_s32(a4, 0x20uLL), v19);
  v66 = a7;
  v67 = a8;
  v68 = a9;
  v69 = a10;
  v70 = a17;
  v71 = 0xA3727C5ACLL;
  sub_20AF58160((uint64_t)v54, (uint64_t)&v65);
  if (v64)
  {
    sub_20AF584F8((uint64_t)v54, v65.i32);
    v20 = (uint64_t *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 8) + 40))(*(_QWORD *)(a2 + 8));
    v21 = v55;
    v22 = v56;
    v23 = *(_QWORD *)v59;
    v24 = v62;
    v25 = *v20;
    v26 = (char *)operator new(0x98uLL);
    v27 = (std::__shared_weak_count *)v26;
    *((_QWORD *)v26 + 1) = 0;
    v28 = (unint64_t *)(v26 + 8);
    *(_QWORD *)v26 = &off_24C3F5B08;
    *((_QWORD *)v26 + 2) = 0;
    *((_QWORD *)v26 + 4) = &off_24C3F5A28;
    *((_QWORD *)v26 + 5) = v21;
    *((_QWORD *)v26 + 6) = v22;
    *(_OWORD *)(v26 + 56) = v57;
    v29 = v61;
    *((_DWORD *)v26 + 18) = v58;
    *(_QWORD *)(v26 + 76) = v23;
    *(_OWORD *)(v26 + 84) = *(_OWORD *)&v59[8];
    *((_DWORD *)v26 + 33) = v29;
    *(_OWORD *)(v26 + 116) = *(_OWORD *)&v60[16];
    *(_OWORD *)(v26 + 100) = *(_OWORD *)v60;
    *((_QWORD *)v26 + 3) = &off_24C3F5A88;
    v30 = v26 + 24;
    *((_WORD *)v26 + 68) = v24;
    *((_QWORD *)v26 + 18) = v25;
    do
      v31 = __ldxr(v28);
    while (__stxr(v31 + 1, v28));
    do
      v32 = __ldaxr(v28);
    while (__stlxr(v32 - 1, v28));
    if (!v32)
    {
      (*(void (**)(char *))(*(_QWORD *)v26 + 16))(v26);
      std::__shared_weak_count::__release_weak(v27);
    }
    v33 = *(std::__shared_weak_count **)(a2 + 16);
    *(_QWORD *)(a2 + 8) = v30;
    *(_QWORD *)(a2 + 16) = v27;
    if (v33)
    {
      p_shared_owners = (unint64_t *)&v33->__shared_owners_;
      do
        v35 = __ldaxr(p_shared_owners);
      while (__stlxr(v35 - 1, p_shared_owners));
      if (!v35)
      {
        ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
        std::__shared_weak_count::__release_weak(v33);
      }
    }
    *(_BYTE *)(a1 + 120) = 1;
  }
  else
  {
    DWORD2(__p) = 0;
    sub_20AF57E5C((uint64_t)v38, (std::string::size_type)&v43, (uint64_t)v54);
    if (DWORD2(__p) == -1)
      sub_20AECFAB8();
    v73 = &v72;
    ((void (*)(void **__return_ptr, char **, __int128 *))off_24C3F55D0[DWORD2(__p)])(v38, &v73, &v43);
    if (DWORD2(__p) != -1)
      ((void (*)(char **, __int128 *))off_24C3F5558[DWORD2(__p)])(&v73, &v43);
    *(_OWORD *)v40 = *(_OWORD *)v38;
    v41 = v39;
    v38[0] = 0;
    v38[1] = 0;
    v39 = 0;
    v42 = 1;
    sub_20B099E24((__int128 *)v40, (uint64_t)&v43);
    *(_OWORD *)a1 = v43;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (v53)
    {
      *(_BYTE *)(a1 + 40) = 0;
      v36 = v46;
      if (v46)
      {
        *(_OWORD *)(a1 + 16) = __p;
        *(_QWORD *)(a1 + 32) = v45;
        v45 = 0;
        __p = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if (v52)
      {
        v37 = v49;
        *(_QWORD *)(a1 + 64) = v48;
        *(_OWORD *)(a1 + 48) = v47;
        v47 = 0uLL;
        *(_QWORD *)(a1 + 72) = v37;
        *(_OWORD *)(a1 + 80) = v50;
        *(_QWORD *)(a1 + 96) = v51;
        v48 = 0;
        v50 = 0uLL;
        v51 = 0;
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (v36 && SHIBYTE(v45) < 0)
        operator delete((void *)__p);
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 0;
    }
    if (v42 && SHIBYTE(v41) < 0)
      operator delete(v40[0]);
    if (SHIBYTE(v39) < 0)
    {
      operator delete(v38[0]);
      if (v64)
        return;
    }
    else if (v64)
    {
      return;
    }
    if (v63)
    {
      if ((_BYTE)v62)
      {
        if (SHIBYTE(v61) < 0)
          operator delete(*(void **)&v60[12]);
        if ((v60[3] & 0x80000000) != 0)
          operator delete(*(void **)&v59[4]);
      }
      if ((_BYTE)v58 && SHIBYTE(v57) < 0)
        operator delete(v56);
    }
  }
}

void sub_20AF50AA4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_20AECFA60((uint64_t)va);
  sub_20AEC01C0(a1);
}

void sub_20AF50AB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_20AECFA60((uint64_t)va);
  sub_20AEC01C0(a1);
}

void sub_20AF50AD0(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t *v19;
  __int16 v20;
  uint64_t v21;
  char *v22;
  std::__shared_weak_count *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  unint64_t *v28;
  void *v29;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *p_shared_owners;
  unint64_t v34;
  int v35;
  uint64_t v36;
  char v37[8];
  void *v38[2];
  __int128 v39;
  void *v40[2];
  __int128 v41;
  uint64_t v42;
  void *v43;
  int v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  __int16 v52;
  void *v53[2];
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  char v57;
  __int128 v58;
  __int128 __p;
  uint64_t v60;
  unsigned __int8 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69[10];
  int v70;
  char v71;
  char *v72;

  *(double *)v69 = a3;
  *(double *)&v69[1] = a4;
  *(double *)&v69[2] = a5;
  *(double *)&v69[3] = a6;
  *(double *)&v69[4] = a7;
  *(double *)&v69[5] = a8;
  *(double *)&v69[6] = a9;
  *(double *)&v69[7] = a10;
  v69[8] = a17;
  v69[9] = 0x3EE4F8B588E368F1;
  v70 = 10;
  sub_20AF567DC((uint64_t)v37, (uint64_t)v69);
  if (BYTE8(v46))
  {
    sub_20AF565F0((uint64_t)v37, v69);
    v19 = (uint64_t *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 8) + 40))(*(_QWORD *)(a2 + 8));
    v20 = v52;
    v21 = *v19;
    v22 = (char *)operator new(0xF8uLL);
    v23 = (std::__shared_weak_count *)v22;
    *(_OWORD *)(v22 + 40) = *(_OWORD *)v38;
    *(_OWORD *)(v22 + 56) = v39;
    *(_OWORD *)(v22 + 72) = *(_OWORD *)v40;
    *(_OWORD *)(v22 + 88) = v41;
    *((_QWORD *)v22 + 3) = &off_24C3F5728;
    v24 = v22 + 24;
    v25 = v45;
    *((_OWORD *)v22 + 9) = v46;
    *((_OWORD *)v22 + 8) = v25;
    v26 = v49;
    *((_OWORD *)v22 + 13) = v50;
    *((_OWORD *)v22 + 12) = v26;
    v27 = v47;
    *((_OWORD *)v22 + 11) = v48;
    *((_QWORD *)v22 + 1) = 0;
    v28 = (unint64_t *)(v22 + 8);
    *((_QWORD *)v22 + 2) = 0;
    *(_QWORD *)v22 = &off_24C3F57A8;
    *((_QWORD *)v22 + 4) = &off_24C3F56C8;
    v29 = v43;
    *((_QWORD *)v22 + 13) = v42;
    *((_QWORD *)v22 + 14) = v29;
    *((_DWORD *)v22 + 30) = v44;
    *((_QWORD *)v22 + 28) = v51;
    *((_OWORD *)v22 + 10) = v27;
    *((_WORD *)v22 + 116) = v20;
    *((_QWORD *)v22 + 30) = v21;
    do
      v30 = __ldxr(v28);
    while (__stxr(v30 + 1, v28));
    do
      v31 = __ldaxr(v28);
    while (__stlxr(v31 - 1, v28));
    if (!v31)
    {
      (*(void (**)(char *))(*(_QWORD *)v22 + 16))(v22);
      std::__shared_weak_count::__release_weak(v23);
    }
    v32 = *(std::__shared_weak_count **)(a2 + 16);
    *(_QWORD *)(a2 + 8) = v24;
    *(_QWORD *)(a2 + 16) = v23;
    if (v32)
    {
      p_shared_owners = (unint64_t *)&v32->__shared_owners_;
      do
        v34 = __ldaxr(p_shared_owners);
      while (__stlxr(v34 - 1, p_shared_owners));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
    *(_BYTE *)(a1 + 120) = 1;
  }
  else
  {
    DWORD2(__p) = 0;
    sub_20AF57E5C((uint64_t)v53, (std::string::size_type)&v58, (uint64_t)v37);
    if (DWORD2(__p) == -1)
      sub_20AECFAB8();
    v72 = &v71;
    ((void (*)(void **__return_ptr, char **, __int128 *))off_24C3F55D0[DWORD2(__p)])(v53, &v72, &v58);
    if (DWORD2(__p) != -1)
      ((void (*)(char **, __int128 *))off_24C3F5558[DWORD2(__p)])(&v72, &v58);
    v55 = *(_OWORD *)v53;
    v56 = v54;
    v53[0] = 0;
    v53[1] = 0;
    v54 = 0;
    v57 = 1;
    sub_20B099E24(&v55, (uint64_t)&v58);
    *(_OWORD *)a1 = v58;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (v68)
    {
      *(_BYTE *)(a1 + 40) = 0;
      v35 = v61;
      if (v61)
      {
        *(_OWORD *)(a1 + 16) = __p;
        *(_QWORD *)(a1 + 32) = v60;
        v60 = 0;
        __p = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if (v67)
      {
        v36 = v64;
        *(_QWORD *)(a1 + 64) = v63;
        *(_OWORD *)(a1 + 48) = v62;
        v62 = 0uLL;
        *(_QWORD *)(a1 + 72) = v36;
        *(_OWORD *)(a1 + 80) = v65;
        *(_QWORD *)(a1 + 96) = v66;
        v63 = 0;
        v65 = 0uLL;
        v66 = 0;
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (v35 && SHIBYTE(v60) < 0)
        operator delete((void *)__p);
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 0;
    }
    if (v57 && SHIBYTE(v56) < 0)
      operator delete((void *)v55);
    if (SHIBYTE(v54) < 0)
    {
      operator delete(v53[0]);
      if (BYTE8(v46))
        return;
    }
    else if (BYTE8(v46))
    {
      return;
    }
    if ((_BYTE)v46)
    {
      if (BYTE8(v45))
      {
        if (SBYTE7(v45) < 0)
          operator delete(v43);
        if (SHIBYTE(v41) < 0)
          operator delete(v40[1]);
      }
      if (LOBYTE(v40[0]) && SHIBYTE(v39) < 0)
        operator delete(v38[1]);
    }
  }
}

void sub_20AF50EA0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  sub_20AECFA60((uint64_t)&a43);
  sub_20AEC01C0(a1);
}

void sub_20AF50EB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  sub_20AECFA60((uint64_t)&a43);
  sub_20AEC01C0(a1);
}

void sub_20AF50ECC(uint64_t a1, uint64_t a2, float a3, int32x2_t a4, float a5, float a6, float a7, float a8, float a9, float a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  int8x16_t v19;
  uint64_t *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  char *v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  int v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *p_shared_owners;
  unint64_t v35;
  int v36;
  uint64_t v37;
  void *v38[2];
  uint64_t v39;
  void *v40[2];
  uint64_t v41;
  char v42;
  __int128 v43;
  __int128 __p;
  uint64_t v45;
  unsigned __int8 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54[8];
  uint64_t v55;
  void *v56;
  __int128 v57;
  int v58;
  _BYTE v59[24];
  _BYTE v60[32];
  int v61;
  __int16 v62;
  char v63;
  char v64;
  int8x16_t v65;
  float v66;
  float v67;
  float v68;
  float v69;
  int v70;
  uint64_t v71;
  char v72;
  char *v73;

  *(float *)&a4.i32[1] = a6;
  v19.i64[0] = LODWORD(a3);
  v19.i64[1] = LODWORD(a5);
  v65 = vorrq_s8((int8x16_t)vshll_n_s32(a4, 0x20uLL), v19);
  v66 = a7;
  v67 = a8;
  v68 = a9;
  v69 = a10;
  v70 = a17;
  v71 = 0xA3727C5ACLL;
  sub_20AF58160((uint64_t)v54, (uint64_t)&v65);
  if (v64)
  {
    sub_20AF584F8((uint64_t)v54, v65.i32);
    v20 = (uint64_t *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 8) + 40))(*(_QWORD *)(a2 + 8));
    v21 = v55;
    v22 = v56;
    v23 = *(_QWORD *)v59;
    v24 = v62;
    v25 = *v20;
    v26 = (char *)operator new(0x98uLL);
    v27 = (std::__shared_weak_count *)v26;
    *((_QWORD *)v26 + 1) = 0;
    v28 = (unint64_t *)(v26 + 8);
    *(_QWORD *)v26 = &off_24C3F5BD8;
    *((_QWORD *)v26 + 2) = 0;
    *((_QWORD *)v26 + 4) = &off_24C3F5A28;
    *((_QWORD *)v26 + 5) = v21;
    *((_QWORD *)v26 + 6) = v22;
    *(_OWORD *)(v26 + 56) = v57;
    v29 = v61;
    *((_DWORD *)v26 + 18) = v58;
    *(_QWORD *)(v26 + 76) = v23;
    *(_OWORD *)(v26 + 84) = *(_OWORD *)&v59[8];
    *((_DWORD *)v26 + 33) = v29;
    *(_OWORD *)(v26 + 116) = *(_OWORD *)&v60[16];
    *(_OWORD *)(v26 + 100) = *(_OWORD *)v60;
    *((_QWORD *)v26 + 3) = &off_24C3F5B58;
    v30 = v26 + 24;
    *((_WORD *)v26 + 68) = v24;
    *((_QWORD *)v26 + 18) = v25;
    do
      v31 = __ldxr(v28);
    while (__stxr(v31 + 1, v28));
    do
      v32 = __ldaxr(v28);
    while (__stlxr(v32 - 1, v28));
    if (!v32)
    {
      (*(void (**)(char *))(*(_QWORD *)v26 + 16))(v26);
      std::__shared_weak_count::__release_weak(v27);
    }
    v33 = *(std::__shared_weak_count **)(a2 + 16);
    *(_QWORD *)(a2 + 8) = v30;
    *(_QWORD *)(a2 + 16) = v27;
    if (v33)
    {
      p_shared_owners = (unint64_t *)&v33->__shared_owners_;
      do
        v35 = __ldaxr(p_shared_owners);
      while (__stlxr(v35 - 1, p_shared_owners));
      if (!v35)
      {
        ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
        std::__shared_weak_count::__release_weak(v33);
      }
    }
    *(_BYTE *)(a1 + 120) = 1;
  }
  else
  {
    DWORD2(__p) = 0;
    sub_20AF57E5C((uint64_t)v38, (std::string::size_type)&v43, (uint64_t)v54);
    if (DWORD2(__p) == -1)
      sub_20AECFAB8();
    v73 = &v72;
    ((void (*)(void **__return_ptr, char **, __int128 *))off_24C3F55D0[DWORD2(__p)])(v38, &v73, &v43);
    if (DWORD2(__p) != -1)
      ((void (*)(char **, __int128 *))off_24C3F5558[DWORD2(__p)])(&v73, &v43);
    *(_OWORD *)v40 = *(_OWORD *)v38;
    v41 = v39;
    v38[0] = 0;
    v38[1] = 0;
    v39 = 0;
    v42 = 1;
    sub_20B099E24((__int128 *)v40, (uint64_t)&v43);
    *(_OWORD *)a1 = v43;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (v53)
    {
      *(_BYTE *)(a1 + 40) = 0;
      v36 = v46;
      if (v46)
      {
        *(_OWORD *)(a1 + 16) = __p;
        *(_QWORD *)(a1 + 32) = v45;
        v45 = 0;
        __p = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if (v52)
      {
        v37 = v49;
        *(_QWORD *)(a1 + 64) = v48;
        *(_OWORD *)(a1 + 48) = v47;
        v47 = 0uLL;
        *(_QWORD *)(a1 + 72) = v37;
        *(_OWORD *)(a1 + 80) = v50;
        *(_QWORD *)(a1 + 96) = v51;
        v48 = 0;
        v50 = 0uLL;
        v51 = 0;
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (v36 && SHIBYTE(v45) < 0)
        operator delete((void *)__p);
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 0;
    }
    if (v42 && SHIBYTE(v41) < 0)
      operator delete(v40[0]);
    if (SHIBYTE(v39) < 0)
    {
      operator delete(v38[0]);
      if (v64)
        return;
    }
    else if (v64)
    {
      return;
    }
    if (v63)
    {
      if ((_BYTE)v62)
      {
        if (SHIBYTE(v61) < 0)
          operator delete(*(void **)&v60[12]);
        if ((v60[3] & 0x80000000) != 0)
          operator delete(*(void **)&v59[4]);
      }
      if ((_BYTE)v58 && SHIBYTE(v57) < 0)
        operator delete(v56);
    }
  }
}

void sub_20AF51280(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_20AECFA60((uint64_t)va);
  sub_20AEC01C0(a1);
}

void sub_20AF51294(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_20AECFA60((uint64_t)va);
  sub_20AEC01C0(a1);
}

void sub_20AF512AC(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t *v19;
  __int16 v20;
  uint64_t v21;
  char *v22;
  std::__shared_weak_count *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  unint64_t *v28;
  void *v29;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *p_shared_owners;
  unint64_t v34;
  int v35;
  uint64_t v36;
  char v37[8];
  void *v38[2];
  __int128 v39;
  void *v40[2];
  __int128 v41;
  uint64_t v42;
  void *v43;
  int v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  __int16 v52;
  void *v53[2];
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  char v57;
  __int128 v58;
  __int128 __p;
  uint64_t v60;
  unsigned __int8 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69[10];
  int v70;
  char v71;
  char *v72;

  *(double *)v69 = a3;
  *(double *)&v69[1] = a4;
  *(double *)&v69[2] = a5;
  *(double *)&v69[3] = a6;
  *(double *)&v69[4] = a7;
  *(double *)&v69[5] = a8;
  *(double *)&v69[6] = a9;
  *(double *)&v69[7] = a10;
  v69[8] = a17;
  v69[9] = 0x3EE4F8B588E368F1;
  v70 = 10;
  sub_20AF567DC((uint64_t)v37, (uint64_t)v69);
  if (BYTE8(v46))
  {
    sub_20AF565F0((uint64_t)v37, v69);
    v19 = (uint64_t *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 8) + 40))(*(_QWORD *)(a2 + 8));
    v20 = v52;
    v21 = *v19;
    v22 = (char *)operator new(0xF8uLL);
    v23 = (std::__shared_weak_count *)v22;
    *(_OWORD *)(v22 + 40) = *(_OWORD *)v38;
    *(_OWORD *)(v22 + 56) = v39;
    *(_OWORD *)(v22 + 72) = *(_OWORD *)v40;
    *(_OWORD *)(v22 + 88) = v41;
    *((_QWORD *)v22 + 3) = &off_24C3F58C8;
    v24 = v22 + 24;
    v25 = v45;
    *((_OWORD *)v22 + 9) = v46;
    *((_OWORD *)v22 + 8) = v25;
    v26 = v49;
    *((_OWORD *)v22 + 13) = v50;
    *((_OWORD *)v22 + 12) = v26;
    v27 = v47;
    *((_OWORD *)v22 + 11) = v48;
    *((_QWORD *)v22 + 1) = 0;
    v28 = (unint64_t *)(v22 + 8);
    *((_QWORD *)v22 + 2) = 0;
    *(_QWORD *)v22 = &off_24C3F5948;
    *((_QWORD *)v22 + 4) = &off_24C3F56C8;
    v29 = v43;
    *((_QWORD *)v22 + 13) = v42;
    *((_QWORD *)v22 + 14) = v29;
    *((_DWORD *)v22 + 30) = v44;
    *((_QWORD *)v22 + 28) = v51;
    *((_OWORD *)v22 + 10) = v27;
    *((_WORD *)v22 + 116) = v20;
    *((_QWORD *)v22 + 30) = v21;
    do
      v30 = __ldxr(v28);
    while (__stxr(v30 + 1, v28));
    do
      v31 = __ldaxr(v28);
    while (__stlxr(v31 - 1, v28));
    if (!v31)
    {
      (*(void (**)(char *))(*(_QWORD *)v22 + 16))(v22);
      std::__shared_weak_count::__release_weak(v23);
    }
    v32 = *(std::__shared_weak_count **)(a2 + 16);
    *(_QWORD *)(a2 + 8) = v24;
    *(_QWORD *)(a2 + 16) = v23;
    if (v32)
    {
      p_shared_owners = (unint64_t *)&v32->__shared_owners_;
      do
        v34 = __ldaxr(p_shared_owners);
      while (__stlxr(v34 - 1, p_shared_owners));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
    *(_BYTE *)(a1 + 120) = 1;
  }
  else
  {
    DWORD2(__p) = 0;
    sub_20AF57E5C((uint64_t)v53, (std::string::size_type)&v58, (uint64_t)v37);
    if (DWORD2(__p) == -1)
      sub_20AECFAB8();
    v72 = &v71;
    ((void (*)(void **__return_ptr, char **, __int128 *))off_24C3F55D0[DWORD2(__p)])(v53, &v72, &v58);
    if (DWORD2(__p) != -1)
      ((void (*)(char **, __int128 *))off_24C3F5558[DWORD2(__p)])(&v72, &v58);
    v55 = *(_OWORD *)v53;
    v56 = v54;
    v53[0] = 0;
    v53[1] = 0;
    v54 = 0;
    v57 = 1;
    sub_20B099E24(&v55, (uint64_t)&v58);
    *(_OWORD *)a1 = v58;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (v68)
    {
      *(_BYTE *)(a1 + 40) = 0;
      v35 = v61;
      if (v61)
      {
        *(_OWORD *)(a1 + 16) = __p;
        *(_QWORD *)(a1 + 32) = v60;
        v60 = 0;
        __p = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if (v67)
      {
        v36 = v64;
        *(_QWORD *)(a1 + 64) = v63;
        *(_OWORD *)(a1 + 48) = v62;
        v62 = 0uLL;
        *(_QWORD *)(a1 + 72) = v36;
        *(_OWORD *)(a1 + 80) = v65;
        *(_QWORD *)(a1 + 96) = v66;
        v63 = 0;
        v65 = 0uLL;
        v66 = 0;
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (v35 && SHIBYTE(v60) < 0)
        operator delete((void *)__p);
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 0;
    }
    if (v57 && SHIBYTE(v56) < 0)
      operator delete((void *)v55);
    if (SHIBYTE(v54) < 0)
    {
      operator delete(v53[0]);
      if (BYTE8(v46))
        return;
    }
    else if (BYTE8(v46))
    {
      return;
    }
    if ((_BYTE)v46)
    {
      if (BYTE8(v45))
      {
        if (SBYTE7(v45) < 0)
          operator delete(v43);
        if (SHIBYTE(v41) < 0)
          operator delete(v40[1]);
      }
      if (LOBYTE(v40[0]) && SHIBYTE(v39) < 0)
        operator delete(v38[1]);
    }
  }
}

void sub_20AF5167C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  sub_20AECFA60((uint64_t)&a43);
  sub_20AEC01C0(a1);
}

void sub_20AF51690(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  sub_20AECFA60((uint64_t)&a43);
  sub_20AEC01C0(a1);
}

void sub_20AF516A8(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>, uint64_t a11)
{
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int32x2_t v27;
  float v28;
  float v29;
  float v30;
  float v31;
  float v32;
  float v33;
  float v34;
  int v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  float v41;
  float v42;
  int v43;

  sub_20AF4EC84(a1, 12);
  v20 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
  if ((*(unsigned int (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8)))
  {
    if (v20 == 11)
    {
      v28 = a3;
      *(float *)v27.i32 = a4;
      v29 = a5;
      v30 = a6;
      v31 = a7;
      v32 = a8;
      v33 = a9;
      v34 = a10;
      *(float *)&v35 = *(double *)&a11;
      sub_20AF50ECC(a2, a1, v28, v27, v29, v30, v31, v32, v33, v34, v21, v22, v23, v24, v25, v26, v35);
    }
    else
    {
      sub_20AF512AC(a2, a1, a3, a4, a5, a6, a7, a8, a9, a10, v21, v22, v23, v24, v25, v26, a11);
    }
  }
  else if (v20 == 11)
  {
    v36 = a3;
    *(float *)v27.i32 = a4;
    v37 = a5;
    v38 = a6;
    v39 = a7;
    v40 = a8;
    v41 = a9;
    v42 = a10;
    *(float *)&v43 = *(double *)&a11;
    sub_20AF506F0(a2, a1, v36, v27, v37, v38, v39, v40, v41, v42, v21, v22, v23, v24, v25, v26, v43);
  }
  else
  {
    sub_20AF50AD0(a2, a1, a3, a4, a5, a6, a7, a8, a9, a10, v21, v22, v23, v24, v25, v26, a11);
  }
}

void sub_20AF51888(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  const void *v8;
  char *v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  void *__dst[2];
  uint64_t v16;
  char v17;
  void *v18;
  char v19;
  void *v20;
  char v21;
  char v22;
  char v23;
  __int128 v24;
  __int128 __p;
  uint64_t v26;
  unsigned __int8 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  const char *v36;

  v36 = "focal length";
  v35 = 0;
  v4 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
  v35 = v4;
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 24))(*(_QWORD *)(a1 + 8));
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
  if (v4 == 11)
  {
    v7 = v6;
    v8 = *(const void **)(a1 + 8);
    if (v5 == 1)
    {
      if (v7)
      {
        if (!v8
          || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5CD0, 0)) == 0)
        {
          sub_20AF59EC4();
          v10 = &qword_25463A938;
          goto LABEL_43;
        }
        goto LABEL_38;
      }
      if (!v8
        || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5E20, 0)) == 0)
      {
        sub_20AF59D3C();
        v10 = &qword_25463A920;
        goto LABEL_43;
      }
    }
    else if (v7)
    {
      if (!v8
        || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5E80, 0)) == 0)
      {
        sub_20AF5A1D4();
        v10 = &qword_25463A968;
        goto LABEL_43;
      }
    }
    else if (!v8
           || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5EE0, 0)) == 0)
    {
      sub_20AF5A04C();
      v10 = &qword_25463A950;
LABEL_43:
      sub_20B449200(a1, (const char *)v10, (uint64_t)"trying to cast camera");
    }
LABEL_38:
    *(_QWORD *)a2 = v9 + 16;
    *(_BYTE *)(a2 + 120) = 1;
    return;
  }
  sub_20AF59A84((uint64_t)v13, (const char *)&v36, "float32", &v35);
  if (SHIBYTE(v14) < 0)
  {
    sub_20AEC60F4(__dst, v13[0], (unint64_t)v13[1]);
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)v13;
    v16 = v14;
  }
  v17 = 1;
  LOBYTE(v18) = 0;
  v22 = 0;
  v23 = 1;
  sub_20AECCC3C(0xAu, (__int128 *)__dst, (uint64_t)&v24);
  *(_OWORD *)a2 = v24;
  *(_BYTE *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  if (v34)
  {
    *(_BYTE *)(a2 + 40) = 0;
    v11 = v27;
    if (v27)
    {
      *(_OWORD *)(a2 + 16) = __p;
      *(_QWORD *)(a2 + 32) = v26;
      v26 = 0;
      __p = 0uLL;
      *(_BYTE *)(a2 + 40) = 1;
    }
    *(_BYTE *)(a2 + 48) = 0;
    *(_BYTE *)(a2 + 104) = 0;
    if (v33)
    {
      v12 = v30;
      *(_QWORD *)(a2 + 64) = v29;
      *(_OWORD *)(a2 + 48) = v28;
      v28 = 0uLL;
      *(_QWORD *)(a2 + 72) = v12;
      *(_OWORD *)(a2 + 80) = v31;
      *(_QWORD *)(a2 + 96) = v32;
      v29 = 0;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(a2 + 104) = 1;
    }
    *(_BYTE *)(a2 + 112) = 1;
    *(_BYTE *)(a2 + 120) = 0;
    if (v11 && SHIBYTE(v26) < 0)
      operator delete((void *)__p);
    if (!v23)
      goto LABEL_31;
  }
  else
  {
    *(_BYTE *)(a2 + 120) = 0;
    if (!v23)
      goto LABEL_31;
  }
  if (!v22)
    goto LABEL_28;
  if (v21 < 0)
  {
    operator delete(v20);
    if ((v19 & 0x80000000) == 0)
    {
LABEL_28:
      if (v17)
        goto LABEL_29;
      goto LABEL_31;
    }
  }
  else if ((v19 & 0x80000000) == 0)
  {
    goto LABEL_28;
  }
  operator delete(v18);
  if (v17)
  {
LABEL_29:
    if (SHIBYTE(v16) < 0)
      operator delete(__dst[0]);
  }
LABEL_31:
  if (SHIBYTE(v14) < 0)
    operator delete(v13[0]);
}

void sub_20AF51BE0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  const void *v8;
  char *v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  void *__dst[2];
  uint64_t v16;
  char v17;
  void *v18;
  char v19;
  void *v20;
  char v21;
  char v22;
  char v23;
  __int128 v24;
  __int128 __p;
  uint64_t v26;
  unsigned __int8 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  const char *v36;

  v36 = "focal length";
  v35 = 0;
  v4 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
  v35 = v4;
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 24))(*(_QWORD *)(a1 + 8));
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
  if (v4 == 12)
  {
    v7 = v6;
    v8 = *(const void **)(a1 + 8);
    if (v5 == 1)
    {
      if (v7)
      {
        if (!v8
          || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5DF0, 0)) == 0)
        {
          sub_20AF5B4AC();
          v10 = &qword_25463A998;
          goto LABEL_43;
        }
        goto LABEL_38;
      }
      if (!v8
        || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5E50, 0)) == 0)
      {
        sub_20AF5B324();
        v10 = &qword_25463A980;
        goto LABEL_43;
      }
    }
    else if (v7)
    {
      if (!v8
        || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5EB0, 0)) == 0)
      {
        sub_20AF5BB6C();
        v10 = &qword_25463A9C8;
        goto LABEL_43;
      }
    }
    else if (!v8
           || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5F10, 0)) == 0)
    {
      sub_20AF5B634();
      v10 = &qword_25463A9B0;
LABEL_43:
      sub_20B449200(a1, (const char *)v10, (uint64_t)"trying to cast camera");
    }
LABEL_38:
    *(_QWORD *)a2 = v9 + 16;
    *(_BYTE *)(a2 + 120) = 1;
    return;
  }
  sub_20AF59A84((uint64_t)v13, (const char *)&v36, "float64", &v35);
  if (SHIBYTE(v14) < 0)
  {
    sub_20AEC60F4(__dst, v13[0], (unint64_t)v13[1]);
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)v13;
    v16 = v14;
  }
  v17 = 1;
  LOBYTE(v18) = 0;
  v22 = 0;
  v23 = 1;
  sub_20AECCC3C(0xAu, (__int128 *)__dst, (uint64_t)&v24);
  *(_OWORD *)a2 = v24;
  *(_BYTE *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  if (v34)
  {
    *(_BYTE *)(a2 + 40) = 0;
    v11 = v27;
    if (v27)
    {
      *(_OWORD *)(a2 + 16) = __p;
      *(_QWORD *)(a2 + 32) = v26;
      v26 = 0;
      __p = 0uLL;
      *(_BYTE *)(a2 + 40) = 1;
    }
    *(_BYTE *)(a2 + 48) = 0;
    *(_BYTE *)(a2 + 104) = 0;
    if (v33)
    {
      v12 = v30;
      *(_QWORD *)(a2 + 64) = v29;
      *(_OWORD *)(a2 + 48) = v28;
      v28 = 0uLL;
      *(_QWORD *)(a2 + 72) = v12;
      *(_OWORD *)(a2 + 80) = v31;
      *(_QWORD *)(a2 + 96) = v32;
      v29 = 0;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(a2 + 104) = 1;
    }
    *(_BYTE *)(a2 + 112) = 1;
    *(_BYTE *)(a2 + 120) = 0;
    if (v11 && SHIBYTE(v26) < 0)
      operator delete((void *)__p);
    if (!v23)
      goto LABEL_31;
  }
  else
  {
    *(_BYTE *)(a2 + 120) = 0;
    if (!v23)
      goto LABEL_31;
  }
  if (!v22)
    goto LABEL_28;
  if (v21 < 0)
  {
    operator delete(v20);
    if ((v19 & 0x80000000) == 0)
    {
LABEL_28:
      if (v17)
        goto LABEL_29;
      goto LABEL_31;
    }
  }
  else if ((v19 & 0x80000000) == 0)
  {
    goto LABEL_28;
  }
  operator delete(v18);
  if (v17)
  {
LABEL_29:
    if (SHIBYTE(v16) < 0)
      operator delete(__dst[0]);
  }
LABEL_31:
  if (SHIBYTE(v14) < 0)
    operator delete(v13[0]);
}

void sub_20AF51F38(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  const void *v8;
  char *v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  void *__dst[2];
  uint64_t v16;
  char v17;
  void *v18;
  char v19;
  void *v20;
  char v21;
  char v22;
  char v23;
  __int128 v24;
  __int128 __p;
  uint64_t v26;
  unsigned __int8 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  const char *v36;

  v36 = "principal point";
  v35 = 0;
  v4 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
  v35 = v4;
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 24))(*(_QWORD *)(a1 + 8));
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
  if (v4 == 11)
  {
    v7 = v6;
    v8 = *(const void **)(a1 + 8);
    if (v5 == 1)
    {
      if (v7)
      {
        if (!v8
          || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5CD0, 0)) == 0)
        {
          sub_20AF59EC4();
          v10 = &qword_25463A938;
          goto LABEL_43;
        }
        goto LABEL_38;
      }
      if (!v8
        || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5E20, 0)) == 0)
      {
        sub_20AF59D3C();
        v10 = &qword_25463A920;
        goto LABEL_43;
      }
    }
    else if (v7)
    {
      if (!v8
        || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5E80, 0)) == 0)
      {
        sub_20AF5A1D4();
        v10 = &qword_25463A968;
        goto LABEL_43;
      }
    }
    else if (!v8
           || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5EE0, 0)) == 0)
    {
      sub_20AF5A04C();
      v10 = &qword_25463A950;
LABEL_43:
      sub_20B449200(a1, (const char *)v10, (uint64_t)"trying to cast camera");
    }
LABEL_38:
    *(_QWORD *)a2 = v9 + 24;
    *(_BYTE *)(a2 + 120) = 1;
    return;
  }
  sub_20AF59A84((uint64_t)v13, (const char *)&v36, "float32", &v35);
  if (SHIBYTE(v14) < 0)
  {
    sub_20AEC60F4(__dst, v13[0], (unint64_t)v13[1]);
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)v13;
    v16 = v14;
  }
  v17 = 1;
  LOBYTE(v18) = 0;
  v22 = 0;
  v23 = 1;
  sub_20AECCC3C(0xAu, (__int128 *)__dst, (uint64_t)&v24);
  *(_OWORD *)a2 = v24;
  *(_BYTE *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  if (v34)
  {
    *(_BYTE *)(a2 + 40) = 0;
    v11 = v27;
    if (v27)
    {
      *(_OWORD *)(a2 + 16) = __p;
      *(_QWORD *)(a2 + 32) = v26;
      v26 = 0;
      __p = 0uLL;
      *(_BYTE *)(a2 + 40) = 1;
    }
    *(_BYTE *)(a2 + 48) = 0;
    *(_BYTE *)(a2 + 104) = 0;
    if (v33)
    {
      v12 = v30;
      *(_QWORD *)(a2 + 64) = v29;
      *(_OWORD *)(a2 + 48) = v28;
      v28 = 0uLL;
      *(_QWORD *)(a2 + 72) = v12;
      *(_OWORD *)(a2 + 80) = v31;
      *(_QWORD *)(a2 + 96) = v32;
      v29 = 0;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(a2 + 104) = 1;
    }
    *(_BYTE *)(a2 + 112) = 1;
    *(_BYTE *)(a2 + 120) = 0;
    if (v11 && SHIBYTE(v26) < 0)
      operator delete((void *)__p);
    if (!v23)
      goto LABEL_31;
  }
  else
  {
    *(_BYTE *)(a2 + 120) = 0;
    if (!v23)
      goto LABEL_31;
  }
  if (!v22)
    goto LABEL_28;
  if (v21 < 0)
  {
    operator delete(v20);
    if ((v19 & 0x80000000) == 0)
    {
LABEL_28:
      if (v17)
        goto LABEL_29;
      goto LABEL_31;
    }
  }
  else if ((v19 & 0x80000000) == 0)
  {
    goto LABEL_28;
  }
  operator delete(v18);
  if (v17)
  {
LABEL_29:
    if (SHIBYTE(v16) < 0)
      operator delete(__dst[0]);
  }
LABEL_31:
  if (SHIBYTE(v14) < 0)
    operator delete(v13[0]);
}

void sub_20AF52290(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  const void *v8;
  char *v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  void *__dst[2];
  uint64_t v16;
  char v17;
  void *v18;
  char v19;
  void *v20;
  char v21;
  char v22;
  char v23;
  __int128 v24;
  __int128 __p;
  uint64_t v26;
  unsigned __int8 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  const char *v36;

  v36 = "principal point";
  v35 = 0;
  v4 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
  v35 = v4;
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 24))(*(_QWORD *)(a1 + 8));
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
  if (v4 == 12)
  {
    v7 = v6;
    v8 = *(const void **)(a1 + 8);
    if (v5 == 1)
    {
      if (v7)
      {
        if (!v8
          || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5DF0, 0)) == 0)
        {
          sub_20AF5B4AC();
          v10 = &qword_25463A998;
          goto LABEL_43;
        }
        goto LABEL_38;
      }
      if (!v8
        || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5E50, 0)) == 0)
      {
        sub_20AF5B324();
        v10 = &qword_25463A980;
        goto LABEL_43;
      }
    }
    else if (v7)
    {
      if (!v8
        || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5EB0, 0)) == 0)
      {
        sub_20AF5BB6C();
        v10 = &qword_25463A9C8;
        goto LABEL_43;
      }
    }
    else if (!v8
           || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5F10, 0)) == 0)
    {
      sub_20AF5B634();
      v10 = &qword_25463A9B0;
LABEL_43:
      sub_20B449200(a1, (const char *)v10, (uint64_t)"trying to cast camera");
    }
LABEL_38:
    *(_QWORD *)a2 = v9 + 32;
    *(_BYTE *)(a2 + 120) = 1;
    return;
  }
  sub_20AF59A84((uint64_t)v13, (const char *)&v36, "float64", &v35);
  if (SHIBYTE(v14) < 0)
  {
    sub_20AEC60F4(__dst, v13[0], (unint64_t)v13[1]);
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)v13;
    v16 = v14;
  }
  v17 = 1;
  LOBYTE(v18) = 0;
  v22 = 0;
  v23 = 1;
  sub_20AECCC3C(0xAu, (__int128 *)__dst, (uint64_t)&v24);
  *(_OWORD *)a2 = v24;
  *(_BYTE *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  if (v34)
  {
    *(_BYTE *)(a2 + 40) = 0;
    v11 = v27;
    if (v27)
    {
      *(_OWORD *)(a2 + 16) = __p;
      *(_QWORD *)(a2 + 32) = v26;
      v26 = 0;
      __p = 0uLL;
      *(_BYTE *)(a2 + 40) = 1;
    }
    *(_BYTE *)(a2 + 48) = 0;
    *(_BYTE *)(a2 + 104) = 0;
    if (v33)
    {
      v12 = v30;
      *(_QWORD *)(a2 + 64) = v29;
      *(_OWORD *)(a2 + 48) = v28;
      v28 = 0uLL;
      *(_QWORD *)(a2 + 72) = v12;
      *(_OWORD *)(a2 + 80) = v31;
      *(_QWORD *)(a2 + 96) = v32;
      v29 = 0;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(a2 + 104) = 1;
    }
    *(_BYTE *)(a2 + 112) = 1;
    *(_BYTE *)(a2 + 120) = 0;
    if (v11 && SHIBYTE(v26) < 0)
      operator delete((void *)__p);
    if (!v23)
      goto LABEL_31;
  }
  else
  {
    *(_BYTE *)(a2 + 120) = 0;
    if (!v23)
      goto LABEL_31;
  }
  if (!v22)
    goto LABEL_28;
  if (v21 < 0)
  {
    operator delete(v20);
    if ((v19 & 0x80000000) == 0)
    {
LABEL_28:
      if (v17)
        goto LABEL_29;
      goto LABEL_31;
    }
  }
  else if ((v19 & 0x80000000) == 0)
  {
    goto LABEL_28;
  }
  operator delete(v18);
  if (v17)
  {
LABEL_29:
    if (SHIBYTE(v16) < 0)
      operator delete(__dst[0]);
  }
LABEL_31:
  if (SHIBYTE(v14) < 0)
    operator delete(v13[0]);
}

void sub_20AF525E8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  const void *v8;
  char *v9;
  __int128 *v10;
  int v11;
  uint64_t v12;
  void *v13;
  int v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  void *v19;
  char v20;
  void *v21;
  char v22;
  char v23;
  char v24;
  void *v25[2];
  uint64_t v26;
  void *__dst[2];
  uint64_t v28;
  char v29;
  void *v30;
  char v31;
  void *__p;
  char v33;
  char v34;
  char v35;
  _BYTE v36[32];
  uint64_t v37;
  unsigned __int8 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  char v45;
  unsigned __int8 v46;
  char v47;
  char v48;
  char *v49;

  v47 = 0;
  v4 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
  v47 = v4;
  v46 = 0;
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 24))(*(_QWORD *)(a1 + 8));
  v46 = v5;
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
  if (v4 == 11)
  {
    if (v5 == 1)
    {
      *(_DWORD *)&v36[24] = -1;
      *(_QWORD *)v36 = operator new(0x48uLL);
      *(_OWORD *)&v36[8] = xmmword_20B5B3790;
      strcpy(*(char **)v36, "Cannot get heikkila distortion coefficients, camera lens model type is ");
      *(_DWORD *)&v36[24] = 1;
      sub_20AF5C0A4((uint64_t)v36, &v46);
      if (*(_DWORD *)&v36[24] == -1)
        sub_20AECFAB8();
      v49 = &v48;
      ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C3F55D0[*(unsigned int *)&v36[24]])(v25, &v49, v36);
      if (*(_DWORD *)&v36[24] != -1)
        ((void (*)(char **, _BYTE *))off_24C3F5558[*(unsigned int *)&v36[24]])(&v49, v36);
      if (SHIBYTE(v26) < 0)
      {
        sub_20AEC60F4(__dst, v25[0], (unint64_t)v25[1]);
      }
      else
      {
        *(_OWORD *)__dst = *(_OWORD *)v25;
        v28 = v26;
      }
      v29 = 1;
      LOBYTE(v30) = 0;
      v34 = 0;
      v35 = 1;
      sub_20AECCC3C(0xAu, (__int128 *)__dst, (uint64_t)v36);
      *(_OWORD *)a2 = *(_OWORD *)v36;
      *(_BYTE *)(a2 + 16) = 0;
      *(_BYTE *)(a2 + 112) = 0;
      if (v45)
      {
        *(_BYTE *)(a2 + 40) = 0;
        v14 = v38;
        if (v38)
        {
          *(_OWORD *)(a2 + 16) = *(_OWORD *)&v36[16];
          *(_QWORD *)(a2 + 32) = v37;
          *(_QWORD *)&v36[24] = 0;
          v37 = 0;
          *(_QWORD *)&v36[16] = 0;
          *(_BYTE *)(a2 + 40) = 1;
        }
        *(_BYTE *)(a2 + 48) = 0;
        *(_BYTE *)(a2 + 104) = 0;
        if (v44)
        {
          v15 = v41;
          *(_QWORD *)(a2 + 64) = v40;
          *(_OWORD *)(a2 + 48) = v39;
          v39 = 0uLL;
          *(_QWORD *)(a2 + 72) = v15;
          *(_OWORD *)(a2 + 80) = v42;
          *(_QWORD *)(a2 + 96) = v43;
          v40 = 0;
          v42 = 0uLL;
          v43 = 0;
          *(_BYTE *)(a2 + 104) = 1;
        }
        *(_BYTE *)(a2 + 112) = 1;
        *(_BYTE *)(a2 + 120) = 0;
        if (v14 && SHIBYTE(v37) < 0)
          operator delete(*(void **)&v36[16]);
      }
      else
      {
        *(_BYTE *)(a2 + 120) = 0;
      }
      if (!v35)
        goto LABEL_56;
      if (v34)
      {
        if (v33 < 0)
          operator delete(__p);
        if (v31 < 0)
          operator delete(v30);
      }
      if (!v29 || (SHIBYTE(v28) & 0x80000000) == 0)
        goto LABEL_56;
      v13 = __dst[0];
LABEL_55:
      operator delete(v13);
      goto LABEL_56;
    }
    v7 = v6;
    v8 = *(const void **)(a1 + 8);
    if (v7)
    {
      if (!v8
        || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5E80, 0)) == 0)
      {
        v10 = sub_20AF596D4();
        goto LABEL_63;
      }
    }
    else if (!v8
           || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5EE0, 0)) == 0)
    {
      v10 = sub_20AF59324();
LABEL_63:
      sub_20B449200(a1, (const char *)v10, (uint64_t)"trying to cast camera");
    }
    *(_QWORD *)a2 = v9 + 32;
    *(_BYTE *)(a2 + 120) = 1;
    return;
  }
  sub_20AF52B10((uint64_t)v25, "float32", &v47);
  if (SHIBYTE(v26) < 0)
  {
    sub_20AEC60F4(&v16, v25[0], (unint64_t)v25[1]);
  }
  else
  {
    v16 = *(_OWORD *)v25;
    v17 = v26;
  }
  v18 = 1;
  LOBYTE(v19) = 0;
  v23 = 0;
  v24 = 1;
  sub_20AECCC3C(0xAu, &v16, (uint64_t)v36);
  *(_OWORD *)a2 = *(_OWORD *)v36;
  *(_BYTE *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  if (v45)
  {
    *(_BYTE *)(a2 + 40) = 0;
    v11 = v38;
    if (v38)
    {
      *(_OWORD *)(a2 + 16) = *(_OWORD *)&v36[16];
      *(_QWORD *)(a2 + 32) = v37;
      *(_QWORD *)&v36[24] = 0;
      v37 = 0;
      *(_QWORD *)&v36[16] = 0;
      *(_BYTE *)(a2 + 40) = 1;
    }
    *(_BYTE *)(a2 + 48) = 0;
    *(_BYTE *)(a2 + 104) = 0;
    if (v44)
    {
      v12 = v41;
      *(_QWORD *)(a2 + 64) = v40;
      *(_OWORD *)(a2 + 48) = v39;
      v39 = 0uLL;
      *(_QWORD *)(a2 + 72) = v12;
      *(_OWORD *)(a2 + 80) = v42;
      *(_QWORD *)(a2 + 96) = v43;
      v40 = 0;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(a2 + 104) = 1;
    }
    *(_BYTE *)(a2 + 112) = 1;
    *(_BYTE *)(a2 + 120) = 0;
    if (v11 && SHIBYTE(v37) < 0)
      operator delete(*(void **)&v36[16]);
    if (!v24)
      goto LABEL_56;
  }
  else
  {
    *(_BYTE *)(a2 + 120) = 0;
    if (!v24)
      goto LABEL_56;
  }
  if (!v23)
    goto LABEL_29;
  if (v22 < 0)
  {
    operator delete(v21);
    if ((v20 & 0x80000000) == 0)
    {
LABEL_29:
      if (!v18)
        goto LABEL_56;
      goto LABEL_30;
    }
  }
  else if ((v20 & 0x80000000) == 0)
  {
    goto LABEL_29;
  }
  operator delete(v19);
  if (v18)
  {
LABEL_30:
    if ((SHIBYTE(v17) & 0x80000000) == 0)
      goto LABEL_56;
    v13 = (void *)v16;
    goto LABEL_55;
  }
LABEL_56:
  if (SHIBYTE(v26) < 0)
    operator delete(v25[0]);
}

void sub_20AF52AD0(void *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 184);
  sub_20AEC01C0(a1);
}

void sub_20AF52AE4(void *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 184);
  sub_20AEC01C0(a1);
}

void sub_20AF52AF8(void *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 184);
  sub_20AEC01C0(a1);
}

uint64_t sub_20AF52B10(uint64_t a1, const char *a2, _BYTE *a3)
{
  uint64_t result;
  _DWORD v6[6];
  int v7;
  _QWORD **v8;
  const char *v9;
  _DWORD *v10;
  const char *v11;
  const char *v12;
  _QWORD *v13;

  v7 = 0;
  sub_20AF5C358(v6, "Cannot get heikkila distortion coefficients as ");
  v8 = (_QWORD **)v6;
  v9 = a2;
  v10 = v6;
  v11 = a2;
  v12 = a2;
  if (v7 == -1)
    sub_20AECFAB8();
  v13 = &v8;
  ((void (*)(_QWORD **, _DWORD *))off_24C3F5C48[v7])(&v13, v6);
  v8 = (_QWORD **)v6;
  v9 = ", camera value type is ";
  v10 = v6;
  v11 = ", camera value type is ";
  v12 = ", camera value type is ";
  if (v7 == -1)
    sub_20AECFAB8();
  v13 = &v8;
  ((void (*)(_QWORD **, _DWORD *))off_24C3F5C60[v7])(&v13, v6);
  sub_20AF5A35C((uint64_t)&v8, (uint64_t)v6, a3);
  if (v7 == -1)
    sub_20AECFAB8();
  v8 = &v13;
  result = ((uint64_t (*)(_QWORD ***, _DWORD *))off_24C3F55D0[v7])(&v8, v6);
  if (v7 != -1)
    return ((uint64_t (*)(_QWORD ***, _DWORD *))off_24C3F5558[v7])(&v8, v6);
  return result;
}

void sub_20AF52C58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF52C6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF52C80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF52C94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF52CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF52CBC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  const void *v8;
  char *v9;
  __int128 *v10;
  int v11;
  uint64_t v12;
  void *v13;
  int v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  void *v19;
  char v20;
  void *v21;
  char v22;
  char v23;
  char v24;
  void *v25[2];
  uint64_t v26;
  void *__dst[2];
  uint64_t v28;
  char v29;
  void *v30;
  char v31;
  void *__p;
  char v33;
  char v34;
  char v35;
  _BYTE v36[32];
  uint64_t v37;
  unsigned __int8 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  char v45;
  unsigned __int8 v46;
  char v47;
  char v48;
  char *v49;

  v47 = 0;
  v4 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
  v47 = v4;
  v46 = 0;
  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 24))(*(_QWORD *)(a1 + 8));
  v46 = v5;
  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
  if (v4 == 12)
  {
    if (v5 == 1)
    {
      *(_DWORD *)&v36[24] = -1;
      *(_QWORD *)v36 = operator new(0x48uLL);
      *(_OWORD *)&v36[8] = xmmword_20B5B3790;
      strcpy(*(char **)v36, "Cannot get heikkila distortion coefficients, camera lens model type is ");
      *(_DWORD *)&v36[24] = 1;
      sub_20AF5C0A4((uint64_t)v36, &v46);
      if (*(_DWORD *)&v36[24] == -1)
        sub_20AECFAB8();
      v49 = &v48;
      ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C3F55D0[*(unsigned int *)&v36[24]])(v25, &v49, v36);
      if (*(_DWORD *)&v36[24] != -1)
        ((void (*)(char **, _BYTE *))off_24C3F5558[*(unsigned int *)&v36[24]])(&v49, v36);
      if (SHIBYTE(v26) < 0)
      {
        sub_20AEC60F4(__dst, v25[0], (unint64_t)v25[1]);
      }
      else
      {
        *(_OWORD *)__dst = *(_OWORD *)v25;
        v28 = v26;
      }
      v29 = 1;
      LOBYTE(v30) = 0;
      v34 = 0;
      v35 = 1;
      sub_20AECCC3C(0xAu, (__int128 *)__dst, (uint64_t)v36);
      *(_OWORD *)a2 = *(_OWORD *)v36;
      *(_BYTE *)(a2 + 16) = 0;
      *(_BYTE *)(a2 + 112) = 0;
      if (v45)
      {
        *(_BYTE *)(a2 + 40) = 0;
        v14 = v38;
        if (v38)
        {
          *(_OWORD *)(a2 + 16) = *(_OWORD *)&v36[16];
          *(_QWORD *)(a2 + 32) = v37;
          *(_QWORD *)&v36[24] = 0;
          v37 = 0;
          *(_QWORD *)&v36[16] = 0;
          *(_BYTE *)(a2 + 40) = 1;
        }
        *(_BYTE *)(a2 + 48) = 0;
        *(_BYTE *)(a2 + 104) = 0;
        if (v44)
        {
          v15 = v41;
          *(_QWORD *)(a2 + 64) = v40;
          *(_OWORD *)(a2 + 48) = v39;
          v39 = 0uLL;
          *(_QWORD *)(a2 + 72) = v15;
          *(_OWORD *)(a2 + 80) = v42;
          *(_QWORD *)(a2 + 96) = v43;
          v40 = 0;
          v42 = 0uLL;
          v43 = 0;
          *(_BYTE *)(a2 + 104) = 1;
        }
        *(_BYTE *)(a2 + 112) = 1;
        *(_BYTE *)(a2 + 120) = 0;
        if (v14 && SHIBYTE(v37) < 0)
          operator delete(*(void **)&v36[16]);
      }
      else
      {
        *(_BYTE *)(a2 + 120) = 0;
      }
      if (!v35)
        goto LABEL_56;
      if (v34)
      {
        if (v33 < 0)
          operator delete(__p);
        if (v31 < 0)
          operator delete(v30);
      }
      if (!v29 || (SHIBYTE(v28) & 0x80000000) == 0)
        goto LABEL_56;
      v13 = __dst[0];
LABEL_55:
      operator delete(v13);
      goto LABEL_56;
    }
    v7 = v6;
    v8 = *(const void **)(a1 + 8);
    if (v7)
    {
      if (!v8
        || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5EB0, 0)) == 0)
      {
        v10 = sub_20AF5BCF4();
        goto LABEL_63;
      }
    }
    else if (!v8
           || (v9 = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5F10, 0)) == 0)
    {
      v10 = sub_20AF5B7BC();
LABEL_63:
      sub_20B449200(a1, (const char *)v10, (uint64_t)"trying to cast camera");
    }
    *(_QWORD *)a2 = v9 + 48;
    *(_BYTE *)(a2 + 120) = 1;
    return;
  }
  sub_20AF52B10((uint64_t)v25, "float64", &v47);
  if (SHIBYTE(v26) < 0)
  {
    sub_20AEC60F4(&v16, v25[0], (unint64_t)v25[1]);
  }
  else
  {
    v16 = *(_OWORD *)v25;
    v17 = v26;
  }
  v18 = 1;
  LOBYTE(v19) = 0;
  v23 = 0;
  v24 = 1;
  sub_20AECCC3C(0xAu, &v16, (uint64_t)v36);
  *(_OWORD *)a2 = *(_OWORD *)v36;
  *(_BYTE *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  if (v45)
  {
    *(_BYTE *)(a2 + 40) = 0;
    v11 = v38;
    if (v38)
    {
      *(_OWORD *)(a2 + 16) = *(_OWORD *)&v36[16];
      *(_QWORD *)(a2 + 32) = v37;
      *(_QWORD *)&v36[24] = 0;
      v37 = 0;
      *(_QWORD *)&v36[16] = 0;
      *(_BYTE *)(a2 + 40) = 1;
    }
    *(_BYTE *)(a2 + 48) = 0;
    *(_BYTE *)(a2 + 104) = 0;
    if (v44)
    {
      v12 = v41;
      *(_QWORD *)(a2 + 64) = v40;
      *(_OWORD *)(a2 + 48) = v39;
      v39 = 0uLL;
      *(_QWORD *)(a2 + 72) = v12;
      *(_OWORD *)(a2 + 80) = v42;
      *(_QWORD *)(a2 + 96) = v43;
      v40 = 0;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(a2 + 104) = 1;
    }
    *(_BYTE *)(a2 + 112) = 1;
    *(_BYTE *)(a2 + 120) = 0;
    if (v11 && SHIBYTE(v37) < 0)
      operator delete(*(void **)&v36[16]);
    if (!v24)
      goto LABEL_56;
  }
  else
  {
    *(_BYTE *)(a2 + 120) = 0;
    if (!v24)
      goto LABEL_56;
  }
  if (!v23)
    goto LABEL_29;
  if (v22 < 0)
  {
    operator delete(v21);
    if ((v20 & 0x80000000) == 0)
    {
LABEL_29:
      if (!v18)
        goto LABEL_56;
      goto LABEL_30;
    }
  }
  else if ((v20 & 0x80000000) == 0)
  {
    goto LABEL_29;
  }
  operator delete(v19);
  if (v18)
  {
LABEL_30:
    if ((SHIBYTE(v17) & 0x80000000) == 0)
      goto LABEL_56;
    v13 = (void *)v16;
    goto LABEL_55;
  }
LABEL_56:
  if (SHIBYTE(v26) < 0)
    operator delete(v25[0]);
}

void sub_20AF531A4(void *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 184);
  sub_20AEC01C0(a1);
}

void sub_20AF531B8(void *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 184);
  sub_20AEC01C0(a1);
}

void sub_20AF531CC(void *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 184);
  sub_20AEC01C0(a1);
}

_QWORD *sub_20AF531E4(_QWORD *result)
{
  *result = &off_24C3F5CF8;
  return result;
}

void sub_20AF531F4(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  std::__shared_weak_count *v6;
  __int128 v7;
  unint64_t *v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  unint64_t *v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  void *v25;
  __int128 v26;
  char v27;
  _QWORD v28[5];
  _BYTE v29[32];
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  char v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  int v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  if (*a1 == 1)
  {
    v35 = xmmword_20B5B37A0;
    sub_20AF57428((uint64_t)v28, (int *)&v35);
    v14 = v28[1];
    v15 = v28[2];
    v36 = *(_OWORD *)&v28[3];
    v37 = *(_OWORD *)v29;
    v38 = *(_OWORD *)&v29[16];
    v39 = v30;
    v16 = (char *)operator new(0x78uLL);
    v6 = (std::__shared_weak_count *)v16;
    v17 = v37;
    *(_OWORD *)(v16 + 56) = v36;
    *((_QWORD *)v16 + 1) = 0;
    v18 = (unint64_t *)(v16 + 8);
    *((_QWORD *)v16 + 2) = 0;
    *((_QWORD *)v16 + 3) = &off_24C3F5C88;
    v19 = v16 + 24;
    *(_QWORD *)v16 = &off_24C3F5D98;
    *((_QWORD *)v16 + 4) = &off_24C3F5D38;
    *((_QWORD *)v16 + 5) = v14;
    *((_QWORD *)v16 + 6) = v15;
    *(_OWORD *)(v16 + 72) = v17;
    *(_OWORD *)(v16 + 88) = v38;
    *((_DWORD *)v16 + 26) = v39;
    *((_QWORD *)v16 + 14) = 0;
    do
      v20 = __ldxr(v18);
    while (__stxr(v20 + 1, v18));
    do
      v21 = __ldaxr(v18);
    while (__stlxr(v21 - 1, v18));
    if (!v21)
    {
      (*(void (**)(char *))(*(_QWORD *)v16 + 16))(v16);
      std::__shared_weak_count::__release_weak(v6);
    }
    do
      v22 = __ldxr(v18);
    while (__stxr(v22 + 1, v18));
    *(_QWORD *)a2 = &off_24C41D808;
    *(_QWORD *)(a2 + 8) = v19;
    *(_QWORD *)(a2 + 16) = v6;
    *(_BYTE *)(a2 + 120) = 1;
    do
      v13 = __ldaxr(v18);
    while (__stlxr(v13 - 1, v18));
    goto LABEL_20;
  }
  if (!*a1)
  {
    v35 = xmmword_20B5B37A0;
    sub_20AF57428((uint64_t)v28, (int *)&v35);
    v3 = v28[1];
    v4 = v28[2];
    v36 = *(_OWORD *)&v28[3];
    v37 = *(_OWORD *)v29;
    v38 = *(_OWORD *)&v29[16];
    v39 = v30;
    v5 = (char *)operator new(0x78uLL);
    v6 = (std::__shared_weak_count *)v5;
    v7 = v37;
    *(_OWORD *)(v5 + 56) = v36;
    *((_QWORD *)v5 + 1) = 0;
    v8 = (unint64_t *)(v5 + 8);
    *((_QWORD *)v5 + 2) = 0;
    *((_QWORD *)v5 + 3) = &off_24C3F5998;
    v9 = v5 + 24;
    *(_QWORD *)v5 = &off_24C3F59D8;
    *((_QWORD *)v5 + 4) = &off_24C3F5D38;
    *((_QWORD *)v5 + 5) = v3;
    *((_QWORD *)v5 + 6) = v4;
    *(_OWORD *)(v5 + 72) = v7;
    *(_OWORD *)(v5 + 88) = v38;
    *((_DWORD *)v5 + 26) = v39;
    *((_QWORD *)v5 + 14) = 0;
    do
      v10 = __ldxr(v8);
    while (__stxr(v10 + 1, v8));
    do
      v11 = __ldaxr(v8);
    while (__stlxr(v11 - 1, v8));
    if (!v11)
    {
      (*(void (**)(char *))(*(_QWORD *)v5 + 16))(v5);
      std::__shared_weak_count::__release_weak(v6);
    }
    do
      v12 = __ldxr(v8);
    while (__stxr(v12 + 1, v8));
    *(_QWORD *)a2 = &off_24C41D808;
    *(_QWORD *)(a2 + 8) = v9;
    *(_QWORD *)(a2 + 16) = v6;
    *(_BYTE *)(a2 + 120) = 1;
    do
      v13 = __ldaxr(v8);
    while (__stlxr(v13 - 1, v8));
LABEL_20:
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    return;
  }
  v25 = operator new(0x20uLL);
  v26 = xmmword_20B5B37B0;
  strcpy((char *)v25, "invalid pixel origin value");
  v27 = 1;
  sub_20B099E24((__int128 *)&v25, (uint64_t)v28);
  *(_OWORD *)a2 = *(_OWORD *)v28;
  *(_BYTE *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  if (v34)
  {
    *(_BYTE *)(a2 + 40) = 0;
    v23 = v29[0];
    if (v29[0])
    {
      *(_OWORD *)(a2 + 16) = *(_OWORD *)&v28[2];
      *(_QWORD *)(a2 + 32) = v28[4];
      memset(&v28[2], 0, 24);
      *(_BYTE *)(a2 + 40) = 1;
    }
    *(_BYTE *)(a2 + 48) = 0;
    *(_BYTE *)(a2 + 104) = 0;
    if (v33)
    {
      v24 = v30;
      *(_QWORD *)(a2 + 64) = *(_QWORD *)&v29[24];
      *(_OWORD *)(a2 + 48) = *(_OWORD *)&v29[8];
      *(_QWORD *)&v29[8] = 0;
      *(_QWORD *)&v29[16] = 0;
      *(_QWORD *)(a2 + 72) = v24;
      *(_OWORD *)(a2 + 80) = v31;
      *(_QWORD *)(a2 + 96) = v32;
      *(_QWORD *)&v29[24] = 0;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(a2 + 104) = 1;
    }
    *(_BYTE *)(a2 + 112) = 1;
    *(_BYTE *)(a2 + 120) = 0;
    if (v23 && SHIBYTE(v28[4]) < 0)
      operator delete((void *)v28[2]);
  }
  else
  {
    *(_BYTE *)(a2 + 120) = 0;
  }
  if (v27 && SHIBYTE(v26) < 0)
    operator delete(v25);
}

void sub_20AF535D4(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_20AEC01C0(a1);
}

_QWORD *sub_20AF535E0(_QWORD *result)
{
  *result = &off_24C3F54C8;
  return result;
}

void sub_20AF535F0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  int v6;
  int v7;
  int v8;
  const void *v9;
  _QWORD *v10;
  uint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  unint64_t *p_shared_owners;
  std::__shared_weak_count *v16;
  unint64_t v17;
  unint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  std::__shared_weak_count_vtbl *v25;
  std::__shared_weak_count_vtbl *v26;
  __int16 v27;
  std::__shared_weak_count_vtbl *v28;
  unint64_t *v29;
  unint64_t v30;
  char *v31;
  __int16 v32;
  unint64_t *v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  std::__shared_weak_count_vtbl *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  std::__shared_weak_count_vtbl *v47;
  std::__shared_weak_count_vtbl *v48;
  __int16 v49;
  std::__shared_weak_count_vtbl *v50;
  unint64_t *v51;
  unint64_t v52;
  char *v53;
  __int16 v54;
  unint64_t *v55;
  unint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  __int128 *v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  std::__shared_count v71;
  __int128 v72;
  std::__shared_count v73;
  __int128 v74;
  std::__shared_count v75;
  __int128 v76;
  std::__shared_count v77;
  __int128 v78;
  __int128 v79;
  std::__shared_count v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  std::__shared_count v84;
  __int128 v85;
  __int128 v86;
  int v87;
  __int128 v88;
  int v89;
  std::__shared_count v90;
  int v91;
  __int128 v92;
  int v93;
  std::__shared_count v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  std::__shared_weak_count_vtbl *v99;
  uint64_t v100;
  std::__shared_weak_count_vtbl *v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  std::__shared_count v109;
  std::__shared_count v110;
  __int128 v111;
  std::__shared_count v112;
  __int128 v113;
  std::__shared_count v114;
  __int128 v115;
  std::__shared_count v116;
  __int128 v117;
  std::__shared_count v118;
  __int128 v119;
  int v120;
  __int128 v121;
  __int128 v122;
  int v123;
  __int128 v124;
  uint64_t v125;
  uint64_t v126;

  v6 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
  v7 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
  v8 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 24))(*(_QWORD *)(a1 + 8));
  v9 = *(const void **)(a1 + 8);
  if (v6 == 11)
  {
    if (v8 == 1)
    {
      if (v7)
      {
        if (v9)
        {
          v10 = __dynamic_cast(v9, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5CD0, 0);
          if (v10)
          {
            v11 = v10[2];
            v12 = (std::__shared_weak_count_vtbl *)v10[3];
            v111 = *((_OWORD *)v10 + 2);
            v71 = (std::__shared_count)*((_OWORD *)v10 + 3);
            v79 = *((_OWORD *)v10 + 4);
            v87 = *((_DWORD *)v10 + 20);
            v13 = (std::__shared_weak_count *)operator new(0x78uLL);
            *(_OWORD *)&v13[2].__shared_owners_ = v111;
            v13[3].std::__shared_count = v71;
            v14 = a2 | (unint64_t)(a3 << 32);
            v13->__shared_owners_ = 0;
            p_shared_owners = (unint64_t *)&v13->__shared_owners_;
            v13->__shared_weak_owners_ = 0;
            v13->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5D98;
            v13[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5C88;
            v16 = v13 + 1;
            v13[1].__shared_owners_ = (uint64_t)&off_24C3F5D38;
            v13[1].__shared_weak_owners_ = v11;
            v13[2].__vftable = v12;
            *(_OWORD *)&v13[3].__shared_weak_owners_ = v79;
            LODWORD(v13[4].__shared_owners_) = v87;
            v13[4].__shared_weak_owners_ = v14;
            do
              v17 = __ldxr(p_shared_owners);
            while (__stxr(v17 + 1, p_shared_owners));
            do
              v18 = __ldaxr(p_shared_owners);
            while (__stlxr(v18 - 1, p_shared_owners));
            goto LABEL_55;
          }
        }
        v60 = sub_20AF56C34();
LABEL_72:
        sub_20B449200(a1, (const char *)v60, (uint64_t)"trying to cast camera");
      }
      if (!v9
        || (v35 = __dynamic_cast(v9, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5E20, 0)) == 0)
      {
        v60 = sub_20AF54BF0();
        goto LABEL_72;
      }
      v36 = v35[2];
      v37 = (std::__shared_weak_count_vtbl *)v35[3];
      v115 = *((_OWORD *)v35 + 2);
      v75 = (std::__shared_count)*((_OWORD *)v35 + 3);
      v83 = *((_OWORD *)v35 + 4);
      v91 = *((_DWORD *)v35 + 20);
      v13 = (std::__shared_weak_count *)operator new(0x78uLL);
      *(_OWORD *)&v13[2].__shared_owners_ = v115;
      v13[3].std::__shared_count = v75;
      v38 = a2 | (unint64_t)(a3 << 32);
      v13->__shared_owners_ = 0;
      v39 = (unint64_t *)&v13->__shared_owners_;
      v13->__shared_weak_owners_ = 0;
      v13->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F59D8;
      v13[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5998;
      v16 = v13 + 1;
      v13[1].__shared_owners_ = (uint64_t)&off_24C3F5D38;
      v13[1].__shared_weak_owners_ = v36;
      v13[2].__vftable = v37;
      *(_OWORD *)&v13[3].__shared_weak_owners_ = v83;
      LODWORD(v13[4].__shared_owners_) = v91;
      v13[4].__shared_weak_owners_ = v38;
      do
        v40 = __ldxr(v39);
      while (__stxr(v40 + 1, v39));
      do
        v18 = __ldaxr(v39);
      while (__stlxr(v18 - 1, v39));
    }
    else if (v7)
    {
      if (!v9
        || (v23 = (char *)__dynamic_cast(v9, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5E80, 0)) == 0)
      {
        v60 = sub_20AF596D4();
        goto LABEL_72;
      }
      v24 = *((_QWORD *)v23 + 2);
      v25 = (std::__shared_weak_count_vtbl *)*((_QWORD *)v23 + 3);
      v113 = *((_OWORD *)v23 + 2);
      v120 = *((_DWORD *)v23 + 12);
      v26 = *(std::__shared_weak_count_vtbl **)(v23 + 52);
      v104 = *(_OWORD *)(v23 + 60);
      v73 = *(std::__shared_count *)(v23 + 76);
      v81 = *(_OWORD *)(v23 + 92);
      v89 = *((_DWORD *)v23 + 27);
      v27 = *((_WORD *)v23 + 56);
      v13 = (std::__shared_weak_count *)operator new(0x98uLL);
      *(_OWORD *)&v13[2].__shared_owners_ = v113;
      *(_OWORD *)((char *)&v13[3].__shared_owners_ + 4) = v104;
      *(_OWORD *)((char *)&v13[4].__shared_weak_owners_ + 4) = v81;
      v28 = (std::__shared_weak_count_vtbl *)(a2 | (unint64_t)(a3 << 32));
      v13->__shared_owners_ = 0;
      v29 = (unint64_t *)&v13->__shared_owners_;
      v13->__shared_weak_owners_ = 0;
      v13->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5BD8;
      v13[1].__shared_owners_ = (uint64_t)&off_24C3F5A28;
      v13[1].__shared_weak_owners_ = v24;
      v13[2].__vftable = v25;
      LODWORD(v13[3].__vftable) = v120;
      *(std::__shared_weak_count_vtbl **)((char *)&v13[3].__vftable + 4) = v26;
      HIDWORD(v13[5].__shared_owners_) = v89;
      *(std::__shared_count *)((char *)v13 + 100) = v73;
      v13[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5B58;
      v16 = v13 + 1;
      LOWORD(v13[5].__shared_weak_owners_) = v27;
      v13[6].__vftable = v28;
      do
        v30 = __ldxr(v29);
      while (__stxr(v30 + 1, v29));
      do
        v18 = __ldaxr(v29);
      while (__stlxr(v18 - 1, v29));
    }
    else
    {
      if (!v9
        || (v45 = (char *)__dynamic_cast(v9, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5EE0, 0)) == 0)
      {
        v60 = sub_20AF59324();
        goto LABEL_72;
      }
      v46 = *((_QWORD *)v45 + 2);
      v47 = (std::__shared_weak_count_vtbl *)*((_QWORD *)v45 + 3);
      v117 = *((_OWORD *)v45 + 2);
      v123 = *((_DWORD *)v45 + 12);
      v48 = *(std::__shared_weak_count_vtbl **)(v45 + 52);
      v106 = *(_OWORD *)(v45 + 60);
      v77 = *(std::__shared_count *)(v45 + 76);
      v85 = *(_OWORD *)(v45 + 92);
      v93 = *((_DWORD *)v45 + 27);
      v49 = *((_WORD *)v45 + 56);
      v13 = (std::__shared_weak_count *)operator new(0x98uLL);
      *(_OWORD *)&v13[2].__shared_owners_ = v117;
      *(_OWORD *)((char *)&v13[3].__shared_owners_ + 4) = v106;
      *(_OWORD *)((char *)&v13[4].__shared_weak_owners_ + 4) = v85;
      v50 = (std::__shared_weak_count_vtbl *)(a2 | (unint64_t)(a3 << 32));
      v13->__shared_owners_ = 0;
      v51 = (unint64_t *)&v13->__shared_owners_;
      v13->__shared_weak_owners_ = 0;
      v13->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5B08;
      v13[1].__shared_owners_ = (uint64_t)&off_24C3F5A28;
      v13[1].__shared_weak_owners_ = v46;
      v13[2].__vftable = v47;
      LODWORD(v13[3].__vftable) = v123;
      *(std::__shared_weak_count_vtbl **)((char *)&v13[3].__vftable + 4) = v48;
      HIDWORD(v13[5].__shared_owners_) = v93;
      *(std::__shared_count *)((char *)v13 + 100) = v77;
      v13[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5A88;
      v16 = v13 + 1;
      LOWORD(v13[5].__shared_weak_owners_) = v49;
      v13[6].__vftable = v50;
      do
        v52 = __ldxr(v51);
      while (__stxr(v52 + 1, v51));
      do
        v18 = __ldaxr(v51);
      while (__stlxr(v18 - 1, v51));
    }
  }
  else if (v8 == 1)
  {
    if (v7)
    {
      if (!v9
        || (v19 = __dynamic_cast(v9, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5DF0, 0)) == 0)
      {
        v60 = sub_20AF58DD0();
        goto LABEL_72;
      }
      v103 = v19[1];
      v112 = (std::__shared_count)v19[3];
      v119 = v19[4];
      v88 = v19[7];
      v95 = v19[8];
      v99 = (std::__shared_weak_count_vtbl *)*((_QWORD *)v19 + 18);
      v80 = (std::__shared_count)v19[6];
      v67 = v19[2];
      v72 = v19[5];
      v13 = (std::__shared_weak_count *)operator new(0xB8uLL);
      *(_OWORD *)&v13[1].__shared_weak_owners_ = v103;
      *(_OWORD *)&v13[2].__shared_owners_ = v67;
      v13[3].std::__shared_count = v112;
      *(_OWORD *)&v13[3].__shared_weak_owners_ = v119;
      v13[5].std::__shared_count = v80;
      *(_OWORD *)&v13[5].__shared_weak_owners_ = v88;
      *(_OWORD *)&v13[6].__shared_owners_ = v95;
      v20 = a2 | (unint64_t)(a3 << 32);
      v13->__shared_owners_ = 0;
      v21 = (unint64_t *)&v13->__shared_owners_;
      v13->__shared_weak_owners_ = 0;
      v13->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5878;
      v13[1].__shared_owners_ = (uint64_t)&off_24C3F5508;
      v13[7].__vftable = v99;
      *(_OWORD *)&v13[4].__shared_owners_ = v72;
      v13[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F57F8;
      v16 = v13 + 1;
      v13[7].__shared_owners_ = v20;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v18 = __ldaxr(v21);
      while (__stlxr(v18 - 1, v21));
    }
    else
    {
      if (!v9
        || (v41 = __dynamic_cast(v9, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5E50, 0)) == 0)
      {
        v60 = sub_20AF5887C();
        goto LABEL_72;
      }
      v105 = v41[1];
      v116 = (std::__shared_count)v41[3];
      v122 = v41[4];
      v92 = v41[7];
      v97 = v41[8];
      v101 = (std::__shared_weak_count_vtbl *)*((_QWORD *)v41 + 18);
      v84 = (std::__shared_count)v41[6];
      v69 = v41[2];
      v76 = v41[5];
      v13 = (std::__shared_weak_count *)operator new(0xB8uLL);
      *(_OWORD *)&v13[1].__shared_weak_owners_ = v105;
      *(_OWORD *)&v13[2].__shared_owners_ = v69;
      v13[3].std::__shared_count = v116;
      *(_OWORD *)&v13[3].__shared_weak_owners_ = v122;
      v13[5].std::__shared_count = v84;
      *(_OWORD *)&v13[5].__shared_weak_owners_ = v92;
      *(_OWORD *)&v13[6].__shared_owners_ = v97;
      v42 = a2 | (unint64_t)(a3 << 32);
      v13->__shared_owners_ = 0;
      v43 = (unint64_t *)&v13->__shared_owners_;
      v13->__shared_weak_owners_ = 0;
      v13->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5678;
      v13[1].__shared_owners_ = (uint64_t)&off_24C3F5508;
      v13[7].__vftable = v101;
      *(_OWORD *)&v13[4].__shared_owners_ = v76;
      v13[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F55F8;
      v16 = v13 + 1;
      v13[7].__shared_owners_ = v42;
      do
        v44 = __ldxr(v43);
      while (__stxr(v44 + 1, v43));
      do
        v18 = __ldaxr(v43);
      while (__stlxr(v18 - 1, v43));
    }
  }
  else if (v7)
  {
    if (!v9
      || (v31 = (char *)__dynamic_cast(v9, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5EB0, 0)) == 0)
    {
      v60 = sub_20AF5BCF4();
      goto LABEL_72;
    }
    v125 = *((_QWORD *)v31 + 10);
    v65 = *((_OWORD *)v31 + 2);
    v68 = *((_OWORD *)v31 + 1);
    v114 = (std::__shared_count)*((_OWORD *)v31 + 3);
    v121 = *((_OWORD *)v31 + 4);
    v61 = *((_QWORD *)v31 + 11);
    v63 = *((_DWORD *)v31 + 24);
    v109 = *(std::__shared_count *)(v31 + 120);
    v107 = *(_OWORD *)(v31 + 104);
    v100 = *((_QWORD *)v31 + 25);
    v90 = *(std::__shared_count *)(v31 + 168);
    v96 = *(_OWORD *)(v31 + 184);
    v74 = *(_OWORD *)(v31 + 136);
    v82 = *(_OWORD *)(v31 + 152);
    v32 = *((_WORD *)v31 + 104);
    v13 = (std::__shared_weak_count *)operator new(0xF8uLL);
    v13->__shared_owners_ = 0;
    v33 = (unint64_t *)&v13->__shared_owners_;
    v13->__shared_weak_owners_ = 0;
    v13->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5948;
    v13[1].__shared_owners_ = (uint64_t)&off_24C3F56C8;
    *(_OWORD *)&v13[1].__shared_weak_owners_ = v68;
    *(_OWORD *)&v13[2].__shared_owners_ = v65;
    v13[3].std::__shared_count = v114;
    *(_OWORD *)&v13[3].__shared_weak_owners_ = v121;
    v13[4].__shared_owners_ = v125;
    v13[4].__shared_weak_owners_ = v61;
    LODWORD(v13[5].__vftable) = v63;
    *(_OWORD *)&v13[5].__shared_owners_ = v107;
    v13[6].std::__shared_count = v109;
    v13[9].__shared_owners_ = v100;
    v13[8].std::__shared_count = v90;
    *(_OWORD *)&v13[8].__shared_weak_owners_ = v96;
    *(_OWORD *)&v13[6].__shared_weak_owners_ = v74;
    *(_OWORD *)&v13[7].__shared_owners_ = v82;
    LOWORD(v13[9].__shared_weak_owners_) = v32;
    v13[10].__vftable = (std::__shared_weak_count_vtbl *)(a2 | (unint64_t)(a3 << 32));
    v13[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F58C8;
    v16 = v13 + 1;
    do
      v34 = __ldxr(v33);
    while (__stxr(v34 + 1, v33));
    do
      v18 = __ldaxr(v33);
    while (__stlxr(v18 - 1, v33));
  }
  else
  {
    if (!v9
      || (v53 = (char *)__dynamic_cast(v9, (const struct __class_type_info *)&unk_24C41D910, (const struct __class_type_info *)&unk_24C3F5F10, 0)) == 0)
    {
      v60 = sub_20AF5B7BC();
      goto LABEL_72;
    }
    v126 = *((_QWORD *)v53 + 10);
    v66 = *((_OWORD *)v53 + 2);
    v70 = *((_OWORD *)v53 + 1);
    v118 = (std::__shared_count)*((_OWORD *)v53 + 3);
    v124 = *((_OWORD *)v53 + 4);
    v62 = *((_QWORD *)v53 + 11);
    v64 = *((_DWORD *)v53 + 24);
    v110 = *(std::__shared_count *)(v53 + 120);
    v108 = *(_OWORD *)(v53 + 104);
    v102 = *((_QWORD *)v53 + 25);
    v94 = *(std::__shared_count *)(v53 + 168);
    v98 = *(_OWORD *)(v53 + 184);
    v78 = *(_OWORD *)(v53 + 136);
    v86 = *(_OWORD *)(v53 + 152);
    v54 = *((_WORD *)v53 + 104);
    v13 = (std::__shared_weak_count *)operator new(0xF8uLL);
    v13->__shared_owners_ = 0;
    v55 = (unint64_t *)&v13->__shared_owners_;
    v13->__shared_weak_owners_ = 0;
    v13->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F57A8;
    v13[1].__shared_owners_ = (uint64_t)&off_24C3F56C8;
    *(_OWORD *)&v13[1].__shared_weak_owners_ = v70;
    *(_OWORD *)&v13[2].__shared_owners_ = v66;
    v13[3].std::__shared_count = v118;
    *(_OWORD *)&v13[3].__shared_weak_owners_ = v124;
    v13[4].__shared_owners_ = v126;
    v13[4].__shared_weak_owners_ = v62;
    LODWORD(v13[5].__vftable) = v64;
    *(_OWORD *)&v13[5].__shared_owners_ = v108;
    v13[6].std::__shared_count = v110;
    v13[9].__shared_owners_ = v102;
    v13[8].std::__shared_count = v94;
    *(_OWORD *)&v13[8].__shared_weak_owners_ = v98;
    *(_OWORD *)&v13[6].__shared_weak_owners_ = v78;
    *(_OWORD *)&v13[7].__shared_owners_ = v86;
    LOWORD(v13[9].__shared_weak_owners_) = v54;
    v13[10].__vftable = (std::__shared_weak_count_vtbl *)(a2 | (unint64_t)(a3 << 32));
    v13[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5728;
    v16 = v13 + 1;
    do
      v56 = __ldxr(v55);
    while (__stxr(v56 + 1, v55));
    do
      v18 = __ldaxr(v55);
    while (__stlxr(v18 - 1, v55));
  }
LABEL_55:
  if (v18)
  {
    v57 = *(std::__shared_weak_count **)(a1 + 16);
    *(_QWORD *)(a1 + 8) = v16;
    *(_QWORD *)(a1 + 16) = v13;
    if (!v57)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
    v57 = *(std::__shared_weak_count **)(a1 + 16);
    *(_QWORD *)(a1 + 8) = v16;
    *(_QWORD *)(a1 + 16) = v13;
    if (!v57)
      return;
  }
  v58 = (unint64_t *)&v57->__shared_owners_;
  do
    v59 = __ldaxr(v58);
  while (__stlxr(v59 - 1, v58));
  if (!v59)
  {
    ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
    std::__shared_weak_count::__release_weak(v57);
  }
}

void sub_20AF5400C(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF54054(_QWORD *a1, uint64_t a2)
{
  void **v3;
  uint64_t v4;
  void *__p[2];
  unsigned __int8 v7;
  _BYTE v8[24];
  int v9;
  char v10;
  char *v11;

  v9 = 0;
  sub_20AF5C448((uint64_t)&v11, (uint64_t)v8, a2);
  if (v9 == -1)
    sub_20AECFAB8();
  v11 = &v10;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C3F55D0[v9])(__p, &v11, v8);
  if (v9 != -1)
    ((void (*)(char **, _BYTE *))off_24C3F5558[v9])(&v11, v8);
  if ((v7 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v7 & 0x80u) == 0)
    v4 = v7;
  else
    v4 = (uint64_t)__p[1];
  sub_20AEC01D0(a1, (uint64_t)v3, v4);
  if ((char)v7 < 0)
    operator delete(__p[0]);
  return a1;
}

void sub_20AF54138(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF54154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF54168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF5417C@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  mach_timebase_info v7;
  int v8;
  uint64_t v9;
  unsigned __int8 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unsigned __int8 v14;
  unsigned __int128 *v15;
  unsigned __int128 v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  mach_timebase_info info;
  std::__shared_weak_count *v26;
  __int128 v27[33];
  mach_timebase_info v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  unsigned __int128 v40;
  char v41;
  _BYTE v42[40];
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  if (*((_BYTE *)a2 + 384))
  {
    if (*((_BYTE *)a2 + 168))
    {
      v7 = (mach_timebase_info)*((_QWORD *)a2 + 19);
      v6 = *((_QWORD *)a2 + 20);
      if (*((_BYTE *)a2 + 24))
        goto LABEL_4;
    }
    else
    {
      v6 = mach_continuous_time();
      v14 = atomic_load((unsigned __int8 *)&qword_25463D170);
      if ((v14 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
      {
        mach_timebase_info(&v28);
        LODWORD(v23) = v28.numer;
        LODWORD(v24) = v28.denom;
        *(double *)&qword_25463D168 = (double)v23 / (double)v24;
        __cxa_guard_release(&qword_25463D170);
      }
      v7 = (mach_timebase_info)llround(*(double *)&qword_25463D168 * (double)v6);
      LOBYTE(v6) = 2;
      if (*((_BYTE *)a2 + 24))
      {
LABEL_4:
        sub_20AFA84B0((uint64_t *)a2, 1000000000);
        v8 = *((unsigned __int8 *)a2 + 24);
        v28 = v7;
        LOBYTE(v29) = v6;
        LOBYTE(v30) = 0;
        v32 = 0;
        if (v8)
        {
          if (*((char *)a2 + 23) < 0)
          {
            sub_20AEC60F4(&v30, *(void **)a2, *((_QWORD *)a2 + 1));
          }
          else
          {
            v30 = *a2;
            v31 = *((_QWORD *)a2 + 2);
          }
          v32 = 1;
          LOBYTE(v33) = 0;
          v35 = 0;
          if (!*((_BYTE *)a2 + 120))
          {
LABEL_24:
            LOBYTE(v36) = 0;
            v37 = 0;
            if (!*((_BYTE *)a2 + 144))
            {
LABEL_26:
              LOBYTE(v38) = 0;
              v41 = 0;
              if (*((_BYTE *)a2 + 80))
              {
                if (*((char *)a2 + 55) < 0)
                {
                  sub_20AEC60F4(&v38, *((void **)a2 + 4), *((_QWORD *)a2 + 5));
                }
                else
                {
                  v38 = a2[2];
                  v39 = *((_QWORD *)a2 + 6);
                }
                v15 = (unsigned __int128 *)(a2 + 4);
                do
                  v16 = __ldaxp(v15);
                while (__stlxp(v16, v15));
                v40 = v16;
                v41 = 1;
              }
              sub_20AED3838((uint64_t)v42, (uint64_t)(a2 + 11));
              sub_20AF5C6EC(&info, a1, (uint64_t)&v28);
              sub_20AFA7F18((uint64_t)v27, (uint64_t)&info);
              v17 = v26;
              if (v26)
              {
                p_shared_owners = (unint64_t *)&v26->__shared_owners_;
                do
                  v19 = __ldaxr(p_shared_owners);
                while (__stlxr(v19 - 1, p_shared_owners));
                if (!v19)
                {
                  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
                  std::__shared_weak_count::__release_weak(v17);
                }
              }
              sub_20AF4EA3C((uint64_t)&v28);
              goto LABEL_39;
            }
LABEL_25:
            v36 = a2[8];
            v37 = 1;
            goto LABEL_26;
          }
LABEL_17:
          if (*((char *)a2 + 119) < 0)
          {
            sub_20AEC60F4(&v33, *((void **)a2 + 12), *((_QWORD *)a2 + 13));
          }
          else
          {
            v33 = a2[6];
            v34 = *((_QWORD *)a2 + 14);
          }
          v35 = 1;
          LOBYTE(v36) = 0;
          v37 = 0;
          if (!*((_BYTE *)a2 + 144))
            goto LABEL_26;
          goto LABEL_25;
        }
LABEL_16:
        LOBYTE(v33) = 0;
        v35 = 0;
        if (!*((_BYTE *)a2 + 120))
          goto LABEL_24;
        goto LABEL_17;
      }
    }
    v28 = v7;
    LOBYTE(v29) = v6;
    LOBYTE(v30) = 0;
    v32 = 0;
    goto LABEL_16;
  }
  v9 = mach_continuous_time();
  v10 = atomic_load((unsigned __int8 *)&qword_25463D170);
  if ((v10 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
  {
    mach_timebase_info(&info);
    LODWORD(v21) = info.numer;
    LODWORD(v22) = info.denom;
    *(double *)&qword_25463D168 = (double)v21 / (double)v22;
    __cxa_guard_release(&qword_25463D170);
  }
  v28 = (mach_timebase_info)llround(*(double *)&qword_25463D168 * (double)v9);
  v29 = 2;
  LOBYTE(v30) = 0;
  v32 = 0;
  LOBYTE(v33) = 0;
  v35 = 0;
  LOBYTE(v36) = 0;
  v37 = 0;
  LOBYTE(v38) = 0;
  v41 = 0;
  v42[0] = 0;
  v42[24] = 0;
  sub_20AF5C6EC(&info, a1, (uint64_t)&v28);
  sub_20AF4EA3C((uint64_t)&v28);
  sub_20AFA7F18((uint64_t)v27, (uint64_t)&info);
  v11 = v26;
  if (v26)
  {
    v12 = (unint64_t *)&v26->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
LABEL_39:
  sub_20AF4BAD4(a3, 0, v27);
  *(_BYTE *)(a3 + 528) = 1;
  return sub_20AED5474((uint64_t)v27);
}

void sub_20AF54560(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463D170);
  _Unwind_Resume(a1);
}

void sub_20AF54578(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463D170);
  _Unwind_Resume(a1);
}

void sub_20AF54590(_Unwind_Exception *a1)
{
  if (LOBYTE(STACK[0x258]))
  {
    if (SLOBYTE(STACK[0x257]) < 0)
      operator delete((void *)STACK[0x240]);
  }
  _Unwind_Resume(a1);
}

void sub_20AF54654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AED5474((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF54668(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  const void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  BOOL v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unsigned __int8 v19;
  int v20;
  uint64_t v21;
  void **v22;
  void **v23;
  void *v24;
  unint64_t *v25;
  unint64_t v26;
  void *v27;
  __int128 v28;
  char v29;
  void *v30[2];
  uint64_t v31;
  int v32;
  void *v33;
  void **v34;
  __int128 v35;
  __int128 __p;
  uint64_t v37;
  unsigned __int8 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  std::__shared_weak_count *v47;
  __int128 __dst;
  uint64_t v49;
  int v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v4 = *(const void **)(a1 + 424);
  v5 = *(std::__shared_weak_count **)(a1 + 432);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  if (v4)
  {
    v8 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_24C411EB8, (const struct __class_type_info *)&unk_24C3F5F90, 0) != 0;
    if (!v5)
      goto LABEL_11;
  }
  else
  {
    v8 = 0;
    if (!v5)
      goto LABEL_11;
  }
  v9 = (unint64_t *)&v5->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
  {
LABEL_11:
    if (v8)
      goto LABEL_12;
LABEL_21:
    v12 = 0;
    v46 = 0;
    v47 = 0;
    goto LABEL_22;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v8)
    goto LABEL_21;
LABEL_12:
  v11 = *(_QWORD *)(a1 + 424);
  v12 = *(std::__shared_weak_count **)(a1 + 432);
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v46 = v11;
  v47 = v12;
  if (v11)
  {
    v16 = *(_QWORD *)(v11 + 16);
    v15 = *(_QWORD *)(v11 + 24);
    if (v15)
    {
      v17 = (unint64_t *)(v15 + 8);
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
    }
    *(_QWORD *)a2 = &off_24C41D808;
    *(_QWORD *)(a2 + 8) = v16;
    *(_QWORD *)(a2 + 16) = v15;
    *(_BYTE *)(a2 + 120) = 1;
    goto LABEL_54;
  }
LABEL_22:
  v19 = atomic_load((unsigned __int8 *)&qword_25463CF48);
  if ((v19 & 1) == 0 && __cxa_guard_acquire(&qword_25463CF48))
  {
    *(_OWORD *)v30 = xmmword_20B5B0AE0;
    sub_20B1DFBA8((uint64_t *)v30);
    __cxa_atexit((void (*)(void *))sub_20B1DFE54, &xmmword_25463CDA8, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463CF48);
  }
  if (byte_25463CE3F < 0)
  {
    sub_20AEC60F4(&__dst, (void *)xmmword_25463CE28, *((unint64_t *)&xmmword_25463CE28 + 1));
  }
  else
  {
    __dst = xmmword_25463CE28;
    v49 = unk_25463CE38;
  }
  v50 = dword_25463CE40;
  sub_20AF4BC0C(&v33, (uint64_t)&__dst, 1uLL);
  if (*(char *)(a1 + 23) < 0)
  {
    sub_20AEC60F4(v30, *(void **)a1, *(_QWORD *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)v30 = *(_OWORD *)a1;
    v31 = *(_QWORD *)(a1 + 16);
  }
  v32 = *(_DWORD *)(a1 + 24);
  v27 = operator new(0x20uLL);
  v28 = xmmword_20B5B37C0;
  strcpy((char *)v27, "cannot return data as VZCamera");
  v29 = 1;
  sub_20B099ED4((uint64_t *)&v33, (uint64_t)v30, (uint64_t)&v27, (uint64_t)&v35);
  *(_OWORD *)a2 = v35;
  *(_BYTE *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  if (v45)
  {
    *(_BYTE *)(a2 + 40) = 0;
    v20 = v38;
    if (v38)
    {
      *(_OWORD *)(a2 + 16) = __p;
      *(_QWORD *)(a2 + 32) = v37;
      v37 = 0;
      __p = 0uLL;
      *(_BYTE *)(a2 + 40) = 1;
    }
    *(_BYTE *)(a2 + 48) = 0;
    *(_BYTE *)(a2 + 104) = 0;
    if (v44)
    {
      v21 = v41;
      *(_QWORD *)(a2 + 64) = v40;
      *(_OWORD *)(a2 + 48) = v39;
      v39 = 0uLL;
      *(_QWORD *)(a2 + 72) = v21;
      *(_OWORD *)(a2 + 80) = v42;
      *(_QWORD *)(a2 + 96) = v43;
      v40 = 0;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(a2 + 104) = 1;
    }
    *(_BYTE *)(a2 + 112) = 1;
    *(_BYTE *)(a2 + 120) = 0;
    if (v20 && SHIBYTE(v37) < 0)
      operator delete((void *)__p);
    if (!v29)
      goto LABEL_42;
    goto LABEL_40;
  }
  *(_BYTE *)(a2 + 120) = 0;
  if (v29)
  {
LABEL_40:
    if (SHIBYTE(v28) < 0)
      operator delete(v27);
  }
LABEL_42:
  if (SHIBYTE(v31) < 0)
    operator delete(v30[0]);
  v22 = (void **)v33;
  if (v33)
  {
    v23 = v34;
    v24 = v33;
    if (v34 != v33)
    {
      do
      {
        if (*((char *)v23 - 9) < 0)
          operator delete(*(v23 - 4));
        v23 -= 4;
      }
      while (v23 != v22);
      v24 = v33;
    }
    v34 = v22;
    operator delete(v24);
  }
  if (SHIBYTE(v49) < 0)
    operator delete((void *)__dst);
LABEL_54:
  if (v12)
  {
    v25 = (unint64_t *)&v12->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_20AF54A74(_Unwind_Exception *a1)
{
  uint64_t v1;

  __cxa_guard_abort(&qword_25463CF48);
  sub_20AEC147C(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20AF54A94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23)
{
  uint64_t v23;

  sub_20AF4BA50(&a23);
  if (*(char *)(v23 - 73) < 0)
    operator delete(*(void **)(v23 - 96));
  sub_20AEC147C(v23 - 112);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF54B18(_QWORD *result)
{
  *result = &off_24C3F5CF8;
  return result;
}

void sub_20AF54B28(_QWORD *a1)
{
  *a1 = &off_24C3F5CF8;
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF54B48()
{
  return 1;
}

uint64_t sub_20AF54B50()
{
  return 0;
}

uint64_t sub_20AF54B58()
{
  return 11;
}

uint64_t sub_20AF54B60(uint64_t a1)
{
  return a1 + 88;
}

_QWORD *sub_20AF54B68(_QWORD *result)
{
  *result = &off_24C3F54C8;
  return result;
}

void sub_20AF54B78(_QWORD *a1)
{
  *a1 = &off_24C3F54C8;
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF54B98()
{
  return 0;
}

uint64_t sub_20AF54BA0()
{
  return 11;
}

uint64_t sub_20AF54BA8(uint64_t a1)
{
  return a1 + 88;
}

_QWORD *sub_20AF54BB0(_QWORD *result)
{
  *result = &off_24C3F5638;
  return result;
}

_QWORD *sub_20AF54BC0(_QWORD *result)
{
  *result = &off_24C3F5768;
  return result;
}

_QWORD *sub_20AF54BD0(_QWORD *result)
{
  *result = &off_24C3F5838;
  return result;
}

_QWORD *sub_20AF54BE0(_QWORD *result)
{
  *result = &off_24C3F5908;
  return result;
}

__int128 *sub_20AF54BF0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631578);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631578))
    return &xmmword_254631560;
  v2 = sub_20AF54CCC();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_254631560, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_254631570 = v2->__r_.__value_.__r.__words[2];
    xmmword_254631560 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631560, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631578);
  return &xmmword_254631560;
}

void sub_20AF54CB4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631578);
  _Unwind_Resume(a1);
}

std::string *sub_20AF54CCC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631598);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631598))
    return &stru_254631580;
  sub_20AF54F60((uint64_t)__p);
  sub_20AF54DBC((char *)__p, &stru_254631580);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631580, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631598);
  return &stru_254631580;
}

void sub_20AF54D7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631598);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631598);
  _Unwind_Resume(a1);
}

void sub_20AF54DBC(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  *(_OWORD *)v13 = *(_OWORD *)"float32";
  v14 = 0x700000000000000;
  v4 = sub_20AF55144();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v16 = v4->__r_.__value_.__r.__words[2];
    v15 = v5;
  }
  sub_20AEC7620(&__p, (uint64_t)v13, 2uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if ((SHIBYTE(v16) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v14) & 0x80000000) == 0)
      return;
LABEL_16:
    operator delete(v13[0]);
    return;
  }
  operator delete((void *)v15);
  if (SHIBYTE(v14) < 0)
    goto LABEL_16;
}

void sub_20AF54F04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_20AEC2E90(&a10);
  if (a24 < 0)
  {
    operator delete(__p);
    if ((a18 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(a1);
  }
  else if ((a18 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a13);
  _Unwind_Resume(a1);
}

void sub_20AF54F60(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2546315B8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2546315B8))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::PinholeCamera<float, cv3d::kit::cam::PixelOrigin::Corner>]", qword_2546315A0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546315A0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546315B8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2546315D8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2546315D8))
  {
    v5 = sub_20AED4780(qword_2546315A0, "<", 0);
    sub_20AED467C(qword_2546315A0, 0, v5, qword_2546315C0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546315C0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546315D8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2546315F8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2546315F8))
  {
    sub_20B531658((uint64_t)qword_2546315C0, (uint64_t)&xmmword_2546315E0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546315E0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546315F8);
  }
  if (byte_2546315F7 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_2546315E0, *((unint64_t *)&xmmword_2546315E0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2546315E0;
    *(_QWORD *)(a1 + 16) = unk_2546315F0;
  }
}

void sub_20AF550FC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546315F8);
  _Unwind_Resume(a1);
}

void sub_20AF55114(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546315D8);
  _Unwind_Resume(a1);
}

void sub_20AF5512C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546315B8);
  _Unwind_Resume(a1);
}

std::string *sub_20AF55144()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631AB8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631AB8))
    return &stru_254631AA0;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::PixelOrigin::Corner]", __p);
  sub_20B531884((uint64_t)__p, &stru_254631AA0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631AA0, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631AB8);
  return &stru_254631AA0;
}

void sub_20AF551FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631AB8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631AB8);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF55240(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  int v8;
  std::logic_error *exception;
  _BYTE v11[16];
  void *__p;
  char v13;
  char v14;
  void *v15;
  char v16;
  void *v17;
  char v18;
  char v19;
  char v20;
  unsigned __int8 v21;

  *(_QWORD *)a1 = &off_24C3F5508;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 24) = *((_OWORD *)a2 + 1);
  v3 = *a2;
  v4 = *((double *)a2 + 1);
  v5 = 1.0 / *(double *)a2;
  v6 = *((double *)a2 + 2);
  v7 = *((double *)a2 + 3);
  *(double *)(a1 + 40) = v5;
  *(double *)(a1 + 48) = 1.0 / v4;
  *(double *)(a1 + 56) = -(v6 * v5);
  *(double *)(a1 + 64) = -(v7 * (1.0 / v4));
  *(_QWORD *)(a1 + 72) = v3;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(double *)(a1 + 104) = v4;
  *(_QWORD *)(a1 + 112) = 0;
  *(double *)(a1 + 120) = v6;
  *(double *)(a1 + 128) = v7;
  *(_QWORD *)(a1 + 136) = 0x3FF0000000000000;
  sub_20AF553D8((uint64_t)v11, (double *)(a1 + 8));
  v8 = v21;
  if (v21)
  {
    sub_20AECF498((uint64_t)v11);
    if (v21)
      return a1;
  }
  if (!v20)
    goto LABEL_10;
  if (!v19)
    goto LABEL_7;
  if (v18 < 0)
  {
    operator delete(v17);
    if ((v16 & 0x80000000) == 0)
    {
LABEL_7:
      if (v14)
        goto LABEL_8;
      goto LABEL_10;
    }
  }
  else if ((v16 & 0x80000000) == 0)
  {
    goto LABEL_7;
  }
  operator delete(v15);
  if (v14)
  {
LABEL_8:
    if (v13 < 0)
      operator delete(__p);
  }
LABEL_10:
  if (!v8)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "PinholeModel parameters invalid");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  return a1;
}

void sub_20AF5538C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_20AF553A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECD704((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF553B4()
{
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF553C8()
{
  return 1;
}

uint64_t sub_20AF553D0()
{
  return 12;
}

void sub_20AF553D8(uint64_t a1, double *a2)
{
  BOOL v4;
  BOOL v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  void *v11[2];
  uint64_t v12;
  void *__dst[2];
  uint64_t v14;
  char v15;
  void *v16;
  char v17;
  void *v18;
  char v19;
  char v20;
  char v21;
  void *v22[2];
  char v23;
  char v24;
  void *v25;
  char v26;
  void *v27;
  char v28;
  char v29;
  char v30;
  __int128 v31;
  __int128 __p;
  uint64_t v33;
  unsigned __int8 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  _DWORD v43[6];
  int v44;
  _QWORD v45[5];
  _QWORD *v46;

  v4 = ((_QWORD)a2[2] & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000
    && ((_QWORD)a2[3] & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
  v5 = ((_QWORD)a2[1] & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000
    && (*(_QWORD *)a2 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
  if (v5 && v4)
  {
    if (*a2 < 0.00000001 || a2[1] < 0.00000001)
    {
      v10 = 0x3E45798EE2308C3ALL;
      v44 = 0;
      sub_20AF55FA0(v43, "focal length must be positive (>= ");
      sub_20AF55CBC((uint64_t)&v42, (uint64_t)v43, (double *)&v10);
      v45[0] = v43;
      v45[1] = ")";
      v45[2] = v43;
      v45[3] = ")";
      v45[4] = ")";
      if (v44 == -1)
        sub_20AECFAB8();
      v46 = v45;
      ((void (*)(_QWORD **, _DWORD *))off_24C3F55B8[v44])(&v46, v43);
      if (v44 == -1)
        sub_20AECFAB8();
      v45[0] = &v46;
      ((void (*)(void **__return_ptr, _QWORD *, _DWORD *))off_24C3F55D0[v44])(v11, v45, v43);
      if (v44 != -1)
        ((void (*)(_QWORD *, _DWORD *))off_24C3F5558[v44])(v45, v43);
      if (SHIBYTE(v12) < 0)
      {
        sub_20AEC60F4(__dst, v11[0], (unint64_t)v11[1]);
      }
      else
      {
        *(_OWORD *)__dst = *(_OWORD *)v11;
        v14 = v12;
      }
      v15 = 1;
      LOBYTE(v16) = 0;
      v20 = 0;
      v21 = 1;
      sub_20AF558C0(0x16u, (__int128 *)__dst, (uint64_t)&v31);
      *(_OWORD *)a1 = v31;
      *(_BYTE *)(a1 + 16) = 0;
      *(_BYTE *)(a1 + 112) = 0;
      if (v41)
      {
        *(_BYTE *)(a1 + 40) = 0;
        v8 = v34;
        if (v34)
        {
          *(_OWORD *)(a1 + 16) = __p;
          *(_QWORD *)(a1 + 32) = v33;
          v33 = 0;
          __p = 0uLL;
          *(_BYTE *)(a1 + 40) = 1;
        }
        *(_BYTE *)(a1 + 48) = 0;
        *(_BYTE *)(a1 + 104) = 0;
        if (v40)
        {
          v9 = v37;
          *(_QWORD *)(a1 + 64) = v36;
          *(_OWORD *)(a1 + 48) = v35;
          v35 = 0uLL;
          *(_QWORD *)(a1 + 72) = v9;
          *(_OWORD *)(a1 + 80) = v38;
          *(_QWORD *)(a1 + 96) = v39;
          v36 = 0;
          v38 = 0uLL;
          v39 = 0;
          *(_BYTE *)(a1 + 104) = 1;
        }
        *(_BYTE *)(a1 + 112) = 1;
        *(_BYTE *)(a1 + 120) = 0;
        if (v8 && SHIBYTE(v33) < 0)
          operator delete((void *)__p);
      }
      else
      {
        *(_BYTE *)(a1 + 120) = 0;
      }
      if (v21)
      {
        if (v20)
        {
          if (v19 < 0)
            operator delete(v18);
          if (v17 < 0)
            operator delete(v16);
        }
        if (v15 && SHIBYTE(v14) < 0)
          operator delete(__dst[0]);
      }
      if (SHIBYTE(v12) < 0)
        operator delete(v11[0]);
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 1;
    }
    return;
  }
  sub_20AF55B94((uint64_t)v22, "focal length and principal point must be finite");
  v30 = 1;
  sub_20AF558C0(0x16u, (__int128 *)v22, (uint64_t)&v31);
  *(_OWORD *)a1 = v31;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (!v41)
  {
    *(_BYTE *)(a1 + 120) = 0;
    if (!v30)
      return;
LABEL_34:
    if (!v29)
      goto LABEL_37;
    if (v28 < 0)
    {
      operator delete(v27);
      if ((v26 & 0x80000000) == 0)
      {
LABEL_37:
        if (!v24)
          return;
LABEL_38:
        if (v23 < 0)
          operator delete(v22[0]);
        return;
      }
    }
    else if ((v26 & 0x80000000) == 0)
    {
      goto LABEL_37;
    }
    operator delete(v25);
    if (!v24)
      return;
    goto LABEL_38;
  }
  *(_BYTE *)(a1 + 40) = 0;
  v6 = v34;
  if (v34)
  {
    *(_OWORD *)(a1 + 16) = __p;
    *(_QWORD *)(a1 + 32) = v33;
    v33 = 0;
    __p = 0uLL;
    *(_BYTE *)(a1 + 40) = 1;
  }
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 104) = 0;
  if (v40)
  {
    v7 = v37;
    *(_QWORD *)(a1 + 64) = v36;
    *(_OWORD *)(a1 + 48) = v35;
    v35 = 0uLL;
    *(_QWORD *)(a1 + 72) = v7;
    *(_OWORD *)(a1 + 80) = v38;
    *(_QWORD *)(a1 + 96) = v39;
    v36 = 0;
    v38 = 0uLL;
    v39 = 0;
    *(_BYTE *)(a1 + 104) = 1;
  }
  *(_BYTE *)(a1 + 112) = 1;
  *(_BYTE *)(a1 + 120) = 0;
  if (v6 && SHIBYTE(v33) < 0)
    operator delete((void *)__p);
  if (v30)
    goto LABEL_34;
}

void sub_20AF5582C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF558C0(unsigned int a1@<W0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  int v5;
  uint64_t v6;
  void *v7[2];
  char v8;
  char v9;
  void *v10;
  char v11;
  void *v12;
  char v13;
  char v14;
  char v15;
  __int128 v16;
  __int128 __p;
  uint64_t v18;
  unsigned __int8 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  char v26;

  sub_20AECEBD0(v7, a2);
  sub_20AF55A38((uint64_t)&v16, a1, (__int128 *)v7);
  *(_OWORD *)a3 = v16;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (v26)
  {
    *(_BYTE *)(a3 + 40) = 0;
    v5 = v19;
    if (v19)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(_QWORD *)(a3 + 32) = v18;
      v18 = 0;
      __p = 0uLL;
      *(_BYTE *)(a3 + 40) = 1;
    }
    *(_BYTE *)(a3 + 48) = 0;
    *(_BYTE *)(a3 + 104) = 0;
    if (v25)
    {
      v6 = v22;
      *(_QWORD *)(a3 + 64) = v21;
      *(_OWORD *)(a3 + 48) = v20;
      v20 = 0uLL;
      *(_QWORD *)(a3 + 72) = v6;
      *(_OWORD *)(a3 + 80) = v23;
      *(_QWORD *)(a3 + 96) = v24;
      v21 = 0;
      v23 = 0uLL;
      v24 = 0;
      *(_BYTE *)(a3 + 104) = 1;
    }
    *(_BYTE *)(a3 + 112) = 1;
    if (v5 && SHIBYTE(v18) < 0)
      operator delete((void *)__p);
  }
  if (v15)
  {
    if (!v14)
      goto LABEL_13;
    if (v13 < 0)
    {
      operator delete(v12);
      if ((v11 & 0x80000000) == 0)
      {
LABEL_13:
        if (!v9)
          return;
        goto LABEL_14;
      }
    }
    else if ((v11 & 0x80000000) == 0)
    {
      goto LABEL_13;
    }
    operator delete(v10);
    if (!v9)
      return;
LABEL_14:
    if (v8 < 0)
      operator delete(v7[0]);
  }
}

void sub_20AF55A24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECCDB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF55A38(uint64_t a1, unsigned int a2, __int128 *a3)
{
  const std::error_category *v6;
  uint64_t v7;
  void *__dst[2];
  uint64_t v10;
  char v11;
  void *v12[2];
  uint64_t v13;
  uint64_t v14;
  void *__p[2];
  uint64_t v16;
  char v17;
  char v18;

  v6 = std::generic_category();
  sub_20AECEBD0(__dst, a3);
  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (!v18)
    return a1;
  *(_BYTE *)(a1 + 40) = 0;
  if (v11)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)__dst;
    *(_QWORD *)(a1 + 32) = v10;
    __dst[1] = 0;
    v10 = 0;
    __dst[0] = 0;
    *(_BYTE *)(a1 + 40) = 1;
  }
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 104) = 0;
  if (!v17)
  {
    *(_BYTE *)(a1 + 112) = 1;
    if (!v11)
      return a1;
    goto LABEL_13;
  }
  v7 = v14;
  *(_QWORD *)(a1 + 64) = v13;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v12;
  v12[0] = 0;
  v12[1] = 0;
  *(_QWORD *)(a1 + 72) = v7;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)__p;
  *(_QWORD *)(a1 + 96) = v16;
  __p[1] = 0;
  v16 = 0;
  v13 = 0;
  __p[0] = 0;
  *(_BYTE *)(a1 + 104) = 1;
  *(_BYTE *)(a1 + 112) = 1;
  if ((SHIBYTE(v16) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v13) & 0x80000000) == 0)
      goto LABEL_7;
LABEL_12:
    operator delete(v12[0]);
    if (!v11)
      return a1;
    goto LABEL_13;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v13) < 0)
    goto LABEL_12;
LABEL_7:
  if (!v11)
    return a1;
LABEL_13:
  if ((SHIBYTE(v10) & 0x80000000) == 0)
    return a1;
  operator delete(__dst[0]);
  return a1;
}

uint64_t sub_20AF55B94(uint64_t a1, char *__s)
{
  size_t v4;
  size_t v5;
  __int128 *p_dst;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  __int128 __dst;
  unint64_t v12;

  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    p_dst = (__int128 *)operator new(v7 + 1);
    *((_QWORD *)&__dst + 1) = v5;
    v12 = v8 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
LABEL_9:
    memcpy(p_dst, __s, v5);
    *((_BYTE *)p_dst + v5) = 0;
    if ((SHIBYTE(v12) & 0x80000000) == 0)
      goto LABEL_5;
LABEL_10:
    v9 = (void *)__dst;
    sub_20AEC60F4((_BYTE *)a1, (void *)__dst, *((unint64_t *)&__dst + 1));
    *(_BYTE *)(a1 + 24) = 1;
    *(_BYTE *)(a1 + 32) = 0;
    *(_BYTE *)(a1 + 88) = 0;
    operator delete(v9);
    return a1;
  }
  HIBYTE(v12) = v4;
  p_dst = &__dst;
  if (v4)
    goto LABEL_9;
  LOBYTE(__dst) = 0;
  if (SHIBYTE(v12) < 0)
    goto LABEL_10;
LABEL_5:
  *(_OWORD *)a1 = __dst;
  *(_QWORD *)(a1 + 16) = v12;
  *(_BYTE *)(a1 + 24) = 1;
  *(_BYTE *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 88) = 0;
  return a1;
}

void sub_20AF55CA8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20AF55CBC(uint64_t a1, uint64_t a2, double *a3)
{
  std::string *v5;
  std::string *v6;
  std::string::size_type size;
  char *v8;
  int v9;
  uint64_t v10;
  std::string::size_type v11;
  std::string *v12;
  uint64_t v13;
  size_t v14;
  size_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *__p[2];
  unint64_t v21;
  std::string v22;
  uint64_t v23;
  std::string *v24;
  uint64_t v25;
  std::string *v26;
  std::string *v27;
  uint64_t *v28;

  std::to_string(&v22, *a3);
  v5 = (std::string *)v22.__r_.__value_.__r.__words[0];
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v6 = &v22;
  else
    v6 = (std::string *)v22.__r_.__value_.__r.__words[0];
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v22.__r_.__value_.__r.__words[2]);
  else
    size = v22.__r_.__value_.__l.__size_;
  v8 = (char *)&v6[-1].__r_.__value_.__r.__words[2] + 7;
  do
  {
    if (!size)
    {
      size = -1;
      if ((*((_BYTE *)&v22.__r_.__value_.__s + 23) & 0x80) != 0)
        goto LABEL_14;
LABEL_11:
      if (size != HIBYTE(v22.__r_.__value_.__r.__words[2]) - 1)
      {
        v5 = &v22;
        goto LABEL_17;
      }
LABEL_15:
      v23 = a2;
      v24 = &v22;
      v25 = a2;
      v26 = &v22;
      v27 = &v22;
      v10 = *(unsigned int *)(a2 + 24);
      if ((_DWORD)v10 == -1)
        sub_20AECFAB8();
      goto LABEL_16;
    }
    v9 = v8[size--];
  }
  while (v9 == 48);
  if ((*((_BYTE *)&v22.__r_.__value_.__s + 23) & 0x80) == 0)
    goto LABEL_11;
LABEL_14:
  if (size == v22.__r_.__value_.__l.__size_ - 1)
    goto LABEL_15;
LABEL_17:
  if (strtod((const char *)v5, 0) != *a3)
  {
    v23 = a2;
    v24 = &v22;
    v25 = a2;
    v26 = &v22;
    v27 = &v22;
    v10 = *(unsigned int *)(a2 + 24);
    if ((_DWORD)v10 == -1)
      sub_20AECFAB8();
LABEL_16:
    __p[0] = &v23;
    ((void (*)(void **, uint64_t))off_24C3F5588[v10])(__p, a2);
    goto LABEL_40;
  }
  v11 = HIBYTE(v22.__r_.__value_.__r.__words[2]);
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v12 = &v22;
  else
    v12 = (std::string *)v22.__r_.__value_.__r.__words[0];
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v11 = v22.__r_.__value_.__l.__size_;
  v13 = 1;
  if (v12->__r_.__value_.__s.__data_[size] == 46)
    v13 = 2;
  v14 = v13 + size;
  if (v11 >= v14)
    v15 = v14;
  else
    v15 = v11;
  if (v15 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  if (v15 >= 0x17)
  {
    v17 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v15 | 7) != 0x17)
      v17 = v15 | 7;
    v18 = v17 + 1;
    v16 = operator new(v17 + 1);
    __p[1] = (void *)v15;
    v21 = v18 | 0x8000000000000000;
    __p[0] = v16;
    goto LABEL_37;
  }
  HIBYTE(v21) = v15;
  v16 = __p;
  if (v15)
LABEL_37:
    memmove(v16, v12, v15);
  *((_BYTE *)v16 + v15) = 0;
  v23 = a2;
  v24 = (std::string *)__p;
  v25 = a2;
  v26 = (std::string *)__p;
  v27 = (std::string *)__p;
  v19 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v19 == -1)
    sub_20AECFAB8();
  v28 = &v23;
  ((void (*)(uint64_t **, uint64_t))off_24C3F55A0[v19])(&v28, a2);
  if ((SHIBYTE(v21) & 0x80000000) == 0)
  {
LABEL_40:
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
    goto LABEL_43;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    return;
LABEL_43:
  operator delete(v22.__r_.__value_.__l.__data_);
}

void sub_20AF55F34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if ((a20 & 0x80000000) == 0)
    _Unwind_Resume(exception_object);
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_20AF55FA0(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C3F5558[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

uint64_t **sub_20AF56090(uint64_t **result)
{
  uint64_t v1;
  __int128 *v2;
  uint64_t v3;
  __int128 v4;
  char v5;

  v1 = **result;
  v2 = (__int128 *)(*result)[1];
  v3 = *(unsigned int *)(v1 + 24);
  if ((_DWORD)v3 != -1)
    result = (uint64_t **)((uint64_t (*)(char *, uint64_t))off_24C3F5558[v3])(&v5, v1);
  *(_DWORD *)(v1 + 24) = -1;
  if (*((char *)v2 + 23) < 0)
  {
    result = (uint64_t **)sub_20AEC60F4((_BYTE *)v1, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v4 = *v2;
    *(_QWORD *)(v1 + 16) = *((_QWORD *)v2 + 2);
    *(_OWORD *)v1 = v4;
  }
  *(_DWORD *)(v1 + 24) = 1;
  return result;
}

void sub_20AF5612C(uint64_t a1, uint64_t a2)
{
  sub_20AF561D4((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

char *sub_20AF56138(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  __int128 v5;
  char *result;

  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_20AF56358((char **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
  }
  else
  {
    if (*(char *)(v3 + 23) < 0)
    {
      sub_20AEC60F4(*(_BYTE **)(a2 + 8), *(void **)v3, *(_QWORD *)(v3 + 8));
    }
    else
    {
      v5 = *(_OWORD *)v3;
      *(_QWORD *)(v4 + 16) = *(_QWORD *)(v3 + 16);
      *(_OWORD *)v4 = v5;
    }
    result = (char *)(v4 + 24);
    *(_QWORD *)(a2 + 8) = v4 + 24;
    *(_QWORD *)(a2 + 8) = v4 + 24;
  }
  return result;
}

void sub_20AF561CC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_20AF561D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  __int128 *v5;
  __int128 v6;
  uint64_t v7;
  char v8;
  void *v9;
  _BYTE v10[15];
  char v11;
  __int128 __p;
  uint64_t v13;
  _QWORD v14[3];

  v14[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v14 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v14[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v9 = v3;
  *(_QWORD *)v10 = v14[0];
  *(_QWORD *)&v10[7] = *(_QWORD *)((char *)v14 + 7);
  v11 = v4;
  memset(v14, 0, 15);
  v5 = (__int128 *)a1[1];
  if (*((char *)v5 + 23) < 0)
  {
    sub_20AEC60F4(&__p, *(void **)v5, *((_QWORD *)v5 + 1));
  }
  else
  {
    v6 = *v5;
    v13 = *((_QWORD *)v5 + 2);
    __p = v6;
  }
  v7 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v7 != -1)
    ((void (*)(char *, uint64_t))off_24C3F5558[v7])(&v8, v2);
  *(_DWORD *)(v2 + 24) = -1;
  sub_20AEC7620((_QWORD *)v2, (uint64_t)&v9, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v13) & 0x80000000) == 0)
  {
    if ((v11 & 0x80000000) == 0)
      return;
LABEL_10:
    operator delete(v9);
    return;
  }
  operator delete((void *)__p);
  if (v11 < 0)
    goto LABEL_10;
}

void sub_20AF56314(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

char *sub_20AF56358(char **a1, uint64_t a2)
{
  char *v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  __int128 v12;
  char *v13;
  void **v14;
  char *v16;
  char *v17;
  char *v18;

  v3 = *a1;
  v4 = a1[1];
  v5 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3);
  v6 = v5 + 1;
  if (v5 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20AEC60B8();
  if (0x5555555555555556 * ((a1[2] - v3) >> 3) > v6)
    v6 = 0x5555555555555556 * ((a1[2] - v3) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3) >= 0x555555555555555)
    v8 = 0xAAAAAAAAAAAAAAALL;
  else
    v8 = v6;
  if (v8)
  {
    if (v8 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60CC();
    v9 = (char *)operator new(24 * v8);
  }
  else
  {
    v9 = 0;
  }
  v10 = &v9[24 * v5];
  v16 = v10;
  v17 = v10;
  v18 = &v9[24 * v8];
  if (*(char *)(a2 + 23) < 0)
  {
    sub_20AEC60F4(v10, *(void **)a2, *(_QWORD *)(a2 + 8));
    v3 = *a1;
    v4 = a1[1];
    v10 = v16;
    v11 = v17 + 24;
    if (v4 == *a1)
    {
LABEL_17:
      v13 = v3;
      goto LABEL_18;
    }
  }
  else
  {
    *(_OWORD *)v10 = *(_OWORD *)a2;
    *((_QWORD *)v10 + 2) = *(_QWORD *)(a2 + 16);
    v11 = v10 + 24;
    if (v4 == v3)
      goto LABEL_17;
  }
  do
  {
    v12 = *(_OWORD *)(v4 - 24);
    *((_QWORD *)v10 - 1) = *((_QWORD *)v4 - 1);
    *(_OWORD *)(v10 - 24) = v12;
    v10 -= 24;
    *((_QWORD *)v4 - 2) = 0;
    *((_QWORD *)v4 - 1) = 0;
    *((_QWORD *)v4 - 3) = 0;
    v4 -= 24;
  }
  while (v4 != v3);
  v13 = *a1;
  v3 = a1[1];
LABEL_18:
  *a1 = v10;
  a1[1] = v11;
  a1[2] = v18;
  if (v3 != v13)
  {
    v14 = (void **)(v3 - 24);
    do
    {
      if (*((char *)v14 + 23) < 0)
        operator delete(*v14);
      v14 -= 3;
    }
    while (v14 + 3 != (void **)v13);
    v3 = v13;
  }
  if (v3)
    operator delete(v3);
  return v11;
}

void sub_20AF56518(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC65A4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF5652C(_QWORD *a1)
{
  *a1 = &off_24C3F5638;
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF5654C()
{
  return 0;
}

uint64_t sub_20AF56554()
{
  return 1;
}

uint64_t sub_20AF5655C()
{
  return 12;
}

uint64_t sub_20AF56564(uint64_t a1)
{
  return a1 + 152;
}

_QWORD *sub_20AF5656C(_QWORD *result)
{
  *result = &off_24C3F5638;
  return result;
}

void sub_20AF5657C(_QWORD *a1)
{
  *a1 = &off_24C3F5638;
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF5659C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5678;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20AF565AC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5678;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF565DC(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_20AF565F0(uint64_t a1, uint64_t *a2)
{
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  BOOL v12;
  int v13;
  std::logic_error *exception;
  _BYTE v16[16];
  void *__p;
  char v18;
  char v19;
  void *v20;
  char v21;
  void *v22;
  char v23;
  char v24;
  char v25;
  unsigned __int8 v26;

  *(_QWORD *)a1 = &off_24C3F56C8;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 24) = *((_OWORD *)a2 + 1);
  v3 = *((_OWORD *)a2 + 2);
  v4 = *((_OWORD *)a2 + 3);
  *(_QWORD *)(a1 + 72) = a2[8];
  *(_OWORD *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 40) = v3;
  v5 = a2[9];
  *(_DWORD *)(a1 + 88) = *((_DWORD *)a2 + 20);
  *(_QWORD *)(a1 + 80) = v5;
  v6 = *a2;
  v7 = *((double *)a2 + 1);
  v8 = 1.0 / *(double *)a2;
  v9 = *((double *)a2 + 2);
  v10 = *((double *)a2 + 3);
  *(_QWORD *)(a1 + 144) = 0;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  v11 = *((double *)a2 + 8);
  v12 = *((double *)a2 + 6) == 0.0;
  if (*((double *)a2 + 7) != 0.0)
    v12 = 0;
  *(double *)(a1 + 96) = v8;
  *(double *)(a1 + 104) = 1.0 / v7;
  *(double *)(a1 + 112) = -(v9 * v8);
  *(double *)(a1 + 120) = -(v10 * (1.0 / v7));
  *(_QWORD *)(a1 + 128) = v6;
  *(double *)(a1 + 160) = v7;
  *(_QWORD *)(a1 + 168) = 0;
  *(double *)(a1 + 176) = v9;
  *(double *)(a1 + 184) = v10;
  *(_QWORD *)(a1 + 192) = 0x3FF0000000000000;
  if (v11 != 0.0)
    v12 = 0;
  *(_BYTE *)(a1 + 200) = v12;
  *(_BYTE *)(a1 + 201) = v11 == 0.0;
  sub_20AF567DC((uint64_t)v16, a1 + 8);
  v13 = v26;
  if (!v26 || (sub_20AECF498((uint64_t)v16), !v26))
  {
    if (!v25)
      goto LABEL_14;
    if (!v24)
      goto LABEL_11;
    if (v23 < 0)
    {
      operator delete(v22);
      if ((v21 & 0x80000000) == 0)
      {
LABEL_11:
        if (v19)
          goto LABEL_12;
        goto LABEL_14;
      }
    }
    else if ((v21 & 0x80000000) == 0)
    {
      goto LABEL_11;
    }
    operator delete(v20);
    if (v19)
    {
LABEL_12:
      if (v18 < 0)
        operator delete(__p);
    }
LABEL_14:
    if (!v13)
    {
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::logic_error::logic_error(exception, "HeikkilaModel parameters invalid");
      exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
      __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
    }
  }
  return a1;
}

void sub_20AF56790(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_20AF567A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECD704((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF567B8()
{
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF567CC()
{
  return 2;
}

uint64_t sub_20AF567D4()
{
  return 12;
}

void sub_20AF567DC(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  void *v9[2];
  char v10;
  char v11;
  void *v12;
  char v13;
  void *v14;
  char v15;
  char v16;
  char v17;
  void *v18[2];
  char v19;
  char v20;
  void *v21;
  char v22;
  void *__p;
  char v24;
  char v25;
  char v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  unsigned __int8 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  char v37;

  sub_20AF553D8(a1, (double *)a2);
  if (!*(_BYTE *)(a1 + 120))
    return;
  v4 = (*(_QWORD *)(a2 + 32) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
  if ((*(_QWORD *)(a2 + 32) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
  {
    v4 = (*(_QWORD *)(a2 + 40) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
    if ((*(_QWORD *)(a2 + 40) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
    {
      v4 = (*(_QWORD *)(a2 + 48) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
      if ((*(_QWORD *)(a2 + 48) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
      {
        v4 = (*(_QWORD *)(a2 + 56) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
        if ((*(_QWORD *)(a2 + 56) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
          v4 = (*(_QWORD *)(a2 + 64) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
      }
    }
  }
  if (v4)
  {
    if ((*(_QWORD *)(a2 + 72) & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      sub_20AF55B94((uint64_t)v9, "convergence epsilon must be finite");
      v17 = 1;
      sub_20AF558C0(0x16u, (__int128 *)v9, (uint64_t)&v27);
      *(_OWORD *)a1 = v27;
      *(_BYTE *)(a1 + 16) = 0;
      *(_BYTE *)(a1 + 112) = 0;
      if (v37)
      {
        *(_BYTE *)(a1 + 40) = 0;
        v7 = v30;
        if (v30)
        {
          *(_OWORD *)(a1 + 16) = v28;
          *(_QWORD *)(a1 + 32) = v29;
          v29 = 0;
          v28 = 0uLL;
          *(_BYTE *)(a1 + 40) = 1;
        }
        *(_BYTE *)(a1 + 48) = 0;
        *(_BYTE *)(a1 + 104) = 0;
        if (v36)
        {
          v8 = v33;
          *(_QWORD *)(a1 + 64) = v32;
          *(_OWORD *)(a1 + 48) = v31;
          v31 = 0uLL;
          *(_QWORD *)(a1 + 72) = v8;
          *(_OWORD *)(a1 + 80) = v34;
          *(_QWORD *)(a1 + 96) = v35;
          v32 = 0;
          v34 = 0uLL;
          v35 = 0;
          *(_BYTE *)(a1 + 104) = 1;
        }
        *(_BYTE *)(a1 + 112) = 1;
        *(_BYTE *)(a1 + 120) = 0;
        if (v7 && SHIBYTE(v29) < 0)
          operator delete((void *)v28);
      }
      else
      {
        *(_BYTE *)(a1 + 120) = 0;
      }
      if (v17)
      {
        if (v16)
        {
          if (v15 < 0)
            operator delete(v14);
          if (v13 < 0)
            operator delete(v12);
        }
        if (v11)
        {
          if (v10 < 0)
            operator delete(v9[0]);
        }
      }
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 1;
    }
    return;
  }
  sub_20AF55B94((uint64_t)v18, "distortion coefficients must be finite");
  v26 = 1;
  sub_20AF558C0(0x16u, (__int128 *)v18, (uint64_t)&v27);
  *(_OWORD *)a1 = v27;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (!v37)
  {
    *(_BYTE *)(a1 + 120) = 0;
    if (!v26)
      return;
    goto LABEL_30;
  }
  *(_BYTE *)(a1 + 40) = 0;
  v5 = v30;
  if (v30)
  {
    *(_OWORD *)(a1 + 16) = v28;
    *(_QWORD *)(a1 + 32) = v29;
    v29 = 0;
    v28 = 0uLL;
    *(_BYTE *)(a1 + 40) = 1;
  }
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 104) = 0;
  if (v36)
  {
    v6 = v33;
    *(_QWORD *)(a1 + 64) = v32;
    *(_OWORD *)(a1 + 48) = v31;
    v31 = 0uLL;
    *(_QWORD *)(a1 + 72) = v6;
    *(_OWORD *)(a1 + 80) = v34;
    *(_QWORD *)(a1 + 96) = v35;
    v32 = 0;
    v34 = 0uLL;
    v35 = 0;
    *(_BYTE *)(a1 + 104) = 1;
  }
  *(_BYTE *)(a1 + 112) = 1;
  *(_BYTE *)(a1 + 120) = 0;
  if (v5 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  if (v26)
  {
LABEL_30:
    if (v25)
    {
      if (v24 < 0)
        operator delete(__p);
      if (v22 < 0)
        operator delete(v21);
    }
    if (v20 && v19 < 0)
      operator delete(v18[0]);
  }
}

void sub_20AF56B4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AECCDB4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF56B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  sub_20AECCDB4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF56B74(_QWORD *a1)
{
  *a1 = &off_24C3F5768;
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF56B94()
{
  return 0;
}

uint64_t sub_20AF56B9C()
{
  return 2;
}

uint64_t sub_20AF56BA4()
{
  return 12;
}

uint64_t sub_20AF56BAC(uint64_t a1)
{
  return a1 + 216;
}

_QWORD *sub_20AF56BB4(_QWORD *result)
{
  *result = &off_24C3F5768;
  return result;
}

void sub_20AF56BC4(_QWORD *a1)
{
  *a1 = &off_24C3F5768;
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF56BE4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F57A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20AF56BF4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F57A8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF56C24(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

__int128 *sub_20AF56C34()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631438);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631438))
    return &xmmword_254631420;
  v2 = sub_20AF56D10();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_254631420, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_254631430 = v2->__r_.__value_.__r.__words[2];
    xmmword_254631420 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631420, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631438);
  return &xmmword_254631420;
}

void sub_20AF56CF8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631438);
  _Unwind_Resume(a1);
}

std::string *sub_20AF56D10()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631458);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631458))
    return &stru_254631440;
  sub_20AF56FA4((uint64_t)__p);
  sub_20AF56E00((char *)__p, &stru_254631440);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631440, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631458);
  return &stru_254631440;
}

void sub_20AF56DC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631458);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631458);
  _Unwind_Resume(a1);
}

void sub_20AF56E00(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  *(_OWORD *)v13 = *(_OWORD *)"float32";
  v14 = 0x700000000000000;
  v4 = sub_20AF57188();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v16 = v4->__r_.__value_.__r.__words[2];
    v15 = v5;
  }
  sub_20AEC7620(&__p, (uint64_t)v13, 2uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if ((SHIBYTE(v16) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v14) & 0x80000000) == 0)
      return;
LABEL_16:
    operator delete(v13[0]);
    return;
  }
  operator delete((void *)v15);
  if (SHIBYTE(v14) < 0)
    goto LABEL_16;
}

void sub_20AF56F48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_20AEC2E90(&a10);
  if (a24 < 0)
  {
    operator delete(__p);
    if ((a18 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(a1);
  }
  else if ((a18 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a13);
  _Unwind_Resume(a1);
}

void sub_20AF56FA4(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254631478);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254631478))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::PinholeCamera<float, cv3d::kit::cam::PixelOrigin::Center>]", qword_254631460);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631460, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631478);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254631498);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254631498))
  {
    v5 = sub_20AED4780(qword_254631460, "<", 0);
    sub_20AED467C(qword_254631460, 0, v5, qword_254631480);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631480, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631498);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2546314B8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2546314B8))
  {
    sub_20B531658((uint64_t)qword_254631480, (uint64_t)&xmmword_2546314A0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546314A0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546314B8);
  }
  if (byte_2546314B7 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_2546314A0, *((unint64_t *)&xmmword_2546314A0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2546314A0;
    *(_QWORD *)(a1 + 16) = unk_2546314B0;
  }
}

void sub_20AF57140(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546314B8);
  _Unwind_Resume(a1);
}

void sub_20AF57158(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631498);
  _Unwind_Resume(a1);
}

void sub_20AF57170(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631478);
  _Unwind_Resume(a1);
}

std::string *sub_20AF57188()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631A98);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631A98))
    return &stru_254631A80;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::PixelOrigin::Center]", __p);
  sub_20B531884((uint64_t)__p, &stru_254631A80);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631A80, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631A98);
  return &stru_254631A80;
}

void sub_20AF57240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631A98);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631A98);
  _Unwind_Resume(a1);
}

void sub_20AF57280(_QWORD *a1)
{
  *a1 = &off_24C3F5838;
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF572A0()
{
  return 1;
}

uint64_t sub_20AF572A8()
{
  return 1;
}

uint64_t sub_20AF572B0()
{
  return 12;
}

uint64_t sub_20AF572B8(uint64_t a1)
{
  return a1 + 152;
}

_QWORD *sub_20AF572C0(_QWORD *result)
{
  *result = &off_24C3F5838;
  return result;
}

void sub_20AF572D0(_QWORD *a1)
{
  *a1 = &off_24C3F5838;
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF572F0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5878;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20AF57300(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5878;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF57330(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_20AF57340(_QWORD *a1)
{
  *a1 = &off_24C3F5908;
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF57360()
{
  return 1;
}

uint64_t sub_20AF57368()
{
  return 2;
}

uint64_t sub_20AF57370()
{
  return 12;
}

uint64_t sub_20AF57378(uint64_t a1)
{
  return a1 + 216;
}

_QWORD *sub_20AF57380(_QWORD *result)
{
  *result = &off_24C3F5908;
  return result;
}

void sub_20AF57390(_QWORD *a1)
{
  *a1 = &off_24C3F5908;
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF573B0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5948;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20AF573C0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5948;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF573F0(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_20AF57400(_QWORD *a1)
{
  *a1 = &off_24C3F5CF8;
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF57420()
{
  return 1;
}

uint64_t sub_20AF57428(uint64_t a1, int *a2)
{
  int v3;
  float v4;
  float v5;
  float v6;
  float v7;
  int v8;
  std::logic_error *exception;
  _BYTE v11[16];
  void *__p;
  char v13;
  char v14;
  void *v15;
  char v16;
  void *v17;
  char v18;
  char v19;
  char v20;
  unsigned __int8 v21;

  *(_QWORD *)a1 = &off_24C3F5D38;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 1);
  v3 = *a2;
  v4 = *((float *)a2 + 1);
  v5 = 1.0 / *(float *)a2;
  v6 = *((float *)a2 + 2);
  v7 = *((float *)a2 + 3);
  *(float *)(a1 + 24) = v5;
  *(float *)(a1 + 28) = 1.0 / v4;
  *(float *)(a1 + 32) = -(float)(v6 * v5);
  *(float *)(a1 + 36) = -(float)(v7 * (float)(1.0 / v4));
  *(_DWORD *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 44) = 0;
  *(float *)(a1 + 56) = v4;
  *(_DWORD *)(a1 + 60) = 0;
  *(float *)(a1 + 64) = v6;
  *(float *)(a1 + 68) = v7;
  *(_DWORD *)(a1 + 72) = 1065353216;
  sub_20AF575C4((uint64_t)v11, (float *)(a1 + 8));
  v8 = v21;
  if (v21)
  {
    sub_20AECF498((uint64_t)v11);
    if (v21)
      return a1;
  }
  if (!v20)
    goto LABEL_10;
  if (!v19)
    goto LABEL_7;
  if (v18 < 0)
  {
    operator delete(v17);
    if ((v16 & 0x80000000) == 0)
    {
LABEL_7:
      if (v14)
        goto LABEL_8;
      goto LABEL_10;
    }
  }
  else if ((v16 & 0x80000000) == 0)
  {
    goto LABEL_7;
  }
  operator delete(v15);
  if (v14)
  {
LABEL_8:
    if (v13 < 0)
      operator delete(__p);
  }
LABEL_10:
  if (!v8)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "PinholeModel parameters invalid");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  return a1;
}

void sub_20AF57578(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_20AF5758C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECD704((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF575A0()
{
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF575B4()
{
  return 1;
}

uint64_t sub_20AF575BC()
{
  return 11;
}

void sub_20AF575C4(uint64_t a1, float *a2)
{
  BOOL v4;
  BOOL v5;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  void *v12[2];
  uint64_t v13;
  void *__dst[2];
  uint64_t v15;
  char v16;
  void *v17;
  char v18;
  void *__p;
  char v20;
  char v21;
  char v22;
  __int128 v23;
  char v24;
  char v25;
  void *v26;
  char v27;
  void *v28;
  char v29;
  char v30;
  char v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  unsigned __int8 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  _DWORD v44[6];
  int v45;
  _QWORD v46[5];
  _QWORD *v47;

  v4 = ((_DWORD)a2[2] & 0x7FFFFFFFu) < 0x7F800000 && ((_DWORD)a2[3] & 0x7FFFFFFFu) < 0x7F800000;
  v5 = ((_DWORD)a2[1] & 0x7FFFFFFFu) < 0x7F800000 && (*(_DWORD *)a2 & 0x7FFFFFFFu) < 0x7F800000;
  if (v5 && v4)
  {
    if (*a2 < 0.000001 || a2[1] < 0.000001)
    {
      v11 = 897988541;
      v45 = 0;
      sub_20AF55FA0(v44, "focal length must be positive (>= ");
      sub_20AF57AB0((uint64_t)&v43, (uint64_t)v44, (float *)&v11);
      v46[0] = v44;
      v46[1] = ")";
      v46[2] = v44;
      v46[3] = ")";
      v46[4] = ")";
      if (v45 == -1)
        sub_20AECFAB8();
      v47 = v46;
      ((void (*)(_QWORD **, _DWORD *))off_24C3F55B8[v45])(&v47, v44);
      if (v45 == -1)
        sub_20AECFAB8();
      v46[0] = &v47;
      ((void (*)(void **__return_ptr, _QWORD *, _DWORD *))off_24C3F55D0[v45])(v12, v46, v44);
      if (v45 != -1)
        ((void (*)(_QWORD *, _DWORD *))off_24C3F5558[v45])(v46, v44);
      if (SHIBYTE(v13) < 0)
      {
        sub_20AEC60F4(__dst, v12[0], (unint64_t)v12[1]);
      }
      else
      {
        *(_OWORD *)__dst = *(_OWORD *)v12;
        v15 = v13;
      }
      v16 = 1;
      LOBYTE(v17) = 0;
      v21 = 0;
      v22 = 1;
      sub_20AF558C0(0x16u, (__int128 *)__dst, (uint64_t)&v32);
      *(_OWORD *)a1 = v32;
      *(_BYTE *)(a1 + 16) = 0;
      *(_BYTE *)(a1 + 112) = 0;
      if (v42)
      {
        *(_BYTE *)(a1 + 40) = 0;
        v9 = v35;
        if (v35)
        {
          *(_OWORD *)(a1 + 16) = v33;
          *(_QWORD *)(a1 + 32) = v34;
          v34 = 0;
          v33 = 0uLL;
          *(_BYTE *)(a1 + 40) = 1;
        }
        *(_BYTE *)(a1 + 48) = 0;
        *(_BYTE *)(a1 + 104) = 0;
        if (v41)
        {
          v10 = v38;
          *(_QWORD *)(a1 + 64) = v37;
          *(_OWORD *)(a1 + 48) = v36;
          v37 = 0;
          v36 = 0uLL;
          *(_QWORD *)(a1 + 72) = v10;
          *(_OWORD *)(a1 + 80) = v39;
          *(_QWORD *)(a1 + 96) = v40;
          v39 = 0uLL;
          v40 = 0;
          *(_BYTE *)(a1 + 104) = 1;
        }
        *(_BYTE *)(a1 + 112) = 1;
        *(_BYTE *)(a1 + 120) = 0;
        if (v9 && SHIBYTE(v34) < 0)
          operator delete((void *)v33);
      }
      else
      {
        *(_BYTE *)(a1 + 120) = 0;
      }
      if (v22)
      {
        if (v21)
        {
          if (v20 < 0)
            operator delete(__p);
          if (v18 < 0)
            operator delete(v17);
        }
        if (v16 && SHIBYTE(v15) < 0)
          operator delete(__dst[0]);
      }
      if (SHIBYTE(v13) < 0)
        operator delete(v12[0]);
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 1;
    }
    return;
  }
  sub_20AF55B94((uint64_t)&v23, "focal length and principal point must be finite");
  v31 = 1;
  sub_20AF558C0(0x16u, &v23, (uint64_t)&v32);
  *(_OWORD *)a1 = v32;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (!v42)
  {
    *(_BYTE *)(a1 + 120) = 0;
    if (!v31)
      return;
LABEL_35:
    if (!v30)
      goto LABEL_38;
    if (v29 < 0)
    {
      operator delete(v28);
      if ((v27 & 0x80000000) == 0)
      {
LABEL_38:
        if (!v25)
          return;
LABEL_39:
        if (v24 < 0)
          operator delete((void *)v23);
        return;
      }
    }
    else if ((v27 & 0x80000000) == 0)
    {
      goto LABEL_38;
    }
    operator delete(v26);
    if (!v25)
      return;
    goto LABEL_39;
  }
  *(_BYTE *)(a1 + 40) = 0;
  v7 = v35;
  if (v35)
  {
    *(_OWORD *)(a1 + 16) = v33;
    *(_QWORD *)(a1 + 32) = v34;
    v34 = 0;
    v33 = 0uLL;
    *(_BYTE *)(a1 + 40) = 1;
  }
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 104) = 0;
  if (v41)
  {
    v8 = v38;
    *(_QWORD *)(a1 + 64) = v37;
    *(_OWORD *)(a1 + 48) = v36;
    v37 = 0;
    v36 = 0uLL;
    *(_QWORD *)(a1 + 72) = v8;
    *(_OWORD *)(a1 + 80) = v39;
    *(_QWORD *)(a1 + 96) = v40;
    v39 = 0uLL;
    v40 = 0;
    *(_BYTE *)(a1 + 104) = 1;
  }
  *(_BYTE *)(a1 + 112) = 1;
  *(_BYTE *)(a1 + 120) = 0;
  if (v7 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v31)
    goto LABEL_35;
}

void sub_20AF57A1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF57AB0(uint64_t a1, uint64_t a2, float *a3)
{
  std::string *v5;
  std::string *v6;
  std::string::size_type size;
  char *v8;
  int v9;
  uint64_t v10;
  std::string::size_type v11;
  std::string *v12;
  uint64_t v13;
  size_t v14;
  size_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *__p[2];
  unint64_t v21;
  std::string v22;
  uint64_t v23;
  std::string *v24;
  uint64_t v25;
  std::string *v26;
  std::string *v27;
  uint64_t *v28;

  std::to_string(&v22, *a3);
  v5 = (std::string *)v22.__r_.__value_.__r.__words[0];
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v6 = &v22;
  else
    v6 = (std::string *)v22.__r_.__value_.__r.__words[0];
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v22.__r_.__value_.__r.__words[2]);
  else
    size = v22.__r_.__value_.__l.__size_;
  v8 = (char *)&v6[-1].__r_.__value_.__r.__words[2] + 7;
  do
  {
    if (!size)
    {
      size = -1;
      if ((*((_BYTE *)&v22.__r_.__value_.__s + 23) & 0x80) != 0)
        goto LABEL_14;
LABEL_11:
      if (size != HIBYTE(v22.__r_.__value_.__r.__words[2]) - 1)
      {
        v5 = &v22;
        goto LABEL_17;
      }
LABEL_15:
      v23 = a2;
      v24 = &v22;
      v25 = a2;
      v26 = &v22;
      v27 = &v22;
      v10 = *(unsigned int *)(a2 + 24);
      if ((_DWORD)v10 == -1)
        sub_20AECFAB8();
      goto LABEL_16;
    }
    v9 = v8[size--];
  }
  while (v9 == 48);
  if ((*((_BYTE *)&v22.__r_.__value_.__s + 23) & 0x80) == 0)
    goto LABEL_11;
LABEL_14:
  if (size == v22.__r_.__value_.__l.__size_ - 1)
    goto LABEL_15;
LABEL_17:
  if (strtof((const char *)v5, 0) != *a3)
  {
    v23 = a2;
    v24 = &v22;
    v25 = a2;
    v26 = &v22;
    v27 = &v22;
    v10 = *(unsigned int *)(a2 + 24);
    if ((_DWORD)v10 == -1)
      sub_20AECFAB8();
LABEL_16:
    __p[0] = &v23;
    ((void (*)(void **, uint64_t))off_24C3F5588[v10])(__p, a2);
    goto LABEL_40;
  }
  v11 = HIBYTE(v22.__r_.__value_.__r.__words[2]);
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v12 = &v22;
  else
    v12 = (std::string *)v22.__r_.__value_.__r.__words[0];
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v11 = v22.__r_.__value_.__l.__size_;
  v13 = 1;
  if (v12->__r_.__value_.__s.__data_[size] == 46)
    v13 = 2;
  v14 = v13 + size;
  if (v11 >= v14)
    v15 = v14;
  else
    v15 = v11;
  if (v15 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  if (v15 >= 0x17)
  {
    v17 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v15 | 7) != 0x17)
      v17 = v15 | 7;
    v18 = v17 + 1;
    v16 = operator new(v17 + 1);
    __p[1] = (void *)v15;
    v21 = v18 | 0x8000000000000000;
    __p[0] = v16;
    goto LABEL_37;
  }
  HIBYTE(v21) = v15;
  v16 = __p;
  if (v15)
LABEL_37:
    memmove(v16, v12, v15);
  *((_BYTE *)v16 + v15) = 0;
  v23 = a2;
  v24 = (std::string *)__p;
  v25 = a2;
  v26 = (std::string *)__p;
  v27 = (std::string *)__p;
  v19 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v19 == -1)
    sub_20AECFAB8();
  v28 = &v23;
  ((void (*)(uint64_t **, uint64_t))off_24C3F55A0[v19])(&v28, a2);
  if ((SHIBYTE(v21) & 0x80000000) == 0)
  {
LABEL_40:
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
    goto LABEL_43;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    return;
LABEL_43:
  operator delete(v22.__r_.__value_.__l.__data_);
}

void sub_20AF57D28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if ((a20 & 0x80000000) == 0)
    _Unwind_Resume(exception_object);
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF57D94(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5D98;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20AF57DA4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5D98;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF57DD4(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_20AF57DE4(_QWORD *a1)
{
  *a1 = &off_24C3F54C8;
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF57E04()
{
  return 1;
}

void sub_20AF57E0C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F59D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20AF57E1C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F59D8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF57E4C(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_20AF57E5C(uint64_t a1, std::string::size_type a2, uint64_t a3)
{
  uint64_t v5;
  std::string *p_p;
  std::string::size_type size;
  int v8;
  size_t v9;
  void **v10;
  unint64_t v11;
  unint64_t v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  std::string *v16;
  uint64_t v17;
  uint64_t v18;
  std::string::size_type v19;
  uint64_t v20;
  void *__dst[2];
  unint64_t v22;
  std::string __p;
  void **v24;
  void **v25;
  std::string *v26;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20AEC0BD8(v5);
  v26 = (std::string *)v5;
  sub_20B5287D4(a3, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  sub_20AEC01D0((_QWORD *)(v5 + 16), (uint64_t)p_p, size);
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    v8 = *(_DWORD *)(v5 + 120);
    if ((v8 & 0x10) == 0)
      goto LABEL_9;
LABEL_12:
    v11 = *(_QWORD *)(v5 + 112);
    v12 = *(_QWORD *)(v5 + 72);
    if (v11 < v12)
    {
      *(_QWORD *)(v5 + 112) = v12;
      v11 = v12;
    }
    v13 = *(const void **)(v5 + 64);
    v9 = v11 - (_QWORD)v13;
    if (v11 - (unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_30;
    goto LABEL_15;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  v8 = *(_DWORD *)(v5 + 120);
  if ((v8 & 0x10) != 0)
    goto LABEL_12;
LABEL_9:
  if ((v8 & 8) == 0)
  {
    v9 = 0;
    HIBYTE(v22) = 0;
    v10 = __dst;
    goto LABEL_22;
  }
  v13 = *(const void **)(v5 + 40);
  v9 = *(_QWORD *)(v5 + 56) - (_QWORD)v13;
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
LABEL_30:
    sub_20AEC0138();
LABEL_15:
  if (v9 >= 0x17)
  {
    v14 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v14 = v9 | 7;
    v15 = v14 + 1;
    v10 = (void **)operator new(v14 + 1);
    __dst[1] = (void *)v9;
    v22 = v15 | 0x8000000000000000;
    __dst[0] = v10;
    goto LABEL_21;
  }
  HIBYTE(v22) = v9;
  v10 = __dst;
  if (v9)
LABEL_21:
    memmove(v10, v13, v9);
LABEL_22:
  *((_BYTE *)v10 + v9) = 0;
  v16 = v26;
  if (v26)
  {
    v17 = MEMORY[0x24BEDB7F0];
    v18 = *MEMORY[0x24BEDB7F0];
    v26->__r_.__value_.__r.__words[0] = *MEMORY[0x24BEDB7F0];
    v19 = *(_QWORD *)(v17 + 72);
    *(std::string::size_type *)((char *)v16->__r_.__value_.__r.__words + *(_QWORD *)(v18 - 24)) = *(_QWORD *)(v17 + 64);
    v16[1].__r_.__value_.__r.__words[0] = MEMORY[0x24BEDB848] + 16;
    v16->__r_.__value_.__r.__words[2] = v19;
    if (v16[4].__r_.__value_.__s.__data_[15] < 0)
      operator delete((void *)v16[3].__r_.__value_.__r.__words[2]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](&v16[5].__r_.__value_.__r.__words[1]);
    MEMORY[0x20BD3583C](v16, 0x10B2C40EED050F3);
  }
  __p.__r_.__value_.__r.__words[0] = a2;
  __p.__r_.__value_.__l.__size_ = (std::string::size_type)__dst;
  __p.__r_.__value_.__r.__words[2] = a2;
  v24 = __dst;
  v25 = __dst;
  v20 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v20 == -1)
    sub_20AECFAB8();
  v26 = &__p;
  ((void (*)(std::string **, std::string::size_type))off_24C3F55A0[v20])(&v26, a2);
  if (SHIBYTE(v22) < 0)
    operator delete(__dst[0]);
}

void sub_20AF580E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  if (a21 < 0)
  {
    operator delete(__p);
    sub_20B52CE84((uint64_t *)(v21 - 56));
    _Unwind_Resume(a1);
  }
  sub_20B52CE84((uint64_t *)(v21 - 56));
  _Unwind_Resume(a1);
}

void sub_20AF58160(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  void *v9[2];
  char v10;
  char v11;
  void *v12;
  char v13;
  void *v14;
  char v15;
  char v16;
  char v17;
  void *v18[2];
  char v19;
  char v20;
  void *v21;
  char v22;
  void *__p;
  char v24;
  char v25;
  char v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  unsigned __int8 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  char v37;

  sub_20AF575C4(a1, (float *)a2);
  if (!*(_BYTE *)(a1 + 120))
    return;
  v4 = (*(_DWORD *)(a2 + 16) & 0x7FFFFFFFu) < 0x7F800000;
  if ((*(_DWORD *)(a2 + 16) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
  {
    v4 = (*(_DWORD *)(a2 + 20) & 0x7FFFFFFFu) < 0x7F800000;
    if ((*(_DWORD *)(a2 + 20) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
    {
      v4 = (*(_DWORD *)(a2 + 24) & 0x7FFFFFFFu) < 0x7F800000;
      if ((*(_DWORD *)(a2 + 24) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
      {
        v4 = (*(_DWORD *)(a2 + 28) & 0x7FFFFFFFu) < 0x7F800000;
        if ((*(_DWORD *)(a2 + 28) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
          v4 = (*(_DWORD *)(a2 + 32) & 0x7FFFFFFFu) < 0x7F800000;
      }
    }
  }
  if (v4)
  {
    if ((*(_DWORD *)(a2 + 36) & 0x7FFFFFFFu) >= 0x7F800000)
    {
      sub_20AF55B94((uint64_t)v9, "convergence epsilon must be finite");
      v17 = 1;
      sub_20AF558C0(0x16u, (__int128 *)v9, (uint64_t)&v27);
      *(_OWORD *)a1 = v27;
      *(_BYTE *)(a1 + 16) = 0;
      *(_BYTE *)(a1 + 112) = 0;
      if (v37)
      {
        *(_BYTE *)(a1 + 40) = 0;
        v7 = v30;
        if (v30)
        {
          *(_OWORD *)(a1 + 16) = v28;
          *(_QWORD *)(a1 + 32) = v29;
          v29 = 0;
          v28 = 0uLL;
          *(_BYTE *)(a1 + 40) = 1;
        }
        *(_BYTE *)(a1 + 48) = 0;
        *(_BYTE *)(a1 + 104) = 0;
        if (v36)
        {
          v8 = v33;
          *(_QWORD *)(a1 + 64) = v32;
          *(_OWORD *)(a1 + 48) = v31;
          v31 = 0uLL;
          *(_QWORD *)(a1 + 72) = v8;
          *(_OWORD *)(a1 + 80) = v34;
          *(_QWORD *)(a1 + 96) = v35;
          v32 = 0;
          v34 = 0uLL;
          v35 = 0;
          *(_BYTE *)(a1 + 104) = 1;
        }
        *(_BYTE *)(a1 + 112) = 1;
        *(_BYTE *)(a1 + 120) = 0;
        if (v7 && SHIBYTE(v29) < 0)
          operator delete((void *)v28);
      }
      else
      {
        *(_BYTE *)(a1 + 120) = 0;
      }
      if (v17)
      {
        if (v16)
        {
          if (v15 < 0)
            operator delete(v14);
          if (v13 < 0)
            operator delete(v12);
        }
        if (v11)
        {
          if (v10 < 0)
            operator delete(v9[0]);
        }
      }
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 1;
    }
    return;
  }
  sub_20AF55B94((uint64_t)v18, "distortion coefficients must be finite");
  v26 = 1;
  sub_20AF558C0(0x16u, (__int128 *)v18, (uint64_t)&v27);
  *(_OWORD *)a1 = v27;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (!v37)
  {
    *(_BYTE *)(a1 + 120) = 0;
    if (!v26)
      return;
    goto LABEL_30;
  }
  *(_BYTE *)(a1 + 40) = 0;
  v5 = v30;
  if (v30)
  {
    *(_OWORD *)(a1 + 16) = v28;
    *(_QWORD *)(a1 + 32) = v29;
    v29 = 0;
    v28 = 0uLL;
    *(_BYTE *)(a1 + 40) = 1;
  }
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 104) = 0;
  if (v36)
  {
    v6 = v33;
    *(_QWORD *)(a1 + 64) = v32;
    *(_OWORD *)(a1 + 48) = v31;
    v31 = 0uLL;
    *(_QWORD *)(a1 + 72) = v6;
    *(_OWORD *)(a1 + 80) = v34;
    *(_QWORD *)(a1 + 96) = v35;
    v32 = 0;
    v34 = 0uLL;
    v35 = 0;
    *(_BYTE *)(a1 + 104) = 1;
  }
  *(_BYTE *)(a1 + 112) = 1;
  *(_BYTE *)(a1 + 120) = 0;
  if (v5 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  if (v26)
  {
LABEL_30:
    if (v25)
    {
      if (v24 < 0)
        operator delete(__p);
      if (v22 < 0)
        operator delete(v21);
    }
    if (v20 && v19 < 0)
      operator delete(v18[0]);
  }
}

void sub_20AF584D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AECCDB4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF584E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  sub_20AECCDB4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF584F8(uint64_t a1, int *a2)
{
  __int128 v3;
  int v4;
  float v5;
  float v6;
  float v7;
  float v8;
  float v9;
  float v10;
  BOOL v11;
  int v12;
  std::logic_error *exception;
  _BYTE v15[16];
  void *__p;
  char v17;
  char v18;
  void *v19;
  char v20;
  void *v21;
  char v22;
  char v23;
  char v24;
  unsigned __int8 v25;

  *(_QWORD *)a1 = &off_24C3F5A28;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 1);
  v3 = *((_OWORD *)a2 + 1);
  *(_DWORD *)(a1 + 40) = a2[8];
  *(_OWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 44) = *(_QWORD *)(a2 + 9);
  v4 = *a2;
  v5 = *((float *)a2 + 1);
  v6 = 1.0 / *(float *)a2;
  v7 = *((float *)a2 + 2);
  v8 = *((float *)a2 + 3);
  v9 = *((float *)a2 + 7);
  v10 = *((float *)a2 + 8);
  v11 = *((float *)a2 + 6) == 0.0;
  *(float *)(a1 + 52) = v6;
  *(float *)(a1 + 56) = 1.0 / v5;
  if (v9 != 0.0)
    v11 = 0;
  *(float *)(a1 + 60) = -(float)(v7 * v6);
  *(float *)(a1 + 64) = -(float)(v8 * (float)(1.0 / v5));
  *(_DWORD *)(a1 + 68) = v4;
  *(_QWORD *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 80) = 0;
  *(float *)(a1 + 84) = v5;
  *(_DWORD *)(a1 + 88) = 0;
  *(float *)(a1 + 92) = v7;
  *(float *)(a1 + 96) = v8;
  *(_DWORD *)(a1 + 100) = 1065353216;
  if (v10 != 0.0)
    v11 = 0;
  *(_BYTE *)(a1 + 104) = v11;
  *(_BYTE *)(a1 + 105) = v10 == 0.0;
  sub_20AF58160((uint64_t)v15, a1 + 8);
  v12 = v25;
  if (!v25 || (sub_20AECF498((uint64_t)v15), !v25))
  {
    if (!v24)
      goto LABEL_14;
    if (!v23)
      goto LABEL_11;
    if (v22 < 0)
    {
      operator delete(v21);
      if ((v20 & 0x80000000) == 0)
      {
LABEL_11:
        if (v18)
          goto LABEL_12;
        goto LABEL_14;
      }
    }
    else if ((v20 & 0x80000000) == 0)
    {
      goto LABEL_11;
    }
    operator delete(v19);
    if (v18)
    {
LABEL_12:
      if (v17 < 0)
        operator delete(__p);
    }
LABEL_14:
    if (!v12)
    {
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::logic_error::logic_error(exception, "HeikkilaModel parameters invalid");
      exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
      __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
    }
  }
  return a1;
}

void sub_20AF5868C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_20AF586A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECD704((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF586B4(_QWORD *result)
{
  *result = &off_24C3F5AC8;
  return result;
}

void sub_20AF586C8()
{
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF586DC()
{
  return 2;
}

uint64_t sub_20AF586E4()
{
  return 11;
}

void sub_20AF586EC(_QWORD *a1)
{
  *a1 = &off_24C3F5AC8;
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF5870C()
{
  return 0;
}

uint64_t sub_20AF58714()
{
  return 2;
}

uint64_t sub_20AF5871C()
{
  return 11;
}

uint64_t sub_20AF58724(uint64_t a1)
{
  return a1 + 120;
}

_QWORD *sub_20AF5872C(_QWORD *result)
{
  *result = &off_24C3F5AC8;
  return result;
}

void sub_20AF5873C(_QWORD *a1)
{
  *a1 = &off_24C3F5AC8;
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF5875C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5B08;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20AF5876C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5B08;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF5879C(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

_QWORD *sub_20AF587AC(_QWORD *result)
{
  *result = &off_24C3F5B98;
  return result;
}

void sub_20AF587BC(_QWORD *a1)
{
  *a1 = &off_24C3F5B98;
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF587DC()
{
  return 1;
}

uint64_t sub_20AF587E4()
{
  return 2;
}

uint64_t sub_20AF587EC()
{
  return 11;
}

uint64_t sub_20AF587F4(uint64_t a1)
{
  return a1 + 120;
}

_QWORD *sub_20AF587FC(_QWORD *result)
{
  *result = &off_24C3F5B98;
  return result;
}

void sub_20AF5880C(_QWORD *a1)
{
  *a1 = &off_24C3F5B98;
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF5882C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5BD8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20AF5883C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F5BD8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF5886C(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

__int128 *sub_20AF5887C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631618);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631618))
    return &xmmword_254631600;
  v2 = sub_20AF58958();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_254631600, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_254631610 = v2->__r_.__value_.__r.__words[2];
    xmmword_254631600 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631600, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631618);
  return &xmmword_254631600;
}

void sub_20AF58940(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631618);
  _Unwind_Resume(a1);
}

std::string *sub_20AF58958()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631638);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631638))
    return &stru_254631620;
  sub_20AF58BEC((uint64_t)__p);
  sub_20AF58A48((char *)__p, &stru_254631620);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631620, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631638);
  return &stru_254631620;
}

void sub_20AF58A08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631638);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631638);
  _Unwind_Resume(a1);
}

void sub_20AF58A48(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  *(_OWORD *)v13 = *(_OWORD *)"float64";
  v14 = 0x700000000000000;
  v4 = sub_20AF55144();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v16 = v4->__r_.__value_.__r.__words[2];
    v15 = v5;
  }
  sub_20AEC7620(&__p, (uint64_t)v13, 2uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if ((SHIBYTE(v16) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v14) & 0x80000000) == 0)
      return;
LABEL_16:
    operator delete(v13[0]);
    return;
  }
  operator delete((void *)v15);
  if (SHIBYTE(v14) < 0)
    goto LABEL_16;
}

void sub_20AF58B90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_20AEC2E90(&a10);
  if (a24 < 0)
  {
    operator delete(__p);
    if ((a18 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(a1);
  }
  else if ((a18 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a13);
  _Unwind_Resume(a1);
}

void sub_20AF58BEC(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254631658);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254631658))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::PinholeCamera<double, cv3d::kit::cam::PixelOrigin::Corner>]", qword_254631640);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631640, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631658);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254631678);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254631678))
  {
    v5 = sub_20AED4780(qword_254631640, "<", 0);
    sub_20AED467C(qword_254631640, 0, v5, qword_254631660);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631660, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631678);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254631698);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254631698))
  {
    sub_20B531658((uint64_t)qword_254631660, (uint64_t)&xmmword_254631680);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631680, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631698);
  }
  if (byte_254631697 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_254631680, *((unint64_t *)&xmmword_254631680 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_254631680;
    *(_QWORD *)(a1 + 16) = unk_254631690;
  }
}

void sub_20AF58D88(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631698);
  _Unwind_Resume(a1);
}

void sub_20AF58DA0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631678);
  _Unwind_Resume(a1);
}

void sub_20AF58DB8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631658);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF58DD0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546314D8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546314D8))
    return &xmmword_2546314C0;
  v2 = sub_20AF58EAC();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_2546314C0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2546314D0 = v2->__r_.__value_.__r.__words[2];
    xmmword_2546314C0 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546314C0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546314D8);
  return &xmmword_2546314C0;
}

void sub_20AF58E94(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546314D8);
  _Unwind_Resume(a1);
}

std::string *sub_20AF58EAC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546314F8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546314F8))
    return &stru_2546314E0;
  sub_20AF59140((uint64_t)__p);
  sub_20AF58F9C((char *)__p, &stru_2546314E0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2546314E0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546314F8);
  return &stru_2546314E0;
}

void sub_20AF58F5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2546314F8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2546314F8);
  _Unwind_Resume(a1);
}

void sub_20AF58F9C(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  *(_OWORD *)v13 = *(_OWORD *)"float64";
  v14 = 0x700000000000000;
  v4 = sub_20AF57188();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v16 = v4->__r_.__value_.__r.__words[2];
    v15 = v5;
  }
  sub_20AEC7620(&__p, (uint64_t)v13, 2uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if ((SHIBYTE(v16) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v14) & 0x80000000) == 0)
      return;
LABEL_16:
    operator delete(v13[0]);
    return;
  }
  operator delete((void *)v15);
  if (SHIBYTE(v14) < 0)
    goto LABEL_16;
}

void sub_20AF590E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_20AEC2E90(&a10);
  if (a24 < 0)
  {
    operator delete(__p);
    if ((a18 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(a1);
  }
  else if ((a18 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a13);
  _Unwind_Resume(a1);
}

void sub_20AF59140(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254631518);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254631518))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::PinholeCamera<double, cv3d::kit::cam::PixelOrigin::Center>]", qword_254631500);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631500, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631518);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254631538);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254631538))
  {
    v5 = sub_20AED4780(qword_254631500, "<", 0);
    sub_20AED467C(qword_254631500, 0, v5, qword_254631520);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631520, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631538);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254631558);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254631558))
  {
    sub_20B531658((uint64_t)qword_254631520, (uint64_t)&xmmword_254631540);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631540, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631558);
  }
  if (byte_254631557 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_254631540, *((unint64_t *)&xmmword_254631540 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_254631540;
    *(_QWORD *)(a1 + 16) = unk_254631550;
  }
}

void sub_20AF592DC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631558);
  _Unwind_Resume(a1);
}

void sub_20AF592F4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631538);
  _Unwind_Resume(a1);
}

void sub_20AF5930C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631518);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF59324()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546317F8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546317F8))
    return &xmmword_2546317E0;
  v2 = sub_20AF59400();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_2546317E0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2546317F0 = v2->__r_.__value_.__r.__words[2];
    xmmword_2546317E0 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546317E0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546317F8);
  return &xmmword_2546317E0;
}

void sub_20AF593E8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546317F8);
  _Unwind_Resume(a1);
}

std::string *sub_20AF59400()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631818);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631818))
    return &stru_254631800;
  sub_20AF594F0((uint64_t)__p);
  sub_20AF54DBC((char *)__p, &stru_254631800);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631800, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631818);
  return &stru_254631800;
}

void sub_20AF594B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631818);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631818);
  _Unwind_Resume(a1);
}

void sub_20AF594F0(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254631838);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254631838))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::HeikkilaCamera<float, cv3d::kit::cam::PixelOrigin::Corner>]", qword_254631820);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631820, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631838);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254631858);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254631858))
  {
    v5 = sub_20AED4780(qword_254631820, "<", 0);
    sub_20AED467C(qword_254631820, 0, v5, qword_254631840);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631840, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631858);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254631878);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254631878))
  {
    sub_20B531658((uint64_t)qword_254631840, (uint64_t)&xmmword_254631860);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631860, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631878);
  }
  if (byte_254631877 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_254631860, *((unint64_t *)&xmmword_254631860 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_254631860;
    *(_QWORD *)(a1 + 16) = unk_254631870;
  }
}

void sub_20AF5968C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631878);
  _Unwind_Resume(a1);
}

void sub_20AF596A4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631858);
  _Unwind_Resume(a1);
}

void sub_20AF596BC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631838);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF596D4()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546316B8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546316B8))
    return &xmmword_2546316A0;
  v2 = sub_20AF597B0();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_2546316A0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2546316B0 = v2->__r_.__value_.__r.__words[2];
    xmmword_2546316A0 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546316A0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546316B8);
  return &xmmword_2546316A0;
}

void sub_20AF59798(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546316B8);
  _Unwind_Resume(a1);
}

std::string *sub_20AF597B0()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546316D8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546316D8))
    return &stru_2546316C0;
  sub_20AF598A0((uint64_t)__p);
  sub_20AF56E00((char *)__p, &stru_2546316C0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2546316C0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546316D8);
  return &stru_2546316C0;
}

void sub_20AF59860(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2546316D8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2546316D8);
  _Unwind_Resume(a1);
}

void sub_20AF598A0(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2546316F8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2546316F8))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::HeikkilaCamera<float, cv3d::kit::cam::PixelOrigin::Center>]", qword_2546316E0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546316E0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546316F8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254631718);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254631718))
  {
    v5 = sub_20AED4780(qword_2546316E0, "<", 0);
    sub_20AED467C(qword_2546316E0, 0, v5, qword_254631700);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631700, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631718);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254631738);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254631738))
  {
    sub_20B531658((uint64_t)qword_254631700, (uint64_t)&xmmword_254631720);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631720, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631738);
  }
  if (byte_254631737 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_254631720, *((unint64_t *)&xmmword_254631720 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_254631720;
    *(_QWORD *)(a1 + 16) = unk_254631730;
  }
}

void sub_20AF59A3C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631738);
  _Unwind_Resume(a1);
}

void sub_20AF59A54(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631718);
  _Unwind_Resume(a1);
}

void sub_20AF59A6C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546316F8);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF59A84(uint64_t a1, const char *a2, const char *a3, _BYTE *a4)
{
  uint64_t result;
  _DWORD v8[6];
  int v9;
  _QWORD **v10;
  const char *v11;
  _DWORD *v12;
  const char *v13;
  const char *v14;
  _QWORD *v15;

  v9 = 0;
  sub_20AF5A61C(v8, "Cannot get ");
  if (*(_QWORD *)a2)
  {
    v10 = (_QWORD **)v8;
    v11 = a2;
    v12 = v8;
    v13 = a2;
    v14 = a2;
    if (v9 != -1)
    {
      v15 = &v10;
      ((void (*)(_QWORD **, _DWORD *))off_24C3F5C18[v9])(&v15, v8);
      goto LABEL_6;
    }
LABEL_13:
    sub_20AECFAB8();
  }
  v10 = (_QWORD **)v8;
  v11 = "nullptr";
  v12 = v8;
  v13 = "nullptr";
  v14 = "nullptr";
  if (v9 == -1)
    goto LABEL_13;
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24C3F5570[v9])(&v15, v8);
LABEL_6:
  v10 = (_QWORD **)v8;
  v11 = " as ";
  v12 = v8;
  v13 = " as ";
  v14 = " as ";
  if (v9 == -1)
    sub_20AECFAB8();
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24C3F5C30[v9])(&v15, v8);
  v10 = (_QWORD **)v8;
  v11 = a3;
  v12 = v8;
  v13 = a3;
  v14 = a3;
  if (v9 == -1)
    sub_20AECFAB8();
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24C3F5C48[v9])(&v15, v8);
  v10 = (_QWORD **)v8;
  v11 = ", camera value type is ";
  v12 = v8;
  v13 = ", camera value type is ";
  v14 = ", camera value type is ";
  if (v9 == -1)
    sub_20AECFAB8();
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24C3F5C60[v9])(&v15, v8);
  sub_20AF5A35C((uint64_t)&v10, (uint64_t)v8, a4);
  if (v9 == -1)
    sub_20AECFAB8();
  v10 = &v15;
  result = ((uint64_t (*)(_QWORD ***, _DWORD *))off_24C3F55D0[v9])(&v10, v8);
  if (v9 != -1)
    return ((uint64_t (*)(_QWORD ***, _DWORD *))off_24C3F5558[v9])(&v10, v8);
  return result;
}

void sub_20AF59CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF59CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF59CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF59CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF59D00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF59D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF59D28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF59D3C()
{
  unsigned __int8 v0;
  __int128 *v1;
  const void **v2;
  int v3;
  size_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  const void *v10;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A8E0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463A8E0))
  {
    v1 = sub_20AF54BF0();
    v2 = (const void **)v1;
    v3 = *((char *)v1 + 23);
    if (v3 >= 0)
      v4 = *((unsigned __int8 *)v1 + 23);
    else
      v4 = *((_QWORD *)v1 + 1);
    v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v5 >= 0x17)
    {
      v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17)
        v7 = v5 | 7;
      v8 = v7 + 1;
      v9 = (char *)operator new(v7 + 1);
      qword_25463A928 = v4 + 6;
      unk_25463A930 = v8 | 0x8000000000000000;
      qword_25463A920 = (uint64_t)v9;
      *(_DWORD *)v9 = 1936617315;
      *((_WORD *)v9 + 2) = 8308;
      v6 = v9 + 6;
    }
    else
    {
      qword_25463A928 = 0;
      unk_25463A930 = 0;
      qword_25463A920 = 0x2074736E6F63;
      byte_25463A937 = v4 + 6;
      v6 = (char *)&qword_25463A920 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A920, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463A8E0);
        return;
      }
    }
    if (v3 >= 0)
      v10 = v2;
    else
      v10 = *v2;
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
}

void sub_20AF59EAC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A8E0);
  _Unwind_Resume(a1);
}

void sub_20AF59EC4()
{
  unsigned __int8 v0;
  __int128 *v1;
  const void **v2;
  int v3;
  size_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  const void *v10;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A8E8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463A8E8))
  {
    v1 = sub_20AF56C34();
    v2 = (const void **)v1;
    v3 = *((char *)v1 + 23);
    if (v3 >= 0)
      v4 = *((unsigned __int8 *)v1 + 23);
    else
      v4 = *((_QWORD *)v1 + 1);
    v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v5 >= 0x17)
    {
      v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17)
        v7 = v5 | 7;
      v8 = v7 + 1;
      v9 = (char *)operator new(v7 + 1);
      qword_25463A940 = v4 + 6;
      unk_25463A948 = v8 | 0x8000000000000000;
      qword_25463A938 = (uint64_t)v9;
      *(_DWORD *)v9 = 1936617315;
      *((_WORD *)v9 + 2) = 8308;
      v6 = v9 + 6;
    }
    else
    {
      qword_25463A940 = 0;
      unk_25463A948 = 0;
      qword_25463A938 = 0x2074736E6F63;
      byte_25463A94F = v4 + 6;
      v6 = (char *)&qword_25463A938 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A938, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463A8E8);
        return;
      }
    }
    if (v3 >= 0)
      v10 = v2;
    else
      v10 = *v2;
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
}

void sub_20AF5A034(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A8E8);
  _Unwind_Resume(a1);
}

void sub_20AF5A04C()
{
  unsigned __int8 v0;
  __int128 *v1;
  const void **v2;
  int v3;
  size_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  const void *v10;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A8F0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463A8F0))
  {
    v1 = sub_20AF59324();
    v2 = (const void **)v1;
    v3 = *((char *)v1 + 23);
    if (v3 >= 0)
      v4 = *((unsigned __int8 *)v1 + 23);
    else
      v4 = *((_QWORD *)v1 + 1);
    v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v5 >= 0x17)
    {
      v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17)
        v7 = v5 | 7;
      v8 = v7 + 1;
      v9 = (char *)operator new(v7 + 1);
      qword_25463A958 = v4 + 6;
      unk_25463A960 = v8 | 0x8000000000000000;
      qword_25463A950 = (uint64_t)v9;
      *(_DWORD *)v9 = 1936617315;
      *((_WORD *)v9 + 2) = 8308;
      v6 = v9 + 6;
    }
    else
    {
      qword_25463A958 = 0;
      unk_25463A960 = 0;
      qword_25463A950 = 0x2074736E6F63;
      byte_25463A967 = v4 + 6;
      v6 = (char *)&qword_25463A950 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A950, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463A8F0);
        return;
      }
    }
    if (v3 >= 0)
      v10 = v2;
    else
      v10 = *v2;
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
}

void sub_20AF5A1BC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A8F0);
  _Unwind_Resume(a1);
}

void sub_20AF5A1D4()
{
  unsigned __int8 v0;
  __int128 *v1;
  const void **v2;
  int v3;
  size_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  const void *v10;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A8F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463A8F8))
  {
    v1 = sub_20AF596D4();
    v2 = (const void **)v1;
    v3 = *((char *)v1 + 23);
    if (v3 >= 0)
      v4 = *((unsigned __int8 *)v1 + 23);
    else
      v4 = *((_QWORD *)v1 + 1);
    v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v5 >= 0x17)
    {
      v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17)
        v7 = v5 | 7;
      v8 = v7 + 1;
      v9 = (char *)operator new(v7 + 1);
      qword_25463A970 = v4 + 6;
      unk_25463A978 = v8 | 0x8000000000000000;
      qword_25463A968 = (uint64_t)v9;
      *(_DWORD *)v9 = 1936617315;
      *((_WORD *)v9 + 2) = 8308;
      v6 = v9 + 6;
    }
    else
    {
      qword_25463A970 = 0;
      unk_25463A978 = 0;
      qword_25463A968 = 0x2074736E6F63;
      byte_25463A97F = v4 + 6;
      v6 = (char *)&qword_25463A968 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A968, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463A8F8);
        return;
      }
    }
    if (v3 >= 0)
      v10 = v2;
    else
      v10 = *v2;
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
}

void sub_20AF5A344(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A8F8);
  _Unwind_Resume(a1);
}

void sub_20AF5A35C(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v5;
  const char *v6;
  int v7;
  size_t v8;
  void **v9;
  unint64_t v10;
  unint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *__dst[2];
  unint64_t v21;
  _QWORD v22[5];
  _QWORD *v23;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20AEC0BD8(v5);
  v22[0] = v5;
  if (*a3 == 11)
    v6 = "f32";
  else
    v6 = "f64";
  sub_20AEC01D0((_QWORD *)(v5 + 16), (uint64_t)v6, 3);
  v7 = *(_DWORD *)(v5 + 120);
  if ((v7 & 0x10) != 0)
  {
    v10 = *(_QWORD *)(v5 + 112);
    v11 = *(_QWORD *)(v5 + 72);
    if (v10 < v11)
    {
      *(_QWORD *)(v5 + 112) = v11;
      v10 = v11;
    }
    v12 = *(const void **)(v5 + 64);
    v8 = v10 - (_QWORD)v12;
    if (v10 - (unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_25;
  }
  else
  {
    if ((v7 & 8) == 0)
    {
      v8 = 0;
      HIBYTE(v21) = 0;
      v9 = __dst;
      goto LABEL_17;
    }
    v12 = *(const void **)(v5 + 40);
    v8 = *(_QWORD *)(v5 + 56) - (_QWORD)v12;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
LABEL_25:
      sub_20AEC0138();
  }
  if (v8 >= 0x17)
  {
    v13 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v13 = v8 | 7;
    v14 = v13 + 1;
    v9 = (void **)operator new(v13 + 1);
    __dst[1] = (void *)v8;
    v21 = v14 | 0x8000000000000000;
    __dst[0] = v9;
    goto LABEL_16;
  }
  HIBYTE(v21) = v8;
  v9 = __dst;
  if (v8)
LABEL_16:
    memmove(v9, v12, v8);
LABEL_17:
  *((_BYTE *)v9 + v8) = 0;
  v15 = v22[0];
  if (v22[0])
  {
    v16 = MEMORY[0x24BEDB7F0];
    v17 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v22[0] = *MEMORY[0x24BEDB7F0];
    v18 = *(_QWORD *)(v16 + 72);
    *(_QWORD *)(v15 + *(_QWORD *)(v17 - 24)) = *(_QWORD *)(v16 + 64);
    *(_QWORD *)(v15 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v15 + 16) = v18;
    if (*(char *)(v15 + 111) < 0)
      operator delete(*(void **)(v15 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v15 + 128);
    MEMORY[0x20BD3583C](v15, 0x10B2C40EED050F3);
  }
  v22[0] = a2;
  v22[1] = __dst;
  v22[2] = a2;
  v22[3] = __dst;
  v22[4] = __dst;
  v19 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v19 == -1)
    sub_20AECFAB8();
  v23 = v22;
  ((void (*)(_QWORD **, uint64_t))off_24C3F55A0[v19])(&v23, a2);
  if (SHIBYTE(v21) < 0)
    operator delete(__dst[0]);
}

void sub_20AF5A5C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20AF5A5EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF5A608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B52CE84((uint64_t *)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_20AF5A61C(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C3F5558[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

_DWORD *sub_20AF5A70C(_DWORD ***a1)
{
  return sub_20AF5A728(**a1, (char *)(*a1)[1]);
}

void sub_20AF5A718(uint64_t a1, uint64_t a2)
{
  sub_20AF5A818((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

_DWORD *sub_20AF5A728(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C3F5558[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_20AF5A818(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24C3F5558[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_20AEC7620((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_20AF5A9CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_20AF5AA10(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_20AF5AB08((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_20AF5AB00(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_20AF5AB08(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20AEC60B8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60CC();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_20AF5AD04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC65A4((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_20AF5AD18(_DWORD ***a1)
{
  return sub_20AF5AD34(**a1, (char *)(*a1)[1]);
}

void sub_20AF5AD24(uint64_t a1, uint64_t a2)
{
  sub_20AF5AE24((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

_DWORD *sub_20AF5AD34(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C3F5558[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_20AF5AE24(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24C3F5558[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_20AEC7620((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_20AF5AFD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_20AF5B01C(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_20AF5B114((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_20AF5B10C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_20AF5B114(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20AEC60B8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60CC();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_20AF5B310(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC65A4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF5B324()
{
  unsigned __int8 v0;
  __int128 *v1;
  const void **v2;
  int v3;
  size_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  const void *v10;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A900);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463A900))
  {
    v1 = sub_20AF5887C();
    v2 = (const void **)v1;
    v3 = *((char *)v1 + 23);
    if (v3 >= 0)
      v4 = *((unsigned __int8 *)v1 + 23);
    else
      v4 = *((_QWORD *)v1 + 1);
    v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v5 >= 0x17)
    {
      v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17)
        v7 = v5 | 7;
      v8 = v7 + 1;
      v9 = (char *)operator new(v7 + 1);
      qword_25463A988 = v4 + 6;
      unk_25463A990 = v8 | 0x8000000000000000;
      qword_25463A980 = (uint64_t)v9;
      *(_DWORD *)v9 = 1936617315;
      *((_WORD *)v9 + 2) = 8308;
      v6 = v9 + 6;
    }
    else
    {
      qword_25463A988 = 0;
      unk_25463A990 = 0;
      qword_25463A980 = 0x2074736E6F63;
      byte_25463A997 = v4 + 6;
      v6 = (char *)&qword_25463A980 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A980, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463A900);
        return;
      }
    }
    if (v3 >= 0)
      v10 = v2;
    else
      v10 = *v2;
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
}

void sub_20AF5B494(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A900);
  _Unwind_Resume(a1);
}

void sub_20AF5B4AC()
{
  unsigned __int8 v0;
  __int128 *v1;
  const void **v2;
  int v3;
  size_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  const void *v10;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A908);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463A908))
  {
    v1 = sub_20AF58DD0();
    v2 = (const void **)v1;
    v3 = *((char *)v1 + 23);
    if (v3 >= 0)
      v4 = *((unsigned __int8 *)v1 + 23);
    else
      v4 = *((_QWORD *)v1 + 1);
    v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v5 >= 0x17)
    {
      v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17)
        v7 = v5 | 7;
      v8 = v7 + 1;
      v9 = (char *)operator new(v7 + 1);
      qword_25463A9A0 = v4 + 6;
      unk_25463A9A8 = v8 | 0x8000000000000000;
      qword_25463A998 = (uint64_t)v9;
      *(_DWORD *)v9 = 1936617315;
      *((_WORD *)v9 + 2) = 8308;
      v6 = v9 + 6;
    }
    else
    {
      qword_25463A9A0 = 0;
      unk_25463A9A8 = 0;
      qword_25463A998 = 0x2074736E6F63;
      byte_25463A9AF = v4 + 6;
      v6 = (char *)&qword_25463A998 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A998, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463A908);
        return;
      }
    }
    if (v3 >= 0)
      v10 = v2;
    else
      v10 = *v2;
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
}

void sub_20AF5B61C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A908);
  _Unwind_Resume(a1);
}

void sub_20AF5B634()
{
  unsigned __int8 v0;
  __int128 *v1;
  const void **v2;
  int v3;
  size_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  const void *v10;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A910);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463A910))
  {
    v1 = sub_20AF5B7BC();
    v2 = (const void **)v1;
    v3 = *((char *)v1 + 23);
    if (v3 >= 0)
      v4 = *((unsigned __int8 *)v1 + 23);
    else
      v4 = *((_QWORD *)v1 + 1);
    v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v5 >= 0x17)
    {
      v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17)
        v7 = v5 | 7;
      v8 = v7 + 1;
      v9 = (char *)operator new(v7 + 1);
      qword_25463A9B8 = v4 + 6;
      unk_25463A9C0 = v8 | 0x8000000000000000;
      qword_25463A9B0 = (uint64_t)v9;
      *(_DWORD *)v9 = 1936617315;
      *((_WORD *)v9 + 2) = 8308;
      v6 = v9 + 6;
    }
    else
    {
      qword_25463A9B8 = 0;
      unk_25463A9C0 = 0;
      qword_25463A9B0 = 0x2074736E6F63;
      byte_25463A9C7 = v4 + 6;
      v6 = (char *)&qword_25463A9B0 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A9B0, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463A910);
        return;
      }
    }
    if (v3 >= 0)
      v10 = v2;
    else
      v10 = *v2;
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
}

void sub_20AF5B7A4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A910);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF5B7BC()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631898);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631898))
    return &xmmword_254631880;
  v2 = sub_20AF5B898();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_254631880, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_254631890 = v2->__r_.__value_.__r.__words[2];
    xmmword_254631880 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631880, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631898);
  return &xmmword_254631880;
}

void sub_20AF5B880(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631898);
  _Unwind_Resume(a1);
}

std::string *sub_20AF5B898()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546318B8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546318B8))
    return &stru_2546318A0;
  sub_20AF5B988((uint64_t)__p);
  sub_20AF58A48((char *)__p, &stru_2546318A0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2546318A0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546318B8);
  return &stru_2546318A0;
}

void sub_20AF5B948(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2546318B8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2546318B8);
  _Unwind_Resume(a1);
}

void sub_20AF5B988(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2546318D8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2546318D8))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::HeikkilaCamera<double, cv3d::kit::cam::PixelOrigin::Corner>]", qword_2546318C0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546318C0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546318D8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2546318F8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2546318F8))
  {
    v5 = sub_20AED4780(qword_2546318C0, "<", 0);
    sub_20AED467C(qword_2546318C0, 0, v5, qword_2546318E0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546318E0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546318F8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254631918);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254631918))
  {
    sub_20B531658((uint64_t)qword_2546318E0, (uint64_t)&xmmword_254631900);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631900, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631918);
  }
  if (byte_254631917 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_254631900, *((unint64_t *)&xmmword_254631900 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_254631900;
    *(_QWORD *)(a1 + 16) = unk_254631910;
  }
}

void sub_20AF5BB24(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631918);
  _Unwind_Resume(a1);
}

void sub_20AF5BB3C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546318F8);
  _Unwind_Resume(a1);
}

void sub_20AF5BB54(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546318D8);
  _Unwind_Resume(a1);
}

void sub_20AF5BB6C()
{
  unsigned __int8 v0;
  __int128 *v1;
  const void **v2;
  int v3;
  size_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  const void *v10;

  v0 = atomic_load((unsigned __int8 *)&qword_25463A918);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463A918))
  {
    v1 = sub_20AF5BCF4();
    v2 = (const void **)v1;
    v3 = *((char *)v1 + 23);
    if (v3 >= 0)
      v4 = *((unsigned __int8 *)v1 + 23);
    else
      v4 = *((_QWORD *)v1 + 1);
    v5 = v4 + 6;
    if (v4 + 6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v5 >= 0x17)
    {
      v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17)
        v7 = v5 | 7;
      v8 = v7 + 1;
      v9 = (char *)operator new(v7 + 1);
      qword_25463A9D0 = v4 + 6;
      unk_25463A9D8 = v8 | 0x8000000000000000;
      qword_25463A9C8 = (uint64_t)v9;
      *(_DWORD *)v9 = 1936617315;
      *((_WORD *)v9 + 2) = 8308;
      v6 = v9 + 6;
    }
    else
    {
      qword_25463A9D0 = 0;
      unk_25463A9D8 = 0;
      qword_25463A9C8 = 0x2074736E6F63;
      byte_25463A9DF = v4 + 6;
      v6 = (char *)&qword_25463A9C8 + 6;
      if (!v4)
      {
LABEL_18:
        v6[v4] = 0;
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463A9C8, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463A918);
        return;
      }
    }
    if (v3 >= 0)
      v10 = v2;
    else
      v10 = *v2;
    memmove(v6, v10, v4);
    goto LABEL_18;
  }
}

void sub_20AF5BCDC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463A918);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF5BCF4()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631758);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631758))
    return &xmmword_254631740;
  v2 = sub_20AF5BDD0();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_254631740, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_254631750 = v2->__r_.__value_.__r.__words[2];
    xmmword_254631740 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631740, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631758);
  return &xmmword_254631740;
}

void sub_20AF5BDB8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631758);
  _Unwind_Resume(a1);
}

std::string *sub_20AF5BDD0()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631778);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631778))
    return &stru_254631760;
  sub_20AF5BEC0((uint64_t)__p);
  sub_20AF58F9C((char *)__p, &stru_254631760);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631760, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631778);
  return &stru_254631760;
}

void sub_20AF5BE80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631778);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631778);
  _Unwind_Resume(a1);
}

void sub_20AF5BEC0(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254631798);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254631798))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::HeikkilaCamera<double, cv3d::kit::cam::PixelOrigin::Center>]", qword_254631780);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631780, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631798);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2546317B8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2546317B8))
  {
    v5 = sub_20AED4780(qword_254631780, "<", 0);
    sub_20AED467C(qword_254631780, 0, v5, qword_2546317A0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546317A0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546317B8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2546317D8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2546317D8))
  {
    sub_20B531658((uint64_t)qword_2546317A0, (uint64_t)&xmmword_2546317C0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546317C0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546317D8);
  }
  if (byte_2546317D7 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_2546317C0, *((unint64_t *)&xmmword_2546317C0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2546317C0;
    *(_QWORD *)(a1 + 16) = unk_2546317D0;
  }
}

void sub_20AF5C05C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546317D8);
  _Unwind_Resume(a1);
}

void sub_20AF5C074(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546317B8);
  _Unwind_Resume(a1);
}

void sub_20AF5C08C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631798);
  _Unwind_Resume(a1);
}

void sub_20AF5C0A4(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  int v5;
  size_t v6;
  void **v7;
  unint64_t v8;
  unint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *__dst[2];
  unint64_t v19;
  _QWORD v20[5];
  _QWORD *v21;

  v4 = operator new();
  *(_OWORD *)v4 = 0u;
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_OWORD *)(v4 + 80) = 0u;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 128) = 0u;
  *(_OWORD *)(v4 + 144) = 0u;
  *(_OWORD *)(v4 + 160) = 0u;
  *(_OWORD *)(v4 + 176) = 0u;
  *(_OWORD *)(v4 + 192) = 0u;
  *(_OWORD *)(v4 + 208) = 0u;
  *(_OWORD *)(v4 + 224) = 0u;
  *(_OWORD *)(v4 + 240) = 0u;
  *(_OWORD *)(v4 + 256) = 0u;
  *(_QWORD *)(v4 + 272) = 0;
  sub_20AEC0BD8(v4);
  v20[0] = v4;
  sub_20AEC01D0((_QWORD *)(v4 + 16), (uint64_t)(&off_24C41D8E0)[2 * *a2], (uint64_t)(&off_24C41D8E0)[2 * *a2 + 1]);
  v5 = *(_DWORD *)(v4 + 120);
  if ((v5 & 0x10) != 0)
  {
    v8 = *(_QWORD *)(v4 + 112);
    v9 = *(_QWORD *)(v4 + 72);
    if (v8 < v9)
    {
      *(_QWORD *)(v4 + 112) = v9;
      v8 = v9;
    }
    v10 = *(const void **)(v4 + 64);
    v6 = v8 - (_QWORD)v10;
    if (v8 - (unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v5 & 8) == 0)
    {
      v6 = 0;
      HIBYTE(v19) = 0;
      v7 = __dst;
      goto LABEL_14;
    }
    v10 = *(const void **)(v4 + 40);
    v6 = *(_QWORD *)(v4 + 56) - (_QWORD)v10;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_20AEC0138();
  }
  if (v6 >= 0x17)
  {
    v11 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v11 = v6 | 7;
    v12 = v11 + 1;
    v7 = (void **)operator new(v11 + 1);
    __dst[1] = (void *)v6;
    v19 = v12 | 0x8000000000000000;
    __dst[0] = v7;
    goto LABEL_13;
  }
  HIBYTE(v19) = v6;
  v7 = __dst;
  if (v6)
LABEL_13:
    memmove(v7, v10, v6);
LABEL_14:
  *((_BYTE *)v7 + v6) = 0;
  v13 = v20[0];
  if (v20[0])
  {
    v14 = MEMORY[0x24BEDB7F0];
    v15 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v20[0] = *MEMORY[0x24BEDB7F0];
    v16 = *(_QWORD *)(v14 + 72);
    *(_QWORD *)(v13 + *(_QWORD *)(v15 - 24)) = *(_QWORD *)(v14 + 64);
    *(_QWORD *)(v13 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v13 + 16) = v16;
    if (*(char *)(v13 + 111) < 0)
      operator delete(*(void **)(v13 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v13 + 128);
    MEMORY[0x20BD3583C](v13, 0x10B2C40EED050F3);
  }
  v20[0] = a1;
  v20[1] = __dst;
  v20[2] = a1;
  v20[3] = __dst;
  v20[4] = __dst;
  v17 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v17 == -1)
    sub_20AECFAB8();
  v21 = v20;
  ((void (*)(_QWORD **, uint64_t))off_24C3F55A0[v17])(&v21, a1);
  if (SHIBYTE(v19) < 0)
    operator delete(__dst[0]);
}

void sub_20AF5C304(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20AF5C328(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF5C344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B52CE84((uint64_t *)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_20AF5C358(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C3F5558[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_20AF5C448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20AEC0BD8(v5);
  v21[0] = v5;
  sub_20B4492E0((_QWORD *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_20AEC0138();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v14 + 128);
    MEMORY[0x20BD3583C](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_20AECFAB8();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24C3F55A0[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_20AF5C698(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20AF5C6BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF5C6D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B52CE84((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF5C6EC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  _QWORD *result;

  v6 = (_QWORD *)operator new();
  v7 = v6;
  *v6 = &off_24C3F5FB8;
  v6[1] = &off_24C41D808;
  v8 = *(_QWORD *)(a2 + 16);
  v6[2] = *(_QWORD *)(a2 + 8);
  v6[3] = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  sub_20AF4CAF4((uint64_t)(v6 + 4), a3);
  *v7 = &off_24C3F5F38;
  *a1 = &off_24C411E78;
  a1[1] = v7;
  result = (_QWORD *)operator new();
  *result = &off_24C411F70;
  result[1] = 0;
  result[2] = 0;
  result[3] = v7;
  a1[2] = result;
  return result;
}

void sub_20AF5C7C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_20AF5C7E4(_Unwind_Exception *a1)
{
  uint64_t v1;
  _QWORD *v2;

  sub_20B448814(v2);
  MEMORY[0x20BD3583C](v1, 0x10F3C40D7DF13C9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF5C810(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F5FB8;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  a1[1] = &off_24C41D808;
  v2 = (std::__shared_weak_count *)a1[3];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_20AF5C894(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F5FB8;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  a1[1] = &off_24C41D808;
  v2 = (std::__shared_weak_count *)a1[3];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF5C918(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20AF5C920(void *a1, void *lpsrc)
{
  uint64_t result;

  result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C411EB8, (const struct __class_type_info *)&unk_24C3F5F78, 0);
  if (result)
    return a1 == lpsrc || sub_20B4488FC((uint64_t)a1 + 8, result + 8);
  return result;
}

void sub_20AF5C984(uint64_t a1)
{
  __int128 *v2;
  void *__p;
  char v4;

  v2 = (__int128 *)sub_20AF5D7CC();
  sub_20AF5CA38(a1);
  sub_20AF4DD70(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",", a1 + 32, (uint64_t)"}");
  if (v4 < 0)
    operator delete(__p);
}

void sub_20AF5CA1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF5CA38(uint64_t a1)
{
  unsigned __int8 v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;

  v2 = atomic_load((unsigned __int8 *)&qword_254631A78);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254631A78))
  {
    v4 = sub_20AF5D5D0();
    v5 = *((_QWORD *)v4 + 1);
    if (*((char *)v4 + 23) >= 0)
    {
      v6 = *((unsigned __int8 *)v4 + 23);
    }
    else
    {
      v4 = *(__int128 **)v4;
      v6 = v5;
    }
    sub_20AF4E53C((char *)v4, v6, "::", 2, 0, (uint64_t)&v8);
    if (*(char *)(v9 - 1) < 0)
    {
      sub_20AEC60F4(&xmmword_254631A60, *(void **)(v9 - 24), *(_QWORD *)(v9 - 16));
    }
    else
    {
      v7 = *(_OWORD *)(v9 - 24);
      qword_254631A70 = *(_QWORD *)(v9 - 8);
      xmmword_254631A60 = v7;
    }
    sub_20AEC2E90(&v8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631A60, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631A78);
  }
  return sub_20AF5DB8C(&xmmword_254631A60, (uint64_t)"{", a1 + 8, (uint64_t)"}");
}

void sub_20AF5CB48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_20AEC2E90(&a9);
  __cxa_guard_abort(&qword_254631A78);
  _Unwind_Resume(a1);
}

void sub_20AF5CB68(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631A78);
  _Unwind_Resume(a1);
}

void sub_20AF5CB80(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 5;
}

void sub_20AF5CBAC(uint64_t (***lpsrc)()@<X0>, _QWORD *a2@<X8>)
{
  sub_20B2346E4(lpsrc, 5, a2);
}

_QWORD *sub_20AF5CBE4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F5FB8;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  a1[1] = &off_24C41D808;
  v2 = (std::__shared_weak_count *)a1[3];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_20AF5CC68(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F5FB8;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  a1[1] = &off_24C41D808;
  v2 = (std::__shared_weak_count *)a1[3];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF5CCEC(uint64_t a1)
{
  __int128 *v2;

  v2 = sub_20AF5D06C();
  return sub_20AF5CE40(v2, (uint64_t)"{", a1 + 8, (uint64_t)",", a1 + 32, (uint64_t)"}");
}

uint64_t sub_20AF5CD44(uint64_t a1)
{
  uint64_t result;
  _BYTE v2[24];
  int v3;
  char v4;
  _QWORD v5[2];

  v3 = 0;
  sub_20AF5C448((uint64_t)v5, (uint64_t)v2, a1 + 8);
  if (v3 == -1)
    sub_20AECFAB8();
  v5[0] = &v4;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24C3F55D0[v3])(v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24C3F5558[v3])(v5, v2);
  return result;
}

void sub_20AF5CDDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;

  if (a13 != -1)
    ((void (*)(uint64_t, char *))off_24C3F5558[a13])(v13 - 17, &a10);
  _Unwind_Resume(exception_object);
}

void sub_20AF5CE14(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_20AF5CE40(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  char v12;
  char v13;
  __int128 __dst;
  uint64_t v15;
  int v16;
  __int128 *p_dst;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 **p_p_dst;

  v16 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v15 = *((_QWORD *)a1 + 2);
  }
  v16 = 1;
  p_dst = &__dst;
  v18 = a2;
  v19 = &__dst;
  v20 = a2;
  v21 = a2;
  sub_20AED5C4C((uint64_t *)&v19, (uint64_t)&__dst);
  sub_20AF5C448((uint64_t)&v13, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v18 = a4;
  v19 = &__dst;
  v20 = a4;
  v21 = a4;
  if (v16 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F55B8[v16])(&p_p_dst, &__dst);
  sub_20AF4D170((uint64_t)&v12, (uint64_t)&__dst, a5);
  p_dst = &__dst;
  v18 = a6;
  v19 = &__dst;
  v20 = a6;
  v21 = a6;
  if (v16 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F55B8[v16])(&p_p_dst, &__dst);
  if (v16 == -1)
    sub_20AECFAB8();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C3F55D0[v16])(&p_dst, &__dst);
  if (v16 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C3F5558[v16])(&p_dst, &__dst);
  return result;
}

void sub_20AF5CFDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF5CFF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF5D008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF5D01C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF5D030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF5D044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF5D058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF5D06C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631938);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631938))
    return &xmmword_254631920;
  v2 = sub_20AF5D148();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_254631920, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_254631930 = v2->__r_.__value_.__r.__words[2];
    xmmword_254631920 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631920, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631938);
  return &xmmword_254631920;
}

void sub_20AF5D130(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631938);
  _Unwind_Resume(a1);
}

std::string *sub_20AF5D148()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631958);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631958))
    return &stru_254631940;
  sub_20AF5D3EC((uint64_t)__p);
  sub_20AF5D238((char *)__p, &stru_254631940);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631940, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631958);
  return &stru_254631940;
}

void sub_20AF5D1F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631958);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631958);
  _Unwind_Resume(a1);
}

void sub_20AF5D238(char *a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v4;
  __int128 v5;
  __int128 *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *__dst[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = sub_20AF5D5D0();
  if (*((char *)v4 + 23) < 0)
  {
    sub_20AEC60F4(__dst, *(void **)v4, *((_QWORD *)v4 + 1));
  }
  else
  {
    v5 = *v4;
    v16 = *((_QWORD *)v4 + 2);
    *(_OWORD *)__dst = v5;
  }
  v6 = sub_20AF4DB74();
  if (*((char *)v6 + 23) < 0)
  {
    sub_20AEC60F4(&v17, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = v7;
  }
  sub_20AEC7620(&__p, (uint64_t)__dst, 2uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_19;
}

void sub_20AF5D39C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_20AEC2E90((void **)&a9);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF5D3EC(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2546319D8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2546319D8))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::cam::Camera>]", qword_2546319C0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546319C0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546319D8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2546319F8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2546319F8))
  {
    v5 = sub_20AED4780(qword_2546319C0, "<", 0);
    sub_20AED467C(qword_2546319C0, 0, v5, qword_2546319E0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546319E0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546319F8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254631A18);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254631A18))
  {
    sub_20B531658((uint64_t)qword_2546319E0, (uint64_t)&xmmword_254631A00);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631A00, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631A18);
  }
  if (byte_254631A17 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_254631A00, *((unint64_t *)&xmmword_254631A00 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_254631A00;
    *(_QWORD *)(a1 + 16) = unk_254631A10;
  }
}

void sub_20AF5D588(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631A18);
  _Unwind_Resume(a1);
}

void sub_20AF5D5A0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546319F8);
  _Unwind_Resume(a1);
}

void sub_20AF5D5B8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546319D8);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF5D5D0()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631978);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631978))
    return &xmmword_254631960;
  v2 = (char *)sub_20AF5D6AC();
  if (v2[23] < 0)
  {
    sub_20AEC60F4(&xmmword_254631960, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_254631970 = *((_QWORD *)v2 + 2);
    xmmword_254631960 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631960, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631978);
  return &xmmword_254631960;
}

void sub_20AF5D694(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631978);
  _Unwind_Resume(a1);
}

void *sub_20AF5D6AC()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254631998);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254631998))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::Camera]", qword_254631980);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631980, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631998);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_2546319B8);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_2546319B8))
    return &unk_2546319A0;
  sub_20B531658((uint64_t)qword_254631980, (uint64_t)&unk_2546319A0);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_2546319A0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546319B8);
  return &unk_2546319A0;
}

void sub_20AF5D79C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546319B8);
  _Unwind_Resume(a1);
}

void sub_20AF5D7B4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631998);
  _Unwind_Resume(a1);
}

std::string *sub_20AF5D7CC()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void *v8[3];
  void *v9[2];
  char v10;
  void *__dst[2];
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  void *__p[2];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254631A38);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254631A38))
  {
    sub_20AEC0D64(v9, "viz::PackageData");
    v2 = sub_20AF5D5D0();
    if (*((char *)v2 + 23) < 0)
    {
      sub_20AEC60F4(__dst, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      v12 = *((_QWORD *)v2 + 2);
      *(_OWORD *)__dst = v3;
    }
    *(_OWORD *)v13 = *(_OWORD *)"viz::Package";
    v14 = 0xC00000000000000;
    v4 = sub_20AF5DA94();
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
    }
    else
    {
      v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      v16 = v4->__r_.__value_.__r.__words[2];
      v15 = v5;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    v18 = 0x400000000000000;
    sub_20AEC7620(v8, (uint64_t)__dst, 4uLL);
    sub_20B53170C((char *)v9, (uint64_t *)v8, &stru_254631A20, v6, v7);
    sub_20AEC2E90(v8);
    if (SHIBYTE(v18) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v16) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v14) & 0x80000000) == 0)
          goto LABEL_13;
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v13[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v10 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631A20, &dword_20AEBB000);
        __cxa_guard_release(&qword_254631A38);
        return &stru_254631A20;
      }
LABEL_20:
      operator delete(v9[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_20;
  }
  return &stru_254631A20;
}

void sub_20AF5D9B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  sub_20AEC2E90(&a10);
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_254631A38);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_254631A38);
  _Unwind_Resume(a1);
}

std::string *sub_20AF5DA94()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631A58);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631A58))
    return &stru_254631A40;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 5U]", __p);
  sub_20B531884((uint64_t)__p, &stru_254631A40);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631A40, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631A58);
  return &stru_254631A40;
}

void sub_20AF5DB4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631A58);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631A58);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF5DB8C(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  char v8;
  __int128 __dst;
  uint64_t v10;
  int v11;
  __int128 *p_dst;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 **p_p_dst;

  v11 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v10 = *((_QWORD *)a1 + 2);
  }
  v11 = 1;
  p_dst = &__dst;
  v13 = a2;
  v14 = &__dst;
  v15 = a2;
  v16 = a2;
  sub_20AED5C4C((uint64_t *)&v14, (uint64_t)&__dst);
  sub_20AF5C448((uint64_t)&v8, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v13 = a4;
  v14 = &__dst;
  v15 = a4;
  v16 = a4;
  if (v11 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F55B8[v11])(&p_p_dst, &__dst);
  if (v11 == -1)
    sub_20AECFAB8();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C3F55D0[v11])(&p_dst, &__dst);
  if (v11 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C3F5558[v11])(&p_dst, &__dst);
  return result;
}

void sub_20AF5DCCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF5DCE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF5DCF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF5DD0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF5DD20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_20AF5DD34(uint64_t a1, char *__s, __int16 a3)
{
  size_t v6;
  size_t v7;
  __int128 *p_dst;
  double result;
  uint64_t v10;
  uint64_t v11;
  __int128 __dst;
  unint64_t v13;

  if (__s && *__s)
  {
    v6 = strlen(__s);
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    v7 = v6;
    if (v6 >= 0x17)
    {
      v10 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v10 = v6 | 7;
      v11 = v10 + 1;
      p_dst = (__int128 *)operator new(v10 + 1);
      *((_QWORD *)&__dst + 1) = v7;
      v13 = v11 | 0x8000000000000000;
      *(_QWORD *)&__dst = p_dst;
    }
    else
    {
      HIBYTE(v13) = v6;
      p_dst = &__dst;
      if (!v6)
      {
        LOBYTE(__dst) = 0;
        if (*(_BYTE *)(a1 + 40))
        {
LABEL_7:
          if (*(char *)(a1 + 23) < 0)
            operator delete(*(void **)a1);
          result = *(double *)&__dst;
          *(_OWORD *)a1 = __dst;
          *(_QWORD *)(a1 + 16) = v13;
          *(_WORD *)(a1 + 24) = a3;
          *(_DWORD *)(a1 + 32) = 0;
          return result;
        }
LABEL_19:
        result = *(double *)&__dst;
        *(_OWORD *)a1 = __dst;
        *(_QWORD *)(a1 + 16) = v13;
        *(_WORD *)(a1 + 24) = a3;
        *(_DWORD *)(a1 + 32) = 0;
        *(_BYTE *)(a1 + 40) = 1;
        return result;
      }
    }
    memcpy(p_dst, __s, v7);
    *((_BYTE *)p_dst + v7) = 0;
    if (*(_BYTE *)(a1 + 40))
      goto LABEL_7;
    goto LABEL_19;
  }
  if (*(_BYTE *)(a1 + 40))
  {
    if (*(char *)(a1 + 23) < 0)
      operator delete(*(void **)a1);
    *(_BYTE *)(a1 + 40) = 0;
  }
  return result;
}

void sub_20AF5DE9C(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  void *v7[2];
  uint64_t v8;
  void *__p[2];
  uint64_t v10;
  char v11;
  void *v12;
  char v13;
  void *v14;
  char v15;
  char v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char v27;
  char v28;

  *(_BYTE *)(a1 + 48) = a2;
  if (a2 < 3)
  {
    *(_BYTE *)(a3 + 120) = 1;
    return;
  }
  v6 = a2;
  sub_20AF5E0C0("invalid VZClientSyncType ", &v6);
  if (SHIBYTE(v8) < 0)
  {
    sub_20AEC60F4(__p, v7[0], (unint64_t)v7[1]);
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)v7;
    v10 = v8;
  }
  v11 = 1;
  LOBYTE(v12) = 0;
  v16 = 0;
  v17 = 1;
  sub_20AECCC3C(0xAu, (__int128 *)__p, (uint64_t)&v18);
  *(_OWORD *)a3 = v18;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (v28)
  {
    *(_BYTE *)(a3 + 40) = 0;
    v4 = v21;
    if (v21)
    {
      *(_OWORD *)(a3 + 16) = v19;
      *(_QWORD *)(a3 + 32) = v20;
      v20 = 0;
      v19 = 0uLL;
      *(_BYTE *)(a3 + 40) = 1;
    }
    *(_BYTE *)(a3 + 48) = 0;
    *(_BYTE *)(a3 + 104) = 0;
    if (v27)
    {
      v5 = v24;
      *(_QWORD *)(a3 + 64) = v23;
      *(_OWORD *)(a3 + 48) = v22;
      v23 = 0;
      v22 = 0uLL;
      *(_QWORD *)(a3 + 72) = v5;
      *(_OWORD *)(a3 + 80) = v25;
      *(_QWORD *)(a3 + 96) = v26;
      v25 = 0uLL;
      v26 = 0;
      *(_BYTE *)(a3 + 104) = 1;
    }
    *(_BYTE *)(a3 + 112) = 1;
    *(_BYTE *)(a3 + 120) = 0;
    if (v4 && SHIBYTE(v20) < 0)
      operator delete((void *)v19);
    if (!v17)
      goto LABEL_24;
  }
  else
  {
    *(_BYTE *)(a3 + 120) = 0;
    if (!v17)
      goto LABEL_24;
  }
  if (!v16)
    goto LABEL_21;
  if (v15 < 0)
  {
    operator delete(v14);
    if ((v13 & 0x80000000) == 0)
    {
LABEL_21:
      if (v11)
        goto LABEL_22;
      goto LABEL_24;
    }
  }
  else if ((v13 & 0x80000000) == 0)
  {
    goto LABEL_21;
  }
  operator delete(v12);
  if (v11)
  {
LABEL_22:
    if (SHIBYTE(v10) < 0)
      operator delete(__p[0]);
  }
LABEL_24:
  if (SHIBYTE(v8) < 0)
    operator delete(v7[0]);
}

void sub_20AF5E094(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF5E0C0(char *__s, unsigned __int8 *a2)
{
  uint64_t result;
  _DWORD v4[6];
  int v5;
  std::string v6;
  _QWORD v7[5];
  _QWORD *v8;

  v5 = 0;
  sub_20AF60428(v4, __s);
  std::to_string(&v6, *a2);
  v7[0] = v4;
  v7[1] = &v6;
  v7[2] = v4;
  v7[3] = &v6;
  v7[4] = &v6;
  if (v5 == -1)
    sub_20AECFAB8();
  v8 = v7;
  ((void (*)(_QWORD **, _DWORD *))off_24C3F6120[v5])(&v8, v4);
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v6.__r_.__value_.__l.__data_);
  if (v5 == -1)
    sub_20AECFAB8();
  v7[0] = &v6;
  result = ((uint64_t (*)(_QWORD *, _DWORD *))off_24C3F6138[v5])(v7, v4);
  if (v5 != -1)
    return ((uint64_t (*)(_QWORD *, _DWORD *))off_24C3F6108[v5])(v7, v4);
  return result;
}

void sub_20AF5E1BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF5E1D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_20AECFA60((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x20AF5E1C8);
}

_QWORD *sub_20AF5E1FC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  const char *v7;
  uint64_t v8;
  _QWORD *v10[5];
  _QWORD *v11;
  char v12;
  _QWORD v13[3];

  sub_20AEC01D0(a1, (uint64_t)"{options={", 10);
  v10[0] = (_QWORD *)a2;
  v10[1] = (_QWORD *)(a2 + 48);
  v10[2] = (_QWORD *)(a2 + 56);
  v10[3] = (_QWORD *)(a2 + 72);
  v10[4] = (_QWORD *)(a2 + 112);
  v11 = a1;
  sub_20AEC01D0(a1, (uint64_t)"{", 1);
  LOBYTE(v13[0]) = 1;
  v13[1] = &v11;
  v13[2] = &v12;
  sub_20B0BD250((uint64_t *)v10, (uint64_t)v13);
  sub_20AEC01D0(v11, (uint64_t)"}", 1);
  sub_20AEC01D0(a1, (uint64_t)"}, log_control=", 15);
  if (*(_BYTE *)(a2 + 152))
  {
    v5 = *(_QWORD *)(a2 + 136);
    v4 = a2 + 136;
    if (v5)
    {
      v10[0] = a1;
      sub_20AEC01D0(a1, (uint64_t)"{", 1);
      v13[0] = v4;
      sub_20AF60518((uint64_t)&v11, v10, v13);
      v6 = v10[0];
      v7 = "}";
      v8 = 1;
    }
    else
    {
      v7 = "auto (deprecated)";
      v6 = a1;
      v8 = 17;
    }
  }
  else
  {
    v7 = "disabled";
    v6 = a1;
    v8 = 8;
  }
  sub_20AEC01D0(v6, (uint64_t)v7, v8);
  return a1;
}

void sub_20AF5E330(int *a1@<X0>, uint64_t a2@<X8>)
{
  const char *v4;
  unsigned __int8 v5;
  uint64_t v6;
  unsigned int v7;
  void *__dst[2];
  char v9;
  char v10;
  void *v11;
  char v12;
  void *__p;
  char v14;
  char v15;
  char v16;

  v4 = (const char *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a1 + 1) + 16))(*((_QWORD *)a1 + 1));
  v5 = atomic_load((unsigned __int8 *)&qword_25463CF58);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_25463CF58))
  {
    __cxa_atexit((void (*)(void *))std::error_category::~error_category, &off_253EC3198, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463CF58);
  }
  if (v4 == ((const char *(__cdecl *)())off_253EC3198[2])())
  {
    v6 = *a1;
    if (v6 > 0xF)
      v7 = 1;
    else
      v7 = dword_20B5B444C[v6];
    sub_20AECEBD0(__dst, (__int128 *)a1 + 1);
    sub_20AECF6E0(a2, v7, (__int128 *)__dst);
    if (v16)
    {
      if (v15)
      {
        if (v14 < 0)
          operator delete(__p);
        if (v12 < 0)
          operator delete(v11);
      }
      if (v10)
      {
        if (v9 < 0)
          operator delete(__dst[0]);
      }
    }
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)a1;
    sub_20AECEBD0((_BYTE *)(a2 + 16), (__int128 *)a1 + 1);
  }
}

void sub_20AF5E484(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AECCDB4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF5E498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v4;
  _BYTE *v5;
  int v6;
  __int128 v7;
  __int128 v8;
  unsigned __int8 v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  const std::error_category *v14;
  void *__dst[2];
  char v16;
  char v17;
  void *v18;
  char v19;
  void *v20;
  char v21;
  char v22;
  char v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  __int128 v35;
  void *__p;
  char v37;
  unsigned __int8 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  char v45;
  __int128 v46;
  __int128 v47;
  char v48;
  char v49;
  void *v50;
  char v51;
  void *v52;
  char v53;
  char v54;
  char v55;
  char v56;
  _QWORD v57[3];
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  char v66;
  char v67;
  char v68;
  char v69;
  _QWORD v70[2];

  v70[0] = a1;
  v70[1] = a2;
  LOBYTE(v58) = 0;
  v69 = 0;
  v57[0] = &off_24C3F6008;
  v57[1] = &v58;
  v57[2] = v70;
  sub_20B52A3E8((uint64_t)v57, (uint64_t)&v46);
  if (v56)
  {
    v34 = v68;
    if (v68)
    {
      v4 = v58;
      v58 = 0uLL;
      v24 = v4;
      v25 = v59;
      v59 = 0uLL;
      v26 = v60;
      v60 = 0uLL;
    }
    else
    {
      v24 = v58;
      LOBYTE(v25) = 0;
      v33 = 0;
      if (v67)
      {
        BYTE8(v26) = 0;
        if (BYTE8(v60))
        {
          v25 = v59;
          *(_QWORD *)&v26 = v60;
          *(_QWORD *)&v60 = 0;
          v59 = 0uLL;
          BYTE8(v26) = 1;
        }
        LOBYTE(v27) = 0;
        v32 = 0;
        if (v66)
        {
          v28 = v62;
          v27 = v61;
          v61 = 0uLL;
          v30 = v64;
          v29 = v63;
          v31 = v65;
          v62 = 0;
          v64 = 0uLL;
          v65 = 0;
          v32 = 1;
        }
        v33 = 1;
      }
    }
  }
  else
  {
    v35 = v46;
    v5 = sub_20AECEBD0(&__p, &v47);
    v24 = v35;
    LOBYTE(v25) = 0;
    v33 = 0;
    if (v45)
    {
      BYTE8(v26) = 0;
      v6 = v38;
      if (v38)
      {
        v25 = *(_OWORD *)v5;
        *(_QWORD *)&v26 = *((_QWORD *)v5 + 2);
        *((_QWORD *)v5 + 1) = 0;
        *((_QWORD *)v5 + 2) = 0;
        *(_QWORD *)v5 = 0;
        BYTE8(v26) = 1;
      }
      LOBYTE(v27) = 0;
      v32 = 0;
      if (v44)
      {
        v28 = v40;
        v27 = v39;
        v39 = 0uLL;
        v30 = v42;
        v29 = v41;
        v31 = v43;
        v40 = 0;
        v42 = 0uLL;
        v43 = 0;
        v32 = 1;
      }
      v33 = 1;
      v34 = 0;
      if (v6 && v37 < 0)
        operator delete(__p);
    }
    else
    {
      v34 = 0;
    }
    if (!v56 && v55)
    {
      if (v54)
      {
        if (v53 < 0)
          operator delete(v52);
        if (v51 < 0)
          operator delete(v50);
      }
      if (v49 && v48 < 0)
        operator delete((void *)v47);
    }
  }
  if (v69)
    sub_20AEE0CA8((uint64_t)&v58);
  if (v34)
  {
    *(_BYTE *)(a3 + 120) = 1;
    v7 = v24;
    v8 = v25;
    v24 = 0uLL;
    *(_OWORD *)a3 = v7;
    *(_OWORD *)(a3 + 16) = v8;
    v25 = 0uLL;
    *(_OWORD *)(a3 + 32) = v26;
    v26 = 0uLL;
  }
  else
  {
    v10 = atomic_load((unsigned __int8 *)&qword_25463A9E0);
    if ((v10 & 1) == 0 && __cxa_guard_acquire(&qword_25463A9E0))
    {
      v14 = std::generic_category();
      qword_25463A9E8 = 22;
      qword_25463A9F0 = (uint64_t)v14;
      __cxa_guard_release(&qword_25463A9E0);
    }
    if (*((_QWORD *)&v24 + 1) == qword_25463A9F0 && (_DWORD)v24 == (_DWORD)qword_25463A9E8)
    {
      sub_20AECEBD0(__dst, &v25);
      sub_20AECCC3C(0xAu, (__int128 *)__dst, (uint64_t)&v58);
      *(_OWORD *)a3 = v58;
      *(_BYTE *)(a3 + 16) = 0;
      *(_BYTE *)(a3 + 112) = 0;
      if (v67)
      {
        *(_BYTE *)(a3 + 40) = 0;
        v11 = BYTE8(v60);
        if (BYTE8(v60))
        {
          *(_OWORD *)(a3 + 16) = v59;
          *(_QWORD *)(a3 + 32) = v60;
          *(_QWORD *)&v60 = 0;
          v59 = 0uLL;
          *(_BYTE *)(a3 + 40) = 1;
        }
        *(_BYTE *)(a3 + 48) = 0;
        *(_BYTE *)(a3 + 104) = 0;
        if (v66)
        {
          v12 = v63;
          *(_QWORD *)(a3 + 64) = v62;
          *(_OWORD *)(a3 + 48) = v61;
          v61 = 0uLL;
          *(_QWORD *)(a3 + 72) = v12;
          *(_OWORD *)(a3 + 80) = v64;
          *(_QWORD *)(a3 + 96) = v65;
          v62 = 0;
          v64 = 0uLL;
          v65 = 0;
          *(_BYTE *)(a3 + 104) = 1;
        }
        *(_BYTE *)(a3 + 112) = 1;
        *(_BYTE *)(a3 + 120) = 0;
        if (v11 && SBYTE7(v60) < 0)
          operator delete((void *)v59);
      }
      else
      {
        *(_BYTE *)(a3 + 120) = 0;
      }
      if (v23)
      {
        if (v22)
        {
          if (v21 < 0)
            operator delete(v20);
          if (v19 < 0)
            operator delete(v18);
        }
        if (v17 && v16 < 0)
          operator delete(__dst[0]);
      }
    }
    else
    {
      *(_BYTE *)(a3 + 120) = 0;
      *(_OWORD *)a3 = v24;
      *(_BYTE *)(a3 + 16) = 0;
      *(_BYTE *)(a3 + 112) = 0;
      if (v33)
      {
        *(_BYTE *)(a3 + 40) = 0;
        if (BYTE8(v26))
        {
          *(_OWORD *)(a3 + 16) = v25;
          *(_QWORD *)(a3 + 32) = v26;
          *(_QWORD *)&v26 = 0;
          v25 = 0uLL;
          *(_BYTE *)(a3 + 40) = 1;
        }
        *(_BYTE *)(a3 + 48) = 0;
        *(_BYTE *)(a3 + 104) = 0;
        if (v32)
        {
          v13 = v29;
          *(_QWORD *)(a3 + 64) = v28;
          *(_OWORD *)(a3 + 48) = v27;
          v27 = 0uLL;
          *(_QWORD *)(a3 + 72) = v13;
          *(_OWORD *)(a3 + 80) = v30;
          *(_QWORD *)(a3 + 96) = v31;
          v28 = 0;
          v30 = 0uLL;
          v31 = 0;
          *(_BYTE *)(a3 + 104) = 1;
        }
        *(_BYTE *)(a3 + 112) = 1;
      }
    }
  }
  return sub_20AEE0CA8((uint64_t)&v24);
}

void sub_20AF5E9C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  sub_20AECCDB4((uint64_t)va);
  sub_20AEE0CA8((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_20AF5EA18(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v3;
  int v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  char v8;
  char v9;
  void *v10;
  char v11;
  void *v12;
  char v13;
  char v14;
  char v15;
  __int128 v16;
  void *__p;
  char v18;
  unsigned __int8 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  char v26;
  _QWORD v27[4];
  char v28;
  char v29;
  char v30;
  void *v31;
  char v32;
  void *v33;
  char v34;
  char v35;
  char v36;
  char v37;

  (*(void (**)(_QWORD *__return_ptr))(**(_QWORD **)a1 + 40))(v27);
  if (v37)
  {
    if (v28)
      *(_QWORD *)a2 = v27[1];
    else
      *(_QWORD *)a2 = 0;
    *(_BYTE *)(a2 + 120) = 1;
    return;
  }
  sub_20AF5E330((int *)v27, (uint64_t)&v6);
  v16 = v6;
  v3 = sub_20AECEBD0(&__p, &v7);
  *(_OWORD *)a2 = v16;
  *(_BYTE *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  if (v26)
  {
    *(_BYTE *)(a2 + 40) = 0;
    v4 = v19;
    if (v19)
    {
      *(_OWORD *)(a2 + 16) = *(_OWORD *)v3;
      *(_QWORD *)(a2 + 32) = *((_QWORD *)v3 + 2);
      *((_QWORD *)v3 + 1) = 0;
      *((_QWORD *)v3 + 2) = 0;
      *(_QWORD *)v3 = 0;
      *(_BYTE *)(a2 + 40) = 1;
    }
    *(_BYTE *)(a2 + 48) = 0;
    *(_BYTE *)(a2 + 104) = 0;
    if (v25)
    {
      v5 = v22;
      *(_QWORD *)(a2 + 64) = v21;
      *(_OWORD *)(a2 + 48) = v20;
      v20 = 0uLL;
      *(_QWORD *)(a2 + 72) = v5;
      *(_OWORD *)(a2 + 80) = v23;
      *(_QWORD *)(a2 + 96) = v24;
      v21 = 0;
      v23 = 0uLL;
      v24 = 0;
      *(_BYTE *)(a2 + 104) = 1;
    }
    *(_BYTE *)(a2 + 112) = 1;
    *(_BYTE *)(a2 + 120) = 0;
    if (v4 && v18 < 0)
      operator delete(__p);
    if (!v15)
      goto LABEL_26;
    goto LABEL_18;
  }
  *(_BYTE *)(a2 + 120) = 0;
  if (v15)
  {
LABEL_18:
    if (v14)
    {
      if (v13 < 0)
        operator delete(v12);
      if (v11 < 0)
        operator delete(v10);
    }
    if (v9 && v8 < 0)
      operator delete((void *)v7);
  }
LABEL_26:
  if (!v37 && v36)
  {
    if (v35)
    {
      if (v34 < 0)
        operator delete(v33);
      if (v32 < 0)
        operator delete(v31);
    }
    if (v30 && v29 < 0)
      operator delete((void *)v27[2]);
  }
}

void sub_20AF5EC20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20AECCE40((uint64_t)va);
  sub_20AECD704(v2 - 160);
  _Unwind_Resume(a1);
}

void sub_20AF5EC3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AECD704(v1 - 160);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF5EC50@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  _BYTE *v21;
  int v22;
  uint64_t v23;
  __int128 v24;
  void *__p;
  char v26;
  unsigned __int8 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  char v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  _BYTE v40[24];
  _BYTE *v41;
  char v42;
  void *v43[2];
  char v44;
  char v45;
  _BYTE v46[24];
  _BYTE *v47;
  char v48;
  std::__shared_weak_count *v49;
  char v50;
  char v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  sub_20AEE0DF4((uint64_t)v43, a1);
  v40[0] = 0;
  v42 = 0;
  if (*(_BYTE *)(a2 + 32))
  {
    v5 = *(_QWORD *)(a2 + 24);
    if (v5)
    {
      if (v5 == a2)
      {
        v41 = v40;
        (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)a2 + 24))(a2, v40);
      }
      else
      {
        v41 = *(_BYTE **)(a2 + 24);
        *(_QWORD *)(a2 + 24) = 0;
      }
    }
    else
    {
      v41 = 0;
    }
    v42 = 1;
  }
  sub_20AF5E498((uint64_t)v43, (uint64_t)v40, (uint64_t)&v35);
  if (v42)
  {
    v6 = v41;
    if (v41 == v40)
    {
      v7 = 4;
      v6 = v40;
    }
    else
    {
      if (!v41)
        goto LABEL_14;
      v7 = 5;
    }
    (*(void (**)(void))(*v6 + 8 * v7))();
  }
LABEL_14:
  if (!v51)
    goto LABEL_30;
  if (v50)
  {
    v8 = v49;
    if (v49)
    {
      p_shared_owners = (unint64_t *)&v49->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  if (v48)
  {
    v11 = v47;
    if (v47 == v46)
    {
      v12 = 4;
      v11 = v46;
      goto LABEL_26;
    }
    if (v47)
    {
      v12 = 5;
LABEL_26:
      (*(void (**)(void))(*v11 + 8 * v12))();
    }
  }
  if (v45 && v44 < 0)
    operator delete(v43[0]);
LABEL_30:
  if (v39)
  {
    v13 = v36;
    if (*((_QWORD *)&v36 + 1))
    {
      v14 = (unint64_t *)(*((_QWORD *)&v36 + 1) + 8);
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
    }
    v17 = v37;
    v16 = v38;
    if (v38)
    {
      v18 = (unint64_t *)(v38 + 8);
      do
        v19 = __ldxr(v18);
      while (__stxr(v19 + 1, v18));
    }
    *(_OWORD *)a3 = v13;
    *(_QWORD *)(a3 + 16) = v17;
    *(_QWORD *)(a3 + 24) = v16;
    *(_BYTE *)(a3 + 120) = 1;
  }
  else
  {
    v24 = v35;
    v21 = sub_20AECEBD0(&__p, &v36);
    *(_OWORD *)a3 = v24;
    *(_BYTE *)(a3 + 16) = 0;
    *(_BYTE *)(a3 + 112) = 0;
    if (v34)
    {
      *(_BYTE *)(a3 + 40) = 0;
      v22 = v27;
      if (v27)
      {
        *(_OWORD *)(a3 + 16) = *(_OWORD *)v21;
        *(_QWORD *)(a3 + 32) = *((_QWORD *)v21 + 2);
        *((_QWORD *)v21 + 1) = 0;
        *((_QWORD *)v21 + 2) = 0;
        *(_QWORD *)v21 = 0;
        *(_BYTE *)(a3 + 40) = 1;
      }
      *(_BYTE *)(a3 + 48) = 0;
      *(_BYTE *)(a3 + 104) = 0;
      if (v33)
      {
        v23 = v30;
        *(_QWORD *)(a3 + 64) = v29;
        *(_OWORD *)(a3 + 48) = v28;
        v28 = 0uLL;
        *(_QWORD *)(a3 + 72) = v23;
        *(_OWORD *)(a3 + 80) = v31;
        *(_QWORD *)(a3 + 96) = v32;
        v29 = 0;
        v31 = 0uLL;
        v32 = 0;
        *(_BYTE *)(a3 + 104) = 1;
      }
      *(_BYTE *)(a3 + 112) = 1;
      *(_BYTE *)(a3 + 120) = 0;
      if (v22 && v26 < 0)
        operator delete(__p);
    }
    else
    {
      *(_BYTE *)(a3 + 120) = 0;
    }
  }
  return sub_20AEE0CA8((uint64_t)&v35);
}

void sub_20AF5EF34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20AF5EFA8()
{
  JUMPOUT(0x20BD3583CLL);
}

void sub_20AF5EFBC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  void **v20;
  void **v21;
  void **v22;
  uint64_t v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unint64_t *v32;
  char *v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  __int128 *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t *v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  __int128 *v76;
  uint64_t v77;
  void **v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t (**v82)();
  void *v83;
  __int128 v84;
  _BYTE v85[24];
  _BYTE *v86;
  char v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  void *v91[2];
  void **v92;
  char v93;
  char v94;
  __int128 v95;
  uint64_t v96;
  _BYTE v97[24];
  _BYTE *v98;
  char v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  char v104;
  void *__p[2];
  char v106;
  void **v107;
  char v108;
  __int128 v109;
  uint64_t v110;
  _BYTE v111[24];
  _BYTE *v112;
  char v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  std::__shared_weak_count *v117;
  char v118;
  __int128 __dst;
  char v120;
  char v121;
  _BYTE v122[24];
  _BYTE *v123;
  char v124;
  uint64_t v125;

  v125 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD **)(a1 + 16);
  v3 = *v2;
  LOBYTE(v91[0]) = 0;
  v94 = 0;
  LOWORD(v95) = 0;
  BYTE2(v95) = 0;
  BYTE8(v95) = 0;
  LOBYTE(v96) = 0;
  v4 = v97;
  v97[0] = 0;
  v99 = 0;
  LOBYTE(v100) = 0;
  LOBYTE(v101) = 0;
  v102 = 0;
  v103 = 0;
  v104 = 1;
  if (!*(_BYTE *)(v3 + 160))
  {
    LOBYTE(__p[0]) = 0;
    v108 = 0;
    v109 = v95;
    v110 = v96;
    v111[0] = 0;
    v113 = 0;
    v114 = v100;
    v116 = 0;
    v117 = 0;
    v115 = v101;
    v118 = 0;
    v102 = 0;
    v103 = 0;
LABEL_8:
    v118 = 1;
    goto LABEL_9;
  }
  sub_20AEE02C8((char *)__p, (__int128 *)v3);
  LOBYTE(v116) = 0;
  v118 = 0;
  if (*(_BYTE *)(v3 + 152))
  {
    v5 = *(std::__shared_weak_count **)(v3 + 144);
    v116 = *(_QWORD *)(v3 + 136);
    v117 = v5;
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
    }
    goto LABEL_8;
  }
LABEL_9:
  sub_20AEE02C8((char *)&__dst, (__int128 *)__p);
  if (v118)
  {
    v8 = v117;
    if (v117)
    {
      v9 = (unint64_t *)&v117->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  if (v113)
  {
    v11 = v112;
    if (v112 == v111)
    {
      v12 = 4;
      v11 = v111;
      goto LABEL_20;
    }
    if (v112)
    {
      v12 = 5;
LABEL_20:
      (*(void (**)(void))(*v11 + 8 * v12))();
    }
  }
  if (v108 && v106 < 0)
    operator delete(__p[0]);
  if (v104)
  {
    v13 = v103;
    if (v103)
    {
      v14 = (unint64_t *)&v103->__shared_owners_;
      do
        v15 = __ldaxr(v14);
      while (__stlxr(v15 - 1, v14));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
  }
  if (v99)
  {
    if (v98 == v97)
    {
      v16 = 4;
    }
    else
    {
      if (!v98)
        goto LABEL_36;
      v16 = 5;
      v4 = v98;
    }
    (*(void (**)(_QWORD *))(*v4 + 8 * v16))(v4);
  }
LABEL_36:
  v17 = v2[1];
  if (!*(_BYTE *)(v17 + 32))
  {
    LOBYTE(v91[0]) = 0;
    v93 = 0;
    goto LABEL_63;
  }
  v18 = *(_QWORD *)(v17 + 24);
  if (v18)
  {
    if (v18 == v17)
    {
      *((_QWORD *)&v89 + 1) = &v88;
      (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)v17 + 24))(v17, &v88);
      v19 = (void **)*((_QWORD *)&v89 + 1);
      if (*((_QWORD *)&v89 + 1))
      {
LABEL_40:
        if (v19 == (void **)&v88)
        {
          v107 = __p;
          (*(void (**)(__int128 *, void **))(v88 + 24))(&v88, __p);
        }
        else
        {
          v107 = v19;
          *((_QWORD *)&v89 + 1) = 0;
        }
        goto LABEL_48;
      }
    }
    else
    {
      v19 = (void **)(*(uint64_t (**)(_QWORD))(*(_QWORD *)v18 + 16))(*(_QWORD *)(v17 + 24));
      *((_QWORD *)&v89 + 1) = v19;
      if (v19)
        goto LABEL_40;
    }
  }
  else
  {
    *((_QWORD *)&v89 + 1) = 0;
  }
  v107 = 0;
LABEL_48:
  v92 = 0;
  v20 = (void **)operator new(0x28uLL);
  v21 = v20;
  *v20 = &off_24C3F6048;
  if (v107)
  {
    if (v107 == __p)
    {
      v20[4] = v20 + 1;
      (*((void (**)(void **))__p[0] + 3))(__p);
    }
    else
    {
      v20[4] = v107;
      v107 = 0;
    }
  }
  else
  {
    v20[4] = 0;
  }
  v92 = v21;
  v22 = v107;
  if (v107 == __p)
  {
    v23 = 4;
    v22 = __p;
  }
  else
  {
    if (!v107)
      goto LABEL_58;
    v23 = 5;
  }
  (*((void (**)(void))*v22 + v23))();
LABEL_58:
  v93 = 1;
  v24 = (__int128 *)*((_QWORD *)&v89 + 1);
  if (*((__int128 **)&v89 + 1) == &v88)
  {
    v25 = 4;
    v24 = &v88;
  }
  else
  {
    if (!*((_QWORD *)&v89 + 1))
      goto LABEL_63;
    v25 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v24 + 8 * v25))();
LABEL_63:
  v26 = *v2;
  if (*(_BYTE *)(*v2 + 160))
  {
    if (*(_BYTE *)(v26 + 152))
    {
      v27 = *(_QWORD *)(v26 + 136);
      v28 = v27 != 0;
      goto LABEL_67;
    }
    sub_20AEE02C8((char *)__p, &__dst);
    v90 = 0;
    v88 = 0u;
    v89 = 0u;
    v85[0] = 0;
    v87 = 0;
    if (!v93)
    {
LABEL_124:
      sub_20B0B9C50((uint64_t)&v82, (uint64_t)__p, (uint64_t)&v88, (uint64_t)v85);
      v31 = (char *)operator new(0x38uLL);
      *((_QWORD *)v31 + 1) = 0;
      v58 = (unint64_t *)(v31 + 8);
      *((_QWORD *)v31 + 2) = 0;
      *(_QWORD *)v31 = &off_24C3F60C8;
      *((_QWORD *)v31 + 3) = &off_24C40CED0;
      v33 = v31 + 24;
      *((_QWORD *)v31 + 4) = &unk_24C40CF30;
      v34 = v31 + 32;
      *(_OWORD *)(v31 + 40) = v84;
      v84 = 0uLL;
      do
        v59 = __ldxr(v58);
      while (__stxr(v59 + 1, v58));
      do
        v60 = __ldxr(v58);
      while (__stxr(v60 + 1, v58));
      do
        v61 = __ldxr(v58);
      while (__stxr(v61 + 1, v58));
      v62 = operator new(0x28uLL);
      v39 = v62;
      v62[1] = 0;
      v62[2] = 0;
      *v62 = &off_24C3FA7C8;
      v40 = v62 + 3;
      do
        v63 = __ldxr(v58);
      while (__stxr(v63 + 1, v58));
      do
        v64 = __ldxr(v58);
      while (__stxr(v64 + 1, v58));
      v62[3] = v34;
      v62[4] = v31;
      do
        v65 = __ldaxr(v58);
      while (__stlxr(v65 - 1, v58));
      if (!v65)
      {
        (*(void (**)(char *))(*(_QWORD *)v31 + 16))(v31);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v31);
      }
      do
        v66 = __ldaxr(v58);
      while (__stlxr(v66 - 1, v58));
      if (!v66)
      {
        (*(void (**)(char *))(*(_QWORD *)v31 + 16))(v31);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v31);
      }
      do
        v67 = __ldaxr(v58);
      while (__stlxr(v67 - 1, v58));
      if (!v67)
      {
        (*(void (**)(char *))(*(_QWORD *)v31 + 16))(v31);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v31);
      }
      v82 = &off_24C40CED0;
      v83 = &unk_24C40CF30;
      v68 = (std::__shared_weak_count *)*((_QWORD *)&v84 + 1);
      v84 = 0uLL;
      if (v68)
      {
        v69 = (unint64_t *)&v68->__shared_owners_;
        do
          v70 = __ldaxr(v69);
        while (__stlxr(v70 - 1, v69));
        if (!v70)
        {
          ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
          std::__shared_weak_count::__release_weak(v68);
        }
        v71 = (std::__shared_weak_count *)*((_QWORD *)&v84 + 1);
        if (*((_QWORD *)&v84 + 1))
        {
          v72 = (unint64_t *)(*((_QWORD *)&v84 + 1) + 8);
          do
            v73 = __ldaxr(v72);
          while (__stlxr(v73 - 1, v72));
          if (!v73)
          {
            ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
            std::__shared_weak_count::__release_weak(v71);
          }
        }
      }
      if (v87)
      {
        v74 = v86;
        if (v86 == v85)
        {
          v75 = 4;
          v74 = v85;
        }
        else
        {
          if (!v86)
            goto LABEL_157;
          v75 = 5;
        }
        (*(void (**)(void))(*v74 + 8 * v75))();
      }
LABEL_157:
      if (!(_BYTE)v90)
        goto LABEL_163;
      v76 = (__int128 *)*((_QWORD *)&v89 + 1);
      if (*((__int128 **)&v89 + 1) == &v88)
      {
        v77 = 4;
        v76 = &v88;
      }
      else
      {
        if (!*((_QWORD *)&v89 + 1))
          goto LABEL_163;
        v77 = 5;
      }
      (*(void (**)(void))(*(_QWORD *)v76 + 8 * v77))();
LABEL_163:
      if (!v113)
        goto LABEL_167;
      v56 = v112;
      if (v112 != v111)
        goto LABEL_120;
LABEL_165:
      v57 = 4;
      v56 = v111;
      goto LABEL_166;
    }
    v30 = (uint64_t)v92;
    if (v92)
    {
      if (v92 == v91)
      {
        v86 = v85;
        (*((void (**)(void **, _BYTE *))v91[0] + 3))(v91, v85);
        goto LABEL_123;
      }
      v30 = (*((uint64_t (**)(void))*v92 + 2))();
    }
    v86 = (_BYTE *)v30;
LABEL_123:
    v87 = 1;
    goto LABEL_124;
  }
  v28 = 0;
  v27 = 0;
LABEL_67:
  sub_20AEE02C8((char *)__p, &__dst);
  v90 = 0;
  v88 = 0u;
  v89 = 0u;
  v85[0] = 0;
  v87 = 0;
  if (v93)
  {
    v29 = (uint64_t)v92;
    if (v92)
    {
      if (v92 == v91)
      {
        v86 = v85;
        (*((void (**)(void **, _BYTE *))v91[0] + 3))(v91, v85);
        goto LABEL_78;
      }
      v29 = (*((uint64_t (**)(void))*v92 + 2))();
    }
    v86 = (_BYTE *)v29;
LABEL_78:
    v87 = 1;
  }
  sub_20B0B9994((uint64_t)&v82, (uint64_t)__p, (uint64_t)&v88, (uint64_t)v85, v27, v28);
  v31 = (char *)operator new(0x38uLL);
  *((_QWORD *)v31 + 1) = 0;
  v32 = (unint64_t *)(v31 + 8);
  *((_QWORD *)v31 + 2) = 0;
  *(_QWORD *)v31 = &off_24C3F60C8;
  *((_QWORD *)v31 + 3) = &off_24C40CED0;
  v33 = v31 + 24;
  *((_QWORD *)v31 + 4) = &unk_24C40CF30;
  v34 = v31 + 32;
  *(_OWORD *)(v31 + 40) = v84;
  v84 = 0uLL;
  do
    v35 = __ldxr(v32);
  while (__stxr(v35 + 1, v32));
  do
    v36 = __ldxr(v32);
  while (__stxr(v36 + 1, v32));
  do
    v37 = __ldxr(v32);
  while (__stxr(v37 + 1, v32));
  v38 = operator new(0x28uLL);
  v39 = v38;
  v38[1] = 0;
  v38[2] = 0;
  *v38 = &off_24C3FA7C8;
  v40 = v38 + 3;
  do
    v41 = __ldxr(v32);
  while (__stxr(v41 + 1, v32));
  do
    v42 = __ldxr(v32);
  while (__stxr(v42 + 1, v32));
  v38[3] = v34;
  v38[4] = v31;
  do
    v43 = __ldaxr(v32);
  while (__stlxr(v43 - 1, v32));
  if (!v43)
  {
    (*(void (**)(char *))(*(_QWORD *)v31 + 16))(v31);
    std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v31);
  }
  do
    v44 = __ldaxr(v32);
  while (__stlxr(v44 - 1, v32));
  if (!v44)
  {
    (*(void (**)(char *))(*(_QWORD *)v31 + 16))(v31);
    std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v31);
  }
  do
    v45 = __ldaxr(v32);
  while (__stlxr(v45 - 1, v32));
  if (!v45)
  {
    (*(void (**)(char *))(*(_QWORD *)v31 + 16))(v31);
    std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v31);
  }
  v82 = &off_24C40CED0;
  v83 = &unk_24C40CF30;
  v46 = (std::__shared_weak_count *)*((_QWORD *)&v84 + 1);
  v84 = 0uLL;
  if (v46)
  {
    v47 = (unint64_t *)&v46->__shared_owners_;
    do
      v48 = __ldaxr(v47);
    while (__stlxr(v48 - 1, v47));
    if (!v48)
    {
      ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
      std::__shared_weak_count::__release_weak(v46);
    }
    v49 = (std::__shared_weak_count *)*((_QWORD *)&v84 + 1);
    if (*((_QWORD *)&v84 + 1))
    {
      v50 = (unint64_t *)(*((_QWORD *)&v84 + 1) + 8);
      do
        v51 = __ldaxr(v50);
      while (__stlxr(v51 - 1, v50));
      if (!v51)
      {
        ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
        std::__shared_weak_count::__release_weak(v49);
      }
    }
  }
  if (v87)
  {
    v52 = v86;
    if (v86 == v85)
    {
      v53 = 4;
      v52 = v85;
    }
    else
    {
      if (!v86)
        goto LABEL_112;
      v53 = 5;
    }
    (*(void (**)(void))(*v52 + 8 * v53))();
  }
LABEL_112:
  if (!(_BYTE)v90)
    goto LABEL_118;
  v54 = (__int128 *)*((_QWORD *)&v89 + 1);
  if (*((__int128 **)&v89 + 1) == &v88)
  {
    v55 = 4;
    v54 = &v88;
  }
  else
  {
    if (!*((_QWORD *)&v89 + 1))
      goto LABEL_118;
    v55 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v54 + 8 * v55))();
LABEL_118:
  if (!v113)
    goto LABEL_167;
  v56 = v112;
  if (v112 == v111)
    goto LABEL_165;
LABEL_120:
  if (v56)
  {
    v57 = 5;
LABEL_166:
    (*(void (**)(void))(*v56 + 8 * v57))();
  }
LABEL_167:
  if (v108 && v106 < 0)
    operator delete(__p[0]);
  if (v93)
  {
    v78 = v92;
    if (v92 == v91)
    {
      v79 = 4;
      v78 = v91;
    }
    else
    {
      if (!v92)
        goto LABEL_176;
      v79 = 5;
    }
    (*((void (**)(void))*v78 + v79))();
  }
LABEL_176:
  if (v124)
  {
    v80 = v123;
    if (v123 == v122)
    {
      v81 = 4;
      v80 = v122;
      goto LABEL_181;
    }
    if (v123)
    {
      v81 = 5;
LABEL_181:
      (*(void (**)(void))(*v80 + 8 * v81))();
    }
  }
  if (v121 && v120 < 0)
    operator delete((void *)__dst);
  if (*(_BYTE *)(v1 + 128))
    sub_20AEE0CA8(v1);
  *(_QWORD *)v1 = v33;
  *(_QWORD *)(v1 + 8) = v31;
  *(_QWORD *)(v1 + 16) = v34;
  *(_QWORD *)(v1 + 24) = v31;
  *(_QWORD *)(v1 + 32) = v40;
  *(_QWORD *)(v1 + 40) = v39;
  *(_BYTE *)(v1 + 120) = 1;
  *(_BYTE *)(v1 + 128) = 1;
}

void sub_20AF5FA78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, int a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,void *__p,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,uint64_t a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
  uint64_t v62;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;

  if (a18)
  {
    v64 = (_QWORD *)a17;
    if ((char *)a17 == &a14)
    {
      v65 = 4;
      v64 = &a14;
    }
    else
    {
      if (!a17)
        goto LABEL_7;
      v65 = 5;
    }
    (*(void (**)(void))(*v64 + 8 * v65))();
  }
LABEL_7:
  if (!a24)
    goto LABEL_13;
  v66 = (_QWORD *)a23;
  if ((__int16 *)a23 == &a20)
  {
    v67 = 4;
    v66 = &a20;
  }
  else
  {
    if (!a23)
      goto LABEL_13;
    v67 = 5;
  }
  (*(void (**)(void))(*v66 + 8 * v67))();
LABEL_13:
  if (a62)
  {
    v68 = (uint64_t *)a61;
    if ((uint64_t *)a61 == &a58)
    {
      v69 = 4;
      v68 = &a58;
      goto LABEL_18;
    }
    if (a61)
    {
      v69 = 5;
LABEL_18:
      (*(void (**)(void))(*v68 + 8 * v69))();
    }
  }
  if (a54 && a51 < 0)
    operator delete(__p);
  if (a30)
  {
    v70 = (_QWORD *)a29;
    if ((uint64_t *)a29 == &a26)
    {
      v71 = 4;
      v70 = &a26;
    }
    else
    {
      if (!a29)
        goto LABEL_28;
      v71 = 5;
    }
    (*(void (**)(void))(*v70 + 8 * v71))();
  }
LABEL_28:
  if (!*(_BYTE *)(v62 - 120))
    goto LABEL_34;
  v72 = *(_QWORD **)(v62 - 128);
  if (v72 == (_QWORD *)(v62 - 152))
  {
    v73 = 4;
    v72 = (_QWORD *)(v62 - 152);
  }
  else
  {
    if (!v72)
      goto LABEL_34;
    v73 = 5;
  }
  (*(void (**)(void))(*v72 + 8 * v73))();
LABEL_34:
  if (*(_BYTE *)(v62 - 184))
  {
    if (*(char *)(v62 - 201) < 0)
      operator delete(*(void **)(v62 - 224));
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF5FFD4(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_24C3F6048;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_20AF60030(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_24C3F6048;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20AF6009C(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = operator new(0x28uLL);
  *v2 = &off_24C3F6048;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (!v4)
    goto LABEL_4;
  if (v4 != a1 + 8)
  {
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
LABEL_4:
    v2[4] = v4;
    return v2;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
  return v2;
}

void sub_20AF6011C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF60130(uint64_t result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;

  *a2 = &off_24C3F6048;
  v3 = a2 + 1;
  v4 = *(_QWORD *)(result + 32);
  if (v4)
  {
    if (v4 == result + 8)
    {
      a2[4] = v3;
      return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(result + 32) + 24))(*(_QWORD *)(result + 32));
    }
    else
    {
      result = (*(uint64_t (**)(_QWORD, _QWORD *))(*(_QWORD *)v4 + 16))(*(_QWORD *)(result + 32), v3);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  return result;
}

uint64_t sub_20AF601AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 + 8;
  result = *(_QWORD *)(a1 + 32);
  if (result == v1)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 32))(v1);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 40))(result);
  return result;
}

void sub_20AF601E8(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

void sub_20AF60238(uint64_t a1, int *a2)
{
  uint64_t v3;
  _BYTE v4[16];
  void *__p;
  char v6;
  char v7;
  void *v8;
  char v9;
  void *v10;
  char v11;
  char v12;
  char v13;

  sub_20AF5E330(a2, (uint64_t)v4);
  v3 = *(_QWORD *)(a1 + 32);
  if (!v3)
    sub_20AECABA4();
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v3 + 48))(v3, v4);
  if (v13)
  {
    if (!v12)
      goto LABEL_6;
    if (v11 < 0)
    {
      operator delete(v10);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if (!v7)
          return;
LABEL_7:
        if (v6 < 0)
          operator delete(__p);
        return;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8);
    if (!v7)
      return;
    goto LABEL_7;
  }
}

void sub_20AF602E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32,int a33,__int16 a34,char a35,char a36)
{
  if ((_BYTE)a34)
  {
    if (a32)
    {
      if (a31 < 0)
        operator delete(__p);
      if (a24 < 0)
        operator delete(a19);
    }
    if (a18)
    {
      if (a17 < 0)
        operator delete(a12);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF60338(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d2vl13visual_logger18ForwardClientErrorINSt3__18functionIFvRKNS_3esn5ErrorEEEEEENS3_8optional"
                     "ISA_EERNSB_IT_EEEUlS8_E_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d2vl13visual_logger18ForwardClientErrorINSt3__18functionIFvRKNS_3esn5ErrorEEEEEENS"
                                "3_8optionalISA_EERNSB_IT_EEEUlS8_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d2vl13visual_logger18ForwardClientErrorINSt3__18functionIFvRKNS_3esn5ErrorEEEEEENS3_8optionalISA_EERNSB_IT_EEEUlS8_E_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d2vl13visual_logger18ForwardClientErrorINSt3__18functionIFvRKNS_3esn5ErrorEEEEEENS3_8optionalISA_EERNSB_IT_EEEUlS8_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20AF603A4()
{
  return &unk_24C3F60A8;
}

void sub_20AF603B0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F60C8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20AF603C0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F60C8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF603F0(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_20AF60404(std::exception *a1)
{
  std::exception::~exception(a1);
  JUMPOUT(0x20BD3583CLL);
}

_DWORD *sub_20AF60428(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C3F6108[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_20AF60518(uint64_t a1, _QWORD **a2, _QWORD *a3)
{
  uint64_t v4;
  int v5;
  size_t v6;
  void *p_p;
  unint64_t v8;
  unint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *__p;
  size_t v20;
  int64_t v21;
  _QWORD *v22;

  if (!*a3)
  {
    sub_20AEC01D0(*a2, (uint64_t)"nullptr", 7);
    return;
  }
  v4 = operator new();
  *(_OWORD *)v4 = 0u;
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_OWORD *)(v4 + 80) = 0u;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 128) = 0u;
  *(_OWORD *)(v4 + 144) = 0u;
  *(_OWORD *)(v4 + 160) = 0u;
  *(_OWORD *)(v4 + 176) = 0u;
  *(_OWORD *)(v4 + 192) = 0u;
  *(_OWORD *)(v4 + 208) = 0u;
  *(_OWORD *)(v4 + 224) = 0u;
  *(_OWORD *)(v4 + 240) = 0u;
  *(_OWORD *)(v4 + 256) = 0u;
  *(_QWORD *)(v4 + 272) = 0;
  sub_20AEC0BD8(v4);
  v22 = (_QWORD *)v4;
  std::ostream::operator<<();
  v5 = *(_DWORD *)(v4 + 120);
  if ((v5 & 0x10) != 0)
  {
    v8 = *(_QWORD *)(v4 + 112);
    v9 = *(_QWORD *)(v4 + 72);
    if (v8 < v9)
    {
      *(_QWORD *)(v4 + 112) = v9;
      v8 = v9;
    }
    v10 = *(const void **)(v4 + 64);
    v6 = v8 - (_QWORD)v10;
    if (v8 - (unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_29;
  }
  else
  {
    if ((v5 & 8) == 0)
    {
      v6 = 0;
      HIBYTE(v21) = 0;
      p_p = &__p;
      goto LABEL_16;
    }
    v10 = *(const void **)(v4 + 40);
    v6 = *(_QWORD *)(v4 + 56) - (_QWORD)v10;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
LABEL_29:
      sub_20AEC0138();
  }
  if (v6 >= 0x17)
  {
    v11 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v11 = v6 | 7;
    v12 = v11 + 1;
    p_p = operator new(v11 + 1);
    v20 = v6;
    v21 = v12 | 0x8000000000000000;
    __p = p_p;
  }
  else
  {
    HIBYTE(v21) = v6;
    p_p = &__p;
    if (!v6)
      goto LABEL_16;
  }
  memmove(p_p, v10, v6);
LABEL_16:
  *((_BYTE *)p_p + v6) = 0;
  v13 = v22;
  if (v22)
  {
    v14 = MEMORY[0x24BEDB7F0];
    v15 = *MEMORY[0x24BEDB7F0];
    *v22 = *MEMORY[0x24BEDB7F0];
    v16 = *(_QWORD *)(v14 + 72);
    *(_QWORD *)((char *)v13 + *(_QWORD *)(v15 - 24)) = *(_QWORD *)(v14 + 64);
    v13[3] = MEMORY[0x24BEDB848] + 16;
    v13[2] = v16;
    if (*((char *)v13 + 111) < 0)
      operator delete((void *)v13[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v13 + 16);
    MEMORY[0x20BD3583C](v13, 0x10B2C40EED050F3);
  }
  if (v21 >= 0)
    v17 = &__p;
  else
    v17 = __p;
  if (v21 >= 0)
    v18 = HIBYTE(v21);
  else
    v18 = v20;
  sub_20AEC01D0(*a2, (uint64_t)v17, v18);
  if (SHIBYTE(v21) < 0)
    operator delete(__p);
}

void sub_20AF60778(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF607B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B52CE84((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20AF607CC(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  std::__shared_weak_count *v7;
  CFDataRef v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  unsigned int Length;
  int v13;
  uint64_t v14;
  _QWORD *exception;
  _QWORD v16[4];
  __int128 v17;
  char v18;
  char v19;
  __int128 v20;
  __int128 __p;
  uint64_t v22;
  unsigned __int8 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char v29;
  char v30;
  unsigned __int8 v31;

  v31 = a2;
  v8 = *(CFDataRef *)a1;
  v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v7)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (v8)
      goto LABEL_7;
  }
  else
  {
LABEL_6:
    if (v8)
    {
LABEL_7:
      Length = CFDataGetLength(*(CFDataRef *)a1);
      if ((Length & 0x80000000) != 0)
      {
        exception = __cxa_allocate_exception(8uLL);
        *exception = &off_24C41FEF0;
        __cxa_throw(exception, (struct type_info *)&unk_24C41FF08, (void (*)(void *))std::exception::~exception);
      }
      *(_QWORD *)&v20 = Length;
      v16[0] = &v20;
      v16[1] = &v31;
      v16[2] = a1;
      v16[3] = a3;
      sub_20AF609E8(a4, v31, (uint64_t)v16);
      return;
    }
  }
  LOBYTE(v17) = 0;
  v19 = 0;
  sub_20B099CC4(&v17, (uint64_t)&v20);
  *(_OWORD *)a4 = v20;
  *(_BYTE *)(a4 + 16) = 0;
  *(_BYTE *)(a4 + 112) = 0;
  if (v30)
  {
    *(_BYTE *)(a4 + 40) = 0;
    v13 = v23;
    if (v23)
    {
      *(_OWORD *)(a4 + 16) = __p;
      *(_QWORD *)(a4 + 32) = v22;
      v22 = 0;
      __p = 0uLL;
      *(_BYTE *)(a4 + 40) = 1;
    }
    *(_BYTE *)(a4 + 48) = 0;
    *(_BYTE *)(a4 + 104) = 0;
    if (v29)
    {
      v14 = v26;
      *(_QWORD *)(a4 + 64) = v25;
      *(_OWORD *)(a4 + 48) = v24;
      v24 = 0uLL;
      *(_QWORD *)(a4 + 72) = v14;
      *(_OWORD *)(a4 + 80) = v27;
      *(_QWORD *)(a4 + 96) = v28;
      v25 = 0;
      v27 = 0uLL;
      v28 = 0;
      *(_BYTE *)(a4 + 104) = 1;
    }
    *(_BYTE *)(a4 + 112) = 1;
    *(_BYTE *)(a4 + 528) = 0;
    if (v13 && SHIBYTE(v22) < 0)
      operator delete((void *)__p);
  }
  else
  {
    *(_BYTE *)(a4 + 528) = 0;
  }
  if (v19 && v18 < 0)
    operator delete((void *)v17);
}

void sub_20AF609C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a19)
  {
    if (a18 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF609E8(uint64_t a1, int a2, uint64_t a3)
{
  unint64_t *v5;
  CFDataRef *v6;
  const UInt8 *BytePtr;
  unsigned int Length;
  uint64_t v9;
  BOOL v10;
  __int128 v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  _BYTE *v16;
  unint64_t *v17;
  _BYTE *v18;
  unint64_t *v19;
  CFDataRef *v20;
  const UInt8 *v21;
  unsigned int v22;
  uint64_t v23;
  BOOL v24;
  __int128 v25;
  unint64_t *v26;
  unint64_t *v27;
  _BYTE *v28;
  unint64_t *v29;
  _BYTE *v30;
  unint64_t *v31;
  _BYTE *v32;
  unint64_t *v33;
  _BYTE *v34;
  unint64_t *v35;
  _BYTE *v36;
  unint64_t *v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  CFDataRef *v41;
  const UInt8 *v42;
  unsigned int v43;
  unint64_t v44;
  BOOL v45;
  __int128 v46;
  unint64_t *v47;
  CFDataRef *v48;
  const UInt8 *v49;
  unsigned int v50;
  unint64_t v51;
  BOOL v52;
  __int128 v53;
  unint64_t *v54;
  CFDataRef *v55;
  const UInt8 *v56;
  unsigned int v57;
  unint64_t v58;
  BOOL v59;
  __int128 v60;
  unint64_t *v61;
  CFDataRef *v62;
  const UInt8 *v63;
  unsigned int v64;
  unint64_t v65;
  BOOL v66;
  __int128 v67;
  unint64_t *v68;
  CFDataRef *v69;
  const UInt8 *v70;
  unsigned int v71;
  unint64_t v72;
  BOOL v73;
  __int128 v74;
  unint64_t *v75;
  CFDataRef *v76;
  const UInt8 *v77;
  unsigned int v78;
  unint64_t v79;
  BOOL v80;
  __int128 v81;
  unint64_t *v82;
  CFDataRef *v83;
  const UInt8 *v84;
  unsigned int v85;
  unint64_t v86;
  BOOL v87;
  __int128 v88;
  unint64_t *v89;
  CFDataRef *v90;
  const UInt8 *v91;
  unsigned int v92;
  unint64_t v93;
  BOOL v94;
  __int128 v95;
  unint64_t *v96;
  int v97;
  uint64_t v98;
  _QWORD *exception;
  unint64_t v100;
  const UInt8 *v101;
  unint64_t v102;
  unsigned int v103;
  unsigned int v104;
  void *v105[2];
  uint64_t v106;
  void *__dst[2];
  uint64_t v108;
  char v109;
  void *v110;
  char v111;
  void *v112;
  char v113;
  char v114;
  char v115;
  __int128 v116;
  __int128 __p;
  uint64_t v118;
  unsigned __int8 v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  char v125;
  char v126;
  uint64_t v127;

  v127 = *MEMORY[0x24BDAC8D0];
  switch(a2)
  {
    case 0:
      v5 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 1) == 0)
      {
        v6 = *(CFDataRef **)(a3 + 16);
        BytePtr = CFDataGetBytePtr(*v6);
        Length = CFDataGetLength(*v6);
        if ((Length & 0x80000000) == 0)
        {
          v9 = Length;
          if (BytePtr)
            v10 = 1;
          else
            v10 = Length == 0;
          if (v10
            || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v100 = v9;
            v101 = BytePtr;
            sub_20AF6C1F8(&v100, &v116);
            v11 = v116;
            if ((*(_BYTE *)(v116 + 56) & 1) != 0
              && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
            {
              abort();
            }
            *(_OWORD *)v105 = v11;
            sub_20AF69D38((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
            sub_20AF4BAD4(a1, 0, &v116);
            *(_BYTE *)(a1 + 528) = 1;
            sub_20AED5474((uint64_t)&v116);
            v12 = (std::__shared_weak_count *)v105[1];
            if (v105[1])
            {
              v13 = (unint64_t *)((char *)v105[1] + 8);
              do
                v14 = __ldaxr(v13);
              while (__stlxr(v14 - 1, v13));
LABEL_159:
              if (!v14)
              {
                ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
                std::__shared_weak_count::__release_weak(v12);
              }
              return;
            }
            return;
          }
LABEL_186:
          abort();
        }
        goto LABEL_185;
      }
      v40 = *(_BYTE **)(a3 + 8);
      v103 = 2;
      v104 = 2;
      v100 = 1;
      v102 = 2;
      sub_20AF697F8((uint64_t)v105, v5, v40, &v104, &v100, &v103, &v102);
      if (SHIBYTE(v106) < 0)
        goto LABEL_161;
      *(_OWORD *)__dst = *(_OWORD *)v105;
      v108 = v106;
      goto LABEL_162;
    case 1:
      v27 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 3) != 0)
      {
        v28 = *(_BYTE **)(a3 + 8);
        v103 = 2;
        v104 = 2;
        v100 = 2;
        v102 = 4;
        sub_20AF697F8((uint64_t)v105, v27, v28, &v104, &v100, &v103, &v102);
        if (SHIBYTE(v106) < 0)
        {
LABEL_161:
          sub_20AEC60F4(__dst, v105[0], (unint64_t)v105[1]);
        }
        else
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
        }
LABEL_162:
        v109 = 1;
        LOBYTE(v110) = 0;
        v114 = 0;
        v115 = 1;
        sub_20AECCC3C(0xAu, (__int128 *)__dst, (uint64_t)&v116);
        *(_OWORD *)a1 = v116;
        *(_BYTE *)(a1 + 16) = 0;
        *(_BYTE *)(a1 + 112) = 0;
        if (v126)
        {
          *(_BYTE *)(a1 + 40) = 0;
          v97 = v119;
          if (v119)
          {
            *(_OWORD *)(a1 + 16) = __p;
            *(_QWORD *)(a1 + 32) = v118;
            v118 = 0;
            __p = 0uLL;
            *(_BYTE *)(a1 + 40) = 1;
          }
          *(_BYTE *)(a1 + 48) = 0;
          *(_BYTE *)(a1 + 104) = 0;
          if (v125)
          {
            v98 = v122;
            *(_QWORD *)(a1 + 64) = v121;
            *(_OWORD *)(a1 + 48) = v120;
            v120 = 0uLL;
            *(_QWORD *)(a1 + 72) = v98;
            *(_OWORD *)(a1 + 80) = v123;
            *(_QWORD *)(a1 + 96) = v124;
            v121 = 0;
            v123 = 0uLL;
            v124 = 0;
            *(_BYTE *)(a1 + 104) = 1;
          }
          *(_BYTE *)(a1 + 112) = 1;
          *(_BYTE *)(a1 + 528) = 0;
          if (v97 && SHIBYTE(v118) < 0)
            operator delete((void *)__p);
          if (!v115)
            goto LABEL_179;
        }
        else
        {
          *(_BYTE *)(a1 + 528) = 0;
          if (!v115)
            goto LABEL_179;
        }
        if (!v114)
          goto LABEL_176;
        if (v113 < 0)
        {
          operator delete(v112);
          if ((v111 & 0x80000000) == 0)
          {
LABEL_176:
            if (v109)
              goto LABEL_177;
            goto LABEL_179;
          }
        }
        else if ((v111 & 0x80000000) == 0)
        {
          goto LABEL_176;
        }
        operator delete(v110);
        if (v109)
        {
LABEL_177:
          if (SHIBYTE(v108) < 0)
            operator delete(__dst[0]);
        }
LABEL_179:
        if (SHIBYTE(v106) < 0)
          operator delete(v105[0]);
        return;
      }
      v55 = *(CFDataRef **)(a3 + 16);
      v56 = CFDataGetBytePtr(*v55);
      v57 = CFDataGetLength(*v55);
      if ((v57 & 0x80000000) != 0)
        goto LABEL_185;
      v58 = v57;
      if (v56)
        v59 = 0;
      else
        v59 = v57 >= 2uLL;
      if (v59
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v58 >> 1;
      v101 = v56;
      sub_20AF6E11C((uint64_t *)&v100, &v116);
      v60 = v116;
      if ((*(_BYTE *)(v116 + 56) & 1) != 0
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v60;
      sub_20AF69D38((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v12 = (std::__shared_weak_count *)v105[1];
      if (v105[1])
      {
        v61 = (unint64_t *)((char *)v105[1] + 8);
        do
          v14 = __ldaxr(v61);
        while (__stlxr(v14 - 1, v61));
        goto LABEL_159;
      }
      return;
    case 2:
      v31 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 7) == 0)
      {
        v69 = *(CFDataRef **)(a3 + 16);
        v70 = CFDataGetBytePtr(*v69);
        v71 = CFDataGetLength(*v69);
        if ((v71 & 0x80000000) == 0)
        {
          v72 = v71;
          if (v70)
            v73 = 0;
          else
            v73 = v71 >= 4uLL;
          if (!v73
            || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v100 = v72 >> 2;
            v101 = v70;
            sub_20AF6E1E4((uint64_t *)&v100, &v116);
            v74 = v116;
            if ((*(_BYTE *)(v116 + 56) & 1) != 0
              && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
            {
              abort();
            }
            *(_OWORD *)v105 = v74;
            sub_20AF69D38((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
            sub_20AF4BAD4(a1, 0, &v116);
            *(_BYTE *)(a1 + 528) = 1;
            sub_20AED5474((uint64_t)&v116);
            v12 = (std::__shared_weak_count *)v105[1];
            if (v105[1])
            {
              v75 = (unint64_t *)((char *)v105[1] + 8);
              do
                v14 = __ldaxr(v75);
              while (__stlxr(v14 - 1, v75));
              goto LABEL_159;
            }
            return;
          }
          goto LABEL_186;
        }
LABEL_185:
        exception = __cxa_allocate_exception(8uLL);
        *exception = &off_24C41FEF0;
        __cxa_throw(exception, (struct type_info *)&unk_24C41FF08, (void (*)(void *))std::exception::~exception);
      }
      v32 = *(_BYTE **)(a3 + 8);
      v103 = 2;
      v104 = 2;
      v100 = 4;
      v102 = 8;
      sub_20AF697F8((uint64_t)v105, v31, v32, &v104, &v100, &v103, &v102);
      if (SHIBYTE(v106) < 0)
        goto LABEL_161;
      *(_OWORD *)__dst = *(_OWORD *)v105;
      v108 = v106;
      goto LABEL_162;
    case 3:
      v35 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 0xF) == 0)
      {
        v83 = *(CFDataRef **)(a3 + 16);
        v84 = CFDataGetBytePtr(*v83);
        v85 = CFDataGetLength(*v83);
        if ((v85 & 0x80000000) == 0)
        {
          v86 = v85;
          if (v84)
            v87 = 0;
          else
            v87 = v85 >= 8uLL;
          if (!v87
            || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v100 = v86 >> 3;
            v101 = v84;
            sub_20AF6E298((uint64_t *)&v100, &v116);
            v88 = v116;
            if ((*(_BYTE *)(v116 + 56) & 1) != 0
              && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
            {
              abort();
            }
            *(_OWORD *)v105 = v88;
            sub_20AF69D38((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
            sub_20AF4BAD4(a1, 0, &v116);
            *(_BYTE *)(a1 + 528) = 1;
            sub_20AED5474((uint64_t)&v116);
            v12 = (std::__shared_weak_count *)v105[1];
            if (v105[1])
            {
              v89 = (unint64_t *)((char *)v105[1] + 8);
              do
                v14 = __ldaxr(v89);
              while (__stlxr(v14 - 1, v89));
              goto LABEL_159;
            }
            return;
          }
          goto LABEL_186;
        }
        goto LABEL_185;
      }
      v36 = *(_BYTE **)(a3 + 8);
      v103 = 2;
      v104 = 2;
      v100 = 8;
      v102 = 16;
      sub_20AF697F8((uint64_t)v105, v35, v36, &v104, &v100, &v103, &v102);
      if (SHIBYTE(v106) < 0)
        goto LABEL_161;
      *(_OWORD *)__dst = *(_OWORD *)v105;
      v108 = v106;
      goto LABEL_162;
    case 5:
      v19 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 1) == 0)
      {
        v20 = *(CFDataRef **)(a3 + 16);
        v21 = CFDataGetBytePtr(*v20);
        v22 = CFDataGetLength(*v20);
        if ((v22 & 0x80000000) == 0)
        {
          v23 = v22;
          if (v21)
            v24 = 1;
          else
            v24 = v22 == 0;
          if (v24
            || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v100 = v23;
            v101 = v21;
            sub_20AF6E34C(&v100, &v116);
            v25 = v116;
            if ((*(_BYTE *)(v116 + 56) & 1) != 0
              && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
            {
              abort();
            }
            *(_OWORD *)v105 = v25;
            sub_20AF69D38((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
            sub_20AF4BAD4(a1, 0, &v116);
            *(_BYTE *)(a1 + 528) = 1;
            sub_20AED5474((uint64_t)&v116);
            v12 = (std::__shared_weak_count *)v105[1];
            if (v105[1])
            {
              v26 = (unint64_t *)((char *)v105[1] + 8);
              do
                v14 = __ldaxr(v26);
              while (__stlxr(v14 - 1, v26));
              goto LABEL_159;
            }
            return;
          }
          goto LABEL_186;
        }
        goto LABEL_185;
      }
      v39 = *(_BYTE **)(a3 + 8);
      v103 = 2;
      v104 = 2;
      v100 = 1;
      v102 = 2;
      sub_20AF697F8((uint64_t)v105, v19, v39, &v104, &v100, &v103, &v102);
      if (SHIBYTE(v106) < 0)
        goto LABEL_161;
      *(_OWORD *)__dst = *(_OWORD *)v105;
      v108 = v106;
      goto LABEL_162;
    case 6:
      v29 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 3) == 0)
      {
        v62 = *(CFDataRef **)(a3 + 16);
        v63 = CFDataGetBytePtr(*v62);
        v64 = CFDataGetLength(*v62);
        if ((v64 & 0x80000000) == 0)
        {
          v65 = v64;
          if (v63)
            v66 = 0;
          else
            v66 = v64 >= 2uLL;
          if (!v66
            || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v100 = v65 >> 1;
            v101 = v63;
            sub_20AF6E3FC((uint64_t *)&v100, &v116);
            v67 = v116;
            if ((*(_BYTE *)(v116 + 56) & 1) != 0
              && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
            {
              abort();
            }
            *(_OWORD *)v105 = v67;
            sub_20AF69D38((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
            sub_20AF4BAD4(a1, 0, &v116);
            *(_BYTE *)(a1 + 528) = 1;
            sub_20AED5474((uint64_t)&v116);
            v12 = (std::__shared_weak_count *)v105[1];
            if (v105[1])
            {
              v68 = (unint64_t *)((char *)v105[1] + 8);
              do
                v14 = __ldaxr(v68);
              while (__stlxr(v14 - 1, v68));
              goto LABEL_159;
            }
            return;
          }
          goto LABEL_186;
        }
        goto LABEL_185;
      }
      v30 = *(_BYTE **)(a3 + 8);
      v103 = 2;
      v104 = 2;
      v100 = 2;
      v102 = 4;
      sub_20AF697F8((uint64_t)v105, v29, v30, &v104, &v100, &v103, &v102);
      if (SHIBYTE(v106) < 0)
        goto LABEL_161;
      *(_OWORD *)__dst = *(_OWORD *)v105;
      v108 = v106;
      goto LABEL_162;
    case 7:
      v37 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 7) == 0)
      {
        v90 = *(CFDataRef **)(a3 + 16);
        v91 = CFDataGetBytePtr(*v90);
        v92 = CFDataGetLength(*v90);
        if ((v92 & 0x80000000) == 0)
        {
          v93 = v92;
          if (v91)
            v94 = 0;
          else
            v94 = v92 >= 4uLL;
          if (!v94
            || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v100 = v93 >> 2;
            v101 = v91;
            sub_20AF6E4B0((uint64_t *)&v100, &v116);
            v95 = v116;
            if ((*(_BYTE *)(v116 + 56) & 1) != 0
              && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
            {
              abort();
            }
            *(_OWORD *)v105 = v95;
            sub_20AF69D38((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
            sub_20AF4BAD4(a1, 0, &v116);
            *(_BYTE *)(a1 + 528) = 1;
            sub_20AED5474((uint64_t)&v116);
            v12 = (std::__shared_weak_count *)v105[1];
            if (v105[1])
            {
              v96 = (unint64_t *)((char *)v105[1] + 8);
              do
                v14 = __ldaxr(v96);
              while (__stlxr(v14 - 1, v96));
              goto LABEL_159;
            }
            return;
          }
          goto LABEL_186;
        }
        goto LABEL_185;
      }
      v38 = *(_BYTE **)(a3 + 8);
      v103 = 2;
      v104 = 2;
      v100 = 4;
      v102 = 8;
      sub_20AF697F8((uint64_t)v105, v37, v38, &v104, &v100, &v103, &v102);
      if (SHIBYTE(v106) < 0)
        goto LABEL_161;
      *(_OWORD *)__dst = *(_OWORD *)v105;
      v108 = v106;
      goto LABEL_162;
    case 8:
      v33 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 0xF) == 0)
      {
        v76 = *(CFDataRef **)(a3 + 16);
        v77 = CFDataGetBytePtr(*v76);
        v78 = CFDataGetLength(*v76);
        if ((v78 & 0x80000000) == 0)
        {
          v79 = v78;
          if (v77)
            v80 = 0;
          else
            v80 = v78 >= 8uLL;
          if (!v80
            || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v100 = v79 >> 3;
            v101 = v77;
            sub_20AF6E564((uint64_t *)&v100, &v116);
            v81 = v116;
            if ((*(_BYTE *)(v116 + 56) & 1) != 0
              && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
            {
              abort();
            }
            *(_OWORD *)v105 = v81;
            sub_20AF69D38((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
            sub_20AF4BAD4(a1, 0, &v116);
            *(_BYTE *)(a1 + 528) = 1;
            sub_20AED5474((uint64_t)&v116);
            v12 = (std::__shared_weak_count *)v105[1];
            if (v105[1])
            {
              v82 = (unint64_t *)((char *)v105[1] + 8);
              do
                v14 = __ldaxr(v82);
              while (__stlxr(v14 - 1, v82));
              goto LABEL_159;
            }
            return;
          }
          goto LABEL_186;
        }
        goto LABEL_185;
      }
      v34 = *(_BYTE **)(a3 + 8);
      v103 = 2;
      v104 = 2;
      v100 = 8;
      v102 = 16;
      sub_20AF697F8((uint64_t)v105, v33, v34, &v104, &v100, &v103, &v102);
      if (SHIBYTE(v106) < 0)
        goto LABEL_161;
      *(_OWORD *)__dst = *(_OWORD *)v105;
      v108 = v106;
      goto LABEL_162;
    case 11:
      v17 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 7) == 0)
      {
        v48 = *(CFDataRef **)(a3 + 16);
        v49 = CFDataGetBytePtr(*v48);
        v50 = CFDataGetLength(*v48);
        if ((v50 & 0x80000000) == 0)
        {
          v51 = v50;
          if (v49)
            v52 = 0;
          else
            v52 = v50 >= 4uLL;
          if (!v52
            || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v100 = v51 >> 2;
            v101 = v49;
            sub_20AF6E618((uint64_t *)&v100, &v116);
            v53 = v116;
            if ((*(_BYTE *)(v116 + 56) & 1) != 0
              && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
            {
              abort();
            }
            *(_OWORD *)v105 = v53;
            sub_20AF69D38((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
            sub_20AF4BAD4(a1, 0, &v116);
            *(_BYTE *)(a1 + 528) = 1;
            sub_20AED5474((uint64_t)&v116);
            v12 = (std::__shared_weak_count *)v105[1];
            if (v105[1])
            {
              v54 = (unint64_t *)((char *)v105[1] + 8);
              do
                v14 = __ldaxr(v54);
              while (__stlxr(v14 - 1, v54));
              goto LABEL_159;
            }
            return;
          }
          goto LABEL_186;
        }
        goto LABEL_185;
      }
      v18 = *(_BYTE **)(a3 + 8);
      v103 = 2;
      v104 = 2;
      v100 = 4;
      v102 = 8;
      sub_20AF697F8((uint64_t)v105, v17, v18, &v104, &v100, &v103, &v102);
      if (SHIBYTE(v106) < 0)
        goto LABEL_161;
      *(_OWORD *)__dst = *(_OWORD *)v105;
      v108 = v106;
      goto LABEL_162;
    case 12:
      v15 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 0xF) == 0)
      {
        v41 = *(CFDataRef **)(a3 + 16);
        v42 = CFDataGetBytePtr(*v41);
        v43 = CFDataGetLength(*v41);
        if ((v43 & 0x80000000) == 0)
        {
          v44 = v43;
          if (v42)
            v45 = 0;
          else
            v45 = v43 >= 8uLL;
          if (!v45
            || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v100 = v44 >> 3;
            v101 = v42;
            sub_20AF6E6CC((uint64_t *)&v100, &v116);
            v46 = v116;
            if ((*(_BYTE *)(v116 + 56) & 1) != 0
              && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
            {
              abort();
            }
            *(_OWORD *)v105 = v46;
            sub_20AF69D38((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
            sub_20AF4BAD4(a1, 0, &v116);
            *(_BYTE *)(a1 + 528) = 1;
            sub_20AED5474((uint64_t)&v116);
            v12 = (std::__shared_weak_count *)v105[1];
            if (v105[1])
            {
              v47 = (unint64_t *)((char *)v105[1] + 8);
              do
                v14 = __ldaxr(v47);
              while (__stlxr(v14 - 1, v47));
              goto LABEL_159;
            }
            return;
          }
          goto LABEL_186;
        }
        goto LABEL_185;
      }
      v16 = *(_BYTE **)(a3 + 8);
      v103 = 2;
      v104 = 2;
      v100 = 8;
      v102 = 16;
      sub_20AF697F8((uint64_t)v105, v15, v16, &v104, &v100, &v103, &v102);
      if (SHIBYTE(v106) < 0)
        goto LABEL_161;
      *(_OWORD *)__dst = *(_OWORD *)v105;
      v108 = v106;
      goto LABEL_162;
    default:
      sub_20B521E58(a2);
  }
}

void sub_20AF61C68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  if (a19 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF61F74(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  std::__shared_weak_count *v7;
  CFDataRef v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  unsigned int Length;
  int v13;
  uint64_t v14;
  _QWORD *exception;
  _QWORD v16[4];
  __int128 v17;
  char v18;
  char v19;
  __int128 v20;
  __int128 __p;
  uint64_t v22;
  unsigned __int8 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char v29;
  char v30;
  unsigned __int8 v31;

  v31 = a2;
  v8 = *(CFDataRef *)a1;
  v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v7)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (v8)
      goto LABEL_7;
  }
  else
  {
LABEL_6:
    if (v8)
    {
LABEL_7:
      Length = CFDataGetLength(*(CFDataRef *)a1);
      if ((Length & 0x80000000) != 0)
      {
        exception = __cxa_allocate_exception(8uLL);
        *exception = &off_24C41FEF0;
        __cxa_throw(exception, (struct type_info *)&unk_24C41FF08, (void (*)(void *))std::exception::~exception);
      }
      *(_QWORD *)&v20 = Length;
      v16[0] = &v20;
      v16[1] = &v31;
      v16[2] = a1;
      v16[3] = a3;
      sub_20AF62190(a4, v31, (uint64_t)v16);
      return;
    }
  }
  LOBYTE(v17) = 0;
  v19 = 0;
  sub_20B099CC4(&v17, (uint64_t)&v20);
  *(_OWORD *)a4 = v20;
  *(_BYTE *)(a4 + 16) = 0;
  *(_BYTE *)(a4 + 112) = 0;
  if (v30)
  {
    *(_BYTE *)(a4 + 40) = 0;
    v13 = v23;
    if (v23)
    {
      *(_OWORD *)(a4 + 16) = __p;
      *(_QWORD *)(a4 + 32) = v22;
      v22 = 0;
      __p = 0uLL;
      *(_BYTE *)(a4 + 40) = 1;
    }
    *(_BYTE *)(a4 + 48) = 0;
    *(_BYTE *)(a4 + 104) = 0;
    if (v29)
    {
      v14 = v26;
      *(_QWORD *)(a4 + 64) = v25;
      *(_OWORD *)(a4 + 48) = v24;
      v24 = 0uLL;
      *(_QWORD *)(a4 + 72) = v14;
      *(_OWORD *)(a4 + 80) = v27;
      *(_QWORD *)(a4 + 96) = v28;
      v25 = 0;
      v27 = 0uLL;
      v28 = 0;
      *(_BYTE *)(a4 + 104) = 1;
    }
    *(_BYTE *)(a4 + 112) = 1;
    *(_BYTE *)(a4 + 528) = 0;
    if (v13 && SHIBYTE(v22) < 0)
      operator delete((void *)__p);
  }
  else
  {
    *(_BYTE *)(a4 + 528) = 0;
  }
  if (v19 && v18 < 0)
    operator delete((void *)v17);
}

void sub_20AF6216C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a19)
  {
    if (a18 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF62190(uint64_t a1, int a2, uint64_t a3)
{
  unint64_t *v5;
  _BYTE *v6;
  unint64_t *v7;
  _BYTE *v8;
  unint64_t *v9;
  _BYTE *v10;
  unint64_t *v11;
  _BYTE *v12;
  unint64_t *v13;
  _BYTE *v14;
  unint64_t *v15;
  _BYTE *v16;
  unint64_t *v17;
  _BYTE *v18;
  unint64_t *v19;
  _BYTE *v20;
  unint64_t *v21;
  _BYTE *v22;
  unint64_t *v23;
  _BYTE *v24;
  CFDataRef *v25;
  const UInt8 *v26;
  unsigned int v27;
  unint64_t v28;
  BOOL v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  CFDataRef *v34;
  const UInt8 *v35;
  unsigned int v36;
  unint64_t v37;
  BOOL v38;
  __int128 v39;
  unint64_t *v40;
  CFDataRef *v41;
  const UInt8 *v42;
  unsigned int v43;
  uint64_t v44;
  BOOL v45;
  __int128 v46;
  unint64_t *v47;
  CFDataRef *v48;
  const UInt8 *v49;
  unsigned int v50;
  unint64_t v51;
  BOOL v52;
  __int128 v53;
  unint64_t *v54;
  CFDataRef *v55;
  const UInt8 *BytePtr;
  unsigned int Length;
  uint64_t v58;
  BOOL v59;
  __int128 v60;
  unint64_t *v61;
  CFDataRef *v62;
  const UInt8 *v63;
  unsigned int v64;
  unint64_t v65;
  BOOL v66;
  __int128 v67;
  unint64_t *v68;
  CFDataRef *v69;
  const UInt8 *v70;
  unsigned int v71;
  unint64_t v72;
  BOOL v73;
  __int128 v74;
  unint64_t *v75;
  CFDataRef *v76;
  const UInt8 *v77;
  unsigned int v78;
  unint64_t v79;
  BOOL v80;
  __int128 v81;
  unint64_t *v82;
  CFDataRef *v83;
  const UInt8 *v84;
  unsigned int v85;
  unint64_t v86;
  BOOL v87;
  __int128 v88;
  unint64_t *v89;
  CFDataRef *v90;
  const UInt8 *v91;
  unsigned int v92;
  unint64_t v93;
  BOOL v94;
  __int128 v95;
  unint64_t *v96;
  int v97;
  uint64_t v98;
  _QWORD *exception;
  unint64_t v100;
  const UInt8 *v101;
  unint64_t v102;
  unsigned int v103;
  unsigned int v104;
  void *v105[2];
  uint64_t v106;
  void *__dst[2];
  uint64_t v108;
  char v109;
  void *v110;
  char v111;
  void *v112;
  char v113;
  char v114;
  char v115;
  __int128 v116;
  __int128 __p;
  uint64_t v118;
  unsigned __int8 v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  char v125;
  char v126;
  uint64_t v127;

  v127 = *MEMORY[0x24BDAC8D0];
  switch(a2)
  {
    case 0:
      v5 = *(unint64_t **)a3;
      if (0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3 >= 0x5555555555555556)
      {
        v6 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 1;
        v102 = 3;
        sub_20AF697F8((uint64_t)v105, v5, v6, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v55 = *(CFDataRef **)(a3 + 16);
      BytePtr = CFDataGetBytePtr(*v55);
      Length = CFDataGetLength(*v55);
      if ((Length & 0x80000000) != 0)
        goto LABEL_185;
      v58 = Length;
      if (BytePtr)
        v59 = 1;
      else
        v59 = Length == 0;
      if (!v59
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v58;
      v101 = BytePtr;
      sub_20AF6C1F8(&v100, &v116);
      v60 = v116;
      if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56) >= 0x5555555555555556
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v60;
      sub_20AF6E780((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v61 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v61);
      while (__stlxr(v33 - 1, v61));
      break;
    case 1:
      v13 = *(unint64_t **)a3;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3, 1) >= 0x2AAAAAAAAAAAAAABuLL)
      {
        v14 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 2;
        v102 = 6;
        sub_20AF697F8((uint64_t)v105, v13, v14, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v48 = *(CFDataRef **)(a3 + 16);
      v49 = CFDataGetBytePtr(*v48);
      v50 = CFDataGetLength(*v48);
      if ((v50 & 0x80000000) != 0)
        goto LABEL_185;
      v51 = v50;
      if (v49)
        v52 = 0;
      else
        v52 = v50 >= 2uLL;
      if (v52
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v51 >> 1;
      v101 = v49;
      sub_20AF6E11C((uint64_t *)&v100, &v116);
      v53 = v116;
      if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56) >= 0x5555555555555556
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v53;
      sub_20AF6E780((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v54 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v54);
      while (__stlxr(v33 - 1, v54));
      break;
    case 2:
      v17 = *(unint64_t **)a3;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3, 2) >= 0x1555555555555556uLL)
      {
        v18 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 4;
        v102 = 12;
        sub_20AF697F8((uint64_t)v105, v17, v18, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v69 = *(CFDataRef **)(a3 + 16);
      v70 = CFDataGetBytePtr(*v69);
      v71 = CFDataGetLength(*v69);
      if ((v71 & 0x80000000) != 0)
        goto LABEL_185;
      v72 = v71;
      if (v70)
        v73 = 0;
      else
        v73 = v71 >= 4uLL;
      if (v73
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v72 >> 2;
      v101 = v70;
      sub_20AF6E1E4((uint64_t *)&v100, &v116);
      v74 = v116;
      if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56) >= 0x5555555555555556
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v74;
      sub_20AF6E780((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v75 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v75);
      while (__stlxr(v33 - 1, v75));
      break;
    case 3:
      v21 = *(unint64_t **)a3;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3, 3) >= 0xAAAAAAAAAAAAAABuLL)
      {
        v22 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 8;
        v102 = 24;
        sub_20AF697F8((uint64_t)v105, v21, v22, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v83 = *(CFDataRef **)(a3 + 16);
      v84 = CFDataGetBytePtr(*v83);
      v85 = CFDataGetLength(*v83);
      if ((v85 & 0x80000000) != 0)
        goto LABEL_185;
      v86 = v85;
      if (v84)
        v87 = 0;
      else
        v87 = v85 >= 8uLL;
      if (v87
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v86 >> 3;
      v101 = v84;
      sub_20AF6E298((uint64_t *)&v100, &v116);
      v88 = v116;
      if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56) >= 0x5555555555555556
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v88;
      sub_20AF6E780((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v89 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v89);
      while (__stlxr(v33 - 1, v89));
      break;
    case 5:
      v11 = *(unint64_t **)a3;
      if (0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3 >= 0x5555555555555556)
      {
        v12 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 1;
        v102 = 3;
        sub_20AF697F8((uint64_t)v105, v11, v12, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v41 = *(CFDataRef **)(a3 + 16);
      v42 = CFDataGetBytePtr(*v41);
      v43 = CFDataGetLength(*v41);
      if ((v43 & 0x80000000) != 0)
        goto LABEL_185;
      v44 = v43;
      if (v42)
        v45 = 1;
      else
        v45 = v43 == 0;
      if (!v45
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v44;
      v101 = v42;
      sub_20AF6E34C(&v100, &v116);
      v46 = v116;
      if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56) >= 0x5555555555555556
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v46;
      sub_20AF6E780((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v47 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v47);
      while (__stlxr(v33 - 1, v47));
      break;
    case 6:
      v15 = *(unint64_t **)a3;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3, 1) >= 0x2AAAAAAAAAAAAAABuLL)
      {
        v16 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 2;
        v102 = 6;
        sub_20AF697F8((uint64_t)v105, v15, v16, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v62 = *(CFDataRef **)(a3 + 16);
      v63 = CFDataGetBytePtr(*v62);
      v64 = CFDataGetLength(*v62);
      if ((v64 & 0x80000000) != 0)
        goto LABEL_185;
      v65 = v64;
      if (v63)
        v66 = 0;
      else
        v66 = v64 >= 2uLL;
      if (v66
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v65 >> 1;
      v101 = v63;
      sub_20AF6E3FC((uint64_t *)&v100, &v116);
      v67 = v116;
      if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56) >= 0x5555555555555556
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v67;
      sub_20AF6E780((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v68 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v68);
      while (__stlxr(v33 - 1, v68));
      break;
    case 7:
      v23 = *(unint64_t **)a3;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3, 2) >= 0x1555555555555556uLL)
      {
        v24 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 4;
        v102 = 12;
        sub_20AF697F8((uint64_t)v105, v23, v24, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
LABEL_161:
        sub_20AEC60F4(__dst, v105[0], (unint64_t)v105[1]);
LABEL_162:
        v109 = 1;
        LOBYTE(v110) = 0;
        v114 = 0;
        v115 = 1;
        sub_20AECCC3C(0xAu, (__int128 *)__dst, (uint64_t)&v116);
        *(_OWORD *)a1 = v116;
        *(_BYTE *)(a1 + 16) = 0;
        *(_BYTE *)(a1 + 112) = 0;
        if (v126)
        {
          *(_BYTE *)(a1 + 40) = 0;
          v97 = v119;
          if (v119)
          {
            *(_OWORD *)(a1 + 16) = __p;
            *(_QWORD *)(a1 + 32) = v118;
            v118 = 0;
            __p = 0uLL;
            *(_BYTE *)(a1 + 40) = 1;
          }
          *(_BYTE *)(a1 + 48) = 0;
          *(_BYTE *)(a1 + 104) = 0;
          if (v125)
          {
            v98 = v122;
            *(_QWORD *)(a1 + 64) = v121;
            *(_OWORD *)(a1 + 48) = v120;
            v120 = 0uLL;
            *(_QWORD *)(a1 + 72) = v98;
            *(_OWORD *)(a1 + 80) = v123;
            *(_QWORD *)(a1 + 96) = v124;
            v121 = 0;
            v123 = 0uLL;
            v124 = 0;
            *(_BYTE *)(a1 + 104) = 1;
          }
          *(_BYTE *)(a1 + 112) = 1;
          *(_BYTE *)(a1 + 528) = 0;
          if (v97 && SHIBYTE(v118) < 0)
            operator delete((void *)__p);
          if (!v115)
            goto LABEL_179;
        }
        else
        {
          *(_BYTE *)(a1 + 528) = 0;
          if (!v115)
            goto LABEL_179;
        }
        if (!v114)
          goto LABEL_176;
        if (v113 < 0)
        {
          operator delete(v112);
          if ((v111 & 0x80000000) == 0)
          {
LABEL_176:
            if (v109)
              goto LABEL_177;
            goto LABEL_179;
          }
        }
        else if ((v111 & 0x80000000) == 0)
        {
          goto LABEL_176;
        }
        operator delete(v110);
        if (v109)
        {
LABEL_177:
          if (SHIBYTE(v108) < 0)
            operator delete(__dst[0]);
        }
LABEL_179:
        if (SHIBYTE(v106) < 0)
          operator delete(v105[0]);
        return;
      }
      v90 = *(CFDataRef **)(a3 + 16);
      v91 = CFDataGetBytePtr(*v90);
      v92 = CFDataGetLength(*v90);
      if ((v92 & 0x80000000) != 0)
      {
LABEL_185:
        exception = __cxa_allocate_exception(8uLL);
        *exception = &off_24C41FEF0;
        __cxa_throw(exception, (struct type_info *)&unk_24C41FF08, (void (*)(void *))std::exception::~exception);
      }
      v93 = v92;
      if (v91)
        v94 = 0;
      else
        v94 = v92 >= 4uLL;
      if (v94
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_186:
        abort();
      }
      v100 = v93 >> 2;
      v101 = v91;
      sub_20AF6E4B0((uint64_t *)&v100, &v116);
      v95 = v116;
      if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56) >= 0x5555555555555556
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v95;
      sub_20AF6E780((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v96 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v96);
      while (__stlxr(v33 - 1, v96));
      break;
    case 8:
      v19 = *(unint64_t **)a3;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3, 3) >= 0xAAAAAAAAAAAAAABuLL)
      {
        v20 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 8;
        v102 = 24;
        sub_20AF697F8((uint64_t)v105, v19, v20, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v76 = *(CFDataRef **)(a3 + 16);
      v77 = CFDataGetBytePtr(*v76);
      v78 = CFDataGetLength(*v76);
      if ((v78 & 0x80000000) != 0)
        goto LABEL_185;
      v79 = v78;
      if (v77)
        v80 = 0;
      else
        v80 = v78 >= 8uLL;
      if (v80
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v79 >> 3;
      v101 = v77;
      sub_20AF6E564((uint64_t *)&v100, &v116);
      v81 = v116;
      if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56) >= 0x5555555555555556
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v81;
      sub_20AF6E780((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v82 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v82);
      while (__stlxr(v33 - 1, v82));
      break;
    case 11:
      v9 = *(unint64_t **)a3;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3, 2) >= 0x1555555555555556uLL)
      {
        v10 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 4;
        v102 = 12;
        sub_20AF697F8((uint64_t)v105, v9, v10, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v34 = *(CFDataRef **)(a3 + 16);
      v35 = CFDataGetBytePtr(*v34);
      v36 = CFDataGetLength(*v34);
      if ((v36 & 0x80000000) != 0)
        goto LABEL_185;
      v37 = v36;
      if (v35)
        v38 = 0;
      else
        v38 = v36 >= 4uLL;
      if (v38
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v37 >> 2;
      v101 = v35;
      sub_20AF6E618((uint64_t *)&v100, &v116);
      v39 = v116;
      if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56) >= 0x5555555555555556
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v39;
      sub_20AF6E780((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v40 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v40);
      while (__stlxr(v33 - 1, v40));
      break;
    case 12:
      v7 = *(unint64_t **)a3;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3, 3) >= 0xAAAAAAAAAAAAAABuLL)
      {
        v8 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 8;
        v102 = 24;
        sub_20AF697F8((uint64_t)v105, v7, v8, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v25 = *(CFDataRef **)(a3 + 16);
      v26 = CFDataGetBytePtr(*v25);
      v27 = CFDataGetLength(*v25);
      if ((v27 & 0x80000000) != 0)
        goto LABEL_185;
      v28 = v27;
      if (v26)
        v29 = 0;
      else
        v29 = v27 >= 8uLL;
      if (v29
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v28 >> 3;
      v101 = v26;
      sub_20AF6E6CC((uint64_t *)&v100, &v116);
      v30 = v116;
      if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56) >= 0x5555555555555556
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v30;
      sub_20AF6E780((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v32 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      break;
    default:
      sub_20B521E58(a2);
  }
  if (!v33)
  {
    ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
    std::__shared_weak_count::__release_weak(v31);
  }
}

void sub_20AF63618(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  if (a19 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF63924(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  std::__shared_weak_count *v7;
  CFDataRef v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  unsigned int Length;
  int v13;
  uint64_t v14;
  _QWORD *exception;
  _QWORD v16[4];
  __int128 v17;
  char v18;
  char v19;
  __int128 v20;
  __int128 __p;
  uint64_t v22;
  unsigned __int8 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char v29;
  char v30;
  unsigned __int8 v31;

  v31 = a2;
  v8 = *(CFDataRef *)a1;
  v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v7)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (v8)
      goto LABEL_7;
  }
  else
  {
LABEL_6:
    if (v8)
    {
LABEL_7:
      Length = CFDataGetLength(*(CFDataRef *)a1);
      if ((Length & 0x80000000) != 0)
      {
        exception = __cxa_allocate_exception(8uLL);
        *exception = &off_24C41FEF0;
        __cxa_throw(exception, (struct type_info *)&unk_24C41FF08, (void (*)(void *))std::exception::~exception);
      }
      *(_QWORD *)&v20 = Length;
      v16[0] = &v20;
      v16[1] = &v31;
      v16[2] = a1;
      v16[3] = a3;
      sub_20AF63B40(a4, v31, (uint64_t)v16);
      return;
    }
  }
  LOBYTE(v17) = 0;
  v19 = 0;
  sub_20B099CC4(&v17, (uint64_t)&v20);
  *(_OWORD *)a4 = v20;
  *(_BYTE *)(a4 + 16) = 0;
  *(_BYTE *)(a4 + 112) = 0;
  if (v30)
  {
    *(_BYTE *)(a4 + 40) = 0;
    v13 = v23;
    if (v23)
    {
      *(_OWORD *)(a4 + 16) = __p;
      *(_QWORD *)(a4 + 32) = v22;
      v22 = 0;
      __p = 0uLL;
      *(_BYTE *)(a4 + 40) = 1;
    }
    *(_BYTE *)(a4 + 48) = 0;
    *(_BYTE *)(a4 + 104) = 0;
    if (v29)
    {
      v14 = v26;
      *(_QWORD *)(a4 + 64) = v25;
      *(_OWORD *)(a4 + 48) = v24;
      v24 = 0uLL;
      *(_QWORD *)(a4 + 72) = v14;
      *(_OWORD *)(a4 + 80) = v27;
      *(_QWORD *)(a4 + 96) = v28;
      v25 = 0;
      v27 = 0uLL;
      v28 = 0;
      *(_BYTE *)(a4 + 104) = 1;
    }
    *(_BYTE *)(a4 + 112) = 1;
    *(_BYTE *)(a4 + 528) = 0;
    if (v13 && SHIBYTE(v22) < 0)
      operator delete((void *)__p);
  }
  else
  {
    *(_BYTE *)(a4 + 528) = 0;
  }
  if (v19 && v18 < 0)
    operator delete((void *)v17);
}

void sub_20AF63B1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a19)
  {
    if (a18 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF63B40(uint64_t a1, int a2, uint64_t a3)
{
  unint64_t *v5;
  _BYTE *v6;
  unint64_t *v7;
  _BYTE *v8;
  unint64_t *v9;
  _BYTE *v10;
  unint64_t *v11;
  _BYTE *v12;
  unint64_t *v13;
  _BYTE *v14;
  unint64_t *v15;
  _BYTE *v16;
  unint64_t *v17;
  _BYTE *v18;
  unint64_t *v19;
  _BYTE *v20;
  unint64_t *v21;
  _BYTE *v22;
  unint64_t *v23;
  _BYTE *v24;
  CFDataRef *v25;
  const UInt8 *v26;
  unsigned int v27;
  unint64_t v28;
  BOOL v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  CFDataRef *v34;
  const UInt8 *v35;
  unsigned int v36;
  unint64_t v37;
  BOOL v38;
  __int128 v39;
  unint64_t *v40;
  CFDataRef *v41;
  const UInt8 *v42;
  unsigned int v43;
  uint64_t v44;
  BOOL v45;
  __int128 v46;
  unint64_t *v47;
  CFDataRef *v48;
  const UInt8 *v49;
  unsigned int v50;
  unint64_t v51;
  BOOL v52;
  __int128 v53;
  unint64_t *v54;
  CFDataRef *v55;
  const UInt8 *BytePtr;
  unsigned int Length;
  uint64_t v58;
  BOOL v59;
  __int128 v60;
  unint64_t *v61;
  CFDataRef *v62;
  const UInt8 *v63;
  unsigned int v64;
  unint64_t v65;
  BOOL v66;
  __int128 v67;
  unint64_t *v68;
  CFDataRef *v69;
  const UInt8 *v70;
  unsigned int v71;
  unint64_t v72;
  BOOL v73;
  __int128 v74;
  unint64_t *v75;
  CFDataRef *v76;
  const UInt8 *v77;
  unsigned int v78;
  unint64_t v79;
  BOOL v80;
  __int128 v81;
  unint64_t *v82;
  CFDataRef *v83;
  const UInt8 *v84;
  unsigned int v85;
  unint64_t v86;
  BOOL v87;
  __int128 v88;
  unint64_t *v89;
  CFDataRef *v90;
  const UInt8 *v91;
  unsigned int v92;
  unint64_t v93;
  BOOL v94;
  __int128 v95;
  unint64_t *v96;
  int v97;
  uint64_t v98;
  _QWORD *exception;
  unint64_t v100;
  const UInt8 *v101;
  unint64_t v102;
  unsigned int v103;
  unsigned int v104;
  void *v105[2];
  uint64_t v106;
  void *__dst[2];
  uint64_t v108;
  char v109;
  void *v110;
  char v111;
  void *v112;
  char v113;
  char v114;
  char v115;
  __int128 v116;
  __int128 __p;
  uint64_t v118;
  unsigned __int8 v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  char v125;
  char v126;
  uint64_t v127;

  v127 = *MEMORY[0x24BDAC8D0];
  switch(a2)
  {
    case 0:
      v5 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 3) != 0)
      {
        v6 = *(_BYTE **)(a3 + 8);
        v103 = 2;
        v104 = 2;
        v100 = 1;
        v102 = 4;
        sub_20AF708DC((uint64_t)v105, v5, v6, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v55 = *(CFDataRef **)(a3 + 16);
      BytePtr = CFDataGetBytePtr(*v55);
      Length = CFDataGetLength(*v55);
      if ((Length & 0x80000000) != 0)
        goto LABEL_185;
      v58 = Length;
      if (BytePtr)
        v59 = 1;
      else
        v59 = Length == 0;
      if (!v59
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v58;
      v101 = BytePtr;
      sub_20AF6C1F8(&v100, &v116);
      v60 = v116;
      if ((*(_BYTE *)(v116 + 56) & 3) != 0
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v60;
      sub_20AF70E14((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v61 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v61);
      while (__stlxr(v33 - 1, v61));
      break;
    case 1:
      v13 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 7) != 0)
      {
        v14 = *(_BYTE **)(a3 + 8);
        v103 = 2;
        v104 = 2;
        v100 = 2;
        v102 = 8;
        sub_20AF708DC((uint64_t)v105, v13, v14, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v48 = *(CFDataRef **)(a3 + 16);
      v49 = CFDataGetBytePtr(*v48);
      v50 = CFDataGetLength(*v48);
      if ((v50 & 0x80000000) != 0)
        goto LABEL_185;
      v51 = v50;
      if (v49)
        v52 = 0;
      else
        v52 = v50 >= 2uLL;
      if (v52
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v51 >> 1;
      v101 = v49;
      sub_20AF6E11C((uint64_t *)&v100, &v116);
      v53 = v116;
      if ((*(_BYTE *)(v116 + 56) & 3) != 0
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v53;
      sub_20AF70E14((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v54 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v54);
      while (__stlxr(v33 - 1, v54));
      break;
    case 2:
      v17 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 0xF) != 0)
      {
        v18 = *(_BYTE **)(a3 + 8);
        v103 = 2;
        v104 = 2;
        v100 = 4;
        v102 = 16;
        sub_20AF708DC((uint64_t)v105, v17, v18, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v69 = *(CFDataRef **)(a3 + 16);
      v70 = CFDataGetBytePtr(*v69);
      v71 = CFDataGetLength(*v69);
      if ((v71 & 0x80000000) != 0)
        goto LABEL_185;
      v72 = v71;
      if (v70)
        v73 = 0;
      else
        v73 = v71 >= 4uLL;
      if (v73
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v72 >> 2;
      v101 = v70;
      sub_20AF6E1E4((uint64_t *)&v100, &v116);
      v74 = v116;
      if ((*(_BYTE *)(v116 + 56) & 3) != 0
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v74;
      sub_20AF70E14((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v75 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v75);
      while (__stlxr(v33 - 1, v75));
      break;
    case 3:
      v21 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 0x1F) != 0)
      {
        v22 = *(_BYTE **)(a3 + 8);
        v103 = 2;
        v104 = 2;
        v100 = 8;
        v102 = 32;
        sub_20AF708DC((uint64_t)v105, v21, v22, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v83 = *(CFDataRef **)(a3 + 16);
      v84 = CFDataGetBytePtr(*v83);
      v85 = CFDataGetLength(*v83);
      if ((v85 & 0x80000000) != 0)
        goto LABEL_185;
      v86 = v85;
      if (v84)
        v87 = 0;
      else
        v87 = v85 >= 8uLL;
      if (v87
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v86 >> 3;
      v101 = v84;
      sub_20AF6E298((uint64_t *)&v100, &v116);
      v88 = v116;
      if ((*(_BYTE *)(v116 + 56) & 3) != 0
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v88;
      sub_20AF70E14((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v89 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v89);
      while (__stlxr(v33 - 1, v89));
      break;
    case 5:
      v11 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 3) != 0)
      {
        v12 = *(_BYTE **)(a3 + 8);
        v103 = 2;
        v104 = 2;
        v100 = 1;
        v102 = 4;
        sub_20AF708DC((uint64_t)v105, v11, v12, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v41 = *(CFDataRef **)(a3 + 16);
      v42 = CFDataGetBytePtr(*v41);
      v43 = CFDataGetLength(*v41);
      if ((v43 & 0x80000000) != 0)
        goto LABEL_185;
      v44 = v43;
      if (v42)
        v45 = 1;
      else
        v45 = v43 == 0;
      if (!v45
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v44;
      v101 = v42;
      sub_20AF6E34C(&v100, &v116);
      v46 = v116;
      if ((*(_BYTE *)(v116 + 56) & 3) != 0
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v46;
      sub_20AF70E14((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v47 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v47);
      while (__stlxr(v33 - 1, v47));
      break;
    case 6:
      v15 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 7) != 0)
      {
        v16 = *(_BYTE **)(a3 + 8);
        v103 = 2;
        v104 = 2;
        v100 = 2;
        v102 = 8;
        sub_20AF708DC((uint64_t)v105, v15, v16, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v62 = *(CFDataRef **)(a3 + 16);
      v63 = CFDataGetBytePtr(*v62);
      v64 = CFDataGetLength(*v62);
      if ((v64 & 0x80000000) != 0)
        goto LABEL_185;
      v65 = v64;
      if (v63)
        v66 = 0;
      else
        v66 = v64 >= 2uLL;
      if (v66
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v65 >> 1;
      v101 = v63;
      sub_20AF6E3FC((uint64_t *)&v100, &v116);
      v67 = v116;
      if ((*(_BYTE *)(v116 + 56) & 3) != 0
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v67;
      sub_20AF70E14((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v68 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v68);
      while (__stlxr(v33 - 1, v68));
      break;
    case 7:
      v23 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 0xF) != 0)
      {
        v24 = *(_BYTE **)(a3 + 8);
        v103 = 2;
        v104 = 2;
        v100 = 4;
        v102 = 16;
        sub_20AF708DC((uint64_t)v105, v23, v24, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
LABEL_161:
        sub_20AEC60F4(__dst, v105[0], (unint64_t)v105[1]);
LABEL_162:
        v109 = 1;
        LOBYTE(v110) = 0;
        v114 = 0;
        v115 = 1;
        sub_20AECCC3C(0xAu, (__int128 *)__dst, (uint64_t)&v116);
        *(_OWORD *)a1 = v116;
        *(_BYTE *)(a1 + 16) = 0;
        *(_BYTE *)(a1 + 112) = 0;
        if (v126)
        {
          *(_BYTE *)(a1 + 40) = 0;
          v97 = v119;
          if (v119)
          {
            *(_OWORD *)(a1 + 16) = __p;
            *(_QWORD *)(a1 + 32) = v118;
            v118 = 0;
            __p = 0uLL;
            *(_BYTE *)(a1 + 40) = 1;
          }
          *(_BYTE *)(a1 + 48) = 0;
          *(_BYTE *)(a1 + 104) = 0;
          if (v125)
          {
            v98 = v122;
            *(_QWORD *)(a1 + 64) = v121;
            *(_OWORD *)(a1 + 48) = v120;
            v120 = 0uLL;
            *(_QWORD *)(a1 + 72) = v98;
            *(_OWORD *)(a1 + 80) = v123;
            *(_QWORD *)(a1 + 96) = v124;
            v121 = 0;
            v123 = 0uLL;
            v124 = 0;
            *(_BYTE *)(a1 + 104) = 1;
          }
          *(_BYTE *)(a1 + 112) = 1;
          *(_BYTE *)(a1 + 528) = 0;
          if (v97 && SHIBYTE(v118) < 0)
            operator delete((void *)__p);
          if (!v115)
            goto LABEL_179;
        }
        else
        {
          *(_BYTE *)(a1 + 528) = 0;
          if (!v115)
            goto LABEL_179;
        }
        if (!v114)
          goto LABEL_176;
        if (v113 < 0)
        {
          operator delete(v112);
          if ((v111 & 0x80000000) == 0)
          {
LABEL_176:
            if (v109)
              goto LABEL_177;
            goto LABEL_179;
          }
        }
        else if ((v111 & 0x80000000) == 0)
        {
          goto LABEL_176;
        }
        operator delete(v110);
        if (v109)
        {
LABEL_177:
          if (SHIBYTE(v108) < 0)
            operator delete(__dst[0]);
        }
LABEL_179:
        if (SHIBYTE(v106) < 0)
          operator delete(v105[0]);
        return;
      }
      v90 = *(CFDataRef **)(a3 + 16);
      v91 = CFDataGetBytePtr(*v90);
      v92 = CFDataGetLength(*v90);
      if ((v92 & 0x80000000) != 0)
      {
LABEL_185:
        exception = __cxa_allocate_exception(8uLL);
        *exception = &off_24C41FEF0;
        __cxa_throw(exception, (struct type_info *)&unk_24C41FF08, (void (*)(void *))std::exception::~exception);
      }
      v93 = v92;
      if (v91)
        v94 = 0;
      else
        v94 = v92 >= 4uLL;
      if (v94
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_186:
        abort();
      }
      v100 = v93 >> 2;
      v101 = v91;
      sub_20AF6E4B0((uint64_t *)&v100, &v116);
      v95 = v116;
      if ((*(_BYTE *)(v116 + 56) & 3) != 0
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v95;
      sub_20AF70E14((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v96 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v96);
      while (__stlxr(v33 - 1, v96));
      break;
    case 8:
      v19 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 0x1F) != 0)
      {
        v20 = *(_BYTE **)(a3 + 8);
        v103 = 2;
        v104 = 2;
        v100 = 8;
        v102 = 32;
        sub_20AF708DC((uint64_t)v105, v19, v20, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v76 = *(CFDataRef **)(a3 + 16);
      v77 = CFDataGetBytePtr(*v76);
      v78 = CFDataGetLength(*v76);
      if ((v78 & 0x80000000) != 0)
        goto LABEL_185;
      v79 = v78;
      if (v77)
        v80 = 0;
      else
        v80 = v78 >= 8uLL;
      if (v80
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v79 >> 3;
      v101 = v77;
      sub_20AF6E564((uint64_t *)&v100, &v116);
      v81 = v116;
      if ((*(_BYTE *)(v116 + 56) & 3) != 0
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v81;
      sub_20AF70E14((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v82 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v82);
      while (__stlxr(v33 - 1, v82));
      break;
    case 11:
      v9 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 0xF) != 0)
      {
        v10 = *(_BYTE **)(a3 + 8);
        v103 = 2;
        v104 = 2;
        v100 = 4;
        v102 = 16;
        sub_20AF708DC((uint64_t)v105, v9, v10, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v34 = *(CFDataRef **)(a3 + 16);
      v35 = CFDataGetBytePtr(*v34);
      v36 = CFDataGetLength(*v34);
      if ((v36 & 0x80000000) != 0)
        goto LABEL_185;
      v37 = v36;
      if (v35)
        v38 = 0;
      else
        v38 = v36 >= 4uLL;
      if (v38
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v37 >> 2;
      v101 = v35;
      sub_20AF6E618((uint64_t *)&v100, &v116);
      v39 = v116;
      if ((*(_BYTE *)(v116 + 56) & 3) != 0
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v39;
      sub_20AF70E14((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v40 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v40);
      while (__stlxr(v33 - 1, v40));
      break;
    case 12:
      v7 = *(unint64_t **)a3;
      if ((**(_BYTE **)a3 & 0x1F) != 0)
      {
        v8 = *(_BYTE **)(a3 + 8);
        v103 = 2;
        v104 = 2;
        v100 = 8;
        v102 = 32;
        sub_20AF708DC((uint64_t)v105, v7, v8, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v25 = *(CFDataRef **)(a3 + 16);
      v26 = CFDataGetBytePtr(*v25);
      v27 = CFDataGetLength(*v25);
      if ((v27 & 0x80000000) != 0)
        goto LABEL_185;
      v28 = v27;
      if (v26)
        v29 = 0;
      else
        v29 = v27 >= 8uLL;
      if (v29
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v28 >> 3;
      v101 = v26;
      sub_20AF6E6CC((uint64_t *)&v100, &v116);
      v30 = v116;
      if ((*(_BYTE *)(v116 + 56) & 3) != 0
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v30;
      sub_20AF70E14((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v32 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      break;
    default:
      sub_20B521E58(a2);
  }
  if (!v33)
  {
    ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
    std::__shared_weak_count::__release_weak(v31);
  }
}

void sub_20AF64DF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  if (a19 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF65104(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  std::__shared_weak_count *v7;
  CFDataRef v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  unsigned int Length;
  int v13;
  uint64_t v14;
  _QWORD *exception;
  _QWORD v16[4];
  __int128 v17;
  char v18;
  char v19;
  __int128 v20;
  __int128 __p;
  uint64_t v22;
  unsigned __int8 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char v29;
  char v30;
  unsigned __int8 v31;

  v31 = a2;
  v8 = *(CFDataRef *)a1;
  v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v7)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (v8)
      goto LABEL_7;
  }
  else
  {
LABEL_6:
    if (v8)
    {
LABEL_7:
      Length = CFDataGetLength(*(CFDataRef *)a1);
      if ((Length & 0x80000000) != 0)
      {
        exception = __cxa_allocate_exception(8uLL);
        *exception = &off_24C41FEF0;
        __cxa_throw(exception, (struct type_info *)&unk_24C41FF08, (void (*)(void *))std::exception::~exception);
      }
      *(_QWORD *)&v20 = Length;
      v16[0] = &v20;
      v16[1] = &v31;
      v16[2] = a1;
      v16[3] = a3;
      sub_20AF65320(a4, v31, (uint64_t)v16);
      return;
    }
  }
  LOBYTE(v17) = 0;
  v19 = 0;
  sub_20B099CC4(&v17, (uint64_t)&v20);
  *(_OWORD *)a4 = v20;
  *(_BYTE *)(a4 + 16) = 0;
  *(_BYTE *)(a4 + 112) = 0;
  if (v30)
  {
    *(_BYTE *)(a4 + 40) = 0;
    v13 = v23;
    if (v23)
    {
      *(_OWORD *)(a4 + 16) = __p;
      *(_QWORD *)(a4 + 32) = v22;
      v22 = 0;
      __p = 0uLL;
      *(_BYTE *)(a4 + 40) = 1;
    }
    *(_BYTE *)(a4 + 48) = 0;
    *(_BYTE *)(a4 + 104) = 0;
    if (v29)
    {
      v14 = v26;
      *(_QWORD *)(a4 + 64) = v25;
      *(_OWORD *)(a4 + 48) = v24;
      v24 = 0uLL;
      *(_QWORD *)(a4 + 72) = v14;
      *(_OWORD *)(a4 + 80) = v27;
      *(_QWORD *)(a4 + 96) = v28;
      v25 = 0;
      v27 = 0uLL;
      v28 = 0;
      *(_BYTE *)(a4 + 104) = 1;
    }
    *(_BYTE *)(a4 + 112) = 1;
    *(_BYTE *)(a4 + 528) = 0;
    if (v13 && SHIBYTE(v22) < 0)
      operator delete((void *)__p);
  }
  else
  {
    *(_BYTE *)(a4 + 528) = 0;
  }
  if (v19 && v18 < 0)
    operator delete((void *)v17);
}

void sub_20AF652FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a19)
  {
    if (a18 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF65320(uint64_t a1, int a2, uint64_t a3)
{
  unint64_t *v5;
  _BYTE *v6;
  unint64_t *v7;
  _BYTE *v8;
  unint64_t *v9;
  _BYTE *v10;
  unint64_t *v11;
  _BYTE *v12;
  unint64_t *v13;
  _BYTE *v14;
  unint64_t *v15;
  _BYTE *v16;
  unint64_t *v17;
  _BYTE *v18;
  unint64_t *v19;
  _BYTE *v20;
  unint64_t *v21;
  _BYTE *v22;
  unint64_t *v23;
  _BYTE *v24;
  CFDataRef *v25;
  const UInt8 *v26;
  unsigned int v27;
  unint64_t v28;
  BOOL v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  CFDataRef *v34;
  const UInt8 *v35;
  unsigned int v36;
  unint64_t v37;
  BOOL v38;
  __int128 v39;
  unint64_t *v40;
  CFDataRef *v41;
  const UInt8 *v42;
  unsigned int v43;
  uint64_t v44;
  BOOL v45;
  __int128 v46;
  unint64_t *v47;
  CFDataRef *v48;
  const UInt8 *v49;
  unsigned int v50;
  unint64_t v51;
  BOOL v52;
  __int128 v53;
  unint64_t *v54;
  CFDataRef *v55;
  const UInt8 *BytePtr;
  unsigned int Length;
  uint64_t v58;
  BOOL v59;
  __int128 v60;
  unint64_t *v61;
  CFDataRef *v62;
  const UInt8 *v63;
  unsigned int v64;
  unint64_t v65;
  BOOL v66;
  __int128 v67;
  unint64_t *v68;
  CFDataRef *v69;
  const UInt8 *v70;
  unsigned int v71;
  unint64_t v72;
  BOOL v73;
  __int128 v74;
  unint64_t *v75;
  CFDataRef *v76;
  const UInt8 *v77;
  unsigned int v78;
  unint64_t v79;
  BOOL v80;
  __int128 v81;
  unint64_t *v82;
  CFDataRef *v83;
  const UInt8 *v84;
  unsigned int v85;
  unint64_t v86;
  BOOL v87;
  __int128 v88;
  unint64_t *v89;
  CFDataRef *v90;
  const UInt8 *v91;
  unsigned int v92;
  unint64_t v93;
  BOOL v94;
  __int128 v95;
  unint64_t *v96;
  int v97;
  uint64_t v98;
  _QWORD *exception;
  unint64_t v100;
  const UInt8 *v101;
  unint64_t v102;
  unsigned int v103;
  unsigned int v104;
  void *v105[2];
  uint64_t v106;
  void *__dst[2];
  uint64_t v108;
  char v109;
  void *v110;
  char v111;
  void *v112;
  char v113;
  char v114;
  char v115;
  __int128 v116;
  __int128 __p;
  uint64_t v118;
  unsigned __int8 v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  char v125;
  char v126;
  uint64_t v127;

  v127 = *MEMORY[0x24BDAC8D0];
  switch(a2)
  {
    case 0:
      v5 = *(unint64_t **)a3;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3, 1) >= 0x2AAAAAAAAAAAAAABuLL)
      {
        v6 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 1;
        v102 = 6;
        sub_20AF708DC((uint64_t)v105, v5, v6, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v55 = *(CFDataRef **)(a3 + 16);
      BytePtr = CFDataGetBytePtr(*v55);
      Length = CFDataGetLength(*v55);
      if ((Length & 0x80000000) != 0)
        goto LABEL_185;
      v58 = Length;
      if (BytePtr)
        v59 = 1;
      else
        v59 = Length == 0;
      if (!v59
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v58;
      v101 = BytePtr;
      sub_20AF6C1F8(&v100, &v116);
      v60 = v116;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v60;
      sub_20AF73454((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v61 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v61);
      while (__stlxr(v33 - 1, v61));
      break;
    case 1:
      v13 = *(unint64_t **)a3;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3, 2) >= 0x1555555555555556uLL)
      {
        v14 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 2;
        v102 = 12;
        sub_20AF708DC((uint64_t)v105, v13, v14, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v48 = *(CFDataRef **)(a3 + 16);
      v49 = CFDataGetBytePtr(*v48);
      v50 = CFDataGetLength(*v48);
      if ((v50 & 0x80000000) != 0)
        goto LABEL_185;
      v51 = v50;
      if (v49)
        v52 = 0;
      else
        v52 = v50 >= 2uLL;
      if (v52
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v51 >> 1;
      v101 = v49;
      sub_20AF6E11C((uint64_t *)&v100, &v116);
      v53 = v116;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v53;
      sub_20AF73454((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v54 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v54);
      while (__stlxr(v33 - 1, v54));
      break;
    case 2:
      v17 = *(unint64_t **)a3;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3, 3) >= 0xAAAAAAAAAAAAAABuLL)
      {
        v18 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 4;
        v102 = 24;
        sub_20AF708DC((uint64_t)v105, v17, v18, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v69 = *(CFDataRef **)(a3 + 16);
      v70 = CFDataGetBytePtr(*v69);
      v71 = CFDataGetLength(*v69);
      if ((v71 & 0x80000000) != 0)
        goto LABEL_185;
      v72 = v71;
      if (v70)
        v73 = 0;
      else
        v73 = v71 >= 4uLL;
      if (v73
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v72 >> 2;
      v101 = v70;
      sub_20AF6E1E4((uint64_t *)&v100, &v116);
      v74 = v116;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v74;
      sub_20AF73454((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v75 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v75);
      while (__stlxr(v33 - 1, v75));
      break;
    case 3:
      v21 = *(unint64_t **)a3;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3, 4) >= 0x555555555555556uLL)
      {
        v22 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 8;
        v102 = 48;
        sub_20AF708DC((uint64_t)v105, v21, v22, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v83 = *(CFDataRef **)(a3 + 16);
      v84 = CFDataGetBytePtr(*v83);
      v85 = CFDataGetLength(*v83);
      if ((v85 & 0x80000000) != 0)
        goto LABEL_185;
      v86 = v85;
      if (v84)
        v87 = 0;
      else
        v87 = v85 >= 8uLL;
      if (v87
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v86 >> 3;
      v101 = v84;
      sub_20AF6E298((uint64_t *)&v100, &v116);
      v88 = v116;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v88;
      sub_20AF73454((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v89 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v89);
      while (__stlxr(v33 - 1, v89));
      break;
    case 5:
      v11 = *(unint64_t **)a3;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3, 1) >= 0x2AAAAAAAAAAAAAABuLL)
      {
        v12 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 1;
        v102 = 6;
        sub_20AF708DC((uint64_t)v105, v11, v12, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v41 = *(CFDataRef **)(a3 + 16);
      v42 = CFDataGetBytePtr(*v41);
      v43 = CFDataGetLength(*v41);
      if ((v43 & 0x80000000) != 0)
        goto LABEL_185;
      v44 = v43;
      if (v42)
        v45 = 1;
      else
        v45 = v43 == 0;
      if (!v45
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v44;
      v101 = v42;
      sub_20AF6E34C(&v100, &v116);
      v46 = v116;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v46;
      sub_20AF73454((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v47 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v47);
      while (__stlxr(v33 - 1, v47));
      break;
    case 6:
      v15 = *(unint64_t **)a3;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3, 2) >= 0x1555555555555556uLL)
      {
        v16 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 2;
        v102 = 12;
        sub_20AF708DC((uint64_t)v105, v15, v16, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v62 = *(CFDataRef **)(a3 + 16);
      v63 = CFDataGetBytePtr(*v62);
      v64 = CFDataGetLength(*v62);
      if ((v64 & 0x80000000) != 0)
        goto LABEL_185;
      v65 = v64;
      if (v63)
        v66 = 0;
      else
        v66 = v64 >= 2uLL;
      if (v66
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v65 >> 1;
      v101 = v63;
      sub_20AF6E3FC((uint64_t *)&v100, &v116);
      v67 = v116;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v67;
      sub_20AF73454((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v68 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v68);
      while (__stlxr(v33 - 1, v68));
      break;
    case 7:
      v23 = *(unint64_t **)a3;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3, 3) >= 0xAAAAAAAAAAAAAABuLL)
      {
        v24 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 4;
        v102 = 24;
        sub_20AF708DC((uint64_t)v105, v23, v24, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
LABEL_161:
        sub_20AEC60F4(__dst, v105[0], (unint64_t)v105[1]);
LABEL_162:
        v109 = 1;
        LOBYTE(v110) = 0;
        v114 = 0;
        v115 = 1;
        sub_20AECCC3C(0xAu, (__int128 *)__dst, (uint64_t)&v116);
        *(_OWORD *)a1 = v116;
        *(_BYTE *)(a1 + 16) = 0;
        *(_BYTE *)(a1 + 112) = 0;
        if (v126)
        {
          *(_BYTE *)(a1 + 40) = 0;
          v97 = v119;
          if (v119)
          {
            *(_OWORD *)(a1 + 16) = __p;
            *(_QWORD *)(a1 + 32) = v118;
            v118 = 0;
            __p = 0uLL;
            *(_BYTE *)(a1 + 40) = 1;
          }
          *(_BYTE *)(a1 + 48) = 0;
          *(_BYTE *)(a1 + 104) = 0;
          if (v125)
          {
            v98 = v122;
            *(_QWORD *)(a1 + 64) = v121;
            *(_OWORD *)(a1 + 48) = v120;
            v120 = 0uLL;
            *(_QWORD *)(a1 + 72) = v98;
            *(_OWORD *)(a1 + 80) = v123;
            *(_QWORD *)(a1 + 96) = v124;
            v121 = 0;
            v123 = 0uLL;
            v124 = 0;
            *(_BYTE *)(a1 + 104) = 1;
          }
          *(_BYTE *)(a1 + 112) = 1;
          *(_BYTE *)(a1 + 528) = 0;
          if (v97 && SHIBYTE(v118) < 0)
            operator delete((void *)__p);
          if (!v115)
            goto LABEL_179;
        }
        else
        {
          *(_BYTE *)(a1 + 528) = 0;
          if (!v115)
            goto LABEL_179;
        }
        if (!v114)
          goto LABEL_176;
        if (v113 < 0)
        {
          operator delete(v112);
          if ((v111 & 0x80000000) == 0)
          {
LABEL_176:
            if (v109)
              goto LABEL_177;
            goto LABEL_179;
          }
        }
        else if ((v111 & 0x80000000) == 0)
        {
          goto LABEL_176;
        }
        operator delete(v110);
        if (v109)
        {
LABEL_177:
          if (SHIBYTE(v108) < 0)
            operator delete(__dst[0]);
        }
LABEL_179:
        if (SHIBYTE(v106) < 0)
          operator delete(v105[0]);
        return;
      }
      v90 = *(CFDataRef **)(a3 + 16);
      v91 = CFDataGetBytePtr(*v90);
      v92 = CFDataGetLength(*v90);
      if ((v92 & 0x80000000) != 0)
      {
LABEL_185:
        exception = __cxa_allocate_exception(8uLL);
        *exception = &off_24C41FEF0;
        __cxa_throw(exception, (struct type_info *)&unk_24C41FF08, (void (*)(void *))std::exception::~exception);
      }
      v93 = v92;
      if (v91)
        v94 = 0;
      else
        v94 = v92 >= 4uLL;
      if (v94
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_186:
        abort();
      }
      v100 = v93 >> 2;
      v101 = v91;
      sub_20AF6E4B0((uint64_t *)&v100, &v116);
      v95 = v116;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v95;
      sub_20AF73454((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v96 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v96);
      while (__stlxr(v33 - 1, v96));
      break;
    case 8:
      v19 = *(unint64_t **)a3;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3, 4) >= 0x555555555555556uLL)
      {
        v20 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 8;
        v102 = 48;
        sub_20AF708DC((uint64_t)v105, v19, v20, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v76 = *(CFDataRef **)(a3 + 16);
      v77 = CFDataGetBytePtr(*v76);
      v78 = CFDataGetLength(*v76);
      if ((v78 & 0x80000000) != 0)
        goto LABEL_185;
      v79 = v78;
      if (v77)
        v80 = 0;
      else
        v80 = v78 >= 8uLL;
      if (v80
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v79 >> 3;
      v101 = v77;
      sub_20AF6E564((uint64_t *)&v100, &v116);
      v81 = v116;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v81;
      sub_20AF73454((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v82 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v82);
      while (__stlxr(v33 - 1, v82));
      break;
    case 11:
      v9 = *(unint64_t **)a3;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3, 3) >= 0xAAAAAAAAAAAAAABuLL)
      {
        v10 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 4;
        v102 = 24;
        sub_20AF708DC((uint64_t)v105, v9, v10, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v34 = *(CFDataRef **)(a3 + 16);
      v35 = CFDataGetBytePtr(*v34);
      v36 = CFDataGetLength(*v34);
      if ((v36 & 0x80000000) != 0)
        goto LABEL_185;
      v37 = v36;
      if (v35)
        v38 = 0;
      else
        v38 = v36 >= 4uLL;
      if (v38
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v37 >> 2;
      v101 = v35;
      sub_20AF6E618((uint64_t *)&v100, &v116);
      v39 = v116;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v39;
      sub_20AF73454((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v40 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v40);
      while (__stlxr(v33 - 1, v40));
      break;
    case 12:
      v7 = *(unint64_t **)a3;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * **(_QWORD **)a3, 4) >= 0x555555555555556uLL)
      {
        v8 = *(_BYTE **)(a3 + 8);
        v103 = 3;
        v104 = 3;
        v100 = 8;
        v102 = 48;
        sub_20AF708DC((uint64_t)v105, v7, v8, &v104, &v100, &v103, &v102);
        if ((SHIBYTE(v106) & 0x80000000) == 0)
        {
          *(_OWORD *)__dst = *(_OWORD *)v105;
          v108 = v106;
          goto LABEL_162;
        }
        goto LABEL_161;
      }
      v25 = *(CFDataRef **)(a3 + 16);
      v26 = CFDataGetBytePtr(*v25);
      v27 = CFDataGetLength(*v25);
      if ((v27 & 0x80000000) != 0)
        goto LABEL_185;
      v28 = v27;
      if (v26)
        v29 = 0;
      else
        v29 = v27 >= 8uLL;
      if (v29
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_186;
      }
      v100 = v28 >> 3;
      v101 = v26;
      sub_20AF6E6CC((uint64_t *)&v100, &v116);
      v30 = v116;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v116 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      *(_OWORD *)v105 = v30;
      sub_20AF73454((uint64_t)v105, *(__int128 **)(a3 + 24), (uint64_t)&v116);
      sub_20AF4BAD4(a1, 0, &v116);
      *(_BYTE *)(a1 + 528) = 1;
      sub_20AED5474((uint64_t)&v116);
      v31 = (std::__shared_weak_count *)v105[1];
      if (!v105[1])
        return;
      v32 = (unint64_t *)((char *)v105[1] + 8);
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      break;
    default:
      sub_20B521E58(a2);
  }
  if (!v33)
  {
    ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
    std::__shared_weak_count::__release_weak(v31);
  }
}

void sub_20AF66810(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  if (a19 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF66B1C(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  std::__shared_weak_count *v7;
  CFDataRef v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  unsigned int Length;
  const UInt8 *BytePtr;
  unsigned int v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  void *v21;
  const UInt8 *v22;
  unsigned int v23;
  unint64_t v24;
  unint64_t *v25;
  const UInt8 *v26;
  unsigned int v27;
  unint64_t v28;
  unint64_t *v29;
  const UInt8 *v30;
  unsigned int v31;
  unint64_t v32;
  unint64_t *v33;
  const UInt8 *v34;
  unsigned int v35;
  unint64_t v36;
  unint64_t *v37;
  const UInt8 *v38;
  unsigned int v39;
  unint64_t v40;
  unint64_t *v41;
  const UInt8 *v42;
  unsigned int v43;
  unint64_t v44;
  unint64_t *v45;
  const UInt8 *v46;
  unsigned int v47;
  unint64_t v48;
  unint64_t *v49;
  const UInt8 *v50;
  unsigned int v51;
  unint64_t v52;
  unint64_t *v53;
  const UInt8 *v54;
  unsigned int v55;
  unint64_t v56;
  unint64_t *v57;
  int v58;
  uint64_t v59;
  _QWORD *exception;
  unint64_t v61;
  __int128 v62;
  char v63;
  char v64;
  unsigned __int8 v65;
  unint64_t v66;
  const UInt8 *v67;
  void *v68[2];
  uint64_t v69;
  void *__dst[2];
  uint64_t v71;
  char v72;
  void *v73;
  char v74;
  void *v75;
  char v76;
  char v77;
  char v78;
  __int128 v79;
  __int128 __p;
  uint64_t v81;
  unsigned __int8 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  char v88;
  char v89;
  uint64_t v90;

  v90 = *MEMORY[0x24BDAC8D0];
  v65 = a2;
  v8 = *(CFDataRef *)a1;
  v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v7)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (v8)
    {
LABEL_7:
      Length = CFDataGetLength(*(CFDataRef *)a1);
      if ((Length & 0x80000000) != 0)
        goto LABEL_151;
      v61 = Length;
      switch(v65)
      {
        case 0u:
          BytePtr = CFDataGetBytePtr(*(CFDataRef *)a1);
          v14 = CFDataGetLength(*(CFDataRef *)a1);
          if ((v14 & 0x80000000) != 0)
            goto LABEL_151;
          v15 = v14;
          if (!BytePtr
            && v14
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_152;
          }
          v68[0] = (void *)v15;
          v68[1] = (void *)BytePtr;
          sub_20AF6C1F8((size_t *)v68, &v79);
          *(_OWORD *)__dst = v79;
          sub_20AF75748((uint64_t)__dst, a3, (uint64_t)&v79);
          sub_20AF4BAD4(a4, 0, &v79);
          *(_BYTE *)(a4 + 528) = 1;
          sub_20AED5474((uint64_t)&v79);
          v16 = (std::__shared_weak_count *)__dst[1];
          if (!__dst[1])
            return;
          v17 = (unint64_t *)((char *)__dst[1] + 8);
          do
            v18 = __ldaxr(v17);
          while (__stlxr(v18 - 1, v17));
          goto LABEL_125;
        case 1u:
          if ((Length & 1) == 0)
          {
            v22 = CFDataGetBytePtr(*(CFDataRef *)a1);
            v23 = CFDataGetLength(*(CFDataRef *)a1);
            if ((v23 & 0x80000000) == 0)
            {
              v24 = v23;
              if (v22
                || v23 < 2uLL
                || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
              {
                v66 = v24 >> 1;
                v67 = v22;
                sub_20AF6E11C((uint64_t *)&v66, &v79);
                *(_OWORD *)v68 = v79;
                sub_20AF75748((uint64_t)v68, a3, (uint64_t)&v79);
                sub_20AF4BAD4(a4, 0, &v79);
                *(_BYTE *)(a4 + 528) = 1;
                sub_20AED5474((uint64_t)&v79);
                v16 = (std::__shared_weak_count *)v68[1];
                if (!v68[1])
                  return;
                v25 = (unint64_t *)((char *)v68[1] + 8);
                do
                  v18 = __ldaxr(v25);
                while (__stlxr(v18 - 1, v25));
LABEL_125:
                if (!v18)
                {
                  ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
                  std::__shared_weak_count::__release_weak(v16);
                }
                return;
              }
              goto LABEL_152;
            }
            goto LABEL_151;
          }
          v66 = 2;
          sub_20AF75488((uint64_t)v68, &v61, &v65, &v66);
          if (SHIBYTE(v69) < 0)
            goto LABEL_127;
          *(_OWORD *)__dst = *(_OWORD *)v68;
          v71 = v69;
          break;
        case 2u:
          if ((Length & 3) == 0)
          {
            v42 = CFDataGetBytePtr(*(CFDataRef *)a1);
            v43 = CFDataGetLength(*(CFDataRef *)a1);
            if ((v43 & 0x80000000) == 0)
            {
              v44 = v43;
              if (v42
                || v43 < 4uLL
                || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
              {
                v66 = v44 >> 2;
                v67 = v42;
                sub_20AF6E1E4((uint64_t *)&v66, &v79);
                *(_OWORD *)v68 = v79;
                sub_20AF75748((uint64_t)v68, a3, (uint64_t)&v79);
                sub_20AF4BAD4(a4, 0, &v79);
                *(_BYTE *)(a4 + 528) = 1;
                sub_20AED5474((uint64_t)&v79);
                v16 = (std::__shared_weak_count *)v68[1];
                if (!v68[1])
                  return;
                v45 = (unint64_t *)((char *)v68[1] + 8);
                do
                  v18 = __ldaxr(v45);
                while (__stlxr(v18 - 1, v45));
                goto LABEL_125;
              }
              goto LABEL_152;
            }
            goto LABEL_151;
          }
          v66 = 4;
          sub_20AF75488((uint64_t)v68, &v61, &v65, &v66);
          if (SHIBYTE(v69) < 0)
            goto LABEL_127;
          *(_OWORD *)__dst = *(_OWORD *)v68;
          v71 = v69;
          break;
        case 3u:
          if ((Length & 7) == 0)
          {
            v46 = CFDataGetBytePtr(*(CFDataRef *)a1);
            v47 = CFDataGetLength(*(CFDataRef *)a1);
            if ((v47 & 0x80000000) == 0)
            {
              v48 = v47;
              if (v46
                || v47 < 8uLL
                || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
              {
                v66 = v48 >> 3;
                v67 = v46;
                sub_20AF6E298((uint64_t *)&v66, &v79);
                *(_OWORD *)v68 = v79;
                sub_20AF75748((uint64_t)v68, a3, (uint64_t)&v79);
                sub_20AF4BAD4(a4, 0, &v79);
                *(_BYTE *)(a4 + 528) = 1;
                sub_20AED5474((uint64_t)&v79);
                v16 = (std::__shared_weak_count *)v68[1];
                if (!v68[1])
                  return;
                v49 = (unint64_t *)((char *)v68[1] + 8);
                do
                  v18 = __ldaxr(v49);
                while (__stlxr(v18 - 1, v49));
                goto LABEL_125;
              }
              goto LABEL_152;
            }
            goto LABEL_151;
          }
          v66 = 8;
          sub_20AF75488((uint64_t)v68, &v61, &v65, &v66);
          if (SHIBYTE(v69) < 0)
            goto LABEL_127;
          *(_OWORD *)__dst = *(_OWORD *)v68;
          v71 = v69;
          break;
        case 5u:
          v26 = CFDataGetBytePtr(*(CFDataRef *)a1);
          v27 = CFDataGetLength(*(CFDataRef *)a1);
          if ((v27 & 0x80000000) != 0)
            goto LABEL_151;
          v28 = v27;
          if (!v26
            && v27
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_152;
          }
          v68[0] = (void *)v28;
          v68[1] = (void *)v26;
          sub_20AF6E34C((size_t *)v68, &v79);
          *(_OWORD *)__dst = v79;
          sub_20AF75748((uint64_t)__dst, a3, (uint64_t)&v79);
          sub_20AF4BAD4(a4, 0, &v79);
          *(_BYTE *)(a4 + 528) = 1;
          sub_20AED5474((uint64_t)&v79);
          v16 = (std::__shared_weak_count *)__dst[1];
          if (!__dst[1])
            return;
          v29 = (unint64_t *)((char *)__dst[1] + 8);
          do
            v18 = __ldaxr(v29);
          while (__stlxr(v18 - 1, v29));
          goto LABEL_125;
        case 6u:
          if ((Length & 1) == 0)
          {
            v30 = CFDataGetBytePtr(*(CFDataRef *)a1);
            v31 = CFDataGetLength(*(CFDataRef *)a1);
            if ((v31 & 0x80000000) == 0)
            {
              v32 = v31;
              if (v30
                || v31 < 2uLL
                || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
              {
                v66 = v32 >> 1;
                v67 = v30;
                sub_20AF6E3FC((uint64_t *)&v66, &v79);
                *(_OWORD *)v68 = v79;
                sub_20AF75748((uint64_t)v68, a3, (uint64_t)&v79);
                sub_20AF4BAD4(a4, 0, &v79);
                *(_BYTE *)(a4 + 528) = 1;
                sub_20AED5474((uint64_t)&v79);
                v16 = (std::__shared_weak_count *)v68[1];
                if (!v68[1])
                  return;
                v33 = (unint64_t *)((char *)v68[1] + 8);
                do
                  v18 = __ldaxr(v33);
                while (__stlxr(v18 - 1, v33));
                goto LABEL_125;
              }
LABEL_152:
              abort();
            }
LABEL_151:
            exception = __cxa_allocate_exception(8uLL);
            *exception = &off_24C41FEF0;
            __cxa_throw(exception, (struct type_info *)&unk_24C41FF08, (void (*)(void *))std::exception::~exception);
          }
          v66 = 2;
          sub_20AF75488((uint64_t)v68, &v61, &v65, &v66);
          if (SHIBYTE(v69) < 0)
          {
LABEL_127:
            sub_20AEC60F4(__dst, v68[0], (unint64_t)v68[1]);
          }
          else
          {
            *(_OWORD *)__dst = *(_OWORD *)v68;
            v71 = v69;
          }
          break;
        case 7u:
          if ((Length & 3) == 0)
          {
            v50 = CFDataGetBytePtr(*(CFDataRef *)a1);
            v51 = CFDataGetLength(*(CFDataRef *)a1);
            if ((v51 & 0x80000000) == 0)
            {
              v52 = v51;
              if (v50
                || v51 < 4uLL
                || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
              {
                v66 = v52 >> 2;
                v67 = v50;
                sub_20AF6E4B0((uint64_t *)&v66, &v79);
                *(_OWORD *)v68 = v79;
                sub_20AF75748((uint64_t)v68, a3, (uint64_t)&v79);
                sub_20AF4BAD4(a4, 0, &v79);
                *(_BYTE *)(a4 + 528) = 1;
                sub_20AED5474((uint64_t)&v79);
                v16 = (std::__shared_weak_count *)v68[1];
                if (!v68[1])
                  return;
                v53 = (unint64_t *)((char *)v68[1] + 8);
                do
                  v18 = __ldaxr(v53);
                while (__stlxr(v18 - 1, v53));
                goto LABEL_125;
              }
              goto LABEL_152;
            }
            goto LABEL_151;
          }
          v66 = 4;
          sub_20AF75488((uint64_t)v68, &v61, &v65, &v66);
          if (SHIBYTE(v69) < 0)
            goto LABEL_127;
          *(_OWORD *)__dst = *(_OWORD *)v68;
          v71 = v69;
          break;
        case 8u:
          if ((Length & 7) == 0)
          {
            v54 = CFDataGetBytePtr(*(CFDataRef *)a1);
            v55 = CFDataGetLength(*(CFDataRef *)a1);
            if ((v55 & 0x80000000) == 0)
            {
              v56 = v55;
              if (v54
                || v55 < 8uLL
                || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
              {
                v66 = v56 >> 3;
                v67 = v54;
                sub_20AF6E564((uint64_t *)&v66, &v79);
                *(_OWORD *)v68 = v79;
                sub_20AF75748((uint64_t)v68, a3, (uint64_t)&v79);
                sub_20AF4BAD4(a4, 0, &v79);
                *(_BYTE *)(a4 + 528) = 1;
                sub_20AED5474((uint64_t)&v79);
                v16 = (std::__shared_weak_count *)v68[1];
                if (!v68[1])
                  return;
                v57 = (unint64_t *)((char *)v68[1] + 8);
                do
                  v18 = __ldaxr(v57);
                while (__stlxr(v18 - 1, v57));
                goto LABEL_125;
              }
              goto LABEL_152;
            }
            goto LABEL_151;
          }
          v66 = 8;
          sub_20AF75488((uint64_t)v68, &v61, &v65, &v66);
          if (SHIBYTE(v69) < 0)
            goto LABEL_127;
          *(_OWORD *)__dst = *(_OWORD *)v68;
          v71 = v69;
          break;
        case 0xBu:
          if ((Length & 3) == 0)
          {
            v34 = CFDataGetBytePtr(*(CFDataRef *)a1);
            v35 = CFDataGetLength(*(CFDataRef *)a1);
            if ((v35 & 0x80000000) == 0)
            {
              v36 = v35;
              if (v34
                || v35 < 4uLL
                || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
              {
                v66 = v36 >> 2;
                v67 = v34;
                sub_20AF6E618((uint64_t *)&v66, &v79);
                *(_OWORD *)v68 = v79;
                sub_20AF75748((uint64_t)v68, a3, (uint64_t)&v79);
                sub_20AF4BAD4(a4, 0, &v79);
                *(_BYTE *)(a4 + 528) = 1;
                sub_20AED5474((uint64_t)&v79);
                v16 = (std::__shared_weak_count *)v68[1];
                if (!v68[1])
                  return;
                v37 = (unint64_t *)((char *)v68[1] + 8);
                do
                  v18 = __ldaxr(v37);
                while (__stlxr(v18 - 1, v37));
                goto LABEL_125;
              }
              goto LABEL_152;
            }
            goto LABEL_151;
          }
          v66 = 4;
          sub_20AF75488((uint64_t)v68, &v61, &v65, &v66);
          if (SHIBYTE(v69) < 0)
            goto LABEL_127;
          *(_OWORD *)__dst = *(_OWORD *)v68;
          v71 = v69;
          break;
        case 0xCu:
          if ((Length & 7) == 0)
          {
            v38 = CFDataGetBytePtr(*(CFDataRef *)a1);
            v39 = CFDataGetLength(*(CFDataRef *)a1);
            if ((v39 & 0x80000000) == 0)
            {
              v40 = v39;
              if (v38
                || v39 < 8uLL
                || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
              {
                v66 = v40 >> 3;
                v67 = v38;
                sub_20AF6E6CC((uint64_t *)&v66, &v79);
                *(_OWORD *)v68 = v79;
                sub_20AF75748((uint64_t)v68, a3, (uint64_t)&v79);
                sub_20AF4BAD4(a4, 0, &v79);
                *(_BYTE *)(a4 + 528) = 1;
                sub_20AED5474((uint64_t)&v79);
                v16 = (std::__shared_weak_count *)v68[1];
                if (!v68[1])
                  return;
                v41 = (unint64_t *)((char *)v68[1] + 8);
                do
                  v18 = __ldaxr(v41);
                while (__stlxr(v18 - 1, v41));
                goto LABEL_125;
              }
              goto LABEL_152;
            }
            goto LABEL_151;
          }
          v66 = 8;
          sub_20AF75488((uint64_t)v68, &v61, &v65, &v66);
          if (SHIBYTE(v69) < 0)
            goto LABEL_127;
          *(_OWORD *)__dst = *(_OWORD *)v68;
          v71 = v69;
          break;
        default:
          sub_20B521E58(v65);
      }
      v72 = 1;
      LOBYTE(v73) = 0;
      v77 = 0;
      v78 = 1;
      sub_20AECCC3C(0xAu, (__int128 *)__dst, (uint64_t)&v79);
      *(_OWORD *)a4 = v79;
      *(_BYTE *)(a4 + 16) = 0;
      *(_BYTE *)(a4 + 112) = 0;
      if (v89)
      {
        *(_BYTE *)(a4 + 40) = 0;
        v58 = v82;
        if (v82)
        {
          *(_OWORD *)(a4 + 16) = __p;
          *(_QWORD *)(a4 + 32) = v81;
          v81 = 0;
          __p = 0uLL;
          *(_BYTE *)(a4 + 40) = 1;
        }
        *(_BYTE *)(a4 + 48) = 0;
        *(_BYTE *)(a4 + 104) = 0;
        if (v88)
        {
          v59 = v85;
          *(_QWORD *)(a4 + 64) = v84;
          *(_OWORD *)(a4 + 48) = v83;
          v83 = 0uLL;
          *(_QWORD *)(a4 + 72) = v59;
          *(_OWORD *)(a4 + 80) = v86;
          *(_QWORD *)(a4 + 96) = v87;
          v84 = 0;
          v86 = 0uLL;
          v87 = 0;
          *(_BYTE *)(a4 + 104) = 1;
        }
        *(_BYTE *)(a4 + 112) = 1;
        *(_BYTE *)(a4 + 528) = 0;
        if (v58 && SHIBYTE(v81) < 0)
          operator delete((void *)__p);
        if (!v78)
          goto LABEL_147;
      }
      else
      {
        *(_BYTE *)(a4 + 528) = 0;
        if (!v78)
        {
LABEL_147:
          if ((SHIBYTE(v69) & 0x80000000) == 0)
            return;
          v21 = v68[0];
          goto LABEL_149;
        }
      }
      if (v77)
      {
        if (v76 < 0)
          operator delete(v75);
        if (v74 < 0)
          operator delete(v73);
      }
      if (v72 && SHIBYTE(v71) < 0)
        operator delete(__dst[0]);
      goto LABEL_147;
    }
  }
  else
  {
LABEL_6:
    if (v8)
      goto LABEL_7;
  }
  LOBYTE(v62) = 0;
  v64 = 0;
  sub_20B099CC4(&v62, (uint64_t)&v79);
  *(_OWORD *)a4 = v79;
  *(_BYTE *)(a4 + 16) = 0;
  *(_BYTE *)(a4 + 112) = 0;
  if (v89)
  {
    *(_BYTE *)(a4 + 40) = 0;
    v19 = v82;
    if (v82)
    {
      *(_OWORD *)(a4 + 16) = __p;
      *(_QWORD *)(a4 + 32) = v81;
      v81 = 0;
      __p = 0uLL;
      *(_BYTE *)(a4 + 40) = 1;
    }
    *(_BYTE *)(a4 + 48) = 0;
    *(_BYTE *)(a4 + 104) = 0;
    if (v88)
    {
      v20 = v85;
      *(_QWORD *)(a4 + 64) = v84;
      *(_OWORD *)(a4 + 48) = v83;
      v83 = 0uLL;
      *(_QWORD *)(a4 + 72) = v20;
      *(_OWORD *)(a4 + 80) = v86;
      *(_QWORD *)(a4 + 96) = v87;
      v84 = 0;
      v86 = 0uLL;
      v87 = 0;
      *(_BYTE *)(a4 + 104) = 1;
    }
    *(_BYTE *)(a4 + 112) = 1;
    *(_BYTE *)(a4 + 528) = 0;
    if (v19 && SHIBYTE(v81) < 0)
      operator delete((void *)__p);
  }
  else
  {
    *(_BYTE *)(a4 + 528) = 0;
  }
  if (v64 && v63 < 0)
  {
    v21 = (void *)v62;
LABEL_149:
    operator delete(v21);
  }
}

void sub_20AF679EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  if (a25 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF67BBC(uint64_t *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  mach_timebase_info v12;
  int v13;
  int v14;
  void *v15;
  uint64_t v16;
  unsigned __int8 v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unsigned __int8 v21;
  void *v22;
  unsigned __int128 *v23;
  unsigned __int128 v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unsigned __int128 v28;
  __int128 v29;
  unsigned __int128 v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  void **v34;
  void **v35;
  void *v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  __int128 v41;
  char v42;
  char v43;
  mach_timebase_info info;
  std::__shared_weak_count *v45;
  void *v46[2];
  __int128 __p;
  __int128 v48;
  __int128 v49;
  void *v50[2];
  __int128 v51;
  unsigned __int128 v52;
  char v53;
  void *v54[2];
  uint64_t v55;
  char v56;
  __int128 v57;
  _OWORD v58[2];
  void *v59[2];
  uint64_t v60;
  char v61;
  __int128 v62;
  uint64_t v63;
  char v64;
  void *v65[2];
  uint64_t v66;
  unsigned __int128 v67;
  char v68;
  void *v69[2];
  uint64_t v70;
  char v71;
  __int128 v72;
  uint64_t v73;
  char v74;
  __int128 v75;
  _QWORD v76[4];
  char v77;
  uint64_t (**v78)();
  __int128 v79;
  char v80;
  mach_timebase_info v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  char v85;
  __int128 v86;
  uint64_t v87;
  char v88;
  __int128 v89;
  char v90;
  __int128 v91;
  uint64_t v92;
  unsigned __int128 v93;
  char v94;
  _BYTE v95[40];
  uint64_t v96;

  v96 = *MEMORY[0x24BDAC8D0];
  v7 = *a1;
  v6 = (std::__shared_weak_count *)a1[1];
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (v7)
    {
LABEL_7:
      if (!*((_BYTE *)a2 + 384))
      {
        v16 = mach_continuous_time();
        v17 = atomic_load((unsigned __int8 *)&qword_25463D170);
        if ((v17 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
        {
          mach_timebase_info(&info);
          LODWORD(v37) = info.numer;
          LODWORD(v38) = info.denom;
          *(double *)&qword_25463D168 = (double)v37 / (double)v38;
          __cxa_guard_release(&qword_25463D170);
        }
        v81 = (mach_timebase_info)llround(*(double *)&qword_25463D168 * (double)v16);
        v82 = 2;
        LOBYTE(v83) = 0;
        v85 = 0;
        LOBYTE(v86) = 0;
        v88 = 0;
        LOBYTE(v89) = 0;
        v90 = 0;
        LOBYTE(v91) = 0;
        v94 = 0;
        v95[0] = 0;
        v95[24] = 0;
        sub_20AF77A80(&info, (uint64_t)a1, (uint64_t)&v81);
        sub_20AF4EA3C((uint64_t)&v81);
        sub_20AFA7F18((uint64_t)v46, (uint64_t)&info);
        v18 = v45;
        if (v45)
        {
          v19 = (unint64_t *)&v45->__shared_owners_;
          do
            v20 = __ldaxr(v19);
          while (__stlxr(v20 - 1, v19));
          if (!v20)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
LABEL_51:
        *(_OWORD *)a3 = *(_OWORD *)v46;
        *(_QWORD *)(a3 + 16) = __p;
        v46[0] = 0;
        v46[1] = 0;
        *(_QWORD *)&__p = 0;
        *(_DWORD *)(a3 + 24) = DWORD2(__p);
        *(_BYTE *)(a3 + 32) = 0;
        *(_BYTE *)(a3 + 56) = 0;
        if (BYTE8(v49))
        {
          *(_OWORD *)(a3 + 32) = v48;
          *(_QWORD *)(a3 + 48) = v49;
          *(_QWORD *)&v49 = 0;
          v48 = 0uLL;
          *(_BYTE *)(a3 + 56) = 1;
        }
        *(_BYTE *)(a3 + 64) = 0;
        *(_BYTE *)(a3 + 112) = 0;
        if (v53)
        {
          *(_OWORD *)(a3 + 64) = *(_OWORD *)v50;
          *(_QWORD *)(a3 + 80) = v51;
          v50[1] = 0;
          *(_QWORD *)&v51 = 0;
          v50[0] = 0;
          do
            v28 = __ldaxp(&v52);
          while (__stlxp(v28, &v52));
          *(_OWORD *)(a3 + 96) = v28;
          *(_BYTE *)(a3 + 112) = 1;
        }
        *(_BYTE *)(a3 + 128) = 0;
        *(_BYTE *)(a3 + 152) = 0;
        if (v56)
        {
          *(_OWORD *)(a3 + 128) = *(_OWORD *)v54;
          *(_QWORD *)(a3 + 144) = v55;
          v54[1] = 0;
          v55 = 0;
          v54[0] = 0;
          *(_BYTE *)(a3 + 152) = 1;
        }
        v29 = v58[0];
        *(_OWORD *)(a3 + 160) = v57;
        *(_OWORD *)(a3 + 176) = v29;
        *(_OWORD *)(a3 + 185) = *(_OWORD *)((char *)v58 + 9);
        *(_BYTE *)(a3 + 208) = 0;
        *(_BYTE *)(a3 + 232) = 0;
        if (v61)
        {
          *(_OWORD *)(a3 + 208) = *(_OWORD *)v59;
          *(_QWORD *)(a3 + 224) = v60;
          v59[1] = 0;
          v60 = 0;
          v59[0] = 0;
          *(_BYTE *)(a3 + 232) = 1;
        }
        *(_BYTE *)(a3 + 240) = 0;
        *(_BYTE *)(a3 + 400) = 0;
        if (v74)
        {
          *(_BYTE *)(a3 + 240) = 0;
          *(_BYTE *)(a3 + 264) = 0;
          if (v64)
          {
            *(_OWORD *)(a3 + 240) = v62;
            *(_QWORD *)(a3 + 256) = v63;
            v63 = 0;
            v62 = 0uLL;
            *(_BYTE *)(a3 + 264) = 1;
          }
          *(_BYTE *)(a3 + 272) = 0;
          *(_BYTE *)(a3 + 320) = 0;
          if (v68)
          {
            *(_OWORD *)(a3 + 272) = *(_OWORD *)v65;
            *(_QWORD *)(a3 + 288) = v66;
            v66 = 0;
            v65[0] = 0;
            v65[1] = 0;
            do
              v30 = __ldaxp(&v67);
            while (__stlxp(v30, &v67));
            *(_OWORD *)(a3 + 304) = v30;
            *(_BYTE *)(a3 + 320) = 1;
          }
          *(_BYTE *)(a3 + 336) = 0;
          *(_BYTE *)(a3 + 360) = 0;
          if (v71)
          {
            *(_OWORD *)(a3 + 336) = *(_OWORD *)v69;
            *(_QWORD *)(a3 + 352) = v70;
            v70 = 0;
            v69[0] = 0;
            v69[1] = 0;
            *(_BYTE *)(a3 + 360) = 1;
          }
          *(_OWORD *)(a3 + 368) = v72;
          *(_QWORD *)(a3 + 384) = v73;
          *(_BYTE *)(a3 + 400) = 1;
        }
        *(_QWORD *)(a3 + 416) = &off_24C411E78;
        *(_OWORD *)(a3 + 424) = v75;
        v75 = 0uLL;
        *(_BYTE *)(a3 + 448) = 0;
        *(_BYTE *)(a3 + 480) = 0;
        if (v77)
        {
          *(_QWORD *)(a3 + 448) = 0;
          *(_QWORD *)(a3 + 456) = 0;
          if (v76[0])
            ((void (*)(uint64_t, _QWORD *))v76[0])(2, v76);
          *(_BYTE *)(a3 + 480) = 1;
        }
        *(_BYTE *)(a3 + 488) = 0;
        *(_BYTE *)(a3 + 512) = 0;
        if (v80)
        {
          *(_QWORD *)(a3 + 488) = &off_24C41E150;
          *(_OWORD *)(a3 + 496) = v79;
          *((_QWORD *)&v79 + 1) = 0;
          *(_BYTE *)(a3 + 512) = 1;
          *(_BYTE *)(a3 + 528) = 1;
          *(_QWORD *)&v79 = 0;
          v78 = &off_24C41E150;
          if (!v77)
          {
LABEL_81:
            v31 = (std::__shared_weak_count *)*((_QWORD *)&v75 + 1);
            if (*((_QWORD *)&v75 + 1))
            {
              v32 = (unint64_t *)(*((_QWORD *)&v75 + 1) + 8);
              do
                v33 = __ldaxr(v32);
              while (__stlxr(v33 - 1, v32));
              if (!v33)
              {
                ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
                std::__shared_weak_count::__release_weak(v31);
              }
            }
            if (v74)
            {
              if (v71 && SHIBYTE(v70) < 0)
                operator delete(v69[0]);
              if (v68 && SHIBYTE(v66) < 0)
                operator delete(v65[0]);
              if (v64 && SHIBYTE(v63) < 0)
                operator delete((void *)v62);
            }
            if (!v61 || (v34 = (void **)v59[0]) == 0)
            {
LABEL_110:
              if (v56 && SHIBYTE(v55) < 0)
                operator delete(v54[0]);
              if (v53 && SBYTE7(v51) < 0)
                operator delete(v50[0]);
              if (BYTE8(v49))
              {
                if (SBYTE7(v49) < 0)
                  operator delete((void *)v48);
              }
              if (SBYTE7(__p) < 0)
              {
                v22 = v46[0];
                goto LABEL_121;
              }
              return;
            }
            v35 = (void **)v59[1];
            v36 = v59[0];
            if (v59[1] == v59[0])
            {
LABEL_109:
              v59[1] = v34;
              operator delete(v36);
              goto LABEL_110;
            }
            while (1)
            {
              if (*((_BYTE *)v35 - 16) && *((char *)v35 - 41) < 0)
              {
                operator delete(*(v35 - 8));
                if (*((_BYTE *)v35 - 72))
                {
LABEL_104:
                  if (*((char *)v35 - 73) < 0)
                    operator delete(*(v35 - 12));
                }
              }
              else if (*((_BYTE *)v35 - 72))
              {
                goto LABEL_104;
              }
              v35 -= 12;
              if (v35 == v34)
              {
                v36 = v59[0];
                goto LABEL_109;
              }
            }
          }
        }
        else
        {
          *(_BYTE *)(a3 + 528) = 1;
          if (!v77)
            goto LABEL_81;
        }
        if (v76[0])
          ((void (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v76[0])(0, v76, 0, 0, 0);
        goto LABEL_81;
      }
      if (*((_BYTE *)a2 + 168))
      {
        v12 = (mach_timebase_info)*((_QWORD *)a2 + 19);
        v11 = *((_QWORD *)a2 + 20);
        if (*((_BYTE *)a2 + 24))
          goto LABEL_10;
      }
      else
      {
        v11 = mach_continuous_time();
        v21 = atomic_load((unsigned __int8 *)&qword_25463D170);
        if ((v21 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
        {
          mach_timebase_info(&v81);
          LODWORD(v39) = v81.numer;
          LODWORD(v40) = v81.denom;
          *(double *)&qword_25463D168 = (double)v39 / (double)v40;
          __cxa_guard_release(&qword_25463D170);
        }
        v12 = (mach_timebase_info)llround(*(double *)&qword_25463D168 * (double)v11);
        LOBYTE(v11) = 2;
        if (*((_BYTE *)a2 + 24))
        {
LABEL_10:
          sub_20AFA84B0((uint64_t *)a2, 1000000000);
          v13 = *((unsigned __int8 *)a2 + 24);
          v81 = v12;
          LOBYTE(v82) = v11;
          LOBYTE(v83) = 0;
          v85 = 0;
          if (v13)
          {
            if (*((char *)a2 + 23) < 0)
            {
              sub_20AEC60F4(&v83, *(void **)a2, *((_QWORD *)a2 + 1));
            }
            else
            {
              v83 = *a2;
              v84 = *((_QWORD *)a2 + 2);
            }
            v85 = 1;
            LOBYTE(v86) = 0;
            v88 = 0;
            if (*((_BYTE *)a2 + 120))
            {
LABEL_125:
              if (*((char *)a2 + 119) < 0)
              {
                sub_20AEC60F4(&v86, *((void **)a2 + 12), *((_QWORD *)a2 + 13));
              }
              else
              {
                v86 = a2[6];
                v87 = *((_QWORD *)a2 + 14);
              }
              v88 = 1;
              LOBYTE(v89) = 0;
              v90 = 0;
              if (!*((_BYTE *)a2 + 144))
                goto LABEL_34;
              goto LABEL_33;
            }
LABEL_32:
            LOBYTE(v89) = 0;
            v90 = 0;
            if (!*((_BYTE *)a2 + 144))
            {
LABEL_34:
              LOBYTE(v91) = 0;
              v94 = 0;
              if (*((_BYTE *)a2 + 80))
              {
                if (*((char *)a2 + 55) < 0)
                {
                  sub_20AEC60F4(&v91, *((void **)a2 + 4), *((_QWORD *)a2 + 5));
                }
                else
                {
                  v91 = a2[2];
                  v92 = *((_QWORD *)a2 + 6);
                }
                v23 = (unsigned __int128 *)(a2 + 4);
                do
                  v24 = __ldaxp(v23);
                while (__stlxp(v24, v23));
                v93 = v24;
                v94 = 1;
              }
              sub_20AED3838((uint64_t)v95, (uint64_t)(a2 + 11));
              sub_20AF77A80(&info, (uint64_t)a1, (uint64_t)&v81);
              sub_20AFA7F18((uint64_t)v46, (uint64_t)&info);
              v25 = v45;
              if (v45)
              {
                v26 = (unint64_t *)&v45->__shared_owners_;
                do
                  v27 = __ldaxr(v26);
                while (__stlxr(v27 - 1, v26));
                if (!v27)
                {
                  ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
                  std::__shared_weak_count::__release_weak(v25);
                }
              }
              sub_20AF4EA3C((uint64_t)&v81);
              goto LABEL_51;
            }
LABEL_33:
            v89 = a2[8];
            v90 = 1;
            goto LABEL_34;
          }
LABEL_31:
          LOBYTE(v86) = 0;
          v88 = 0;
          if (*((_BYTE *)a2 + 120))
            goto LABEL_125;
          goto LABEL_32;
        }
      }
      v81 = v12;
      LOBYTE(v82) = v11;
      LOBYTE(v83) = 0;
      v85 = 0;
      goto LABEL_31;
    }
  }
  else
  {
LABEL_6:
    if (v7)
      goto LABEL_7;
  }
  LOBYTE(v41) = 0;
  v43 = 0;
  sub_20B099CC4(&v41, (uint64_t)v46);
  *(_OWORD *)a3 = *(_OWORD *)v46;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (v53)
  {
    *(_BYTE *)(a3 + 40) = 0;
    v14 = BYTE8(v48);
    if (BYTE8(v48))
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(_QWORD *)(a3 + 32) = v48;
      *(_QWORD *)&v48 = 0;
      __p = 0uLL;
      *(_BYTE *)(a3 + 40) = 1;
    }
    *(_BYTE *)(a3 + 48) = 0;
    *(_BYTE *)(a3 + 104) = 0;
    if (BYTE8(v52))
    {
      v15 = v50[1];
      *(void **)(a3 + 64) = v50[0];
      *(_OWORD *)(a3 + 48) = v49;
      v49 = 0uLL;
      *(_QWORD *)(a3 + 72) = v15;
      *(_OWORD *)(a3 + 80) = v51;
      *(_QWORD *)(a3 + 96) = v52;
      v50[0] = 0;
      v51 = 0uLL;
      *(_QWORD *)&v52 = 0;
      *(_BYTE *)(a3 + 104) = 1;
    }
    *(_BYTE *)(a3 + 112) = 1;
    *(_BYTE *)(a3 + 528) = 0;
    if (v14 && SBYTE7(v48) < 0)
      operator delete((void *)__p);
  }
  else
  {
    *(_BYTE *)(a3 + 528) = 0;
  }
  if (v43 && v42 < 0)
  {
    v22 = (void *)v41;
LABEL_121:
    operator delete(v22);
  }
}

void sub_20AF68508(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10, uint64_t a11, __int128 __dst, uint64_t a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,int a29,__int16 a30,std::logic_error a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,__int128 a37,int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,__int16 a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,__int128 a50,__int128 __p,uint64_t a52,char a53,__int128 a54,uint64_t a55,uint64_t a56,__int128 a57,uint64_t a58,char a59,int a60,__int16 a61)
{
  uint64_t v61;
  const std::logic_error *exception_ptr;
  const char *v65;
  int v66;
  uint64_t v67;

  __cxa_guard_abort(&qword_25463D170);
  if (a2 == 1)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a31, exception_ptr);
    a31.__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_begin_catch(a1);
    v65 = std::logic_error::what(&a31);
    a9 = (uint64_t)v65;
    a36 = (uint64_t)operator new(0x38uLL);
    a37 = xmmword_20B5B4850;
    strcpy((char *)a36, "Invalid argument for creation of dictionary data: ");
    a38 = 1;
    if (v65)
    {
      a39 = (uint64_t)&a36;
      a40 = (uint64_t)&a9;
      a41 = (uint64_t)&a36;
      a42 = (uint64_t)&a9;
      a43 = (uint64_t)&a9;
      sub_20AED0870(&a41, (uint64_t)&a36);
    }
    else
    {
      a39 = (uint64_t)&a36;
      a40 = (uint64_t)"nullptr";
      a41 = (uint64_t)&a36;
      a42 = (uint64_t)"nullptr";
      a43 = (uint64_t)"nullptr";
      sub_20AED0260(&a41, (uint64_t)&a36);
    }
    if (a38 != -1)
    {
      a39 = (uint64_t)&a46;
      ((void (*)(__int128 *__return_ptr, uint64_t *, uint64_t *))off_24C3F6268[a38])(&a10, &a39, &a36);
      if (a38 != -1)
        ((void (*)(uint64_t *, uint64_t *))off_24C3F6190[a38])(&a39, &a36);
      if (SHIBYTE(a11) < 0)
      {
        sub_20AEC60F4(&__dst, (void *)a10, *((unint64_t *)&a10 + 1));
      }
      else
      {
        __dst = a10;
        a13 = a11;
      }
      a14 = 1;
      LOBYTE(a15) = 0;
      a28 = 0;
      LOBYTE(a30) = 1;
      sub_20AECCC3C(0xAu, &__dst, (uint64_t)&a50);
      *(_OWORD *)v61 = a50;
      *(_BYTE *)(v61 + 16) = 0;
      *(_BYTE *)(v61 + 112) = 0;
      if ((_BYTE)a61)
      {
        *(_BYTE *)(v61 + 40) = 0;
        v66 = a53;
        if (a53)
        {
          *(_OWORD *)(v61 + 16) = __p;
          *(_QWORD *)(v61 + 32) = a52;
          a52 = 0;
          __p = 0uLL;
          *(_BYTE *)(v61 + 40) = 1;
        }
        *(_BYTE *)(v61 + 48) = 0;
        *(_BYTE *)(v61 + 104) = 0;
        if (a59)
        {
          v67 = a56;
          *(_QWORD *)(v61 + 64) = a55;
          *(_OWORD *)(v61 + 48) = a54;
          a54 = 0uLL;
          *(_QWORD *)(v61 + 72) = v67;
          *(_OWORD *)(v61 + 80) = a57;
          *(_QWORD *)(v61 + 96) = a58;
          a55 = 0;
          a57 = 0uLL;
          a58 = 0;
          *(_BYTE *)(v61 + 104) = 1;
        }
        *(_BYTE *)(v61 + 112) = 1;
        *(_BYTE *)(v61 + 528) = 0;
        if (v66 && SHIBYTE(a52) < 0)
          operator delete((void *)__p);
      }
      else
      {
        *(_BYTE *)(v61 + 528) = 0;
      }
      if ((_BYTE)a30)
      {
        if (a28)
        {
          if (a27 < 0)
            operator delete(a22);
          if (a20 < 0)
            operator delete(a15);
        }
        if (a14 && SHIBYTE(a13) < 0)
          operator delete((void *)__dst);
      }
      if (SHIBYTE(a11) < 0)
        operator delete((void *)a10);
      MEMORY[0x20BD35020](&a31);
      __cxa_end_catch();
      JUMPOUT(0x20AF683E4);
    }
    sub_20AECFAB8();
  }
  _Unwind_Resume(a1);
}

void sub_20AF68984(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  std::__shared_weak_count *v6;
  CFNumberRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  mach_timebase_info v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unsigned __int8 v21;
  void *v22;
  unsigned __int128 *v23;
  unsigned __int128 v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _BYTE v32[8];
  void *v33;
  void *v34;
  __int128 v35;
  char v36;
  char v37;
  mach_timebase_info info;
  std::__shared_weak_count *v39;
  __int128 v40;
  __int128 __p;
  uint64_t v42;
  unsigned __int8 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  char v49;
  char v50;
  mach_timebase_info v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  char v55;
  __int128 v56;
  uint64_t v57;
  char v58;
  __int128 v59;
  char v60;
  __int128 v61;
  uint64_t v62;
  unsigned __int128 v63;
  char v64;
  _BYTE v65[40];
  uint64_t v66;

  v66 = *MEMORY[0x24BDAC8D0];
  v7 = *(CFNumberRef *)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (v7)
    {
LABEL_7:
      sub_20B4F5FA8((CFNumberRef *)a1);
      if (!*((_BYTE *)a2 + 384))
      {
        v16 = mach_continuous_time();
        v17 = atomic_load((unsigned __int8 *)&qword_25463D170);
        if ((v17 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
        {
          mach_timebase_info(&info);
          LODWORD(v28) = info.numer;
          LODWORD(v29) = info.denom;
          *(double *)&qword_25463D168 = (double)v28 / (double)v29;
          __cxa_guard_release(&qword_25463D170);
        }
        v51 = (mach_timebase_info)llround(*(double *)&qword_25463D168 * (double)v16);
        v52 = 2;
        LOBYTE(v53) = 0;
        v55 = 0;
        LOBYTE(v56) = 0;
        v58 = 0;
        LOBYTE(v59) = 0;
        v60 = 0;
        LOBYTE(v61) = 0;
        v64 = 0;
        v65[0] = 0;
        v65[24] = 0;
        sub_20AF77CA8(&info, (uint64_t)v32, (uint64_t)&v51);
        sub_20AF4EA3C((uint64_t)&v51);
        sub_20AFA7F18((uint64_t)&v40, (uint64_t)&info);
        v18 = v39;
        if (v39)
        {
          v19 = (unint64_t *)&v39->__shared_owners_;
          do
            v20 = __ldaxr(v19);
          while (__stlxr(v20 - 1, v19));
          if (!v20)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
        goto LABEL_58;
      }
      if (*((_BYTE *)a2 + 168))
      {
        v12 = (mach_timebase_info)*((_QWORD *)a2 + 19);
        v11 = *((_QWORD *)a2 + 20);
        if (*((_BYTE *)a2 + 24))
          goto LABEL_10;
      }
      else
      {
        v11 = mach_continuous_time();
        v21 = atomic_load((unsigned __int8 *)&qword_25463D170);
        if ((v21 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
        {
          mach_timebase_info(&v51);
          LODWORD(v30) = v51.numer;
          LODWORD(v31) = v51.denom;
          *(double *)&qword_25463D168 = (double)v30 / (double)v31;
          __cxa_guard_release(&qword_25463D170);
        }
        v12 = (mach_timebase_info)llround(*(double *)&qword_25463D168 * (double)v11);
        LOBYTE(v11) = 2;
        if (*((_BYTE *)a2 + 24))
        {
LABEL_10:
          sub_20AFA84B0((uint64_t *)a2, 1000000000);
          v13 = *((unsigned __int8 *)a2 + 24);
          v51 = v12;
          LOBYTE(v52) = v11;
          LOBYTE(v53) = 0;
          v55 = 0;
          if (v13)
          {
            if (*((char *)a2 + 23) < 0)
            {
              sub_20AEC60F4(&v53, *(void **)a2, *((_QWORD *)a2 + 1));
            }
            else
            {
              v53 = *a2;
              v54 = *((_QWORD *)a2 + 2);
            }
            v55 = 1;
            LOBYTE(v56) = 0;
            v58 = 0;
            if (!*((_BYTE *)a2 + 120))
            {
LABEL_43:
              LOBYTE(v59) = 0;
              v60 = 0;
              if (!*((_BYTE *)a2 + 144))
              {
LABEL_45:
                LOBYTE(v61) = 0;
                v64 = 0;
                if (*((_BYTE *)a2 + 80))
                {
                  if (*((char *)a2 + 55) < 0)
                  {
                    sub_20AEC60F4(&v61, *((void **)a2 + 4), *((_QWORD *)a2 + 5));
                  }
                  else
                  {
                    v61 = a2[2];
                    v62 = *((_QWORD *)a2 + 6);
                  }
                  v23 = (unsigned __int128 *)(a2 + 4);
                  do
                    v24 = __ldaxp(v23);
                  while (__stlxp(v24, v23));
                  v63 = v24;
                  v64 = 1;
                }
                sub_20AED3838((uint64_t)v65, (uint64_t)(a2 + 11));
                sub_20AF77CA8(&info, (uint64_t)v32, (uint64_t)&v51);
                sub_20AFA7F18((uint64_t)&v40, (uint64_t)&info);
                v25 = v39;
                if (v39)
                {
                  v26 = (unint64_t *)&v39->__shared_owners_;
                  do
                    v27 = __ldaxr(v26);
                  while (__stlxr(v27 - 1, v26));
                  if (!v27)
                  {
                    ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
                    std::__shared_weak_count::__release_weak(v25);
                  }
                }
                sub_20AF4EA3C((uint64_t)&v51);
LABEL_58:
                sub_20AF4BAD4(a3, 0, &v40);
                *(_BYTE *)(a3 + 528) = 1;
                sub_20AED5474((uint64_t)&v40);
                v22 = v33;
                if (!v33)
                  return;
                v34 = v33;
                goto LABEL_60;
              }
LABEL_44:
              v59 = a2[8];
              v60 = 1;
              goto LABEL_45;
            }
LABEL_32:
            if (*((char *)a2 + 119) < 0)
            {
              sub_20AEC60F4(&v56, *((void **)a2 + 12), *((_QWORD *)a2 + 13));
            }
            else
            {
              v56 = a2[6];
              v57 = *((_QWORD *)a2 + 14);
            }
            v58 = 1;
            LOBYTE(v59) = 0;
            v60 = 0;
            if (!*((_BYTE *)a2 + 144))
              goto LABEL_45;
            goto LABEL_44;
          }
LABEL_31:
          LOBYTE(v56) = 0;
          v58 = 0;
          if (!*((_BYTE *)a2 + 120))
            goto LABEL_43;
          goto LABEL_32;
        }
      }
      v51 = v12;
      LOBYTE(v52) = v11;
      LOBYTE(v53) = 0;
      v55 = 0;
      goto LABEL_31;
    }
  }
  else
  {
LABEL_6:
    if (v7)
      goto LABEL_7;
  }
  LOBYTE(v35) = 0;
  v37 = 0;
  sub_20B099CC4(&v35, (uint64_t)&v40);
  *(_OWORD *)a3 = v40;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (v50)
  {
    *(_BYTE *)(a3 + 40) = 0;
    v14 = v43;
    if (v43)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(_QWORD *)(a3 + 32) = v42;
      v42 = 0;
      __p = 0uLL;
      *(_BYTE *)(a3 + 40) = 1;
    }
    *(_BYTE *)(a3 + 48) = 0;
    *(_BYTE *)(a3 + 104) = 0;
    if (v49)
    {
      v15 = v46;
      *(_QWORD *)(a3 + 64) = v45;
      *(_OWORD *)(a3 + 48) = v44;
      v44 = 0uLL;
      *(_QWORD *)(a3 + 72) = v15;
      *(_OWORD *)(a3 + 80) = v47;
      *(_QWORD *)(a3 + 96) = v48;
      v45 = 0;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(a3 + 104) = 1;
    }
    *(_BYTE *)(a3 + 112) = 1;
    *(_BYTE *)(a3 + 528) = 0;
    if (v14 && SHIBYTE(v42) < 0)
      operator delete((void *)__p);
  }
  else
  {
    *(_BYTE *)(a3 + 528) = 0;
  }
  if (v37 && v36 < 0)
  {
    v22 = (void *)v35;
LABEL_60:
    operator delete(v22);
  }
}

void sub_20AF68ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p)
{
  __cxa_guard_abort(&qword_25463D170);
  if (__p)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF68FD8(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  std::__shared_weak_count *v6;
  CFDataRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  const UInt8 *BytePtr;
  unsigned int Length;
  size_t v13;
  char *v14;
  char *v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  _QWORD *exception;
  _OWORD v22[2];
  __int128 v23;
  char v24;
  char v25;
  void *__p;
  void *v27;
  char *v28;
  __int128 v29;
  void *v30[2];
  uint64_t v31;
  unsigned __int8 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v7 = *(CFDataRef *)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (v7)
    {
LABEL_7:
      BytePtr = CFDataGetBytePtr(*(CFDataRef *)a1);
      Length = CFDataGetLength(*(CFDataRef *)a1);
      if ((Length & 0x80000000) != 0)
      {
        exception = __cxa_allocate_exception(8uLL);
        *exception = &off_24C41FEF0;
        __cxa_throw(exception, (struct type_info *)&unk_24C41FF08, (void (*)(void *))std::exception::~exception);
      }
      v13 = Length;
      if (BytePtr || !Length)
      {
        __p = 0;
        v27 = 0;
        v28 = 0;
        if (!Length)
        {
LABEL_14:
          sub_20B4331C4((uint64_t)&v29, (uint64_t)&__p);
          if (__p)
          {
            v27 = __p;
            operator delete(__p);
          }
          v22[0] = v29;
          v22[1] = *(_OWORD *)v30;
          sub_20AF4B07C((uint64_t)v22, a2, (uint64_t)&v29);
          sub_20AF4BAD4(a3, 0, &v29);
          *(_BYTE *)(a3 + 528) = 1;
          sub_20AED5474((uint64_t)&v29);
          v16 = (std::__shared_weak_count *)*((_QWORD *)&v22[0] + 1);
          if (*((_QWORD *)&v22[0] + 1))
          {
            v17 = (unint64_t *)(*((_QWORD *)&v22[0] + 1) + 8);
            do
              v18 = __ldaxr(v17);
            while (__stlxr(v18 - 1, v17));
            if (!v18)
            {
              ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
              std::__shared_weak_count::__release_weak(v16);
            }
          }
          return;
        }
      }
      else
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          abort();
        }
        v27 = 0;
        v28 = 0;
      }
      v14 = (char *)operator new(v13);
      v15 = &v14[v13];
      __p = v14;
      v28 = &v14[v13];
      memcpy(v14, BytePtr, v13);
      v27 = v15;
      goto LABEL_14;
    }
  }
  else
  {
LABEL_6:
    if (v7)
      goto LABEL_7;
  }
  LOBYTE(v23) = 0;
  v25 = 0;
  sub_20B099CC4(&v23, (uint64_t)&v29);
  *(_OWORD *)a3 = v29;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (v39)
  {
    *(_BYTE *)(a3 + 40) = 0;
    v19 = v32;
    if (v32)
    {
      *(_OWORD *)(a3 + 16) = *(_OWORD *)v30;
      *(_QWORD *)(a3 + 32) = v31;
      v30[1] = 0;
      v31 = 0;
      v30[0] = 0;
      *(_BYTE *)(a3 + 40) = 1;
    }
    *(_BYTE *)(a3 + 48) = 0;
    *(_BYTE *)(a3 + 104) = 0;
    if (v38)
    {
      v20 = v35;
      *(_QWORD *)(a3 + 64) = v34;
      *(_OWORD *)(a3 + 48) = v33;
      v33 = 0uLL;
      *(_QWORD *)(a3 + 72) = v20;
      *(_OWORD *)(a3 + 80) = v36;
      *(_QWORD *)(a3 + 96) = v37;
      v34 = 0;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(a3 + 104) = 1;
    }
    *(_BYTE *)(a3 + 112) = 1;
    *(_BYTE *)(a3 + 528) = 0;
    if (v19 && SHIBYTE(v31) < 0)
      operator delete(v30[0]);
  }
  else
  {
    *(_BYTE *)(a3 + 528) = 0;
  }
  if (v25 && v24 < 0)
    operator delete((void *)v23);
}

void sub_20AF692D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  if (a20)
  {
    if (a19 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF69338(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (***v4)();
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  char v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  void *v15;
  unint64_t v16;
  unsigned __int8 v17;
  int v18;
  uint64_t v19;
  void **v20;
  void **v21;
  void *v22;
  unint64_t *v23;
  unint64_t v24;
  void *v25;
  __int128 v26;
  char v27;
  void *v28[2];
  uint64_t v29;
  int v30;
  void *v31;
  void **v32;
  __int128 v33;
  __int128 __p;
  uint64_t v35;
  unsigned __int8 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  std::__shared_weak_count *v45;
  __int128 __dst;
  uint64_t v47;
  int v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t (****)())(a1 + 424);
  v5 = *(std::__shared_weak_count **)(a1 + 432);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  if (v4 && *v4 == &off_24C40D700)
  {
    v8 = 1;
    if (!v5)
      goto LABEL_12;
  }
  else
  {
    v8 = 0;
    if (!v5)
      goto LABEL_12;
  }
  v9 = (unint64_t *)&v5->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
  {
LABEL_12:
    if ((v8 & 1) != 0)
      goto LABEL_13;
LABEL_21:
    v12 = 0;
    v44 = 0;
    v45 = 0;
    goto LABEL_22;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if ((v8 & 1) == 0)
    goto LABEL_21;
LABEL_13:
  v11 = *(_QWORD *)(a1 + 424);
  v12 = *(std::__shared_weak_count **)(a1 + 432);
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v44 = v11;
  v45 = v12;
  if (v11)
  {
    v28[0] = *(void **)(v11 + 8);
    v15 = v28[0];
    v16 = atomic_load((unint64_t *)v28[0] + 11);
    if (v16 != -1)
    {
      *(_QWORD *)&v33 = v28;
      *(_QWORD *)&__dst = &v33;
      std::__call_once((std::once_flag::_State_type *)v28[0] + 11, &__dst, (void (__cdecl *)(void *))sub_20B417E0C);
    }
    sub_20AEEC2D8((_QWORD *)a2, (uint64_t)v15 + 48);
    *(_BYTE *)(a2 + 120) = 1;
    v12 = v45;
    goto LABEL_54;
  }
LABEL_22:
  v17 = atomic_load((unsigned __int8 *)&qword_25463CF48);
  if ((v17 & 1) == 0 && __cxa_guard_acquire(&qword_25463CF48))
  {
    *(_OWORD *)v28 = xmmword_20B5B0AE0;
    sub_20B1DFBA8((uint64_t *)v28);
    __cxa_atexit((void (*)(void *))sub_20B1DFE54, &xmmword_25463CDA8, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463CF48);
  }
  if (byte_25463CE5F < 0)
  {
    sub_20AEC60F4(&__dst, (void *)xmmword_25463CE48, *((unint64_t *)&xmmword_25463CE48 + 1));
  }
  else
  {
    __dst = xmmword_25463CE48;
    v47 = unk_25463CE58;
  }
  v48 = dword_25463CE60;
  sub_20AF4BC0C(&v31, (uint64_t)&__dst, 1uLL);
  if (*(char *)(a1 + 23) < 0)
  {
    sub_20AEC60F4(v28, *(void **)a1, *(_QWORD *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)v28 = *(_OWORD *)a1;
    v29 = *(_QWORD *)(a1 + 16);
  }
  v30 = *(_DWORD *)(a1 + 24);
  v25 = operator new(0x28uLL);
  v26 = xmmword_20B5B4860;
  strcpy((char *)v25, "cannot return data as CFDictionary");
  v27 = 1;
  sub_20B099ED4((uint64_t *)&v31, (uint64_t)v28, (uint64_t)&v25, (uint64_t)&v33);
  *(_OWORD *)a2 = v33;
  *(_BYTE *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  if (v43)
  {
    *(_BYTE *)(a2 + 40) = 0;
    v18 = v36;
    if (v36)
    {
      *(_OWORD *)(a2 + 16) = __p;
      *(_QWORD *)(a2 + 32) = v35;
      v35 = 0;
      __p = 0uLL;
      *(_BYTE *)(a2 + 40) = 1;
    }
    *(_BYTE *)(a2 + 48) = 0;
    *(_BYTE *)(a2 + 104) = 0;
    if (v42)
    {
      v19 = v39;
      *(_QWORD *)(a2 + 64) = v38;
      *(_OWORD *)(a2 + 48) = v37;
      v37 = 0uLL;
      *(_QWORD *)(a2 + 72) = v19;
      *(_OWORD *)(a2 + 80) = v40;
      *(_QWORD *)(a2 + 96) = v41;
      v38 = 0;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(a2 + 104) = 1;
    }
    *(_BYTE *)(a2 + 112) = 1;
    *(_BYTE *)(a2 + 120) = 0;
    if (v18 && SHIBYTE(v35) < 0)
      operator delete((void *)__p);
    if (!v27)
      goto LABEL_42;
    goto LABEL_40;
  }
  *(_BYTE *)(a2 + 120) = 0;
  if (v27)
  {
LABEL_40:
    if (SHIBYTE(v26) < 0)
      operator delete(v25);
  }
LABEL_42:
  if (SHIBYTE(v29) < 0)
    operator delete(v28[0]);
  v20 = (void **)v31;
  if (v31)
  {
    v21 = v32;
    v22 = v31;
    if (v32 != v31)
    {
      do
      {
        if (*((char *)v21 - 9) < 0)
          operator delete(*(v21 - 4));
        v21 -= 4;
      }
      while (v21 != v20);
      v22 = v31;
    }
    v32 = v20;
    operator delete(v22);
  }
  if (SHIBYTE(v47) < 0)
    operator delete((void *)__dst);
LABEL_54:
  if (v12)
  {
    v23 = (unint64_t *)&v12->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_20AF69754(_Unwind_Exception *a1)
{
  uint64_t v1;

  __cxa_guard_abort(&qword_25463CF48);
  sub_20AEC147C(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20AF69774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23)
{
  uint64_t v23;

  sub_20AF4BA50(&a23);
  if (*(char *)(v23 - 73) < 0)
    operator delete(*(void **)(v23 - 96));
  sub_20AEC147C(v23 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF697F8(uint64_t a1, unint64_t *a2, _BYTE *a3, unsigned int *a4, unint64_t *a5, unsigned int *a6, unint64_t *a7)
{
  uint64_t result;
  char v14;
  _DWORD v15[6];
  int v16;
  std::string v17;
  std::string **v18;
  std::string *v19;
  std::string *v20;
  _DWORD *v21;
  std::string *v22;
  std::string *v23;

  v16 = 0;
  sub_20AF6A3D8(v15, "Invalid CFData size ");
  std::to_string(&v17, *a2);
  v19 = (std::string *)v15;
  v20 = &v17;
  v21 = v15;
  v22 = &v17;
  v23 = &v17;
  if (v16 == -1)
    sub_20AECFAB8();
  v18 = &v19;
  ((void (*)(std::string ***, _DWORD *))off_24C3F61C0[v16])(&v18, v15);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v17.__r_.__value_.__l.__data_);
  v19 = (std::string *)v15;
  v20 = (std::string *)" for specified value type ";
  v21 = v15;
  v22 = (std::string *)" for specified value type ";
  v23 = (std::string *)" for specified value type ";
  if (v16 == -1)
    sub_20AECFAB8();
  v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&v19;
  ((void (*)(std::string *, _DWORD *))off_24C3F61D8[v16])(&v17, v15);
  sub_20AF6A118((uint64_t)&v14, (uint64_t)v15, a3);
  v19 = (std::string *)v15;
  v20 = (std::string *)" and ";
  v21 = v15;
  v22 = (std::string *)" and ";
  v23 = (std::string *)" and ";
  if (v16 == -1)
    sub_20AECFAB8();
  v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&v19;
  ((void (*)(std::string *, _DWORD *))off_24C3F61F0[v16])(&v17, v15);
  std::to_string(&v17, *a4);
  v19 = (std::string *)v15;
  v20 = &v17;
  v21 = v15;
  v22 = &v17;
  v23 = &v17;
  if (v16 == -1)
    sub_20AECFAB8();
  v18 = &v19;
  ((void (*)(std::string ***, _DWORD *))off_24C3F61C0[v16])(&v18, v15);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v17.__r_.__value_.__l.__data_);
  v19 = (std::string *)v15;
  v20 = (std::string *)"D points type ";
  v21 = v15;
  v22 = (std::string *)"D points type ";
  v23 = (std::string *)"D points type ";
  if (v16 == -1)
    sub_20AECFAB8();
  v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&v19;
  ((void (*)(std::string *, _DWORD *))off_24C3F6208[v16])(&v17, v15);
  v19 = (std::string *)v15;
  v20 = (std::string *)"(must be a multiple of ";
  v21 = v15;
  v22 = (std::string *)"(must be a multiple of ";
  v23 = (std::string *)"(must be a multiple of ";
  if (v16 == -1)
    sub_20AECFAB8();
  v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&v19;
  ((void (*)(std::string *, _DWORD *))off_24C3F6220[v16])(&v17, v15);
  std::to_string(&v17, *a5);
  v19 = (std::string *)v15;
  v20 = &v17;
  v21 = v15;
  v22 = &v17;
  v23 = &v17;
  if (v16 == -1)
    sub_20AECFAB8();
  v18 = &v19;
  ((void (*)(std::string ***, _DWORD *))off_24C3F61C0[v16])(&v18, v15);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v17.__r_.__value_.__l.__data_);
  v19 = (std::string *)v15;
  v20 = (std::string *)" bytes * ";
  v21 = v15;
  v22 = (std::string *)" bytes * ";
  v23 = (std::string *)" bytes * ";
  if (v16 == -1)
    sub_20AECFAB8();
  v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&v19;
  ((void (*)(std::string *, _DWORD *))off_24C3F6238[v16])(&v17, v15);
  std::to_string(&v17, *a6);
  v19 = (std::string *)v15;
  v20 = &v17;
  v21 = v15;
  v22 = &v17;
  v23 = &v17;
  if (v16 == -1)
    sub_20AECFAB8();
  v18 = &v19;
  ((void (*)(std::string ***, _DWORD *))off_24C3F61C0[v16])(&v18, v15);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v17.__r_.__value_.__l.__data_);
  v19 = (std::string *)v15;
  v20 = (std::string *)" values per point = ";
  v21 = v15;
  v22 = (std::string *)" values per point = ";
  v23 = (std::string *)" values per point = ";
  if (v16 == -1)
    sub_20AECFAB8();
  v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&v19;
  ((void (*)(std::string *, _DWORD *))off_24C3F6178[v16])(&v17, v15);
  std::to_string(&v17, *a7);
  v19 = (std::string *)v15;
  v20 = &v17;
  v21 = v15;
  v22 = &v17;
  v23 = &v17;
  if (v16 == -1)
    sub_20AECFAB8();
  v18 = &v19;
  ((void (*)(std::string ***, _DWORD *))off_24C3F61C0[v16])(&v18, v15);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v17.__r_.__value_.__l.__data_);
  v19 = (std::string *)v15;
  v20 = (std::string *)")";
  v21 = v15;
  v22 = (std::string *)")";
  v23 = (std::string *)")";
  if (v16 == -1)
    sub_20AECFAB8();
  v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&v19;
  ((void (*)(std::string *, _DWORD *))off_24C3F6250[v16])(&v17, v15);
  if (v16 == -1)
    sub_20AECFAB8();
  v19 = &v17;
  result = ((uint64_t (*)(std::string **, _DWORD *))off_24C3F6268[v16])(&v19, v15);
  if (v16 != -1)
    return ((uint64_t (*)(std::string **, _DWORD *))off_24C3F6190[v16])(&v19, v15);
  return result;
}

void sub_20AF69CB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_20AECFA60((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_20AF69D38(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  mach_timebase_info v7;
  int v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unsigned __int8 v12;
  unsigned __int128 *v13;
  unsigned __int128 v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  std::__shared_weak_count *v21;
  _QWORD v22[2];
  std::__shared_weak_count *v23;
  mach_timebase_info info;
  char v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  unsigned __int128 v36;
  char v37;
  _QWORD v38[6];

  v38[5] = *MEMORY[0x24BDAC8D0];
  if (*((_BYTE *)a2 + 384))
  {
    if (*((_BYTE *)a2 + 168))
    {
      v7 = (mach_timebase_info)*((_QWORD *)a2 + 19);
      v6 = *((_QWORD *)a2 + 20);
      if (*((_BYTE *)a2 + 24))
        goto LABEL_4;
    }
    else
    {
      v6 = mach_continuous_time();
      v12 = atomic_load((unsigned __int8 *)&qword_25463D170);
      if ((v12 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
      {
        mach_timebase_info(&info);
        LODWORD(v18) = info.numer;
        LODWORD(v19) = info.denom;
        *(double *)&qword_25463D168 = (double)v18 / (double)v19;
        __cxa_guard_release(&qword_25463D170);
      }
      v7 = (mach_timebase_info)llround(*(double *)&qword_25463D168 * (double)v6);
      LOBYTE(v6) = 2;
      if (*((_BYTE *)a2 + 24))
      {
LABEL_4:
        sub_20AFA84B0((uint64_t *)a2, 1000000000);
        v8 = *((unsigned __int8 *)a2 + 24);
        info = v7;
        v25 = v6;
        LOBYTE(v26) = 0;
        v28 = 0;
        if (v8)
        {
          if (*((char *)a2 + 23) < 0)
          {
            sub_20AEC60F4(&v26, *(void **)a2, *((_QWORD *)a2 + 1));
          }
          else
          {
            v26 = *a2;
            v27 = *((_QWORD *)a2 + 2);
          }
          v28 = 1;
          LOBYTE(v29) = 0;
          v31 = 0;
          if (*((_BYTE *)a2 + 120))
          {
LABEL_34:
            if (*((char *)a2 + 119) < 0)
            {
              sub_20AEC60F4(&v29, *((void **)a2 + 12), *((_QWORD *)a2 + 13));
            }
            else
            {
              v29 = a2[6];
              v30 = *((_QWORD *)a2 + 14);
            }
            v31 = 1;
            LOBYTE(v32) = 0;
            v33 = 0;
            if (!*((_BYTE *)a2 + 144))
              goto LABEL_18;
            goto LABEL_17;
          }
LABEL_16:
          LOBYTE(v32) = 0;
          v33 = 0;
          if (!*((_BYTE *)a2 + 144))
          {
LABEL_18:
            LOBYTE(v34) = 0;
            v37 = 0;
            if (*((_BYTE *)a2 + 80))
            {
              if (*((char *)a2 + 55) < 0)
              {
                sub_20AEC60F4(&v34, *((void **)a2 + 4), *((_QWORD *)a2 + 5));
              }
              else
              {
                v34 = a2[2];
                v35 = *((_QWORD *)a2 + 6);
              }
              v13 = (unsigned __int128 *)(a2 + 4);
              do
                v14 = __ldaxp(v13);
              while (__stlxp(v14, v13));
              v36 = v14;
              v37 = 1;
            }
            sub_20AED3838((uint64_t)v38, (uint64_t)(a2 + 11));
            sub_20AF6C3E8(a1, (uint64_t)&info, v22);
            sub_20AFA7F18(a3, (uint64_t)v22);
            v15 = v23;
            if (v23)
            {
              p_shared_owners = (unint64_t *)&v23->__shared_owners_;
              do
                v17 = __ldaxr(p_shared_owners);
              while (__stlxr(v17 - 1, p_shared_owners));
              if (!v17)
              {
                ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
                std::__shared_weak_count::__release_weak(v15);
              }
            }
            sub_20AF4EA3C((uint64_t)&info);
            return;
          }
LABEL_17:
          v32 = a2[8];
          v33 = 1;
          goto LABEL_18;
        }
LABEL_15:
        LOBYTE(v29) = 0;
        v31 = 0;
        if (*((_BYTE *)a2 + 120))
          goto LABEL_34;
        goto LABEL_16;
      }
    }
    info = v7;
    v25 = v6;
    LOBYTE(v26) = 0;
    v28 = 0;
    goto LABEL_15;
  }
  sub_20AF6C2A8(a1, v20);
  sub_20AFA7F18(a3, (uint64_t)v20);
  v9 = v21;
  if (v21)
  {
    v10 = (unint64_t *)&v21->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_20AF6A048(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463D170);
  _Unwind_Resume(a1);
}

void sub_20AF6A060(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  if (a23)
  {
    if (a22 < 0)
    {
      operator delete(__p);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF6A118(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20AEC0BD8(v5);
  v21[0] = v5;
  sub_20B5220B4((_QWORD *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_20AEC0138();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v14 + 128);
    MEMORY[0x20BD3583C](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_20AECFAB8();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24C3F61C0[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_20AF6A368(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20AF6A38C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF6A3A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B52CE84((uint64_t *)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_20AF6A3BC(_DWORD ***a1)
{
  return sub_20AF6A3D8(**a1, (char *)(*a1)[1]);
}

void sub_20AF6A3C8(uint64_t a1, uint64_t a2)
{
  sub_20AF6A4C8((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

_DWORD *sub_20AF6A3D8(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C3F6190[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_20AF6A4C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24C3F6190[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_20AEC7620((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_20AF6A67C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_20AF6A6C0(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_20AF6A7B8((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_20AF6A7B0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_20AF6A7B8(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20AEC60B8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60CC();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_20AF6A9B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC65A4((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_20AF6A9C8(_DWORD ***a1)
{
  return sub_20AF6A9E4(**a1, (char *)(*a1)[1]);
}

void sub_20AF6A9D4(uint64_t a1, uint64_t a2)
{
  sub_20AF6AAD4((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

_DWORD *sub_20AF6A9E4(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C3F6190[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_20AF6AAD4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24C3F6190[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_20AEC7620((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_20AF6AC88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_20AF6ACCC(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_20AF6ADC4((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_20AF6ADBC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_20AF6ADC4(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20AEC60B8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60CC();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_20AF6AFC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC65A4((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_20AF6AFD4(_DWORD ***a1)
{
  return sub_20AF6AFF0(**a1, (char *)(*a1)[1]);
}

void sub_20AF6AFE0(uint64_t a1, uint64_t a2)
{
  sub_20AF6B0E0((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

_DWORD *sub_20AF6AFF0(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C3F6190[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_20AF6B0E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24C3F6190[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_20AEC7620((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_20AF6B294(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_20AF6B2D8(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_20AF6B3D0((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_20AF6B3C8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_20AF6B3D0(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20AEC60B8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60CC();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_20AF6B5CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC65A4((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_20AF6B5E0(_DWORD ***a1)
{
  return sub_20AF6B5FC(**a1, (char *)(*a1)[1]);
}

void sub_20AF6B5EC(uint64_t a1, uint64_t a2)
{
  sub_20AF6B6EC((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

_DWORD *sub_20AF6B5FC(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C3F6190[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_20AF6B6EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24C3F6190[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_20AEC7620((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_20AF6B8A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_20AF6B8E4(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_20AF6B9DC((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_20AF6B9D4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_20AF6B9DC(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20AEC60B8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60CC();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_20AF6BBD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC65A4((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_20AF6BBEC(_DWORD ***a1)
{
  return sub_20AF6BC08(**a1, (char *)(*a1)[1]);
}

void sub_20AF6BBF8(uint64_t a1, uint64_t a2)
{
  sub_20AF6BCF8((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

_DWORD *sub_20AF6BC08(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C3F6190[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_20AF6BCF8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24C3F6190[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_20AEC7620((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_20AF6BEAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_20AF6BEF0(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_20AF6BFE8((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_20AF6BFE0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_20AF6BFE8(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20AEC60B8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60CC();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_20AF6C1E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC65A4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6C1F8(size_t *a1@<X0>, _QWORD *a2@<X8>)
{
  size_t v3;
  const void *v4;
  char *v5;
  char *v6;
  void *__p;
  void *v8;
  char *v9;

  v3 = *a1;
  v4 = (const void *)a1[1];
  v8 = 0;
  v9 = 0;
  __p = 0;
  if (v3)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_20AF4BAC0();
    v5 = (char *)operator new(v3);
    v6 = &v5[v3];
    __p = v5;
    v9 = &v5[v3];
    memcpy(v5, v4, v3);
    v8 = v6;
  }
  sub_20B43BC04(a2, 0, (uint64_t)&__p);
  if (__p)
  {
    v8 = __p;
    operator delete(__p);
  }
}

void sub_20AF6C288(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF6C2A8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  unsigned __int8 v5;
  unint64_t v7;
  unint64_t v8;
  mach_timebase_info info;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v4 = mach_continuous_time();
  v5 = atomic_load((unsigned __int8 *)&qword_25463D170);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
  {
    mach_timebase_info(&info);
    LODWORD(v7) = info.numer;
    LODWORD(v8) = info.denom;
    *(double *)&qword_25463D168 = (double)v7 / (double)v8;
    __cxa_guard_release(&qword_25463D170);
  }
  v10[0] = llround(*(double *)&qword_25463D168 * (double)v4);
  v10[1] = 2;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  sub_20AF6C3E8(a1, (uint64_t)v10, a2);
  return sub_20AF4EA3C((uint64_t)v10);
}

void sub_20AF6C3BC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463D170);
  _Unwind_Resume(a1);
}

void sub_20AF6C3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AF4EA3C((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF6C3E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  _QWORD *result;

  v6 = operator new();
  *(_QWORD *)v6 = &off_24C3F64E0;
  *(_OWORD *)(v6 + 8) = *(_OWORD *)a1;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  sub_20AF4CAF4(v6 + 32, a2);
  *(_QWORD *)v6 = &off_24C3F6460;
  *a3 = &off_24C411E78;
  a3[1] = v6;
  result = (_QWORD *)operator new();
  *result = &off_24C411F70;
  result[1] = 0;
  result[2] = 0;
  result[3] = v6;
  a3[2] = result;
  return result;
}

void sub_20AF6C498(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_20AF6C4B4(_Unwind_Exception *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  MEMORY[0x20BD3583C](v1, 0x10B3C40E92279A6);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF6C510(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F64E0;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_20AF6C588(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F64E0;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF6C600(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20AF6C608(_QWORD *a1, _QWORD *lpsrc)
{
  uint64_t result;
  uint64_t v5;
  unsigned __int8 *v6;
  int v7;
  unsigned __int8 *v8;
  _QWORD v9[3];
  char v10;

  result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C411EB8, (const struct __class_type_info *)&unk_24C3F64A0, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      v5 = result;
      v6 = (unsigned __int8 *)a1[1];
      v7 = *v6;
      v8 = *(unsigned __int8 **)(v5 + 8);
      if (v7 == *v8)
      {
        v9[0] = &v10;
        v9[1] = v6;
        v9[2] = v8;
        return sub_20B43E450(v7, (uint64_t)v9);
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

void sub_20AF6C6B0(uint64_t a1)
{
  __int128 *v2;
  void *__p;
  char v4;

  v2 = (__int128 *)sub_20AF6DBB4();
  sub_20AF6C764(a1);
  sub_20AF4DD70(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",", a1 + 32, (uint64_t)"}");
  if (v4 < 0)
    operator delete(__p);
}

void sub_20AF6C748(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF6C764(uint64_t a1)
{
  unsigned __int8 v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;

  v2 = atomic_load((unsigned __int8 *)&qword_254631F18);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254631F18))
  {
    v4 = sub_20AF6D5E4();
    v5 = *((_QWORD *)v4 + 1);
    if (*((char *)v4 + 23) >= 0)
    {
      v6 = *((unsigned __int8 *)v4 + 23);
    }
    else
    {
      v4 = *(__int128 **)v4;
      v6 = v5;
    }
    sub_20AF4E53C((char *)v4, v6, "::", 2, 0, (uint64_t)&v8);
    if (*(char *)(v9 - 1) < 0)
    {
      sub_20AEC60F4(&xmmword_254631F00, *(void **)(v9 - 24), *(_QWORD *)(v9 - 16));
    }
    else
    {
      v7 = *(_OWORD *)(v9 - 24);
      qword_254631F10 = *(_QWORD *)(v9 - 8);
      xmmword_254631F00 = v7;
    }
    sub_20AEC2E90(&v8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631F00, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631F18);
  }
  return sub_20AF6DF74(&xmmword_254631F00, (uint64_t)"{", (_BYTE **)(a1 + 8), (uint64_t)"}");
}

void sub_20AF6C874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_20AEC2E90(&a9);
  __cxa_guard_abort(&qword_254631F18);
  _Unwind_Resume(a1);
}

void sub_20AF6C894(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631F18);
  _Unwind_Resume(a1);
}

void sub_20AF6C8AC(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 3;
}

void sub_20AF6C8D8(uint64_t (***lpsrc)()@<X0>, _QWORD *a2@<X8>)
{
  sub_20B2346E4(lpsrc, 3, a2);
}

_QWORD *sub_20AF6C910(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F64E0;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_20AF6C988(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F64E0;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF6CA00(uint64_t a1)
{
  __int128 *v2;

  v2 = sub_20AF6D080();
  return sub_20AF6CB54(v2, (uint64_t)"{", (_BYTE **)(a1 + 8), (uint64_t)",", a1 + 32, (uint64_t)"}");
}

uint64_t sub_20AF6CA58(uint64_t a1)
{
  uint64_t result;
  _BYTE v2[24];
  int v3;
  char v4;
  _QWORD v5[2];

  v3 = 0;
  sub_20AF6CD80((uint64_t)v5, (uint64_t)v2, (_BYTE **)(a1 + 8));
  if (v3 == -1)
    sub_20AECFAB8();
  v5[0] = &v4;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24C3F6268[v3])(v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24C3F6190[v3])(v5, v2);
  return result;
}

void sub_20AF6CAF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;

  if (a13 != -1)
    ((void (*)(uint64_t, char *))off_24C3F6190[a13])(v13 - 17, &a10);
  _Unwind_Resume(exception_object);
}

void sub_20AF6CB28(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_20AF6CB54(__int128 *a1, uint64_t a2, _BYTE **a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  char v12;
  char v13;
  __int128 __dst;
  uint64_t v15;
  int v16;
  __int128 *p_dst;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 **p_p_dst;

  v16 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v15 = *((_QWORD *)a1 + 2);
  }
  v16 = 1;
  p_dst = &__dst;
  v18 = a2;
  v19 = &__dst;
  v20 = a2;
  v21 = a2;
  sub_20AED5C4C((uint64_t *)&v19, (uint64_t)&__dst);
  sub_20AF6CD80((uint64_t)&v13, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v18 = a4;
  v19 = &__dst;
  v20 = a4;
  v21 = a4;
  if (v16 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F6250[v16])(&p_p_dst, &__dst);
  sub_20AF4D170((uint64_t)&v12, (uint64_t)&__dst, a5);
  p_dst = &__dst;
  v18 = a6;
  v19 = &__dst;
  v20 = a6;
  v21 = a6;
  if (v16 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F6250[v16])(&p_p_dst, &__dst);
  if (v16 == -1)
    sub_20AECFAB8();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6268[v16])(&p_dst, &__dst);
  if (v16 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6190[v16])(&p_dst, &__dst);
  return result;
}

void sub_20AF6CCF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6CD08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6CD1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6CD30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6CD44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6CD58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6CD6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6CD80(uint64_t a1, uint64_t a2, _BYTE **a3)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  int v8;
  size_t v9;
  void **v10;
  unint64_t v11;
  unint64_t v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *__dst[2];
  unint64_t v22;
  _QWORD v23[5];
  _QWORD *v24;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20AEC0BD8(v5);
  v24 = (_QWORD *)v5;
  v6 = sub_20AEC01D0((_QWORD *)(v5 + 16), (uint64_t)"{", 1);
  LOBYTE(v23[0]) = **a3;
  v7 = sub_20B5220B4(v6, v23);
  sub_20AEC01D0(v7, (uint64_t)",", 1);
  v23[0] = v5 + 16;
  sub_20B43F644(**a3, (uint64_t)a3, (uint64_t)v23);
  sub_20AEC01D0((_QWORD *)(v5 + 16), (uint64_t)"}", 1);
  v8 = *(_DWORD *)(v5 + 120);
  if ((v8 & 0x10) != 0)
  {
    v11 = *(_QWORD *)(v5 + 112);
    v12 = *(_QWORD *)(v5 + 72);
    if (v11 < v12)
    {
      *(_QWORD *)(v5 + 112) = v12;
      v11 = v12;
    }
    v13 = *(const void **)(v5 + 64);
    v9 = v11 - (_QWORD)v13;
    if (v11 - (unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v8 & 8) == 0)
    {
      v9 = 0;
      HIBYTE(v22) = 0;
      v10 = __dst;
      goto LABEL_14;
    }
    v13 = *(const void **)(v5 + 40);
    v9 = *(_QWORD *)(v5 + 56) - (_QWORD)v13;
    if (v9 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_20AEC0138();
  }
  if (v9 >= 0x17)
  {
    v14 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v14 = v9 | 7;
    v15 = v14 + 1;
    v10 = (void **)operator new(v14 + 1);
    __dst[1] = (void *)v9;
    v22 = v15 | 0x8000000000000000;
    __dst[0] = v10;
    goto LABEL_13;
  }
  HIBYTE(v22) = v9;
  v10 = __dst;
  if (v9)
LABEL_13:
    memmove(v10, v13, v9);
LABEL_14:
  *((_BYTE *)v10 + v9) = 0;
  v16 = v24;
  if (v24)
  {
    v17 = MEMORY[0x24BEDB7F0];
    v18 = *MEMORY[0x24BEDB7F0];
    *v24 = *MEMORY[0x24BEDB7F0];
    v19 = *(_QWORD *)(v17 + 72);
    *(_QWORD *)((char *)v16 + *(_QWORD *)(v18 - 24)) = *(_QWORD *)(v17 + 64);
    v16[3] = MEMORY[0x24BEDB848] + 16;
    v16[2] = v19;
    if (*((char *)v16 + 111) < 0)
      operator delete((void *)v16[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v16 + 16);
    MEMORY[0x20BD3583C](v16, 0x10B2C40EED050F3);
  }
  v23[0] = a2;
  v23[1] = __dst;
  v23[2] = a2;
  v23[3] = __dst;
  v23[4] = __dst;
  v20 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v20 == -1)
    sub_20AECFAB8();
  v24 = v23;
  ((void (*)(_QWORD **, uint64_t))off_24C3F61C0[v20])(&v24, a2);
  if (SHIBYTE(v22) < 0)
    operator delete(__dst[0]);
}

void sub_20AF6D02C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20AF6D050(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF6D06C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B52CE84((uint64_t *)(v1 - 56));
  _Unwind_Resume(a1);
}

__int128 *sub_20AF6D080()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631D98);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631D98))
    return &xmmword_254631D80;
  v2 = sub_20AF6D15C();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_254631D80, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_254631D90 = v2->__r_.__value_.__r.__words[2];
    xmmword_254631D80 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631D80, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631D98);
  return &xmmword_254631D80;
}

void sub_20AF6D144(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631D98);
  _Unwind_Resume(a1);
}

std::string *sub_20AF6D15C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631DB8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631DB8))
    return &stru_254631DA0;
  sub_20AF6D400((uint64_t)__p);
  sub_20AF6D24C((char *)__p, &stru_254631DA0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631DA0, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631DB8);
  return &stru_254631DA0;
}

void sub_20AF6D20C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631DB8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631DB8);
  _Unwind_Resume(a1);
}

void sub_20AF6D24C(char *a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v4;
  __int128 v5;
  __int128 *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *__dst[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = sub_20AF6D5E4();
  if (*((char *)v4 + 23) < 0)
  {
    sub_20AEC60F4(__dst, *(void **)v4, *((_QWORD *)v4 + 1));
  }
  else
  {
    v5 = *v4;
    v16 = *((_QWORD *)v4 + 2);
    *(_OWORD *)__dst = v5;
  }
  v6 = sub_20AF4DB74();
  if (*((char *)v6 + 23) < 0)
  {
    sub_20AEC60F4(&v17, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = v7;
  }
  sub_20AEC7620(&__p, (uint64_t)__dst, 2uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_19;
}

void sub_20AF6D3B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_20AEC2E90((void **)&a9);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF6D400(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254631E78);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254631E78))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::con::Points<2>>]", qword_254631E60);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631E60, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631E78);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254631E98);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254631E98))
  {
    v5 = sub_20AED4780(qword_254631E60, "<", 0);
    sub_20AED467C(qword_254631E60, 0, v5, qword_254631E80);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631E80, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631E98);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254631EB8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254631EB8))
  {
    sub_20B531658((uint64_t)qword_254631E80, (uint64_t)&xmmword_254631EA0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631EA0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631EB8);
  }
  if (byte_254631EB7 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_254631EA0, *((unint64_t *)&xmmword_254631EA0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_254631EA0;
    *(_QWORD *)(a1 + 16) = unk_254631EB0;
  }
}

void sub_20AF6D59C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631EB8);
  _Unwind_Resume(a1);
}

void sub_20AF6D5B4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631E98);
  _Unwind_Resume(a1);
}

void sub_20AF6D5CC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631E78);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF6D5E4()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631DD8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631DD8))
    return &xmmword_254631DC0;
  v2 = sub_20AF6D6C0();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_254631DC0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_254631DD0 = v2->__r_.__value_.__r.__words[2];
    xmmword_254631DC0 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631DC0, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631DD8);
  return &xmmword_254631DC0;
}

void sub_20AF6D6A8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631DD8);
  _Unwind_Resume(a1);
}

std::string *sub_20AF6D6C0()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631DF8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631DF8))
    return &stru_254631DE0;
  sub_20AF6D8D8((uint64_t)__p);
  sub_20AF6D7B0((char *)__p, &stru_254631DE0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631DE0, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631DF8);
  return &stru_254631DE0;
}

void sub_20AF6D770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631DF8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631DF8);
  _Unwind_Resume(a1);
}

void sub_20AF6D7B0(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *__dst[2];
  std::string::size_type v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = sub_20AF6DABC();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_20AEC7620(&__p, (uint64_t)__dst, 1uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0)
    operator delete(__dst[0]);
}

void sub_20AF6D8AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_20AEC2E90(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20AF6D8D8(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254631E18);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254631E18))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::con::Points<2>]", qword_254631E00);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631E00, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631E18);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254631E38);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254631E38))
  {
    v5 = sub_20AED4780(qword_254631E00, "<", 0);
    sub_20AED467C(qword_254631E00, 0, v5, qword_254631E20);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631E20, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631E38);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254631E58);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254631E58))
  {
    sub_20B531658((uint64_t)qword_254631E20, (uint64_t)&xmmword_254631E40);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631E40, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631E58);
  }
  if (byte_254631E57 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_254631E40, *((unint64_t *)&xmmword_254631E40 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_254631E40;
    *(_QWORD *)(a1 + 16) = unk_254631E50;
  }
}

void sub_20AF6DA74(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631E58);
  _Unwind_Resume(a1);
}

void sub_20AF6DA8C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631E38);
  _Unwind_Resume(a1);
}

void sub_20AF6DAA4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631E18);
  _Unwind_Resume(a1);
}

std::string *sub_20AF6DABC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631D58);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631D58))
    return &stru_254631D40;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 2U]", __p);
  sub_20B531884((uint64_t)__p, &stru_254631D40);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631D40, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631D58);
  return &stru_254631D40;
}

void sub_20AF6DB74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631D58);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631D58);
  _Unwind_Resume(a1);
}

std::string *sub_20AF6DBB4()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void *v8[3];
  void *v9[2];
  char v10;
  void *__dst[2];
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  void *__p[2];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254631ED8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254631ED8))
  {
    sub_20AEC0D64(v9, "viz::PackageData");
    v2 = sub_20AF6D5E4();
    if (*((char *)v2 + 23) < 0)
    {
      sub_20AEC60F4(__dst, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      v12 = *((_QWORD *)v2 + 2);
      *(_OWORD *)__dst = v3;
    }
    *(_OWORD *)v13 = *(_OWORD *)"viz::Package";
    v14 = 0xC00000000000000;
    v4 = sub_20AF6DE7C();
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
    }
    else
    {
      v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      v16 = v4->__r_.__value_.__r.__words[2];
      v15 = v5;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    v18 = 0x400000000000000;
    sub_20AEC7620(v8, (uint64_t)__dst, 4uLL);
    sub_20B53170C((char *)v9, (uint64_t *)v8, &stru_254631EC0, v6, v7);
    sub_20AEC2E90(v8);
    if (SHIBYTE(v18) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v16) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v14) & 0x80000000) == 0)
          goto LABEL_13;
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v13[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v10 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631EC0, &dword_20AEBB000);
        __cxa_guard_release(&qword_254631ED8);
        return &stru_254631EC0;
      }
LABEL_20:
      operator delete(v9[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_20;
  }
  return &stru_254631EC0;
}

void sub_20AF6DD98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  sub_20AEC2E90(&a10);
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_254631ED8);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_254631ED8);
  _Unwind_Resume(a1);
}

std::string *sub_20AF6DE7C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631EF8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631EF8))
    return &stru_254631EE0;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 3U]", __p);
  sub_20B531884((uint64_t)__p, &stru_254631EE0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631EE0, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631EF8);
  return &stru_254631EE0;
}

void sub_20AF6DF34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631EF8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631EF8);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF6DF74(__int128 *a1, uint64_t a2, _BYTE **a3, uint64_t a4)
{
  uint64_t result;
  char v8;
  __int128 __dst;
  uint64_t v10;
  int v11;
  __int128 *p_dst;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 **p_p_dst;

  v11 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v10 = *((_QWORD *)a1 + 2);
  }
  v11 = 1;
  p_dst = &__dst;
  v13 = a2;
  v14 = &__dst;
  v15 = a2;
  v16 = a2;
  sub_20AED5C4C((uint64_t *)&v14, (uint64_t)&__dst);
  sub_20AF6CD80((uint64_t)&v8, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v13 = a4;
  v14 = &__dst;
  v15 = a4;
  v16 = a4;
  if (v11 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F6250[v11])(&p_p_dst, &__dst);
  if (v11 == -1)
    sub_20AECFAB8();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6268[v11])(&p_dst, &__dst);
  if (v11 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6190[v11])(&p_dst, &__dst);
  return result;
}

void sub_20AF6E0B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6E0CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6E0E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6E0F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6E108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6E11C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  const void *v3;
  uint64_t v4;
  void *__p;
  void *v6;
  char *v7;

  v4 = *a1;
  v3 = (const void *)a1[1];
  v6 = 0;
  v7 = 0;
  __p = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_20AF6E1D0();
    __p = operator new(2 * v4);
    v7 = (char *)__p + 2 * v4;
    memcpy(__p, v3, 2 * v4);
    v6 = v7;
  }
  sub_20B43BF48(a2, 1, (uint64_t)&__p);
  if (__p)
  {
    v6 = __p;
    operator delete(__p);
  }
}

void sub_20AF6E1B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF6E1D0()
{
  sub_20AEC014C("vector");
}

void sub_20AF6E1E4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  const void *v3;
  uint64_t v4;
  void *__p;
  void *v6;
  char *v7;

  v4 = *a1;
  v3 = (const void *)a1[1];
  v6 = 0;
  v7 = 0;
  __p = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_20AF6E1D0();
    __p = operator new(4 * v4);
    v7 = (char *)__p + 4 * v4;
    memcpy(__p, v3, 4 * v4);
    v6 = v7;
  }
  sub_20B43C290(a2, 2, (uint64_t)&__p);
  if (__p)
  {
    v6 = __p;
    operator delete(__p);
  }
}

void sub_20AF6E278(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF6E298(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  const void *v3;
  uint64_t v4;
  void *__p;
  void *v6;
  char *v7;

  v4 = *a1;
  v3 = (const void *)a1[1];
  v6 = 0;
  v7 = 0;
  __p = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_20AF6E1D0();
    __p = operator new(8 * v4);
    v7 = (char *)__p + 8 * v4;
    memcpy(__p, v3, 8 * v4);
    v6 = v7;
  }
  sub_20B43C5D8(a2, 3, (uint64_t)&__p);
  if (__p)
  {
    v6 = __p;
    operator delete(__p);
  }
}

void sub_20AF6E32C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF6E34C(size_t *a1@<X0>, _QWORD *a2@<X8>)
{
  size_t v3;
  const void *v4;
  char *v5;
  char *v6;
  void *__p;
  void *v8;
  char *v9;

  v3 = *a1;
  v4 = (const void *)a1[1];
  v8 = 0;
  v9 = 0;
  __p = 0;
  if (v3)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_20AF6E1D0();
    v5 = (char *)operator new(v3);
    v6 = &v5[v3];
    __p = v5;
    v9 = &v5[v3];
    memcpy(v5, v4, v3);
    v8 = v6;
  }
  sub_20B43BA64(a2, 5, (uint64_t)&__p);
  if (__p)
  {
    v8 = __p;
    operator delete(__p);
  }
}

void sub_20AF6E3DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF6E3FC(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  const void *v3;
  uint64_t v4;
  void *__p;
  void *v6;
  char *v7;

  v4 = *a1;
  v3 = (const void *)a1[1];
  v6 = 0;
  v7 = 0;
  __p = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_20AF6E1D0();
    __p = operator new(2 * v4);
    v7 = (char *)__p + 2 * v4;
    memcpy(__p, v3, 2 * v4);
    v6 = v7;
  }
  sub_20B43BDA4(a2, 6, (uint64_t)&__p);
  if (__p)
  {
    v6 = __p;
    operator delete(__p);
  }
}

void sub_20AF6E490(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF6E4B0(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  const void *v3;
  uint64_t v4;
  void *__p;
  void *v6;
  char *v7;

  v4 = *a1;
  v3 = (const void *)a1[1];
  v6 = 0;
  v7 = 0;
  __p = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_20AF6E1D0();
    __p = operator new(4 * v4);
    v7 = (char *)__p + 4 * v4;
    memcpy(__p, v3, 4 * v4);
    v6 = v7;
  }
  sub_20B43C0EC(a2, 7, (uint64_t)&__p);
  if (__p)
  {
    v6 = __p;
    operator delete(__p);
  }
}

void sub_20AF6E544(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF6E564(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  const void *v3;
  uint64_t v4;
  void *__p;
  void *v6;
  char *v7;

  v4 = *a1;
  v3 = (const void *)a1[1];
  v6 = 0;
  v7 = 0;
  __p = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_20AF6E1D0();
    __p = operator new(8 * v4);
    v7 = (char *)__p + 8 * v4;
    memcpy(__p, v3, 8 * v4);
    v6 = v7;
  }
  sub_20B43C434(a2, 8, (uint64_t)&__p);
  if (__p)
  {
    v6 = __p;
    operator delete(__p);
  }
}

void sub_20AF6E5F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF6E618(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  const void *v3;
  uint64_t v4;
  void *__p;
  void *v6;
  char *v7;

  v4 = *a1;
  v3 = (const void *)a1[1];
  v6 = 0;
  v7 = 0;
  __p = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_20AF6E1D0();
    __p = operator new(4 * v4);
    v7 = (char *)__p + 4 * v4;
    memcpy(__p, v3, 4 * v4);
    v6 = v7;
  }
  sub_20B43C77C(a2, 11, (uint64_t)&__p);
  if (__p)
  {
    v6 = __p;
    operator delete(__p);
  }
}

void sub_20AF6E6AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF6E6CC(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  const void *v3;
  uint64_t v4;
  void *__p;
  void *v6;
  char *v7;

  v4 = *a1;
  v3 = (const void *)a1[1];
  v6 = 0;
  v7 = 0;
  __p = 0;
  if (v4)
  {
    if (v4 < 0)
      sub_20AF6E1D0();
    __p = operator new(8 * v4);
    v7 = (char *)__p + 8 * v4;
    memcpy(__p, v3, 8 * v4);
    v6 = v7;
  }
  sub_20B43C920(a2, 12, (uint64_t)&__p);
  if (__p)
  {
    v6 = __p;
    operator delete(__p);
  }
}

void sub_20AF6E760(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF6E780(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  mach_timebase_info v7;
  int v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unsigned __int8 v12;
  unsigned __int128 *v13;
  unsigned __int128 v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  std::__shared_weak_count *v21;
  _QWORD v22[2];
  std::__shared_weak_count *v23;
  mach_timebase_info info;
  char v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  unsigned __int128 v36;
  char v37;
  _QWORD v38[6];

  v38[5] = *MEMORY[0x24BDAC8D0];
  if (*((_BYTE *)a2 + 384))
  {
    if (*((_BYTE *)a2 + 168))
    {
      v7 = (mach_timebase_info)*((_QWORD *)a2 + 19);
      v6 = *((_QWORD *)a2 + 20);
      if (*((_BYTE *)a2 + 24))
        goto LABEL_4;
    }
    else
    {
      v6 = mach_continuous_time();
      v12 = atomic_load((unsigned __int8 *)&qword_25463D170);
      if ((v12 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
      {
        mach_timebase_info(&info);
        LODWORD(v18) = info.numer;
        LODWORD(v19) = info.denom;
        *(double *)&qword_25463D168 = (double)v18 / (double)v19;
        __cxa_guard_release(&qword_25463D170);
      }
      v7 = (mach_timebase_info)llround(*(double *)&qword_25463D168 * (double)v6);
      LOBYTE(v6) = 2;
      if (*((_BYTE *)a2 + 24))
      {
LABEL_4:
        sub_20AFA84B0((uint64_t *)a2, 1000000000);
        v8 = *((unsigned __int8 *)a2 + 24);
        info = v7;
        v25 = v6;
        LOBYTE(v26) = 0;
        v28 = 0;
        if (v8)
        {
          if (*((char *)a2 + 23) < 0)
          {
            sub_20AEC60F4(&v26, *(void **)a2, *((_QWORD *)a2 + 1));
          }
          else
          {
            v26 = *a2;
            v27 = *((_QWORD *)a2 + 2);
          }
          v28 = 1;
          LOBYTE(v29) = 0;
          v31 = 0;
          if (*((_BYTE *)a2 + 120))
          {
LABEL_34:
            if (*((char *)a2 + 119) < 0)
            {
              sub_20AEC60F4(&v29, *((void **)a2 + 12), *((_QWORD *)a2 + 13));
            }
            else
            {
              v29 = a2[6];
              v30 = *((_QWORD *)a2 + 14);
            }
            v31 = 1;
            LOBYTE(v32) = 0;
            v33 = 0;
            if (!*((_BYTE *)a2 + 144))
              goto LABEL_18;
            goto LABEL_17;
          }
LABEL_16:
          LOBYTE(v32) = 0;
          v33 = 0;
          if (!*((_BYTE *)a2 + 144))
          {
LABEL_18:
            LOBYTE(v34) = 0;
            v37 = 0;
            if (*((_BYTE *)a2 + 80))
            {
              if (*((char *)a2 + 55) < 0)
              {
                sub_20AEC60F4(&v34, *((void **)a2 + 4), *((_QWORD *)a2 + 5));
              }
              else
              {
                v34 = a2[2];
                v35 = *((_QWORD *)a2 + 6);
              }
              v13 = (unsigned __int128 *)(a2 + 4);
              do
                v14 = __ldaxp(v13);
              while (__stlxp(v14, v13));
              v36 = v14;
              v37 = 1;
            }
            sub_20AED3838((uint64_t)v38, (uint64_t)(a2 + 11));
            sub_20AF6ECA0(a1, (uint64_t)&info, v22);
            sub_20AFA7F18(a3, (uint64_t)v22);
            v15 = v23;
            if (v23)
            {
              p_shared_owners = (unint64_t *)&v23->__shared_owners_;
              do
                v17 = __ldaxr(p_shared_owners);
              while (__stlxr(v17 - 1, p_shared_owners));
              if (!v17)
              {
                ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
                std::__shared_weak_count::__release_weak(v15);
              }
            }
            sub_20AF4EA3C((uint64_t)&info);
            return;
          }
LABEL_17:
          v32 = a2[8];
          v33 = 1;
          goto LABEL_18;
        }
LABEL_15:
        LOBYTE(v29) = 0;
        v31 = 0;
        if (*((_BYTE *)a2 + 120))
          goto LABEL_34;
        goto LABEL_16;
      }
    }
    info = v7;
    v25 = v6;
    LOBYTE(v26) = 0;
    v28 = 0;
    goto LABEL_15;
  }
  sub_20AF6EB60(a1, v20);
  sub_20AFA7F18(a3, (uint64_t)v20);
  v9 = v21;
  if (v21)
  {
    v10 = (unint64_t *)&v21->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_20AF6EA90(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463D170);
  _Unwind_Resume(a1);
}

void sub_20AF6EAA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  if (a23)
  {
    if (a22 < 0)
    {
      operator delete(__p);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF6EB60@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  unsigned __int8 v5;
  unint64_t v7;
  unint64_t v8;
  mach_timebase_info info;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v4 = mach_continuous_time();
  v5 = atomic_load((unsigned __int8 *)&qword_25463D170);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
  {
    mach_timebase_info(&info);
    LODWORD(v7) = info.numer;
    LODWORD(v8) = info.denom;
    *(double *)&qword_25463D168 = (double)v7 / (double)v8;
    __cxa_guard_release(&qword_25463D170);
  }
  v10[0] = llround(*(double *)&qword_25463D168 * (double)v4);
  v10[1] = 2;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  sub_20AF6ECA0(a1, (uint64_t)v10, a2);
  return sub_20AF4EA3C((uint64_t)v10);
}

void sub_20AF6EC74(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463D170);
  _Unwind_Resume(a1);
}

void sub_20AF6EC8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AF4EA3C((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF6ECA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  _QWORD *result;

  v6 = operator new();
  *(_QWORD *)v6 = &off_24C3F65B0;
  *(_OWORD *)(v6 + 8) = *(_OWORD *)a1;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  sub_20AF4CAF4(v6 + 32, a2);
  *(_QWORD *)v6 = &off_24C3F6530;
  *a3 = &off_24C411E78;
  a3[1] = v6;
  result = (_QWORD *)operator new();
  *result = &off_24C411F70;
  result[1] = 0;
  result[2] = 0;
  result[3] = v6;
  a3[2] = result;
  return result;
}

void sub_20AF6ED50(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_20AF6ED6C(_Unwind_Exception *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  MEMORY[0x20BD3583C](v1, 0x10B3C40E92279A6);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF6EDC8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F65B0;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_20AF6EE40(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F65B0;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF6EEB8(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20AF6EEC0(_QWORD *a1, _QWORD *lpsrc)
{
  uint64_t result;
  uint64_t v5;
  unsigned __int8 *v6;
  int v7;
  unsigned __int8 *v8;
  _QWORD v9[3];
  char v10;

  result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C411EB8, (const struct __class_type_info *)&unk_24C3F6570, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      v5 = result;
      v6 = (unsigned __int8 *)a1[1];
      v7 = *v6;
      v8 = *(unsigned __int8 **)(v5 + 8);
      if (v7 == *v8)
      {
        v9[0] = &v10;
        v9[1] = v6;
        v9[2] = v8;
        return sub_20B43E450(v7, (uint64_t)v9);
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

void sub_20AF6EF68(uint64_t a1)
{
  __int128 *v2;
  void *__p;
  char v4;

  v2 = (__int128 *)sub_20AF70374();
  sub_20AF6F01C(a1);
  sub_20AF4DD70(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",", a1 + 32, (uint64_t)"}");
  if (v4 < 0)
    operator delete(__p);
}

void sub_20AF6F000(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF6F01C(uint64_t a1)
{
  unsigned __int8 v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;

  v2 = atomic_load((unsigned __int8 *)&qword_2546320B8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2546320B8))
  {
    v4 = sub_20AF6FE9C();
    v5 = *((_QWORD *)v4 + 1);
    if (*((char *)v4 + 23) >= 0)
    {
      v6 = *((unsigned __int8 *)v4 + 23);
    }
    else
    {
      v4 = *(__int128 **)v4;
      v6 = v5;
    }
    sub_20AF4E53C((char *)v4, v6, "::", 2, 0, (uint64_t)&v8);
    if (*(char *)(v9 - 1) < 0)
    {
      sub_20AEC60F4(&xmmword_2546320A0, *(void **)(v9 - 24), *(_QWORD *)(v9 - 16));
    }
    else
    {
      v7 = *(_OWORD *)(v9 - 24);
      qword_2546320B0 = *(_QWORD *)(v9 - 8);
      xmmword_2546320A0 = v7;
    }
    sub_20AEC2E90(&v8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546320A0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546320B8);
  }
  return sub_20AF70734(&xmmword_2546320A0, (uint64_t)"{", (_BYTE **)(a1 + 8), (uint64_t)"}");
}

void sub_20AF6F12C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_20AEC2E90(&a9);
  __cxa_guard_abort(&qword_2546320B8);
  _Unwind_Resume(a1);
}

void sub_20AF6F14C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546320B8);
  _Unwind_Resume(a1);
}

void sub_20AF6F164(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 4;
}

void sub_20AF6F190(uint64_t (***lpsrc)()@<X0>, _QWORD *a2@<X8>)
{
  sub_20B2346E4(lpsrc, 4, a2);
}

_QWORD *sub_20AF6F1C8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F65B0;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_20AF6F240(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F65B0;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF6F2B8(uint64_t a1)
{
  __int128 *v2;

  v2 = sub_20AF6F938();
  return sub_20AF6F40C(v2, (uint64_t)"{", (_BYTE **)(a1 + 8), (uint64_t)",", a1 + 32, (uint64_t)"}");
}

uint64_t sub_20AF6F310(uint64_t a1)
{
  uint64_t result;
  _BYTE v2[24];
  int v3;
  char v4;
  _QWORD v5[2];

  v3 = 0;
  sub_20AF6F638((uint64_t)v5, (uint64_t)v2, (_BYTE **)(a1 + 8));
  if (v3 == -1)
    sub_20AECFAB8();
  v5[0] = &v4;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24C3F6268[v3])(v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24C3F6190[v3])(v5, v2);
  return result;
}

void sub_20AF6F3A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;

  if (a13 != -1)
    ((void (*)(uint64_t, char *))off_24C3F6190[a13])(v13 - 17, &a10);
  _Unwind_Resume(exception_object);
}

void sub_20AF6F3E0(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_20AF6F40C(__int128 *a1, uint64_t a2, _BYTE **a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  char v12;
  char v13;
  __int128 __dst;
  uint64_t v15;
  int v16;
  __int128 *p_dst;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 **p_p_dst;

  v16 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v15 = *((_QWORD *)a1 + 2);
  }
  v16 = 1;
  p_dst = &__dst;
  v18 = a2;
  v19 = &__dst;
  v20 = a2;
  v21 = a2;
  sub_20AED5C4C((uint64_t *)&v19, (uint64_t)&__dst);
  sub_20AF6F638((uint64_t)&v13, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v18 = a4;
  v19 = &__dst;
  v20 = a4;
  v21 = a4;
  if (v16 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F6250[v16])(&p_p_dst, &__dst);
  sub_20AF4D170((uint64_t)&v12, (uint64_t)&__dst, a5);
  p_dst = &__dst;
  v18 = a6;
  v19 = &__dst;
  v20 = a6;
  v21 = a6;
  if (v16 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F6250[v16])(&p_p_dst, &__dst);
  if (v16 == -1)
    sub_20AECFAB8();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6268[v16])(&p_dst, &__dst);
  if (v16 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6190[v16])(&p_dst, &__dst);
  return result;
}

void sub_20AF6F5A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6F5C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6F5D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6F5E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6F5FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6F610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6F624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF6F638(uint64_t a1, uint64_t a2, _BYTE **a3)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  int v8;
  size_t v9;
  void **v10;
  unint64_t v11;
  unint64_t v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *__dst[2];
  unint64_t v22;
  _QWORD v23[5];
  _QWORD *v24;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20AEC0BD8(v5);
  v24 = (_QWORD *)v5;
  v6 = sub_20AEC01D0((_QWORD *)(v5 + 16), (uint64_t)"{", 1);
  LOBYTE(v23[0]) = **a3;
  v7 = sub_20B5220B4(v6, v23);
  sub_20AEC01D0(v7, (uint64_t)",", 1);
  v23[0] = v5 + 16;
  sub_20B4405CC(**a3, (uint64_t)a3, (uint64_t)v23);
  sub_20AEC01D0((_QWORD *)(v5 + 16), (uint64_t)"}", 1);
  v8 = *(_DWORD *)(v5 + 120);
  if ((v8 & 0x10) != 0)
  {
    v11 = *(_QWORD *)(v5 + 112);
    v12 = *(_QWORD *)(v5 + 72);
    if (v11 < v12)
    {
      *(_QWORD *)(v5 + 112) = v12;
      v11 = v12;
    }
    v13 = *(const void **)(v5 + 64);
    v9 = v11 - (_QWORD)v13;
    if (v11 - (unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v8 & 8) == 0)
    {
      v9 = 0;
      HIBYTE(v22) = 0;
      v10 = __dst;
      goto LABEL_14;
    }
    v13 = *(const void **)(v5 + 40);
    v9 = *(_QWORD *)(v5 + 56) - (_QWORD)v13;
    if (v9 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_20AEC0138();
  }
  if (v9 >= 0x17)
  {
    v14 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v14 = v9 | 7;
    v15 = v14 + 1;
    v10 = (void **)operator new(v14 + 1);
    __dst[1] = (void *)v9;
    v22 = v15 | 0x8000000000000000;
    __dst[0] = v10;
    goto LABEL_13;
  }
  HIBYTE(v22) = v9;
  v10 = __dst;
  if (v9)
LABEL_13:
    memmove(v10, v13, v9);
LABEL_14:
  *((_BYTE *)v10 + v9) = 0;
  v16 = v24;
  if (v24)
  {
    v17 = MEMORY[0x24BEDB7F0];
    v18 = *MEMORY[0x24BEDB7F0];
    *v24 = *MEMORY[0x24BEDB7F0];
    v19 = *(_QWORD *)(v17 + 72);
    *(_QWORD *)((char *)v16 + *(_QWORD *)(v18 - 24)) = *(_QWORD *)(v17 + 64);
    v16[3] = MEMORY[0x24BEDB848] + 16;
    v16[2] = v19;
    if (*((char *)v16 + 111) < 0)
      operator delete((void *)v16[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v16 + 16);
    MEMORY[0x20BD3583C](v16, 0x10B2C40EED050F3);
  }
  v23[0] = a2;
  v23[1] = __dst;
  v23[2] = a2;
  v23[3] = __dst;
  v23[4] = __dst;
  v20 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v20 == -1)
    sub_20AECFAB8();
  v24 = v23;
  ((void (*)(_QWORD **, uint64_t))off_24C3F61C0[v20])(&v24, a2);
  if (SHIBYTE(v22) < 0)
    operator delete(__dst[0]);
}

void sub_20AF6F8E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20AF6F908(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF6F924(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B52CE84((uint64_t *)(v1 - 56));
  _Unwind_Resume(a1);
}

__int128 *sub_20AF6F938()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631F38);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631F38))
    return &xmmword_254631F20;
  v2 = sub_20AF6FA14();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_254631F20, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_254631F30 = v2->__r_.__value_.__r.__words[2];
    xmmword_254631F20 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631F20, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631F38);
  return &xmmword_254631F20;
}

void sub_20AF6F9FC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631F38);
  _Unwind_Resume(a1);
}

std::string *sub_20AF6FA14()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631F58);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631F58))
    return &stru_254631F40;
  sub_20AF6FCB8((uint64_t)__p);
  sub_20AF6FB04((char *)__p, &stru_254631F40);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631F40, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631F58);
  return &stru_254631F40;
}

void sub_20AF6FAC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631F58);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631F58);
  _Unwind_Resume(a1);
}

void sub_20AF6FB04(char *a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v4;
  __int128 v5;
  __int128 *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *__dst[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = sub_20AF6FE9C();
  if (*((char *)v4 + 23) < 0)
  {
    sub_20AEC60F4(__dst, *(void **)v4, *((_QWORD *)v4 + 1));
  }
  else
  {
    v5 = *v4;
    v16 = *((_QWORD *)v4 + 2);
    *(_OWORD *)__dst = v5;
  }
  v6 = sub_20AF4DB74();
  if (*((char *)v6 + 23) < 0)
  {
    sub_20AEC60F4(&v17, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = v7;
  }
  sub_20AEC7620(&__p, (uint64_t)__dst, 2uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_19;
}

void sub_20AF6FC68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_20AEC2E90((void **)&a9);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF6FCB8(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254632018);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254632018))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::con::Points<3>>]", qword_254632000);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254632000, &dword_20AEBB000);
    __cxa_guard_release(&qword_254632018);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254632038);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254632038))
  {
    v5 = sub_20AED4780(qword_254632000, "<", 0);
    sub_20AED467C(qword_254632000, 0, v5, qword_254632020);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254632020, &dword_20AEBB000);
    __cxa_guard_release(&qword_254632038);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254632058);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254632058))
  {
    sub_20B531658((uint64_t)qword_254632020, (uint64_t)&xmmword_254632040);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254632040, &dword_20AEBB000);
    __cxa_guard_release(&qword_254632058);
  }
  if (byte_254632057 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_254632040, *((unint64_t *)&xmmword_254632040 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_254632040;
    *(_QWORD *)(a1 + 16) = unk_254632050;
  }
}

void sub_20AF6FE54(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254632058);
  _Unwind_Resume(a1);
}

void sub_20AF6FE6C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254632038);
  _Unwind_Resume(a1);
}

void sub_20AF6FE84(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254632018);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF6FE9C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631F78);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631F78))
    return &xmmword_254631F60;
  v2 = sub_20AF6FF78();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_254631F60, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_254631F70 = v2->__r_.__value_.__r.__words[2];
    xmmword_254631F60 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631F60, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631F78);
  return &xmmword_254631F60;
}

void sub_20AF6FF60(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631F78);
  _Unwind_Resume(a1);
}

std::string *sub_20AF6FF78()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631F98);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631F98))
    return &stru_254631F80;
  sub_20AF70190((uint64_t)__p);
  sub_20AF70068((char *)__p, &stru_254631F80);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631F80, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631F98);
  return &stru_254631F80;
}

void sub_20AF70028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631F98);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631F98);
  _Unwind_Resume(a1);
}

void sub_20AF70068(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *__dst[2];
  std::string::size_type v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = sub_20AF6DE7C();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_20AEC7620(&__p, (uint64_t)__dst, 1uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0)
    operator delete(__dst[0]);
}

void sub_20AF70164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_20AEC2E90(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20AF70190(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254631FB8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254631FB8))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::con::Points<3>]", qword_254631FA0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631FA0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631FB8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254631FD8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254631FD8))
  {
    v5 = sub_20AED4780(qword_254631FA0, "<", 0);
    sub_20AED467C(qword_254631FA0, 0, v5, qword_254631FC0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631FC0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631FD8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254631FF8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254631FF8))
  {
    sub_20B531658((uint64_t)qword_254631FC0, (uint64_t)&xmmword_254631FE0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631FE0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631FF8);
  }
  if (byte_254631FF7 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_254631FE0, *((unint64_t *)&xmmword_254631FE0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_254631FE0;
    *(_QWORD *)(a1 + 16) = unk_254631FF0;
  }
}

void sub_20AF7032C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631FF8);
  _Unwind_Resume(a1);
}

void sub_20AF70344(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631FD8);
  _Unwind_Resume(a1);
}

void sub_20AF7035C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631FB8);
  _Unwind_Resume(a1);
}

std::string *sub_20AF70374()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void *v8[3];
  void *v9[2];
  char v10;
  void *__dst[2];
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  void *__p[2];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254632078);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254632078))
  {
    sub_20AEC0D64(v9, "viz::PackageData");
    v2 = sub_20AF6FE9C();
    if (*((char *)v2 + 23) < 0)
    {
      sub_20AEC60F4(__dst, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      v12 = *((_QWORD *)v2 + 2);
      *(_OWORD *)__dst = v3;
    }
    *(_OWORD *)v13 = *(_OWORD *)"viz::Package";
    v14 = 0xC00000000000000;
    v4 = sub_20AF7063C();
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
    }
    else
    {
      v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      v16 = v4->__r_.__value_.__r.__words[2];
      v15 = v5;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    v18 = 0x400000000000000;
    sub_20AEC7620(v8, (uint64_t)__dst, 4uLL);
    sub_20B53170C((char *)v9, (uint64_t *)v8, &stru_254632060, v6, v7);
    sub_20AEC2E90(v8);
    if (SHIBYTE(v18) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v16) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v14) & 0x80000000) == 0)
          goto LABEL_13;
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v13[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v10 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254632060, &dword_20AEBB000);
        __cxa_guard_release(&qword_254632078);
        return &stru_254632060;
      }
LABEL_20:
      operator delete(v9[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_20;
  }
  return &stru_254632060;
}

void sub_20AF70558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  sub_20AEC2E90(&a10);
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_254632078);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_254632078);
  _Unwind_Resume(a1);
}

std::string *sub_20AF7063C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254632098);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254632098))
    return &stru_254632080;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 4U]", __p);
  sub_20B531884((uint64_t)__p, &stru_254632080);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254632080, &dword_20AEBB000);
  __cxa_guard_release(&qword_254632098);
  return &stru_254632080;
}

void sub_20AF706F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254632098);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254632098);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF70734(__int128 *a1, uint64_t a2, _BYTE **a3, uint64_t a4)
{
  uint64_t result;
  char v8;
  __int128 __dst;
  uint64_t v10;
  int v11;
  __int128 *p_dst;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 **p_p_dst;

  v11 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v10 = *((_QWORD *)a1 + 2);
  }
  v11 = 1;
  p_dst = &__dst;
  v13 = a2;
  v14 = &__dst;
  v15 = a2;
  v16 = a2;
  sub_20AED5C4C((uint64_t *)&v14, (uint64_t)&__dst);
  sub_20AF6F638((uint64_t)&v8, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v13 = a4;
  v14 = &__dst;
  v15 = a4;
  v16 = a4;
  if (v11 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F6250[v11])(&p_p_dst, &__dst);
  if (v11 == -1)
    sub_20AECFAB8();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6268[v11])(&p_dst, &__dst);
  if (v11 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6190[v11])(&p_dst, &__dst);
  return result;
}

void sub_20AF70874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF7088C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF708A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF708B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF708C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF708DC(uint64_t a1, unint64_t *a2, _BYTE *a3, unsigned int *a4, unint64_t *a5, unsigned int *a6, unint64_t *a7)
{
  uint64_t result;
  char v14;
  _DWORD v15[6];
  int v16;
  std::string v17;
  std::string **v18;
  std::string *v19;
  std::string *v20;
  _DWORD *v21;
  std::string *v22;
  std::string *v23;

  v16 = 0;
  sub_20AF6A3D8(v15, "Invalid CFData size ");
  std::to_string(&v17, *a2);
  v19 = (std::string *)v15;
  v20 = &v17;
  v21 = v15;
  v22 = &v17;
  v23 = &v17;
  if (v16 == -1)
    sub_20AECFAB8();
  v18 = &v19;
  ((void (*)(std::string ***, _DWORD *))off_24C3F61C0[v16])(&v18, v15);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v17.__r_.__value_.__l.__data_);
  v19 = (std::string *)v15;
  v20 = (std::string *)" for specified value type ";
  v21 = v15;
  v22 = (std::string *)" for specified value type ";
  v23 = (std::string *)" for specified value type ";
  if (v16 == -1)
    sub_20AECFAB8();
  v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&v19;
  ((void (*)(std::string *, _DWORD *))off_24C3F61D8[v16])(&v17, v15);
  sub_20AF6A118((uint64_t)&v14, (uint64_t)v15, a3);
  v19 = (std::string *)v15;
  v20 = (std::string *)" and ";
  v21 = v15;
  v22 = (std::string *)" and ";
  v23 = (std::string *)" and ";
  if (v16 == -1)
    sub_20AECFAB8();
  v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&v19;
  ((void (*)(std::string *, _DWORD *))off_24C3F61F0[v16])(&v17, v15);
  std::to_string(&v17, *a4);
  v19 = (std::string *)v15;
  v20 = &v17;
  v21 = v15;
  v22 = &v17;
  v23 = &v17;
  if (v16 == -1)
    sub_20AECFAB8();
  v18 = &v19;
  ((void (*)(std::string ***, _DWORD *))off_24C3F61C0[v16])(&v18, v15);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v17.__r_.__value_.__l.__data_);
  v19 = (std::string *)v15;
  v20 = (std::string *)"D lines type ";
  v21 = v15;
  v22 = (std::string *)"D lines type ";
  v23 = (std::string *)"D lines type ";
  if (v16 == -1)
    sub_20AECFAB8();
  v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&v19;
  ((void (*)(std::string *, _DWORD *))off_24C3F6280[v16])(&v17, v15);
  v19 = (std::string *)v15;
  v20 = (std::string *)"(must be a multiple of ";
  v21 = v15;
  v22 = (std::string *)"(must be a multiple of ";
  v23 = (std::string *)"(must be a multiple of ";
  if (v16 == -1)
    sub_20AECFAB8();
  v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&v19;
  ((void (*)(std::string *, _DWORD *))off_24C3F6220[v16])(&v17, v15);
  std::to_string(&v17, *a5);
  v19 = (std::string *)v15;
  v20 = &v17;
  v21 = v15;
  v22 = &v17;
  v23 = &v17;
  if (v16 == -1)
    sub_20AECFAB8();
  v18 = &v19;
  ((void (*)(std::string ***, _DWORD *))off_24C3F61C0[v16])(&v18, v15);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v17.__r_.__value_.__l.__data_);
  v19 = (std::string *)v15;
  v20 = (std::string *)" bytes * ";
  v21 = v15;
  v22 = (std::string *)" bytes * ";
  v23 = (std::string *)" bytes * ";
  if (v16 == -1)
    sub_20AECFAB8();
  v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&v19;
  ((void (*)(std::string *, _DWORD *))off_24C3F6238[v16])(&v17, v15);
  std::to_string(&v17, *a6);
  v19 = (std::string *)v15;
  v20 = &v17;
  v21 = v15;
  v22 = &v17;
  v23 = &v17;
  if (v16 == -1)
    sub_20AECFAB8();
  v18 = &v19;
  ((void (*)(std::string ***, _DWORD *))off_24C3F61C0[v16])(&v18, v15);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v17.__r_.__value_.__l.__data_);
  v19 = (std::string *)v15;
  v20 = (std::string *)" * 2 values per line = ";
  v21 = v15;
  v22 = (std::string *)" * 2 values per line = ";
  v23 = (std::string *)" * 2 values per line = ";
  if (v16 == -1)
    sub_20AECFAB8();
  v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&v19;
  ((void (*)(std::string *, _DWORD *))off_24C3F6220[v16])(&v17, v15);
  std::to_string(&v17, *a7);
  v19 = (std::string *)v15;
  v20 = &v17;
  v21 = v15;
  v22 = &v17;
  v23 = &v17;
  if (v16 == -1)
    sub_20AECFAB8();
  v18 = &v19;
  ((void (*)(std::string ***, _DWORD *))off_24C3F61C0[v16])(&v18, v15);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v17.__r_.__value_.__l.__data_);
  v19 = (std::string *)v15;
  v20 = (std::string *)")";
  v21 = v15;
  v22 = (std::string *)")";
  v23 = (std::string *)")";
  if (v16 == -1)
    sub_20AECFAB8();
  v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&v19;
  ((void (*)(std::string *, _DWORD *))off_24C3F6250[v16])(&v17, v15);
  if (v16 == -1)
    sub_20AECFAB8();
  v19 = &v17;
  result = ((uint64_t (*)(std::string **, _DWORD *))off_24C3F6268[v16])(&v19, v15);
  if (v16 != -1)
    return ((uint64_t (*)(std::string **, _DWORD *))off_24C3F6190[v16])(&v19, v15);
  return result;
}

void sub_20AF70D94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_20AECFA60((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_20AF70E14(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  mach_timebase_info v7;
  int v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unsigned __int8 v12;
  unsigned __int128 *v13;
  unsigned __int128 v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  std::__shared_weak_count *v21;
  _QWORD v22[2];
  std::__shared_weak_count *v23;
  mach_timebase_info info;
  char v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  unsigned __int128 v36;
  char v37;
  _QWORD v38[6];

  v38[5] = *MEMORY[0x24BDAC8D0];
  if (*((_BYTE *)a2 + 384))
  {
    if (*((_BYTE *)a2 + 168))
    {
      v7 = (mach_timebase_info)*((_QWORD *)a2 + 19);
      v6 = *((_QWORD *)a2 + 20);
      if (*((_BYTE *)a2 + 24))
        goto LABEL_4;
    }
    else
    {
      v6 = mach_continuous_time();
      v12 = atomic_load((unsigned __int8 *)&qword_25463D170);
      if ((v12 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
      {
        mach_timebase_info(&info);
        LODWORD(v18) = info.numer;
        LODWORD(v19) = info.denom;
        *(double *)&qword_25463D168 = (double)v18 / (double)v19;
        __cxa_guard_release(&qword_25463D170);
      }
      v7 = (mach_timebase_info)llround(*(double *)&qword_25463D168 * (double)v6);
      LOBYTE(v6) = 2;
      if (*((_BYTE *)a2 + 24))
      {
LABEL_4:
        sub_20AFA84B0((uint64_t *)a2, 1000000000);
        v8 = *((unsigned __int8 *)a2 + 24);
        info = v7;
        v25 = v6;
        LOBYTE(v26) = 0;
        v28 = 0;
        if (v8)
        {
          if (*((char *)a2 + 23) < 0)
          {
            sub_20AEC60F4(&v26, *(void **)a2, *((_QWORD *)a2 + 1));
          }
          else
          {
            v26 = *a2;
            v27 = *((_QWORD *)a2 + 2);
          }
          v28 = 1;
          LOBYTE(v29) = 0;
          v31 = 0;
          if (*((_BYTE *)a2 + 120))
          {
LABEL_34:
            if (*((char *)a2 + 119) < 0)
            {
              sub_20AEC60F4(&v29, *((void **)a2 + 12), *((_QWORD *)a2 + 13));
            }
            else
            {
              v29 = a2[6];
              v30 = *((_QWORD *)a2 + 14);
            }
            v31 = 1;
            LOBYTE(v32) = 0;
            v33 = 0;
            if (!*((_BYTE *)a2 + 144))
              goto LABEL_18;
            goto LABEL_17;
          }
LABEL_16:
          LOBYTE(v32) = 0;
          v33 = 0;
          if (!*((_BYTE *)a2 + 144))
          {
LABEL_18:
            LOBYTE(v34) = 0;
            v37 = 0;
            if (*((_BYTE *)a2 + 80))
            {
              if (*((char *)a2 + 55) < 0)
              {
                sub_20AEC60F4(&v34, *((void **)a2 + 4), *((_QWORD *)a2 + 5));
              }
              else
              {
                v34 = a2[2];
                v35 = *((_QWORD *)a2 + 6);
              }
              v13 = (unsigned __int128 *)(a2 + 4);
              do
                v14 = __ldaxp(v13);
              while (__stlxp(v14, v13));
              v36 = v14;
              v37 = 1;
            }
            sub_20AED3838((uint64_t)v38, (uint64_t)(a2 + 11));
            sub_20AF71940(a1, (uint64_t)&info, v22);
            sub_20AFA7F18(a3, (uint64_t)v22);
            v15 = v23;
            if (v23)
            {
              p_shared_owners = (unint64_t *)&v23->__shared_owners_;
              do
                v17 = __ldaxr(p_shared_owners);
              while (__stlxr(v17 - 1, p_shared_owners));
              if (!v17)
              {
                ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
                std::__shared_weak_count::__release_weak(v15);
              }
            }
            sub_20AF4EA3C((uint64_t)&info);
            return;
          }
LABEL_17:
          v32 = a2[8];
          v33 = 1;
          goto LABEL_18;
        }
LABEL_15:
        LOBYTE(v29) = 0;
        v31 = 0;
        if (*((_BYTE *)a2 + 120))
          goto LABEL_34;
        goto LABEL_16;
      }
    }
    info = v7;
    v25 = v6;
    LOBYTE(v26) = 0;
    v28 = 0;
    goto LABEL_15;
  }
  sub_20AF71800(a1, v20);
  sub_20AFA7F18(a3, (uint64_t)v20);
  v9 = v21;
  if (v21)
  {
    v10 = (unint64_t *)&v21->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_20AF71124(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463D170);
  _Unwind_Resume(a1);
}

void sub_20AF7113C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  if (a23)
  {
    if (a22 < 0)
    {
      operator delete(__p);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_20AF711F4(_DWORD ***a1)
{
  return sub_20AF71210(**a1, (char *)(*a1)[1]);
}

void sub_20AF71200(uint64_t a1, uint64_t a2)
{
  sub_20AF71300((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

_DWORD *sub_20AF71210(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C3F6190[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_20AF71300(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24C3F6190[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_20AEC7620((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_20AF714B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_20AF714F8(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_20AF715F0((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_20AF715E8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_20AF715F0(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20AEC60B8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60CC();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_20AF717EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC65A4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF71800@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  unsigned __int8 v5;
  unint64_t v7;
  unint64_t v8;
  mach_timebase_info info;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v4 = mach_continuous_time();
  v5 = atomic_load((unsigned __int8 *)&qword_25463D170);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
  {
    mach_timebase_info(&info);
    LODWORD(v7) = info.numer;
    LODWORD(v8) = info.denom;
    *(double *)&qword_25463D168 = (double)v7 / (double)v8;
    __cxa_guard_release(&qword_25463D170);
  }
  v10[0] = llround(*(double *)&qword_25463D168 * (double)v4);
  v10[1] = 2;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  sub_20AF71940(a1, (uint64_t)v10, a2);
  return sub_20AF4EA3C((uint64_t)v10);
}

void sub_20AF71914(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463D170);
  _Unwind_Resume(a1);
}

void sub_20AF7192C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AF4EA3C((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF71940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  _QWORD *result;

  v6 = operator new();
  *(_QWORD *)v6 = &off_24C3F6680;
  *(_OWORD *)(v6 + 8) = *(_OWORD *)a1;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  sub_20AF4CAF4(v6 + 32, a2);
  *(_QWORD *)v6 = &off_24C3F6600;
  *a3 = &off_24C411E78;
  a3[1] = v6;
  result = (_QWORD *)operator new();
  *result = &off_24C411F70;
  result[1] = 0;
  result[2] = 0;
  result[3] = v6;
  a3[2] = result;
  return result;
}

void sub_20AF719F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_20AF71A0C(_Unwind_Exception *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  MEMORY[0x20BD3583C](v1, 0x10B3C40E92279A6);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF71A68(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F6680;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_20AF71AE0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F6680;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF71B58(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20AF71B60(_QWORD *a1, _QWORD *lpsrc)
{
  uint64_t result;
  uint64_t v5;
  unsigned __int8 *v6;
  int v7;
  unsigned __int8 *v8;
  _QWORD v9[3];
  char v10;

  result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C411EB8, (const struct __class_type_info *)&unk_24C3F6640, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      v5 = result;
      v6 = (unsigned __int8 *)a1[1];
      v7 = *v6;
      v8 = *(unsigned __int8 **)(v5 + 8);
      if (v7 == *v8)
      {
        v9[0] = &v10;
        v9[1] = v6;
        v9[2] = v8;
        return sub_20B43E450(v7, (uint64_t)v9);
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

void sub_20AF71C08(uint64_t a1)
{
  __int128 *v2;
  void *__p;
  char v4;

  v2 = (__int128 *)sub_20AF72EEC();
  sub_20AF71CBC(a1);
  sub_20AF4DD70(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",", a1 + 32, (uint64_t)"}");
  if (v4 < 0)
    operator delete(__p);
}

void sub_20AF71CA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF71CBC(uint64_t a1)
{
  unsigned __int8 v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;

  v2 = atomic_load((unsigned __int8 *)&qword_254632258);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254632258))
  {
    v4 = sub_20AF72B3C();
    v5 = *((_QWORD *)v4 + 1);
    if (*((char *)v4 + 23) >= 0)
    {
      v6 = *((unsigned __int8 *)v4 + 23);
    }
    else
    {
      v4 = *(__int128 **)v4;
      v6 = v5;
    }
    sub_20AF4E53C((char *)v4, v6, "::", 2, 0, (uint64_t)&v8);
    if (*(char *)(v9 - 1) < 0)
    {
      sub_20AEC60F4(&xmmword_254632240, *(void **)(v9 - 24), *(_QWORD *)(v9 - 16));
    }
    else
    {
      v7 = *(_OWORD *)(v9 - 24);
      qword_254632250 = *(_QWORD *)(v9 - 8);
      xmmword_254632240 = v7;
    }
    sub_20AEC2E90(&v8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254632240, &dword_20AEBB000);
    __cxa_guard_release(&qword_254632258);
  }
  return sub_20AF732AC(&xmmword_254632240, (uint64_t)"{", (unsigned __int8 **)(a1 + 8), (uint64_t)"}");
}

void sub_20AF71DCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_20AEC2E90(&a9);
  __cxa_guard_abort(&qword_254632258);
  _Unwind_Resume(a1);
}

void sub_20AF71DEC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254632258);
  _Unwind_Resume(a1);
}

void sub_20AF71E04(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 12;
}

void sub_20AF71E30(uint64_t (***lpsrc)()@<X0>, _QWORD *a2@<X8>)
{
  sub_20B2346E4(lpsrc, 12, a2);
}

_QWORD *sub_20AF71E68(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F6680;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_20AF71EE0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F6680;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF71F58(uint64_t a1)
{
  __int128 *v2;

  v2 = sub_20AF725D8();
  return sub_20AF720AC(v2, (uint64_t)"{", (unsigned __int8 **)(a1 + 8), (uint64_t)",", a1 + 32, (uint64_t)"}");
}

uint64_t sub_20AF71FB0(uint64_t a1)
{
  uint64_t result;
  _BYTE v2[24];
  int v3;
  char v4;
  _QWORD v5[2];

  v3 = 0;
  sub_20AF722D8((uint64_t)v5, (uint64_t)v2, (unsigned __int8 **)(a1 + 8));
  if (v3 == -1)
    sub_20AECFAB8();
  v5[0] = &v4;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24C3F6268[v3])(v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24C3F6190[v3])(v5, v2);
  return result;
}

void sub_20AF72048(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;

  if (a13 != -1)
    ((void (*)(uint64_t, char *))off_24C3F6190[a13])(v13 - 17, &a10);
  _Unwind_Resume(exception_object);
}

void sub_20AF72080(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_20AF720AC(__int128 *a1, uint64_t a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  char v12;
  char v13;
  __int128 __dst;
  uint64_t v15;
  int v16;
  __int128 *p_dst;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 **p_p_dst;

  v16 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v15 = *((_QWORD *)a1 + 2);
  }
  v16 = 1;
  p_dst = &__dst;
  v18 = a2;
  v19 = &__dst;
  v20 = a2;
  v21 = a2;
  sub_20AED5C4C((uint64_t *)&v19, (uint64_t)&__dst);
  sub_20AF722D8((uint64_t)&v13, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v18 = a4;
  v19 = &__dst;
  v20 = a4;
  v21 = a4;
  if (v16 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F6250[v16])(&p_p_dst, &__dst);
  sub_20AF4D170((uint64_t)&v12, (uint64_t)&__dst, a5);
  p_dst = &__dst;
  v18 = a6;
  v19 = &__dst;
  v20 = a6;
  v21 = a6;
  if (v16 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F6250[v16])(&p_p_dst, &__dst);
  if (v16 == -1)
    sub_20AECFAB8();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6268[v16])(&p_dst, &__dst);
  if (v16 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6190[v16])(&p_dst, &__dst);
  return result;
}

void sub_20AF72248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF72260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF72274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF72288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF7229C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF722B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF722C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF722D8(uint64_t a1, uint64_t a2, unsigned __int8 **a3)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  int v8;
  size_t v9;
  void **v10;
  unint64_t v11;
  unint64_t v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *__dst[2];
  unint64_t v22;
  _QWORD *v23[5];
  _QWORD *v24;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20AEC0BD8(v5);
  v24 = (_QWORD *)v5;
  v6 = sub_20AEC01D0((_QWORD *)(v5 + 16), (uint64_t)"{", 1);
  LOBYTE(v23[0]) = **a3;
  v7 = sub_20B5220B4(v6, v23);
  sub_20AEC01D0(v7, (uint64_t)",", 1);
  v23[0] = (_QWORD *)(v5 + 16);
  sub_20B436438(**a3, a3, v23);
  sub_20AEC01D0((_QWORD *)(v5 + 16), (uint64_t)"}", 1);
  v8 = *(_DWORD *)(v5 + 120);
  if ((v8 & 0x10) != 0)
  {
    v11 = *(_QWORD *)(v5 + 112);
    v12 = *(_QWORD *)(v5 + 72);
    if (v11 < v12)
    {
      *(_QWORD *)(v5 + 112) = v12;
      v11 = v12;
    }
    v13 = *(const void **)(v5 + 64);
    v9 = v11 - (_QWORD)v13;
    if (v11 - (unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v8 & 8) == 0)
    {
      v9 = 0;
      HIBYTE(v22) = 0;
      v10 = __dst;
      goto LABEL_14;
    }
    v13 = *(const void **)(v5 + 40);
    v9 = *(_QWORD *)(v5 + 56) - (_QWORD)v13;
    if (v9 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_20AEC0138();
  }
  if (v9 >= 0x17)
  {
    v14 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v14 = v9 | 7;
    v15 = v14 + 1;
    v10 = (void **)operator new(v14 + 1);
    __dst[1] = (void *)v9;
    v22 = v15 | 0x8000000000000000;
    __dst[0] = v10;
    goto LABEL_13;
  }
  HIBYTE(v22) = v9;
  v10 = __dst;
  if (v9)
LABEL_13:
    memmove(v10, v13, v9);
LABEL_14:
  *((_BYTE *)v10 + v9) = 0;
  v16 = v24;
  if (v24)
  {
    v17 = MEMORY[0x24BEDB7F0];
    v18 = *MEMORY[0x24BEDB7F0];
    *v24 = *MEMORY[0x24BEDB7F0];
    v19 = *(_QWORD *)(v17 + 72);
    *(_QWORD *)((char *)v16 + *(_QWORD *)(v18 - 24)) = *(_QWORD *)(v17 + 64);
    v16[3] = MEMORY[0x24BEDB848] + 16;
    v16[2] = v19;
    if (*((char *)v16 + 111) < 0)
      operator delete((void *)v16[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v16 + 16);
    MEMORY[0x20BD3583C](v16, 0x10B2C40EED050F3);
  }
  v23[0] = (_QWORD *)a2;
  v23[1] = __dst;
  v23[2] = (_QWORD *)a2;
  v23[3] = __dst;
  v23[4] = __dst;
  v20 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v20 == -1)
    sub_20AECFAB8();
  v24 = v23;
  ((void (*)(_QWORD **, uint64_t))off_24C3F61C0[v20])(&v24, a2);
  if (SHIBYTE(v22) < 0)
    operator delete(__dst[0]);
}

void sub_20AF72584(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20AF725A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF725C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B52CE84((uint64_t *)(v1 - 56));
  _Unwind_Resume(a1);
}

__int128 *sub_20AF725D8()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546320D8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546320D8))
    return &xmmword_2546320C0;
  v2 = sub_20AF726B4();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_2546320C0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2546320D0 = v2->__r_.__value_.__r.__words[2];
    xmmword_2546320C0 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546320C0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546320D8);
  return &xmmword_2546320C0;
}

void sub_20AF7269C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546320D8);
  _Unwind_Resume(a1);
}

std::string *sub_20AF726B4()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546320F8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546320F8))
    return &stru_2546320E0;
  sub_20AF72958((uint64_t)__p);
  sub_20AF727A4((char *)__p, &stru_2546320E0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2546320E0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546320F8);
  return &stru_2546320E0;
}

void sub_20AF72764(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2546320F8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2546320F8);
  _Unwind_Resume(a1);
}

void sub_20AF727A4(char *a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v4;
  __int128 v5;
  __int128 *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *__dst[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = sub_20AF72B3C();
  if (*((char *)v4 + 23) < 0)
  {
    sub_20AEC60F4(__dst, *(void **)v4, *((_QWORD *)v4 + 1));
  }
  else
  {
    v5 = *v4;
    v16 = *((_QWORD *)v4 + 2);
    *(_OWORD *)__dst = v5;
  }
  v6 = sub_20AF4DB74();
  if (*((char *)v6 + 23) < 0)
  {
    sub_20AEC60F4(&v17, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = v7;
  }
  sub_20AEC7620(&__p, (uint64_t)__dst, 2uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_19;
}

void sub_20AF72908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_20AEC2E90((void **)&a9);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF72958(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2546321B8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2546321B8))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::con::Lines<2>>]", qword_2546321A0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546321A0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546321B8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2546321D8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2546321D8))
  {
    v5 = sub_20AED4780(qword_2546321A0, "<", 0);
    sub_20AED467C(qword_2546321A0, 0, v5, qword_2546321C0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546321C0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546321D8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2546321F8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2546321F8))
  {
    sub_20B531658((uint64_t)qword_2546321C0, (uint64_t)&xmmword_2546321E0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546321E0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546321F8);
  }
  if (byte_2546321F7 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_2546321E0, *((unint64_t *)&xmmword_2546321E0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2546321E0;
    *(_QWORD *)(a1 + 16) = unk_2546321F0;
  }
}

void sub_20AF72AF4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546321F8);
  _Unwind_Resume(a1);
}

void sub_20AF72B0C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546321D8);
  _Unwind_Resume(a1);
}

void sub_20AF72B24(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546321B8);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF72B3C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254632118);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254632118))
    return &xmmword_254632100;
  v2 = sub_20AF72C18();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_254632100, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_254632110 = v2->__r_.__value_.__r.__words[2];
    xmmword_254632100 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254632100, &dword_20AEBB000);
  __cxa_guard_release(&qword_254632118);
  return &xmmword_254632100;
}

void sub_20AF72C00(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254632118);
  _Unwind_Resume(a1);
}

std::string *sub_20AF72C18()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254632138);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254632138))
    return &stru_254632120;
  sub_20AF72D08((uint64_t)__p);
  sub_20AF6D7B0((char *)__p, &stru_254632120);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254632120, &dword_20AEBB000);
  __cxa_guard_release(&qword_254632138);
  return &stru_254632120;
}

void sub_20AF72CC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254632138);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254632138);
  _Unwind_Resume(a1);
}

void sub_20AF72D08(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254632158);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254632158))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::con::Lines<2>]", qword_254632140);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254632140, &dword_20AEBB000);
    __cxa_guard_release(&qword_254632158);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254632178);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254632178))
  {
    v5 = sub_20AED4780(qword_254632140, "<", 0);
    sub_20AED467C(qword_254632140, 0, v5, qword_254632160);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254632160, &dword_20AEBB000);
    __cxa_guard_release(&qword_254632178);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254632198);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254632198))
  {
    sub_20B531658((uint64_t)qword_254632160, (uint64_t)&xmmword_254632180);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254632180, &dword_20AEBB000);
    __cxa_guard_release(&qword_254632198);
  }
  if (byte_254632197 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_254632180, *((unint64_t *)&xmmword_254632180 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_254632180;
    *(_QWORD *)(a1 + 16) = unk_254632190;
  }
}

void sub_20AF72EA4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254632198);
  _Unwind_Resume(a1);
}

void sub_20AF72EBC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254632178);
  _Unwind_Resume(a1);
}

void sub_20AF72ED4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254632158);
  _Unwind_Resume(a1);
}

std::string *sub_20AF72EEC()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void *v8[3];
  void *v9[2];
  char v10;
  void *__dst[2];
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  void *__p[2];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254632218);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254632218))
  {
    sub_20AEC0D64(v9, "viz::PackageData");
    v2 = sub_20AF72B3C();
    if (*((char *)v2 + 23) < 0)
    {
      sub_20AEC60F4(__dst, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      v12 = *((_QWORD *)v2 + 2);
      *(_OWORD *)__dst = v3;
    }
    *(_OWORD *)v13 = *(_OWORD *)"viz::Package";
    v14 = 0xC00000000000000;
    v4 = sub_20AF731B4();
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
    }
    else
    {
      v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      v16 = v4->__r_.__value_.__r.__words[2];
      v15 = v5;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    v18 = 0x400000000000000;
    sub_20AEC7620(v8, (uint64_t)__dst, 4uLL);
    sub_20B53170C((char *)v9, (uint64_t *)v8, &stru_254632200, v6, v7);
    sub_20AEC2E90(v8);
    if (SHIBYTE(v18) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v16) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v14) & 0x80000000) == 0)
          goto LABEL_13;
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v13[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v10 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254632200, &dword_20AEBB000);
        __cxa_guard_release(&qword_254632218);
        return &stru_254632200;
      }
LABEL_20:
      operator delete(v9[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_20;
  }
  return &stru_254632200;
}

void sub_20AF730D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  sub_20AEC2E90(&a10);
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_254632218);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_254632218);
  _Unwind_Resume(a1);
}

std::string *sub_20AF731B4()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254632238);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254632238))
    return &stru_254632220;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 12U]", __p);
  sub_20B531884((uint64_t)__p, &stru_254632220);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254632220, &dword_20AEBB000);
  __cxa_guard_release(&qword_254632238);
  return &stru_254632220;
}

void sub_20AF7326C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254632238);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254632238);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF732AC(__int128 *a1, uint64_t a2, unsigned __int8 **a3, uint64_t a4)
{
  uint64_t result;
  char v8;
  __int128 __dst;
  uint64_t v10;
  int v11;
  __int128 *p_dst;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 **p_p_dst;

  v11 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v10 = *((_QWORD *)a1 + 2);
  }
  v11 = 1;
  p_dst = &__dst;
  v13 = a2;
  v14 = &__dst;
  v15 = a2;
  v16 = a2;
  sub_20AED5C4C((uint64_t *)&v14, (uint64_t)&__dst);
  sub_20AF722D8((uint64_t)&v8, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v13 = a4;
  v14 = &__dst;
  v15 = a4;
  v16 = a4;
  if (v11 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F6250[v11])(&p_p_dst, &__dst);
  if (v11 == -1)
    sub_20AECFAB8();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6268[v11])(&p_dst, &__dst);
  if (v11 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6190[v11])(&p_dst, &__dst);
  return result;
}

void sub_20AF733EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF73404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF73418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF7342C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF73440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF73454(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  mach_timebase_info v7;
  int v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unsigned __int8 v12;
  unsigned __int128 *v13;
  unsigned __int128 v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  std::__shared_weak_count *v21;
  _QWORD v22[2];
  std::__shared_weak_count *v23;
  mach_timebase_info info;
  char v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  unsigned __int128 v36;
  char v37;
  _QWORD v38[6];

  v38[5] = *MEMORY[0x24BDAC8D0];
  if (*((_BYTE *)a2 + 384))
  {
    if (*((_BYTE *)a2 + 168))
    {
      v7 = (mach_timebase_info)*((_QWORD *)a2 + 19);
      v6 = *((_QWORD *)a2 + 20);
      if (*((_BYTE *)a2 + 24))
        goto LABEL_4;
    }
    else
    {
      v6 = mach_continuous_time();
      v12 = atomic_load((unsigned __int8 *)&qword_25463D170);
      if ((v12 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
      {
        mach_timebase_info(&info);
        LODWORD(v18) = info.numer;
        LODWORD(v19) = info.denom;
        *(double *)&qword_25463D168 = (double)v18 / (double)v19;
        __cxa_guard_release(&qword_25463D170);
      }
      v7 = (mach_timebase_info)llround(*(double *)&qword_25463D168 * (double)v6);
      LOBYTE(v6) = 2;
      if (*((_BYTE *)a2 + 24))
      {
LABEL_4:
        sub_20AFA84B0((uint64_t *)a2, 1000000000);
        v8 = *((unsigned __int8 *)a2 + 24);
        info = v7;
        v25 = v6;
        LOBYTE(v26) = 0;
        v28 = 0;
        if (v8)
        {
          if (*((char *)a2 + 23) < 0)
          {
            sub_20AEC60F4(&v26, *(void **)a2, *((_QWORD *)a2 + 1));
          }
          else
          {
            v26 = *a2;
            v27 = *((_QWORD *)a2 + 2);
          }
          v28 = 1;
          LOBYTE(v29) = 0;
          v31 = 0;
          if (*((_BYTE *)a2 + 120))
          {
LABEL_34:
            if (*((char *)a2 + 119) < 0)
            {
              sub_20AEC60F4(&v29, *((void **)a2 + 12), *((_QWORD *)a2 + 13));
            }
            else
            {
              v29 = a2[6];
              v30 = *((_QWORD *)a2 + 14);
            }
            v31 = 1;
            LOBYTE(v32) = 0;
            v33 = 0;
            if (!*((_BYTE *)a2 + 144))
              goto LABEL_18;
            goto LABEL_17;
          }
LABEL_16:
          LOBYTE(v32) = 0;
          v33 = 0;
          if (!*((_BYTE *)a2 + 144))
          {
LABEL_18:
            LOBYTE(v34) = 0;
            v37 = 0;
            if (*((_BYTE *)a2 + 80))
            {
              if (*((char *)a2 + 55) < 0)
              {
                sub_20AEC60F4(&v34, *((void **)a2 + 4), *((_QWORD *)a2 + 5));
              }
              else
              {
                v34 = a2[2];
                v35 = *((_QWORD *)a2 + 6);
              }
              v13 = (unsigned __int128 *)(a2 + 4);
              do
                v14 = __ldaxp(v13);
              while (__stlxp(v14, v13));
              v36 = v14;
              v37 = 1;
            }
            sub_20AED3838((uint64_t)v38, (uint64_t)(a2 + 11));
            sub_20AF73974(a1, (uint64_t)&info, v22);
            sub_20AFA7F18(a3, (uint64_t)v22);
            v15 = v23;
            if (v23)
            {
              p_shared_owners = (unint64_t *)&v23->__shared_owners_;
              do
                v17 = __ldaxr(p_shared_owners);
              while (__stlxr(v17 - 1, p_shared_owners));
              if (!v17)
              {
                ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
                std::__shared_weak_count::__release_weak(v15);
              }
            }
            sub_20AF4EA3C((uint64_t)&info);
            return;
          }
LABEL_17:
          v32 = a2[8];
          v33 = 1;
          goto LABEL_18;
        }
LABEL_15:
        LOBYTE(v29) = 0;
        v31 = 0;
        if (*((_BYTE *)a2 + 120))
          goto LABEL_34;
        goto LABEL_16;
      }
    }
    info = v7;
    v25 = v6;
    LOBYTE(v26) = 0;
    v28 = 0;
    goto LABEL_15;
  }
  sub_20AF73834(a1, v20);
  sub_20AFA7F18(a3, (uint64_t)v20);
  v9 = v21;
  if (v21)
  {
    v10 = (unint64_t *)&v21->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_20AF73764(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463D170);
  _Unwind_Resume(a1);
}

void sub_20AF7377C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  if (a23)
  {
    if (a22 < 0)
    {
      operator delete(__p);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF73834@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  unsigned __int8 v5;
  unint64_t v7;
  unint64_t v8;
  mach_timebase_info info;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v4 = mach_continuous_time();
  v5 = atomic_load((unsigned __int8 *)&qword_25463D170);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
  {
    mach_timebase_info(&info);
    LODWORD(v7) = info.numer;
    LODWORD(v8) = info.denom;
    *(double *)&qword_25463D168 = (double)v7 / (double)v8;
    __cxa_guard_release(&qword_25463D170);
  }
  v10[0] = llround(*(double *)&qword_25463D168 * (double)v4);
  v10[1] = 2;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  sub_20AF73974(a1, (uint64_t)v10, a2);
  return sub_20AF4EA3C((uint64_t)v10);
}

void sub_20AF73948(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463D170);
  _Unwind_Resume(a1);
}

void sub_20AF73960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AF4EA3C((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF73974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  _QWORD *result;

  v6 = operator new();
  *(_QWORD *)v6 = &off_24C3F6750;
  *(_OWORD *)(v6 + 8) = *(_OWORD *)a1;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  sub_20AF4CAF4(v6 + 32, a2);
  *(_QWORD *)v6 = &off_24C3F66D0;
  *a3 = &off_24C411E78;
  a3[1] = v6;
  result = (_QWORD *)operator new();
  *result = &off_24C411F70;
  result[1] = 0;
  result[2] = 0;
  result[3] = v6;
  a3[2] = result;
  return result;
}

void sub_20AF73A24(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_20AF73A40(_Unwind_Exception *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  MEMORY[0x20BD3583C](v1, 0x10B3C40E92279A6);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF73A9C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F6750;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_20AF73B14(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F6750;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF73B8C(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20AF73B94(_QWORD *a1, _QWORD *lpsrc)
{
  uint64_t result;
  uint64_t v5;
  unsigned __int8 *v6;
  int v7;
  unsigned __int8 *v8;
  _QWORD v9[3];
  char v10;

  result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C411EB8, (const struct __class_type_info *)&unk_24C3F6710, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      v5 = result;
      v6 = (unsigned __int8 *)a1[1];
      v7 = *v6;
      v8 = *(unsigned __int8 **)(v5 + 8);
      if (v7 == *v8)
      {
        v9[0] = &v10;
        v9[1] = v6;
        v9[2] = v8;
        return sub_20B43E450(v7, (uint64_t)v9);
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

void sub_20AF73C3C(uint64_t a1)
{
  __int128 *v2;
  void *__p;
  char v4;

  v2 = (__int128 *)sub_20AF74F20();
  sub_20AF73CF0(a1);
  sub_20AF4DD70(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",", a1 + 32, (uint64_t)"}");
  if (v4 < 0)
    operator delete(__p);
}

void sub_20AF73CD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF73CF0(uint64_t a1)
{
  unsigned __int8 v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;

  v2 = atomic_load((unsigned __int8 *)&qword_2546323F8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2546323F8))
  {
    v4 = sub_20AF74B70();
    v5 = *((_QWORD *)v4 + 1);
    if (*((char *)v4 + 23) >= 0)
    {
      v6 = *((unsigned __int8 *)v4 + 23);
    }
    else
    {
      v4 = *(__int128 **)v4;
      v6 = v5;
    }
    sub_20AF4E53C((char *)v4, v6, "::", 2, 0, (uint64_t)&v8);
    if (*(char *)(v9 - 1) < 0)
    {
      sub_20AEC60F4(&xmmword_2546323E0, *(void **)(v9 - 24), *(_QWORD *)(v9 - 16));
    }
    else
    {
      v7 = *(_OWORD *)(v9 - 24);
      qword_2546323F0 = *(_QWORD *)(v9 - 8);
      xmmword_2546323E0 = v7;
    }
    sub_20AEC2E90(&v8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546323E0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546323F8);
  }
  return sub_20AF752E0(&xmmword_2546323E0, (uint64_t)"{", (unsigned __int8 **)(a1 + 8), (uint64_t)"}");
}

void sub_20AF73E00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_20AEC2E90(&a9);
  __cxa_guard_abort(&qword_2546323F8);
  _Unwind_Resume(a1);
}

void sub_20AF73E20(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546323F8);
  _Unwind_Resume(a1);
}

void sub_20AF73E38(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 13;
}

void sub_20AF73E64(uint64_t (***lpsrc)()@<X0>, _QWORD *a2@<X8>)
{
  sub_20B2346E4(lpsrc, 13, a2);
}

_QWORD *sub_20AF73E9C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F6750;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_20AF73F14(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F6750;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF73F8C(uint64_t a1)
{
  __int128 *v2;

  v2 = sub_20AF7460C();
  return sub_20AF740E0(v2, (uint64_t)"{", (unsigned __int8 **)(a1 + 8), (uint64_t)",", a1 + 32, (uint64_t)"}");
}

uint64_t sub_20AF73FE4(uint64_t a1)
{
  uint64_t result;
  _BYTE v2[24];
  int v3;
  char v4;
  _QWORD v5[2];

  v3 = 0;
  sub_20AF7430C((uint64_t)v5, (uint64_t)v2, (unsigned __int8 **)(a1 + 8));
  if (v3 == -1)
    sub_20AECFAB8();
  v5[0] = &v4;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24C3F6268[v3])(v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24C3F6190[v3])(v5, v2);
  return result;
}

void sub_20AF7407C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;

  if (a13 != -1)
    ((void (*)(uint64_t, char *))off_24C3F6190[a13])(v13 - 17, &a10);
  _Unwind_Resume(exception_object);
}

void sub_20AF740B4(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_20AF740E0(__int128 *a1, uint64_t a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  char v12;
  char v13;
  __int128 __dst;
  uint64_t v15;
  int v16;
  __int128 *p_dst;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 **p_p_dst;

  v16 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v15 = *((_QWORD *)a1 + 2);
  }
  v16 = 1;
  p_dst = &__dst;
  v18 = a2;
  v19 = &__dst;
  v20 = a2;
  v21 = a2;
  sub_20AED5C4C((uint64_t *)&v19, (uint64_t)&__dst);
  sub_20AF7430C((uint64_t)&v13, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v18 = a4;
  v19 = &__dst;
  v20 = a4;
  v21 = a4;
  if (v16 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F6250[v16])(&p_p_dst, &__dst);
  sub_20AF4D170((uint64_t)&v12, (uint64_t)&__dst, a5);
  p_dst = &__dst;
  v18 = a6;
  v19 = &__dst;
  v20 = a6;
  v21 = a6;
  if (v16 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F6250[v16])(&p_p_dst, &__dst);
  if (v16 == -1)
    sub_20AECFAB8();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6268[v16])(&p_dst, &__dst);
  if (v16 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6190[v16])(&p_dst, &__dst);
  return result;
}

void sub_20AF7427C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF74294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF742A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF742BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF742D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF742E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF742F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF7430C(uint64_t a1, uint64_t a2, unsigned __int8 **a3)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  int v8;
  size_t v9;
  void **v10;
  unint64_t v11;
  unint64_t v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *__dst[2];
  unint64_t v22;
  _QWORD *v23[5];
  _QWORD *v24;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20AEC0BD8(v5);
  v24 = (_QWORD *)v5;
  v6 = sub_20AEC01D0((_QWORD *)(v5 + 16), (uint64_t)"{", 1);
  LOBYTE(v23[0]) = **a3;
  v7 = sub_20B5220B4(v6, v23);
  sub_20AEC01D0(v7, (uint64_t)",", 1);
  v23[0] = (_QWORD *)(v5 + 16);
  sub_20B438D08(**a3, a3, v23);
  sub_20AEC01D0((_QWORD *)(v5 + 16), (uint64_t)"}", 1);
  v8 = *(_DWORD *)(v5 + 120);
  if ((v8 & 0x10) != 0)
  {
    v11 = *(_QWORD *)(v5 + 112);
    v12 = *(_QWORD *)(v5 + 72);
    if (v11 < v12)
    {
      *(_QWORD *)(v5 + 112) = v12;
      v11 = v12;
    }
    v13 = *(const void **)(v5 + 64);
    v9 = v11 - (_QWORD)v13;
    if (v11 - (unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v8 & 8) == 0)
    {
      v9 = 0;
      HIBYTE(v22) = 0;
      v10 = __dst;
      goto LABEL_14;
    }
    v13 = *(const void **)(v5 + 40);
    v9 = *(_QWORD *)(v5 + 56) - (_QWORD)v13;
    if (v9 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_20AEC0138();
  }
  if (v9 >= 0x17)
  {
    v14 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v14 = v9 | 7;
    v15 = v14 + 1;
    v10 = (void **)operator new(v14 + 1);
    __dst[1] = (void *)v9;
    v22 = v15 | 0x8000000000000000;
    __dst[0] = v10;
    goto LABEL_13;
  }
  HIBYTE(v22) = v9;
  v10 = __dst;
  if (v9)
LABEL_13:
    memmove(v10, v13, v9);
LABEL_14:
  *((_BYTE *)v10 + v9) = 0;
  v16 = v24;
  if (v24)
  {
    v17 = MEMORY[0x24BEDB7F0];
    v18 = *MEMORY[0x24BEDB7F0];
    *v24 = *MEMORY[0x24BEDB7F0];
    v19 = *(_QWORD *)(v17 + 72);
    *(_QWORD *)((char *)v16 + *(_QWORD *)(v18 - 24)) = *(_QWORD *)(v17 + 64);
    v16[3] = MEMORY[0x24BEDB848] + 16;
    v16[2] = v19;
    if (*((char *)v16 + 111) < 0)
      operator delete((void *)v16[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v16 + 16);
    MEMORY[0x20BD3583C](v16, 0x10B2C40EED050F3);
  }
  v23[0] = (_QWORD *)a2;
  v23[1] = __dst;
  v23[2] = (_QWORD *)a2;
  v23[3] = __dst;
  v23[4] = __dst;
  v20 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v20 == -1)
    sub_20AECFAB8();
  v24 = v23;
  ((void (*)(_QWORD **, uint64_t))off_24C3F61C0[v20])(&v24, a2);
  if (SHIBYTE(v22) < 0)
    operator delete(__dst[0]);
}

void sub_20AF745B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20AF745DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF745F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B52CE84((uint64_t *)(v1 - 56));
  _Unwind_Resume(a1);
}

__int128 *sub_20AF7460C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254632278);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254632278))
    return &xmmword_254632260;
  v2 = sub_20AF746E8();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_254632260, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_254632270 = v2->__r_.__value_.__r.__words[2];
    xmmword_254632260 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254632260, &dword_20AEBB000);
  __cxa_guard_release(&qword_254632278);
  return &xmmword_254632260;
}

void sub_20AF746D0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254632278);
  _Unwind_Resume(a1);
}

std::string *sub_20AF746E8()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254632298);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254632298))
    return &stru_254632280;
  sub_20AF7498C((uint64_t)__p);
  sub_20AF747D8((char *)__p, &stru_254632280);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254632280, &dword_20AEBB000);
  __cxa_guard_release(&qword_254632298);
  return &stru_254632280;
}

void sub_20AF74798(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254632298);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254632298);
  _Unwind_Resume(a1);
}

void sub_20AF747D8(char *a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v4;
  __int128 v5;
  __int128 *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *__dst[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = sub_20AF74B70();
  if (*((char *)v4 + 23) < 0)
  {
    sub_20AEC60F4(__dst, *(void **)v4, *((_QWORD *)v4 + 1));
  }
  else
  {
    v5 = *v4;
    v16 = *((_QWORD *)v4 + 2);
    *(_OWORD *)__dst = v5;
  }
  v6 = sub_20AF4DB74();
  if (*((char *)v6 + 23) < 0)
  {
    sub_20AEC60F4(&v17, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = v7;
  }
  sub_20AEC7620(&__p, (uint64_t)__dst, 2uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_19;
}

void sub_20AF7493C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_20AEC2E90((void **)&a9);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF7498C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254632358);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254632358))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::con::Lines<3>>]", qword_254632340);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254632340, &dword_20AEBB000);
    __cxa_guard_release(&qword_254632358);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254632378);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254632378))
  {
    v5 = sub_20AED4780(qword_254632340, "<", 0);
    sub_20AED467C(qword_254632340, 0, v5, qword_254632360);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254632360, &dword_20AEBB000);
    __cxa_guard_release(&qword_254632378);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254632398);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254632398))
  {
    sub_20B531658((uint64_t)qword_254632360, (uint64_t)&xmmword_254632380);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254632380, &dword_20AEBB000);
    __cxa_guard_release(&qword_254632398);
  }
  if (byte_254632397 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_254632380, *((unint64_t *)&xmmword_254632380 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_254632380;
    *(_QWORD *)(a1 + 16) = unk_254632390;
  }
}

void sub_20AF74B28(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254632398);
  _Unwind_Resume(a1);
}

void sub_20AF74B40(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254632378);
  _Unwind_Resume(a1);
}

void sub_20AF74B58(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254632358);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF74B70()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546322B8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546322B8))
    return &xmmword_2546322A0;
  v2 = sub_20AF74C4C();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_2546322A0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2546322B0 = v2->__r_.__value_.__r.__words[2];
    xmmword_2546322A0 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2546322A0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546322B8);
  return &xmmword_2546322A0;
}

void sub_20AF74C34(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546322B8);
  _Unwind_Resume(a1);
}

std::string *sub_20AF74C4C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546322D8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546322D8))
    return &stru_2546322C0;
  sub_20AF74D3C((uint64_t)__p);
  sub_20AF70068((char *)__p, &stru_2546322C0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2546322C0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546322D8);
  return &stru_2546322C0;
}

void sub_20AF74CFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2546322D8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2546322D8);
  _Unwind_Resume(a1);
}

void sub_20AF74D3C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2546322F8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2546322F8))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::con::Lines<3>]", qword_2546322E0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2546322E0, &dword_20AEBB000);
    __cxa_guard_release(&qword_2546322F8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254632318);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254632318))
  {
    v5 = sub_20AED4780(qword_2546322E0, "<", 0);
    sub_20AED467C(qword_2546322E0, 0, v5, qword_254632300);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254632300, &dword_20AEBB000);
    __cxa_guard_release(&qword_254632318);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254632338);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254632338))
  {
    sub_20B531658((uint64_t)qword_254632300, (uint64_t)&xmmword_254632320);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254632320, &dword_20AEBB000);
    __cxa_guard_release(&qword_254632338);
  }
  if (byte_254632337 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_254632320, *((unint64_t *)&xmmword_254632320 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_254632320;
    *(_QWORD *)(a1 + 16) = unk_254632330;
  }
}

void sub_20AF74ED8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254632338);
  _Unwind_Resume(a1);
}

void sub_20AF74EF0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254632318);
  _Unwind_Resume(a1);
}

void sub_20AF74F08(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2546322F8);
  _Unwind_Resume(a1);
}

std::string *sub_20AF74F20()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void *v8[3];
  void *v9[2];
  char v10;
  void *__dst[2];
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  void *__p[2];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2546323B8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546323B8))
  {
    sub_20AEC0D64(v9, "viz::PackageData");
    v2 = sub_20AF74B70();
    if (*((char *)v2 + 23) < 0)
    {
      sub_20AEC60F4(__dst, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      v12 = *((_QWORD *)v2 + 2);
      *(_OWORD *)__dst = v3;
    }
    *(_OWORD *)v13 = *(_OWORD *)"viz::Package";
    v14 = 0xC00000000000000;
    v4 = sub_20AF751E8();
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
    }
    else
    {
      v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      v16 = v4->__r_.__value_.__r.__words[2];
      v15 = v5;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    v18 = 0x400000000000000;
    sub_20AEC7620(v8, (uint64_t)__dst, 4uLL);
    sub_20B53170C((char *)v9, (uint64_t *)v8, &stru_2546323A0, v6, v7);
    sub_20AEC2E90(v8);
    if (SHIBYTE(v18) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v16) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v14) & 0x80000000) == 0)
          goto LABEL_13;
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v13[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v10 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2546323A0, &dword_20AEBB000);
        __cxa_guard_release(&qword_2546323B8);
        return &stru_2546323A0;
      }
LABEL_20:
      operator delete(v9[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_20;
  }
  return &stru_2546323A0;
}

void sub_20AF75104(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  sub_20AEC2E90(&a10);
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_2546323B8);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_2546323B8);
  _Unwind_Resume(a1);
}

std::string *sub_20AF751E8()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546323D8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546323D8))
    return &stru_2546323C0;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 13U]", __p);
  sub_20B531884((uint64_t)__p, &stru_2546323C0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2546323C0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546323D8);
  return &stru_2546323C0;
}

void sub_20AF752A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2546323D8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2546323D8);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF752E0(__int128 *a1, uint64_t a2, unsigned __int8 **a3, uint64_t a4)
{
  uint64_t result;
  char v8;
  __int128 __dst;
  uint64_t v10;
  int v11;
  __int128 *p_dst;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 **p_p_dst;

  v11 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v10 = *((_QWORD *)a1 + 2);
  }
  v11 = 1;
  p_dst = &__dst;
  v13 = a2;
  v14 = &__dst;
  v15 = a2;
  v16 = a2;
  sub_20AED5C4C((uint64_t *)&v14, (uint64_t)&__dst);
  sub_20AF7430C((uint64_t)&v8, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v13 = a4;
  v14 = &__dst;
  v15 = a4;
  v16 = a4;
  if (v11 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F6250[v11])(&p_p_dst, &__dst);
  if (v11 == -1)
    sub_20AECFAB8();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6268[v11])(&p_dst, &__dst);
  if (v11 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6190[v11])(&p_dst, &__dst);
  return result;
}

void sub_20AF75420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF75438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF7544C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF75460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF75474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF75488(uint64_t a1, unint64_t *a2, _BYTE *a3, unint64_t *a4)
{
  uint64_t result;
  char v8;
  _DWORD v9[6];
  int v10;
  std::string v11;
  std::string **v12;
  std::string *v13;
  std::string *v14;
  _DWORD *v15;
  std::string *v16;
  std::string *v17;

  v10 = 0;
  sub_20AF6A3D8(v9, "Invalid CFData size ");
  std::to_string(&v11, *a2);
  v13 = (std::string *)v9;
  v14 = &v11;
  v15 = v9;
  v16 = &v11;
  v17 = &v11;
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v13;
  ((void (*)(std::string ***, _DWORD *))off_24C3F61C0[v10])(&v12, v9);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  v13 = (std::string *)v9;
  v14 = (std::string *)" for specified value type ";
  v15 = v9;
  v16 = (std::string *)" for specified value type ";
  v17 = (std::string *)" for specified value type ";
  if (v10 == -1)
    sub_20AECFAB8();
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v13;
  ((void (*)(std::string *, _DWORD *))off_24C3F61D8[v10])(&v11, v9);
  sub_20AF6A118((uint64_t)&v8, (uint64_t)v9, a3);
  v13 = (std::string *)v9;
  v14 = (std::string *)" (must be a multiple of ";
  v15 = v9;
  v16 = (std::string *)" (must be a multiple of ";
  v17 = (std::string *)" (must be a multiple of ";
  if (v10 == -1)
    sub_20AECFAB8();
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v13;
  ((void (*)(std::string *, _DWORD *))off_24C3F6298[v10])(&v11, v9);
  std::to_string(&v11, *a4);
  v13 = (std::string *)v9;
  v14 = &v11;
  v15 = v9;
  v16 = &v11;
  v17 = &v11;
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v13;
  ((void (*)(std::string ***, _DWORD *))off_24C3F61C0[v10])(&v12, v9);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  v13 = (std::string *)v9;
  v14 = (std::string *)" bytes)";
  v15 = v9;
  v16 = (std::string *)" bytes)";
  v17 = (std::string *)" bytes)";
  if (v10 == -1)
    sub_20AECFAB8();
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v13;
  ((void (*)(std::string *, _DWORD *))off_24C3F61A8[v10])(&v11, v9);
  if (v10 == -1)
    sub_20AECFAB8();
  v13 = &v11;
  result = ((uint64_t (*)(std::string **, _DWORD *))off_24C3F6268[v10])(&v13, v9);
  if (v10 != -1)
    return ((uint64_t (*)(std::string **, _DWORD *))off_24C3F6190[v10])(&v13, v9);
  return result;
}

void sub_20AF756F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_20AECFA60((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_20AF75748(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  mach_timebase_info v7;
  int v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unsigned __int8 v12;
  unsigned __int128 *v13;
  unsigned __int128 v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  std::__shared_weak_count *v21;
  _QWORD v22[2];
  std::__shared_weak_count *v23;
  mach_timebase_info info;
  char v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  unsigned __int128 v36;
  char v37;
  _QWORD v38[6];

  v38[5] = *MEMORY[0x24BDAC8D0];
  if (*((_BYTE *)a2 + 384))
  {
    if (*((_BYTE *)a2 + 168))
    {
      v7 = (mach_timebase_info)*((_QWORD *)a2 + 19);
      v6 = *((_QWORD *)a2 + 20);
      if (*((_BYTE *)a2 + 24))
        goto LABEL_4;
    }
    else
    {
      v6 = mach_continuous_time();
      v12 = atomic_load((unsigned __int8 *)&qword_25463D170);
      if ((v12 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
      {
        mach_timebase_info(&info);
        LODWORD(v18) = info.numer;
        LODWORD(v19) = info.denom;
        *(double *)&qword_25463D168 = (double)v18 / (double)v19;
        __cxa_guard_release(&qword_25463D170);
      }
      v7 = (mach_timebase_info)llround(*(double *)&qword_25463D168 * (double)v6);
      LOBYTE(v6) = 2;
      if (*((_BYTE *)a2 + 24))
      {
LABEL_4:
        sub_20AFA84B0((uint64_t *)a2, 1000000000);
        v8 = *((unsigned __int8 *)a2 + 24);
        info = v7;
        v25 = v6;
        LOBYTE(v26) = 0;
        v28 = 0;
        if (v8)
        {
          if (*((char *)a2 + 23) < 0)
          {
            sub_20AEC60F4(&v26, *(void **)a2, *((_QWORD *)a2 + 1));
          }
          else
          {
            v26 = *a2;
            v27 = *((_QWORD *)a2 + 2);
          }
          v28 = 1;
          LOBYTE(v29) = 0;
          v31 = 0;
          if (*((_BYTE *)a2 + 120))
          {
LABEL_34:
            if (*((char *)a2 + 119) < 0)
            {
              sub_20AEC60F4(&v29, *((void **)a2 + 12), *((_QWORD *)a2 + 13));
            }
            else
            {
              v29 = a2[6];
              v30 = *((_QWORD *)a2 + 14);
            }
            v31 = 1;
            LOBYTE(v32) = 0;
            v33 = 0;
            if (!*((_BYTE *)a2 + 144))
              goto LABEL_18;
            goto LABEL_17;
          }
LABEL_16:
          LOBYTE(v32) = 0;
          v33 = 0;
          if (!*((_BYTE *)a2 + 144))
          {
LABEL_18:
            LOBYTE(v34) = 0;
            v37 = 0;
            if (*((_BYTE *)a2 + 80))
            {
              if (*((char *)a2 + 55) < 0)
              {
                sub_20AEC60F4(&v34, *((void **)a2 + 4), *((_QWORD *)a2 + 5));
              }
              else
              {
                v34 = a2[2];
                v35 = *((_QWORD *)a2 + 6);
              }
              v13 = (unsigned __int128 *)(a2 + 4);
              do
                v14 = __ldaxp(v13);
              while (__stlxp(v14, v13));
              v36 = v14;
              v37 = 1;
            }
            sub_20AED3838((uint64_t)v38, (uint64_t)(a2 + 11));
            sub_20AF76274(a1, (uint64_t)&info, v22);
            sub_20AFA7F18(a3, (uint64_t)v22);
            v15 = v23;
            if (v23)
            {
              p_shared_owners = (unint64_t *)&v23->__shared_owners_;
              do
                v17 = __ldaxr(p_shared_owners);
              while (__stlxr(v17 - 1, p_shared_owners));
              if (!v17)
              {
                ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
                std::__shared_weak_count::__release_weak(v15);
              }
            }
            sub_20AF4EA3C((uint64_t)&info);
            return;
          }
LABEL_17:
          v32 = a2[8];
          v33 = 1;
          goto LABEL_18;
        }
LABEL_15:
        LOBYTE(v29) = 0;
        v31 = 0;
        if (*((_BYTE *)a2 + 120))
          goto LABEL_34;
        goto LABEL_16;
      }
    }
    info = v7;
    v25 = v6;
    LOBYTE(v26) = 0;
    v28 = 0;
    goto LABEL_15;
  }
  sub_20AF76134(a1, v20);
  sub_20AFA7F18(a3, (uint64_t)v20);
  v9 = v21;
  if (v21)
  {
    v10 = (unint64_t *)&v21->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_20AF75A58(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463D170);
  _Unwind_Resume(a1);
}

void sub_20AF75A70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  if (a23)
  {
    if (a22 < 0)
    {
      operator delete(__p);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_20AF75B28(_DWORD ***a1)
{
  return sub_20AF75B44(**a1, (char *)(*a1)[1]);
}

void sub_20AF75B34(uint64_t a1, uint64_t a2)
{
  sub_20AF75C34((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

_DWORD *sub_20AF75B44(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C3F6190[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_20AF75C34(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24C3F6190[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_20AEC7620((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_20AF75DE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_20AF75E2C(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_20AF75F24((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_20AF75F1C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_20AF75F24(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20AEC60B8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60CC();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_20AF76120(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC65A4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF76134@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  unsigned __int8 v5;
  unint64_t v7;
  unint64_t v8;
  mach_timebase_info info;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v4 = mach_continuous_time();
  v5 = atomic_load((unsigned __int8 *)&qword_25463D170);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
  {
    mach_timebase_info(&info);
    LODWORD(v7) = info.numer;
    LODWORD(v8) = info.denom;
    *(double *)&qword_25463D168 = (double)v7 / (double)v8;
    __cxa_guard_release(&qword_25463D170);
  }
  v10[0] = llround(*(double *)&qword_25463D168 * (double)v4);
  v10[1] = 2;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  sub_20AF76274(a1, (uint64_t)v10, a2);
  return sub_20AF4EA3C((uint64_t)v10);
}

void sub_20AF76248(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463D170);
  _Unwind_Resume(a1);
}

void sub_20AF76260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AF4EA3C((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF76274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  _QWORD *result;

  v6 = operator new();
  *(_QWORD *)v6 = &off_24C3F6410;
  *(_OWORD *)(v6 + 8) = *(_OWORD *)a1;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  sub_20AF4CAF4(v6 + 32, a2);
  *(_QWORD *)v6 = &off_24C3F6390;
  *a3 = &off_24C411E78;
  a3[1] = v6;
  result = (_QWORD *)operator new();
  *result = &off_24C411F70;
  result[1] = 0;
  result[2] = 0;
  result[3] = v6;
  a3[2] = result;
  return result;
}

void sub_20AF76324(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_20AF76340(_Unwind_Exception *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  MEMORY[0x20BD3583C](v1, 0x10B3C40E92279A6);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF7639C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F6410;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_20AF76414(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F6410;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF7648C(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20AF76494(_QWORD *a1, _QWORD *lpsrc)
{
  uint64_t result;
  uint64_t v5;
  unsigned __int8 *v6;
  int v7;
  unsigned __int8 *v8;
  _QWORD v9[3];
  char v10;

  result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C411EB8, (const struct __class_type_info *)&unk_24C3F63D0, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      v5 = result;
      v6 = (unsigned __int8 *)a1[1];
      v7 = *v6;
      v8 = *(unsigned __int8 **)(v5 + 8);
      if (v7 == *v8)
      {
        v9[0] = &v10;
        v9[1] = v6;
        v9[2] = v8;
        return sub_20B43E450(v7, (uint64_t)v9);
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

void sub_20AF7653C(uint64_t a1)
{
  __int128 *v2;
  void *__p;
  char v4;

  v2 = (__int128 *)sub_20AF77610();
  sub_20AF765F0(a1);
  sub_20AF4DD70(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",", a1 + 32, (uint64_t)"}");
  if (v4 < 0)
    operator delete(__p);
}

void sub_20AF765D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF765F0(uint64_t a1)
{
  unsigned __int8 v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;

  v2 = atomic_load((unsigned __int8 *)&qword_254631D78);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254631D78))
  {
    v4 = sub_20AF77414();
    v5 = *((_QWORD *)v4 + 1);
    if (*((char *)v4 + 23) >= 0)
    {
      v6 = *((unsigned __int8 *)v4 + 23);
    }
    else
    {
      v4 = *(__int128 **)v4;
      v6 = v5;
    }
    sub_20AF4E53C((char *)v4, v6, "::", 2, 0, (uint64_t)&v8);
    if (*(char *)(v9 - 1) < 0)
    {
      sub_20AEC60F4(&xmmword_254631D60, *(void **)(v9 - 24), *(_QWORD *)(v9 - 16));
    }
    else
    {
      v7 = *(_OWORD *)(v9 - 24);
      qword_254631D70 = *(_QWORD *)(v9 - 8);
      xmmword_254631D60 = v7;
    }
    sub_20AEC2E90(&v8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631D60, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631D78);
  }
  return sub_20AF778D8(&xmmword_254631D60, (uint64_t)"{", (unsigned __int8 **)(a1 + 8), (uint64_t)"}");
}

void sub_20AF76700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_20AEC2E90(&a9);
  __cxa_guard_abort(&qword_254631D78);
  _Unwind_Resume(a1);
}

void sub_20AF76720(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631D78);
  _Unwind_Resume(a1);
}

void sub_20AF76738(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 2;
}

void sub_20AF76764(uint64_t (***lpsrc)()@<X0>, _QWORD *a2@<X8>)
{
  sub_20B2346E4(lpsrc, 2, a2);
}

_QWORD *sub_20AF7679C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F6410;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_20AF76814(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24C3F6410;
  sub_20AF4EA3C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF7688C(uint64_t a1)
{
  __int128 *v2;

  v2 = sub_20AF76EB0();
  return sub_20AF769E0(v2, (uint64_t)"{", (unsigned __int8 **)(a1 + 8), (uint64_t)",", a1 + 32, (uint64_t)"}");
}

uint64_t sub_20AF768E4(uint64_t a1)
{
  uint64_t result;
  _BYTE v2[24];
  int v3;
  char v4;
  _QWORD v5[2];

  v3 = 0;
  sub_20AF76C0C((uint64_t)v5, (uint64_t)v2, (unsigned __int8 **)(a1 + 8));
  if (v3 == -1)
    sub_20AECFAB8();
  v5[0] = &v4;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24C3F6268[v3])(v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24C3F6190[v3])(v5, v2);
  return result;
}

void sub_20AF7697C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;

  if (a13 != -1)
    ((void (*)(uint64_t, char *))off_24C3F6190[a13])(v13 - 17, &a10);
  _Unwind_Resume(exception_object);
}

void sub_20AF769B4(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_20AF769E0(__int128 *a1, uint64_t a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  char v12;
  char v13;
  __int128 __dst;
  uint64_t v15;
  int v16;
  __int128 *p_dst;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 **p_p_dst;

  v16 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v15 = *((_QWORD *)a1 + 2);
  }
  v16 = 1;
  p_dst = &__dst;
  v18 = a2;
  v19 = &__dst;
  v20 = a2;
  v21 = a2;
  sub_20AED5C4C((uint64_t *)&v19, (uint64_t)&__dst);
  sub_20AF76C0C((uint64_t)&v13, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v18 = a4;
  v19 = &__dst;
  v20 = a4;
  v21 = a4;
  if (v16 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F6250[v16])(&p_p_dst, &__dst);
  sub_20AF4D170((uint64_t)&v12, (uint64_t)&__dst, a5);
  p_dst = &__dst;
  v18 = a6;
  v19 = &__dst;
  v20 = a6;
  v21 = a6;
  if (v16 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F6250[v16])(&p_p_dst, &__dst);
  if (v16 == -1)
    sub_20AECFAB8();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6268[v16])(&p_dst, &__dst);
  if (v16 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6190[v16])(&p_dst, &__dst);
  return result;
}

void sub_20AF76B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF76B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF76BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF76BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF76BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF76BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF76BF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF76C0C(uint64_t a1, uint64_t a2, unsigned __int8 **a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20AEC0BD8(v5);
  v21[0] = v5;
  sub_20B43D880((_QWORD *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_20AEC0138();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v14 + 128);
    MEMORY[0x20BD3583C](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_20AECFAB8();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24C3F61C0[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_20AF76E5C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20AF76E80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF76E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B52CE84((uint64_t *)va);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF76EB0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631C38);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631C38))
    return &xmmword_254631C20;
  v2 = sub_20AF76F8C();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_254631C20, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_254631C30 = v2->__r_.__value_.__r.__words[2];
    xmmword_254631C20 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631C20, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631C38);
  return &xmmword_254631C20;
}

void sub_20AF76F74(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631C38);
  _Unwind_Resume(a1);
}

std::string *sub_20AF76F8C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631C58);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631C58))
    return &stru_254631C40;
  sub_20AF77230((uint64_t)__p);
  sub_20AF7707C((char *)__p, &stru_254631C40);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631C40, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631C58);
  return &stru_254631C40;
}

void sub_20AF7703C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631C58);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631C58);
  _Unwind_Resume(a1);
}

void sub_20AF7707C(char *a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v4;
  __int128 v5;
  __int128 *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *__dst[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = sub_20AF77414();
  if (*((char *)v4 + 23) < 0)
  {
    sub_20AEC60F4(__dst, *(void **)v4, *((_QWORD *)v4 + 1));
  }
  else
  {
    v5 = *v4;
    v16 = *((_QWORD *)v4 + 2);
    *(_OWORD *)__dst = v5;
  }
  v6 = sub_20AF4DB74();
  if (*((char *)v6 + 23) < 0)
  {
    sub_20AEC60F4(&v17, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = v7;
  }
  sub_20AEC7620(&__p, (uint64_t)__dst, 2uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_19;
}

void sub_20AF771E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_20AEC2E90((void **)&a9);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF77230(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254631CD8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254631CD8))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::con::Numbers>]", qword_254631CC0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631CC0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631CD8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254631CF8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254631CF8))
  {
    v5 = sub_20AED4780(qword_254631CC0, "<", 0);
    sub_20AED467C(qword_254631CC0, 0, v5, qword_254631CE0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631CE0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631CF8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254631D18);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254631D18))
  {
    sub_20B531658((uint64_t)qword_254631CE0, (uint64_t)&xmmword_254631D00);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631D00, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631D18);
  }
  if (byte_254631D17 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_254631D00, *((unint64_t *)&xmmword_254631D00 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_254631D00;
    *(_QWORD *)(a1 + 16) = unk_254631D10;
  }
}

void sub_20AF773CC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631D18);
  _Unwind_Resume(a1);
}

void sub_20AF773E4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631CF8);
  _Unwind_Resume(a1);
}

void sub_20AF773FC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631CD8);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF77414()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631C78);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631C78))
    return &xmmword_254631C60;
  v2 = (char *)sub_20AF774F0();
  if (v2[23] < 0)
  {
    sub_20AEC60F4(&xmmword_254631C60, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_254631C70 = *((_QWORD *)v2 + 2);
    xmmword_254631C60 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631C60, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631C78);
  return &xmmword_254631C60;
}

void sub_20AF774D8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631C78);
  _Unwind_Resume(a1);
}

void *sub_20AF774F0()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254631C98);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254631C98))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::con::Numbers]", qword_254631C80);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631C80, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631C98);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254631CB8);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_254631CB8))
    return &unk_254631CA0;
  sub_20B531658((uint64_t)qword_254631C80, (uint64_t)&unk_254631CA0);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_254631CA0, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631CB8);
  return &unk_254631CA0;
}

void sub_20AF775E0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631CB8);
  _Unwind_Resume(a1);
}

void sub_20AF775F8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631C98);
  _Unwind_Resume(a1);
}

std::string *sub_20AF77610()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void *v8[3];
  void *v9[2];
  char v10;
  void *__dst[2];
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  void *__p[2];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254631D38);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254631D38))
  {
    sub_20AEC0D64(v9, "viz::PackageData");
    v2 = sub_20AF77414();
    if (*((char *)v2 + 23) < 0)
    {
      sub_20AEC60F4(__dst, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      v12 = *((_QWORD *)v2 + 2);
      *(_OWORD *)__dst = v3;
    }
    *(_OWORD *)v13 = *(_OWORD *)"viz::Package";
    v14 = 0xC00000000000000;
    v4 = sub_20AF6DABC();
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
    }
    else
    {
      v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      v16 = v4->__r_.__value_.__r.__words[2];
      v15 = v5;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    v18 = 0x400000000000000;
    sub_20AEC7620(v8, (uint64_t)__dst, 4uLL);
    sub_20B53170C((char *)v9, (uint64_t *)v8, &stru_254631D20, v6, v7);
    sub_20AEC2E90(v8);
    if (SHIBYTE(v18) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v16) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v14) & 0x80000000) == 0)
          goto LABEL_13;
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v13[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v10 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631D20, &dword_20AEBB000);
        __cxa_guard_release(&qword_254631D38);
        return &stru_254631D20;
      }
LABEL_20:
      operator delete(v9[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_20;
  }
  return &stru_254631D20;
}

void sub_20AF777F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  sub_20AEC2E90(&a10);
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_254631D38);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_254631D38);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF778D8(__int128 *a1, uint64_t a2, unsigned __int8 **a3, uint64_t a4)
{
  uint64_t result;
  char v8;
  __int128 __dst;
  uint64_t v10;
  int v11;
  __int128 *p_dst;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 **p_p_dst;

  v11 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v10 = *((_QWORD *)a1 + 2);
  }
  v11 = 1;
  p_dst = &__dst;
  v13 = a2;
  v14 = &__dst;
  v15 = a2;
  v16 = a2;
  sub_20AED5C4C((uint64_t *)&v14, (uint64_t)&__dst);
  sub_20AF76C0C((uint64_t)&v8, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v13 = a4;
  v14 = &__dst;
  v15 = a4;
  v16 = a4;
  if (v11 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F6250[v11])(&p_p_dst, &__dst);
  if (v11 == -1)
    sub_20AECFAB8();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6268[v11])(&p_dst, &__dst);
  if (v11 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6190[v11])(&p_dst, &__dst);
  return result;
}

void sub_20AF77A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF77A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF77A44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF77A58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF77A6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF77A80(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  _QWORD *result;
  uint64_t v11;
  std::__shared_weak_count *v12;

  v6 = operator new();
  sub_20AEEC2D8(&v11, a2);
  sub_20B0BFE34(v6, (uint64_t)&v11, a3);
  v7 = v12;
  if (!v12)
  {
    *a1 = &off_24C411E78;
    a1[1] = v6;
    goto LABEL_9;
  }
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    *a1 = &off_24C411E78;
    a1[1] = v6;
    if (!v6)
      goto LABEL_10;
LABEL_9:
    result = (_QWORD *)operator new();
    *result = &off_24C411F70;
    result[1] = 0;
    result[2] = 0;
    result[3] = v6;
    a1[2] = result;
    return result;
  }
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  *a1 = &off_24C411E78;
  a1[1] = v6;
  if (v6)
    goto LABEL_9;
LABEL_10:
  result = 0;
  a1[2] = 0;
  return result;
}

void sub_20AF77BB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  sub_20AF77C10((_QWORD **)va);
  _Unwind_Resume(a1);
}

void sub_20AF77BDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  va_list va;

  va_start(va, a3);
  sub_20AEC147C((uint64_t)va);
  MEMORY[0x20BD3583C](v3, 0x10B3C40E92279A6);
  _Unwind_Resume(a1);
}

_QWORD **sub_20AF77C10(_QWORD **a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *v2 = &off_24C3FA938;
    sub_20AF4EA3C((uint64_t)(v2 + 4));
    v3 = (std::__shared_weak_count *)v2[2];
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldaxr(p_shared_owners);
      while (__stlxr(v5 - 1, p_shared_owners));
      if (!v5)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    MEMORY[0x20BD3583C](v2, 0x10B3C40E92279A6);
  }
  return a1;
}

_QWORD *sub_20AF77CA8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *result;

  v6 = operator new();
  *(_QWORD *)v6 = &off_24C3F6340;
  *(_BYTE *)(v6 + 8) = *(_BYTE *)a2;
  *(_OWORD *)(v6 + 16) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(v6 + 32) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  sub_20AF4CAF4(v6 + 48, a3);
  *(_QWORD *)v6 = &off_24C3F62C0;
  *a1 = &off_24C411E78;
  a1[1] = v6;
  result = (_QWORD *)operator new();
  *result = &off_24C411F70;
  result[1] = 0;
  result[2] = 0;
  result[3] = v6;
  a1[2] = result;
  return result;
}

void sub_20AF77D6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_20AF77D88(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + 16);
  if (v3)
  {
    *(_QWORD *)(v1 + 24) = v3;
    operator delete(v3);
  }
  MEMORY[0x20BD3583C](v1, 0x10B3C402343F4F0);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF77DBC(_QWORD *a1)
{
  void *v2;

  *a1 = &off_24C3F6340;
  sub_20AF4EA3C((uint64_t)(a1 + 6));
  v2 = (void *)a1[2];
  if (v2)
  {
    a1[3] = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_20AF77DFC(_QWORD *a1)
{
  void *v2;

  *a1 = &off_24C3F6340;
  sub_20AF4EA3C((uint64_t)(a1 + 6));
  v2 = (void *)a1[2];
  if (v2)
  {
    a1[3] = v2;
    operator delete(v2);
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF77E4C(uint64_t a1)
{
  return a1 + 48;
}

unint64_t sub_20AF77E54(unsigned __int8 *a1, unsigned __int8 *lpsrc)
{
  unint64_t result;

  result = (unint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C411EB8, (const struct __class_type_info *)&unk_24C3F6300, 0);
  if (result)
    return a1 == lpsrc || sub_20B5234F4(a1 + 8, (_BYTE *)(result + 8)) == 0;
  return result;
}

void sub_20AF77EC4(uint64_t a1)
{
  __int128 *v2;
  void *__p;
  char v4;

  v2 = (__int128 *)sub_20AF78F34();
  sub_20AF77F78(a1);
  sub_20AF4DD70(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",", a1 + 48, (uint64_t)"}");
  if (v4 < 0)
    operator delete(__p);
}

void sub_20AF77F5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF77F78(uint64_t a1)
{
  unsigned __int8 v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;

  v2 = atomic_load((unsigned __int8 *)&qword_254631C18);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254631C18))
  {
    v4 = sub_20AF78D38();
    v5 = *((_QWORD *)v4 + 1);
    if (*((char *)v4 + 23) >= 0)
    {
      v6 = *((unsigned __int8 *)v4 + 23);
    }
    else
    {
      v4 = *(__int128 **)v4;
      v6 = v5;
    }
    sub_20AF4E53C((char *)v4, v6, "::", 2, 0, (uint64_t)&v8);
    if (*(char *)(v9 - 1) < 0)
    {
      sub_20AEC60F4(&xmmword_254631C00, *(void **)(v9 - 24), *(_QWORD *)(v9 - 16));
    }
    else
    {
      v7 = *(_OWORD *)(v9 - 24);
      qword_254631C10 = *(_QWORD *)(v9 - 8);
      xmmword_254631C00 = v7;
    }
    sub_20AEC2E90(&v8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631C00, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631C18);
  }
  return sub_20AF792F4(&xmmword_254631C00, (uint64_t)"{", (unsigned __int8 *)(a1 + 8), (uint64_t)"}");
}

void sub_20AF78088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_20AEC2E90(&a9);
  __cxa_guard_abort(&qword_254631C18);
  _Unwind_Resume(a1);
}

void sub_20AF780A8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631C18);
  _Unwind_Resume(a1);
}

void sub_20AF780C0(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 8;
}

void sub_20AF780E8(uint64_t (***lpsrc)()@<X0>, _QWORD *a2@<X8>)
{
  sub_20B2346E4(lpsrc, 8, a2);
}

_QWORD *sub_20AF78120(_QWORD *a1)
{
  void *v2;

  *a1 = &off_24C3F6340;
  sub_20AF4EA3C((uint64_t)(a1 + 6));
  v2 = (void *)a1[2];
  if (v2)
  {
    a1[3] = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_20AF78160(_QWORD *a1)
{
  void *v2;

  *a1 = &off_24C3F6340;
  sub_20AF4EA3C((uint64_t)(a1 + 6));
  v2 = (void *)a1[2];
  if (v2)
  {
    a1[3] = v2;
    operator delete(v2);
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF781B0(uint64_t a1)
{
  __int128 *v2;

  v2 = sub_20AF787D4();
  return sub_20AF78304(v2, (uint64_t)"{", (unsigned __int8 *)(a1 + 8), (uint64_t)",", a1 + 48, (uint64_t)"}");
}

uint64_t sub_20AF78208(uint64_t a1)
{
  uint64_t result;
  _BYTE v2[24];
  int v3;
  char v4;
  _QWORD v5[2];

  v3 = 0;
  sub_20AF78530((uint64_t)v5, (uint64_t)v2, (unsigned __int8 *)(a1 + 8));
  if (v3 == -1)
    sub_20AECFAB8();
  v5[0] = &v4;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24C3F6268[v3])(v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24C3F6190[v3])(v5, v2);
  return result;
}

void sub_20AF782A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;

  if (a13 != -1)
    ((void (*)(uint64_t, char *))off_24C3F6190[a13])(v13 - 17, &a10);
  _Unwind_Resume(exception_object);
}

void sub_20AF782D8(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_20AF78304(__int128 *a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  char v12;
  char v13;
  __int128 __dst;
  uint64_t v15;
  int v16;
  __int128 *p_dst;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 **p_p_dst;

  v16 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v15 = *((_QWORD *)a1 + 2);
  }
  v16 = 1;
  p_dst = &__dst;
  v18 = a2;
  v19 = &__dst;
  v20 = a2;
  v21 = a2;
  sub_20AED5C4C((uint64_t *)&v19, (uint64_t)&__dst);
  sub_20AF78530((uint64_t)&v13, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v18 = a4;
  v19 = &__dst;
  v20 = a4;
  v21 = a4;
  if (v16 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F6250[v16])(&p_p_dst, &__dst);
  sub_20AF4D170((uint64_t)&v12, (uint64_t)&__dst, a5);
  p_dst = &__dst;
  v18 = a6;
  v19 = &__dst;
  v20 = a6;
  v21 = a6;
  if (v16 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F6250[v16])(&p_p_dst, &__dst);
  if (v16 == -1)
    sub_20AECFAB8();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6268[v16])(&p_dst, &__dst);
  if (v16 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6190[v16])(&p_dst, &__dst);
  return result;
}

void sub_20AF784A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF784B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF784CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF784E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF784F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF78508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF7851C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF78530(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20AEC0BD8(v5);
  v21[0] = v5;
  sub_20B524068((_QWORD *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_20AEC0138();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v14 + 128);
    MEMORY[0x20BD3583C](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_20AECFAB8();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24C3F61C0[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_20AF78780(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20AF787A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF787C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B52CE84((uint64_t *)va);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF787D4()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631AD8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631AD8))
    return &xmmword_254631AC0;
  v2 = sub_20AF788B0();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20AEC60F4(&xmmword_254631AC0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_254631AD0 = v2->__r_.__value_.__r.__words[2];
    xmmword_254631AC0 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631AC0, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631AD8);
  return &xmmword_254631AC0;
}

void sub_20AF78898(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631AD8);
  _Unwind_Resume(a1);
}

std::string *sub_20AF788B0()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631AF8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631AF8))
    return &stru_254631AE0;
  sub_20AF78B54((uint64_t)__p);
  sub_20AF789A0((char *)__p, &stru_254631AE0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631AE0, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631AF8);
  return &stru_254631AE0;
}

void sub_20AF78960(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631AF8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631AF8);
  _Unwind_Resume(a1);
}

void sub_20AF789A0(char *a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v4;
  __int128 v5;
  __int128 *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *__dst[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = sub_20AF78D38();
  if (*((char *)v4 + 23) < 0)
  {
    sub_20AEC60F4(__dst, *(void **)v4, *((_QWORD *)v4 + 1));
  }
  else
  {
    v5 = *v4;
    v16 = *((_QWORD *)v4 + 2);
    *(_OWORD *)__dst = v5;
  }
  v6 = sub_20AF4DB74();
  if (*((char *)v6 + 23) < 0)
  {
    sub_20AEC60F4(&v17, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = v7;
  }
  sub_20AEC7620(&__p, (uint64_t)__dst, 2uLL);
  sub_20B53170C(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_19;
}

void sub_20AF78B04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_20AEC2E90((void **)&a9);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20AF78B54(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254631B78);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254631B78))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::Number>]", qword_254631B60);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631B60, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631B78);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254631B98);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254631B98))
  {
    v5 = sub_20AED4780(qword_254631B60, "<", 0);
    sub_20AED467C(qword_254631B60, 0, v5, qword_254631B80);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631B80, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631B98);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254631BB8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254631BB8))
  {
    sub_20B531658((uint64_t)qword_254631B80, (uint64_t)&xmmword_254631BA0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631BA0, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631BB8);
  }
  if (byte_254631BB7 < 0)
  {
    sub_20AEC60F4((_BYTE *)a1, (void *)xmmword_254631BA0, *((unint64_t *)&xmmword_254631BA0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_254631BA0;
    *(_QWORD *)(a1 + 16) = unk_254631BB0;
  }
}

void sub_20AF78CF0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631BB8);
  _Unwind_Resume(a1);
}

void sub_20AF78D08(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631B98);
  _Unwind_Resume(a1);
}

void sub_20AF78D20(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631B78);
  _Unwind_Resume(a1);
}

__int128 *sub_20AF78D38()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631B18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631B18))
    return &xmmword_254631B00;
  v2 = (char *)sub_20AF78E14();
  if (v2[23] < 0)
  {
    sub_20AEC60F4(&xmmword_254631B00, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_254631B10 = *((_QWORD *)v2 + 2);
    xmmword_254631B00 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254631B00, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631B18);
  return &xmmword_254631B00;
}

void sub_20AF78DFC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631B18);
  _Unwind_Resume(a1);
}

void *sub_20AF78E14()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254631B38);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254631B38))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::Number]", qword_254631B20);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254631B20, &dword_20AEBB000);
    __cxa_guard_release(&qword_254631B38);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254631B58);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_254631B58))
    return &unk_254631B40;
  sub_20B531658((uint64_t)qword_254631B20, (uint64_t)&unk_254631B40);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_254631B40, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631B58);
  return &unk_254631B40;
}

void sub_20AF78F04(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631B58);
  _Unwind_Resume(a1);
}

void sub_20AF78F1C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254631B38);
  _Unwind_Resume(a1);
}

std::string *sub_20AF78F34()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void *v8[3];
  void *v9[2];
  char v10;
  void *__dst[2];
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  void *__p[2];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254631BD8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254631BD8))
  {
    sub_20AEC0D64(v9, "viz::PackageData");
    v2 = sub_20AF78D38();
    if (*((char *)v2 + 23) < 0)
    {
      sub_20AEC60F4(__dst, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      v12 = *((_QWORD *)v2 + 2);
      *(_OWORD *)__dst = v3;
    }
    *(_OWORD *)v13 = *(_OWORD *)"viz::Package";
    v14 = 0xC00000000000000;
    v4 = sub_20AF791FC();
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
    }
    else
    {
      v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      v16 = v4->__r_.__value_.__r.__words[2];
      v15 = v5;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    v18 = 0x400000000000000;
    sub_20AEC7620(v8, (uint64_t)__dst, 4uLL);
    sub_20B53170C((char *)v9, (uint64_t *)v8, &stru_254631BC0, v6, v7);
    sub_20AEC2E90(v8);
    if (SHIBYTE(v18) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v16) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v14) & 0x80000000) == 0)
          goto LABEL_13;
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v13[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v10 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631BC0, &dword_20AEBB000);
        __cxa_guard_release(&qword_254631BD8);
        return &stru_254631BC0;
      }
LABEL_20:
      operator delete(v9[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_20;
  }
  return &stru_254631BC0;
}

void sub_20AF79118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  sub_20AEC2E90(&a10);
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_254631BD8);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_254631BD8);
  _Unwind_Resume(a1);
}

std::string *sub_20AF791FC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254631BF8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254631BF8))
    return &stru_254631BE0;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 8U]", __p);
  sub_20B531884((uint64_t)__p, &stru_254631BE0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254631BE0, &dword_20AEBB000);
  __cxa_guard_release(&qword_254631BF8);
  return &stru_254631BE0;
}

void sub_20AF792B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254631BF8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254631BF8);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF792F4(__int128 *a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  uint64_t result;
  char v8;
  __int128 __dst;
  uint64_t v10;
  int v11;
  __int128 *p_dst;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 **p_p_dst;

  v11 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_20AEC60F4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v10 = *((_QWORD *)a1 + 2);
  }
  v11 = 1;
  p_dst = &__dst;
  v13 = a2;
  v14 = &__dst;
  v15 = a2;
  v16 = a2;
  sub_20AED5C4C((uint64_t *)&v14, (uint64_t)&__dst);
  sub_20AF78530((uint64_t)&v8, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v13 = a4;
  v14 = &__dst;
  v15 = a4;
  v16 = a4;
  if (v11 == -1)
    sub_20AECFAB8();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C3F6250[v11])(&p_p_dst, &__dst);
  if (v11 == -1)
    sub_20AECFAB8();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6268[v11])(&p_dst, &__dst);
  if (v11 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C3F6190[v11])(&p_dst, &__dst);
  return result;
}

void sub_20AF79434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF7944C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF79460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF79474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF79488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF7949C()
{
  uint64_t v0;
  int *v1;
  int *v2;
  int *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __int128 *v26;
  uint64_t v27;
  __int128 v28;
  int v29;
  _DWORD v30[14];
  uint64_t v31;

  qword_25463CCB0 = 0;
  qword_25463CCB8 = 0;
  qword_25463CCC0 = 0;
  v0 = sub_20B5251D0();
  if (v0)
  {
    v2 = v1;
    v3 = &v1[v0];
    do
    {
      v5 = *v2;
      v6 = sub_20AF809EC(*v2);
      if ((v6 & 0xFF00000000) != 0)
      {
        v7 = 1647392256;
        v8 = 103;
        switch((int)v6)
        {
          case 1:
            if (v5 == 1278226488)
            {
              v9 = 0;
LABEL_53:
              v10 = (char *)&v30[v9];
              goto LABEL_54;
            }
            break;
          case 2:
            goto LABEL_37;
          case 3:
            if (v5 == 1278226536)
              goto LABEL_38;
            break;
          case 4:
            if (v5 == 1278226534)
              goto LABEL_38;
            break;
          case 5:
            if (v5 == 843264056)
              goto LABEL_38;
            break;
          case 7:
            if (v5 == 843264104)
              goto LABEL_38;
            break;
          case 8:
            if (v5 == 843264102)
              goto LABEL_38;
            break;
          case 17:
            if (v5 == 842285639)
              goto LABEL_38;
            break;
          case 21:
            v7 = 0;
            v8 = 24;
LABEL_37:
            if (v5 == (v7 | v8))
              goto LABEL_38;
            break;
          case 22:
            if (v5 == 1647589490)
              goto LABEL_38;
            break;
          case 25:
            if (v5 == 1111970369)
              goto LABEL_38;
            break;
          case 29:
            if (v5 == 1380401729)
              goto LABEL_38;
            break;
          case 31:
            if (v5 == 1380411457)
              goto LABEL_38;
            break;
          case 32:
            if (v5 == 1380410945)
              goto LABEL_38;
            break;
          case 33:
            if (v5 == 1094862674)
              goto LABEL_38;
            break;
          case 37:
            if (v5 == 32)
              goto LABEL_38;
            break;
          case 38:
            if (v5 != 1647719521)
              break;
LABEL_38:
            v9 = 1;
            v10 = (char *)&v31;
            switch((int)v6)
            {
              case 2:
                goto LABEL_53;
              case 3:
                v9 = 2;
                goto LABEL_53;
              case 4:
                v9 = 3;
                goto LABEL_53;
              case 5:
                v9 = 4;
                goto LABEL_53;
              case 7:
                v9 = 5;
                goto LABEL_53;
              case 8:
                v9 = 6;
                goto LABEL_53;
              case 21:
                v9 = 7;
                goto LABEL_53;
              case 22:
                v9 = 8;
                goto LABEL_53;
              case 25:
                v9 = 9;
                goto LABEL_53;
              case 31:
                v9 = 10;
                goto LABEL_53;
              case 32:
                v9 = 11;
                goto LABEL_53;
              case 37:
                v9 = 12;
                goto LABEL_53;
              case 38:
                v9 = 13;
                goto LABEL_53;
              default:
                break;
            }
LABEL_54:
            if (v10 - (char *)v30 == 56)
              break;
            v11 = qword_25463CCB8;
            if (qword_25463CCB8 < (unint64_t)qword_25463CCC0)
            {
              *(_DWORD *)qword_25463CCB8 = v5;
              v4 = v11 + 4;
              goto LABEL_4;
            }
            v12 = (void *)qword_25463CCB0;
            v13 = qword_25463CCB8 - qword_25463CCB0;
            v14 = (qword_25463CCB8 - qword_25463CCB0) >> 2;
            v15 = v14 + 1;
            if ((unint64_t)(v14 + 1) >> 62)
              sub_20AEC60B8();
            v16 = qword_25463CCC0 - qword_25463CCB0;
            if ((qword_25463CCC0 - qword_25463CCB0) >> 1 > v15)
              v15 = v16 >> 1;
            if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFFCLL)
              v17 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v17 = v15;
            if (!v17)
            {
              v18 = 0;
              v19 = (int *)(4 * v14);
              *(_DWORD *)(4 * v14) = v5;
              v4 = 4 * v14 + 4;
              v20 = v11 - (_QWORD)v12;
              if ((void *)v11 == v12)
                goto LABEL_73;
LABEL_67:
              v21 = v20 - 4;
              if (v21 < 0x2C)
                goto LABEL_80;
              if ((unint64_t)(v11 - (_QWORD)v18 - v13) < 0x20)
                goto LABEL_80;
              v22 = (v21 >> 2) + 1;
              v23 = 4 * (v22 & 0x7FFFFFFFFFFFFFF8);
              v24 = v11 - v23;
              v19 = (int *)((char *)v19 - v23);
              v25 = &v18[4 * v14 - 16];
              v26 = (__int128 *)(v11 - 16);
              v27 = v22 & 0x7FFFFFFFFFFFFFF8;
              do
              {
                v28 = *v26;
                *((_OWORD *)v25 - 1) = *(v26 - 1);
                *(_OWORD *)v25 = v28;
                v25 -= 32;
                v26 -= 2;
                v27 -= 8;
              }
              while (v27);
              v11 = v24;
              if (v22 != (v22 & 0x7FFFFFFFFFFFFFF8))
              {
LABEL_80:
                do
                {
                  v29 = *(_DWORD *)(v11 - 4);
                  v11 -= 4;
                  *--v19 = v29;
                }
                while ((void *)v11 != v12);
              }
              goto LABEL_73;
            }
            if (v17 >> 62)
              sub_20AEC60CC();
            v18 = (char *)operator new(4 * v17);
            v19 = (int *)&v18[4 * v14];
            *v19 = v5;
            v4 = (uint64_t)(v19 + 1);
            v20 = v11 - (_QWORD)v12;
            if ((void *)v11 != v12)
              goto LABEL_67;
LABEL_73:
            qword_25463CCB0 = (uint64_t)v19;
            qword_25463CCB8 = v4;
            qword_25463CCC0 = (uint64_t)&v18[4 * v17];
            if (v12)
              operator delete(v12);
LABEL_4:
            qword_25463CCB8 = v4;
            break;
          default:
            break;
        }
      }
      ++v2;
    }
    while (v2 != v3);
  }
}

void sub_20AF79910(_Unwind_Exception *exception_object)
{
  if (qword_25463CCB0)
  {
    qword_25463CCB8 = qword_25463CCB0;
    operator delete((void *)qword_25463CCB0);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF7993C(uint64_t a1)
{
  void *v2;

  v2 = *(void **)a1;
  if (v2)
  {
    *(_QWORD *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_20AF7996C()
{
  uint64_t v0;
  int *v1;
  int *v2;
  int *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 *v24;
  uint64_t v25;
  __int128 v26;
  int v27;
  _DWORD v28[14];
  uint64_t v29;

  qword_25463CCD0 = 0;
  qword_25463CCD8 = 0;
  qword_25463CCE0 = 0;
  v0 = sub_20B5251D0();
  if (v0)
  {
    v2 = v1;
    v3 = &v1[v0];
    while (1)
    {
      v5 = *v2;
      v6 = sub_20AF809EC(*v2);
      if ((v6 & 0xFF00000000) == 0)
        goto LABEL_5;
      v7 = 0;
      v8 = (char *)&v29;
      switch((int)v6)
      {
        case 1:
          goto LABEL_21;
        case 2:
          v7 = 1;
          goto LABEL_21;
        case 3:
          v7 = 2;
          goto LABEL_21;
        case 4:
          v7 = 3;
          goto LABEL_21;
        case 5:
          v7 = 4;
          goto LABEL_21;
        case 7:
          v7 = 5;
          goto LABEL_21;
        case 8:
          v7 = 6;
          goto LABEL_21;
        case 21:
          v7 = 7;
          goto LABEL_21;
        case 22:
          v7 = 8;
          goto LABEL_21;
        case 25:
          v7 = 9;
          goto LABEL_21;
        case 31:
          v7 = 10;
          goto LABEL_21;
        case 32:
          v7 = 11;
          goto LABEL_21;
        case 37:
          v7 = 12;
          goto LABEL_21;
        case 38:
          v7 = 13;
LABEL_21:
          v8 = (char *)&v28[v7];
          break;
        default:
          break;
      }
      if (v8 - (char *)v28 == 56)
        goto LABEL_5;
      v9 = qword_25463CCD8;
      if (qword_25463CCD8 >= (unint64_t)qword_25463CCE0)
        break;
      *(_DWORD *)qword_25463CCD8 = v5;
      v4 = v9 + 4;
LABEL_4:
      qword_25463CCD8 = v4;
LABEL_5:
      if (++v2 == v3)
        return;
    }
    v10 = (void *)qword_25463CCD0;
    v11 = qword_25463CCD8 - qword_25463CCD0;
    v12 = (qword_25463CCD8 - qword_25463CCD0) >> 2;
    v13 = v12 + 1;
    if ((unint64_t)(v12 + 1) >> 62)
      sub_20AEC60B8();
    v14 = qword_25463CCE0 - qword_25463CCD0;
    if ((qword_25463CCE0 - qword_25463CCD0) >> 1 > v13)
      v13 = v14 >> 1;
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFFCLL)
      v15 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v15 = v13;
    if (v15)
    {
      if (v15 >> 62)
        sub_20AEC60CC();
      v16 = (char *)operator new(4 * v15);
      v17 = (int *)&v16[4 * v12];
      *v17 = v5;
      v4 = (uint64_t)(v17 + 1);
      v18 = v9 - (_QWORD)v10;
      if ((void *)v9 == v10)
        goto LABEL_41;
    }
    else
    {
      v16 = 0;
      v17 = (int *)(4 * v12);
      *(_DWORD *)(4 * v12) = v5;
      v4 = 4 * v12 + 4;
      v18 = v9 - (_QWORD)v10;
      if ((void *)v9 == v10)
      {
LABEL_41:
        qword_25463CCD0 = (uint64_t)v17;
        qword_25463CCD8 = v4;
        qword_25463CCE0 = (uint64_t)&v16[4 * v15];
        if (v10)
          operator delete(v10);
        goto LABEL_4;
      }
    }
    v19 = v18 - 4;
    if (v19 < 0x2C)
      goto LABEL_48;
    if ((unint64_t)(v9 - (_QWORD)v16 - v11) < 0x20)
      goto LABEL_48;
    v20 = (v19 >> 2) + 1;
    v21 = 4 * (v20 & 0x7FFFFFFFFFFFFFF8);
    v22 = v9 - v21;
    v17 = (int *)((char *)v17 - v21);
    v23 = &v16[4 * v12 - 16];
    v24 = (__int128 *)(v9 - 16);
    v25 = v20 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      v26 = *v24;
      *((_OWORD *)v23 - 1) = *(v24 - 1);
      *(_OWORD *)v23 = v26;
      v23 -= 32;
      v24 -= 2;
      v25 -= 8;
    }
    while (v25);
    v9 = v22;
    if (v20 != (v20 & 0x7FFFFFFFFFFFFFF8))
    {
LABEL_48:
      do
      {
        v27 = *(_DWORD *)(v9 - 4);
        v9 -= 4;
        *--v17 = v27;
      }
      while ((void *)v9 != v10);
    }
    goto LABEL_41;
  }
}

void sub_20AF79C00(_Unwind_Exception *exception_object)
{
  if (qword_25463CCD0)
  {
    qword_25463CCD8 = qword_25463CCD0;
    operator delete((void *)qword_25463CCD0);
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF79C2C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  _BYTE *v11;
  int v12;
  uint64_t v13;
  __int128 v14;
  void *__p;
  char v16;
  unsigned __int8 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char v23;
  char v24;
  _QWORD v25[3];
  _BYTE v26[24];
  _BYTE v27[32];
  char v28;
  void *v29;
  char v30;
  char v31;
  char v32;
  char v33;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(std::__shared_weak_count **)(a1 + 16);
  v25[0] = &off_24C4169B8;
  v25[1] = v3;
  v25[2] = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20AF79EA0((uint64_t)v26, (uint64_t)v25);
  v25[0] = &off_24C4169B8;
  if (!v4)
    goto LABEL_8;
  v7 = (unint64_t *)&v4->__shared_owners_;
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    if (v33)
      goto LABEL_9;
  }
  else
  {
LABEL_8:
    if (v33)
    {
LABEL_9:
      v9 = *(_OWORD *)&v26[8];
      *(_QWORD *)&v26[8] = 0;
      *(_QWORD *)&v26[16] = 0;
      v10 = *(_OWORD *)v27;
      *(_OWORD *)(a2 + 16) = v9;
      *(_OWORD *)(a2 + 32) = v10;
      *(_OWORD *)(a2 + 46) = *(_OWORD *)&v27[14];
      *(_QWORD *)a2 = &off_24C403F68;
      *(_QWORD *)(a2 + 8) = &off_24C3F2CB0;
      *(_BYTE *)(a2 + 64) = 0;
      *(_BYTE *)(a2 + 120) = 0;
      *(_BYTE *)(a2 + 128) = 0;
      *(_BYTE *)(a2 + 152) = 0;
      *(_BYTE *)(a2 + 160) = 1;
LABEL_20:
      (**(void (***)(_BYTE *))v26)(v26);
      return;
    }
  }
  v14 = *(_OWORD *)v26;
  v11 = sub_20AECEBD0(&__p, (__int128 *)&v26[16]);
  *(_OWORD *)a2 = v14;
  *(_BYTE *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  if (v24)
  {
    *(_BYTE *)(a2 + 40) = 0;
    v12 = v17;
    if (v17)
    {
      *(_OWORD *)(a2 + 16) = *(_OWORD *)v11;
      *(_QWORD *)(a2 + 32) = *((_QWORD *)v11 + 2);
      *((_QWORD *)v11 + 1) = 0;
      *((_QWORD *)v11 + 2) = 0;
      *(_QWORD *)v11 = 0;
      *(_BYTE *)(a2 + 40) = 1;
    }
    *(_BYTE *)(a2 + 48) = 0;
    *(_BYTE *)(a2 + 104) = 0;
    if (v23)
    {
      v13 = v20;
      *(_QWORD *)(a2 + 64) = v19;
      *(_OWORD *)(a2 + 48) = v18;
      v18 = 0uLL;
      *(_QWORD *)(a2 + 72) = v13;
      *(_OWORD *)(a2 + 80) = v21;
      *(_QWORD *)(a2 + 96) = v22;
      v19 = 0;
      v21 = 0uLL;
      v22 = 0;
      *(_BYTE *)(a2 + 104) = 1;
    }
    *(_BYTE *)(a2 + 112) = 1;
    *(_BYTE *)(a2 + 160) = 0;
    if (v12 && v16 < 0)
      operator delete(__p);
    if (v33)
      goto LABEL_20;
  }
  else
  {
    *(_BYTE *)(a2 + 160) = 0;
    if (v33)
      goto LABEL_20;
  }
  if (v32)
  {
    if (v31)
    {
      if (v30 < 0)
        operator delete(v29);
      if (v28 < 0)
        operator delete(*(void **)&v27[24]);
    }
    if (v27[16])
    {
      if ((v27[15] & 0x80000000) != 0)
        operator delete(*(void **)&v26[16]);
    }
  }
}

void sub_20AF79E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  sub_20AEEF4E0((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_20AF79E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  sub_20B285E60((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20AF79EA0(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  unsigned __int8 v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  char *v23;
  uint64_t v24[2];
  unsigned int v25;
  void *v26[2];
  uint64_t v27;
  void *v28[2];
  uint64_t v29;
  char v30;
  __int128 v31;
  char v32;
  char v33;
  __int128 v34;
  __int128 __p;
  uint64_t v36;
  unsigned __int8 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  _DWORD v46[6];
  int v47;
  _QWORD v48[5];
  _QWORD *v49;

  v3 = *(uint64_t **)(a2 + 8);
  if (v3)
  {
    v6 = *v3;
    v5 = (std::__shared_weak_count *)v3[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_8;
    }
    else
    {
LABEL_7:
      if (v6)
      {
LABEL_8:
        v10 = atomic_load((unsigned __int8 *)&qword_25463CCE8);
        if ((v10 & 1) == 0 && __cxa_guard_acquire(&qword_25463CCE8))
        {
          sub_20AF7996C();
          __cxa_atexit((void (*)(void *))sub_20AF7993C, &qword_25463CCD0, &dword_20AEBB000);
          __cxa_guard_release(&qword_25463CCE8);
        }
        v11 = qword_25463CCD0;
        v12 = qword_25463CCD8;
        v13 = sub_20B285104(a2);
        v14 = (v12 - v11) >> 2;
        if (v12 == v11)
        {
          if (!v14)
          {
LABEL_15:
            v25 = sub_20B285104(a2);
            v17 = atomic_load((unsigned __int8 *)&qword_25463CCE8);
            if ((v17 & 1) == 0 && __cxa_guard_acquire(&qword_25463CCE8))
            {
              sub_20AF7996C();
              __cxa_atexit((void (*)(void *))sub_20AF7993C, &qword_25463CCD0, &dword_20AEBB000);
              __cxa_guard_release(&qword_25463CCE8);
            }
            v24[0] = (qword_25463CCD8 - qword_25463CCD0) >> 2;
            v24[1] = qword_25463CCD0;
            v47 = 0;
            sub_20AF810D0(v46, "Invalid CVPixelBuffer format '");
            sub_20AF80CB8((uint64_t)&v45, (uint64_t)v46, &v25);
            v48[0] = v46;
            v48[2] = v46;
            if (v47 == -1)
              sub_20AECFAB8();
            v49 = v48;
            ((void (*)(_QWORD **, _DWORD *))off_24C3F67C0[v47])(&v49, v46);
            sub_20AF80F5C((uint64_t)v48, (uint64_t)v46, v24);
            if (v47 == -1)
              sub_20AECFAB8();
            v48[0] = &v49;
            ((void (*)(void **__return_ptr, _QWORD *, _DWORD *))off_24C3F6808[v47])(v26, v48, v46);
            if (v47 != -1)
              ((void (*)(_QWORD *, _DWORD *))off_24C3F6790[v47])(v48, v46);
            *(_OWORD *)v28 = *(_OWORD *)v26;
            v29 = v27;
            v26[0] = 0;
            v26[1] = 0;
            v27 = 0;
            v30 = 1;
            sub_20B099E24((__int128 *)v28, (uint64_t)&v34);
            *(_OWORD *)a1 = v34;
            *(_BYTE *)(a1 + 16) = 0;
            *(_BYTE *)(a1 + 112) = 0;
            if (v44)
            {
              *(_BYTE *)(a1 + 40) = 0;
              v18 = v37;
              if (v37)
              {
                *(_OWORD *)(a1 + 16) = __p;
                *(_QWORD *)(a1 + 32) = v36;
                v36 = 0;
                __p = 0uLL;
                *(_BYTE *)(a1 + 40) = 1;
              }
              *(_BYTE *)(a1 + 48) = 0;
              *(_BYTE *)(a1 + 104) = 0;
              if (v43)
              {
                v19 = v40;
                *(_QWORD *)(a1 + 64) = v39;
                *(_OWORD *)(a1 + 48) = v38;
                v38 = 0uLL;
                *(_QWORD *)(a1 + 72) = v19;
                *(_OWORD *)(a1 + 80) = v41;
                *(_QWORD *)(a1 + 96) = v42;
                v39 = 0;
                v41 = 0uLL;
                v42 = 0;
                *(_BYTE *)(a1 + 104) = 1;
              }
              *(_BYTE *)(a1 + 112) = 1;
              *(_BYTE *)(a1 + 120) = 0;
              if (v18 && SHIBYTE(v36) < 0)
                operator delete((void *)__p);
            }
            else
            {
              *(_BYTE *)(a1 + 120) = 0;
            }
            if (v30 && SHIBYTE(v29) < 0)
              operator delete(v28[0]);
            if (SHIBYTE(v27) < 0)
              operator delete(v26[0]);
            return;
          }
        }
        else
        {
          v15 = 4 * v14;
          v16 = (_DWORD *)v11;
          while (*v16 != v13)
          {
            ++v16;
            v15 -= 4;
            if (!v15)
            {
              v16 = (_DWORD *)(v11 + ((v12 - v11) & 0xFFFFFFFFFFFFFFFCLL));
              break;
            }
          }
          if (v14 == ((uint64_t)v16 - v11) >> 2)
            goto LABEL_15;
        }
        v22 = sub_20B285104(a2);
        v23 = (char *)&loc_20AF7A2A0 + 4 * word_20B5B48E2[sub_20AF809EC(v22)];
        __asm { BR              X10 }
      }
    }
  }
  LOBYTE(v31) = 0;
  v33 = 0;
  sub_20B099CC4(&v31, (uint64_t)&v34);
  *(_OWORD *)a1 = v34;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (v44)
  {
    *(_BYTE *)(a1 + 40) = 0;
    v20 = v37;
    if (v37)
    {
      *(_OWORD *)(a1 + 16) = __p;
      *(_QWORD *)(a1 + 32) = v36;
      v36 = 0;
      __p = 0uLL;
      *(_BYTE *)(a1 + 40) = 1;
    }
    *(_BYTE *)(a1 + 48) = 0;
    *(_BYTE *)(a1 + 104) = 0;
    if (v43)
    {
      v21 = v40;
      *(_QWORD *)(a1 + 64) = v39;
      *(_OWORD *)(a1 + 48) = v38;
      v38 = 0uLL;
      *(_QWORD *)(a1 + 72) = v21;
      *(_OWORD *)(a1 + 80) = v41;
      *(_QWORD *)(a1 + 96) = v42;
      v39 = 0;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(a1 + 104) = 1;
    }
    *(_BYTE *)(a1 + 112) = 1;
    *(_BYTE *)(a1 + 120) = 0;
    if (v20 && SHIBYTE(v36) < 0)
      operator delete((void *)__p);
  }
  else
  {
    *(_BYTE *)(a1 + 120) = 0;
  }
  if (v33 && v32 < 0)
    operator delete((void *)v31);
}

void sub_20AF7C494(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463CCE8);
  _Unwind_Resume(a1);
}

void sub_20AF7C4AC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463CCE8);
  _Unwind_Resume(a1);
}

void sub_20AF7C4C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_20AF7C4D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_20AF7C4EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_20AF7C500(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_20AF7C514(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_20AF7C528(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_20AF7C53C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_20AF7C550(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_20AF7C564(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_20AF7C578(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_20AF7C58C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_20AF7C5A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_20AF7C5B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_20AF7C5C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_20AF7C5DC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_20B263764(v1);
  MEMORY[0x20BD3583C](v3, 0x10A3C40ED729E16);
  _Unwind_Resume(a1);
}

void sub_20AF7C74C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,char a31)
{
  if (a24 && a23 < 0)
    operator delete(__p);
  if (a17 < 0)
  {
    operator delete(a12);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20AF7C808(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _DWORD v5[14];
  uint64_t v6;

  v2 = *(unsigned int *)(a2 + 56);
  v3 = (char *)&v6;
  v4 = 0;
  switch((int)v2)
  {
    case 1:
      goto LABEL_15;
    case 2:
      v4 = 1;
      goto LABEL_15;
    case 3:
      v4 = 2;
      goto LABEL_15;
    case 4:
      v4 = 3;
      goto LABEL_15;
    case 5:
      v4 = 4;
      goto LABEL_15;
    case 7:
      v4 = 5;
      goto LABEL_15;
    case 8:
      v4 = 6;
      goto LABEL_15;
    case 21:
      v4 = 7;
      goto LABEL_15;
    case 22:
      v4 = 8;
      goto LABEL_15;
    case 25:
      v4 = 9;
      goto LABEL_15;
    case 31:
      v4 = 10;
      goto LABEL_15;
    case 32:
      v4 = 11;
      goto LABEL_15;
    case 37:
      v4 = 12;
      goto LABEL_15;
    case 38:
      v4 = 13;
LABEL_15:
      v3 = (char *)&v5[v4];
      break;
    default:
      break;
  }
  if (v3 - (char *)v5 != 56)
    __asm { BR              X10 }
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_24C4169B8;
  *(_BYTE *)(result + 120) = 1;
  return result;
}

void sub_20AF7C91C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (**v3)();
  __n128 v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t *v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  uint64_t *v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  uint64_t (**v37)();
  uint64_t v38;
  std::__shared_weak_count *v39;
  uint64_t (**v40)();
  uint64_t *v41;
  std::__shared_weak_count *v42;
  char v43;

  v37 = &off_24C3F6928;
  sub_20AF861C4((uint64_t)&v38, a2);
  v4.n128_f64[0] = sub_20AF84F84((uint64_t)&v40, &v37);
  if (v43)
  {
    v6 = (uint64_t)v41;
    v5 = v42;
    if (v42)
    {
      p_shared_owners = (unint64_t *)&v42->__shared_owners_;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldxr(p_shared_owners);
      while (__stxr(v9 + 1, p_shared_owners));
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
        std::__shared_weak_count::__release_weak(v5);
      }
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    if (v43)
    {
      v40 = &off_24C3F6830;
      v13 = v42;
      if (v42)
      {
        v14 = (unint64_t *)&v42->__shared_owners_;
        do
          v15 = __ldaxr(v14);
        while (__stlxr(v15 - 1, v14));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v13->__on_zero_shared)(v13, v4);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
    }
    if (v5)
    {
      v16 = (unint64_t *)&v5->__shared_owners_;
      do
        v17 = __ldxr(v16);
      while (__stxr(v17 + 1, v16));
      do
        v18 = __ldaxr(v16);
      while (__stlxr(v18 - 1, v16));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    sub_20B24F754(v6, &v40);
    if (v5)
    {
      v19 = (unint64_t *)&v5->__shared_owners_;
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 - 1, v19));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }
  else
  {
    v41 = 0;
    v42 = 0;
    v40 = v3;
  }
  v37 = &off_24C3F6928;
  v21 = v39;
  if (!v39)
    goto LABEL_35;
  v22 = (unint64_t *)&v39->__shared_owners_;
  do
    v23 = __ldaxr(v22);
  while (__stlxr(v23 - 1, v22));
  if (!v23)
  {
    ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
    std::__shared_weak_count::__release_weak(v21);
    v24 = v41;
    if (!v41)
      goto LABEL_50;
  }
  else
  {
LABEL_35:
    v24 = v41;
    if (!v41)
      goto LABEL_50;
  }
  v26 = *v24;
  v25 = (std::__shared_weak_count *)v24[1];
  if (!v25)
    goto LABEL_41;
  v27 = (unint64_t *)&v25->__shared_owners_;
  do
    v28 = __ldxr(v27);
  while (__stxr(v28 + 1, v27));
  do
    v29 = __ldaxr(v27);
  while (__stlxr(v29 - 1, v27));
  if (v29)
  {
LABEL_41:
    if (v26)
      goto LABEL_42;
LABEL_50:
    *(_QWORD *)(v2 + 8) = 0;
    *(_QWORD *)(v2 + 16) = 0;
    *(_QWORD *)v2 = v3;
    *(_BYTE *)(v2 + 120) = 1;
    v40 = v3;
    v34 = v42;
    if (!v42)
      return;
    goto LABEL_51;
  }
  ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
  std::__shared_weak_count::__release_weak(v25);
  if (!v26)
    goto LABEL_50;
LABEL_42:
  v31 = v41;
  v30 = v42;
  *(_QWORD *)v2 = v3;
  *(_QWORD *)(v2 + 8) = v31;
  *(_QWORD *)(v2 + 16) = v30;
  if (v30)
  {
    v32 = (unint64_t *)&v30->__shared_owners_;
    do
      v33 = __ldxr(v32);
    while (__stxr(v33 + 1, v32));
  }
  *(_BYTE *)(v2 + 120) = 1;
  v40 = v3;
  v34 = v42;
  if (v42)
  {
LABEL_51:
    v35 = (unint64_t *)&v34->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
}

void sub_20AF7E2CC()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20AF7E300(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;

  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v16 = (unint64_t *)&a12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_20AF7E898(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  int v7;
  char *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  void *v16;
  unint64_t *v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  void *v26[2];
  std::__shared_weak_count *v27;
  void *v28[2];
  std::__shared_weak_count *v29;
  void *__dst[2];
  std::__shared_weak_count *v31;
  int v32;
  void *v33;
  char v34;
  void *v35;
  char v36;
  char v37;
  char v38;
  __int128 v39;
  __int128 __p;
  uint64_t v41;
  unsigned __int8 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  char v48;
  char v49;
  int v50;
  uint64_t v51;
  char v52;
  _QWORD v53[2];

  if (*(_BYTE *)(a1 + 152))
  {
    v4 = *(_QWORD *)(a1 + 136);
    v3 = *(_QWORD *)(a1 + 144);
    *(_QWORD *)a2 = &off_24C4169B8;
    *(_QWORD *)(a2 + 8) = v4;
    *(_QWORD *)(a2 + 16) = v3;
    if (v3)
    {
      v5 = (unint64_t *)(v3 + 8);
      do
        v6 = __ldxr(v5);
      while (__stxr(v6 + 1, v5));
    }
    *(_BYTE *)(a2 + 120) = 1;
  }
  else
  {
    v51 = a1;
    v7 = *(_DWORD *)(a1 + 56);
    v50 = v7;
    v8 = (char *)&v43 + 8;
    v9 = 0;
    switch(v7)
    {
      case 1:
        goto LABEL_21;
      case 2:
        v9 = 1;
        goto LABEL_21;
      case 3:
        v9 = 2;
        goto LABEL_21;
      case 4:
        v9 = 3;
        goto LABEL_21;
      case 5:
        v9 = 4;
        goto LABEL_21;
      case 7:
        v9 = 5;
        goto LABEL_21;
      case 8:
        v9 = 6;
        goto LABEL_21;
      case 21:
        v9 = 7;
        goto LABEL_21;
      case 22:
        v9 = 8;
        goto LABEL_21;
      case 25:
        v9 = 9;
        goto LABEL_21;
      case 31:
        v9 = 10;
        goto LABEL_21;
      case 32:
        v9 = 11;
        goto LABEL_21;
      case 37:
        v9 = 12;
        goto LABEL_21;
      case 38:
        v9 = 13;
LABEL_21:
        v8 = (char *)&v39 + 4 * v9;
        break;
      default:
        break;
    }
    if (v8 - (char *)&v39 == 56)
    {
      sub_20AF9628C((uint64_t)v28, (unsigned int *)&v50);
      if (SHIBYTE(v29) < 0)
      {
        sub_20AEC60F4(__dst, v28[0], (unint64_t)v28[1]);
      }
      else
      {
        *(_OWORD *)__dst = *(_OWORD *)v28;
        v31 = v29;
      }
      LOBYTE(v32) = 1;
      LOBYTE(v33) = 0;
      v37 = 0;
      v38 = 1;
      sub_20AECCC3C(0xCu, (__int128 *)__dst, (uint64_t)&v39);
      *(_OWORD *)a2 = v39;
      *(_BYTE *)(a2 + 16) = 0;
      *(_BYTE *)(a2 + 112) = 0;
      if (v49)
      {
        *(_BYTE *)(a2 + 40) = 0;
        v19 = v42;
        if (v42)
        {
          *(_OWORD *)(a2 + 16) = __p;
          *(_QWORD *)(a2 + 32) = v41;
          v41 = 0;
          __p = 0uLL;
          *(_BYTE *)(a2 + 40) = 1;
        }
        *(_BYTE *)(a2 + 48) = 0;
        *(_BYTE *)(a2 + 104) = 0;
        if (v48)
        {
          v20 = v45;
          *(_QWORD *)(a2 + 64) = v44;
          *(_OWORD *)(a2 + 48) = v43;
          v43 = 0uLL;
          *(_QWORD *)(a2 + 72) = v20;
          *(_OWORD *)(a2 + 80) = v46;
          *(_QWORD *)(a2 + 96) = v47;
          v44 = 0;
          v46 = 0uLL;
          v47 = 0;
          *(_BYTE *)(a2 + 104) = 1;
        }
        *(_BYTE *)(a2 + 112) = 1;
        *(_BYTE *)(a2 + 120) = 0;
        if (v19 && SHIBYTE(v41) < 0)
          operator delete((void *)__p);
      }
      else
      {
        *(_BYTE *)(a2 + 120) = 0;
      }
      if (v38)
      {
        if (v37)
        {
          if (v36 < 0)
            operator delete(v35);
          if (v34 < 0)
            operator delete(v33);
        }
        if ((_BYTE)v32 && SHIBYTE(v31) < 0)
          operator delete(__dst[0]);
      }
      if (SHIBYTE(v29) < 0)
        operator delete(v28[0]);
    }
    else
    {
      *(_QWORD *)&v39 = &v51;
      sub_20AF969E8((uint64_t)v28, v7);
      if (!v28[1])
        goto LABEL_37;
      v11 = *(_QWORD *)v28[1];
      v10 = (std::__shared_weak_count *)*((_QWORD *)v28[1] + 1);
      if (v10)
      {
        p_shared_owners = (unint64_t *)&v10->__shared_owners_;
        do
          v13 = __ldxr(p_shared_owners);
        while (__stxr(v13 + 1, p_shared_owners));
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      if (v11)
      {
        v16 = v28[1];
        v15 = v29;
        *(_QWORD *)a2 = &off_24C4169B8;
        *(_QWORD *)(a2 + 8) = v16;
        *(_QWORD *)(a2 + 16) = v15;
        if (v15)
        {
          v17 = (unint64_t *)&v15->__shared_owners_;
          do
            v18 = __ldxr(v17);
          while (__stxr(v18 + 1, v17));
        }
        *(_BYTE *)(a2 + 120) = 1;
      }
      else
      {
LABEL_37:
        v32 = 0;
        sub_20AF9CDA4(__dst, "image does not contain a CVPixelBuffer");
        if (v32 == -1)
          sub_20AECFAB8();
        v53[0] = &v52;
        ((void (*)(void **__return_ptr, _QWORD *, void **))off_24C3F6808[v32])(v26, v53, __dst);
        if (v32 != -1)
          ((void (*)(_QWORD *, void **))off_24C3F6790[v32])(v53, __dst);
        if (SHIBYTE(v27) < 0)
        {
          sub_20AEC60F4(__dst, v26[0], (unint64_t)v26[1]);
        }
        else
        {
          *(_OWORD *)__dst = *(_OWORD *)v26;
          v31 = v27;
        }
        LOBYTE(v32) = 1;
        LOBYTE(v33) = 0;
        v37 = 0;
        v38 = 1;
        sub_20AECCC3C(0xCu, (__int128 *)__dst, (uint64_t)&v39);
        *(_OWORD *)a2 = v39;
        *(_BYTE *)(a2 + 16) = 0;
        *(_BYTE *)(a2 + 112) = 0;
        if (v49)
        {
          *(_BYTE *)(a2 + 40) = 0;
          v21 = v42;
          if (v42)
          {
            *(_OWORD *)(a2 + 16) = __p;
            *(_QWORD *)(a2 + 32) = v41;
            v41 = 0;
            __p = 0uLL;
            *(_BYTE *)(a2 + 40) = 1;
          }
          *(_BYTE *)(a2 + 48) = 0;
          *(_BYTE *)(a2 + 104) = 0;
          if (v48)
          {
            v22 = v45;
            *(_QWORD *)(a2 + 64) = v44;
            *(_OWORD *)(a2 + 48) = v43;
            v43 = 0uLL;
            *(_QWORD *)(a2 + 72) = v22;
            *(_OWORD *)(a2 + 80) = v46;
            *(_QWORD *)(a2 + 96) = v47;
            v44 = 0;
            v46 = 0uLL;
            v47 = 0;
            *(_BYTE *)(a2 + 104) = 1;
          }
          *(_BYTE *)(a2 + 112) = 1;
          *(_BYTE *)(a2 + 120) = 0;
          if (v21 && SHIBYTE(v41) < 0)
            operator delete((void *)__p);
        }
        else
        {
          *(_BYTE *)(a2 + 120) = 0;
        }
        if (v38)
        {
          if (v37)
          {
            if (v36 < 0)
              operator delete(v35);
            if (v34 < 0)
              operator delete(v33);
          }
          if ((_BYTE)v32 && SHIBYTE(v31) < 0)
            operator delete(__dst[0]);
        }
        if (SHIBYTE(v27) < 0)
          operator delete(v26[0]);
      }
      v28[0] = &off_24C4169B8;
      v23 = v29;
      if (v29)
      {
        v24 = (unint64_t *)&v29->__shared_owners_;
        do
          v25 = __ldaxr(v24);
        while (__stlxr(v25 - 1, v24));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
    }
  }
}

void sub_20AF7EE18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,int a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,char a41,int a42,__int16 a43,char a44,char a45)
{
  if (a14 < 0)
    operator delete(__p);
  sub_20B285E60(&a15);
  _Unwind_Resume(a1);
}

void sub_20AF7EF30(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  mach_timebase_info v10;
  int v11;
  _BYTE *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unsigned __int8 v20;
  unsigned __int128 *v21;
  unsigned __int128 v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD v30[3];
  __int128 v31;
  __int128 v32;
  char v33;
  char v34;
  void *v35;
  char v36;
  void *v37;
  char v38;
  char v39;
  char v40;
  char v41;
  mach_timebase_info info;
  std::__shared_weak_count *v43;
  __int128 v44;
  void *__p;
  char v46;
  unsigned __int8 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  char v53;
  char v54;
  mach_timebase_info v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  char v59;
  __int128 v60;
  uint64_t v61;
  char v62;
  __int128 v63;
  char v64;
  __int128 v65;
  uint64_t v66;
  unsigned __int128 v67;
  char v68;
  _BYTE v69[40];
  uint64_t v70;

  v70 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  v30[0] = &off_24C4169B8;
  v30[1] = v5;
  v30[2] = v6;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  sub_20AF79EA0((uint64_t)&v31, (uint64_t)v30);
  v30[0] = &off_24C4169B8;
  if (!v6)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (v41)
    {
LABEL_6:
      if (!*((_BYTE *)a2 + 384))
      {
        v15 = mach_continuous_time();
        v16 = atomic_load((unsigned __int8 *)&qword_25463D170);
        if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
        {
          mach_timebase_info(&info);
          LODWORD(v26) = info.numer;
          LODWORD(v27) = info.denom;
          *(double *)&qword_25463D168 = (double)v26 / (double)v27;
          __cxa_guard_release(&qword_25463D170);
        }
        v55 = (mach_timebase_info)llround(*(double *)&qword_25463D168 * (double)v15);
        v56 = 2;
        LOBYTE(v57) = 0;
        v59 = 0;
        LOBYTE(v60) = 0;
        v62 = 0;
        LOBYTE(v63) = 0;
        v64 = 0;
        LOBYTE(v65) = 0;
        v68 = 0;
        v69[0] = 0;
        v69[24] = 0;
        sub_20AF9CE94(&info, (uint64_t)&v31, (uint64_t)&v55);
        sub_20AF4EA3C((uint64_t)&v55);
        sub_20AFA7F18((uint64_t)&v44, (uint64_t)&info);
        v17 = v43;
        if (v43)
        {
          v18 = (unint64_t *)&v43->__shared_owners_;
          do
            v19 = __ldaxr(v18);
          while (__stlxr(v19 - 1, v18));
          if (!v19)
          {
            ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
            std::__shared_weak_count::__release_weak(v17);
          }
        }
LABEL_58:
        sub_20AF4BAD4(a3, 0, &v44);
        *(_BYTE *)(a3 + 528) = 1;
        sub_20AED5474((uint64_t)&v44);
        if (!v41)
          goto LABEL_59;
LABEL_36:
        (*(void (**)(__int128 *))v31)(&v31);
        return;
      }
      if (*((_BYTE *)a2 + 168))
      {
        v10 = (mach_timebase_info)*((_QWORD *)a2 + 19);
        v9 = *((_QWORD *)a2 + 20);
        if (*((_BYTE *)a2 + 24))
          goto LABEL_9;
      }
      else
      {
        v9 = mach_continuous_time();
        v20 = atomic_load((unsigned __int8 *)&qword_25463D170);
        if ((v20 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
        {
          mach_timebase_info(&v55);
          LODWORD(v28) = v55.numer;
          LODWORD(v29) = v55.denom;
          *(double *)&qword_25463D168 = (double)v28 / (double)v29;
          __cxa_guard_release(&qword_25463D170);
        }
        v10 = (mach_timebase_info)llround(*(double *)&qword_25463D168 * (double)v9);
        LOBYTE(v9) = 2;
        if (*((_BYTE *)a2 + 24))
        {
LABEL_9:
          sub_20AFA84B0((uint64_t *)a2, 1000000000);
          v11 = *((unsigned __int8 *)a2 + 24);
          v55 = v10;
          LOBYTE(v56) = v9;
          LOBYTE(v57) = 0;
          v59 = 0;
          if (v11)
          {
            if (*((char *)a2 + 23) < 0)
            {
              sub_20AEC60F4(&v57, *(void **)a2, *((_QWORD *)a2 + 1));
            }
            else
            {
              v57 = *a2;
              v58 = *((_QWORD *)a2 + 2);
            }
            v59 = 1;
            LOBYTE(v60) = 0;
            v62 = 0;
            if (!*((_BYTE *)a2 + 120))
            {
LABEL_43:
              LOBYTE(v63) = 0;
              v64 = 0;
              if (!*((_BYTE *)a2 + 144))
              {
LABEL_45:
                LOBYTE(v65) = 0;
                v68 = 0;
                if (*((_BYTE *)a2 + 80))
                {
                  if (*((char *)a2 + 55) < 0)
                  {
                    sub_20AEC60F4(&v65, *((void **)a2 + 4), *((_QWORD *)a2 + 5));
                  }
                  else
                  {
                    v65 = a2[2];
                    v66 = *((_QWORD *)a2 + 6);
                  }
                  v21 = (unsigned __int128 *)(a2 + 4);
                  do
                    v22 = __ldaxp(v21);
                  while (__stlxp(v22, v21));
                  v67 = v22;
                  v68 = 1;
                }
                sub_20AED3838((uint64_t)v69, (uint64_t)(a2 + 11));
                sub_20AF9CE94(&info, (uint64_t)&v31, (uint64_t)&v55);
                sub_20AFA7F18((uint64_t)&v44, (uint64_t)&info);
                v23 = v43;
                if (v43)
                {
                  v24 = (unint64_t *)&v43->__shared_owners_;
                  do
                    v25 = __ldaxr(v24);
                  while (__stlxr(v25 - 1, v24));
                  if (!v25)
                  {
                    ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
                    std::__shared_weak_count::__release_weak(v23);
                  }
                }
                sub_20AF4EA3C((uint64_t)&v55);
                goto LABEL_58;
              }
LABEL_44:
              v63 = a2[8];
              v64 = 1;
              goto LABEL_45;
            }
LABEL_32:
            if (*((char *)a2 + 119) < 0)
            {
              sub_20AEC60F4(&v60, *((void **)a2 + 12), *((_QWORD *)a2 + 13));
            }
            else
            {
              v60 = a2[6];
              v61 = *((_QWORD *)a2 + 14);
            }
            v62 = 1;
            LOBYTE(v63) = 0;
            v64 = 0;
            if (!*((_BYTE *)a2 + 144))
              goto LABEL_45;
            goto LABEL_44;
          }
LABEL_31:
          LOBYTE(v60) = 0;
          v62 = 0;
          if (!*((_BYTE *)a2 + 120))
            goto LABEL_43;
          goto LABEL_32;
        }
      }
      v55 = v10;
      LOBYTE(v56) = v9;
      LOBYTE(v57) = 0;
      v59 = 0;
      goto LABEL_31;
    }
  }
  else
  {
LABEL_5:
    if (v41)
      goto LABEL_6;
  }
  v44 = v31;
  v12 = sub_20AECEBD0(&__p, &v32);
  *(_OWORD *)a3 = v44;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (!v54)
  {
    *(_BYTE *)(a3 + 528) = 0;
    goto LABEL_35;
  }
  *(_BYTE *)(a3 + 40) = 0;
  v13 = v47;
  if (v47)
  {
    *(_OWORD *)(a3 + 16) = *(_OWORD *)v12;
    *(_QWORD *)(a3 + 32) = *((_QWORD *)v12 + 2);
    *((_QWORD *)v12 + 1) = 0;
    *((_QWORD *)v12 + 2) = 0;
    *(_QWORD *)v12 = 0;
    *(_BYTE *)(a3 + 40) = 1;
  }
  *(_BYTE *)(a3 + 48) = 0;
  *(_BYTE *)(a3 + 104) = 0;
  if (v53)
  {
    v14 = v50;
    *(_QWORD *)(a3 + 64) = v49;
    *(_OWORD *)(a3 + 48) = v48;
    v48 = 0uLL;
    *(_QWORD *)(a3 + 72) = v14;
    *(_OWORD *)(a3 + 80) = v51;
    *(_QWORD *)(a3 + 96) = v52;
    v49 = 0;
    v51 = 0uLL;
    v52 = 0;
    *(_BYTE *)(a3 + 104) = 1;
  }
  *(_BYTE *)(a3 + 112) = 1;
  *(_BYTE *)(a3 + 528) = 0;
  if (!v13 || (v46 & 0x80000000) == 0)
  {
LABEL_35:
    if (!v41)
      goto LABEL_59;
    goto LABEL_36;
  }
  operator delete(__p);
  if (v41)
    goto LABEL_36;
LABEL_59:
  if (v40)
  {
    if (v39)
    {
      if (v38 < 0)
        operator delete(v37);
      if (v36 < 0)
        operator delete(v35);
    }
    if (v34)
    {
      if (v33 < 0)
        operator delete((void *)v32);
    }
  }
}

void sub_20AF7F4CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  __cxa_guard_abort(&qword_25463D170);
  sub_20AEEF4E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF7F4F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  if (LOBYTE(STACK[0x2E8]))
  {
    if (SLOBYTE(STACK[0x2E7]) < 0)
    {
      operator delete((void *)STACK[0x2D0]);
      sub_20AEEF4E0((uint64_t)va);
      _Unwind_Resume(a1);
    }
  }
  sub_20AEEF4E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF7F5F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B285E60(&a9);
  _Unwind_Resume(a1);
}

BOOL VZImageIsCVPixelFormatSupported_0(int a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  _DWORD *v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25463CCC8);
  if ((v2 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_25463CCC8))
    {
      sub_20AF7949C();
      __cxa_atexit((void (*)(void *))sub_20AF7993C, &qword_25463CCB0, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463CCC8);
    }
  }
  v3 = (qword_25463CCB8 - qword_25463CCB0) >> 2;
  if (qword_25463CCB8 == qword_25463CCB0)
    return v3 != 0;
  v4 = 4 * v3;
  v5 = (_DWORD *)qword_25463CCB0;
  while (*v5 != a1)
  {
    ++v5;
    v4 -= 4;
    if (!v4)
    {
      v5 = (_DWORD *)(qword_25463CCB0 + ((qword_25463CCB8 - qword_25463CCB0) & 0xFFFFFFFFFFFFFFFCLL));
      return v3 != ((uint64_t)v5 - qword_25463CCB0) >> 2;
    }
  }
  return v3 != ((uint64_t)v5 - qword_25463CCB0) >> 2;
}

void sub_20AF7F6DC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463CCC8);
  _Unwind_Resume(a1);
}

BOOL VZImageIsCVPixelFormatPartiallySupported_0(int a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  _DWORD *v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25463CCE8);
  if ((v2 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_25463CCE8))
    {
      sub_20AF7996C();
      __cxa_atexit((void (*)(void *))sub_20AF7993C, &qword_25463CCD0, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463CCE8);
    }
  }
  v3 = (qword_25463CCD8 - qword_25463CCD0) >> 2;
  if (qword_25463CCD8 == qword_25463CCD0)
    return v3 != 0;
  v4 = 4 * v3;
  v5 = (_DWORD *)qword_25463CCD0;
  while (*v5 != a1)
  {
    ++v5;
    v4 -= 4;
    if (!v4)
    {
      v5 = (_DWORD *)(qword_25463CCD0 + ((qword_25463CCD8 - qword_25463CCD0) & 0xFFFFFFFFFFFFFFFCLL));
      return v3 != ((uint64_t)v5 - qword_25463CCD0) >> 2;
    }
  }
  return v3 != ((uint64_t)v5 - qword_25463CCD0) >> 2;
}

void sub_20AF7F7C8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463CCE8);
  _Unwind_Resume(a1);
}

void sub_20AF7F7E0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (***v4)();
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  char v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  __int16 v21;
  unint64_t v22;
  unsigned __int8 v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  _BYTE v36[30];
  __int128 v37;
  __int128 __p;
  _BYTE v39[32];
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  void *v49;
  __int128 v50;
  char v51;
  __int128 v52;
  uint64_t v53;
  int v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  std::__shared_weak_count *v58;
  __int128 __dst;
  uint64_t v60;
  int v61;
  uint64_t v62;

  v62 = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t (****)())(a1 + 424);
  v5 = *(std::__shared_weak_count **)(a1 + 432);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  if (v4 && *v4 == &off_24C411FE8)
  {
    v8 = 1;
    if (!v5)
      goto LABEL_12;
  }
  else
  {
    v8 = 0;
    if (!v5)
      goto LABEL_12;
  }
  v9 = (unint64_t *)&v5->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
  {
LABEL_12:
    if ((v8 & 1) != 0)
      goto LABEL_13;
LABEL_24:
    v12 = 0;
    v57 = 0;
    v58 = 0;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if ((v8 & 1) == 0)
    goto LABEL_24;
LABEL_13:
  v11 = *(_QWORD *)(a1 + 424);
  v12 = *(std::__shared_weak_count **)(a1 + 432);
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v57 = v11;
  v58 = v12;
  if (!v11)
  {
LABEL_25:
    v23 = atomic_load((unsigned __int8 *)&qword_25463CF48);
    if ((v23 & 1) == 0 && __cxa_guard_acquire(&qword_25463CF48))
    {
      v52 = xmmword_20B5B0AE0;
      sub_20B1DFBA8((uint64_t *)&v52);
      __cxa_atexit((void (*)(void *))sub_20B1DFE54, &xmmword_25463CDA8, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463CF48);
    }
    if (byte_25463CDBF < 0)
    {
      sub_20AEC60F4(&__dst, (void *)xmmword_25463CDA8, *((unint64_t *)&xmmword_25463CDA8 + 1));
    }
    else
    {
      __dst = xmmword_25463CDA8;
      v60 = unk_25463CDB8;
    }
    v61 = dword_25463CDC0;
    sub_20AF4BC0C(&v55, (uint64_t)&__dst, 1uLL);
    if (*(char *)(a1 + 23) < 0)
    {
      sub_20AEC60F4(&v52, *(void **)a1, *(_QWORD *)(a1 + 8));
    }
    else
    {
      v52 = *(_OWORD *)a1;
      v53 = *(_QWORD *)(a1 + 16);
    }
    v54 = *(_DWORD *)(a1 + 24);
    v49 = operator new(0x28uLL);
    v50 = xmmword_20B5C1100;
    strcpy((char *)v49, "cannot return data as CVPixelBuffer");
    v51 = 1;
    sub_20B099ED4((uint64_t *)&v55, (uint64_t)&v52, (uint64_t)&v49, (uint64_t)&v37);
    *(_OWORD *)a2 = v37;
    *(_BYTE *)(a2 + 16) = 0;
    *(_BYTE *)(a2 + 112) = 0;
    if (v45)
    {
      *(_BYTE *)(a2 + 40) = 0;
      v24 = v39[8];
      if (v39[8])
      {
        *(_OWORD *)(a2 + 16) = __p;
        *(_QWORD *)(a2 + 32) = *(_QWORD *)v39;
        *(_QWORD *)v39 = 0;
        __p = 0uLL;
        *(_BYTE *)(a2 + 40) = 1;
      }
      *(_BYTE *)(a2 + 48) = 0;
      *(_BYTE *)(a2 + 104) = 0;
      if (v44)
      {
        v25 = v41;
        *(_QWORD *)(a2 + 64) = v40;
        *(_OWORD *)(a2 + 48) = *(_OWORD *)&v39[16];
        *(_OWORD *)&v39[16] = 0uLL;
        *(_QWORD *)(a2 + 72) = v25;
        *(_OWORD *)(a2 + 80) = v42;
        *(_QWORD *)(a2 + 96) = v43;
        v40 = 0;
        v42 = 0uLL;
        v43 = 0;
        *(_BYTE *)(a2 + 104) = 1;
      }
      *(_BYTE *)(a2 + 112) = 1;
      *(_BYTE *)(a2 + 120) = 0;
      if (v24 && (v39[7] & 0x80000000) != 0)
        operator delete((void *)__p);
      if (!v51)
      {
LABEL_45:
        if (SHIBYTE(v53) < 0)
          operator delete((void *)v52);
        v26 = (uint64_t)v55;
        if (v55)
        {
          v27 = v56;
          v28 = v55;
          if ((void *)v56 != v55)
          {
            do
            {
              if (*(char *)(v27 - 9) < 0)
                operator delete(*(void **)(v27 - 32));
              v27 -= 32;
            }
            while (v27 != v26);
            v28 = v55;
          }
          v56 = v26;
          operator delete(v28);
        }
        if (SHIBYTE(v60) < 0)
          operator delete((void *)__dst);
        if (v12)
          goto LABEL_71;
        return;
      }
    }
    else
    {
      *(_BYTE *)(a2 + 120) = 0;
      if (!v51)
        goto LABEL_45;
    }
    if (SHIBYTE(v50) < 0)
      operator delete(v49);
    goto LABEL_45;
  }
  v15 = *(_QWORD *)(v11 + 16);
  v16 = *(std::__shared_weak_count **)(v11 + 24);
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    v19 = *(_QWORD *)(v11 + 48);
    v20 = *(_DWORD *)(v11 + 56);
    v21 = *(_WORD *)(v11 + 60);
    do
      v22 = __ldxr(v17);
    while (__stxr(v22 + 1, v17));
  }
  else
  {
    v19 = *(_QWORD *)(v11 + 48);
    v20 = *(_DWORD *)(v11 + 56);
    v21 = *(_WORD *)(v11 + 60);
  }
  v35 = v15;
  *(_DWORD *)&v36[8] = *(_DWORD *)(v11 + 40);
  *(_QWORD *)v36 = *(_QWORD *)(v11 + 32);
  *(_QWORD *)&v36[16] = v19;
  *(_DWORD *)&v36[24] = v20;
  *(_WORD *)&v36[28] = v21;
  if (v16)
  {
    v29 = (unint64_t *)&v16->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  *(_QWORD *)&v37 = &off_24C403F68;
  *((_QWORD *)&v37 + 1) = &off_24C3F2CB0;
  *(_QWORD *)&__p = v35;
  *((_QWORD *)&__p + 1) = v16;
  *(_OWORD *)v39 = *(_OWORD *)v36;
  *(_OWORD *)&v39[14] = *(_OWORD *)&v36[14];
  LOBYTE(v40) = 0;
  v46 = 0;
  v47 = 0;
  v48 = 0;
  sub_20AF7C808(a2, (uint64_t)&v37);
  *(_QWORD *)&v37 = &off_24C403F68;
  *((_QWORD *)&v37 + 1) = &off_24C3F2CB0;
  if (v16)
  {
    v31 = (unint64_t *)&v16->__shared_owners_;
    do
      v32 = __ldaxr(v31);
    while (__stlxr(v32 - 1, v31));
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v12 = v58;
  if (v58)
  {
LABEL_71:
    v33 = (unint64_t *)&v12->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_20AF7FD30(_Unwind_Exception *a1)
{
  uint64_t v1;

  __cxa_guard_abort(&qword_25463CF48);
  sub_20AEC147C(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_20AF7FD50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42,char a43)
{
  uint64_t v43;

  sub_20AF4BA50((void **)(v43 - 152));
  if (*(char *)(v43 - 89) < 0)
    operator delete(*(void **)(v43 - 112));
  sub_20AEC147C(v43 - 128);
  _Unwind_Resume(a1);
}

void sub_20AF7FDF4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (***v4)();
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  char v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  __int16 v21;
  unint64_t v22;
  unsigned __int8 v23;
  int v24;
  uint64_t v25;
  void **v26;
  void **v27;
  void *v28;
  unint64_t *v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  _QWORD *v39;
  unint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  __int128 v57;
  _BYTE v58[30];
  __int128 v59;
  void *__p[2];
  _BYTE v61[32];
  uint64_t (**v62)();
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  char v66;
  char v67;
  char v68;
  uint64_t (**v69)();
  std::__shared_weak_count *v70;
  char v71;
  void *v72;
  __int128 v73;
  char v74;
  void *v75;
  void **v76;
  uint64_t v77;
  std::__shared_weak_count *v78;
  __int128 v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  char v83;
  void *v84;
  char v85;
  void *v86;
  char v87;
  char v88;
  char v89;
  uint64_t (**v90)();
  _QWORD *v91;
  std::__shared_weak_count *v92;
  __int128 v93;
  uint64_t v94;
  int v95;
  void *v96;
  char v97;
  void *v98;
  char v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  int v106;
  char v107;
  char *v108;
  __int128 __dst;
  __int128 v110;
  uint64_t v111;
  unsigned __int8 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  uint64_t v117;
  char v118;
  char v119;
  uint64_t v120;

  v120 = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t (****)())(a1 + 424);
  v5 = *(std::__shared_weak_count **)(a1 + 432);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  if (v4 && *v4 == &off_24C411FE8)
  {
    v8 = 1;
    if (!v5)
      goto LABEL_12;
  }
  else
  {
    v8 = 0;
    if (!v5)
      goto LABEL_12;
  }
  v9 = (unint64_t *)&v5->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
  {
LABEL_12:
    if ((v8 & 1) != 0)
      goto LABEL_13;
LABEL_24:
    v12 = 0;
    v77 = 0;
    v78 = 0;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if ((v8 & 1) == 0)
    goto LABEL_24;
LABEL_13:
  v11 = *(_QWORD *)(a1 + 424);
  v12 = *(std::__shared_weak_count **)(a1 + 432);
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v77 = v11;
  v78 = v12;
  if (!v11)
  {
LABEL_25:
    v23 = atomic_load((unsigned __int8 *)&qword_25463CF48);
    if ((v23 & 1) == 0 && __cxa_guard_acquire(&qword_25463CF48))
    {
      v93 = xmmword_20B5B0AE0;
      sub_20B1DFBA8((uint64_t *)&v93);
      __cxa_atexit((void (*)(void *))sub_20B1DFE54, &xmmword_25463CDA8, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463CF48);
    }
    if (byte_25463CDBF < 0)
    {
      sub_20AEC60F4(&__dst, (void *)xmmword_25463CDA8, *((unint64_t *)&xmmword_25463CDA8 + 1));
    }
    else
    {
      __dst = xmmword_25463CDA8;
      *(_QWORD *)&v110 = unk_25463CDB8;
    }
    DWORD2(v110) = dword_25463CDC0;
    sub_20AF4BC0C(&v75, (uint64_t)&__dst, 1uLL);
    if (*(char *)(a1 + 23) < 0)
    {
      sub_20AEC60F4(&v93, *(void **)a1, *(_QWORD *)(a1 + 8));
    }
    else
    {
      v93 = *(_OWORD *)a1;
      v94 = *(_QWORD *)(a1 + 16);
    }
    v95 = *(_DWORD *)(a1 + 24);
    v72 = operator new(0x28uLL);
    v73 = xmmword_20B5C1100;
    strcpy((char *)v72, "cannot return data as CVPixelBuffer");
    v74 = 1;
    sub_20B099ED4((uint64_t *)&v75, (uint64_t)&v93, (uint64_t)&v72, (uint64_t)&v59);
    *(_OWORD *)a2 = v59;
    *(_BYTE *)(a2 + 16) = 0;
    *(_BYTE *)(a2 + 112) = 0;
    if (v67)
    {
      *(_BYTE *)(a2 + 40) = 0;
      v24 = v61[8];
      if (v61[8])
      {
        *(_OWORD *)(a2 + 16) = *(_OWORD *)__p;
        *(_QWORD *)(a2 + 32) = *(_QWORD *)v61;
        __p[1] = 0;
        *(_QWORD *)v61 = 0;
        __p[0] = 0;
        *(_BYTE *)(a2 + 40) = 1;
      }
      *(_BYTE *)(a2 + 48) = 0;
      *(_BYTE *)(a2 + 104) = 0;
      if (v66)
      {
        v25 = v63;
        *(_QWORD *)(a2 + 64) = v62;
        *(_OWORD *)(a2 + 48) = *(_OWORD *)&v61[16];
        *(_OWORD *)&v61[16] = 0uLL;
        *(_QWORD *)(a2 + 72) = v25;
        *(_OWORD *)(a2 + 80) = v64;
        *(_QWORD *)(a2 + 96) = v65;
        v62 = 0;
        v64 = 0uLL;
        v65 = 0;
        *(_BYTE *)(a2 + 104) = 1;
      }
      *(_BYTE *)(a2 + 112) = 1;
      *(_BYTE *)(a2 + 120) = 0;
      if (v24 && (v61[7] & 0x80000000) != 0)
        operator delete(__p[0]);
      if (!v74)
      {
LABEL_45:
        if (SHIBYTE(v94) < 0)
          operator delete((void *)v93);
        v26 = (void **)v75;
        if (v75)
        {
          v27 = v76;
          v28 = v75;
          if (v76 != v75)
          {
            do
            {
              if (*((char *)v27 - 9) < 0)
                operator delete(*(v27 - 4));
              v27 -= 4;
            }
            while (v27 != v26);
            v28 = v75;
          }
          v76 = v26;
          operator delete(v28);
        }
        if (SBYTE7(v110) < 0)
          operator delete((void *)__dst);
        if (v12)
          goto LABEL_166;
        return;
      }
    }
    else
    {
      *(_BYTE *)(a2 + 120) = 0;
      if (!v74)
        goto LABEL_45;
    }
    if (SHIBYTE(v73) < 0)
      operator delete(v72);
    goto LABEL_45;
  }
  v15 = *(_QWORD *)(v11 + 16);
  v16 = *(std::__shared_weak_count **)(v11 + 24);
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    v19 = *(_QWORD *)(v11 + 48);
    v20 = *(_DWORD *)(v11 + 56);
    v21 = *(_WORD *)(v11 + 60);
    do
      v22 = __ldxr(v17);
    while (__stxr(v22 + 1, v17));
  }
  else
  {
    v19 = *(_QWORD *)(v11 + 48);
    v20 = *(_DWORD *)(v11 + 56);
    v21 = *(_WORD *)(v11 + 60);
  }
  *(_QWORD *)&v57 = v15;
  *((_QWORD *)&v57 + 1) = v16;
  *(_DWORD *)&v58[8] = *(_DWORD *)(v11 + 40);
  *(_QWORD *)v58 = *(_QWORD *)(v11 + 32);
  *(_QWORD *)&v58[16] = v19;
  *(_DWORD *)&v58[24] = v20;
  *(_WORD *)&v58[28] = v21;
  if (v16)
  {
    v29 = (unint64_t *)&v16->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  *(_QWORD *)&v59 = &off_24C403F68;
  *((_QWORD *)&v59 + 1) = &off_24C3F2CB0;
  *(_OWORD *)__p = v57;
  *(_OWORD *)v61 = *(_OWORD *)v58;
  *(_OWORD *)&v61[14] = *(_OWORD *)&v58[14];
  LOBYTE(v62) = 0;
  v68 = 0;
  LOBYTE(v69) = 0;
  v71 = 0;
  v103 = a1;
  v102 = *(_QWORD *)&v58[22] >> 16;
  v31 = (char *)&v113 + 8;
  v32 = 0;
  switch(v102)
  {
    case 1u:
      goto LABEL_79;
    case 2u:
      v32 = 1;
      goto LABEL_79;
    case 3u:
      v32 = 2;
      goto LABEL_79;
    case 4u:
      v32 = 3;
      goto LABEL_79;
    case 5u:
      v32 = 4;
      goto LABEL_79;
    case 7u:
      v32 = 5;
      goto LABEL_79;
    case 8u:
      v32 = 6;
      goto LABEL_79;
    case 0x15u:
      v32 = 7;
      goto LABEL_79;
    case 0x16u:
      v32 = 8;
      goto LABEL_79;
    case 0x19u:
      v32 = 9;
      goto LABEL_79;
    case 0x1Fu:
      v32 = 10;
      goto LABEL_79;
    case 0x20u:
      v32 = 11;
      goto LABEL_79;
    case 0x25u:
      v32 = 12;
      goto LABEL_79;
    case 0x26u:
      v32 = 13;
LABEL_79:
      v31 = (char *)&__dst + 4 * v32;
      break;
    default:
      break;
  }
  if (v31 - (char *)&__dst == 56)
  {
    sub_20AF9628C((uint64_t)&v104, &v102);
    if (SHIBYTE(v105) < 0)
    {
      sub_20AEC60F4(&v93, (void *)v104, *((unint64_t *)&v104 + 1));
    }
    else
    {
      v93 = v104;
      v94 = v105;
    }
    LOBYTE(v95) = 1;
    LOBYTE(v96) = 0;
    v100 = 0;
    v101 = 1;
    sub_20AECCC3C(0xCu, &v93, (uint64_t)&__dst);
    *(_OWORD *)a2 = __dst;
    *(_BYTE *)(a2 + 16) = 0;
    *(_BYTE *)(a2 + 112) = 0;
    if (v119)
    {
      *(_BYTE *)(a2 + 40) = 0;
      v42 = v112;
      if (v112)
      {
        *(_OWORD *)(a2 + 16) = v110;
        *(_QWORD *)(a2 + 32) = v111;
        v111 = 0;
        v110 = 0uLL;
        *(_BYTE *)(a2 + 40) = 1;
      }
      *(_BYTE *)(a2 + 48) = 0;
      *(_BYTE *)(a2 + 104) = 0;
      if (v118)
      {
        v43 = v115;
        *(_QWORD *)(a2 + 64) = v114;
        *(_OWORD *)(a2 + 48) = v113;
        v113 = 0uLL;
        *(_QWORD *)(a2 + 72) = v43;
        *(_OWORD *)(a2 + 80) = v116;
        *(_QWORD *)(a2 + 96) = v117;
        v114 = 0;
        v116 = 0uLL;
        v117 = 0;
        *(_BYTE *)(a2 + 104) = 1;
      }
      *(_BYTE *)(a2 + 112) = 1;
      *(_BYTE *)(a2 + 120) = 0;
      if (v42 && SHIBYTE(v111) < 0)
        operator delete((void *)v110);
    }
    else
    {
      *(_BYTE *)(a2 + 120) = 0;
    }
    if (v101)
    {
      if (v100)
      {
        if (v99 < 0)
          operator delete(v98);
        if (v97 < 0)
          operator delete(v96);
      }
      if ((_BYTE)v95 && SHIBYTE(v94) < 0)
        operator delete((void *)v93);
    }
    if (SHIBYTE(v105) < 0)
      operator delete((void *)v104);
    *(_QWORD *)&v59 = &off_24C403F68;
  }
  else
  {
    *(_QWORD *)&__dst = &v103;
    sub_20AF9EE50((uint64_t)&v90, *(_QWORD *)&v58[22] >> 16);
    if (!v91)
      goto LABEL_95;
    v34 = *v91;
    v33 = (std::__shared_weak_count *)v91[1];
    if (v33)
    {
      v35 = (unint64_t *)&v33->__shared_owners_;
      do
        v36 = __ldxr(v35);
      while (__stxr(v36 + 1, v35));
      do
        v37 = __ldaxr(v35);
      while (__stlxr(v37 - 1, v35));
      if (!v37)
      {
        ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
        std::__shared_weak_count::__release_weak(v33);
      }
    }
    if (v34)
    {
      v39 = v91;
      v38 = v92;
      *(_QWORD *)a2 = &off_24C4169B8;
      *(_QWORD *)(a2 + 8) = v39;
      *(_QWORD *)(a2 + 16) = v38;
      if (v38)
      {
        v40 = (unint64_t *)&v38->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
      }
      *(_BYTE *)(a2 + 120) = 1;
    }
    else
    {
LABEL_95:
      v106 = 0;
      sub_20AF9CDA4(&v104, "image does not contain a CVPixelBuffer");
      if (v106 == -1)
        sub_20AECFAB8();
      v108 = &v107;
      ((void (*)(__int128 *__return_ptr, char **, __int128 *))off_24C3F6808[v106])(&v79, &v108, &v104);
      if (v106 != -1)
        ((void (*)(char **, __int128 *))off_24C3F6790[v106])(&v108, &v104);
      if (SHIBYTE(v80) < 0)
      {
        sub_20AEC60F4(&v81, (void *)v79, *((unint64_t *)&v79 + 1));
      }
      else
      {
        v81 = v79;
        v82 = v80;
      }
      v83 = 1;
      LOBYTE(v84) = 0;
      v88 = 0;
      v89 = 1;
      sub_20AECCC3C(0xCu, &v81, (uint64_t)&__dst);
      *(_OWORD *)a2 = __dst;
      *(_BYTE *)(a2 + 16) = 0;
      *(_BYTE *)(a2 + 112) = 0;
      if (v119)
      {
        *(_BYTE *)(a2 + 40) = 0;
        v44 = v112;
        if (v112)
        {
          *(_OWORD *)(a2 + 16) = v110;
          *(_QWORD *)(a2 + 32) = v111;
          v111 = 0;
          v110 = 0uLL;
          *(_BYTE *)(a2 + 40) = 1;
        }
        *(_BYTE *)(a2 + 48) = 0;
        *(_BYTE *)(a2 + 104) = 0;
        if (v118)
        {
          v45 = v115;
          *(_QWORD *)(a2 + 64) = v114;
          *(_OWORD *)(a2 + 48) = v113;
          v113 = 0uLL;
          *(_QWORD *)(a2 + 72) = v45;
          *(_OWORD *)(a2 + 80) = v116;
          *(_QWORD *)(a2 + 96) = v117;
          v114 = 0;
          v116 = 0uLL;
          v117 = 0;
          *(_BYTE *)(a2 + 104) = 1;
        }
        *(_BYTE *)(a2 + 112) = 1;
        *(_BYTE *)(a2 + 120) = 0;
        if (v44 && SHIBYTE(v111) < 0)
          operator delete((void *)v110);
      }
      else
      {
        *(_BYTE *)(a2 + 120) = 0;
      }
      if (v89)
      {
        if (v88)
        {
          if (v87 < 0)
            operator delete(v86);
          if (v85 < 0)
            operator delete(v84);
        }
        if (v83 && SHIBYTE(v82) < 0)
          operator delete((void *)v81);
      }
      if (SHIBYTE(v80) < 0)
        operator delete((void *)v79);
    }
    v90 = &off_24C4169B8;
    v46 = v92;
    if (v92)
    {
      v47 = (unint64_t *)&v92->__shared_owners_;
      do
        v48 = __ldaxr(v47);
      while (__stlxr(v48 - 1, v47));
      if (!v48)
      {
        ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
        std::__shared_weak_count::__release_weak(v46);
      }
    }
    *(_QWORD *)&v59 = &off_24C403F68;
    if (v71)
    {
      v69 = &off_24C4169B8;
      if (v70)
      {
        v49 = &v70->__shared_owners_;
        do
          v50 = __ldaxr((unint64_t *)v49);
        while (__stlxr(v50 - 1, (unint64_t *)v49));
        if (!v50)
        {
          ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
          std::__shared_weak_count::__release_weak(v70);
        }
      }
    }
  }
  if (v68)
  {
    v62 = &off_24C3F2D20;
    if ((_QWORD)v64)
    {
      v51 = (unint64_t *)(v64 + 8);
      do
        v52 = __ldaxr(v51);
      while (__stlxr(v52 - 1, v51));
      if (!v52)
      {
        (*(void (**)(_QWORD))(*(_QWORD *)v64 + 16))(v64);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v64);
      }
    }
  }
  *((_QWORD *)&v59 + 1) = &off_24C3F2CB0;
  if (__p[1])
  {
    v53 = (unint64_t *)((char *)__p[1] + 8);
    do
      v54 = __ldaxr(v53);
    while (__stlxr(v54 - 1, v53));
    if (!v54)
    {
      (*(void (**)(void *))(*(_QWORD *)__p[1] + 16))(__p[1]);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)__p[1]);
    }
  }
  v12 = v78;
  if (v78)
  {
LABEL_166:
    v55 = (unint64_t *)&v12->__shared_owners_;
    do
      v56 = __ldaxr(v55);
    while (__stlxr(v56 - 1, v55));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_20AF808D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  __cxa_guard_abort(&qword_25463CF48);
  sub_20AEC147C((uint64_t)&a44);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF809EC(int a1)
{
  int v1;

  if (a1 > 1278226535)
  {
    if (a1 <= 1647589489)
    {
      if (a1 > 1380410944)
      {
        switch(a1)
        {
          case 1380410945:
            return 0x100000020;
          case 1380411457:
            return 0x10000001FLL;
          case 1647392359:
            return 0x100000002;
        }
        return 0;
      }
      if (a1 != 1278226536)
      {
        if (a1 == 1380401729)
          return 0x10000001DLL;
        return 0;
      }
    }
    else
    {
      if (a1 <= 1717856626)
      {
        if (a1 == 1647589490)
          return 0x100000016;
        if (a1 == 1647719521)
          return 0x100000026;
        v1 = 1717855600;
        goto LABEL_22;
      }
      if (a1 == 1717856627)
        return 0x100000004;
      if (a1 != 1751410032 && a1 != 1751411059)
        return 0;
    }
    return 0x100000003;
  }
  if (a1 <= 843264103)
  {
    if (a1 <= 842285638)
    {
      if (a1 == 24)
        return 0x100000015;
      if (a1 == 32)
        return 0x100000025;
    }
    else
    {
      switch(a1)
      {
        case 842285639:
          return 0x100000011;
        case 843264056:
          return 0x100000005;
        case 843264102:
          return 0x100000008;
      }
    }
    return 0;
  }
  if (a1 > 1111970368)
  {
    if (a1 == 1111970369)
      return 0x100000019;
    if (a1 == 1278226488)
      return 0x100000001;
    v1 = 1278226534;
LABEL_22:
    if (a1 != v1)
      return 0;
    return 0x100000004;
  }
  if (a1 == 843264104)
    return 0x100000007;
  if (a1 == 1094862674)
    return 0x100000021;
  return 0;
}

void sub_20AF80CB8(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20AEC0BD8(v5);
  v21[0] = v5;
  sub_20B524794((_QWORD *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_20AEC0138();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v14 + 128);
    MEMORY[0x20BD3583C](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_20AECFAB8();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24C3F67A8[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_20AF80F08(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20AF80F2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF80F48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B52CE84((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF80F5C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  unsigned int *v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  const char *v16;
  const char *v17;
  uint64_t *v18;

  if (*a3 <= 0)
  {
    v13 = a2;
    v14 = "{}";
    v15 = a2;
    v16 = "{}";
    v17 = "{}";
    v12 = *(unsigned int *)(a2 + 24);
    if ((_DWORD)v12 == -1)
      goto LABEL_11;
    v18 = &v13;
    return ((uint64_t (*)(uint64_t **, uint64_t))off_24C3F67D8[v12])(&v18, a2);
  }
  else
  {
    v13 = a2;
    v14 = "{";
    v15 = a2;
    v16 = "{";
    v17 = "{";
    v4 = *(unsigned int *)(a2 + 24);
    if ((_DWORD)v4 == -1)
      goto LABEL_11;
    v18 = &v13;
    ((void (*)(uint64_t **, uint64_t))off_24C3F67F0[v4])(&v18, a2);
    v6 = (unsigned int *)a3[1];
    sub_20AF80CB8((uint64_t)&v13, a2, v6);
    v7 = a3[1] + 4 * *a3;
    v8 = v6 + 1;
    if (v6 + 1 != (unsigned int *)v7)
    {
      while (1)
      {
        v13 = a2;
        v14 = ",";
        v15 = a2;
        v16 = ",";
        v17 = ",";
        v9 = *(unsigned int *)(a2 + 24);
        if ((_DWORD)v9 == -1)
          break;
        v18 = &v13;
        ((void (*)(uint64_t **, uint64_t))off_24C3F67F0[v9])(&v18, a2);
        sub_20AF80CB8((uint64_t)&v13, a2, v8++);
        if (v8 == (unsigned int *)v7)
          goto LABEL_6;
      }
LABEL_11:
      sub_20AECFAB8();
    }
LABEL_6:
    v13 = a2;
    v14 = "}";
    v15 = a2;
    v16 = "}";
    v17 = "}";
    v10 = *(unsigned int *)(a2 + 24);
    if ((_DWORD)v10 == -1)
      goto LABEL_11;
    v18 = &v13;
    return ((uint64_t (*)(uint64_t **, uint64_t))off_24C3F67F0[v10])(&v18, a2);
  }
}

_DWORD *sub_20AF810D0(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C3F6790[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

_DWORD *sub_20AF811C0(_DWORD ***a1)
{
  return sub_20AF811DC(**a1, (char *)(*a1)[1]);
}

void sub_20AF811CC(uint64_t a1, uint64_t a2)
{
  sub_20AF812CC((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

_DWORD *sub_20AF811DC(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C3F6790[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_20AF812CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24C3F6790[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_20AEC7620((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_20AF81480(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_20AF814C4(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_20AF815BC((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_20AF815B4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_20AF815BC(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20AEC60B8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60CC();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_20AF817B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC65A4((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF817CC(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F91C0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF81840(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F91C0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF818B4()
{
  return 1;
}

uint64_t sub_20AF818BC(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20AF818C4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_20AF818D8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF81958(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF8197C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24C414820;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24C415AE0[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20AF81A04(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE1EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE1EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE1EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE1EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20AF81A74(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v15, v3, 1);
  v9 = *(_QWORD *)(v15 + 16);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v15;
  *(_QWORD *)(a1 + 32) = v9;
  v15 = 0;
  MEMORY[0x20BD3583C]();
  v10 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v10)
    return a1;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return a1;
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return a1;
}

void sub_20AF81BA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF81BBC(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F9308;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF81C30(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F9308;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF81CA4()
{
  return 2;
}

uint64_t sub_20AF81CAC(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20AF81CB4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_20AF81CCC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF81D4C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF81D70(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24C414A60;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24C415AE0[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20AF81DF8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE2EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE2EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE2EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE2EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20AF81E68(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v15, v3, 2);
  v9 = *(_QWORD *)(v15 + 16);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v15;
  *(_QWORD *)(a1 + 32) = v9;
  v15 = 0;
  MEMORY[0x20BD3583C]();
  v10 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v10)
    return a1;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return a1;
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return a1;
}

void sub_20AF81F9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF81FB0(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F9450;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF82024(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F9450;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF82098()
{
  return 3;
}

uint64_t sub_20AF820A0(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20AF820A8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_20AF820C0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF82140(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF82164(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24C414C10;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24C415AE0[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20AF821EC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE3EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE3EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE3EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE3EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20AF8225C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v15, v3, 3);
  v9 = *(_QWORD *)(v15 + 16);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v15;
  *(_QWORD *)(a1 + 32) = v9;
  v15 = 0;
  MEMORY[0x20BD3583C]();
  v10 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v10)
    return a1;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return a1;
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return a1;
}

void sub_20AF82390(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF823A4(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F9598;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF82418(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F9598;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF8248C()
{
  return 4;
}

uint64_t sub_20AF82494(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20AF8249C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_20AF824B4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF82534(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF82558(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24C414DC0;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24C415AE0[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20AF825E0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE4EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE4EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE4EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE4EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20AF82650(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v15, v3, 4);
  v9 = *(_QWORD *)(v15 + 16);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v15;
  *(_QWORD *)(a1 + 32) = v9;
  v15 = 0;
  MEMORY[0x20BD3583C]();
  v10 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v10)
    return a1;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return a1;
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return a1;
}

void sub_20AF82784(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF82798(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F96E0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF8280C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F96E0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF82880()
{
  return 5;
}

uint64_t sub_20AF82888(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF82890@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF828A4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF82924(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF82948(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24C4148B0;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24C415AE0[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20AF829D0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE5EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE5EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE5EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE5EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20AF82A40(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 5);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x20BD3583C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_20AF82B74(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF82B88(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F9828;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF82BFC(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F9828;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF82C70()
{
  return 7;
}

uint64_t sub_20AF82C78(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF82C80@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF82C98(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF82D18(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF82D3C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24C414CA0;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24C415AE0[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20AF82DC4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE7EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE7EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE7EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE7EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20AF82E34(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 7);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x20BD3583C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_20AF82F68(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF82F7C(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F9970;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF82FF0(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F9970;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF83064()
{
  return 8;
}

uint64_t sub_20AF8306C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF83074@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF8308C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF8310C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF83130(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24C414E50;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24C415AE0[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20AF831B8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE8EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE8EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE8EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE8EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20AF83228(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 8);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x20BD3583C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_20AF8335C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF83370(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F9AB8;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF833E4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F9AB8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF83458()
{
  return 21;
}

uint64_t sub_20AF83460(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF83468@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF8347C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF834FC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF83520(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24C414940;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24C415AE0[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20AF835A8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE21EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE21EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE21EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE21EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20AF83618(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 21);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x20BD3583C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_20AF8374C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF83760(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F9C00;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF837D4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F9C00;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF83848()
{
  return 22;
}

uint64_t sub_20AF83850(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF83858@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF83870(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF838F0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF83914(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24C414AF0;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24C415AE0[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20AF8399C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE22EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE22EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE22EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE22EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20AF83A0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 22);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x20BD3583C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_20AF83B40(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF83B54(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F9D48;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF83BC8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F9D48;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF83C3C()
{
  return 25;
}

uint64_t sub_20AF83C44(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF83C4C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF83C60(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF83CE0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF83D04(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24C4149D0;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24C415AE0[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20AF83D8C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE25EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE25EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE25EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE25EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20AF83DFC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 25);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x20BD3583C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_20AF83F30(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF83F44(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F9E90;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF83FB8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F9E90;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF8402C()
{
  return 31;
}

uint64_t sub_20AF84034(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF8403C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF84054(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF840D4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF840F8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24C414D30;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24C415AE0[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20AF84180(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE31EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE31EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE31EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE31EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20AF841F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 31);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x20BD3583C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_20AF84324(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF84338(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F9FD8;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF843AC(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F9FD8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF84420()
{
  return 32;
}

uint64_t sub_20AF84428(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF84430@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF84448(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF844C8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF844EC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24C414EE0;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24C415AE0[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20AF84574(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE32EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE32EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE32EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE32EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20AF845E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 32);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x20BD3583C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_20AF84718(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF8472C(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3FA120;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF847A0(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3FA120;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF84814()
{
  return 37;
}

uint64_t sub_20AF8481C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF84824@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF84838(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF848B8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF848DC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24C4149D0;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24C415AE0[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20AF84964(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE37EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE37EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE37EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE37EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20AF849D4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 37);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x20BD3583C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_20AF84B08(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF84B1C(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3FA268;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF84B90(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3FA268;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF84C04()
{
  return 38;
}

uint64_t sub_20AF84C0C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF84C14@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF84C2C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF84CAC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF84CD0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24C414B80;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24C415AE0[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20AF84D58(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE38EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE38EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE38EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE38EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20AF84DC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v16;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v16, v3, 38);
  v10 = v16[1];
  v9 = v16[2];
  *(_OWORD *)(a1 + 16) = *v16;
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v9;
  v16 = 0;
  MEMORY[0x20BD3583C]();
  v11 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v11)
    return a1;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_20AF84EFC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF84F10(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F6928;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

double sub_20AF84F84(uint64_t a1, _QWORD *a2)
{
  uint64_t (***v4)();
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (***v14)();
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  double result;
  _QWORD *v24;
  std::logic_error *exception;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  size_t v37;
  unint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  std::string::size_type size;
  std::string *p_p;
  std::string *p_dst;
  std::string *v48;
  uint64_t v49;
  uint64_t v50;
  std::string *v51;
  __int128 v52;
  int64x2_t v53;
  int8x16_t v54;
  void **v55;
  void **v56;
  void *v57;
  std::string __dst;
  std::string __p;
  void *v60;
  void **v61;
  void *v62[4];
  std::string __s;
  _BYTE v64[32];
  const char *v65;
  uint64_t v66;
  _QWORD v67[2];
  _QWORD v68[2];

  v68[1] = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t (***)())a2[1];
  v5 = a2[2];
  __s.__r_.__value_.__r.__words[0] = (std::string::size_type)v4;
  __s.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4 && *v4 == off_24C414F70)
  {
    *(_QWORD *)v64 = v4;
    *(_QWORD *)&v64[8] = v5;
    *(_OWORD *)&__s.__r_.__value_.__l.__data_ = 0uLL;
  }
  else
  {
    *(_QWORD *)v64 = 0;
    *(_QWORD *)&v64[8] = 0;
    if (__s.__r_.__value_.__l.__size_)
    {
      v8 = (unint64_t *)(__s.__r_.__value_.__l.__size_ + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        (*(void (**)(std::string::size_type))(*(_QWORD *)__s.__r_.__value_.__l.__size_ + 16))(__s.__r_.__value_.__l.__size_);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)__s.__r_.__value_.__l.__size_);
        v10 = *(_QWORD *)v64;
        goto LABEL_16;
      }
    }
  }
  v10 = *(_QWORD *)v64;
  if (!*(_QWORD *)&v64[8])
    goto LABEL_16;
  v11 = (unint64_t *)(*(_QWORD *)&v64[8] + 8);
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (v12)
  {
LABEL_16:
    if (v10)
      goto LABEL_17;
LABEL_35:
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 56) = 0;
    return result;
  }
  (*(void (**)(_QWORD))(**(_QWORD **)&v64[8] + 16))(*(_QWORD *)&v64[8]);
  std::__shared_weak_count::__release_weak(*(std::__shared_weak_count **)&v64[8]);
  if (!*(_QWORD *)v64)
    goto LABEL_35;
LABEL_17:
  v14 = (uint64_t (***)())a2[1];
  v13 = (std::__shared_weak_count *)a2[2];
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  if (!v14 || *v14 != off_24C414F70)
  {
    v24 = a2;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v26 = atomic_load((unsigned __int8 *)&qword_25463A9F8);
    if ((v26 & 1) != 0 || !__cxa_guard_acquire(&qword_25463A9F8))
      goto LABEL_39;
    HIBYTE(v62[2]) = 16;
    strcpy((char *)v62, "ConstSharedImage");
    v51 = sub_20AF8595C();
    if (SHIBYTE(v51->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&__s, v51->__r_.__value_.__l.__data_, v51->__r_.__value_.__l.__size_);
    }
    else
    {
      v52 = *(_OWORD *)&v51->__r_.__value_.__l.__data_;
      __s.__r_.__value_.__r.__words[2] = v51->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v52;
    }
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)v64);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AF85A54();
    if (byte_25463AB08[23] < 0)
      sub_20AEC60F4(&__s, *(void **)byte_25463AB08, *(unint64_t *)&byte_25463AB08[8]);
    else
      __s = *(std::string *)byte_25463AB08;
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v64[24]);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AEC7620(&v60, (uint64_t)v64, 2uLL);
    sub_20B53170C((char *)v62, (uint64_t *)&v60, (std::string *)&qword_25463AAF0, v53, v54);
    v55 = (void **)v60;
    if (v60)
    {
      v56 = v61;
      v57 = v60;
      if (v61 != v60)
      {
        do
        {
          if (*((char *)v56 - 1) < 0)
            operator delete(*(v56 - 3));
          v56 -= 3;
        }
        while (v56 != v55);
        v57 = v60;
      }
      v61 = v55;
      operator delete(v57);
      if (SHIBYTE(v66) < 0)
      {
LABEL_94:
        operator delete(*(void **)&v64[24]);
        if ((v64[23] & 0x80000000) == 0)
          goto LABEL_95;
        goto LABEL_106;
      }
    }
    else if (SHIBYTE(v66) < 0)
    {
      goto LABEL_94;
    }
    if ((v64[23] & 0x80000000) == 0)
    {
LABEL_95:
      if ((SHIBYTE(v62[2]) & 0x80000000) == 0)
      {
LABEL_97:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463AAF0, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463A9F8);
LABEL_39:
        sub_20AF85C0C();
        *(_QWORD *)v64 = "Attempting to create an ";
        *(_QWORD *)&v64[8] = 24;
        v27 = byte_25463AB07;
        if (byte_25463AB07 >= 0)
        {
          v28 = &qword_25463AAF0;
        }
        else
        {
          v27 = unk_25463AAF8;
          v28 = (uint64_t *)qword_25463AAF0;
        }
        *(_QWORD *)&v64[16] = v28;
        *(_QWORD *)&v64[24] = v27;
        v65 = " from an ";
        v66 = 9;
        v29 = byte_25463AB67;
        v30 = &qword_25463AB50;
        if (byte_25463AB67 < 0)
        {
          v29 = qword_25463AB58;
          v30 = (uint64_t *)qword_25463AB50;
        }
        v67[0] = v30;
        v67[1] = v29;
        sub_20AECFDF8((uint64_t)v64, (uint64_t)v68, 0, 0, &__p);
        v31 = a2[1];
        v32 = (std::__shared_weak_count *)v24[2];
        if (v32)
        {
          v33 = (unint64_t *)&v32->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
          if (v31)
          {
            v31 = v24[1];
            v39 = (std::__shared_weak_count *)v24[2];
            if (v39)
            {
              v40 = (unint64_t *)&v39->__shared_owners_;
              do
                v41 = __ldxr(v40);
              while (__stxr(v41 + 1, v40));
              do
                v42 = __ldaxr(v40);
              while (__stlxr(v42 - 1, v40));
              if (!v42)
              {
                ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
                std::__shared_weak_count::__release_weak(v39);
              }
            }
            goto LABEL_64;
          }
        }
        else if (v31)
        {
LABEL_64:
          v43 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v31 + 80))(v31);
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          {
            size = __p.__r_.__value_.__l.__size_;
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          *(_QWORD *)v64 = p_p;
          *(_QWORD *)&v64[8] = size;
          *(_QWORD *)&v64[16] = " but the other image contains an incompatible buffer type ";
          *(_QWORD *)&v64[24] = 58;
          v65 = (const char *)v43;
          v66 = v44;
          sub_20AECFDF8((uint64_t)v64, (uint64_t)v67, 0, 0, &__dst);
          LOBYTE(v36) = *((_BYTE *)&__p.__r_.__value_.__s + 23);
LABEL_74:
          if ((v36 & 0x80) != 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          std::logic_error::logic_error(exception, &__dst);
          exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
          __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
        }
        v36 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v37 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v37 = __p.__r_.__value_.__l.__size_;
        v38 = v37 + 46;
        if (v37 + 46 >= 0x7FFFFFFFFFFFFFF8)
          sub_20AEC0138();
        if (v38 > 0x16)
        {
          v49 = (v38 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v38 | 7) != 0x17)
            v49 = v38 | 7;
          v50 = v49 + 1;
          p_dst = (std::string *)operator new(v49 + 1);
          __dst.__r_.__value_.__l.__size_ = v37 + 46;
          __dst.__r_.__value_.__r.__words[2] = v50 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          if (!v37)
            goto LABEL_73;
        }
        else
        {
          memset(&__dst, 0, sizeof(__dst));
          p_dst = &__dst;
          *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v37 + 46;
        }
        if (v36 >= 0)
          v48 = &__p;
        else
          v48 = (std::string *)__p.__r_.__value_.__r.__words[0];
        memmove(p_dst, v48, v37);
LABEL_73:
        strcpy((char *)p_dst + v37, " but the other image does not contain a buffer");
        goto LABEL_74;
      }
LABEL_96:
      operator delete(v62[0]);
      goto LABEL_97;
    }
LABEL_106:
    operator delete(*(void **)v64);
    if ((SHIBYTE(v62[2]) & 0x80000000) == 0)
      goto LABEL_97;
    goto LABEL_96;
  }
  v17 = a2 + 3;
  if (v13)
  {
    v18 = (unint64_t *)&v13->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    *(_OWORD *)v64 = *(_OWORD *)v17;
    *(_QWORD *)&v64[16] = v17[2];
    do
      v20 = __ldxr(v18);
    while (__stxr(v20 + 1, v18));
    do
      v21 = __ldaxr(v18);
    while (__stlxr(v21 - 1, v18));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
    do
      v22 = __ldaxr(v18);
    while (__stlxr(v22 - 1, v18));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  else
  {
    *(_OWORD *)v64 = *(_OWORD *)v17;
    *(_QWORD *)&v64[16] = a2[5];
  }
  *(_QWORD *)a1 = &off_24C3F6830;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v13;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v64;
  result = *(double *)&v64[9];
  *(_OWORD *)(a1 + 33) = *(_OWORD *)&v64[9];
  *(_BYTE *)(a1 + 56) = 1;
  return result;
}

void sub_20AF85680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void **__p,void **a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  std::__shared_weak_count *v50;
  void *v51;
  void **v53;
  void **v54;
  unint64_t *p_shared_owners;
  unint64_t v56;

  if (__p)
  {
    v53 = a23;
    v54 = __p;
    if (a23 != __p)
    {
      do
      {
        if (*((char *)v53 - 1) < 0)
          operator delete(*(v53 - 3));
        v53 -= 3;
      }
      while (v53 != __p);
      v54 = __p;
    }
    operator delete(v54);
  }
  if (a50 < 0)
    operator delete(a45);
  if (a44 < 0)
    operator delete(a39);
  if (a30 < 0)
    operator delete(a25);
  __cxa_guard_abort(&qword_25463A9F8);
  __cxa_free_exception(v51);
  if (v50)
  {
    p_shared_owners = (unint64_t *)&v50->__shared_owners_;
    do
      v56 = __ldaxr(p_shared_owners);
    while (__stlxr(v56 - 1, p_shared_owners));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF857D4(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F6830;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF85848(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F6830;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF858BC()
{
  return 1;
}

uint64_t sub_20AF858C4(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20AF858CC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_20AF858E0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

std::string *sub_20AF8595C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546325B8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546325B8))
    return &stru_2546325A0;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Gray8u]", __p);
  sub_20B531884((uint64_t)__p, &stru_2546325A0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2546325A0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546325B8);
  return &stru_2546325A0;
}

void sub_20AF85A14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2546325B8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2546325B8);
  _Unwind_Resume(a1);
}

void sub_20AF85A54()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463AA00);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463AA00))
  {
    sub_20AF85B0C();
    if (byte_25463AB4F < 0)
    {
      sub_20AEC60F4(&xmmword_25463AB08, (void *)xmmword_25463AB38, *((unint64_t *)&xmmword_25463AB38 + 1));
    }
    else
    {
      xmmword_25463AB08 = xmmword_25463AB38;
      unk_25463AB18 = unk_25463AB48;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463AB08, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463AA00);
  }
}

void sub_20AF85AF4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463AA00);
  _Unwind_Resume(a1);
}

void sub_20AF85B0C()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25463AA08);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463AA08))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cv::CVBuffer]", qword_25463AB20);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25463AB20, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463AA08);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25463AA10);
  if ((v1 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_25463AA10))
    {
      sub_20B531658((uint64_t)qword_25463AB20, (uint64_t)&xmmword_25463AB38);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463AB38, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463AA10);
    }
  }
}

void sub_20AF85BDC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463AA10);
  _Unwind_Resume(a1);
}

void sub_20AF85BF4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463AA08);
  _Unwind_Resume(a1);
}

void sub_20AF85C0C()
{
  unsigned __int8 v0;
  std::string *v1;
  __int128 *v2;
  int64x2_t v3;
  int8x16_t v4;
  void *v5[3];
  void *v6[2];
  char v7;
  void *v8[2];
  char v9;
  void *__p;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25463AA18);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463AA18))
  {
    sub_20AEC0D64(v6, "ConstSharedImage");
    v1 = sub_20AF8595C();
    sub_20AF85DFC((uint64_t)v8, (uint64_t)v1);
    v2 = sub_20AF85EB4();
    sub_20AF85DFC((uint64_t)&__p, (uint64_t)v2);
    sub_20AEC7620(v5, (uint64_t)v8, 2uLL);
    sub_20B53170C((char *)v6, (uint64_t *)v5, (std::string *)&qword_25463AB50, v3, v4);
    sub_20AEC2E90(v5);
    if (v11 < 0)
    {
      operator delete(__p);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v7 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463AB50, &dword_20AEBB000);
          __cxa_guard_release(&qword_25463AA18);
          return;
        }
LABEL_10:
        operator delete(v6[0]);
        goto LABEL_7;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8[0]);
    if ((v7 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
}

void sub_20AF85D48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_25463AA18);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_25463AA18);
  _Unwind_Resume(a1);
}

void sub_20AF85DFC(uint64_t a1, uint64_t a2)
{
  std::string __p;

  if (*(char *)(a2 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20AF85E98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

__int128 *sub_20AF85EB4()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254632618);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254632618))
    return &xmmword_254632600;
  v2 = (char *)sub_20AF85F90();
  if (v2[23] < 0)
  {
    sub_20AEC60F4(&xmmword_254632600, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_254632610 = *((_QWORD *)v2 + 2);
    xmmword_254632600 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254632600, &dword_20AEBB000);
  __cxa_guard_release(&qword_254632618);
  return &xmmword_254632600;
}

void sub_20AF85F78(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254632618);
  _Unwind_Resume(a1);
}

void *sub_20AF85F90()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_254632638);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254632638))
  {
    sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::DynamicBuffer]", qword_254632620);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254632620, &dword_20AEBB000);
    __cxa_guard_release(&qword_254632638);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_254632658);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_254632658))
    return &unk_254632640;
  sub_20B531658((uint64_t)qword_254632620, (uint64_t)&unk_254632640);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_254632640, &dword_20AEBB000);
  __cxa_guard_release(&qword_254632658);
  return &unk_254632640;
}

void sub_20AF86080(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254632658);
  _Unwind_Resume(a1);
}

void sub_20AF86098(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254632638);
  _Unwind_Resume(a1);
}

void sub_20AF860B0(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F6928;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF86124()
{
  return 1;
}

uint64_t sub_20AF8612C(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20AF86134@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_20AF86148(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF861C4(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  _BOOL4 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int16 v17;
  std::__shared_weak_count *size;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::logic_error *exception;
  std::string v23;

  if (*(_DWORD *)(a2 + 48) != 1)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AF86440((uint64_t)&v23, a2);
    std::logic_error::logic_error(exception, &v23);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v23.__r_.__value_.__r.__words[0] = v4;
      v23.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v4;
    }
  }
  else
  {
    *(_OWORD *)&v23.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v12 = v11 != 0;
  v13 = v11 == 0;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  if (v13)
    v14 = 0;
  else
    v14 = (unint64_t)*(unsigned int *)(a2 + 32) << 32;
  if (v13)
    v15 = 0;
  else
    v15 = *(_QWORD *)(a2 + 24);
  if (HIDWORD(v15) * HIDWORD(v14) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v16 = v14 | v12;
  v17 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v23.__r_.__value_.__l.__size_;
  if (v23.__r_.__value_.__l.__size_)
  {
    v19 = (unint64_t *)(v23.__r_.__value_.__l.__size_ + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    *(_QWORD *)a1 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a1 + 8) = size;
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v15;
    *(_QWORD *)(a1 + 32) = v16;
    *(_WORD *)(a1 + 40) = v17;
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  else
  {
    *(_OWORD *)a1 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v15;
    *(_QWORD *)(a1 + 32) = v16;
    *(_WORD *)(a1 + 40) = v17;
  }
}

void sub_20AF863F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF86440(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  sub_20AF85C0C();
  v3 = sub_20AF87004();
  v5 = *(_DWORD *)(a2 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)&qword_25463AB50, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

uint64_t sub_20AF864AC(char *__s, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int *a6)
{
  uint64_t result;
  _DWORD v12[6];
  int v13;
  _QWORD **v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v13 = 0;
  sub_20AF75B44(v12, __s);
  v14 = (_QWORD **)v12;
  v15 = a2;
  v16 = v12;
  v17 = a2;
  v18 = a2;
  if (v13 == -1)
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(_QWORD **, _DWORD *))off_24C3F6A10[v13])(&v19, v12);
  v14 = (_QWORD **)v12;
  v15 = a3;
  v16 = v12;
  v17 = a3;
  v18 = a3;
  if (v13 == -1)
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(_QWORD **, _DWORD *))off_24C3F6A28[v13])(&v19, v12);
  v14 = (_QWORD **)v12;
  v15 = a4;
  v16 = v12;
  v17 = a4;
  v18 = a4;
  if (v13 == -1)
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(_QWORD **, _DWORD *))off_24C3F6A10[v13])(&v19, v12);
  v14 = (_QWORD **)v12;
  v15 = a5;
  v16 = v12;
  v17 = a5;
  v18 = a5;
  if (v13 == -1)
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(_QWORD **, _DWORD *))off_24C3F6A40[v13])(&v19, v12);
  sub_20AF86710((uint64_t)&v14, (uint64_t)v12, a6);
  if (v13 == -1)
    sub_20AECFAB8();
  v14 = &v19;
  result = ((uint64_t (*)(_QWORD ***, _DWORD *))off_24C3F6808[v13])(&v14, v12);
  if (v13 != -1)
    return ((uint64_t (*)(_QWORD ***, _DWORD *))off_24C3F6790[v13])(&v14, v12);
  return result;
}

void sub_20AF86684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF86698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF866AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF866C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF866D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF866E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF866FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20AF86710(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  int v9;
  size_t v10;
  void **v11;
  unint64_t v12;
  unint64_t v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *__dst[2];
  unint64_t v23;
  _QWORD v24[5];
  _QWORD *v25;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20AEC0BD8(v5);
  v24[0] = v5;
  v6 = (_QWORD *)(v5 + 16);
  v7 = *a3;
  if (v7 >= 0x29)
  {
    sub_20AEC01D0(v6, (uint64_t)"Invalid Format (", 16);
    v8 = (_QWORD *)std::ostream::operator<<();
    sub_20AEC01D0(v8, (uint64_t)")", 1);
  }
  else
  {
    sub_20AEC01D0(v6, (uint64_t)(&off_24C41DC48)[2 * v7], (uint64_t)(&off_24C41DC48)[2 * v7 + 1]);
  }
  v9 = *(_DWORD *)(v5 + 120);
  if ((v9 & 0x10) != 0)
  {
    v12 = *(_QWORD *)(v5 + 112);
    v13 = *(_QWORD *)(v5 + 72);
    if (v12 < v13)
    {
      *(_QWORD *)(v5 + 112) = v13;
      v12 = v13;
    }
    v14 = *(const void **)(v5 + 64);
    v10 = v12 - (_QWORD)v14;
    if (v12 - (unint64_t)v14 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_25;
  }
  else
  {
    if ((v9 & 8) == 0)
    {
      v10 = 0;
      HIBYTE(v23) = 0;
      v11 = __dst;
      goto LABEL_17;
    }
    v14 = *(const void **)(v5 + 40);
    v10 = *(_QWORD *)(v5 + 56) - (_QWORD)v14;
    if (v10 >= 0x7FFFFFFFFFFFFFF8)
LABEL_25:
      sub_20AEC0138();
  }
  if (v10 >= 0x17)
  {
    v15 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v15 = v10 | 7;
    v16 = v15 + 1;
    v11 = (void **)operator new(v15 + 1);
    __dst[1] = (void *)v10;
    v23 = v16 | 0x8000000000000000;
    __dst[0] = v11;
    goto LABEL_16;
  }
  HIBYTE(v23) = v10;
  v11 = __dst;
  if (v10)
LABEL_16:
    memmove(v11, v14, v10);
LABEL_17:
  *((_BYTE *)v11 + v10) = 0;
  v17 = v24[0];
  if (v24[0])
  {
    v18 = MEMORY[0x24BEDB7F0];
    v19 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v24[0] = *MEMORY[0x24BEDB7F0];
    v20 = *(_QWORD *)(v18 + 72);
    *(_QWORD *)(v17 + *(_QWORD *)(v19 - 24)) = *(_QWORD *)(v18 + 64);
    *(_QWORD *)(v17 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v17 + 16) = v20;
    if (*(char *)(v17 + 111) < 0)
      operator delete(*(void **)(v17 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v17 + 128);
    MEMORY[0x20BD3583C](v17, 0x10B2C40EED050F3);
  }
  v24[0] = a2;
  v24[1] = __dst;
  v24[2] = a2;
  v24[3] = __dst;
  v24[4] = __dst;
  v21 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v21 == -1)
    sub_20AECFAB8();
  v25 = v24;
  ((void (*)(_QWORD **, uint64_t))off_24C3F67A8[v21])(&v25, a2);
  if (SHIBYTE(v23) < 0)
    operator delete(__dst[0]);
}

void sub_20AF869A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20AF869C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF869E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B52CE84((uint64_t *)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_20AF869F8(_DWORD ***a1)
{
  return sub_20AF86A14(**a1, (char *)(*a1)[1]);
}

void sub_20AF86A04(uint64_t a1, uint64_t a2)
{
  sub_20AF86B04((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

_DWORD *sub_20AF86A14(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C3F6790[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_20AF86B04(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24C3F6790[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_20AEC7620((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_20AF86CB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_20AF86CFC(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_20AF86DF4((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_20AF86DEC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_20AF86DF4(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20AEC60B8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60CC();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_20AF86FF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC65A4((uint64_t)va);
  _Unwind_Resume(a1);
}

std::string *sub_20AF87004()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2546325D8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546325D8))
  {
    sub_20AEC0D64(v7, "ConstSharedImage");
    v2 = sub_20AF872C0();
    sub_20AF87208((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20AF85EB4();
    sub_20AF87208((uint64_t)v3, (uint64_t)&__p);
    sub_20AEC7620(v6, (uint64_t)v9, 2uLL);
    sub_20B53170C((char *)v7, (uint64_t *)v6, &stru_2546325C0, v4, v5);
    sub_20AEC2E90(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2546325C0, &dword_20AEBB000);
          __cxa_guard_release(&qword_2546325D8);
          return &stru_2546325C0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2546325C0;
}

void sub_20AF87154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2546325D8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2546325D8);
  _Unwind_Resume(a1);
}

void sub_20AF87208(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20AF872A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20AF872C0()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546325F8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546325F8))
    return &stru_2546325E0;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Dynamic]", __p);
  sub_20B531884((uint64_t)__p, &stru_2546325E0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2546325E0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546325F8);
  return &stru_2546325E0;
}

void sub_20AF87378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2546325F8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2546325F8);
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF873B8(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F6B60;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

double sub_20AF8742C(uint64_t a1, _QWORD *a2)
{
  uint64_t (***v4)();
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (***v14)();
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  double result;
  _QWORD *v24;
  std::logic_error *exception;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  size_t v37;
  unint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  std::string::size_type size;
  std::string *p_p;
  std::string *p_dst;
  std::string *v48;
  uint64_t v49;
  uint64_t v50;
  std::string *v51;
  __int128 v52;
  int64x2_t v53;
  int8x16_t v54;
  void **v55;
  void **v56;
  void *v57;
  std::string __dst;
  std::string __p;
  void *v60;
  void **v61;
  void *v62[4];
  std::string __s;
  _BYTE v64[32];
  const char *v65;
  uint64_t v66;
  _QWORD v67[2];
  _QWORD v68[2];

  v68[1] = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t (***)())a2[1];
  v5 = a2[2];
  __s.__r_.__value_.__r.__words[0] = (std::string::size_type)v4;
  __s.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4 && *v4 == off_24C415000)
  {
    *(_QWORD *)v64 = v4;
    *(_QWORD *)&v64[8] = v5;
    *(_OWORD *)&__s.__r_.__value_.__l.__data_ = 0uLL;
  }
  else
  {
    *(_QWORD *)v64 = 0;
    *(_QWORD *)&v64[8] = 0;
    if (__s.__r_.__value_.__l.__size_)
    {
      v8 = (unint64_t *)(__s.__r_.__value_.__l.__size_ + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        (*(void (**)(std::string::size_type))(*(_QWORD *)__s.__r_.__value_.__l.__size_ + 16))(__s.__r_.__value_.__l.__size_);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)__s.__r_.__value_.__l.__size_);
        v10 = *(_QWORD *)v64;
        goto LABEL_16;
      }
    }
  }
  v10 = *(_QWORD *)v64;
  if (!*(_QWORD *)&v64[8])
    goto LABEL_16;
  v11 = (unint64_t *)(*(_QWORD *)&v64[8] + 8);
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (v12)
  {
LABEL_16:
    if (v10)
      goto LABEL_17;
LABEL_35:
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 56) = 0;
    return result;
  }
  (*(void (**)(_QWORD))(**(_QWORD **)&v64[8] + 16))(*(_QWORD *)&v64[8]);
  std::__shared_weak_count::__release_weak(*(std::__shared_weak_count **)&v64[8]);
  if (!*(_QWORD *)v64)
    goto LABEL_35;
LABEL_17:
  v14 = (uint64_t (***)())a2[1];
  v13 = (std::__shared_weak_count *)a2[2];
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  if (!v14 || *v14 != off_24C415000)
  {
    v24 = a2;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v26 = atomic_load((unsigned __int8 *)&qword_25463AA20);
    if ((v26 & 1) != 0 || !__cxa_guard_acquire(&qword_25463AA20))
      goto LABEL_39;
    HIBYTE(v62[2]) = 16;
    strcpy((char *)v62, "ConstSharedImage");
    v51 = sub_20AF87E08();
    if (SHIBYTE(v51->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&__s, v51->__r_.__value_.__l.__data_, v51->__r_.__value_.__l.__size_);
    }
    else
    {
      v52 = *(_OWORD *)&v51->__r_.__value_.__l.__data_;
      __s.__r_.__value_.__r.__words[2] = v51->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v52;
    }
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)v64);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AF85A54();
    if (byte_25463AB08[23] < 0)
      sub_20AEC60F4(&__s, *(void **)byte_25463AB08, *(unint64_t *)&byte_25463AB08[8]);
    else
      __s = *(std::string *)byte_25463AB08;
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v64[24]);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AEC7620(&v60, (uint64_t)v64, 2uLL);
    sub_20B53170C((char *)v62, (uint64_t *)&v60, (std::string *)&qword_25463AB68, v53, v54);
    v55 = (void **)v60;
    if (v60)
    {
      v56 = v61;
      v57 = v60;
      if (v61 != v60)
      {
        do
        {
          if (*((char *)v56 - 1) < 0)
            operator delete(*(v56 - 3));
          v56 -= 3;
        }
        while (v56 != v55);
        v57 = v60;
      }
      v61 = v55;
      operator delete(v57);
      if (SHIBYTE(v66) < 0)
      {
LABEL_94:
        operator delete(*(void **)&v64[24]);
        if ((v64[23] & 0x80000000) == 0)
          goto LABEL_95;
        goto LABEL_106;
      }
    }
    else if (SHIBYTE(v66) < 0)
    {
      goto LABEL_94;
    }
    if ((v64[23] & 0x80000000) == 0)
    {
LABEL_95:
      if ((SHIBYTE(v62[2]) & 0x80000000) == 0)
      {
LABEL_97:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463AB68, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463AA20);
LABEL_39:
        sub_20AF87F00();
        *(_QWORD *)v64 = "Attempting to create an ";
        *(_QWORD *)&v64[8] = 24;
        v27 = byte_25463AB7F;
        if (byte_25463AB7F >= 0)
        {
          v28 = &qword_25463AB68;
        }
        else
        {
          v27 = unk_25463AB70;
          v28 = (uint64_t *)qword_25463AB68;
        }
        *(_QWORD *)&v64[16] = v28;
        *(_QWORD *)&v64[24] = v27;
        v65 = " from an ";
        v66 = 9;
        v29 = byte_25463AB97;
        v30 = &qword_25463AB80;
        if (byte_25463AB97 < 0)
        {
          v29 = qword_25463AB88;
          v30 = (uint64_t *)qword_25463AB80;
        }
        v67[0] = v30;
        v67[1] = v29;
        sub_20AECFDF8((uint64_t)v64, (uint64_t)v68, 0, 0, &__p);
        v31 = a2[1];
        v32 = (std::__shared_weak_count *)v24[2];
        if (v32)
        {
          v33 = (unint64_t *)&v32->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
          if (v31)
          {
            v31 = v24[1];
            v39 = (std::__shared_weak_count *)v24[2];
            if (v39)
            {
              v40 = (unint64_t *)&v39->__shared_owners_;
              do
                v41 = __ldxr(v40);
              while (__stxr(v41 + 1, v40));
              do
                v42 = __ldaxr(v40);
              while (__stlxr(v42 - 1, v40));
              if (!v42)
              {
                ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
                std::__shared_weak_count::__release_weak(v39);
              }
            }
            goto LABEL_64;
          }
        }
        else if (v31)
        {
LABEL_64:
          v43 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v31 + 80))(v31);
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          {
            size = __p.__r_.__value_.__l.__size_;
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          *(_QWORD *)v64 = p_p;
          *(_QWORD *)&v64[8] = size;
          *(_QWORD *)&v64[16] = " but the other image contains an incompatible buffer type ";
          *(_QWORD *)&v64[24] = 58;
          v65 = (const char *)v43;
          v66 = v44;
          sub_20AECFDF8((uint64_t)v64, (uint64_t)v67, 0, 0, &__dst);
          LOBYTE(v36) = *((_BYTE *)&__p.__r_.__value_.__s + 23);
LABEL_74:
          if ((v36 & 0x80) != 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          std::logic_error::logic_error(exception, &__dst);
          exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
          __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
        }
        v36 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v37 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v37 = __p.__r_.__value_.__l.__size_;
        v38 = v37 + 46;
        if (v37 + 46 >= 0x7FFFFFFFFFFFFFF8)
          sub_20AEC0138();
        if (v38 > 0x16)
        {
          v49 = (v38 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v38 | 7) != 0x17)
            v49 = v38 | 7;
          v50 = v49 + 1;
          p_dst = (std::string *)operator new(v49 + 1);
          __dst.__r_.__value_.__l.__size_ = v37 + 46;
          __dst.__r_.__value_.__r.__words[2] = v50 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          if (!v37)
            goto LABEL_73;
        }
        else
        {
          memset(&__dst, 0, sizeof(__dst));
          p_dst = &__dst;
          *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v37 + 46;
        }
        if (v36 >= 0)
          v48 = &__p;
        else
          v48 = (std::string *)__p.__r_.__value_.__r.__words[0];
        memmove(p_dst, v48, v37);
LABEL_73:
        strcpy((char *)p_dst + v37, " but the other image does not contain a buffer");
        goto LABEL_74;
      }
LABEL_96:
      operator delete(v62[0]);
      goto LABEL_97;
    }
LABEL_106:
    operator delete(*(void **)v64);
    if ((SHIBYTE(v62[2]) & 0x80000000) == 0)
      goto LABEL_97;
    goto LABEL_96;
  }
  v17 = a2 + 3;
  if (v13)
  {
    v18 = (unint64_t *)&v13->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    *(_OWORD *)v64 = *(_OWORD *)v17;
    *(_QWORD *)&v64[16] = v17[2];
    do
      v20 = __ldxr(v18);
    while (__stxr(v20 + 1, v18));
    do
      v21 = __ldaxr(v18);
    while (__stlxr(v21 - 1, v18));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
    do
      v22 = __ldaxr(v18);
    while (__stlxr(v22 - 1, v18));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  else
  {
    *(_OWORD *)v64 = *(_OWORD *)v17;
    *(_QWORD *)&v64[16] = a2[5];
  }
  *(_QWORD *)a1 = &off_24C3F6A68;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v13;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v64;
  result = *(double *)&v64[9];
  *(_OWORD *)(a1 + 33) = *(_OWORD *)&v64[9];
  *(_BYTE *)(a1 + 56) = 1;
  return result;
}

void sub_20AF87B28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void **__p,void **a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  std::__shared_weak_count *v50;
  void *v51;
  void **v53;
  void **v54;
  unint64_t *p_shared_owners;
  unint64_t v56;

  if (__p)
  {
    v53 = a23;
    v54 = __p;
    if (a23 != __p)
    {
      do
      {
        if (*((char *)v53 - 1) < 0)
          operator delete(*(v53 - 3));
        v53 -= 3;
      }
      while (v53 != __p);
      v54 = __p;
    }
    operator delete(v54);
  }
  if (a50 < 0)
    operator delete(a45);
  if (a44 < 0)
    operator delete(a39);
  if (a30 < 0)
    operator delete(a25);
  __cxa_guard_abort(&qword_25463AA20);
  __cxa_free_exception(v51);
  if (v50)
  {
    p_shared_owners = (unint64_t *)&v50->__shared_owners_;
    do
      v56 = __ldaxr(p_shared_owners);
    while (__stlxr(v56 - 1, p_shared_owners));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF87C7C(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F6A68;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF87CF0(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F6A68;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF87D64()
{
  return 2;
}

uint64_t sub_20AF87D6C(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20AF87D74@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_20AF87D8C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

std::string *sub_20AF87E08()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254632418);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254632418))
    return &stru_254632400;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Gray16u]", __p);
  sub_20B531884((uint64_t)__p, &stru_254632400);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254632400, &dword_20AEBB000);
  __cxa_guard_release(&qword_254632418);
  return &stru_254632400;
}

void sub_20AF87EC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254632418);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254632418);
  _Unwind_Resume(a1);
}

void sub_20AF87F00()
{
  unsigned __int8 v0;
  std::string *v1;
  __int128 *v2;
  int64x2_t v3;
  int8x16_t v4;
  void *v5[3];
  void *v6[2];
  char v7;
  void *v8[2];
  char v9;
  void *__p;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25463AA28);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463AA28))
  {
    sub_20AEC0D64(v6, "ConstSharedImage");
    v1 = sub_20AF87E08();
    sub_20AF880F0((uint64_t)v8, (uint64_t)v1);
    v2 = sub_20AF85EB4();
    sub_20AF880F0((uint64_t)&__p, (uint64_t)v2);
    sub_20AEC7620(v5, (uint64_t)v8, 2uLL);
    sub_20B53170C((char *)v6, (uint64_t *)v5, (std::string *)&qword_25463AB80, v3, v4);
    sub_20AEC2E90(v5);
    if (v11 < 0)
    {
      operator delete(__p);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v7 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463AB80, &dword_20AEBB000);
          __cxa_guard_release(&qword_25463AA28);
          return;
        }
LABEL_10:
        operator delete(v6[0]);
        goto LABEL_7;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8[0]);
    if ((v7 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
}

void sub_20AF8803C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_25463AA28);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_25463AA28);
  _Unwind_Resume(a1);
}

void sub_20AF880F0(uint64_t a1, uint64_t a2)
{
  std::string __p;

  if (*(char *)(a2 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20AF8818C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF881A8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F6B60;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF8821C()
{
  return 2;
}

uint64_t sub_20AF88224(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20AF8822C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_20AF88244(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF882C0(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  _BOOL4 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int16 v17;
  std::__shared_weak_count *size;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::logic_error *exception;
  std::string v23;

  if (*(_DWORD *)(a2 + 48) != 2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AF88540((uint64_t)&v23, a2);
    std::logic_error::logic_error(exception, &v23);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v23.__r_.__value_.__r.__words[0] = v4;
      v23.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v4;
    }
  }
  else
  {
    *(_OWORD *)&v23.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v12 = v11 != 0;
  v13 = v11 == 0;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  if (v13)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  if (v13)
    v15 = 0;
  else
    v15 = *(_QWORD *)(a2 + 24);
  if (HIDWORD(v15) * HIDWORD(v14) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v16 = v14 | v12;
  v17 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v23.__r_.__value_.__l.__size_;
  if (v23.__r_.__value_.__l.__size_)
  {
    v19 = (unint64_t *)(v23.__r_.__value_.__l.__size_ + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    *(_QWORD *)a1 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a1 + 8) = size;
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v15;
    *(_QWORD *)(a1 + 32) = v16;
    *(_WORD *)(a1 + 40) = v17;
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  else
  {
    *(_OWORD *)a1 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v15;
    *(_QWORD *)(a1 + 32) = v16;
    *(_WORD *)(a1 + 40) = v17;
  }
}

void sub_20AF884F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF88540(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  sub_20AF87F00();
  v3 = sub_20AF87004();
  v5 = *(_DWORD *)(a2 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)&qword_25463AB80, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_20AF885AC(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F6D50;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

double sub_20AF88620(uint64_t a1, _QWORD *a2)
{
  uint64_t (***v4)();
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (***v14)();
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  double result;
  _QWORD *v24;
  std::logic_error *exception;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  size_t v37;
  unint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  std::string::size_type size;
  std::string *p_p;
  std::string *p_dst;
  std::string *v48;
  uint64_t v49;
  uint64_t v50;
  std::string *v51;
  __int128 v52;
  int64x2_t v53;
  int8x16_t v54;
  void **v55;
  void **v56;
  void *v57;
  std::string __dst;
  std::string __p;
  void *v60;
  void **v61;
  void *v62[4];
  std::string __s;
  _BYTE v64[32];
  const char *v65;
  uint64_t v66;
  _QWORD v67[2];
  _QWORD v68[2];

  v68[1] = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t (***)())a2[1];
  v5 = a2[2];
  __s.__r_.__value_.__r.__words[0] = (std::string::size_type)v4;
  __s.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4 && *v4 == off_24C415090)
  {
    *(_QWORD *)v64 = v4;
    *(_QWORD *)&v64[8] = v5;
    *(_OWORD *)&__s.__r_.__value_.__l.__data_ = 0uLL;
  }
  else
  {
    *(_QWORD *)v64 = 0;
    *(_QWORD *)&v64[8] = 0;
    if (__s.__r_.__value_.__l.__size_)
    {
      v8 = (unint64_t *)(__s.__r_.__value_.__l.__size_ + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        (*(void (**)(std::string::size_type))(*(_QWORD *)__s.__r_.__value_.__l.__size_ + 16))(__s.__r_.__value_.__l.__size_);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)__s.__r_.__value_.__l.__size_);
        v10 = *(_QWORD *)v64;
        goto LABEL_16;
      }
    }
  }
  v10 = *(_QWORD *)v64;
  if (!*(_QWORD *)&v64[8])
    goto LABEL_16;
  v11 = (unint64_t *)(*(_QWORD *)&v64[8] + 8);
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (v12)
  {
LABEL_16:
    if (v10)
      goto LABEL_17;
LABEL_35:
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 56) = 0;
    return result;
  }
  (*(void (**)(_QWORD))(**(_QWORD **)&v64[8] + 16))(*(_QWORD *)&v64[8]);
  std::__shared_weak_count::__release_weak(*(std::__shared_weak_count **)&v64[8]);
  if (!*(_QWORD *)v64)
    goto LABEL_35;
LABEL_17:
  v14 = (uint64_t (***)())a2[1];
  v13 = (std::__shared_weak_count *)a2[2];
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  if (!v14 || *v14 != off_24C415090)
  {
    v24 = a2;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v26 = atomic_load((unsigned __int8 *)&qword_25463AA30);
    if ((v26 & 1) != 0 || !__cxa_guard_acquire(&qword_25463AA30))
      goto LABEL_39;
    HIBYTE(v62[2]) = 16;
    strcpy((char *)v62, "ConstSharedImage");
    v51 = sub_20AF88FFC();
    if (SHIBYTE(v51->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&__s, v51->__r_.__value_.__l.__data_, v51->__r_.__value_.__l.__size_);
    }
    else
    {
      v52 = *(_OWORD *)&v51->__r_.__value_.__l.__data_;
      __s.__r_.__value_.__r.__words[2] = v51->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v52;
    }
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)v64);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AF85A54();
    if (byte_25463AB08[23] < 0)
      sub_20AEC60F4(&__s, *(void **)byte_25463AB08, *(unint64_t *)&byte_25463AB08[8]);
    else
      __s = *(std::string *)byte_25463AB08;
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v64[24]);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AEC7620(&v60, (uint64_t)v64, 2uLL);
    sub_20B53170C((char *)v62, (uint64_t *)&v60, (std::string *)&qword_25463AB98, v53, v54);
    v55 = (void **)v60;
    if (v60)
    {
      v56 = v61;
      v57 = v60;
      if (v61 != v60)
      {
        do
        {
          if (*((char *)v56 - 1) < 0)
            operator delete(*(v56 - 3));
          v56 -= 3;
        }
        while (v56 != v55);
        v57 = v60;
      }
      v61 = v55;
      operator delete(v57);
      if (SHIBYTE(v66) < 0)
      {
LABEL_94:
        operator delete(*(void **)&v64[24]);
        if ((v64[23] & 0x80000000) == 0)
          goto LABEL_95;
        goto LABEL_106;
      }
    }
    else if (SHIBYTE(v66) < 0)
    {
      goto LABEL_94;
    }
    if ((v64[23] & 0x80000000) == 0)
    {
LABEL_95:
      if ((SHIBYTE(v62[2]) & 0x80000000) == 0)
      {
LABEL_97:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463AB98, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463AA30);
LABEL_39:
        sub_20AF890F4();
        *(_QWORD *)v64 = "Attempting to create an ";
        *(_QWORD *)&v64[8] = 24;
        v27 = byte_25463ABAF;
        if (byte_25463ABAF >= 0)
        {
          v28 = &qword_25463AB98;
        }
        else
        {
          v27 = unk_25463ABA0;
          v28 = (uint64_t *)qword_25463AB98;
        }
        *(_QWORD *)&v64[16] = v28;
        *(_QWORD *)&v64[24] = v27;
        v65 = " from an ";
        v66 = 9;
        v29 = byte_25463ABC7;
        v30 = &qword_25463ABB0;
        if (byte_25463ABC7 < 0)
        {
          v29 = qword_25463ABB8;
          v30 = (uint64_t *)qword_25463ABB0;
        }
        v67[0] = v30;
        v67[1] = v29;
        sub_20AECFDF8((uint64_t)v64, (uint64_t)v68, 0, 0, &__p);
        v31 = a2[1];
        v32 = (std::__shared_weak_count *)v24[2];
        if (v32)
        {
          v33 = (unint64_t *)&v32->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
          if (v31)
          {
            v31 = v24[1];
            v39 = (std::__shared_weak_count *)v24[2];
            if (v39)
            {
              v40 = (unint64_t *)&v39->__shared_owners_;
              do
                v41 = __ldxr(v40);
              while (__stxr(v41 + 1, v40));
              do
                v42 = __ldaxr(v40);
              while (__stlxr(v42 - 1, v40));
              if (!v42)
              {
                ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
                std::__shared_weak_count::__release_weak(v39);
              }
            }
            goto LABEL_64;
          }
        }
        else if (v31)
        {
LABEL_64:
          v43 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v31 + 80))(v31);
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          {
            size = __p.__r_.__value_.__l.__size_;
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          *(_QWORD *)v64 = p_p;
          *(_QWORD *)&v64[8] = size;
          *(_QWORD *)&v64[16] = " but the other image contains an incompatible buffer type ";
          *(_QWORD *)&v64[24] = 58;
          v65 = (const char *)v43;
          v66 = v44;
          sub_20AECFDF8((uint64_t)v64, (uint64_t)v67, 0, 0, &__dst);
          LOBYTE(v36) = *((_BYTE *)&__p.__r_.__value_.__s + 23);
LABEL_74:
          if ((v36 & 0x80) != 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          std::logic_error::logic_error(exception, &__dst);
          exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
          __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
        }
        v36 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v37 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v37 = __p.__r_.__value_.__l.__size_;
        v38 = v37 + 46;
        if (v37 + 46 >= 0x7FFFFFFFFFFFFFF8)
          sub_20AEC0138();
        if (v38 > 0x16)
        {
          v49 = (v38 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v38 | 7) != 0x17)
            v49 = v38 | 7;
          v50 = v49 + 1;
          p_dst = (std::string *)operator new(v49 + 1);
          __dst.__r_.__value_.__l.__size_ = v37 + 46;
          __dst.__r_.__value_.__r.__words[2] = v50 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          if (!v37)
            goto LABEL_73;
        }
        else
        {
          memset(&__dst, 0, sizeof(__dst));
          p_dst = &__dst;
          *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v37 + 46;
        }
        if (v36 >= 0)
          v48 = &__p;
        else
          v48 = (std::string *)__p.__r_.__value_.__r.__words[0];
        memmove(p_dst, v48, v37);
LABEL_73:
        strcpy((char *)p_dst + v37, " but the other image does not contain a buffer");
        goto LABEL_74;
      }
LABEL_96:
      operator delete(v62[0]);
      goto LABEL_97;
    }
LABEL_106:
    operator delete(*(void **)v64);
    if ((SHIBYTE(v62[2]) & 0x80000000) == 0)
      goto LABEL_97;
    goto LABEL_96;
  }
  v17 = a2 + 3;
  if (v13)
  {
    v18 = (unint64_t *)&v13->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    *(_OWORD *)v64 = *(_OWORD *)v17;
    *(_QWORD *)&v64[16] = v17[2];
    do
      v20 = __ldxr(v18);
    while (__stxr(v20 + 1, v18));
    do
      v21 = __ldaxr(v18);
    while (__stlxr(v21 - 1, v18));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
    do
      v22 = __ldaxr(v18);
    while (__stlxr(v22 - 1, v18));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  else
  {
    *(_OWORD *)v64 = *(_OWORD *)v17;
    *(_QWORD *)&v64[16] = a2[5];
  }
  *(_QWORD *)a1 = &off_24C3F6C58;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v13;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v64;
  result = *(double *)&v64[9];
  *(_OWORD *)(a1 + 33) = *(_OWORD *)&v64[9];
  *(_BYTE *)(a1 + 56) = 1;
  return result;
}

void sub_20AF88D1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void **__p,void **a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  std::__shared_weak_count *v50;
  void *v51;
  void **v53;
  void **v54;
  unint64_t *p_shared_owners;
  unint64_t v56;

  if (__p)
  {
    v53 = a23;
    v54 = __p;
    if (a23 != __p)
    {
      do
      {
        if (*((char *)v53 - 1) < 0)
          operator delete(*(v53 - 3));
        v53 -= 3;
      }
      while (v53 != __p);
      v54 = __p;
    }
    operator delete(v54);
  }
  if (a50 < 0)
    operator delete(a45);
  if (a44 < 0)
    operator delete(a39);
  if (a30 < 0)
    operator delete(a25);
  __cxa_guard_abort(&qword_25463AA30);
  __cxa_free_exception(v51);
  if (v50)
  {
    p_shared_owners = (unint64_t *)&v50->__shared_owners_;
    do
      v56 = __ldaxr(p_shared_owners);
    while (__stlxr(v56 - 1, p_shared_owners));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF88E70(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F6C58;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF88EE4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F6C58;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF88F58()
{
  return 3;
}

uint64_t sub_20AF88F60(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20AF88F68@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_20AF88F80(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

std::string *sub_20AF88FFC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254632438);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254632438))
    return &stru_254632420;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Gray16f]", __p);
  sub_20B531884((uint64_t)__p, &stru_254632420);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254632420, &dword_20AEBB000);
  __cxa_guard_release(&qword_254632438);
  return &stru_254632420;
}

void sub_20AF890B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254632438);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254632438);
  _Unwind_Resume(a1);
}

void sub_20AF890F4()
{
  unsigned __int8 v0;
  std::string *v1;
  __int128 *v2;
  int64x2_t v3;
  int8x16_t v4;
  void *v5[3];
  void *v6[2];
  char v7;
  void *v8[2];
  char v9;
  void *__p;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25463AA38);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463AA38))
  {
    sub_20AEC0D64(v6, "ConstSharedImage");
    v1 = sub_20AF88FFC();
    sub_20AF892E4((uint64_t)v8, (uint64_t)v1);
    v2 = sub_20AF85EB4();
    sub_20AF892E4((uint64_t)&__p, (uint64_t)v2);
    sub_20AEC7620(v5, (uint64_t)v8, 2uLL);
    sub_20B53170C((char *)v6, (uint64_t *)v5, (std::string *)&qword_25463ABB0, v3, v4);
    sub_20AEC2E90(v5);
    if (v11 < 0)
    {
      operator delete(__p);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v7 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463ABB0, &dword_20AEBB000);
          __cxa_guard_release(&qword_25463AA38);
          return;
        }
LABEL_10:
        operator delete(v6[0]);
        goto LABEL_7;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8[0]);
    if ((v7 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
}

void sub_20AF89230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_25463AA38);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_25463AA38);
  _Unwind_Resume(a1);
}

void sub_20AF892E4(uint64_t a1, uint64_t a2)
{
  std::string __p;

  if (*(char *)(a2 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20AF89380(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF8939C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F6D50;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF89410()
{
  return 3;
}

uint64_t sub_20AF89418(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20AF89420@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_20AF89438(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF894B4(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  _BOOL4 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int16 v17;
  std::__shared_weak_count *size;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::logic_error *exception;
  std::string v23;

  if (*(_DWORD *)(a2 + 48) != 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AF89734((uint64_t)&v23, a2);
    std::logic_error::logic_error(exception, &v23);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v23.__r_.__value_.__r.__words[0] = v4;
      v23.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v4;
    }
  }
  else
  {
    *(_OWORD *)&v23.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v12 = v11 != 0;
  v13 = v11 == 0;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  if (v13)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  if (v13)
    v15 = 0;
  else
    v15 = *(_QWORD *)(a2 + 24);
  if (HIDWORD(v15) * HIDWORD(v14) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v16 = v14 | v12;
  v17 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v23.__r_.__value_.__l.__size_;
  if (v23.__r_.__value_.__l.__size_)
  {
    v19 = (unint64_t *)(v23.__r_.__value_.__l.__size_ + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    *(_QWORD *)a1 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a1 + 8) = size;
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v15;
    *(_QWORD *)(a1 + 32) = v16;
    *(_WORD *)(a1 + 40) = v17;
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  else
  {
    *(_OWORD *)a1 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v15;
    *(_QWORD *)(a1 + 32) = v16;
    *(_WORD *)(a1 + 40) = v17;
  }
}

void sub_20AF896E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF89734(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  sub_20AF890F4();
  v3 = sub_20AF87004();
  v5 = *(_DWORD *)(a2 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)&qword_25463ABB0, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_20AF897A0(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F6F40;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

double sub_20AF89814(uint64_t a1, _QWORD *a2)
{
  uint64_t (***v4)();
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (***v14)();
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  double result;
  _QWORD *v24;
  std::logic_error *exception;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  size_t v37;
  unint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  std::string::size_type size;
  std::string *p_p;
  std::string *p_dst;
  std::string *v48;
  uint64_t v49;
  uint64_t v50;
  std::string *v51;
  __int128 v52;
  int64x2_t v53;
  int8x16_t v54;
  void **v55;
  void **v56;
  void *v57;
  std::string __dst;
  std::string __p;
  void *v60;
  void **v61;
  void *v62[4];
  std::string __s;
  _BYTE v64[32];
  const char *v65;
  uint64_t v66;
  _QWORD v67[2];
  _QWORD v68[2];

  v68[1] = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t (***)())a2[1];
  v5 = a2[2];
  __s.__r_.__value_.__r.__words[0] = (std::string::size_type)v4;
  __s.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4 && *v4 == off_24C415120)
  {
    *(_QWORD *)v64 = v4;
    *(_QWORD *)&v64[8] = v5;
    *(_OWORD *)&__s.__r_.__value_.__l.__data_ = 0uLL;
  }
  else
  {
    *(_QWORD *)v64 = 0;
    *(_QWORD *)&v64[8] = 0;
    if (__s.__r_.__value_.__l.__size_)
    {
      v8 = (unint64_t *)(__s.__r_.__value_.__l.__size_ + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        (*(void (**)(std::string::size_type))(*(_QWORD *)__s.__r_.__value_.__l.__size_ + 16))(__s.__r_.__value_.__l.__size_);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)__s.__r_.__value_.__l.__size_);
        v10 = *(_QWORD *)v64;
        goto LABEL_16;
      }
    }
  }
  v10 = *(_QWORD *)v64;
  if (!*(_QWORD *)&v64[8])
    goto LABEL_16;
  v11 = (unint64_t *)(*(_QWORD *)&v64[8] + 8);
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (v12)
  {
LABEL_16:
    if (v10)
      goto LABEL_17;
LABEL_35:
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 56) = 0;
    return result;
  }
  (*(void (**)(_QWORD))(**(_QWORD **)&v64[8] + 16))(*(_QWORD *)&v64[8]);
  std::__shared_weak_count::__release_weak(*(std::__shared_weak_count **)&v64[8]);
  if (!*(_QWORD *)v64)
    goto LABEL_35;
LABEL_17:
  v14 = (uint64_t (***)())a2[1];
  v13 = (std::__shared_weak_count *)a2[2];
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  if (!v14 || *v14 != off_24C415120)
  {
    v24 = a2;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v26 = atomic_load((unsigned __int8 *)&qword_25463AA40);
    if ((v26 & 1) != 0 || !__cxa_guard_acquire(&qword_25463AA40))
      goto LABEL_39;
    HIBYTE(v62[2]) = 16;
    strcpy((char *)v62, "ConstSharedImage");
    v51 = sub_20AF8A1F0();
    if (SHIBYTE(v51->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&__s, v51->__r_.__value_.__l.__data_, v51->__r_.__value_.__l.__size_);
    }
    else
    {
      v52 = *(_OWORD *)&v51->__r_.__value_.__l.__data_;
      __s.__r_.__value_.__r.__words[2] = v51->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v52;
    }
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)v64);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AF85A54();
    if (byte_25463AB08[23] < 0)
      sub_20AEC60F4(&__s, *(void **)byte_25463AB08, *(unint64_t *)&byte_25463AB08[8]);
    else
      __s = *(std::string *)byte_25463AB08;
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v64[24]);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AEC7620(&v60, (uint64_t)v64, 2uLL);
    sub_20B53170C((char *)v62, (uint64_t *)&v60, (std::string *)&qword_25463ABC8, v53, v54);
    v55 = (void **)v60;
    if (v60)
    {
      v56 = v61;
      v57 = v60;
      if (v61 != v60)
      {
        do
        {
          if (*((char *)v56 - 1) < 0)
            operator delete(*(v56 - 3));
          v56 -= 3;
        }
        while (v56 != v55);
        v57 = v60;
      }
      v61 = v55;
      operator delete(v57);
      if (SHIBYTE(v66) < 0)
      {
LABEL_94:
        operator delete(*(void **)&v64[24]);
        if ((v64[23] & 0x80000000) == 0)
          goto LABEL_95;
        goto LABEL_106;
      }
    }
    else if (SHIBYTE(v66) < 0)
    {
      goto LABEL_94;
    }
    if ((v64[23] & 0x80000000) == 0)
    {
LABEL_95:
      if ((SHIBYTE(v62[2]) & 0x80000000) == 0)
      {
LABEL_97:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463ABC8, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463AA40);
LABEL_39:
        sub_20AF8A2E8();
        *(_QWORD *)v64 = "Attempting to create an ";
        *(_QWORD *)&v64[8] = 24;
        v27 = byte_25463ABDF;
        if (byte_25463ABDF >= 0)
        {
          v28 = &qword_25463ABC8;
        }
        else
        {
          v27 = unk_25463ABD0;
          v28 = (uint64_t *)qword_25463ABC8;
        }
        *(_QWORD *)&v64[16] = v28;
        *(_QWORD *)&v64[24] = v27;
        v65 = " from an ";
        v66 = 9;
        v29 = byte_25463ABF7;
        v30 = &qword_25463ABE0;
        if (byte_25463ABF7 < 0)
        {
          v29 = qword_25463ABE8;
          v30 = (uint64_t *)qword_25463ABE0;
        }
        v67[0] = v30;
        v67[1] = v29;
        sub_20AECFDF8((uint64_t)v64, (uint64_t)v68, 0, 0, &__p);
        v31 = a2[1];
        v32 = (std::__shared_weak_count *)v24[2];
        if (v32)
        {
          v33 = (unint64_t *)&v32->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
          if (v31)
          {
            v31 = v24[1];
            v39 = (std::__shared_weak_count *)v24[2];
            if (v39)
            {
              v40 = (unint64_t *)&v39->__shared_owners_;
              do
                v41 = __ldxr(v40);
              while (__stxr(v41 + 1, v40));
              do
                v42 = __ldaxr(v40);
              while (__stlxr(v42 - 1, v40));
              if (!v42)
              {
                ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
                std::__shared_weak_count::__release_weak(v39);
              }
            }
            goto LABEL_64;
          }
        }
        else if (v31)
        {
LABEL_64:
          v43 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v31 + 80))(v31);
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          {
            size = __p.__r_.__value_.__l.__size_;
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          *(_QWORD *)v64 = p_p;
          *(_QWORD *)&v64[8] = size;
          *(_QWORD *)&v64[16] = " but the other image contains an incompatible buffer type ";
          *(_QWORD *)&v64[24] = 58;
          v65 = (const char *)v43;
          v66 = v44;
          sub_20AECFDF8((uint64_t)v64, (uint64_t)v67, 0, 0, &__dst);
          LOBYTE(v36) = *((_BYTE *)&__p.__r_.__value_.__s + 23);
LABEL_74:
          if ((v36 & 0x80) != 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          std::logic_error::logic_error(exception, &__dst);
          exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
          __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
        }
        v36 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v37 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v37 = __p.__r_.__value_.__l.__size_;
        v38 = v37 + 46;
        if (v37 + 46 >= 0x7FFFFFFFFFFFFFF8)
          sub_20AEC0138();
        if (v38 > 0x16)
        {
          v49 = (v38 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v38 | 7) != 0x17)
            v49 = v38 | 7;
          v50 = v49 + 1;
          p_dst = (std::string *)operator new(v49 + 1);
          __dst.__r_.__value_.__l.__size_ = v37 + 46;
          __dst.__r_.__value_.__r.__words[2] = v50 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          if (!v37)
            goto LABEL_73;
        }
        else
        {
          memset(&__dst, 0, sizeof(__dst));
          p_dst = &__dst;
          *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v37 + 46;
        }
        if (v36 >= 0)
          v48 = &__p;
        else
          v48 = (std::string *)__p.__r_.__value_.__r.__words[0];
        memmove(p_dst, v48, v37);
LABEL_73:
        strcpy((char *)p_dst + v37, " but the other image does not contain a buffer");
        goto LABEL_74;
      }
LABEL_96:
      operator delete(v62[0]);
      goto LABEL_97;
    }
LABEL_106:
    operator delete(*(void **)v64);
    if ((SHIBYTE(v62[2]) & 0x80000000) == 0)
      goto LABEL_97;
    goto LABEL_96;
  }
  v17 = a2 + 3;
  if (v13)
  {
    v18 = (unint64_t *)&v13->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    *(_OWORD *)v64 = *(_OWORD *)v17;
    *(_QWORD *)&v64[16] = v17[2];
    do
      v20 = __ldxr(v18);
    while (__stxr(v20 + 1, v18));
    do
      v21 = __ldaxr(v18);
    while (__stlxr(v21 - 1, v18));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
    do
      v22 = __ldaxr(v18);
    while (__stlxr(v22 - 1, v18));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  else
  {
    *(_OWORD *)v64 = *(_OWORD *)v17;
    *(_QWORD *)&v64[16] = a2[5];
  }
  *(_QWORD *)a1 = &off_24C3F6E48;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v13;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v64;
  result = *(double *)&v64[9];
  *(_OWORD *)(a1 + 33) = *(_OWORD *)&v64[9];
  *(_BYTE *)(a1 + 56) = 1;
  return result;
}

void sub_20AF89F10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void **__p,void **a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  std::__shared_weak_count *v50;
  void *v51;
  void **v53;
  void **v54;
  unint64_t *p_shared_owners;
  unint64_t v56;

  if (__p)
  {
    v53 = a23;
    v54 = __p;
    if (a23 != __p)
    {
      do
      {
        if (*((char *)v53 - 1) < 0)
          operator delete(*(v53 - 3));
        v53 -= 3;
      }
      while (v53 != __p);
      v54 = __p;
    }
    operator delete(v54);
  }
  if (a50 < 0)
    operator delete(a45);
  if (a44 < 0)
    operator delete(a39);
  if (a30 < 0)
    operator delete(a25);
  __cxa_guard_abort(&qword_25463AA40);
  __cxa_free_exception(v51);
  if (v50)
  {
    p_shared_owners = (unint64_t *)&v50->__shared_owners_;
    do
      v56 = __ldaxr(p_shared_owners);
    while (__stlxr(v56 - 1, p_shared_owners));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF8A064(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F6E48;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF8A0D8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F6E48;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF8A14C()
{
  return 4;
}

uint64_t sub_20AF8A154(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20AF8A15C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_20AF8A174(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

std::string *sub_20AF8A1F0()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254632458);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254632458))
    return &stru_254632440;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Gray32f]", __p);
  sub_20B531884((uint64_t)__p, &stru_254632440);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254632440, &dword_20AEBB000);
  __cxa_guard_release(&qword_254632458);
  return &stru_254632440;
}

void sub_20AF8A2A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254632458);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254632458);
  _Unwind_Resume(a1);
}

void sub_20AF8A2E8()
{
  unsigned __int8 v0;
  std::string *v1;
  __int128 *v2;
  int64x2_t v3;
  int8x16_t v4;
  void *v5[3];
  void *v6[2];
  char v7;
  void *v8[2];
  char v9;
  void *__p;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25463AA48);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463AA48))
  {
    sub_20AEC0D64(v6, "ConstSharedImage");
    v1 = sub_20AF8A1F0();
    sub_20AF8A4D8((uint64_t)v8, (uint64_t)v1);
    v2 = sub_20AF85EB4();
    sub_20AF8A4D8((uint64_t)&__p, (uint64_t)v2);
    sub_20AEC7620(v5, (uint64_t)v8, 2uLL);
    sub_20B53170C((char *)v6, (uint64_t *)v5, (std::string *)&qword_25463ABE0, v3, v4);
    sub_20AEC2E90(v5);
    if (v11 < 0)
    {
      operator delete(__p);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v7 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463ABE0, &dword_20AEBB000);
          __cxa_guard_release(&qword_25463AA48);
          return;
        }
LABEL_10:
        operator delete(v6[0]);
        goto LABEL_7;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8[0]);
    if ((v7 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
}

void sub_20AF8A424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_25463AA48);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_25463AA48);
  _Unwind_Resume(a1);
}

void sub_20AF8A4D8(uint64_t a1, uint64_t a2)
{
  std::string __p;

  if (*(char *)(a2 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20AF8A574(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF8A590(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F6F40;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF8A604()
{
  return 4;
}

uint64_t sub_20AF8A60C(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20AF8A614@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_20AF8A62C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF8A6A8(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  _BOOL4 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int16 v17;
  std::__shared_weak_count *size;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::logic_error *exception;
  std::string v23;

  if (*(_DWORD *)(a2 + 48) != 4)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AF8A928((uint64_t)&v23, a2);
    std::logic_error::logic_error(exception, &v23);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v23.__r_.__value_.__r.__words[0] = v4;
      v23.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v4;
    }
  }
  else
  {
    *(_OWORD *)&v23.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v12 = v11 != 0;
  v13 = v11 == 0;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  if (v13)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a2 + 32) << 30) & 0x3FFFFFFF00000000;
  if (v13)
    v15 = 0;
  else
    v15 = *(_QWORD *)(a2 + 24);
  if (HIDWORD(v15) * HIDWORD(v14) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v16 = v14 | v12;
  v17 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v23.__r_.__value_.__l.__size_;
  if (v23.__r_.__value_.__l.__size_)
  {
    v19 = (unint64_t *)(v23.__r_.__value_.__l.__size_ + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    *(_QWORD *)a1 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a1 + 8) = size;
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v15;
    *(_QWORD *)(a1 + 32) = v16;
    *(_WORD *)(a1 + 40) = v17;
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  else
  {
    *(_OWORD *)a1 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v15;
    *(_QWORD *)(a1 + 32) = v16;
    *(_WORD *)(a1 + 40) = v17;
  }
}

void sub_20AF8A8DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF8A928(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  sub_20AF8A2E8();
  v3 = sub_20AF87004();
  v5 = *(_DWORD *)(a2 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)&qword_25463ABE0, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_20AF8A994(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F7130;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

double sub_20AF8AA08(uint64_t a1, uint64_t a2)
{
  uint64_t (***v4)();
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (***v14)();
  unint64_t *p_shared_owners;
  unint64_t v16;
  __int128 *v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  double result;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  std::logic_error *exception;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  size_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  std::string::size_type size;
  std::string *p_p;
  std::string *p_dst;
  std::string *v51;
  uint64_t v52;
  uint64_t v53;
  std::string *v54;
  __int128 v55;
  int64x2_t v56;
  int8x16_t v57;
  void **v58;
  void **v59;
  void *v60;
  std::string __dst;
  std::string __p;
  void *v63;
  void **v64;
  void *v65[4];
  std::string __s;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _QWORD v70[2];
  _QWORD v71[2];

  v71[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t (****)())(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  __s.__r_.__value_.__r.__words[0] = (std::string::size_type)v4;
  __s.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4 && *v4 == off_24C4151B0)
  {
    *(_QWORD *)&v67 = v4;
    *((_QWORD *)&v67 + 1) = v5;
    *(_OWORD *)&__s.__r_.__value_.__l.__data_ = 0uLL;
  }
  else
  {
    v67 = 0uLL;
    if (__s.__r_.__value_.__l.__size_)
    {
      v8 = (unint64_t *)(__s.__r_.__value_.__l.__size_ + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        (*(void (**)(std::string::size_type))(*(_QWORD *)__s.__r_.__value_.__l.__size_ + 16))(__s.__r_.__value_.__l.__size_);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)__s.__r_.__value_.__l.__size_);
        v10 = v67;
        goto LABEL_16;
      }
    }
  }
  v10 = v67;
  if (!*((_QWORD *)&v67 + 1))
    goto LABEL_16;
  v11 = (unint64_t *)(*((_QWORD *)&v67 + 1) + 8);
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (v12)
  {
LABEL_16:
    if (v10)
      goto LABEL_17;
LABEL_35:
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 80) = 0;
    return result;
  }
  (*(void (**)(_QWORD))(**((_QWORD **)&v67 + 1) + 16))(*((_QWORD *)&v67 + 1));
  std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v67 + 1));
  if (!(_QWORD)v67)
    goto LABEL_35;
LABEL_17:
  v14 = *(uint64_t (****)())(a2 + 8);
  v13 = *(std::__shared_weak_count **)(a2 + 16);
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  if (!v14 || *v14 != off_24C4151B0)
  {
    v27 = a2;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v29 = atomic_load((unsigned __int8 *)&qword_25463AA50);
    if ((v29 & 1) != 0 || !__cxa_guard_acquire(&qword_25463AA50))
      goto LABEL_39;
    HIBYTE(v65[2]) = 16;
    strcpy((char *)v65, "ConstSharedImage");
    v54 = sub_20AF8B3EC();
    if (SHIBYTE(v54->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&__s, v54->__r_.__value_.__l.__data_, v54->__r_.__value_.__l.__size_);
    }
    else
    {
      v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
      __s.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v55;
    }
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v67);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AF85A54();
    if (byte_25463AB08[23] < 0)
      sub_20AEC60F4(&__s, *(void **)byte_25463AB08, *(unint64_t *)&byte_25463AB08[8]);
    else
      __s = *(std::string *)byte_25463AB08;
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v68 + 8);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AEC7620(&v63, (uint64_t)&v67, 2uLL);
    sub_20B53170C((char *)v65, (uint64_t *)&v63, (std::string *)&qword_25463ABF8, v56, v57);
    v58 = (void **)v63;
    if (v63)
    {
      v59 = v64;
      v60 = v63;
      if (v64 != v63)
      {
        do
        {
          if (*((char *)v59 - 1) < 0)
            operator delete(*(v59 - 3));
          v59 -= 3;
        }
        while (v59 != v58);
        v60 = v63;
      }
      v64 = v58;
      operator delete(v60);
      if (SHIBYTE(v69) < 0)
      {
LABEL_94:
        operator delete(*((void **)&v68 + 1));
        if ((SBYTE7(v68) & 0x80000000) == 0)
          goto LABEL_95;
        goto LABEL_106;
      }
    }
    else if (SHIBYTE(v69) < 0)
    {
      goto LABEL_94;
    }
    if ((SBYTE7(v68) & 0x80000000) == 0)
    {
LABEL_95:
      if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      {
LABEL_97:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463ABF8, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463AA50);
LABEL_39:
        sub_20AF8B4E4();
        *(_QWORD *)&v67 = "Attempting to create an ";
        *((_QWORD *)&v67 + 1) = 24;
        v30 = byte_25463AC0F;
        if (byte_25463AC0F >= 0)
        {
          v31 = &qword_25463ABF8;
        }
        else
        {
          v30 = unk_25463AC00;
          v31 = (uint64_t *)qword_25463ABF8;
        }
        *(_QWORD *)&v68 = v31;
        *((_QWORD *)&v68 + 1) = v30;
        *(_QWORD *)&v69 = " from an ";
        *((_QWORD *)&v69 + 1) = 9;
        v32 = byte_25463AC27;
        v33 = &qword_25463AC10;
        if (byte_25463AC27 < 0)
        {
          v32 = qword_25463AC18;
          v33 = (uint64_t *)qword_25463AC10;
        }
        v70[0] = v33;
        v70[1] = v32;
        sub_20AECFDF8((uint64_t)&v67, (uint64_t)v71, 0, 0, &__p);
        v34 = *(_QWORD *)(a2 + 8);
        v35 = *(std::__shared_weak_count **)(v27 + 16);
        if (v35)
        {
          v36 = (unint64_t *)&v35->__shared_owners_;
          do
            v37 = __ldxr(v36);
          while (__stxr(v37 + 1, v36));
          do
            v38 = __ldaxr(v36);
          while (__stlxr(v38 - 1, v36));
          if (!v38)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
          if (v34)
          {
            v34 = *(_QWORD *)(v27 + 8);
            v42 = *(std::__shared_weak_count **)(v27 + 16);
            if (v42)
            {
              v43 = (unint64_t *)&v42->__shared_owners_;
              do
                v44 = __ldxr(v43);
              while (__stxr(v44 + 1, v43));
              do
                v45 = __ldaxr(v43);
              while (__stlxr(v45 - 1, v43));
              if (!v45)
              {
                ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
                std::__shared_weak_count::__release_weak(v42);
              }
            }
            goto LABEL_64;
          }
        }
        else if (v34)
        {
LABEL_64:
          v46 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v34 + 80))(v34);
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          {
            size = __p.__r_.__value_.__l.__size_;
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          *(_QWORD *)&v67 = p_p;
          *((_QWORD *)&v67 + 1) = size;
          *(_QWORD *)&v68 = " but the other image contains an incompatible buffer type ";
          *((_QWORD *)&v68 + 1) = 58;
          *(_QWORD *)&v69 = v46;
          *((_QWORD *)&v69 + 1) = v47;
          sub_20AECFDF8((uint64_t)&v67, (uint64_t)v70, 0, 0, &__dst);
          LOBYTE(v39) = *((_BYTE *)&__p.__r_.__value_.__s + 23);
LABEL_74:
          if ((v39 & 0x80) != 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          std::logic_error::logic_error(exception, &__dst);
          exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
          __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
        }
        v39 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v40 = __p.__r_.__value_.__l.__size_;
        v41 = v40 + 46;
        if (v40 + 46 >= 0x7FFFFFFFFFFFFFF8)
          sub_20AEC0138();
        if (v41 > 0x16)
        {
          v52 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v41 | 7) != 0x17)
            v52 = v41 | 7;
          v53 = v52 + 1;
          p_dst = (std::string *)operator new(v52 + 1);
          __dst.__r_.__value_.__l.__size_ = v40 + 46;
          __dst.__r_.__value_.__r.__words[2] = v53 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          if (!v40)
            goto LABEL_73;
        }
        else
        {
          memset(&__dst, 0, sizeof(__dst));
          p_dst = &__dst;
          *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v40 + 46;
        }
        if (v39 >= 0)
          v51 = &__p;
        else
          v51 = (std::string *)__p.__r_.__value_.__r.__words[0];
        memmove(p_dst, v51, v40);
LABEL_73:
        strcpy((char *)p_dst + v40, " but the other image does not contain a buffer");
        goto LABEL_74;
      }
LABEL_96:
      operator delete(v65[0]);
      goto LABEL_97;
    }
LABEL_106:
    operator delete((void *)v67);
    if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      goto LABEL_97;
    goto LABEL_96;
  }
  v17 = (__int128 *)(a2 + 24);
  if (v13)
  {
    v18 = (unint64_t *)&v13->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    v20 = v17[1];
    v67 = *v17;
    v68 = v20;
    v69 = v17[2];
    do
      v21 = __ldxr(v18);
    while (__stxr(v21 + 1, v18));
    do
      v22 = __ldaxr(v18);
    while (__stlxr(v22 - 1, v18));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
    do
      v23 = __ldaxr(v18);
    while (__stlxr(v23 - 1, v18));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  else
  {
    v25 = *(_OWORD *)(a2 + 40);
    v67 = *v17;
    v68 = v25;
    v69 = *(_OWORD *)(a2 + 56);
  }
  *(_QWORD *)a1 = &off_24C3F7038;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v13;
  v26 = v68;
  *(_OWORD *)(a1 + 24) = v67;
  *(_OWORD *)(a1 + 40) = v26;
  result = *(double *)&v69;
  *(_OWORD *)(a1 + 56) = v69;
  *(_BYTE *)(a1 + 72) = v70[0];
  *(_BYTE *)(a1 + 80) = 1;
  return result;
}

void sub_20AF8B110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void **__p,void **a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  std::__shared_weak_count *v50;
  void *v51;
  void **v53;
  void **v54;
  unint64_t *p_shared_owners;
  unint64_t v56;

  if (__p)
  {
    v53 = a23;
    v54 = __p;
    if (a23 != __p)
    {
      do
      {
        if (*((char *)v53 - 1) < 0)
          operator delete(*(v53 - 3));
        v53 -= 3;
      }
      while (v53 != __p);
      v54 = __p;
    }
    operator delete(v54);
  }
  if (a50 < 0)
    operator delete(a45);
  if (a44 < 0)
    operator delete(a39);
  if (a30 < 0)
    operator delete(a25);
  __cxa_guard_abort(&qword_25463AA50);
  __cxa_free_exception(v51);
  if (v50)
  {
    p_shared_owners = (unint64_t *)&v50->__shared_owners_;
    do
      v56 = __ldaxr(p_shared_owners);
    while (__stlxr(v56 - 1, p_shared_owners));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF8B264(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F7038;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF8B2D8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F7038;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF8B34C()
{
  return 5;
}

uint64_t sub_20AF8B354(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF8B35C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF8B370(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

std::string *sub_20AF8B3EC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254632478);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254632478))
    return &stru_254632460;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Two8u]", __p);
  sub_20B531884((uint64_t)__p, &stru_254632460);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254632460, &dword_20AEBB000);
  __cxa_guard_release(&qword_254632478);
  return &stru_254632460;
}

void sub_20AF8B4A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254632478);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254632478);
  _Unwind_Resume(a1);
}

void sub_20AF8B4E4()
{
  unsigned __int8 v0;
  std::string *v1;
  __int128 *v2;
  int64x2_t v3;
  int8x16_t v4;
  void *v5[3];
  void *v6[2];
  char v7;
  void *v8[2];
  char v9;
  void *__p;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25463AA58);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463AA58))
  {
    sub_20AEC0D64(v6, "ConstSharedImage");
    v1 = sub_20AF8B3EC();
    sub_20AF8B6D4((uint64_t)v8, (uint64_t)v1);
    v2 = sub_20AF85EB4();
    sub_20AF8B6D4((uint64_t)&__p, (uint64_t)v2);
    sub_20AEC7620(v5, (uint64_t)v8, 2uLL);
    sub_20B53170C((char *)v6, (uint64_t *)v5, (std::string *)&qword_25463AC10, v3, v4);
    sub_20AEC2E90(v5);
    if (v11 < 0)
    {
      operator delete(__p);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v7 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463AC10, &dword_20AEBB000);
          __cxa_guard_release(&qword_25463AA58);
          return;
        }
LABEL_10:
        operator delete(v6[0]);
        goto LABEL_7;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8[0]);
    if ((v7 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
}

void sub_20AF8B620(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_25463AA58);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_25463AA58);
  _Unwind_Resume(a1);
}

void sub_20AF8B6D4(uint64_t a1, uint64_t a2)
{
  std::string __p;

  if (*(char *)(a2 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20AF8B770(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF8B78C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F7130;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF8B800()
{
  return 5;
}

uint64_t sub_20AF8B808(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF8B810@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF8B824(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF8B8A0(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AF8BBA0((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a2 + 32) << 32;
  v16 = v15 | (2 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 2;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20AF8BB54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF8BBA0(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  sub_20AF8B4E4();
  v3 = sub_20AF87004();
  v5 = *(_DWORD *)(a2 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)&qword_25463AC10, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_20AF8BC0C(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F7320;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

double sub_20AF8BC80(uint64_t a1, uint64_t a2)
{
  uint64_t (***v4)();
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (***v14)();
  unint64_t *p_shared_owners;
  unint64_t v16;
  __int128 *v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  double result;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  std::logic_error *exception;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  size_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  std::string::size_type size;
  std::string *p_p;
  std::string *p_dst;
  std::string *v51;
  uint64_t v52;
  uint64_t v53;
  std::string *v54;
  __int128 v55;
  int64x2_t v56;
  int8x16_t v57;
  void **v58;
  void **v59;
  void *v60;
  std::string __dst;
  std::string __p;
  void *v63;
  void **v64;
  void *v65[4];
  std::string __s;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _QWORD v70[2];
  _QWORD v71[2];

  v71[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t (****)())(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  __s.__r_.__value_.__r.__words[0] = (std::string::size_type)v4;
  __s.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4 && *v4 == off_24C415240)
  {
    *(_QWORD *)&v67 = v4;
    *((_QWORD *)&v67 + 1) = v5;
    *(_OWORD *)&__s.__r_.__value_.__l.__data_ = 0uLL;
  }
  else
  {
    v67 = 0uLL;
    if (__s.__r_.__value_.__l.__size_)
    {
      v8 = (unint64_t *)(__s.__r_.__value_.__l.__size_ + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        (*(void (**)(std::string::size_type))(*(_QWORD *)__s.__r_.__value_.__l.__size_ + 16))(__s.__r_.__value_.__l.__size_);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)__s.__r_.__value_.__l.__size_);
        v10 = v67;
        goto LABEL_16;
      }
    }
  }
  v10 = v67;
  if (!*((_QWORD *)&v67 + 1))
    goto LABEL_16;
  v11 = (unint64_t *)(*((_QWORD *)&v67 + 1) + 8);
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (v12)
  {
LABEL_16:
    if (v10)
      goto LABEL_17;
LABEL_35:
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 80) = 0;
    return result;
  }
  (*(void (**)(_QWORD))(**((_QWORD **)&v67 + 1) + 16))(*((_QWORD *)&v67 + 1));
  std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v67 + 1));
  if (!(_QWORD)v67)
    goto LABEL_35;
LABEL_17:
  v14 = *(uint64_t (****)())(a2 + 8);
  v13 = *(std::__shared_weak_count **)(a2 + 16);
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  if (!v14 || *v14 != off_24C415240)
  {
    v27 = a2;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v29 = atomic_load((unsigned __int8 *)&qword_25463AA60);
    if ((v29 & 1) != 0 || !__cxa_guard_acquire(&qword_25463AA60))
      goto LABEL_39;
    HIBYTE(v65[2]) = 16;
    strcpy((char *)v65, "ConstSharedImage");
    v54 = sub_20AF8C668();
    if (SHIBYTE(v54->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&__s, v54->__r_.__value_.__l.__data_, v54->__r_.__value_.__l.__size_);
    }
    else
    {
      v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
      __s.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v55;
    }
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v67);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AF85A54();
    if (byte_25463AB08[23] < 0)
      sub_20AEC60F4(&__s, *(void **)byte_25463AB08, *(unint64_t *)&byte_25463AB08[8]);
    else
      __s = *(std::string *)byte_25463AB08;
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v68 + 8);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AEC7620(&v63, (uint64_t)&v67, 2uLL);
    sub_20B53170C((char *)v65, (uint64_t *)&v63, (std::string *)&qword_25463AC28, v56, v57);
    v58 = (void **)v63;
    if (v63)
    {
      v59 = v64;
      v60 = v63;
      if (v64 != v63)
      {
        do
        {
          if (*((char *)v59 - 1) < 0)
            operator delete(*(v59 - 3));
          v59 -= 3;
        }
        while (v59 != v58);
        v60 = v63;
      }
      v64 = v58;
      operator delete(v60);
      if (SHIBYTE(v69) < 0)
      {
LABEL_94:
        operator delete(*((void **)&v68 + 1));
        if ((SBYTE7(v68) & 0x80000000) == 0)
          goto LABEL_95;
        goto LABEL_106;
      }
    }
    else if (SHIBYTE(v69) < 0)
    {
      goto LABEL_94;
    }
    if ((SBYTE7(v68) & 0x80000000) == 0)
    {
LABEL_95:
      if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      {
LABEL_97:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463AC28, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463AA60);
LABEL_39:
        sub_20AF8C760();
        *(_QWORD *)&v67 = "Attempting to create an ";
        *((_QWORD *)&v67 + 1) = 24;
        v30 = byte_25463AC3F;
        if (byte_25463AC3F >= 0)
        {
          v31 = &qword_25463AC28;
        }
        else
        {
          v30 = unk_25463AC30;
          v31 = (uint64_t *)qword_25463AC28;
        }
        *(_QWORD *)&v68 = v31;
        *((_QWORD *)&v68 + 1) = v30;
        *(_QWORD *)&v69 = " from an ";
        *((_QWORD *)&v69 + 1) = 9;
        v32 = byte_25463AC57;
        v33 = &qword_25463AC40;
        if (byte_25463AC57 < 0)
        {
          v32 = qword_25463AC48;
          v33 = (uint64_t *)qword_25463AC40;
        }
        v70[0] = v33;
        v70[1] = v32;
        sub_20AECFDF8((uint64_t)&v67, (uint64_t)v71, 0, 0, &__p);
        v34 = *(_QWORD *)(a2 + 8);
        v35 = *(std::__shared_weak_count **)(v27 + 16);
        if (v35)
        {
          v36 = (unint64_t *)&v35->__shared_owners_;
          do
            v37 = __ldxr(v36);
          while (__stxr(v37 + 1, v36));
          do
            v38 = __ldaxr(v36);
          while (__stlxr(v38 - 1, v36));
          if (!v38)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
          if (v34)
          {
            v34 = *(_QWORD *)(v27 + 8);
            v42 = *(std::__shared_weak_count **)(v27 + 16);
            if (v42)
            {
              v43 = (unint64_t *)&v42->__shared_owners_;
              do
                v44 = __ldxr(v43);
              while (__stxr(v44 + 1, v43));
              do
                v45 = __ldaxr(v43);
              while (__stlxr(v45 - 1, v43));
              if (!v45)
              {
                ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
                std::__shared_weak_count::__release_weak(v42);
              }
            }
            goto LABEL_64;
          }
        }
        else if (v34)
        {
LABEL_64:
          v46 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v34 + 80))(v34);
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          {
            size = __p.__r_.__value_.__l.__size_;
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          *(_QWORD *)&v67 = p_p;
          *((_QWORD *)&v67 + 1) = size;
          *(_QWORD *)&v68 = " but the other image contains an incompatible buffer type ";
          *((_QWORD *)&v68 + 1) = 58;
          *(_QWORD *)&v69 = v46;
          *((_QWORD *)&v69 + 1) = v47;
          sub_20AECFDF8((uint64_t)&v67, (uint64_t)v70, 0, 0, &__dst);
          LOBYTE(v39) = *((_BYTE *)&__p.__r_.__value_.__s + 23);
LABEL_74:
          if ((v39 & 0x80) != 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          std::logic_error::logic_error(exception, &__dst);
          exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
          __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
        }
        v39 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v40 = __p.__r_.__value_.__l.__size_;
        v41 = v40 + 46;
        if (v40 + 46 >= 0x7FFFFFFFFFFFFFF8)
          sub_20AEC0138();
        if (v41 > 0x16)
        {
          v52 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v41 | 7) != 0x17)
            v52 = v41 | 7;
          v53 = v52 + 1;
          p_dst = (std::string *)operator new(v52 + 1);
          __dst.__r_.__value_.__l.__size_ = v40 + 46;
          __dst.__r_.__value_.__r.__words[2] = v53 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          if (!v40)
            goto LABEL_73;
        }
        else
        {
          memset(&__dst, 0, sizeof(__dst));
          p_dst = &__dst;
          *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v40 + 46;
        }
        if (v39 >= 0)
          v51 = &__p;
        else
          v51 = (std::string *)__p.__r_.__value_.__r.__words[0];
        memmove(p_dst, v51, v40);
LABEL_73:
        strcpy((char *)p_dst + v40, " but the other image does not contain a buffer");
        goto LABEL_74;
      }
LABEL_96:
      operator delete(v65[0]);
      goto LABEL_97;
    }
LABEL_106:
    operator delete((void *)v67);
    if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      goto LABEL_97;
    goto LABEL_96;
  }
  v17 = (__int128 *)(a2 + 24);
  if (v13)
  {
    v18 = (unint64_t *)&v13->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    v20 = v17[1];
    v67 = *v17;
    v68 = v20;
    v69 = v17[2];
    do
      v21 = __ldxr(v18);
    while (__stxr(v21 + 1, v18));
    do
      v22 = __ldaxr(v18);
    while (__stlxr(v22 - 1, v18));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
    do
      v23 = __ldaxr(v18);
    while (__stlxr(v23 - 1, v18));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  else
  {
    v25 = *(_OWORD *)(a2 + 40);
    v67 = *v17;
    v68 = v25;
    v69 = *(_OWORD *)(a2 + 56);
  }
  *(_QWORD *)a1 = &off_24C3F7228;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v13;
  v26 = v68;
  *(_OWORD *)(a1 + 24) = v67;
  *(_OWORD *)(a1 + 40) = v26;
  result = *(double *)&v69;
  *(_OWORD *)(a1 + 56) = v69;
  *(_BYTE *)(a1 + 72) = v70[0];
  *(_BYTE *)(a1 + 80) = 1;
  return result;
}

void sub_20AF8C388(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void **__p,void **a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  std::__shared_weak_count *v50;
  void *v51;
  void **v53;
  void **v54;
  unint64_t *p_shared_owners;
  unint64_t v56;

  if (__p)
  {
    v53 = a23;
    v54 = __p;
    if (a23 != __p)
    {
      do
      {
        if (*((char *)v53 - 1) < 0)
          operator delete(*(v53 - 3));
        v53 -= 3;
      }
      while (v53 != __p);
      v54 = __p;
    }
    operator delete(v54);
  }
  if (a50 < 0)
    operator delete(a45);
  if (a44 < 0)
    operator delete(a39);
  if (a30 < 0)
    operator delete(a25);
  __cxa_guard_abort(&qword_25463AA60);
  __cxa_free_exception(v51);
  if (v50)
  {
    p_shared_owners = (unint64_t *)&v50->__shared_owners_;
    do
      v56 = __ldaxr(p_shared_owners);
    while (__stlxr(v56 - 1, p_shared_owners));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF8C4DC(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F7228;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF8C550(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F7228;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF8C5C4()
{
  return 7;
}

uint64_t sub_20AF8C5CC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF8C5D4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF8C5EC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

std::string *sub_20AF8C668()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254632498);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254632498))
    return &stru_254632480;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Two16f]", __p);
  sub_20B531884((uint64_t)__p, &stru_254632480);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254632480, &dword_20AEBB000);
  __cxa_guard_release(&qword_254632498);
  return &stru_254632480;
}

void sub_20AF8C720(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254632498);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254632498);
  _Unwind_Resume(a1);
}

void sub_20AF8C760()
{
  unsigned __int8 v0;
  std::string *v1;
  __int128 *v2;
  int64x2_t v3;
  int8x16_t v4;
  void *v5[3];
  void *v6[2];
  char v7;
  void *v8[2];
  char v9;
  void *__p;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25463AA68);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463AA68))
  {
    sub_20AEC0D64(v6, "ConstSharedImage");
    v1 = sub_20AF8C668();
    sub_20AF8C950((uint64_t)v8, (uint64_t)v1);
    v2 = sub_20AF85EB4();
    sub_20AF8C950((uint64_t)&__p, (uint64_t)v2);
    sub_20AEC7620(v5, (uint64_t)v8, 2uLL);
    sub_20B53170C((char *)v6, (uint64_t *)v5, (std::string *)&qword_25463AC40, v3, v4);
    sub_20AEC2E90(v5);
    if (v11 < 0)
    {
      operator delete(__p);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v7 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463AC40, &dword_20AEBB000);
          __cxa_guard_release(&qword_25463AA68);
          return;
        }
LABEL_10:
        operator delete(v6[0]);
        goto LABEL_7;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8[0]);
    if ((v7 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
}

void sub_20AF8C89C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_25463AA68);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_25463AA68);
  _Unwind_Resume(a1);
}

void sub_20AF8C950(uint64_t a1, uint64_t a2)
{
  std::string __p;

  if (*(char *)(a2 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20AF8C9EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF8CA08(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F7320;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF8CA7C()
{
  return 7;
}

uint64_t sub_20AF8CA84(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF8CA8C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF8CAA4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF8CB20(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AF8CE24((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (2 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 2;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20AF8CDD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF8CE24(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  sub_20AF8C760();
  v3 = sub_20AF87004();
  v5 = *(_DWORD *)(a2 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)&qword_25463AC40, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_20AF8CE90(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F7510;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

double sub_20AF8CF04(uint64_t a1, uint64_t a2)
{
  uint64_t (***v4)();
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (***v14)();
  unint64_t *p_shared_owners;
  unint64_t v16;
  __int128 *v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  double result;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  std::logic_error *exception;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  size_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  std::string::size_type size;
  std::string *p_p;
  std::string *p_dst;
  std::string *v51;
  uint64_t v52;
  uint64_t v53;
  std::string *v54;
  __int128 v55;
  int64x2_t v56;
  int8x16_t v57;
  void **v58;
  void **v59;
  void *v60;
  std::string __dst;
  std::string __p;
  void *v63;
  void **v64;
  void *v65[4];
  std::string __s;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _QWORD v70[2];
  _QWORD v71[2];

  v71[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t (****)())(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  __s.__r_.__value_.__r.__words[0] = (std::string::size_type)v4;
  __s.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4 && *v4 == off_24C4152D0)
  {
    *(_QWORD *)&v67 = v4;
    *((_QWORD *)&v67 + 1) = v5;
    *(_OWORD *)&__s.__r_.__value_.__l.__data_ = 0uLL;
  }
  else
  {
    v67 = 0uLL;
    if (__s.__r_.__value_.__l.__size_)
    {
      v8 = (unint64_t *)(__s.__r_.__value_.__l.__size_ + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        (*(void (**)(std::string::size_type))(*(_QWORD *)__s.__r_.__value_.__l.__size_ + 16))(__s.__r_.__value_.__l.__size_);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)__s.__r_.__value_.__l.__size_);
        v10 = v67;
        goto LABEL_16;
      }
    }
  }
  v10 = v67;
  if (!*((_QWORD *)&v67 + 1))
    goto LABEL_16;
  v11 = (unint64_t *)(*((_QWORD *)&v67 + 1) + 8);
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (v12)
  {
LABEL_16:
    if (v10)
      goto LABEL_17;
LABEL_35:
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 80) = 0;
    return result;
  }
  (*(void (**)(_QWORD))(**((_QWORD **)&v67 + 1) + 16))(*((_QWORD *)&v67 + 1));
  std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v67 + 1));
  if (!(_QWORD)v67)
    goto LABEL_35;
LABEL_17:
  v14 = *(uint64_t (****)())(a2 + 8);
  v13 = *(std::__shared_weak_count **)(a2 + 16);
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  if (!v14 || *v14 != off_24C4152D0)
  {
    v27 = a2;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v29 = atomic_load((unsigned __int8 *)&qword_25463AA70);
    if ((v29 & 1) != 0 || !__cxa_guard_acquire(&qword_25463AA70))
      goto LABEL_39;
    HIBYTE(v65[2]) = 16;
    strcpy((char *)v65, "ConstSharedImage");
    v54 = sub_20AF8D8EC();
    if (SHIBYTE(v54->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&__s, v54->__r_.__value_.__l.__data_, v54->__r_.__value_.__l.__size_);
    }
    else
    {
      v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
      __s.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v55;
    }
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v67);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AF85A54();
    if (byte_25463AB08[23] < 0)
      sub_20AEC60F4(&__s, *(void **)byte_25463AB08, *(unint64_t *)&byte_25463AB08[8]);
    else
      __s = *(std::string *)byte_25463AB08;
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v68 + 8);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AEC7620(&v63, (uint64_t)&v67, 2uLL);
    sub_20B53170C((char *)v65, (uint64_t *)&v63, (std::string *)&qword_25463AC58, v56, v57);
    v58 = (void **)v63;
    if (v63)
    {
      v59 = v64;
      v60 = v63;
      if (v64 != v63)
      {
        do
        {
          if (*((char *)v59 - 1) < 0)
            operator delete(*(v59 - 3));
          v59 -= 3;
        }
        while (v59 != v58);
        v60 = v63;
      }
      v64 = v58;
      operator delete(v60);
      if (SHIBYTE(v69) < 0)
      {
LABEL_94:
        operator delete(*((void **)&v68 + 1));
        if ((SBYTE7(v68) & 0x80000000) == 0)
          goto LABEL_95;
        goto LABEL_106;
      }
    }
    else if (SHIBYTE(v69) < 0)
    {
      goto LABEL_94;
    }
    if ((SBYTE7(v68) & 0x80000000) == 0)
    {
LABEL_95:
      if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      {
LABEL_97:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463AC58, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463AA70);
LABEL_39:
        sub_20AF8D9E4();
        *(_QWORD *)&v67 = "Attempting to create an ";
        *((_QWORD *)&v67 + 1) = 24;
        v30 = byte_25463AC6F;
        if (byte_25463AC6F >= 0)
        {
          v31 = &qword_25463AC58;
        }
        else
        {
          v30 = unk_25463AC60;
          v31 = (uint64_t *)qword_25463AC58;
        }
        *(_QWORD *)&v68 = v31;
        *((_QWORD *)&v68 + 1) = v30;
        *(_QWORD *)&v69 = " from an ";
        *((_QWORD *)&v69 + 1) = 9;
        v32 = byte_25463AC87;
        v33 = &qword_25463AC70;
        if (byte_25463AC87 < 0)
        {
          v32 = qword_25463AC78;
          v33 = (uint64_t *)qword_25463AC70;
        }
        v70[0] = v33;
        v70[1] = v32;
        sub_20AECFDF8((uint64_t)&v67, (uint64_t)v71, 0, 0, &__p);
        v34 = *(_QWORD *)(a2 + 8);
        v35 = *(std::__shared_weak_count **)(v27 + 16);
        if (v35)
        {
          v36 = (unint64_t *)&v35->__shared_owners_;
          do
            v37 = __ldxr(v36);
          while (__stxr(v37 + 1, v36));
          do
            v38 = __ldaxr(v36);
          while (__stlxr(v38 - 1, v36));
          if (!v38)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
          if (v34)
          {
            v34 = *(_QWORD *)(v27 + 8);
            v42 = *(std::__shared_weak_count **)(v27 + 16);
            if (v42)
            {
              v43 = (unint64_t *)&v42->__shared_owners_;
              do
                v44 = __ldxr(v43);
              while (__stxr(v44 + 1, v43));
              do
                v45 = __ldaxr(v43);
              while (__stlxr(v45 - 1, v43));
              if (!v45)
              {
                ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
                std::__shared_weak_count::__release_weak(v42);
              }
            }
            goto LABEL_64;
          }
        }
        else if (v34)
        {
LABEL_64:
          v46 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v34 + 80))(v34);
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          {
            size = __p.__r_.__value_.__l.__size_;
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          *(_QWORD *)&v67 = p_p;
          *((_QWORD *)&v67 + 1) = size;
          *(_QWORD *)&v68 = " but the other image contains an incompatible buffer type ";
          *((_QWORD *)&v68 + 1) = 58;
          *(_QWORD *)&v69 = v46;
          *((_QWORD *)&v69 + 1) = v47;
          sub_20AECFDF8((uint64_t)&v67, (uint64_t)v70, 0, 0, &__dst);
          LOBYTE(v39) = *((_BYTE *)&__p.__r_.__value_.__s + 23);
LABEL_74:
          if ((v39 & 0x80) != 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          std::logic_error::logic_error(exception, &__dst);
          exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
          __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
        }
        v39 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v40 = __p.__r_.__value_.__l.__size_;
        v41 = v40 + 46;
        if (v40 + 46 >= 0x7FFFFFFFFFFFFFF8)
          sub_20AEC0138();
        if (v41 > 0x16)
        {
          v52 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v41 | 7) != 0x17)
            v52 = v41 | 7;
          v53 = v52 + 1;
          p_dst = (std::string *)operator new(v52 + 1);
          __dst.__r_.__value_.__l.__size_ = v40 + 46;
          __dst.__r_.__value_.__r.__words[2] = v53 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          if (!v40)
            goto LABEL_73;
        }
        else
        {
          memset(&__dst, 0, sizeof(__dst));
          p_dst = &__dst;
          *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v40 + 46;
        }
        if (v39 >= 0)
          v51 = &__p;
        else
          v51 = (std::string *)__p.__r_.__value_.__r.__words[0];
        memmove(p_dst, v51, v40);
LABEL_73:
        strcpy((char *)p_dst + v40, " but the other image does not contain a buffer");
        goto LABEL_74;
      }
LABEL_96:
      operator delete(v65[0]);
      goto LABEL_97;
    }
LABEL_106:
    operator delete((void *)v67);
    if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      goto LABEL_97;
    goto LABEL_96;
  }
  v17 = (__int128 *)(a2 + 24);
  if (v13)
  {
    v18 = (unint64_t *)&v13->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    v20 = v17[1];
    v67 = *v17;
    v68 = v20;
    v69 = v17[2];
    do
      v21 = __ldxr(v18);
    while (__stxr(v21 + 1, v18));
    do
      v22 = __ldaxr(v18);
    while (__stlxr(v22 - 1, v18));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
    do
      v23 = __ldaxr(v18);
    while (__stlxr(v23 - 1, v18));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  else
  {
    v25 = *(_OWORD *)(a2 + 40);
    v67 = *v17;
    v68 = v25;
    v69 = *(_OWORD *)(a2 + 56);
  }
  *(_QWORD *)a1 = &off_24C3F7418;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v13;
  v26 = v68;
  *(_OWORD *)(a1 + 24) = v67;
  *(_OWORD *)(a1 + 40) = v26;
  result = *(double *)&v69;
  *(_OWORD *)(a1 + 56) = v69;
  *(_BYTE *)(a1 + 72) = v70[0];
  *(_BYTE *)(a1 + 80) = 1;
  return result;
}

void sub_20AF8D60C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void **__p,void **a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  std::__shared_weak_count *v50;
  void *v51;
  void **v53;
  void **v54;
  unint64_t *p_shared_owners;
  unint64_t v56;

  if (__p)
  {
    v53 = a23;
    v54 = __p;
    if (a23 != __p)
    {
      do
      {
        if (*((char *)v53 - 1) < 0)
          operator delete(*(v53 - 3));
        v53 -= 3;
      }
      while (v53 != __p);
      v54 = __p;
    }
    operator delete(v54);
  }
  if (a50 < 0)
    operator delete(a45);
  if (a44 < 0)
    operator delete(a39);
  if (a30 < 0)
    operator delete(a25);
  __cxa_guard_abort(&qword_25463AA70);
  __cxa_free_exception(v51);
  if (v50)
  {
    p_shared_owners = (unint64_t *)&v50->__shared_owners_;
    do
      v56 = __ldaxr(p_shared_owners);
    while (__stlxr(v56 - 1, p_shared_owners));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF8D760(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F7418;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF8D7D4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F7418;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF8D848()
{
  return 8;
}

uint64_t sub_20AF8D850(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF8D858@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF8D870(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

std::string *sub_20AF8D8EC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546324B8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546324B8))
    return &stru_2546324A0;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Two32f]", __p);
  sub_20B531884((uint64_t)__p, &stru_2546324A0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2546324A0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546324B8);
  return &stru_2546324A0;
}

void sub_20AF8D9A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2546324B8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2546324B8);
  _Unwind_Resume(a1);
}

void sub_20AF8D9E4()
{
  unsigned __int8 v0;
  std::string *v1;
  __int128 *v2;
  int64x2_t v3;
  int8x16_t v4;
  void *v5[3];
  void *v6[2];
  char v7;
  void *v8[2];
  char v9;
  void *__p;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25463AA78);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463AA78))
  {
    sub_20AEC0D64(v6, "ConstSharedImage");
    v1 = sub_20AF8D8EC();
    sub_20AF8DBD4((uint64_t)v8, (uint64_t)v1);
    v2 = sub_20AF85EB4();
    sub_20AF8DBD4((uint64_t)&__p, (uint64_t)v2);
    sub_20AEC7620(v5, (uint64_t)v8, 2uLL);
    sub_20B53170C((char *)v6, (uint64_t *)v5, (std::string *)&qword_25463AC70, v3, v4);
    sub_20AEC2E90(v5);
    if (v11 < 0)
    {
      operator delete(__p);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v7 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463AC70, &dword_20AEBB000);
          __cxa_guard_release(&qword_25463AA78);
          return;
        }
LABEL_10:
        operator delete(v6[0]);
        goto LABEL_7;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8[0]);
    if ((v7 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
}

void sub_20AF8DB20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_25463AA78);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_25463AA78);
  _Unwind_Resume(a1);
}

void sub_20AF8DBD4(uint64_t a1, uint64_t a2)
{
  std::string __p;

  if (*(char *)(a2 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20AF8DC70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF8DC8C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F7510;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF8DD00()
{
  return 8;
}

uint64_t sub_20AF8DD08(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF8DD10@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF8DD28(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF8DDA4(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 8)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AF8E0A8((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a2 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (2 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 2;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20AF8E05C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF8E0A8(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  sub_20AF8D9E4();
  v3 = sub_20AF87004();
  v5 = *(_DWORD *)(a2 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)&qword_25463AC70, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_20AF8E114(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F7700;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

double sub_20AF8E188(uint64_t a1, uint64_t a2)
{
  uint64_t (***v4)();
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (***v14)();
  unint64_t *p_shared_owners;
  unint64_t v16;
  __int128 *v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  double result;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  std::logic_error *exception;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  size_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  std::string::size_type size;
  std::string *p_p;
  std::string *p_dst;
  std::string *v51;
  uint64_t v52;
  uint64_t v53;
  std::string *v54;
  __int128 v55;
  int64x2_t v56;
  int8x16_t v57;
  void **v58;
  void **v59;
  void *v60;
  std::string __dst;
  std::string __p;
  void *v63;
  void **v64;
  void *v65[4];
  std::string __s;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _QWORD v70[2];
  _QWORD v71[2];

  v71[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t (****)())(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  __s.__r_.__value_.__r.__words[0] = (std::string::size_type)v4;
  __s.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4 && *v4 == off_24C415360)
  {
    *(_QWORD *)&v67 = v4;
    *((_QWORD *)&v67 + 1) = v5;
    *(_OWORD *)&__s.__r_.__value_.__l.__data_ = 0uLL;
  }
  else
  {
    v67 = 0uLL;
    if (__s.__r_.__value_.__l.__size_)
    {
      v8 = (unint64_t *)(__s.__r_.__value_.__l.__size_ + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        (*(void (**)(std::string::size_type))(*(_QWORD *)__s.__r_.__value_.__l.__size_ + 16))(__s.__r_.__value_.__l.__size_);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)__s.__r_.__value_.__l.__size_);
        v10 = v67;
        goto LABEL_16;
      }
    }
  }
  v10 = v67;
  if (!*((_QWORD *)&v67 + 1))
    goto LABEL_16;
  v11 = (unint64_t *)(*((_QWORD *)&v67 + 1) + 8);
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (v12)
  {
LABEL_16:
    if (v10)
      goto LABEL_17;
LABEL_35:
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 80) = 0;
    return result;
  }
  (*(void (**)(_QWORD))(**((_QWORD **)&v67 + 1) + 16))(*((_QWORD *)&v67 + 1));
  std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v67 + 1));
  if (!(_QWORD)v67)
    goto LABEL_35;
LABEL_17:
  v14 = *(uint64_t (****)())(a2 + 8);
  v13 = *(std::__shared_weak_count **)(a2 + 16);
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  if (!v14 || *v14 != off_24C415360)
  {
    v27 = a2;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v29 = atomic_load((unsigned __int8 *)&qword_25463AA80);
    if ((v29 & 1) != 0 || !__cxa_guard_acquire(&qword_25463AA80))
      goto LABEL_39;
    HIBYTE(v65[2]) = 16;
    strcpy((char *)v65, "ConstSharedImage");
    v54 = sub_20AF8EB6C();
    if (SHIBYTE(v54->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&__s, v54->__r_.__value_.__l.__data_, v54->__r_.__value_.__l.__size_);
    }
    else
    {
      v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
      __s.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v55;
    }
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v67);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AF85A54();
    if (byte_25463AB08[23] < 0)
      sub_20AEC60F4(&__s, *(void **)byte_25463AB08, *(unint64_t *)&byte_25463AB08[8]);
    else
      __s = *(std::string *)byte_25463AB08;
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v68 + 8);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AEC7620(&v63, (uint64_t)&v67, 2uLL);
    sub_20B53170C((char *)v65, (uint64_t *)&v63, (std::string *)&qword_25463AC88, v56, v57);
    v58 = (void **)v63;
    if (v63)
    {
      v59 = v64;
      v60 = v63;
      if (v64 != v63)
      {
        do
        {
          if (*((char *)v59 - 1) < 0)
            operator delete(*(v59 - 3));
          v59 -= 3;
        }
        while (v59 != v58);
        v60 = v63;
      }
      v64 = v58;
      operator delete(v60);
      if (SHIBYTE(v69) < 0)
      {
LABEL_94:
        operator delete(*((void **)&v68 + 1));
        if ((SBYTE7(v68) & 0x80000000) == 0)
          goto LABEL_95;
        goto LABEL_106;
      }
    }
    else if (SHIBYTE(v69) < 0)
    {
      goto LABEL_94;
    }
    if ((SBYTE7(v68) & 0x80000000) == 0)
    {
LABEL_95:
      if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      {
LABEL_97:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463AC88, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463AA80);
LABEL_39:
        sub_20AF8EC64();
        *(_QWORD *)&v67 = "Attempting to create an ";
        *((_QWORD *)&v67 + 1) = 24;
        v30 = byte_25463AC9F;
        if (byte_25463AC9F >= 0)
        {
          v31 = &qword_25463AC88;
        }
        else
        {
          v30 = unk_25463AC90;
          v31 = (uint64_t *)qword_25463AC88;
        }
        *(_QWORD *)&v68 = v31;
        *((_QWORD *)&v68 + 1) = v30;
        *(_QWORD *)&v69 = " from an ";
        *((_QWORD *)&v69 + 1) = 9;
        v32 = byte_25463ACB7;
        v33 = &qword_25463ACA0;
        if (byte_25463ACB7 < 0)
        {
          v32 = qword_25463ACA8;
          v33 = (uint64_t *)qword_25463ACA0;
        }
        v70[0] = v33;
        v70[1] = v32;
        sub_20AECFDF8((uint64_t)&v67, (uint64_t)v71, 0, 0, &__p);
        v34 = *(_QWORD *)(a2 + 8);
        v35 = *(std::__shared_weak_count **)(v27 + 16);
        if (v35)
        {
          v36 = (unint64_t *)&v35->__shared_owners_;
          do
            v37 = __ldxr(v36);
          while (__stxr(v37 + 1, v36));
          do
            v38 = __ldaxr(v36);
          while (__stlxr(v38 - 1, v36));
          if (!v38)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
          if (v34)
          {
            v34 = *(_QWORD *)(v27 + 8);
            v42 = *(std::__shared_weak_count **)(v27 + 16);
            if (v42)
            {
              v43 = (unint64_t *)&v42->__shared_owners_;
              do
                v44 = __ldxr(v43);
              while (__stxr(v44 + 1, v43));
              do
                v45 = __ldaxr(v43);
              while (__stlxr(v45 - 1, v43));
              if (!v45)
              {
                ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
                std::__shared_weak_count::__release_weak(v42);
              }
            }
            goto LABEL_64;
          }
        }
        else if (v34)
        {
LABEL_64:
          v46 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v34 + 80))(v34);
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          {
            size = __p.__r_.__value_.__l.__size_;
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          *(_QWORD *)&v67 = p_p;
          *((_QWORD *)&v67 + 1) = size;
          *(_QWORD *)&v68 = " but the other image contains an incompatible buffer type ";
          *((_QWORD *)&v68 + 1) = 58;
          *(_QWORD *)&v69 = v46;
          *((_QWORD *)&v69 + 1) = v47;
          sub_20AECFDF8((uint64_t)&v67, (uint64_t)v70, 0, 0, &__dst);
          LOBYTE(v39) = *((_BYTE *)&__p.__r_.__value_.__s + 23);
LABEL_74:
          if ((v39 & 0x80) != 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          std::logic_error::logic_error(exception, &__dst);
          exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
          __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
        }
        v39 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v40 = __p.__r_.__value_.__l.__size_;
        v41 = v40 + 46;
        if (v40 + 46 >= 0x7FFFFFFFFFFFFFF8)
          sub_20AEC0138();
        if (v41 > 0x16)
        {
          v52 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v41 | 7) != 0x17)
            v52 = v41 | 7;
          v53 = v52 + 1;
          p_dst = (std::string *)operator new(v52 + 1);
          __dst.__r_.__value_.__l.__size_ = v40 + 46;
          __dst.__r_.__value_.__r.__words[2] = v53 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          if (!v40)
            goto LABEL_73;
        }
        else
        {
          memset(&__dst, 0, sizeof(__dst));
          p_dst = &__dst;
          *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v40 + 46;
        }
        if (v39 >= 0)
          v51 = &__p;
        else
          v51 = (std::string *)__p.__r_.__value_.__r.__words[0];
        memmove(p_dst, v51, v40);
LABEL_73:
        strcpy((char *)p_dst + v40, " but the other image does not contain a buffer");
        goto LABEL_74;
      }
LABEL_96:
      operator delete(v65[0]);
      goto LABEL_97;
    }
LABEL_106:
    operator delete((void *)v67);
    if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      goto LABEL_97;
    goto LABEL_96;
  }
  v17 = (__int128 *)(a2 + 24);
  if (v13)
  {
    v18 = (unint64_t *)&v13->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    v20 = v17[1];
    v67 = *v17;
    v68 = v20;
    v69 = v17[2];
    do
      v21 = __ldxr(v18);
    while (__stxr(v21 + 1, v18));
    do
      v22 = __ldaxr(v18);
    while (__stlxr(v22 - 1, v18));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
    do
      v23 = __ldaxr(v18);
    while (__stlxr(v23 - 1, v18));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  else
  {
    v25 = *(_OWORD *)(a2 + 40);
    v67 = *v17;
    v68 = v25;
    v69 = *(_OWORD *)(a2 + 56);
  }
  *(_QWORD *)a1 = &off_24C3F7608;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v13;
  v26 = v68;
  *(_OWORD *)(a1 + 24) = v67;
  *(_OWORD *)(a1 + 40) = v26;
  result = *(double *)&v69;
  *(_OWORD *)(a1 + 56) = v69;
  *(_BYTE *)(a1 + 72) = v70[0];
  *(_BYTE *)(a1 + 80) = 1;
  return result;
}

void sub_20AF8E890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void **__p,void **a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  std::__shared_weak_count *v50;
  void *v51;
  void **v53;
  void **v54;
  unint64_t *p_shared_owners;
  unint64_t v56;

  if (__p)
  {
    v53 = a23;
    v54 = __p;
    if (a23 != __p)
    {
      do
      {
        if (*((char *)v53 - 1) < 0)
          operator delete(*(v53 - 3));
        v53 -= 3;
      }
      while (v53 != __p);
      v54 = __p;
    }
    operator delete(v54);
  }
  if (a50 < 0)
    operator delete(a45);
  if (a44 < 0)
    operator delete(a39);
  if (a30 < 0)
    operator delete(a25);
  __cxa_guard_abort(&qword_25463AA80);
  __cxa_free_exception(v51);
  if (v50)
  {
    p_shared_owners = (unint64_t *)&v50->__shared_owners_;
    do
      v56 = __ldaxr(p_shared_owners);
    while (__stlxr(v56 - 1, p_shared_owners));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF8E9E4(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F7608;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF8EA58(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F7608;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF8EACC()
{
  return 21;
}

uint64_t sub_20AF8EAD4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF8EADC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF8EAF0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

std::string *sub_20AF8EB6C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546324D8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546324D8))
    return &stru_2546324C0;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgb8u]", __p);
  sub_20B531884((uint64_t)__p, &stru_2546324C0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2546324C0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546324D8);
  return &stru_2546324C0;
}

void sub_20AF8EC24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2546324D8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2546324D8);
  _Unwind_Resume(a1);
}

void sub_20AF8EC64()
{
  unsigned __int8 v0;
  std::string *v1;
  __int128 *v2;
  int64x2_t v3;
  int8x16_t v4;
  void *v5[3];
  void *v6[2];
  char v7;
  void *v8[2];
  char v9;
  void *__p;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25463AA88);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463AA88))
  {
    sub_20AEC0D64(v6, "ConstSharedImage");
    v1 = sub_20AF8EB6C();
    sub_20AF8EE54((uint64_t)v8, (uint64_t)v1);
    v2 = sub_20AF85EB4();
    sub_20AF8EE54((uint64_t)&__p, (uint64_t)v2);
    sub_20AEC7620(v5, (uint64_t)v8, 2uLL);
    sub_20B53170C((char *)v6, (uint64_t *)v5, (std::string *)&qword_25463ACA0, v3, v4);
    sub_20AEC2E90(v5);
    if (v11 < 0)
    {
      operator delete(__p);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v7 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463ACA0, &dword_20AEBB000);
          __cxa_guard_release(&qword_25463AA88);
          return;
        }
LABEL_10:
        operator delete(v6[0]);
        goto LABEL_7;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8[0]);
    if ((v7 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
}

void sub_20AF8EDA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_25463AA88);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_25463AA88);
  _Unwind_Resume(a1);
}

void sub_20AF8EE54(uint64_t a1, uint64_t a2)
{
  std::string __p;

  if (*(char *)(a2 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20AF8EEF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF8EF0C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F7700;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF8EF80()
{
  return 21;
}

uint64_t sub_20AF8EF88(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF8EF90@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF8EFA4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF8F020(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 21)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AF8F320((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24) == 0;
  if (*(_DWORD *)(a2 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a2 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = (unint64_t)*(unsigned int *)(a2 + 32) << 32;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a2 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v15;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v22 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a1 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v18;
  *(_DWORD *)(a1 + 32) = v19;
  *(_QWORD *)(a1 + 36) = v20;
  *(_DWORD *)(a1 + 44) = v21;
  *(_QWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 56) = v15;
  *(_WORD *)(a1 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20AF8F2D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF8F320(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  sub_20AF8EC64();
  v3 = sub_20AF87004();
  v5 = *(_DWORD *)(a2 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)&qword_25463ACA0, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_20AF8F38C(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F78F0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

double sub_20AF8F400(uint64_t a1, uint64_t a2)
{
  uint64_t (***v4)();
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (***v14)();
  unint64_t *p_shared_owners;
  unint64_t v16;
  __int128 *v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  double result;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  std::logic_error *exception;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  size_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  std::string::size_type size;
  std::string *p_p;
  std::string *p_dst;
  std::string *v51;
  uint64_t v52;
  uint64_t v53;
  std::string *v54;
  __int128 v55;
  int64x2_t v56;
  int8x16_t v57;
  void **v58;
  void **v59;
  void *v60;
  std::string __dst;
  std::string __p;
  void *v63;
  void **v64;
  void *v65[4];
  std::string __s;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _QWORD v70[2];
  _QWORD v71[2];

  v71[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t (****)())(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  __s.__r_.__value_.__r.__words[0] = (std::string::size_type)v4;
  __s.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4 && *v4 == off_24C4153F0)
  {
    *(_QWORD *)&v67 = v4;
    *((_QWORD *)&v67 + 1) = v5;
    *(_OWORD *)&__s.__r_.__value_.__l.__data_ = 0uLL;
  }
  else
  {
    v67 = 0uLL;
    if (__s.__r_.__value_.__l.__size_)
    {
      v8 = (unint64_t *)(__s.__r_.__value_.__l.__size_ + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        (*(void (**)(std::string::size_type))(*(_QWORD *)__s.__r_.__value_.__l.__size_ + 16))(__s.__r_.__value_.__l.__size_);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)__s.__r_.__value_.__l.__size_);
        v10 = v67;
        goto LABEL_16;
      }
    }
  }
  v10 = v67;
  if (!*((_QWORD *)&v67 + 1))
    goto LABEL_16;
  v11 = (unint64_t *)(*((_QWORD *)&v67 + 1) + 8);
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (v12)
  {
LABEL_16:
    if (v10)
      goto LABEL_17;
LABEL_35:
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 80) = 0;
    return result;
  }
  (*(void (**)(_QWORD))(**((_QWORD **)&v67 + 1) + 16))(*((_QWORD *)&v67 + 1));
  std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v67 + 1));
  if (!(_QWORD)v67)
    goto LABEL_35;
LABEL_17:
  v14 = *(uint64_t (****)())(a2 + 8);
  v13 = *(std::__shared_weak_count **)(a2 + 16);
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  if (!v14 || *v14 != off_24C4153F0)
  {
    v27 = a2;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v29 = atomic_load((unsigned __int8 *)&qword_25463AA90);
    if ((v29 & 1) != 0 || !__cxa_guard_acquire(&qword_25463AA90))
      goto LABEL_39;
    HIBYTE(v65[2]) = 16;
    strcpy((char *)v65, "ConstSharedImage");
    v54 = sub_20AF8FDE8();
    if (SHIBYTE(v54->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&__s, v54->__r_.__value_.__l.__data_, v54->__r_.__value_.__l.__size_);
    }
    else
    {
      v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
      __s.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v55;
    }
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v67);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AF85A54();
    if (byte_25463AB08[23] < 0)
      sub_20AEC60F4(&__s, *(void **)byte_25463AB08, *(unint64_t *)&byte_25463AB08[8]);
    else
      __s = *(std::string *)byte_25463AB08;
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v68 + 8);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AEC7620(&v63, (uint64_t)&v67, 2uLL);
    sub_20B53170C((char *)v65, (uint64_t *)&v63, (std::string *)&qword_25463ACB8, v56, v57);
    v58 = (void **)v63;
    if (v63)
    {
      v59 = v64;
      v60 = v63;
      if (v64 != v63)
      {
        do
        {
          if (*((char *)v59 - 1) < 0)
            operator delete(*(v59 - 3));
          v59 -= 3;
        }
        while (v59 != v58);
        v60 = v63;
      }
      v64 = v58;
      operator delete(v60);
      if (SHIBYTE(v69) < 0)
      {
LABEL_94:
        operator delete(*((void **)&v68 + 1));
        if ((SBYTE7(v68) & 0x80000000) == 0)
          goto LABEL_95;
        goto LABEL_106;
      }
    }
    else if (SHIBYTE(v69) < 0)
    {
      goto LABEL_94;
    }
    if ((SBYTE7(v68) & 0x80000000) == 0)
    {
LABEL_95:
      if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      {
LABEL_97:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463ACB8, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463AA90);
LABEL_39:
        sub_20AF8FEE0();
        *(_QWORD *)&v67 = "Attempting to create an ";
        *((_QWORD *)&v67 + 1) = 24;
        v30 = byte_25463ACCF;
        if (byte_25463ACCF >= 0)
        {
          v31 = &qword_25463ACB8;
        }
        else
        {
          v30 = unk_25463ACC0;
          v31 = (uint64_t *)qword_25463ACB8;
        }
        *(_QWORD *)&v68 = v31;
        *((_QWORD *)&v68 + 1) = v30;
        *(_QWORD *)&v69 = " from an ";
        *((_QWORD *)&v69 + 1) = 9;
        v32 = byte_25463ACE7;
        v33 = &qword_25463ACD0;
        if (byte_25463ACE7 < 0)
        {
          v32 = qword_25463ACD8;
          v33 = (uint64_t *)qword_25463ACD0;
        }
        v70[0] = v33;
        v70[1] = v32;
        sub_20AECFDF8((uint64_t)&v67, (uint64_t)v71, 0, 0, &__p);
        v34 = *(_QWORD *)(a2 + 8);
        v35 = *(std::__shared_weak_count **)(v27 + 16);
        if (v35)
        {
          v36 = (unint64_t *)&v35->__shared_owners_;
          do
            v37 = __ldxr(v36);
          while (__stxr(v37 + 1, v36));
          do
            v38 = __ldaxr(v36);
          while (__stlxr(v38 - 1, v36));
          if (!v38)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
          if (v34)
          {
            v34 = *(_QWORD *)(v27 + 8);
            v42 = *(std::__shared_weak_count **)(v27 + 16);
            if (v42)
            {
              v43 = (unint64_t *)&v42->__shared_owners_;
              do
                v44 = __ldxr(v43);
              while (__stxr(v44 + 1, v43));
              do
                v45 = __ldaxr(v43);
              while (__stlxr(v45 - 1, v43));
              if (!v45)
              {
                ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
                std::__shared_weak_count::__release_weak(v42);
              }
            }
            goto LABEL_64;
          }
        }
        else if (v34)
        {
LABEL_64:
          v46 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v34 + 80))(v34);
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          {
            size = __p.__r_.__value_.__l.__size_;
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          *(_QWORD *)&v67 = p_p;
          *((_QWORD *)&v67 + 1) = size;
          *(_QWORD *)&v68 = " but the other image contains an incompatible buffer type ";
          *((_QWORD *)&v68 + 1) = 58;
          *(_QWORD *)&v69 = v46;
          *((_QWORD *)&v69 + 1) = v47;
          sub_20AECFDF8((uint64_t)&v67, (uint64_t)v70, 0, 0, &__dst);
          LOBYTE(v39) = *((_BYTE *)&__p.__r_.__value_.__s + 23);
LABEL_74:
          if ((v39 & 0x80) != 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          std::logic_error::logic_error(exception, &__dst);
          exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
          __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
        }
        v39 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v40 = __p.__r_.__value_.__l.__size_;
        v41 = v40 + 46;
        if (v40 + 46 >= 0x7FFFFFFFFFFFFFF8)
          sub_20AEC0138();
        if (v41 > 0x16)
        {
          v52 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v41 | 7) != 0x17)
            v52 = v41 | 7;
          v53 = v52 + 1;
          p_dst = (std::string *)operator new(v52 + 1);
          __dst.__r_.__value_.__l.__size_ = v40 + 46;
          __dst.__r_.__value_.__r.__words[2] = v53 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          if (!v40)
            goto LABEL_73;
        }
        else
        {
          memset(&__dst, 0, sizeof(__dst));
          p_dst = &__dst;
          *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v40 + 46;
        }
        if (v39 >= 0)
          v51 = &__p;
        else
          v51 = (std::string *)__p.__r_.__value_.__r.__words[0];
        memmove(p_dst, v51, v40);
LABEL_73:
        strcpy((char *)p_dst + v40, " but the other image does not contain a buffer");
        goto LABEL_74;
      }
LABEL_96:
      operator delete(v65[0]);
      goto LABEL_97;
    }
LABEL_106:
    operator delete((void *)v67);
    if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      goto LABEL_97;
    goto LABEL_96;
  }
  v17 = (__int128 *)(a2 + 24);
  if (v13)
  {
    v18 = (unint64_t *)&v13->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    v20 = v17[1];
    v67 = *v17;
    v68 = v20;
    v69 = v17[2];
    do
      v21 = __ldxr(v18);
    while (__stxr(v21 + 1, v18));
    do
      v22 = __ldaxr(v18);
    while (__stlxr(v22 - 1, v18));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
    do
      v23 = __ldaxr(v18);
    while (__stlxr(v23 - 1, v18));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  else
  {
    v25 = *(_OWORD *)(a2 + 40);
    v67 = *v17;
    v68 = v25;
    v69 = *(_OWORD *)(a2 + 56);
  }
  *(_QWORD *)a1 = &off_24C3F77F8;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v13;
  v26 = v68;
  *(_OWORD *)(a1 + 24) = v67;
  *(_OWORD *)(a1 + 40) = v26;
  result = *(double *)&v69;
  *(_OWORD *)(a1 + 56) = v69;
  *(_BYTE *)(a1 + 72) = v70[0];
  *(_BYTE *)(a1 + 80) = 1;
  return result;
}

void sub_20AF8FB08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void **__p,void **a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  std::__shared_weak_count *v50;
  void *v51;
  void **v53;
  void **v54;
  unint64_t *p_shared_owners;
  unint64_t v56;

  if (__p)
  {
    v53 = a23;
    v54 = __p;
    if (a23 != __p)
    {
      do
      {
        if (*((char *)v53 - 1) < 0)
          operator delete(*(v53 - 3));
        v53 -= 3;
      }
      while (v53 != __p);
      v54 = __p;
    }
    operator delete(v54);
  }
  if (a50 < 0)
    operator delete(a45);
  if (a44 < 0)
    operator delete(a39);
  if (a30 < 0)
    operator delete(a25);
  __cxa_guard_abort(&qword_25463AA90);
  __cxa_free_exception(v51);
  if (v50)
  {
    p_shared_owners = (unint64_t *)&v50->__shared_owners_;
    do
      v56 = __ldaxr(p_shared_owners);
    while (__stlxr(v56 - 1, p_shared_owners));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF8FC5C(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F77F8;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF8FCD0(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F77F8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF8FD44()
{
  return 22;
}

uint64_t sub_20AF8FD4C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF8FD54@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF8FD6C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

std::string *sub_20AF8FDE8()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2546324F8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2546324F8))
    return &stru_2546324E0;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgb16u]", __p);
  sub_20B531884((uint64_t)__p, &stru_2546324E0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2546324E0, &dword_20AEBB000);
  __cxa_guard_release(&qword_2546324F8);
  return &stru_2546324E0;
}

void sub_20AF8FEA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2546324F8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2546324F8);
  _Unwind_Resume(a1);
}

void sub_20AF8FEE0()
{
  unsigned __int8 v0;
  std::string *v1;
  __int128 *v2;
  int64x2_t v3;
  int8x16_t v4;
  void *v5[3];
  void *v6[2];
  char v7;
  void *v8[2];
  char v9;
  void *__p;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25463AA98);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463AA98))
  {
    sub_20AEC0D64(v6, "ConstSharedImage");
    v1 = sub_20AF8FDE8();
    sub_20AF900D0((uint64_t)v8, (uint64_t)v1);
    v2 = sub_20AF85EB4();
    sub_20AF900D0((uint64_t)&__p, (uint64_t)v2);
    sub_20AEC7620(v5, (uint64_t)v8, 2uLL);
    sub_20B53170C((char *)v6, (uint64_t *)v5, (std::string *)&qword_25463ACD0, v3, v4);
    sub_20AEC2E90(v5);
    if (v11 < 0)
    {
      operator delete(__p);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v7 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463ACD0, &dword_20AEBB000);
          __cxa_guard_release(&qword_25463AA98);
          return;
        }
LABEL_10:
        operator delete(v6[0]);
        goto LABEL_7;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8[0]);
    if ((v7 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
}

void sub_20AF9001C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_25463AA98);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_25463AA98);
  _Unwind_Resume(a1);
}

void sub_20AF900D0(uint64_t a1, uint64_t a2)
{
  std::string __p;

  if (*(char *)(a2 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20AF9016C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF90188(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F78F0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF901FC()
{
  return 22;
}

uint64_t sub_20AF90204(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF9020C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF90224(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF902A0(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 22)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AF905A4((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24) == 0;
  if (*(_DWORD *)(a2 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a2 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a2 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v14 | v12;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v22 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a1 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v18;
  *(_DWORD *)(a1 + 32) = v19;
  *(_QWORD *)(a1 + 36) = v20;
  *(_DWORD *)(a1 + 44) = v21;
  *(_QWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 56) = v15;
  *(_WORD *)(a1 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20AF90558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF905A4(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  sub_20AF8FEE0();
  v3 = sub_20AF87004();
  v5 = *(_DWORD *)(a2 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)&qword_25463ACD0, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_20AF90610(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F7AE0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

double sub_20AF90684(uint64_t a1, uint64_t a2)
{
  uint64_t (***v4)();
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (***v14)();
  unint64_t *p_shared_owners;
  unint64_t v16;
  __int128 *v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  double result;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  std::logic_error *exception;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  size_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  std::string::size_type size;
  std::string *p_p;
  std::string *p_dst;
  std::string *v51;
  uint64_t v52;
  uint64_t v53;
  std::string *v54;
  __int128 v55;
  int64x2_t v56;
  int8x16_t v57;
  void **v58;
  void **v59;
  void *v60;
  std::string __dst;
  std::string __p;
  void *v63;
  void **v64;
  void *v65[4];
  std::string __s;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _QWORD v70[2];
  _QWORD v71[2];

  v71[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t (****)())(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  __s.__r_.__value_.__r.__words[0] = (std::string::size_type)v4;
  __s.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4 && *v4 == off_24C415480)
  {
    *(_QWORD *)&v67 = v4;
    *((_QWORD *)&v67 + 1) = v5;
    *(_OWORD *)&__s.__r_.__value_.__l.__data_ = 0uLL;
  }
  else
  {
    v67 = 0uLL;
    if (__s.__r_.__value_.__l.__size_)
    {
      v8 = (unint64_t *)(__s.__r_.__value_.__l.__size_ + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        (*(void (**)(std::string::size_type))(*(_QWORD *)__s.__r_.__value_.__l.__size_ + 16))(__s.__r_.__value_.__l.__size_);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)__s.__r_.__value_.__l.__size_);
        v10 = v67;
        goto LABEL_16;
      }
    }
  }
  v10 = v67;
  if (!*((_QWORD *)&v67 + 1))
    goto LABEL_16;
  v11 = (unint64_t *)(*((_QWORD *)&v67 + 1) + 8);
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (v12)
  {
LABEL_16:
    if (v10)
      goto LABEL_17;
LABEL_35:
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 80) = 0;
    return result;
  }
  (*(void (**)(_QWORD))(**((_QWORD **)&v67 + 1) + 16))(*((_QWORD *)&v67 + 1));
  std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v67 + 1));
  if (!(_QWORD)v67)
    goto LABEL_35;
LABEL_17:
  v14 = *(uint64_t (****)())(a2 + 8);
  v13 = *(std::__shared_weak_count **)(a2 + 16);
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  if (!v14 || *v14 != off_24C415480)
  {
    v27 = a2;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v29 = atomic_load((unsigned __int8 *)&qword_25463AAA0);
    if ((v29 & 1) != 0 || !__cxa_guard_acquire(&qword_25463AAA0))
      goto LABEL_39;
    HIBYTE(v65[2]) = 16;
    strcpy((char *)v65, "ConstSharedImage");
    v54 = sub_20AF91068();
    if (SHIBYTE(v54->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&__s, v54->__r_.__value_.__l.__data_, v54->__r_.__value_.__l.__size_);
    }
    else
    {
      v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
      __s.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v55;
    }
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v67);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AF85A54();
    if (byte_25463AB08[23] < 0)
      sub_20AEC60F4(&__s, *(void **)byte_25463AB08, *(unint64_t *)&byte_25463AB08[8]);
    else
      __s = *(std::string *)byte_25463AB08;
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v68 + 8);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AEC7620(&v63, (uint64_t)&v67, 2uLL);
    sub_20B53170C((char *)v65, (uint64_t *)&v63, (std::string *)&qword_25463ACE8, v56, v57);
    v58 = (void **)v63;
    if (v63)
    {
      v59 = v64;
      v60 = v63;
      if (v64 != v63)
      {
        do
        {
          if (*((char *)v59 - 1) < 0)
            operator delete(*(v59 - 3));
          v59 -= 3;
        }
        while (v59 != v58);
        v60 = v63;
      }
      v64 = v58;
      operator delete(v60);
      if (SHIBYTE(v69) < 0)
      {
LABEL_94:
        operator delete(*((void **)&v68 + 1));
        if ((SBYTE7(v68) & 0x80000000) == 0)
          goto LABEL_95;
        goto LABEL_106;
      }
    }
    else if (SHIBYTE(v69) < 0)
    {
      goto LABEL_94;
    }
    if ((SBYTE7(v68) & 0x80000000) == 0)
    {
LABEL_95:
      if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      {
LABEL_97:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463ACE8, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463AAA0);
LABEL_39:
        sub_20AF91160();
        *(_QWORD *)&v67 = "Attempting to create an ";
        *((_QWORD *)&v67 + 1) = 24;
        v30 = byte_25463ACFF;
        if (byte_25463ACFF >= 0)
        {
          v31 = &qword_25463ACE8;
        }
        else
        {
          v30 = unk_25463ACF0;
          v31 = (uint64_t *)qword_25463ACE8;
        }
        *(_QWORD *)&v68 = v31;
        *((_QWORD *)&v68 + 1) = v30;
        *(_QWORD *)&v69 = " from an ";
        *((_QWORD *)&v69 + 1) = 9;
        v32 = byte_25463AD17;
        v33 = &qword_25463AD00;
        if (byte_25463AD17 < 0)
        {
          v32 = qword_25463AD08;
          v33 = (uint64_t *)qword_25463AD00;
        }
        v70[0] = v33;
        v70[1] = v32;
        sub_20AECFDF8((uint64_t)&v67, (uint64_t)v71, 0, 0, &__p);
        v34 = *(_QWORD *)(a2 + 8);
        v35 = *(std::__shared_weak_count **)(v27 + 16);
        if (v35)
        {
          v36 = (unint64_t *)&v35->__shared_owners_;
          do
            v37 = __ldxr(v36);
          while (__stxr(v37 + 1, v36));
          do
            v38 = __ldaxr(v36);
          while (__stlxr(v38 - 1, v36));
          if (!v38)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
          if (v34)
          {
            v34 = *(_QWORD *)(v27 + 8);
            v42 = *(std::__shared_weak_count **)(v27 + 16);
            if (v42)
            {
              v43 = (unint64_t *)&v42->__shared_owners_;
              do
                v44 = __ldxr(v43);
              while (__stxr(v44 + 1, v43));
              do
                v45 = __ldaxr(v43);
              while (__stlxr(v45 - 1, v43));
              if (!v45)
              {
                ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
                std::__shared_weak_count::__release_weak(v42);
              }
            }
            goto LABEL_64;
          }
        }
        else if (v34)
        {
LABEL_64:
          v46 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v34 + 80))(v34);
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          {
            size = __p.__r_.__value_.__l.__size_;
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          *(_QWORD *)&v67 = p_p;
          *((_QWORD *)&v67 + 1) = size;
          *(_QWORD *)&v68 = " but the other image contains an incompatible buffer type ";
          *((_QWORD *)&v68 + 1) = 58;
          *(_QWORD *)&v69 = v46;
          *((_QWORD *)&v69 + 1) = v47;
          sub_20AECFDF8((uint64_t)&v67, (uint64_t)v70, 0, 0, &__dst);
          LOBYTE(v39) = *((_BYTE *)&__p.__r_.__value_.__s + 23);
LABEL_74:
          if ((v39 & 0x80) != 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          std::logic_error::logic_error(exception, &__dst);
          exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
          __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
        }
        v39 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v40 = __p.__r_.__value_.__l.__size_;
        v41 = v40 + 46;
        if (v40 + 46 >= 0x7FFFFFFFFFFFFFF8)
          sub_20AEC0138();
        if (v41 > 0x16)
        {
          v52 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v41 | 7) != 0x17)
            v52 = v41 | 7;
          v53 = v52 + 1;
          p_dst = (std::string *)operator new(v52 + 1);
          __dst.__r_.__value_.__l.__size_ = v40 + 46;
          __dst.__r_.__value_.__r.__words[2] = v53 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          if (!v40)
            goto LABEL_73;
        }
        else
        {
          memset(&__dst, 0, sizeof(__dst));
          p_dst = &__dst;
          *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v40 + 46;
        }
        if (v39 >= 0)
          v51 = &__p;
        else
          v51 = (std::string *)__p.__r_.__value_.__r.__words[0];
        memmove(p_dst, v51, v40);
LABEL_73:
        strcpy((char *)p_dst + v40, " but the other image does not contain a buffer");
        goto LABEL_74;
      }
LABEL_96:
      operator delete(v65[0]);
      goto LABEL_97;
    }
LABEL_106:
    operator delete((void *)v67);
    if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      goto LABEL_97;
    goto LABEL_96;
  }
  v17 = (__int128 *)(a2 + 24);
  if (v13)
  {
    v18 = (unint64_t *)&v13->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    v20 = v17[1];
    v67 = *v17;
    v68 = v20;
    v69 = v17[2];
    do
      v21 = __ldxr(v18);
    while (__stxr(v21 + 1, v18));
    do
      v22 = __ldaxr(v18);
    while (__stlxr(v22 - 1, v18));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
    do
      v23 = __ldaxr(v18);
    while (__stlxr(v23 - 1, v18));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  else
  {
    v25 = *(_OWORD *)(a2 + 40);
    v67 = *v17;
    v68 = v25;
    v69 = *(_OWORD *)(a2 + 56);
  }
  *(_QWORD *)a1 = &off_24C3F79E8;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v13;
  v26 = v68;
  *(_OWORD *)(a1 + 24) = v67;
  *(_OWORD *)(a1 + 40) = v26;
  result = *(double *)&v69;
  *(_OWORD *)(a1 + 56) = v69;
  *(_BYTE *)(a1 + 72) = v70[0];
  *(_BYTE *)(a1 + 80) = 1;
  return result;
}

void sub_20AF90D8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void **__p,void **a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  std::__shared_weak_count *v50;
  void *v51;
  void **v53;
  void **v54;
  unint64_t *p_shared_owners;
  unint64_t v56;

  if (__p)
  {
    v53 = a23;
    v54 = __p;
    if (a23 != __p)
    {
      do
      {
        if (*((char *)v53 - 1) < 0)
          operator delete(*(v53 - 3));
        v53 -= 3;
      }
      while (v53 != __p);
      v54 = __p;
    }
    operator delete(v54);
  }
  if (a50 < 0)
    operator delete(a45);
  if (a44 < 0)
    operator delete(a39);
  if (a30 < 0)
    operator delete(a25);
  __cxa_guard_abort(&qword_25463AAA0);
  __cxa_free_exception(v51);
  if (v50)
  {
    p_shared_owners = (unint64_t *)&v50->__shared_owners_;
    do
      v56 = __ldaxr(p_shared_owners);
    while (__stlxr(v56 - 1, p_shared_owners));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF90EE0(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F79E8;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF90F54(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F79E8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF90FC8()
{
  return 25;
}

uint64_t sub_20AF90FD0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF90FD8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF90FEC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

std::string *sub_20AF91068()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254632518);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254632518))
    return &stru_254632500;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgra8u]", __p);
  sub_20B531884((uint64_t)__p, &stru_254632500);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254632500, &dword_20AEBB000);
  __cxa_guard_release(&qword_254632518);
  return &stru_254632500;
}

void sub_20AF91120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254632518);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254632518);
  _Unwind_Resume(a1);
}

void sub_20AF91160()
{
  unsigned __int8 v0;
  std::string *v1;
  __int128 *v2;
  int64x2_t v3;
  int8x16_t v4;
  void *v5[3];
  void *v6[2];
  char v7;
  void *v8[2];
  char v9;
  void *__p;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25463AAA8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463AAA8))
  {
    sub_20AEC0D64(v6, "ConstSharedImage");
    v1 = sub_20AF91068();
    sub_20AF91350((uint64_t)v8, (uint64_t)v1);
    v2 = sub_20AF85EB4();
    sub_20AF91350((uint64_t)&__p, (uint64_t)v2);
    sub_20AEC7620(v5, (uint64_t)v8, 2uLL);
    sub_20B53170C((char *)v6, (uint64_t *)v5, (std::string *)&qword_25463AD00, v3, v4);
    sub_20AEC2E90(v5);
    if (v11 < 0)
    {
      operator delete(__p);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v7 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463AD00, &dword_20AEBB000);
          __cxa_guard_release(&qword_25463AAA8);
          return;
        }
LABEL_10:
        operator delete(v6[0]);
        goto LABEL_7;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8[0]);
    if ((v7 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
}

void sub_20AF9129C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_25463AAA8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_25463AAA8);
  _Unwind_Resume(a1);
}

void sub_20AF91350(uint64_t a1, uint64_t a2)
{
  std::string __p;

  if (*(char *)(a2 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20AF913EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF91408(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F7AE0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF9147C()
{
  return 25;
}

uint64_t sub_20AF91484(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF9148C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF914A0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF9151C(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 25)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AF9181C((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a2 + 32) << 32;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20AF917D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF9181C(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  sub_20AF91160();
  v3 = sub_20AF87004();
  v5 = *(_DWORD *)(a2 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)&qword_25463AD00, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_20AF91888(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F7CD0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

double sub_20AF918FC(uint64_t a1, uint64_t a2)
{
  uint64_t (***v4)();
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (***v14)();
  unint64_t *p_shared_owners;
  unint64_t v16;
  __int128 *v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  double result;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  std::logic_error *exception;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  size_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  std::string::size_type size;
  std::string *p_p;
  std::string *p_dst;
  std::string *v51;
  uint64_t v52;
  uint64_t v53;
  std::string *v54;
  __int128 v55;
  int64x2_t v56;
  int8x16_t v57;
  void **v58;
  void **v59;
  void *v60;
  std::string __dst;
  std::string __p;
  void *v63;
  void **v64;
  void *v65[4];
  std::string __s;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _QWORD v70[2];
  _QWORD v71[2];

  v71[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t (****)())(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  __s.__r_.__value_.__r.__words[0] = (std::string::size_type)v4;
  __s.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4 && *v4 == off_24C415510)
  {
    *(_QWORD *)&v67 = v4;
    *((_QWORD *)&v67 + 1) = v5;
    *(_OWORD *)&__s.__r_.__value_.__l.__data_ = 0uLL;
  }
  else
  {
    v67 = 0uLL;
    if (__s.__r_.__value_.__l.__size_)
    {
      v8 = (unint64_t *)(__s.__r_.__value_.__l.__size_ + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        (*(void (**)(std::string::size_type))(*(_QWORD *)__s.__r_.__value_.__l.__size_ + 16))(__s.__r_.__value_.__l.__size_);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)__s.__r_.__value_.__l.__size_);
        v10 = v67;
        goto LABEL_16;
      }
    }
  }
  v10 = v67;
  if (!*((_QWORD *)&v67 + 1))
    goto LABEL_16;
  v11 = (unint64_t *)(*((_QWORD *)&v67 + 1) + 8);
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (v12)
  {
LABEL_16:
    if (v10)
      goto LABEL_17;
LABEL_35:
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 80) = 0;
    return result;
  }
  (*(void (**)(_QWORD))(**((_QWORD **)&v67 + 1) + 16))(*((_QWORD *)&v67 + 1));
  std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v67 + 1));
  if (!(_QWORD)v67)
    goto LABEL_35;
LABEL_17:
  v14 = *(uint64_t (****)())(a2 + 8);
  v13 = *(std::__shared_weak_count **)(a2 + 16);
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  if (!v14 || *v14 != off_24C415510)
  {
    v27 = a2;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v29 = atomic_load((unsigned __int8 *)&qword_25463AAB0);
    if ((v29 & 1) != 0 || !__cxa_guard_acquire(&qword_25463AAB0))
      goto LABEL_39;
    HIBYTE(v65[2]) = 16;
    strcpy((char *)v65, "ConstSharedImage");
    v54 = sub_20AF922E4();
    if (SHIBYTE(v54->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&__s, v54->__r_.__value_.__l.__data_, v54->__r_.__value_.__l.__size_);
    }
    else
    {
      v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
      __s.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v55;
    }
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v67);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AF85A54();
    if (byte_25463AB08[23] < 0)
      sub_20AEC60F4(&__s, *(void **)byte_25463AB08, *(unint64_t *)&byte_25463AB08[8]);
    else
      __s = *(std::string *)byte_25463AB08;
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v68 + 8);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AEC7620(&v63, (uint64_t)&v67, 2uLL);
    sub_20B53170C((char *)v65, (uint64_t *)&v63, (std::string *)&qword_25463AD18, v56, v57);
    v58 = (void **)v63;
    if (v63)
    {
      v59 = v64;
      v60 = v63;
      if (v64 != v63)
      {
        do
        {
          if (*((char *)v59 - 1) < 0)
            operator delete(*(v59 - 3));
          v59 -= 3;
        }
        while (v59 != v58);
        v60 = v63;
      }
      v64 = v58;
      operator delete(v60);
      if (SHIBYTE(v69) < 0)
      {
LABEL_94:
        operator delete(*((void **)&v68 + 1));
        if ((SBYTE7(v68) & 0x80000000) == 0)
          goto LABEL_95;
        goto LABEL_106;
      }
    }
    else if (SHIBYTE(v69) < 0)
    {
      goto LABEL_94;
    }
    if ((SBYTE7(v68) & 0x80000000) == 0)
    {
LABEL_95:
      if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      {
LABEL_97:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463AD18, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463AAB0);
LABEL_39:
        sub_20AF923DC();
        *(_QWORD *)&v67 = "Attempting to create an ";
        *((_QWORD *)&v67 + 1) = 24;
        v30 = byte_25463AD2F;
        if (byte_25463AD2F >= 0)
        {
          v31 = &qword_25463AD18;
        }
        else
        {
          v30 = unk_25463AD20;
          v31 = (uint64_t *)qword_25463AD18;
        }
        *(_QWORD *)&v68 = v31;
        *((_QWORD *)&v68 + 1) = v30;
        *(_QWORD *)&v69 = " from an ";
        *((_QWORD *)&v69 + 1) = 9;
        v32 = byte_25463AD47;
        v33 = &qword_25463AD30;
        if (byte_25463AD47 < 0)
        {
          v32 = qword_25463AD38;
          v33 = (uint64_t *)qword_25463AD30;
        }
        v70[0] = v33;
        v70[1] = v32;
        sub_20AECFDF8((uint64_t)&v67, (uint64_t)v71, 0, 0, &__p);
        v34 = *(_QWORD *)(a2 + 8);
        v35 = *(std::__shared_weak_count **)(v27 + 16);
        if (v35)
        {
          v36 = (unint64_t *)&v35->__shared_owners_;
          do
            v37 = __ldxr(v36);
          while (__stxr(v37 + 1, v36));
          do
            v38 = __ldaxr(v36);
          while (__stlxr(v38 - 1, v36));
          if (!v38)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
          if (v34)
          {
            v34 = *(_QWORD *)(v27 + 8);
            v42 = *(std::__shared_weak_count **)(v27 + 16);
            if (v42)
            {
              v43 = (unint64_t *)&v42->__shared_owners_;
              do
                v44 = __ldxr(v43);
              while (__stxr(v44 + 1, v43));
              do
                v45 = __ldaxr(v43);
              while (__stlxr(v45 - 1, v43));
              if (!v45)
              {
                ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
                std::__shared_weak_count::__release_weak(v42);
              }
            }
            goto LABEL_64;
          }
        }
        else if (v34)
        {
LABEL_64:
          v46 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v34 + 80))(v34);
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          {
            size = __p.__r_.__value_.__l.__size_;
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          *(_QWORD *)&v67 = p_p;
          *((_QWORD *)&v67 + 1) = size;
          *(_QWORD *)&v68 = " but the other image contains an incompatible buffer type ";
          *((_QWORD *)&v68 + 1) = 58;
          *(_QWORD *)&v69 = v46;
          *((_QWORD *)&v69 + 1) = v47;
          sub_20AECFDF8((uint64_t)&v67, (uint64_t)v70, 0, 0, &__dst);
          LOBYTE(v39) = *((_BYTE *)&__p.__r_.__value_.__s + 23);
LABEL_74:
          if ((v39 & 0x80) != 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          std::logic_error::logic_error(exception, &__dst);
          exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
          __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
        }
        v39 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v40 = __p.__r_.__value_.__l.__size_;
        v41 = v40 + 46;
        if (v40 + 46 >= 0x7FFFFFFFFFFFFFF8)
          sub_20AEC0138();
        if (v41 > 0x16)
        {
          v52 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v41 | 7) != 0x17)
            v52 = v41 | 7;
          v53 = v52 + 1;
          p_dst = (std::string *)operator new(v52 + 1);
          __dst.__r_.__value_.__l.__size_ = v40 + 46;
          __dst.__r_.__value_.__r.__words[2] = v53 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          if (!v40)
            goto LABEL_73;
        }
        else
        {
          memset(&__dst, 0, sizeof(__dst));
          p_dst = &__dst;
          *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v40 + 46;
        }
        if (v39 >= 0)
          v51 = &__p;
        else
          v51 = (std::string *)__p.__r_.__value_.__r.__words[0];
        memmove(p_dst, v51, v40);
LABEL_73:
        strcpy((char *)p_dst + v40, " but the other image does not contain a buffer");
        goto LABEL_74;
      }
LABEL_96:
      operator delete(v65[0]);
      goto LABEL_97;
    }
LABEL_106:
    operator delete((void *)v67);
    if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      goto LABEL_97;
    goto LABEL_96;
  }
  v17 = (__int128 *)(a2 + 24);
  if (v13)
  {
    v18 = (unint64_t *)&v13->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    v20 = v17[1];
    v67 = *v17;
    v68 = v20;
    v69 = v17[2];
    do
      v21 = __ldxr(v18);
    while (__stxr(v21 + 1, v18));
    do
      v22 = __ldaxr(v18);
    while (__stlxr(v22 - 1, v18));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
    do
      v23 = __ldaxr(v18);
    while (__stlxr(v23 - 1, v18));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  else
  {
    v25 = *(_OWORD *)(a2 + 40);
    v67 = *v17;
    v68 = v25;
    v69 = *(_OWORD *)(a2 + 56);
  }
  *(_QWORD *)a1 = &off_24C3F7BD8;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v13;
  v26 = v68;
  *(_OWORD *)(a1 + 24) = v67;
  *(_OWORD *)(a1 + 40) = v26;
  result = *(double *)&v69;
  *(_OWORD *)(a1 + 56) = v69;
  *(_BYTE *)(a1 + 72) = v70[0];
  *(_BYTE *)(a1 + 80) = 1;
  return result;
}

void sub_20AF92004(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void **__p,void **a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  std::__shared_weak_count *v50;
  void *v51;
  void **v53;
  void **v54;
  unint64_t *p_shared_owners;
  unint64_t v56;

  if (__p)
  {
    v53 = a23;
    v54 = __p;
    if (a23 != __p)
    {
      do
      {
        if (*((char *)v53 - 1) < 0)
          operator delete(*(v53 - 3));
        v53 -= 3;
      }
      while (v53 != __p);
      v54 = __p;
    }
    operator delete(v54);
  }
  if (a50 < 0)
    operator delete(a45);
  if (a44 < 0)
    operator delete(a39);
  if (a30 < 0)
    operator delete(a25);
  __cxa_guard_abort(&qword_25463AAB0);
  __cxa_free_exception(v51);
  if (v50)
  {
    p_shared_owners = (unint64_t *)&v50->__shared_owners_;
    do
      v56 = __ldaxr(p_shared_owners);
    while (__stlxr(v56 - 1, p_shared_owners));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF92158(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F7BD8;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF921CC(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F7BD8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF92240()
{
  return 31;
}

uint64_t sub_20AF92248(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF92250@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF92268(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

std::string *sub_20AF922E4()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254632538);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254632538))
    return &stru_254632520;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgba16f]", __p);
  sub_20B531884((uint64_t)__p, &stru_254632520);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254632520, &dword_20AEBB000);
  __cxa_guard_release(&qword_254632538);
  return &stru_254632520;
}

void sub_20AF9239C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254632538);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254632538);
  _Unwind_Resume(a1);
}

void sub_20AF923DC()
{
  unsigned __int8 v0;
  std::string *v1;
  __int128 *v2;
  int64x2_t v3;
  int8x16_t v4;
  void *v5[3];
  void *v6[2];
  char v7;
  void *v8[2];
  char v9;
  void *__p;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25463AAB8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463AAB8))
  {
    sub_20AEC0D64(v6, "ConstSharedImage");
    v1 = sub_20AF922E4();
    sub_20AF925CC((uint64_t)v8, (uint64_t)v1);
    v2 = sub_20AF85EB4();
    sub_20AF925CC((uint64_t)&__p, (uint64_t)v2);
    sub_20AEC7620(v5, (uint64_t)v8, 2uLL);
    sub_20B53170C((char *)v6, (uint64_t *)v5, (std::string *)&qword_25463AD30, v3, v4);
    sub_20AEC2E90(v5);
    if (v11 < 0)
    {
      operator delete(__p);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v7 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463AD30, &dword_20AEBB000);
          __cxa_guard_release(&qword_25463AAB8);
          return;
        }
LABEL_10:
        operator delete(v6[0]);
        goto LABEL_7;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8[0]);
    if ((v7 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
}

void sub_20AF92518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_25463AAB8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_25463AAB8);
  _Unwind_Resume(a1);
}

void sub_20AF925CC(uint64_t a1, uint64_t a2)
{
  std::string __p;

  if (*(char *)(a2 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20AF92668(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF92684(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F7CD0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF926F8()
{
  return 31;
}

uint64_t sub_20AF92700(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF92708@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF92720(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF9279C(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 31)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AF92AA0((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20AF92A54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF92AA0(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  sub_20AF923DC();
  v3 = sub_20AF87004();
  v5 = *(_DWORD *)(a2 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)&qword_25463AD30, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_20AF92B0C(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F7EC0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

double sub_20AF92B80(uint64_t a1, uint64_t a2)
{
  uint64_t (***v4)();
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (***v14)();
  unint64_t *p_shared_owners;
  unint64_t v16;
  __int128 *v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  double result;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  std::logic_error *exception;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  size_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  std::string::size_type size;
  std::string *p_p;
  std::string *p_dst;
  std::string *v51;
  uint64_t v52;
  uint64_t v53;
  std::string *v54;
  __int128 v55;
  int64x2_t v56;
  int8x16_t v57;
  void **v58;
  void **v59;
  void *v60;
  std::string __dst;
  std::string __p;
  void *v63;
  void **v64;
  void *v65[4];
  std::string __s;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _QWORD v70[2];
  _QWORD v71[2];

  v71[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t (****)())(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  __s.__r_.__value_.__r.__words[0] = (std::string::size_type)v4;
  __s.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4 && *v4 == off_24C4155A0)
  {
    *(_QWORD *)&v67 = v4;
    *((_QWORD *)&v67 + 1) = v5;
    *(_OWORD *)&__s.__r_.__value_.__l.__data_ = 0uLL;
  }
  else
  {
    v67 = 0uLL;
    if (__s.__r_.__value_.__l.__size_)
    {
      v8 = (unint64_t *)(__s.__r_.__value_.__l.__size_ + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        (*(void (**)(std::string::size_type))(*(_QWORD *)__s.__r_.__value_.__l.__size_ + 16))(__s.__r_.__value_.__l.__size_);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)__s.__r_.__value_.__l.__size_);
        v10 = v67;
        goto LABEL_16;
      }
    }
  }
  v10 = v67;
  if (!*((_QWORD *)&v67 + 1))
    goto LABEL_16;
  v11 = (unint64_t *)(*((_QWORD *)&v67 + 1) + 8);
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (v12)
  {
LABEL_16:
    if (v10)
      goto LABEL_17;
LABEL_35:
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 80) = 0;
    return result;
  }
  (*(void (**)(_QWORD))(**((_QWORD **)&v67 + 1) + 16))(*((_QWORD *)&v67 + 1));
  std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v67 + 1));
  if (!(_QWORD)v67)
    goto LABEL_35;
LABEL_17:
  v14 = *(uint64_t (****)())(a2 + 8);
  v13 = *(std::__shared_weak_count **)(a2 + 16);
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  if (!v14 || *v14 != off_24C4155A0)
  {
    v27 = a2;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v29 = atomic_load((unsigned __int8 *)&qword_25463AAC0);
    if ((v29 & 1) != 0 || !__cxa_guard_acquire(&qword_25463AAC0))
      goto LABEL_39;
    HIBYTE(v65[2]) = 16;
    strcpy((char *)v65, "ConstSharedImage");
    v54 = sub_20AF93568();
    if (SHIBYTE(v54->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&__s, v54->__r_.__value_.__l.__data_, v54->__r_.__value_.__l.__size_);
    }
    else
    {
      v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
      __s.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v55;
    }
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v67);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AF85A54();
    if (byte_25463AB08[23] < 0)
      sub_20AEC60F4(&__s, *(void **)byte_25463AB08, *(unint64_t *)&byte_25463AB08[8]);
    else
      __s = *(std::string *)byte_25463AB08;
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v68 + 8);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AEC7620(&v63, (uint64_t)&v67, 2uLL);
    sub_20B53170C((char *)v65, (uint64_t *)&v63, (std::string *)&qword_25463AD48, v56, v57);
    v58 = (void **)v63;
    if (v63)
    {
      v59 = v64;
      v60 = v63;
      if (v64 != v63)
      {
        do
        {
          if (*((char *)v59 - 1) < 0)
            operator delete(*(v59 - 3));
          v59 -= 3;
        }
        while (v59 != v58);
        v60 = v63;
      }
      v64 = v58;
      operator delete(v60);
      if (SHIBYTE(v69) < 0)
      {
LABEL_94:
        operator delete(*((void **)&v68 + 1));
        if ((SBYTE7(v68) & 0x80000000) == 0)
          goto LABEL_95;
        goto LABEL_106;
      }
    }
    else if (SHIBYTE(v69) < 0)
    {
      goto LABEL_94;
    }
    if ((SBYTE7(v68) & 0x80000000) == 0)
    {
LABEL_95:
      if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      {
LABEL_97:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463AD48, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463AAC0);
LABEL_39:
        sub_20AF93660();
        *(_QWORD *)&v67 = "Attempting to create an ";
        *((_QWORD *)&v67 + 1) = 24;
        v30 = byte_25463AD5F;
        if (byte_25463AD5F >= 0)
        {
          v31 = &qword_25463AD48;
        }
        else
        {
          v30 = unk_25463AD50;
          v31 = (uint64_t *)qword_25463AD48;
        }
        *(_QWORD *)&v68 = v31;
        *((_QWORD *)&v68 + 1) = v30;
        *(_QWORD *)&v69 = " from an ";
        *((_QWORD *)&v69 + 1) = 9;
        v32 = byte_25463AD77;
        v33 = &qword_25463AD60;
        if (byte_25463AD77 < 0)
        {
          v32 = qword_25463AD68;
          v33 = (uint64_t *)qword_25463AD60;
        }
        v70[0] = v33;
        v70[1] = v32;
        sub_20AECFDF8((uint64_t)&v67, (uint64_t)v71, 0, 0, &__p);
        v34 = *(_QWORD *)(a2 + 8);
        v35 = *(std::__shared_weak_count **)(v27 + 16);
        if (v35)
        {
          v36 = (unint64_t *)&v35->__shared_owners_;
          do
            v37 = __ldxr(v36);
          while (__stxr(v37 + 1, v36));
          do
            v38 = __ldaxr(v36);
          while (__stlxr(v38 - 1, v36));
          if (!v38)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
          if (v34)
          {
            v34 = *(_QWORD *)(v27 + 8);
            v42 = *(std::__shared_weak_count **)(v27 + 16);
            if (v42)
            {
              v43 = (unint64_t *)&v42->__shared_owners_;
              do
                v44 = __ldxr(v43);
              while (__stxr(v44 + 1, v43));
              do
                v45 = __ldaxr(v43);
              while (__stlxr(v45 - 1, v43));
              if (!v45)
              {
                ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
                std::__shared_weak_count::__release_weak(v42);
              }
            }
            goto LABEL_64;
          }
        }
        else if (v34)
        {
LABEL_64:
          v46 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v34 + 80))(v34);
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          {
            size = __p.__r_.__value_.__l.__size_;
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          *(_QWORD *)&v67 = p_p;
          *((_QWORD *)&v67 + 1) = size;
          *(_QWORD *)&v68 = " but the other image contains an incompatible buffer type ";
          *((_QWORD *)&v68 + 1) = 58;
          *(_QWORD *)&v69 = v46;
          *((_QWORD *)&v69 + 1) = v47;
          sub_20AECFDF8((uint64_t)&v67, (uint64_t)v70, 0, 0, &__dst);
          LOBYTE(v39) = *((_BYTE *)&__p.__r_.__value_.__s + 23);
LABEL_74:
          if ((v39 & 0x80) != 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          std::logic_error::logic_error(exception, &__dst);
          exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
          __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
        }
        v39 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v40 = __p.__r_.__value_.__l.__size_;
        v41 = v40 + 46;
        if (v40 + 46 >= 0x7FFFFFFFFFFFFFF8)
          sub_20AEC0138();
        if (v41 > 0x16)
        {
          v52 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v41 | 7) != 0x17)
            v52 = v41 | 7;
          v53 = v52 + 1;
          p_dst = (std::string *)operator new(v52 + 1);
          __dst.__r_.__value_.__l.__size_ = v40 + 46;
          __dst.__r_.__value_.__r.__words[2] = v53 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          if (!v40)
            goto LABEL_73;
        }
        else
        {
          memset(&__dst, 0, sizeof(__dst));
          p_dst = &__dst;
          *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v40 + 46;
        }
        if (v39 >= 0)
          v51 = &__p;
        else
          v51 = (std::string *)__p.__r_.__value_.__r.__words[0];
        memmove(p_dst, v51, v40);
LABEL_73:
        strcpy((char *)p_dst + v40, " but the other image does not contain a buffer");
        goto LABEL_74;
      }
LABEL_96:
      operator delete(v65[0]);
      goto LABEL_97;
    }
LABEL_106:
    operator delete((void *)v67);
    if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      goto LABEL_97;
    goto LABEL_96;
  }
  v17 = (__int128 *)(a2 + 24);
  if (v13)
  {
    v18 = (unint64_t *)&v13->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    v20 = v17[1];
    v67 = *v17;
    v68 = v20;
    v69 = v17[2];
    do
      v21 = __ldxr(v18);
    while (__stxr(v21 + 1, v18));
    do
      v22 = __ldaxr(v18);
    while (__stlxr(v22 - 1, v18));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
    do
      v23 = __ldaxr(v18);
    while (__stlxr(v23 - 1, v18));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  else
  {
    v25 = *(_OWORD *)(a2 + 40);
    v67 = *v17;
    v68 = v25;
    v69 = *(_OWORD *)(a2 + 56);
  }
  *(_QWORD *)a1 = &off_24C3F7DC8;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v13;
  v26 = v68;
  *(_OWORD *)(a1 + 24) = v67;
  *(_OWORD *)(a1 + 40) = v26;
  result = *(double *)&v69;
  *(_OWORD *)(a1 + 56) = v69;
  *(_BYTE *)(a1 + 72) = v70[0];
  *(_BYTE *)(a1 + 80) = 1;
  return result;
}

void sub_20AF93288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void **__p,void **a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  std::__shared_weak_count *v50;
  void *v51;
  void **v53;
  void **v54;
  unint64_t *p_shared_owners;
  unint64_t v56;

  if (__p)
  {
    v53 = a23;
    v54 = __p;
    if (a23 != __p)
    {
      do
      {
        if (*((char *)v53 - 1) < 0)
          operator delete(*(v53 - 3));
        v53 -= 3;
      }
      while (v53 != __p);
      v54 = __p;
    }
    operator delete(v54);
  }
  if (a50 < 0)
    operator delete(a45);
  if (a44 < 0)
    operator delete(a39);
  if (a30 < 0)
    operator delete(a25);
  __cxa_guard_abort(&qword_25463AAC0);
  __cxa_free_exception(v51);
  if (v50)
  {
    p_shared_owners = (unint64_t *)&v50->__shared_owners_;
    do
      v56 = __ldaxr(p_shared_owners);
    while (__stlxr(v56 - 1, p_shared_owners));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF933DC(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F7DC8;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF93450(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F7DC8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF934C4()
{
  return 32;
}

uint64_t sub_20AF934CC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF934D4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF934EC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

std::string *sub_20AF93568()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254632558);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254632558))
    return &stru_254632540;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgba32f]", __p);
  sub_20B531884((uint64_t)__p, &stru_254632540);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254632540, &dword_20AEBB000);
  __cxa_guard_release(&qword_254632558);
  return &stru_254632540;
}

void sub_20AF93620(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254632558);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254632558);
  _Unwind_Resume(a1);
}

void sub_20AF93660()
{
  unsigned __int8 v0;
  std::string *v1;
  __int128 *v2;
  int64x2_t v3;
  int8x16_t v4;
  void *v5[3];
  void *v6[2];
  char v7;
  void *v8[2];
  char v9;
  void *__p;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25463AAC8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463AAC8))
  {
    sub_20AEC0D64(v6, "ConstSharedImage");
    v1 = sub_20AF93568();
    sub_20AF93850((uint64_t)v8, (uint64_t)v1);
    v2 = sub_20AF85EB4();
    sub_20AF93850((uint64_t)&__p, (uint64_t)v2);
    sub_20AEC7620(v5, (uint64_t)v8, 2uLL);
    sub_20B53170C((char *)v6, (uint64_t *)v5, (std::string *)&qword_25463AD60, v3, v4);
    sub_20AEC2E90(v5);
    if (v11 < 0)
    {
      operator delete(__p);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v7 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463AD60, &dword_20AEBB000);
          __cxa_guard_release(&qword_25463AAC8);
          return;
        }
LABEL_10:
        operator delete(v6[0]);
        goto LABEL_7;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8[0]);
    if ((v7 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
}

void sub_20AF9379C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_25463AAC8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_25463AAC8);
  _Unwind_Resume(a1);
}

void sub_20AF93850(uint64_t a1, uint64_t a2)
{
  std::string __p;

  if (*(char *)(a2 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20AF938EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF93908(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F7EC0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF9397C()
{
  return 32;
}

uint64_t sub_20AF93984(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF9398C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF939A4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF93A20(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 32)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AF93D24((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a2 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20AF93CD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF93D24(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  sub_20AF93660();
  v3 = sub_20AF87004();
  v5 = *(_DWORD *)(a2 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)&qword_25463AD60, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_20AF93D90(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F80B0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

double sub_20AF93E04(uint64_t a1, uint64_t a2)
{
  uint64_t (***v4)();
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (***v14)();
  unint64_t *p_shared_owners;
  unint64_t v16;
  __int128 *v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  double result;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  std::logic_error *exception;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  size_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  std::string::size_type size;
  std::string *p_p;
  std::string *p_dst;
  std::string *v51;
  uint64_t v52;
  uint64_t v53;
  std::string *v54;
  __int128 v55;
  int64x2_t v56;
  int8x16_t v57;
  void **v58;
  void **v59;
  void *v60;
  std::string __dst;
  std::string __p;
  void *v63;
  void **v64;
  void *v65[4];
  std::string __s;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _QWORD v70[2];
  _QWORD v71[2];

  v71[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t (****)())(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  __s.__r_.__value_.__r.__words[0] = (std::string::size_type)v4;
  __s.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4 && *v4 == off_24C415630)
  {
    *(_QWORD *)&v67 = v4;
    *((_QWORD *)&v67 + 1) = v5;
    *(_OWORD *)&__s.__r_.__value_.__l.__data_ = 0uLL;
  }
  else
  {
    v67 = 0uLL;
    if (__s.__r_.__value_.__l.__size_)
    {
      v8 = (unint64_t *)(__s.__r_.__value_.__l.__size_ + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        (*(void (**)(std::string::size_type))(*(_QWORD *)__s.__r_.__value_.__l.__size_ + 16))(__s.__r_.__value_.__l.__size_);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)__s.__r_.__value_.__l.__size_);
        v10 = v67;
        goto LABEL_16;
      }
    }
  }
  v10 = v67;
  if (!*((_QWORD *)&v67 + 1))
    goto LABEL_16;
  v11 = (unint64_t *)(*((_QWORD *)&v67 + 1) + 8);
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (v12)
  {
LABEL_16:
    if (v10)
      goto LABEL_17;
LABEL_35:
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 80) = 0;
    return result;
  }
  (*(void (**)(_QWORD))(**((_QWORD **)&v67 + 1) + 16))(*((_QWORD *)&v67 + 1));
  std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v67 + 1));
  if (!(_QWORD)v67)
    goto LABEL_35;
LABEL_17:
  v14 = *(uint64_t (****)())(a2 + 8);
  v13 = *(std::__shared_weak_count **)(a2 + 16);
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  if (!v14 || *v14 != off_24C415630)
  {
    v27 = a2;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v29 = atomic_load((unsigned __int8 *)&qword_25463AAD0);
    if ((v29 & 1) != 0 || !__cxa_guard_acquire(&qword_25463AAD0))
      goto LABEL_39;
    HIBYTE(v65[2]) = 16;
    strcpy((char *)v65, "ConstSharedImage");
    v54 = sub_20AF947E8();
    if (SHIBYTE(v54->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&__s, v54->__r_.__value_.__l.__data_, v54->__r_.__value_.__l.__size_);
    }
    else
    {
      v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
      __s.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v55;
    }
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v67);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AF85A54();
    if (byte_25463AB08[23] < 0)
      sub_20AEC60F4(&__s, *(void **)byte_25463AB08, *(unint64_t *)&byte_25463AB08[8]);
    else
      __s = *(std::string *)byte_25463AB08;
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v68 + 8);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AEC7620(&v63, (uint64_t)&v67, 2uLL);
    sub_20B53170C((char *)v65, (uint64_t *)&v63, (std::string *)&qword_25463AD78, v56, v57);
    v58 = (void **)v63;
    if (v63)
    {
      v59 = v64;
      v60 = v63;
      if (v64 != v63)
      {
        do
        {
          if (*((char *)v59 - 1) < 0)
            operator delete(*(v59 - 3));
          v59 -= 3;
        }
        while (v59 != v58);
        v60 = v63;
      }
      v64 = v58;
      operator delete(v60);
      if (SHIBYTE(v69) < 0)
      {
LABEL_94:
        operator delete(*((void **)&v68 + 1));
        if ((SBYTE7(v68) & 0x80000000) == 0)
          goto LABEL_95;
        goto LABEL_106;
      }
    }
    else if (SHIBYTE(v69) < 0)
    {
      goto LABEL_94;
    }
    if ((SBYTE7(v68) & 0x80000000) == 0)
    {
LABEL_95:
      if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      {
LABEL_97:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463AD78, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463AAD0);
LABEL_39:
        sub_20AF948E0();
        *(_QWORD *)&v67 = "Attempting to create an ";
        *((_QWORD *)&v67 + 1) = 24;
        v30 = byte_25463AD8F;
        if (byte_25463AD8F >= 0)
        {
          v31 = &qword_25463AD78;
        }
        else
        {
          v30 = unk_25463AD80;
          v31 = (uint64_t *)qword_25463AD78;
        }
        *(_QWORD *)&v68 = v31;
        *((_QWORD *)&v68 + 1) = v30;
        *(_QWORD *)&v69 = " from an ";
        *((_QWORD *)&v69 + 1) = 9;
        v32 = byte_25463ADA7;
        v33 = &qword_25463AD90;
        if (byte_25463ADA7 < 0)
        {
          v32 = qword_25463AD98;
          v33 = (uint64_t *)qword_25463AD90;
        }
        v70[0] = v33;
        v70[1] = v32;
        sub_20AECFDF8((uint64_t)&v67, (uint64_t)v71, 0, 0, &__p);
        v34 = *(_QWORD *)(a2 + 8);
        v35 = *(std::__shared_weak_count **)(v27 + 16);
        if (v35)
        {
          v36 = (unint64_t *)&v35->__shared_owners_;
          do
            v37 = __ldxr(v36);
          while (__stxr(v37 + 1, v36));
          do
            v38 = __ldaxr(v36);
          while (__stlxr(v38 - 1, v36));
          if (!v38)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
          if (v34)
          {
            v34 = *(_QWORD *)(v27 + 8);
            v42 = *(std::__shared_weak_count **)(v27 + 16);
            if (v42)
            {
              v43 = (unint64_t *)&v42->__shared_owners_;
              do
                v44 = __ldxr(v43);
              while (__stxr(v44 + 1, v43));
              do
                v45 = __ldaxr(v43);
              while (__stlxr(v45 - 1, v43));
              if (!v45)
              {
                ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
                std::__shared_weak_count::__release_weak(v42);
              }
            }
            goto LABEL_64;
          }
        }
        else if (v34)
        {
LABEL_64:
          v46 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v34 + 80))(v34);
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          {
            size = __p.__r_.__value_.__l.__size_;
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          *(_QWORD *)&v67 = p_p;
          *((_QWORD *)&v67 + 1) = size;
          *(_QWORD *)&v68 = " but the other image contains an incompatible buffer type ";
          *((_QWORD *)&v68 + 1) = 58;
          *(_QWORD *)&v69 = v46;
          *((_QWORD *)&v69 + 1) = v47;
          sub_20AECFDF8((uint64_t)&v67, (uint64_t)v70, 0, 0, &__dst);
          LOBYTE(v39) = *((_BYTE *)&__p.__r_.__value_.__s + 23);
LABEL_74:
          if ((v39 & 0x80) != 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          std::logic_error::logic_error(exception, &__dst);
          exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
          __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
        }
        v39 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v40 = __p.__r_.__value_.__l.__size_;
        v41 = v40 + 46;
        if (v40 + 46 >= 0x7FFFFFFFFFFFFFF8)
          sub_20AEC0138();
        if (v41 > 0x16)
        {
          v52 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v41 | 7) != 0x17)
            v52 = v41 | 7;
          v53 = v52 + 1;
          p_dst = (std::string *)operator new(v52 + 1);
          __dst.__r_.__value_.__l.__size_ = v40 + 46;
          __dst.__r_.__value_.__r.__words[2] = v53 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          if (!v40)
            goto LABEL_73;
        }
        else
        {
          memset(&__dst, 0, sizeof(__dst));
          p_dst = &__dst;
          *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v40 + 46;
        }
        if (v39 >= 0)
          v51 = &__p;
        else
          v51 = (std::string *)__p.__r_.__value_.__r.__words[0];
        memmove(p_dst, v51, v40);
LABEL_73:
        strcpy((char *)p_dst + v40, " but the other image does not contain a buffer");
        goto LABEL_74;
      }
LABEL_96:
      operator delete(v65[0]);
      goto LABEL_97;
    }
LABEL_106:
    operator delete((void *)v67);
    if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      goto LABEL_97;
    goto LABEL_96;
  }
  v17 = (__int128 *)(a2 + 24);
  if (v13)
  {
    v18 = (unint64_t *)&v13->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    v20 = v17[1];
    v67 = *v17;
    v68 = v20;
    v69 = v17[2];
    do
      v21 = __ldxr(v18);
    while (__stxr(v21 + 1, v18));
    do
      v22 = __ldaxr(v18);
    while (__stlxr(v22 - 1, v18));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
    do
      v23 = __ldaxr(v18);
    while (__stlxr(v23 - 1, v18));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  else
  {
    v25 = *(_OWORD *)(a2 + 40);
    v67 = *v17;
    v68 = v25;
    v69 = *(_OWORD *)(a2 + 56);
  }
  *(_QWORD *)a1 = &off_24C3F7FB8;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v13;
  v26 = v68;
  *(_OWORD *)(a1 + 24) = v67;
  *(_OWORD *)(a1 + 40) = v26;
  result = *(double *)&v69;
  *(_OWORD *)(a1 + 56) = v69;
  *(_BYTE *)(a1 + 72) = v70[0];
  *(_BYTE *)(a1 + 80) = 1;
  return result;
}

void sub_20AF9450C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void **__p,void **a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  std::__shared_weak_count *v50;
  void *v51;
  void **v53;
  void **v54;
  unint64_t *p_shared_owners;
  unint64_t v56;

  if (__p)
  {
    v53 = a23;
    v54 = __p;
    if (a23 != __p)
    {
      do
      {
        if (*((char *)v53 - 1) < 0)
          operator delete(*(v53 - 3));
        v53 -= 3;
      }
      while (v53 != __p);
      v54 = __p;
    }
    operator delete(v54);
  }
  if (a50 < 0)
    operator delete(a45);
  if (a44 < 0)
    operator delete(a39);
  if (a30 < 0)
    operator delete(a25);
  __cxa_guard_abort(&qword_25463AAD0);
  __cxa_free_exception(v51);
  if (v50)
  {
    p_shared_owners = (unint64_t *)&v50->__shared_owners_;
    do
      v56 = __ldaxr(p_shared_owners);
    while (__stlxr(v56 - 1, p_shared_owners));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF94660(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F7FB8;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF946D4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F7FB8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF94748()
{
  return 37;
}

uint64_t sub_20AF94750(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF94758@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF9476C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

std::string *sub_20AF947E8()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254632578);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254632578))
    return &stru_254632560;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Argb8u]", __p);
  sub_20B531884((uint64_t)__p, &stru_254632560);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254632560, &dword_20AEBB000);
  __cxa_guard_release(&qword_254632578);
  return &stru_254632560;
}

void sub_20AF948A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254632578);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254632578);
  _Unwind_Resume(a1);
}

void sub_20AF948E0()
{
  unsigned __int8 v0;
  std::string *v1;
  __int128 *v2;
  int64x2_t v3;
  int8x16_t v4;
  void *v5[3];
  void *v6[2];
  char v7;
  void *v8[2];
  char v9;
  void *__p;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25463AAD8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463AAD8))
  {
    sub_20AEC0D64(v6, "ConstSharedImage");
    v1 = sub_20AF947E8();
    sub_20AF94AD0((uint64_t)v8, (uint64_t)v1);
    v2 = sub_20AF85EB4();
    sub_20AF94AD0((uint64_t)&__p, (uint64_t)v2);
    sub_20AEC7620(v5, (uint64_t)v8, 2uLL);
    sub_20B53170C((char *)v6, (uint64_t *)v5, (std::string *)&qword_25463AD90, v3, v4);
    sub_20AEC2E90(v5);
    if (v11 < 0)
    {
      operator delete(__p);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v7 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463AD90, &dword_20AEBB000);
          __cxa_guard_release(&qword_25463AAD8);
          return;
        }
LABEL_10:
        operator delete(v6[0]);
        goto LABEL_7;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8[0]);
    if ((v7 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
}

void sub_20AF94A1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_25463AAD8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_25463AAD8);
  _Unwind_Resume(a1);
}

void sub_20AF94AD0(uint64_t a1, uint64_t a2)
{
  std::string __p;

  if (*(char *)(a2 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20AF94B6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF94B88(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F80B0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF94BFC()
{
  return 37;
}

uint64_t sub_20AF94C04(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF94C0C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF94C20(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF94C9C(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 37)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AF94F9C((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a2 + 32) << 32;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20AF94F50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF94F9C(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  sub_20AF948E0();
  v3 = sub_20AF87004();
  v5 = *(_DWORD *)(a2 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)&qword_25463AD90, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_20AF95008(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F82A0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

double sub_20AF9507C(uint64_t a1, uint64_t a2)
{
  uint64_t (***v4)();
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t (***v14)();
  unint64_t *p_shared_owners;
  unint64_t v16;
  __int128 *v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  double result;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  std::logic_error *exception;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  size_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  std::string::size_type size;
  std::string *p_p;
  std::string *p_dst;
  std::string *v51;
  uint64_t v52;
  uint64_t v53;
  std::string *v54;
  __int128 v55;
  int64x2_t v56;
  int8x16_t v57;
  void **v58;
  void **v59;
  void *v60;
  std::string __dst;
  std::string __p;
  void *v63;
  void **v64;
  void *v65[4];
  std::string __s;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _QWORD v70[2];
  _QWORD v71[2];

  v71[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t (****)())(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  __s.__r_.__value_.__r.__words[0] = (std::string::size_type)v4;
  __s.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4 && *v4 == off_24C4156C0)
  {
    *(_QWORD *)&v67 = v4;
    *((_QWORD *)&v67 + 1) = v5;
    *(_OWORD *)&__s.__r_.__value_.__l.__data_ = 0uLL;
  }
  else
  {
    v67 = 0uLL;
    if (__s.__r_.__value_.__l.__size_)
    {
      v8 = (unint64_t *)(__s.__r_.__value_.__l.__size_ + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        (*(void (**)(std::string::size_type))(*(_QWORD *)__s.__r_.__value_.__l.__size_ + 16))(__s.__r_.__value_.__l.__size_);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)__s.__r_.__value_.__l.__size_);
        v10 = v67;
        goto LABEL_16;
      }
    }
  }
  v10 = v67;
  if (!*((_QWORD *)&v67 + 1))
    goto LABEL_16;
  v11 = (unint64_t *)(*((_QWORD *)&v67 + 1) + 8);
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (v12)
  {
LABEL_16:
    if (v10)
      goto LABEL_17;
LABEL_35:
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 80) = 0;
    return result;
  }
  (*(void (**)(_QWORD))(**((_QWORD **)&v67 + 1) + 16))(*((_QWORD *)&v67 + 1));
  std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v67 + 1));
  if (!(_QWORD)v67)
    goto LABEL_35;
LABEL_17:
  v14 = *(uint64_t (****)())(a2 + 8);
  v13 = *(std::__shared_weak_count **)(a2 + 16);
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }
  if (!v14 || *v14 != off_24C4156C0)
  {
    v27 = a2;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v29 = atomic_load((unsigned __int8 *)&qword_25463AAE0);
    if ((v29 & 1) != 0 || !__cxa_guard_acquire(&qword_25463AAE0))
      goto LABEL_39;
    HIBYTE(v65[2]) = 16;
    strcpy((char *)v65, "ConstSharedImage");
    v54 = sub_20AF95A64();
    if (SHIBYTE(v54->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(&__s, v54->__r_.__value_.__l.__data_, v54->__r_.__value_.__l.__size_);
    }
    else
    {
      v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
      __s.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v55;
    }
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v67);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AF85A54();
    if (byte_25463AB08[23] < 0)
      sub_20AEC60F4(&__s, *(void **)byte_25463AB08, *(unint64_t *)&byte_25463AB08[8]);
    else
      __s = *(std::string *)byte_25463AB08;
    sub_20B52B814(&__s, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v68 + 8);
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s.__r_.__value_.__l.__data_);
    sub_20AEC7620(&v63, (uint64_t)&v67, 2uLL);
    sub_20B53170C((char *)v65, (uint64_t *)&v63, (std::string *)&qword_25463ADA8, v56, v57);
    v58 = (void **)v63;
    if (v63)
    {
      v59 = v64;
      v60 = v63;
      if (v64 != v63)
      {
        do
        {
          if (*((char *)v59 - 1) < 0)
            operator delete(*(v59 - 3));
          v59 -= 3;
        }
        while (v59 != v58);
        v60 = v63;
      }
      v64 = v58;
      operator delete(v60);
      if (SHIBYTE(v69) < 0)
      {
LABEL_94:
        operator delete(*((void **)&v68 + 1));
        if ((SBYTE7(v68) & 0x80000000) == 0)
          goto LABEL_95;
        goto LABEL_106;
      }
    }
    else if (SHIBYTE(v69) < 0)
    {
      goto LABEL_94;
    }
    if ((SBYTE7(v68) & 0x80000000) == 0)
    {
LABEL_95:
      if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      {
LABEL_97:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463ADA8, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463AAE0);
LABEL_39:
        sub_20AF95B5C();
        *(_QWORD *)&v67 = "Attempting to create an ";
        *((_QWORD *)&v67 + 1) = 24;
        v30 = byte_25463ADBF;
        if (byte_25463ADBF >= 0)
        {
          v31 = &qword_25463ADA8;
        }
        else
        {
          v30 = unk_25463ADB0;
          v31 = (uint64_t *)qword_25463ADA8;
        }
        *(_QWORD *)&v68 = v31;
        *((_QWORD *)&v68 + 1) = v30;
        *(_QWORD *)&v69 = " from an ";
        *((_QWORD *)&v69 + 1) = 9;
        v32 = byte_25463ADD7;
        v33 = &qword_25463ADC0;
        if (byte_25463ADD7 < 0)
        {
          v32 = qword_25463ADC8;
          v33 = (uint64_t *)qword_25463ADC0;
        }
        v70[0] = v33;
        v70[1] = v32;
        sub_20AECFDF8((uint64_t)&v67, (uint64_t)v71, 0, 0, &__p);
        v34 = *(_QWORD *)(a2 + 8);
        v35 = *(std::__shared_weak_count **)(v27 + 16);
        if (v35)
        {
          v36 = (unint64_t *)&v35->__shared_owners_;
          do
            v37 = __ldxr(v36);
          while (__stxr(v37 + 1, v36));
          do
            v38 = __ldaxr(v36);
          while (__stlxr(v38 - 1, v36));
          if (!v38)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
          if (v34)
          {
            v34 = *(_QWORD *)(v27 + 8);
            v42 = *(std::__shared_weak_count **)(v27 + 16);
            if (v42)
            {
              v43 = (unint64_t *)&v42->__shared_owners_;
              do
                v44 = __ldxr(v43);
              while (__stxr(v44 + 1, v43));
              do
                v45 = __ldaxr(v43);
              while (__stlxr(v45 - 1, v43));
              if (!v45)
              {
                ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
                std::__shared_weak_count::__release_weak(v42);
              }
            }
            goto LABEL_64;
          }
        }
        else if (v34)
        {
LABEL_64:
          v46 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v34 + 80))(v34);
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          {
            size = __p.__r_.__value_.__l.__size_;
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          *(_QWORD *)&v67 = p_p;
          *((_QWORD *)&v67 + 1) = size;
          *(_QWORD *)&v68 = " but the other image contains an incompatible buffer type ";
          *((_QWORD *)&v68 + 1) = 58;
          *(_QWORD *)&v69 = v46;
          *((_QWORD *)&v69 + 1) = v47;
          sub_20AECFDF8((uint64_t)&v67, (uint64_t)v70, 0, 0, &__dst);
          LOBYTE(v39) = *((_BYTE *)&__p.__r_.__value_.__s + 23);
LABEL_74:
          if ((v39 & 0x80) != 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          std::logic_error::logic_error(exception, &__dst);
          exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
          __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
        }
        v39 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v40 = __p.__r_.__value_.__l.__size_;
        v41 = v40 + 46;
        if (v40 + 46 >= 0x7FFFFFFFFFFFFFF8)
          sub_20AEC0138();
        if (v41 > 0x16)
        {
          v52 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v41 | 7) != 0x17)
            v52 = v41 | 7;
          v53 = v52 + 1;
          p_dst = (std::string *)operator new(v52 + 1);
          __dst.__r_.__value_.__l.__size_ = v40 + 46;
          __dst.__r_.__value_.__r.__words[2] = v53 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          if (!v40)
            goto LABEL_73;
        }
        else
        {
          memset(&__dst, 0, sizeof(__dst));
          p_dst = &__dst;
          *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v40 + 46;
        }
        if (v39 >= 0)
          v51 = &__p;
        else
          v51 = (std::string *)__p.__r_.__value_.__r.__words[0];
        memmove(p_dst, v51, v40);
LABEL_73:
        strcpy((char *)p_dst + v40, " but the other image does not contain a buffer");
        goto LABEL_74;
      }
LABEL_96:
      operator delete(v65[0]);
      goto LABEL_97;
    }
LABEL_106:
    operator delete((void *)v67);
    if ((SHIBYTE(v65[2]) & 0x80000000) == 0)
      goto LABEL_97;
    goto LABEL_96;
  }
  v17 = (__int128 *)(a2 + 24);
  if (v13)
  {
    v18 = (unint64_t *)&v13->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    v20 = v17[1];
    v67 = *v17;
    v68 = v20;
    v69 = v17[2];
    do
      v21 = __ldxr(v18);
    while (__stxr(v21 + 1, v18));
    do
      v22 = __ldaxr(v18);
    while (__stlxr(v22 - 1, v18));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
    do
      v23 = __ldaxr(v18);
    while (__stlxr(v23 - 1, v18));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  else
  {
    v25 = *(_OWORD *)(a2 + 40);
    v67 = *v17;
    v68 = v25;
    v69 = *(_OWORD *)(a2 + 56);
  }
  *(_QWORD *)a1 = &off_24C3F81A8;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v13;
  v26 = v68;
  *(_OWORD *)(a1 + 24) = v67;
  *(_OWORD *)(a1 + 40) = v26;
  result = *(double *)&v69;
  *(_OWORD *)(a1 + 56) = v69;
  *(_BYTE *)(a1 + 72) = v70[0];
  *(_BYTE *)(a1 + 80) = 1;
  return result;
}

void sub_20AF95784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void **__p,void **a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  std::__shared_weak_count *v50;
  void *v51;
  void **v53;
  void **v54;
  unint64_t *p_shared_owners;
  unint64_t v56;

  if (__p)
  {
    v53 = a23;
    v54 = __p;
    if (a23 != __p)
    {
      do
      {
        if (*((char *)v53 - 1) < 0)
          operator delete(*(v53 - 3));
        v53 -= 3;
      }
      while (v53 != __p);
      v54 = __p;
    }
    operator delete(v54);
  }
  if (a50 < 0)
    operator delete(a45);
  if (a44 < 0)
    operator delete(a39);
  if (a30 < 0)
    operator delete(a25);
  __cxa_guard_abort(&qword_25463AAE0);
  __cxa_free_exception(v51);
  if (v50)
  {
    p_shared_owners = (unint64_t *)&v50->__shared_owners_;
    do
      v56 = __ldaxr(p_shared_owners);
    while (__stlxr(v56 - 1, p_shared_owners));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_20AF958D8(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F81A8;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF9594C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F81A8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF959C0()
{
  return 38;
}

uint64_t sub_20AF959C8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF959D0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF959E8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

std::string *sub_20AF95A64()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254632598);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254632598))
    return &stru_254632580;
  sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Argb16u]", __p);
  sub_20B531884((uint64_t)__p, &stru_254632580);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254632580, &dword_20AEBB000);
  __cxa_guard_release(&qword_254632598);
  return &stru_254632580;
}

void sub_20AF95B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254632598);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254632598);
  _Unwind_Resume(a1);
}

void sub_20AF95B5C()
{
  unsigned __int8 v0;
  std::string *v1;
  __int128 *v2;
  int64x2_t v3;
  int8x16_t v4;
  void *v5[3];
  void *v6[2];
  char v7;
  void *v8[2];
  char v9;
  void *__p;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25463AAE8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463AAE8))
  {
    sub_20AEC0D64(v6, "ConstSharedImage");
    v1 = sub_20AF95A64();
    sub_20AF95D4C((uint64_t)v8, (uint64_t)v1);
    v2 = sub_20AF85EB4();
    sub_20AF95D4C((uint64_t)&__p, (uint64_t)v2);
    sub_20AEC7620(v5, (uint64_t)v8, 2uLL);
    sub_20B53170C((char *)v6, (uint64_t *)v5, (std::string *)&qword_25463ADC0, v3, v4);
    sub_20AEC2E90(v5);
    if (v11 < 0)
    {
      operator delete(__p);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v7 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463ADC0, &dword_20AEBB000);
          __cxa_guard_release(&qword_25463AAE8);
          return;
        }
LABEL_10:
        operator delete(v6[0]);
        goto LABEL_7;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8[0]);
    if ((v7 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
}

void sub_20AF95C98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_25463AAE8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_25463AAE8);
  _Unwind_Resume(a1);
}

void sub_20AF95D4C(uint64_t a1, uint64_t a2)
{
  std::string __p;

  if (*(char *)(a2 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20AF95DE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20AF95E04(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F82A0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20AF95E78()
{
  return 38;
}

uint64_t sub_20AF95E80(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20AF95E88@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20AF95EA0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_20AF95F1C(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 48) != 38)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AF96220((uint64_t)&v30, a2);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a2 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_DWORD *)(a2 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a2 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a2 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v23 = *(_WORD *)(a2 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a1 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a1 + 8) = size;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v19;
  *(_DWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v22;
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = v16;
  *(_WORD *)(a1 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20AF961D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20AF96220(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  sub_20AF95B5C();
  v3 = sub_20AF87004();
  v5 = *(_DWORD *)(a2 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)&qword_25463ADC0, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

uint64_t sub_20AF9628C(uint64_t a1, unsigned int *a2)
{
  uint64_t result;
  char v4;
  _DWORD v5[6];
  int v6;
  _QWORD v7[5];
  _QWORD *v8;

  v6 = 0;
  sub_20AF5AD34(v5, "image of pixel format '");
  sub_20AF86710((uint64_t)&v4, (uint64_t)v5, a2);
  v7[0] = v5;
  v7[1] = "' cannot be represented as CVPixelBuffer";
  v7[2] = v5;
  v7[3] = "' cannot be represented as CVPixelBuffer";
  v7[4] = "' cannot be represented as CVPixelBuffer";
  if (v6 == -1)
    sub_20AECFAB8();
  v8 = v7;
  ((void (*)(_QWORD **, _DWORD *))off_24C3F8388[v6])(&v8, v5);
  if (v6 == -1)
    sub_20AECFAB8();
  v7[0] = &v8;
  result = ((uint64_t (*)(_QWORD *, _DWORD *))off_24C3F6808[v6])(v7, v5);
  if (v6 != -1)
    return ((uint64_t (*)(_QWORD *, _DWORD *))off_24C3F6790[v6])(v7, v5);
  return result;
}

void sub_20AF9638C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF963A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF963B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF963C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_20AF963DC(_DWORD ***a1)
{
  return sub_20AF963F8(**a1, (char *)(*a1)[1]);
}

void sub_20AF963E8(uint64_t a1, uint64_t a2)
{
  sub_20AF964E8((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

_DWORD *sub_20AF963F8(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C3F6790[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_20AF964E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24C3F6790[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_20AEC7620((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_20AF9669C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_20AF966E0(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_20AF967D8((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_20AF967D0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_20AF967D8(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20AEC60B8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60CC();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_20AF969D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC65A4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20AF969E8(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

void sub_20AF96A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t **v5;
  __n128 v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  void *v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  uint64_t (***v34)();
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  uint64_t (**v49)();
  uint64_t v50;
  std::__shared_weak_count *v51;
  void *v52;
  unsigned int v53[4];
  char v54;
  uint64_t (**v55)();
  uint64_t v56;
  std::__shared_weak_count *v57;
  uint64_t (***v58)();
  char v59;
  char v60;

  v49 = &off_24C3F6928;
  sub_20AF861C4((uint64_t)&v50, a4);
  v6.n128_f64[0] = sub_20AF84F84((uint64_t)&v55, &v49);
  if (v60)
  {
    v8 = v56;
    v7 = v57;
    if (v57)
    {
      p_shared_owners = (unint64_t *)&v57->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
      do
        v12 = __ldxr(p_shared_owners);
      while (__stxr(v12 + 1, p_shared_owners));
      do
        v13 = __ldaxr(p_shared_owners);
      while (__stlxr(v13 - 1, p_shared_owners));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
        std::__shared_weak_count::__release_weak(v7);
      }
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    if (v60)
    {
      v55 = &off_24C3F6830;
      v15 = v57;
      if (v57)
      {
        v16 = (unint64_t *)&v57->__shared_owners_;
        do
          v17 = __ldaxr(v16);
        while (__stlxr(v17 - 1, v16));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v15->__on_zero_shared)(v15, v6);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
    }
    if (v7)
    {
      v18 = (unint64_t *)&v7->__shared_owners_;
      do
        v19 = __ldxr(v18);
      while (__stxr(v19 + 1, v18));
      do
        v20 = __ldaxr(v18);
      while (__stlxr(v20 - 1, v18));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    sub_20B24F754(v8, v4);
    if (v7)
    {
      v21 = (unint64_t *)&v7->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        v23 = v7;
LABEL_57:
        std::__shared_weak_count::__release_weak(v23);
        goto LABEL_62;
      }
    }
    goto LABEL_62;
  }
  v24 = v52;
  v25 = v50;
  if (v54 && v52)
  {
    v26 = v51;
    if (v51)
    {
      v27 = (unint64_t *)&v51->__shared_owners_;
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 1, v27));
      do
        v29 = __ldaxr(v27);
      while (__stlxr(v29 - 1, v27));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v26->__on_zero_shared)(v26, v6);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *, __n128))(*(_QWORD *)v25 + 88))(v25, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234", v6);
    v24 = v52;
    v25 = v50;
  }
  v30 = v53[3];
  v31 = v51;
  if (v51)
  {
    v32 = (unint64_t *)&v51->__shared_owners_;
    do
      v33 = __ldxr(v32);
    while (__stxr(v33 + 1, v32));
  }
  v55 = &off_24C3F83B0;
  v56 = v25;
  v57 = v31;
  v58 = &v55;
  v59 = 1;
  sub_20B285FD0(v53, 0x4C303038u, v24, v30 | 0x100000000, (uint64_t)&v55, (uint64_t)v4);
  if (v59)
  {
    v34 = v58;
    if (v58 == &v55)
    {
      v35 = 4;
      v34 = &v55;
    }
    else
    {
      if (!v58)
        goto LABEL_48;
      v35 = 5;
    }
    ((void (*)(uint64_t (***)()))(*v34)[v35])(v34);
  }
LABEL_48:
  v36 = **v5;
  v38 = v4[1];
  v37 = v4[2];
  if (*(_BYTE *)(v36 + 152))
  {
    if (v37)
    {
      v39 = (unint64_t *)(v37 + 8);
      do
        v40 = __ldxr(v39);
      while (__stxr(v40 + 1, v39));
    }
    v41 = *(std::__shared_weak_count **)(v36 + 144);
    *(_QWORD *)(v36 + 136) = v38;
    *(_QWORD *)(v36 + 144) = v37;
    if (v41)
    {
      v42 = (unint64_t *)&v41->__shared_owners_;
      do
        v43 = __ldaxr(v42);
      while (__stlxr(v43 - 1, v42));
      if (!v43)
      {
        ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
        v23 = v41;
        goto LABEL_57;
      }
    }
  }
  else
  {
    *(_QWORD *)(v36 + 128) = &off_24C4169B8;
    *(_QWORD *)(v36 + 136) = v38;
    *(_QWORD *)(v36 + 144) = v37;
    if (v37)
    {
      v44 = (unint64_t *)(v37 + 8);
      do
        v45 = __ldxr(v44);
      while (__stxr(v45 + 1, v44));
    }
    *(_BYTE *)(v36 + 152) = 1;
  }
LABEL_62:
  v49 = &off_24C3F6928;
  v46 = v51;
  if (v51)
  {
    v47 = (unint64_t *)&v51->__shared_owners_;
    do
      v48 = __ldaxr(v47);
    while (__stlxr(v48 - 1, v47));
    if (!v48)
    {
      ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
      std::__shared_weak_count::__release_weak(v46);
    }
  }
}

void sub_20AF99A80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  unint64_t *p_shared_owners;
  unint64_t v25;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v25 = __ldaxr(p_shared_owners);
    while (__stlxr(v25 - 1, p_shared_owners));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20AF9A3DC(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F83B0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF9A450(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F83B0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20AF9A4C4(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24C3F83B0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_20AF9A514(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24C3F83B0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_20AF9A544(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20AF9A59C(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(__p);
  }
  else
  {
LABEL_5:
    operator delete(__p);
  }
}

void sub_20AF9A604(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

uint64_t sub_20AF9A660(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE1ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE1ENSL_13DynamicBufferELNSL_1"
                                "0MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE1ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE1ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20AF9A6CC()
{
  return &unk_24C3F8420;
}

_QWORD *sub_20AF9A6D8(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F8440;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF9A74C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F8440;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20AF9A7C0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24C3F8440;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_20AF9A810(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24C3F8440;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_20AF9A840(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20AF9A898(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(__p);
  }
  else
  {
LABEL_5:
    operator delete(__p);
  }
}

void sub_20AF9A900(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

uint64_t sub_20AF9A95C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE2ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE2ENSL_13DynamicBufferELNSL_1"
                                "0MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE2ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE2ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20AF9A9C8()
{
  return &unk_24C3F84A0;
}

_QWORD *sub_20AF9A9D4(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F84C0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF9AA48(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F84C0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20AF9AABC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24C3F84C0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_20AF9AB0C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24C3F84C0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_20AF9AB3C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20AF9AB94(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(__p);
  }
  else
  {
LABEL_5:
    operator delete(__p);
  }
}

void sub_20AF9ABFC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

uint64_t sub_20AF9AC58(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE3ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE3ENSL_13DynamicBufferELNSL_1"
                                "0MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE3ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE3ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20AF9ACC4()
{
  return &unk_24C3F8520;
}

_QWORD *sub_20AF9ACD0(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F8540;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF9AD44(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F8540;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20AF9ADB8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24C3F8540;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_20AF9AE08(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24C3F8540;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_20AF9AE38(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20AF9AE90(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(__p);
  }
  else
  {
LABEL_5:
    operator delete(__p);
  }
}

void sub_20AF9AEF8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

uint64_t sub_20AF9AF54(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE4ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE4ENSL_13DynamicBufferELNSL_1"
                                "0MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE4ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE4ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20AF9AFC0()
{
  return &unk_24C3F85A0;
}

_QWORD *sub_20AF9AFCC(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F85C0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF9B040(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F85C0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20AF9B0B4(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24C3F85C0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_20AF9B104(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24C3F85C0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_20AF9B134(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20AF9B18C(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(__p);
  }
  else
  {
LABEL_5:
    operator delete(__p);
  }
}

void sub_20AF9B1F4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

uint64_t sub_20AF9B250(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE5ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE5ENSL_13DynamicBufferELNSL_1"
                                "0MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE5ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE5ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20AF9B2BC()
{
  return &unk_24C3F8620;
}

_QWORD *sub_20AF9B2C8(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F8640;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF9B33C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F8640;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20AF9B3B0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24C3F8640;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_20AF9B400(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24C3F8640;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_20AF9B430(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20AF9B488(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(__p);
  }
  else
  {
LABEL_5:
    operator delete(__p);
  }
}

void sub_20AF9B4F0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

uint64_t sub_20AF9B54C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE7ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE7ENSL_13DynamicBufferELNSL_1"
                                "0MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE7ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE7ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20AF9B5B8()
{
  return &unk_24C3F86A0;
}

_QWORD *sub_20AF9B5C4(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F86C0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF9B638(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F86C0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20AF9B6AC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24C3F86C0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_20AF9B6FC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24C3F86C0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_20AF9B72C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20AF9B784(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(__p);
  }
  else
  {
LABEL_5:
    operator delete(__p);
  }
}

void sub_20AF9B7EC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

uint64_t sub_20AF9B848(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE8ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE8ENSL_13DynamicBufferELNSL_1"
                                "0MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE8ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE8ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20AF9B8B4()
{
  return &unk_24C3F8720;
}

_QWORD *sub_20AF9B8C0(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F8740;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF9B934(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F8740;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20AF9B9A8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24C3F8740;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_20AF9B9F8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24C3F8740;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_20AF9BA28(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20AF9BA80(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(__p);
  }
  else
  {
LABEL_5:
    operator delete(__p);
  }
}

void sub_20AF9BAE8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

uint64_t sub_20AF9BB44(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE21ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE21ENSL_13DynamicBufferELNSL_"
                                "10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE21ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE21ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20AF9BBB0()
{
  return &unk_24C3F87A0;
}

_QWORD *sub_20AF9BBBC(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F87C0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF9BC30(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F87C0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20AF9BCA4(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24C3F87C0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_20AF9BCF4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24C3F87C0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_20AF9BD24(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20AF9BD7C(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(__p);
  }
  else
  {
LABEL_5:
    operator delete(__p);
  }
}

void sub_20AF9BDE4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

uint64_t sub_20AF9BE40(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE22ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE22ENSL_13DynamicBufferELNSL_"
                                "10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE22ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE22ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20AF9BEAC()
{
  return &unk_24C3F8820;
}

_QWORD *sub_20AF9BEB8(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F8840;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF9BF2C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F8840;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20AF9BFA0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24C3F8840;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_20AF9BFF0(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24C3F8840;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_20AF9C020(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20AF9C078(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(__p);
  }
  else
  {
LABEL_5:
    operator delete(__p);
  }
}

void sub_20AF9C0E0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

uint64_t sub_20AF9C13C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE25ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE25ENSL_13DynamicBufferELNSL_"
                                "10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE25ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE25ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20AF9C1A8()
{
  return &unk_24C3F88A0;
}

_QWORD *sub_20AF9C1B4(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F88C0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF9C228(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F88C0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20AF9C29C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24C3F88C0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_20AF9C2EC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24C3F88C0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_20AF9C31C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20AF9C374(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(__p);
  }
  else
  {
LABEL_5:
    operator delete(__p);
  }
}

void sub_20AF9C3DC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

uint64_t sub_20AF9C438(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE31ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE31ENSL_13DynamicBufferELNSL_"
                                "10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE31ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE31ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20AF9C4A4()
{
  return &unk_24C3F8920;
}

_QWORD *sub_20AF9C4B0(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C3F8940;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20AF9C524(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C3F8940;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

