void sub_20B280EC4(uint64_t *a1)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  BOOL v7;
  int v9;
  uint64_t v10;
  uint64_t *v11;
  _DWORD *v12;
  _DWORD v13[7];

  v2 = *a1;
  v3 = *(_DWORD *)(v2 + 20);
  if (v3 == 1)
  {
    if (*(_DWORD *)(v2 + 24) == *(_DWORD *)(v2 + 8))
      sub_20B2807A8((uint64_t)a1);
    else
      sub_20B280BB8(v2, a1[1]);
  }
  else
  {
    v10 = a1[1];
    v5 = *(_DWORD *)(v2 + 8);
    v4 = *(_DWORD *)(v2 + 12);
    v6 = *(_DWORD *)(v2 + 16);
    if (v5)
      v7 = v4 == 0;
    else
      v7 = 1;
    if (!v7 && v6 != 0)
    {
      v11 = &v10;
      v13[0] = 0;
      v13[1] = v5 - 1;
      v13[2] = v3;
      v13[3] = v4 - 1;
      v9 = *(_DWORD *)(v2 + 28);
      v13[4] = *(_DWORD *)(v2 + 24);
      v13[5] = v6 - 1;
      v13[6] = v9;
      v12 = *(_DWORD **)v2;
      sub_20B280F80(v13, &v11, &v12);
    }
  }
}

float sub_20B280F80(_DWORD *a1, _QWORD **a2, _DWORD **a3)
{
  _DWORD *v3;
  int v4;
  int v5;
  _DWORD *v6;
  uint64_t v7;
  int v8;
  _DWORD *v9;
  uint64_t v10;
  _DWORD *v11;
  int v12;
  uint64_t v13;
  float result;

  v3 = *a3;
  v4 = a1[5];
  if (!v4)
  {
    v5 = a1[3];
    v6 = (_DWORD *)**a2;
    if (!v5)
      goto LABEL_13;
    goto LABEL_9;
  }
  v5 = a1[3];
  v6 = (_DWORD *)**a2;
  v7 = a1[6];
  if (v5)
  {
    v8 = 0;
    v9 = v3 + 2;
    v10 = 4 * a1[4];
    do
    {
      v11 = v9;
      v12 = v5;
      do
      {
        *(v11 - 2) = *v6;
        *(v11 - 1) = *v6;
        *v11 = *v6;
        v11[1] = *v6;
        v11 = (_DWORD *)((char *)v11 + v10);
        --v12;
      }
      while (v12);
      *(v11 - 2) = *v6;
      *(v11 - 1) = *v6;
      *v11 = *v6;
      v11[1] = *v6;
      v3 += v7;
      ++v8;
      v9 += v7;
    }
    while (v8 != v4);
LABEL_9:
    v13 = 4 * a1[4];
    do
    {
      *v3 = *v6;
      v3[1] = *v6;
      v3[2] = *v6;
      v3[3] = *v6;
      v3 = (_DWORD *)((char *)v3 + v13);
      --v5;
    }
    while (v5);
    goto LABEL_13;
  }
  do
  {
    *v3 = *v6;
    v3[1] = *v6;
    v3[2] = *v6;
    v3[3] = *v6;
    v3 += v7;
    --v4;
  }
  while (v4);
LABEL_13:
  *v3 = *v6;
  v3[1] = *v6;
  v3[2] = *v6;
  result = *(float *)v6;
  v3[3] = *v6;
  return result;
}

void sub_20B2810C4()
{
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B2810D8(uint64_t a1, int a2)
{
  __asm { BR              X12 }
}

uint64_t sub_20B28112C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t *v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (**v11)();
  int v12;
  _BYTE v13[24];
  unsigned int v14;
  __int128 v15;
  _QWORD v16[18];

  if (a3 <= 0x20)
    v5 = 32;
  else
    v5 = a3;
  v11 = (void (**)())off_24C414F70;
  if (v3)
    v6 = v5;
  else
    v6 = 32;
  v16[0] = a3;
  v16[1] = ((_DWORD)a3 != 0) | (unint64_t)(v6 << 32);
  sub_20B24ED6C((uint64_t)&v11, 0, 1, (unsigned int *)v16, 0);
  v11 = (void (**)())off_24C414F70;
  result = operator new();
  v8 = result;
  *(_QWORD *)result = off_24C414820;
  v9 = v14;
  *(_DWORD *)(result + 8) = v12;
  *(_BYTE *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = -1;
  if ((_DWORD)v9 == -1)
  {
    *(_OWORD *)(result + 48) = v15;
    *(_QWORD *)result = off_24C414F70;
  }
  else
  {
    result = ((uint64_t (*)(_QWORD *, uint64_t, _BYTE *))off_24C415B00[v9])(v16, result + 16, v13);
    *(_DWORD *)(v8 + 40) = v9;
    v10 = v14;
    *(_OWORD *)(v8 + 48) = v15;
    *(_QWORD *)v8 = off_24C414F70;
    v11 = off_24C414820;
    if ((_DWORD)v10 != -1)
      result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24C415AE0[v10])(v16, v13);
  }
  *v4 = v8;
  return result;
}

void sub_20B282470()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)&unk_20B5A99AE, 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B2824A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B282BC4(uint64_t a1, int a2)
{
  __asm { BR              X12 }
}

uint64_t sub_20B282C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)();
  int v11;
  _BYTE v12[24];
  unsigned int v13;
  __int128 v14;
  _QWORD v15[16];

  if (v3)
    v5 = a3 << 32;
  else
    v5 = 0;
  v15[0] = a3;
  v15[1] = v5 | ((_DWORD)a3 != 0);
  sub_20B2647A4((uint64_t)&v10, (uint64_t)v15);
  result = operator new();
  v7 = result;
  *(_QWORD *)result = off_24C414820;
  v8 = v13;
  *(_DWORD *)(result + 8) = v11;
  *(_BYTE *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    *(_OWORD *)(result + 48) = v14;
    *(_QWORD *)result = off_24C414F70;
  }
  else
  {
    result = ((uint64_t (*)(_QWORD *, uint64_t, _BYTE *))off_24C415B00[v8])(v15, result + 16, v12);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = v13;
    *(_OWORD *)(v7 + 48) = v14;
    *(_QWORD *)v7 = off_24C414F70;
    v10 = off_24C414820;
    if ((_DWORD)v9 != -1)
      result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24C415AE0[v9])(v15, v12);
  }
  *v4 = v7;
  return result;
}

void sub_20B283C78()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)&unk_20B5A99AE, 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B283CAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B2840B4(unsigned int *a1@<X0>, unsigned int a2@<W1>, uint64_t *a3@<X2>, unsigned int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  std::__shared_weak_count *v11;
  CFMutableDictionaryRef v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  void *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  __int128 v36;
  unsigned int v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *value[2];

  v37 = a2;
  v39 = 0;
  v40 = 0;
  v38 = (uint64_t)&v39;
  sub_20B4F51B8(&v38, value);
  *(_OWORD *)a6 = *(_OWORD *)value;
  sub_20AEC833C((uint64_t)&v38, v39);
  sub_20B284E34(a6, (const void *)*MEMORY[0x24BDC56B8], &v37);
  v38 = *a1;
  sub_20B284FA0(a6, (const void *)*MEMORY[0x24BDC5708], &v38);
  value[0] = (void *)a1[1];
  sub_20B284FA0(a6, (const void *)*MEMORY[0x24BDC5650], (uint64_t *)value);
  if (a4 > 1)
    goto LABEL_43;
  v39 = 0;
  v40 = 0;
  v38 = (uint64_t)&v39;
  sub_20B4F51B8(&v38, value);
  v36 = *(_OWORD *)value;
  sub_20AEC833C((uint64_t)&v38, v39);
  sub_20B4EC7A8((uint64_t)&v36, a3);
  v12 = *(CFMutableDictionaryRef *)a6;
  v11 = *(std::__shared_weak_count **)(a6 + 8);
  if (!v11)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldxr(p_shared_owners);
  while (__stxr(v14 + 1, p_shared_owners));
  do
    v15 = __ldaxr(p_shared_owners);
  while (__stlxr(v15 - 1, p_shared_owners));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    if (!v12)
      goto LABEL_36;
  }
  else
  {
LABEL_7:
    if (!v12)
      goto LABEL_36;
  }
  sub_20B284A78(&v38, (uint64_t)&v36);
  v16 = (void *)v38;
  v17 = (std::__shared_weak_count *)v39;
  if (v39)
  {
    v18 = (unint64_t *)(v39 + 8);
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    value[0] = v16;
    value[1] = v17;
    do
      v20 = __ldxr(v18);
    while (__stxr(v20 + 1, v18));
    do
      v21 = __ldaxr(v18);
    while (__stlxr(v21 - 1, v18));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  else
  {
    value[0] = (void *)v38;
    value[1] = 0;
  }
  v22 = (std::__shared_weak_count *)v39;
  if (v39)
  {
    v23 = (unint64_t *)(v39 + 8);
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  v26 = value[0];
  v25 = (std::__shared_weak_count *)value[1];
  if (value[1])
  {
    v27 = (unint64_t *)((char *)value[1] + 8);
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
    do
      v29 = __ldaxr(v27);
    while (__stlxr(v29 - 1, v27));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
      if (!v26)
        goto LABEL_31;
      goto LABEL_30;
    }
  }
  if (v26)
LABEL_30:
    CFDictionarySetValue(*(CFMutableDictionaryRef *)a6, (const void *)*MEMORY[0x24BDC5668], value[0]);
LABEL_31:
  v30 = (std::__shared_weak_count *)value[1];
  if (value[1])
  {
    v31 = (unint64_t *)((char *)value[1] + 8);
    do
      v32 = __ldaxr(v31);
    while (__stlxr(v32 - 1, v31));
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
  }
LABEL_36:
  v33 = (std::__shared_weak_count *)*((_QWORD *)&v36 + 1);
  if (!*((_QWORD *)&v36 + 1))
    goto LABEL_40;
  v34 = (unint64_t *)(*((_QWORD *)&v36 + 1) + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_40:
    if (a4)
      goto LABEL_43;
    goto LABEL_41;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (!a4)
  {
LABEL_41:
    v38 = 0x4000;
    sub_20B284FA0(a6, (const void *)*MEMORY[0x24BDC56C8], &v38);
  }
LABEL_43:
  if (*(_BYTE *)(a5 + 8))
    sub_20B284FA0(a6, (const void *)*MEMORY[0x24BDC55D0], (uint64_t *)a5);
}

void sub_20B2843EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

void sub_20B284400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t v15;

  sub_20AEC147C((uint64_t)&a15);
  sub_20AEC147C((uint64_t)&a9);
  sub_20AEC147C(v15);
  _Unwind_Resume(a1);
}

void sub_20B284430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  uint64_t v13;

  sub_20AEC833C((uint64_t)&a12, a13);
  sub_20AEC147C(v13);
  _Unwind_Resume(a1);
}

void sub_20B284450(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

void sub_20B284464(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

void sub_20B284478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  sub_20AEC833C((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_20B284490(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

void sub_20B2844A4(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  std::__shared_weak_count *v4;
  CFDictionaryRef v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  const void *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  _BYTE v14[8];
  std::__shared_weak_count *v15;
  char v16;

  v5 = *(CFDictionaryRef *)a1;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      if (v5)
        goto LABEL_7;
LABEL_18:
      *a2 = 0;
      a2[16] = 0;
      return;
    }
  }
  if (!v5)
    goto LABEL_18;
LABEL_7:
  v9 = (const void *)*MEMORY[0x24BDC5668];
  *(_QWORD *)&v13 = 0;
  if (!v9)
    goto LABEL_18;
  if (!CFDictionaryGetValueIfPresent(*(CFDictionaryRef *)a1, v9, (const void **)&v13))
    goto LABEL_18;
  sub_20B284C10((const void *)v13, (uint64_t)v14);
  if (!v16)
    goto LABEL_18;
  sub_20B284824(&v13, (uint64_t)v14);
  *(_OWORD *)a2 = v13;
  a2[16] = 1;
  if (v16)
  {
    v10 = v15;
    if (v15)
    {
      v11 = (unint64_t *)&v15->__shared_owners_;
      do
        v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
}

void sub_20B2845D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B2845E8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2845E8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  if (*(_BYTE *)(result + 16))
  {
    v2 = *(std::__shared_weak_count **)(result + 8);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
        return v1;
      }
    }
  }
  return result;
}

BOOL sub_20B284658(const void **a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  const void *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  CFTypeRef v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  const void *v14;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  CFTypeRef v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;

  v5 = *a1;
  v4 = (std::__shared_weak_count *)a1[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      if (v5)
        goto LABEL_7;
LABEL_15:
      v14 = *a1;
      goto LABEL_16;
    }
  }
  if (!v5)
    goto LABEL_15;
LABEL_7:
  v10 = *(CFTypeRef *)a2;
  v9 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v9)
    goto LABEL_12;
  v11 = (unint64_t *)&v9->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    v14 = *a1;
    if (v10)
      return CFEqual(v14, *(CFTypeRef *)a2) != 0;
  }
  else
  {
LABEL_12:
    v14 = *a1;
    if (v10)
      return CFEqual(v14, *(CFTypeRef *)a2) != 0;
  }
LABEL_16:
  v16 = (std::__shared_weak_count *)a1[1];
  if (!v16)
    goto LABEL_21;
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    if (v14)
      return 0;
  }
  else
  {
LABEL_21:
    if (v14)
      return 0;
  }
  v21 = *(CFTypeRef *)a2;
  v20 = *(std::__shared_weak_count **)(a2 + 8);
  if (!v20)
    return v21 == 0;
  v22 = (unint64_t *)&v20->__shared_owners_;
  do
    v23 = __ldxr(v22);
  while (__stxr(v23 + 1, v22));
  do
    v24 = __ldaxr(v22);
  while (__stlxr(v24 - 1, v22));
  if (v24)
    return v21 == 0;
  ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
  std::__shared_weak_count::__release_weak(v20);
  return v21 == 0;
}

_QWORD *sub_20B284824(_QWORD *a1, uint64_t a2)
{
  const void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v4 = *(const void **)a2;
  v5 = *(std::__shared_weak_count **)(a2 + 8);
  v17 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_20B284934(&v18, v4);
  v8 = v19;
  *a1 = v18;
  a1[1] = v8;
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    v11 = v19;
    if (v19)
    {
      v12 = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  if (!v17)
    return a1;
  v14 = (unint64_t *)&v17->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
    return a1;
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  return a1;
}

void sub_20B284920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AEC147C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B284934(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_24C416928;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_20B284994(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B2849AC(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_20B2849C4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B2849E8(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_20B284A08(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP14__CFDictionaryEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP14__CFDictionaryEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP14__CFDictionaryEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP14__CFDictionaryEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_20B284A78(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  CFTypeRef v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v3 = *(std::__shared_weak_count **)(a2 + 8);
  v16 = *(CFTypeRef *)a2;
  v17 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_20B284B84(&v18, &v16);
  v6 = v19;
  *a1 = v18;
  a1[1] = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
    v9 = v19;
    if (v19)
    {
      v10 = (unint64_t *)&v19->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  v12 = v17;
  if (!v17)
    return a1;
  v13 = (unint64_t *)&v17->__shared_owners_;
  do
    v14 = __ldaxr(v13);
  while (__stlxr(v14 - 1, v13));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  return a1;
}

void sub_20B284B70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AEC147C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B284B84(_QWORD *a1, CFTypeRef *a2)
{
  CFTypeRef v3;
  _QWORD *v4;

  v3 = *a2;
  if (*a2)
    CFRetain(*a2);
  *a1 = v3;
  v4 = (_QWORD *)operator new();
  *v4 = &off_24C3F2C60;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = v3;
  a1[1] = v4;
  return a1;
}

void sub_20B284BE4(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B284BFC(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_20B284C10(const void *a1@<X0>, uint64_t a2@<X8>)
{
  CFTypeID TypeID;
  const void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  const void *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  const void *v25;
  std::__shared_weak_count *v26;

  if (a1 && (TypeID = CFDictionaryGetTypeID(), CFGetTypeID(a1) == TypeID))
  {
    sub_20B284934(&v25, a1);
    v5 = v25;
    v6 = v26;
    v24 = v26;
    if (v26)
    {
      p_shared_owners = (unint64_t *)&v26->__shared_owners_;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
    }
    sub_20B284934(&v25, v5);
    v10 = v25;
    v9 = v26;
    if (v26)
    {
      v11 = (unint64_t *)&v26->__shared_owners_;
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 1, v11));
      v13 = v26;
      if (v26)
      {
        v14 = (unint64_t *)&v26->__shared_owners_;
        do
          v15 = __ldaxr(v14);
        while (__stlxr(v15 - 1, v14));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      do
        v16 = __ldxr(v11);
      while (__stxr(v16 + 1, v11));
      *(_QWORD *)a2 = v10;
      *(_QWORD *)(a2 + 8) = v9;
      do
        v17 = __ldxr(v11);
      while (__stxr(v17 + 1, v11));
      do
        v18 = __ldaxr(v11);
      while (__stlxr(v18 - 1, v11));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
      do
        v19 = __ldaxr(v11);
      while (__stlxr(v19 - 1, v11));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
    else
    {
      *(_QWORD *)a2 = v25;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_BYTE *)(a2 + 16) = 1;
    if (v6)
    {
      v20 = (unint64_t *)&v6->__shared_owners_;
      do
        v21 = __ldaxr(v20);
      while (__stlxr(v21 - 1, v20));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    if (v24)
    {
      v22 = (unint64_t *)&v24->__shared_owners_;
      do
        v23 = __ldaxr(v22);
      while (__stlxr(v23 - 1, v22));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
        std::__shared_weak_count::__release_weak(v24);
      }
    }
  }
  else
  {
    *(_BYTE *)a2 = 0;
    *(_BYTE *)(a2 + 16) = 0;
  }
}

void sub_20B284E18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_20AEC147C((uint64_t)va);
  sub_20B2845E8((uint64_t)va1);
  _Unwind_Resume(a1);
}

BOOL sub_20B284E34(uint64_t a1, const void *a2, unsigned int *a3)
{
  std::__shared_weak_count *v6;
  CFMutableDictionaryRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  void *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  _BOOL8 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  void *value;
  std::__shared_weak_count *v22;
  unsigned int v23;

  v7 = *(CFMutableDictionaryRef *)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
      if (v7)
        goto LABEL_7;
      return 0;
    }
  }
  if (!v7)
    return 0;
LABEL_7:
  v23 = *a3;
  sub_20B4EDFF8(&v23, (CFNumberRef *)&value);
  v12 = value;
  v11 = v22;
  if (v22)
  {
    v13 = (unint64_t *)&v22->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
      v16 = v12 != 0;
      if (!v12)
        goto LABEL_14;
      goto LABEL_13;
    }
  }
  v16 = v12 != 0;
  if (v12)
LABEL_13:
    CFDictionarySetValue(*(CFMutableDictionaryRef *)a1, a2, value);
LABEL_14:
  v17 = v22;
  if (v22)
  {
    v18 = (unint64_t *)&v22->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  return v16;
}

void sub_20B284F8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC147C((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_20B284FA0(uint64_t a1, const void *a2, uint64_t *a3)
{
  std::__shared_weak_count *v6;
  CFMutableDictionaryRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  void *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  _BOOL8 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  void *value;
  std::__shared_weak_count *v22;

  v7 = *(CFMutableDictionaryRef *)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
      if (v7)
        goto LABEL_7;
      return 0;
    }
  }
  if (!v7)
    return 0;
LABEL_7:
  sub_20B4EE0FC(a3, (CFNumberRef *)&value);
  v12 = value;
  v11 = v22;
  if (v22)
  {
    v13 = (unint64_t *)&v22->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
      v16 = v12 != 0;
      if (!v12)
        goto LABEL_14;
      goto LABEL_13;
    }
  }
  v16 = v12 != 0;
  if (v12)
LABEL_13:
    CFDictionarySetValue(*(CFMutableDictionaryRef *)a1, a2, value);
LABEL_14:
  v17 = v22;
  if (v22)
  {
    v18 = (unint64_t *)&v22->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  return v16;
}

void sub_20B2850F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AEC147C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B285104(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (!v3)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v4)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 233, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AA36F, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    return CVPixelBufferGetPixelFormatType(0);
  v9 = *(__CVBuffer **)v8;
  v10 = *(std::__shared_weak_count **)(v8 + 8);
  if (!v10)
    return CVPixelBufferGetPixelFormatType(v9);
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return CVPixelBufferGetPixelFormatType(v9);
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return CVPixelBufferGetPixelFormatType(v9);
}

uint64_t sub_20B28523C(uint64_t a1, unsigned int a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t **v16;
  uint64_t *v17;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 250, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AA36F, 0, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_18;
  }
LABEL_9:
  v15 = *(_QWORD *)(a1 + 8);
  v10 = v15;
  v11 = atomic_load((unint64_t *)(v15 + 104));
  if (v11 != -1)
  {
    v17 = &v15;
    v16 = &v17;
    std::__call_once((std::once_flag::_State_type *)(v15 + 104), &v16, (void (__cdecl *)(void *))sub_20B288BE8);
  }
  if (a2 >= (unint64_t)((uint64_t)(*(_QWORD *)(v10 + 120) - *(_QWORD *)(v10 + 112)) >> 3)
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 251, (uint64_t)"idx < p_->GetCachedBaseAddress().size()", 39, (uint64_t)&unk_20B5AA36F, 0, (void (*)(void **))sub_20B532360))
  {
LABEL_18:
    abort();
  }
  v12 = *(_QWORD *)(a1 + 8);
  v15 = v12;
  v13 = atomic_load((unint64_t *)(v12 + 104));
  if (v13 != -1)
  {
    v17 = &v15;
    v16 = &v17;
    std::__call_once((std::once_flag::_State_type *)(v12 + 104), &v16, (void (__cdecl *)(void *))sub_20B288BE8);
  }
  return *(_QWORD *)(*(_QWORD *)(v12 + 112) + 8 * a2);
}

_QWORD *sub_20B2853C0(_QWORD *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;

  v3 = *(uint64_t **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *a1 = &off_24C4169B8;
  a1[1] = v3;
  a1[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v3 = (uint64_t *)a1[1];
  }
  *a1 = &off_24C416978;
  if (v3)
  {
    v8 = *v3;
    v7 = (std::__shared_weak_count *)v3[1];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
        if (!v8)
          return a1;
        goto LABEL_12;
      }
    }
    if (v8)
LABEL_12:
      sub_20B289920(a1[1]);
  }
  return a1;
}

void sub_20B285484(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  *v1 = v2;
  v4 = (std::__shared_weak_count *)v1[2];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B2854CC(_QWORD *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;

  v3 = *(uint64_t **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *a1 = &off_24C4169B8;
  a1[1] = v3;
  a1[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v3 = (uint64_t *)a1[1];
  }
  *a1 = &off_24C416978;
  if (v3)
  {
    v8 = *v3;
    v7 = (std::__shared_weak_count *)v3[1];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
        if (!v8)
          return a1;
        goto LABEL_12;
      }
    }
    if (v8)
LABEL_12:
      sub_20B289920(a1[1]);
  }
  return a1;
}

void sub_20B285590(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  *v1 = v2;
  v4 = (std::__shared_weak_count *)v1[2];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B2855D8(_QWORD *a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  v2 = (uint64_t *)a1[1];
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
        if (!v4)
          goto LABEL_9;
        goto LABEL_8;
      }
    }
    if (v4)
LABEL_8:
      sub_20B289AFC(a1[1]);
  }
LABEL_9:
  *a1 = &off_24C4169B8;
  v8 = (std::__shared_weak_count *)a1[2];
  if (!v8)
    return a1;
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
    return a1;
  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  return a1;
}

void sub_20B2856C4(_QWORD *a1)
{
  sub_20B2855D8(a1);
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B2856E8(_QWORD *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;

  v3 = *(uint64_t **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *a1 = &off_24C4169B8;
  a1[1] = v3;
  a1[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v3 = (uint64_t *)a1[1];
  }
  *a1 = &off_24C416998;
  if (v3)
  {
    v8 = *v3;
    v7 = (std::__shared_weak_count *)v3[1];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
        if (!v8)
          return a1;
        goto LABEL_12;
      }
    }
    if (v8)
LABEL_12:
      sub_20B289A10(a1[1]);
  }
  return a1;
}

void sub_20B2857AC(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  *v1 = v2;
  v4 = (std::__shared_weak_count *)v1[2];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B2857F4(_QWORD *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;

  v3 = *(uint64_t **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *a1 = &off_24C4169B8;
  a1[1] = v3;
  a1[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v3 = (uint64_t *)a1[1];
  }
  *a1 = &off_24C416998;
  if (v3)
  {
    v8 = *v3;
    v7 = (std::__shared_weak_count *)v3[1];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
        if (!v8)
          return a1;
        goto LABEL_12;
      }
    }
    if (v8)
LABEL_12:
      sub_20B289A10(a1[1]);
  }
  return a1;
}

void sub_20B2858B8(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  *v1 = v2;
  v4 = (std::__shared_weak_count *)v1[2];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B285900(_QWORD *a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  v2 = (uint64_t *)a1[1];
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
        if (!v4)
          goto LABEL_9;
        goto LABEL_8;
      }
    }
    if (v4)
LABEL_8:
      sub_20B289BEC(a1[1]);
  }
LABEL_9:
  *a1 = &off_24C4169B8;
  v8 = (std::__shared_weak_count *)a1[2];
  if (!v8)
    return a1;
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
    return a1;
  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  return a1;
}

void sub_20B2859EC(_QWORD *a1)
{
  sub_20B285900(a1);
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B285A10(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_24C416BA8;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_20B285A70(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B285A88(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

_QWORD *sub_20B285A9C(_QWORD *a1, std::__shared_weak_count_vtbl *cf, int a3, int a4)
{
  std::__shared_weak_count *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  __int128 v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v28;

  if (a3 && cf)
    CFRetain(cf);
  v7 = (std::__shared_weak_count *)operator new();
  v8 = v7;
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24C416B48;
  v7->__shared_weak_owners_ = 0;
  v7[1].__vftable = cf;
  v28 = v7;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v8);
  }
  if (v28)
  {
    v12 = (unint64_t *)&v28->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  *a1 = &off_24C4169B8;
  v14 = (char *)operator new(0xA0uLL);
  v15 = v14;
  *((_QWORD *)v14 + 1) = 0;
  *((_QWORD *)v14 + 2) = 0;
  *(_QWORD *)v14 = &off_24C416A68;
  v16 = v14 + 24;
  if (v28)
  {
    v17 = (unint64_t *)&v28->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    *((_QWORD *)v14 + 3) = cf;
    *((_QWORD *)v14 + 4) = v28;
    do
      v19 = __ldxr(v17);
    while (__stxr(v19 + 1, v17));
  }
  else
  {
    *((_QWORD *)v14 + 3) = cf;
    *((_QWORD *)v14 + 4) = 0;
  }
  *((_DWORD *)v14 + 10) = a4;
  *((_QWORD *)v14 + 6) = a4 == 1;
  *((_QWORD *)v14 + 7) = a4 == 2;
  *((_QWORD *)v14 + 8) = 850045863;
  v20 = 0uLL;
  *(_OWORD *)(v14 + 72) = 0u;
  *(_OWORD *)(v14 + 88) = 0u;
  *(_OWORD *)(v14 + 104) = 0u;
  *((_QWORD *)v14 + 15) = 0;
  if (v28)
  {
    v21 = (unint64_t *)&v28->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
      v20 = 0uLL;
    }
  }
  *((_OWORD *)v15 + 8) = v20;
  *((_OWORD *)v15 + 9) = v20;
  a1[1] = v16;
  a1[2] = v15;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v28)
  {
    v25 = (unint64_t *)&v28->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  return a1;
}

void sub_20B285CE4(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B285CF8()
{
  __break(1u);
}

void sub_20B285D24()
{
  __cxa_end_catch();
  JUMPOUT(0x20B285D2CLL);
}

void sub_20B285D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_20AEC147C((uint64_t)&a11);
  sub_20AEC147C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B285D54(uint64_t a1, unsigned int *a2, unsigned int a3, uint64_t *a4, uint64_t a5)
{
  std::runtime_error *exception;
  int *v8;
  std::string v9;
  uint64_t (**v10)(_QWORD);
  __int128 v11;
  char v12;

  sub_20B2870EC(a2, a3, a4, a5, (uint64_t)&v10);
  if (!v12)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v8 = (int *)sub_20B286934((uint64_t)&v10);
    sub_20B2877EC("Failed to create CVPixelBuffer: ", v8);
    std::runtime_error::runtime_error(exception, &v9);
    __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  *(_QWORD *)a1 = &off_24C4169B8;
  *(_OWORD *)(a1 + 8) = v11;
  v11 = 0uLL;
  return (*v10)(&v10);
}

void sub_20B285E20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
    {
LABEL_6:
      sub_20B286974((uint64_t)&a15);
      _Unwind_Resume(a1);
    }
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

_QWORD *sub_20B285E60(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C4169B8;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_20B285ED4(uint64_t a1, unsigned int *a2, unsigned int a3, uint64_t *a4, unsigned int a5)
{
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _BYTE v13[16];
  __int128 v14;
  _BYTE v15[24];

  v13[0] = 0;
  v13[8] = 0;
  sub_20B2840B4(a2, a3, a4, a5, (uint64_t)v13, (uint64_t)v15);
  v14 = *(_OWORD *)v15;
  sub_20B285D54((uint64_t)v15, a2, a3, a4, (uint64_t)&v14);
  *(_QWORD *)a1 = &off_24C4169B8;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)&v15[8];
  v9 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (!*((_QWORD *)&v14 + 1))
    return a1;
  v10 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_20B285FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AEC147C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B285FD0@<X0>(unsigned int *a1@<X0>, OSType a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  void *p_p;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  int v18;
  CVReturn v19;
  int v20;
  void *v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  std::string::size_type v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  char *v30;
  char *v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  std::__shared_weak_count *size;
  unint64_t *v37;
  unint64_t v38;
  std::runtime_error *exception;
  int *v40;
  uint64_t (**v41)();
  _BYTE v42[23];
  char v43;
  char v44;
  std::string::size_type v45;
  void *__p;
  uint64_t v47;
  unsigned __int8 v48;
  _DWORD v49[8];
  OSType pixelFormatType;
  char v51;
  _DWORD v52[6];
  int v53;
  std::string v54;
  const char *v55;
  const char *v56;
  std::string *v57;
  _QWORD v58[3];
  _QWORD *v59;
  char v60;
  uint64_t v61;

  v61 = *MEMORY[0x24BDAC8D0];
  LOBYTE(v58[0]) = 0;
  v60 = 0;
  if (*(_BYTE *)(a5 + 32))
  {
    v11 = *(_QWORD *)(a5 + 24);
    if (v11)
    {
      if (v11 == a5)
      {
        v59 = v58;
        (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a5 + 24))(a5, v58);
        goto LABEL_7;
      }
      v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11);
    }
    v59 = (_QWORD *)v11;
LABEL_7:
    v60 = 1;
  }
  pixelFormatType = a2;
  if (sub_20B27E06C(a2) >= 2)
  {
    v53 = 0;
    sub_20B001C20(v52, "MakeViewPixelBuffer");
    v54.__r_.__value_.__r.__words[0] = (std::string::size_type)v52;
    v54.__r_.__value_.__l.__size_ = (std::string::size_type)" cannot be used to create a planar view CVPixelBufferRef, bu"
                                                            "t given format is planar ";
    v54.__r_.__value_.__r.__words[2] = (std::string::size_type)v52;
    v55 = " cannot be used to create a planar view CVPixelBufferRef, but given format is planar ";
    v56 = " cannot be used to create a planar view CVPixelBufferRef, but given format is planar ";
    if (v53 == -1)
      sub_20AECFAB8();
    v57 = &v54;
    ((void (*)(std::string **, _DWORD *))off_24C416B20[v53])(&v57, v52);
    sub_20AF80CB8((uint64_t)&v54, (uint64_t)v52, &pixelFormatType);
    if (v53 == -1)
      sub_20AECFAB8();
    v54.__r_.__value_.__r.__words[0] = (std::string::size_type)&v57;
    ((void (*)(void **__return_ptr, std::string *, _DWORD *))off_24C416A40[v53])(&__p, &v54, v52);
    if (v53 != -1)
      ((void (*)(std::string *, _DWORD *))off_24C416A10[v53])(&v54, v52);
    if ((v48 & 0x80u) == 0)
      p_p = &__p;
    else
      p_p = __p;
    if ((v48 & 0x80u) == 0)
      v13 = v48;
    else
      v13 = v47;
    sub_20B286F14(v49, -6661, (uint64_t)p_p, v13);
LABEL_46:
    *(_OWORD *)v42 = *(_OWORD *)&v49[2];
    *(_QWORD *)&v42[15] = *(_QWORD *)((char *)&v49[5] + 3);
    v23 = HIBYTE(v49[7]);
    memset(&v49[2], 0, 24);
    LODWORD(v41) = v49[0];
    v43 = v23;
    v44 = 0;
    if ((char)v48 < 0)
      operator delete(__p);
    goto LABEL_48;
  }
  v45 = 0;
  if ((a4 & 0xFF00000000) != 0)
  {
    if (v60)
      goto LABEL_22;
LABEL_30:
    v19 = CVPixelBufferCreateWithBytes((CFAllocatorRef)*MEMORY[0x24BDBD240], *a1, a1[1], a2, a3, a4, 0, 0, 0, (CVPixelBufferRef *)&v45);
    goto LABEL_33;
  }
  v16 = *a1;
  v17 = sub_20AFF77A8(a2);
  v18 = sub_20AFFC020(a2);
  if ((v18 - 1) > 2)
  {
    LODWORD(a4) = v17 * v16;
    if (!v60)
      goto LABEL_30;
  }
  else
  {
    LODWORD(a4) = v17 * v16 * dword_20B5F1D88[(char)(v18 - 1)];
    if (!v60)
      goto LABEL_30;
  }
LABEL_22:
  v14 = (_QWORD *)operator new();
  v15 = (uint64_t)v59;
  if (v59)
  {
    if (v59 == v58)
    {
      v14[3] = v14;
      (*(void (**)(_QWORD *, _QWORD *))(v58[0] + 24))(v58, v14);
      goto LABEL_32;
    }
    v15 = (*(uint64_t (**)(_QWORD *))(*v59 + 16))(v59);
  }
  v14[3] = v15;
LABEL_32:
  v19 = CVPixelBufferCreateWithBytes((CFAllocatorRef)*MEMORY[0x24BDBD240], *a1, a1[1], pixelFormatType, a3, a4, (CVPixelBufferReleaseBytesCallback)sub_20B288AA8, v14, 0, (CVPixelBufferRef *)&v45);
LABEL_33:
  v20 = v19;
  if (v19)
  {
    v53 = 0;
    sub_20B001C20(v52, "MakeViewPixelBuffer");
    v54.__r_.__value_.__r.__words[0] = (std::string::size_type)v52;
    v54.__r_.__value_.__l.__size_ = (std::string::size_type)" for format ";
    v54.__r_.__value_.__r.__words[2] = (std::string::size_type)v52;
    v55 = " for format ";
    v56 = " for format ";
    if (v53 == -1)
      sub_20AECFAB8();
    v57 = &v54;
    ((void (*)(std::string **, _DWORD *))off_24C416AD8[v53])(&v57, v52);
    sub_20AF80CB8((uint64_t)&v51, (uint64_t)v52, &pixelFormatType);
    v54.__r_.__value_.__r.__words[0] = (std::string::size_type)v52;
    v54.__r_.__value_.__l.__size_ = (std::string::size_type)" and size ";
    v54.__r_.__value_.__r.__words[2] = (std::string::size_type)v52;
    v55 = " and size ";
    v56 = " and size ";
    if (v53 == -1)
      sub_20AECFAB8();
    v57 = &v54;
    ((void (*)(std::string **, _DWORD *))off_24C416AF0[v53])(&v57, v52);
    sub_20B011DCC((uint64_t)&v54, (uint64_t)v52, a1);
    if (v53 == -1)
      sub_20AECFAB8();
    v54.__r_.__value_.__r.__words[0] = (std::string::size_type)&v57;
    ((void (*)(void **__return_ptr, std::string *, _DWORD *))off_24C416A40[v53])(&__p, &v54, v52);
    if (v53 != -1)
      ((void (*)(std::string *, _DWORD *))off_24C416A10[v53])(&v54, v52);
    if ((v48 & 0x80u) == 0)
      v21 = &__p;
    else
      v21 = __p;
    if ((v48 & 0x80u) == 0)
      v22 = v48;
    else
      v22 = v47;
    sub_20B286F14(v49, v20, (uint64_t)v21, v22);
    goto LABEL_46;
  }
  v27 = v45;
  v54.__r_.__value_.__r.__words[0] = v45;
  v28 = (std::__shared_weak_count *)operator new();
  v28->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v28->__shared_owners_;
  v28->__vftable = (std::__shared_weak_count_vtbl *)&off_24C416B48;
  v28->__shared_weak_owners_ = 0;
  v28[1].__vftable = (std::__shared_weak_count_vtbl *)v27;
  v54.__r_.__value_.__l.__size_ = (std::string::size_type)v28;
  v30 = (char *)operator new(0xA0uLL);
  v31 = v30;
  *((_QWORD *)v30 + 1) = 0;
  *((_QWORD *)v30 + 2) = 0;
  *(_QWORD *)v30 = &off_24C416A68;
  v32 = v30 + 24;
  do
    v33 = __ldxr(p_shared_owners);
  while (__stxr(v33 + 1, p_shared_owners));
  *((_QWORD *)v30 + 3) = v27;
  *((_QWORD *)v30 + 4) = v28;
  do
    v34 = __ldxr(p_shared_owners);
  while (__stxr(v34 + 1, p_shared_owners));
  *((_DWORD *)v30 + 10) = 0;
  *((_QWORD *)v30 + 6) = 0;
  *((_QWORD *)v30 + 7) = 0;
  *((_QWORD *)v30 + 8) = 850045863;
  *(_OWORD *)(v30 + 72) = 0u;
  *(_OWORD *)(v30 + 88) = 0u;
  *(_OWORD *)(v30 + 104) = 0u;
  *((_QWORD *)v30 + 15) = 0;
  do
    v35 = __ldaxr(p_shared_owners);
  while (__stlxr(v35 - 1, p_shared_owners));
  if (!v35)
  {
    ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
    std::__shared_weak_count::__release_weak(v28);
  }
  *((_OWORD *)v31 + 8) = 0u;
  *((_OWORD *)v31 + 9) = 0u;
  v41 = &off_24C4169B8;
  *(_QWORD *)v42 = v32;
  *(_QWORD *)&v42[8] = v31;
  v44 = 1;
  size = (std::__shared_weak_count *)v54.__r_.__value_.__l.__size_;
  if (v54.__r_.__value_.__l.__size_)
  {
    v37 = (unint64_t *)(v54.__r_.__value_.__l.__size_ + 8);
    do
      v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
LABEL_48:
  if (!v60)
    goto LABEL_54;
  v24 = v59;
  if (v59 == v58)
  {
    v25 = 4;
    v24 = v58;
  }
  else
  {
    if (!v59)
      goto LABEL_54;
    v25 = 5;
  }
  (*(void (**)(void))(*v24 + 8 * v25))();
LABEL_54:
  if (!v44)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v40 = (int *)sub_20B286934((uint64_t)&v41);
    sub_20B2867BC((uint64_t)&v54, v40);
    std::runtime_error::runtime_error(exception, &v54);
    __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  *(_QWORD *)a6 = &off_24C4169B8;
  *(_OWORD *)(a6 + 8) = *(_OWORD *)v42;
  *(_OWORD *)v42 = 0uLL;
  return ((uint64_t (*)(uint64_t (***)()))*v41)(&v41);
}

void sub_20B286654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;
  uint64_t v31;
  _QWORD *v32;

  sub_20AEC147C((uint64_t)&a29);
  if (*(_BYTE *)(v29 - 80))
  {
    v32 = *(_QWORD **)(v29 - 88);
    if (v32 == (_QWORD *)(v29 - 112))
    {
      v31 = 4;
      v32 = (_QWORD *)(v29 - 112);
    }
    else
    {
      if (!v32)
        goto LABEL_8;
      v31 = 5;
    }
    (*(void (**)(void))(*v32 + 8 * v31))();
  }
LABEL_8:
  _Unwind_Resume(a1);
}

void sub_20B286664(void *a1, int a2)
{
  const void *v2;

  if (a2)
  {
    __cxa_begin_catch(a1);
    if (v2)
      CFRelease(v2);
    __cxa_rethrow();
  }
  JUMPOUT(0x20B2867B4);
}

void sub_20B286688(_Unwind_Exception *a1)
{
  uint64_t v1;

  __cxa_end_catch();
  if (*(_BYTE *)(v1 - 80))
  {
    if (*(_QWORD *)(v1 - 88) != v1 - 112)
      JUMPOUT(0x20B28671CLL);
    (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 112) + 32))(v1 - 112);
  }
  _Unwind_Resume(a1);
}

void sub_20B286694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

void sub_20B286700()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 - 80))
  {
    if (*(_QWORD *)(v0 - 88) != v0 - 112)
      JUMPOUT(0x20B28671CLL);
    JUMPOUT(0x20B2867A0);
  }
  JUMPOUT(0x20B2867B4);
}

void sub_20B286774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  sub_20AECFA60((uint64_t)va);
  if (*(_BYTE *)(v17 - 80))
  {
    if (*(_QWORD *)(v17 - 88) != v17 - 112)
      JUMPOUT(0x20B28671CLL);
    (*(void (**)(uint64_t))(*(_QWORD *)(v17 - 112) + 32))(v17 - 112);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_20B2867BC(uint64_t a1, int *a2)
{
  uint64_t result;
  char *v4;
  __int128 v5;
  int v6;
  void *__p[2];
  char v8;
  _QWORD v9[5];
  _QWORD *v10;

  v4 = (char *)operator new(0x30uLL);
  v5 = xmmword_20B5F1A60;
  strcpy(v4, "Failed to create CVPixelBuffer with bytes: ");
  v6 = 1;
  sub_20B287930(__p, a2);
  v9[0] = &v4;
  v9[1] = __p;
  v9[2] = &v4;
  v9[3] = __p;
  v9[4] = __p;
  v10 = v9;
  sub_20AED6660((uint64_t)&v10, (uint64_t)&v4);
  if (v8 < 0)
    operator delete(__p[0]);
  if (v6 == -1)
    sub_20AECFAB8();
  v9[0] = __p;
  result = ((uint64_t (*)(_QWORD *, char **))off_24C416A40[v6])(v9, &v4);
  if (v6 != -1)
    return ((uint64_t (*)(_QWORD *, char **))off_24C416A10[v6])(v9, &v4);
  return result;
}

void sub_20B2868F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B286910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_20AECFA60((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x20B286900);
}

uint64_t sub_20B286934(uint64_t result)
{
  _QWORD *exception;

  if (*(_BYTE *)(result + 32))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24C3F6160;
    __cxa_throw(exception, (struct type_info *)&unk_24C3F22A8, (void (*)(void *))std::exception::~exception);
  }
  return result;
}

uint64_t sub_20B286974(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 32))
  {
    (**(void (***)(uint64_t))a1)(a1);
    return a1;
  }
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_20B2869CC(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C4169B8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

size_t sub_20B286A40(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (!v3)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v4)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 203, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AA36F, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    return CVPixelBufferGetWidth(0);
  v9 = *(__CVBuffer **)v8;
  v10 = *(std::__shared_weak_count **)(v8 + 8);
  if (!v10)
    return CVPixelBufferGetWidth(v9);
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return CVPixelBufferGetWidth(v9);
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return CVPixelBufferGetWidth(v9);
}

size_t sub_20B286B78(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (!v3)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v4)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 213, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AA36F, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    return CVPixelBufferGetHeight(0);
  v9 = *(__CVBuffer **)v8;
  v10 = *(std::__shared_weak_count **)(v8 + 8);
  if (!v10)
    return CVPixelBufferGetHeight(v9);
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return CVPixelBufferGetHeight(v9);
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return CVPixelBufferGetHeight(v9);
}

size_t sub_20B286CB0(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (!v3)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v4)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 223, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AA36F, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    return CVPixelBufferGetBytesPerRow(0);
  v9 = *(__CVBuffer **)v8;
  v10 = *(std::__shared_weak_count **)(v8 + 8);
  if (!v10)
    return CVPixelBufferGetBytesPerRow(v9);
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return CVPixelBufferGetBytesPerRow(v9);
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return CVPixelBufferGetBytesPerRow(v9);
}

_QWORD *sub_20B286DE8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __CVBuffer *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  std::__shared_weak_count_vtbl *IOSurface;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 256, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AA36F, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = *(__CVBuffer **)v10;
    v12 = *(std::__shared_weak_count **)(v10 + 8);
    if (v12)
    {
      v13 = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      do
        v15 = __ldaxr(v13);
      while (__stlxr(v15 - 1, v13));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
  else
  {
    v11 = 0;
  }
  IOSurface = (std::__shared_weak_count_vtbl *)CVPixelBufferGetIOSurface(v11);
  return sub_20B4E7BB0(a2, IOSurface, 1, 0);
}

_DWORD *sub_20B286F14(_DWORD *a1, int a2, uint64_t a3, uint64_t a4)
{
  std::string *v6;
  uint64_t v7;
  uint64_t *v8;
  int v9;
  BOOL v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  char v18;
  _QWORD v19[2];
  __int128 v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  *a1 = a2;
  v6 = (std::string *)(a1 + 2);
  *(_QWORD *)&v17 = a3;
  *((_QWORD *)&v17 + 1) = a4;
  sub_20B287D70();
  v7 = qword_25463BE18;
  if (!qword_25463BE18)
    goto LABEL_11;
  v8 = &qword_25463BE18;
  do
  {
    v9 = *(_DWORD *)(v7 + 32);
    v10 = v9 < a2;
    if (v9 >= a2)
      v11 = (uint64_t *)v7;
    else
      v11 = (uint64_t *)(v7 + 8);
    if (!v10)
      v8 = (uint64_t *)v7;
    v7 = *v11;
  }
  while (*v11);
  if (v8 != &qword_25463BE18 && *((_DWORD *)v8 + 8) <= a2)
  {
    sub_20B287D70();
    v20 = v17;
    v21 = ": ";
    v22 = 2;
    v14 = v8[5];
    v13 = v8 + 5;
    v12 = v14;
    v15 = *((unsigned __int8 *)v13 + 23);
    if ((v15 & 0x80u) != 0)
      v15 = v13[1];
    else
      v12 = (uint64_t)v13;
    v23 = v12;
    v24 = v15;
    sub_20AECFDF8((uint64_t)&v20, (uint64_t)v25, 0, 0, v6);
  }
  else
  {
LABEL_11:
    sub_20B287D70();
    LODWORD(v22) = 0;
    sub_20B210214((uint64_t)v19, (uint64_t)&v20, (uint64_t)&v17);
    if ((_DWORD)v22 == -1)
      sub_20AECFAB8();
    v19[0] = &v18;
    ((void (*)(_QWORD *, __int128 *))off_24C416A40[v22])(v19, &v20);
    if ((_DWORD)v22 != -1)
      ((void (*)(_QWORD *, __int128 *))off_24C416A10[v22])(v19, &v20);
  }
  return a1;
}

void sub_20B2870A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, uint64_t a19, uint64_t a20,int a21)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20AEC01C0(exception_object);
}

void sub_20B2870EC(unsigned int *a1@<X0>, unsigned int a2@<W1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  size_t v12;
  size_t v13;
  OSType v14;
  CVReturn v15;
  int v16;
  std::__shared_weak_count *size;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::string::__raw *v24;
  int data;
  size_t v26;
  void **v27;
  const void **v28;
  std::string::size_type v29;
  std::string::size_type v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  std::string *v34;
  uint64_t v35;
  uint64_t v36;
  std::string::size_type v37;
  void **v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  void *__p[2];
  unsigned __int8 v46;
  int v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  CVPixelBufferRef pixelBufferOut;
  OSType v53;
  char v54;
  char v55;
  int v56;
  std::__shared_weak_count *v57;
  char v58;
  int v59;
  void *__dst[2];
  unint64_t v61;
  std::string v62;
  const char *v63;
  const char *v64;
  std::string *v65;

  v53 = a2;
  pixelBufferOut = 0;
  sub_20B284824(&v50, a4);
  sub_20B2844A4((uint64_t)&v50, &v56);
  if (v58)
  {
    sub_20B4EC6E4((uint64_t)&v56, &v62);
    if ((_BYTE)v63)
    {
      if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v62.__r_.__value_.__l.__data_);
    }
    else
    {
      sub_20B4EC7A8((uint64_t)&v56, a3);
    }
    if (v58)
    {
      v9 = v57;
      if (v57)
      {
        p_shared_owners = (unint64_t *)&v57->__shared_owners_;
        do
          v11 = __ldaxr(p_shared_owners);
        while (__stlxr(v11 - 1, p_shared_owners));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
  }
  v12 = *a1;
  v13 = a1[1];
  v14 = v53;
  sub_20B284A78(&v62, (uint64_t)&v50);
  v15 = CVPixelBufferCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], v12, v13, v14, (CFDictionaryRef)v62.__r_.__value_.__l.__data_, &pixelBufferOut);
  v16 = v15;
  size = (std::__shared_weak_count *)v62.__r_.__value_.__l.__size_;
  if (!v62.__r_.__value_.__l.__size_)
    goto LABEL_16;
  v18 = (unint64_t *)(v62.__r_.__value_.__l.__size_ + 8);
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_16:
    if (v15)
      goto LABEL_17;
LABEL_28:
    sub_20B285A9C(&v62, (std::__shared_weak_count_vtbl *)pixelBufferOut, 0, 0);
    *(_QWORD *)a5 = &off_24C4169B8;
    *(_OWORD *)(a5 + 8) = *(_OWORD *)&v62.__r_.__value_.__r.__words[1];
    *(_BYTE *)(a5 + 32) = 1;
    goto LABEL_60;
  }
  ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
  std::__shared_weak_count::__release_weak(size);
  if (!v16)
    goto LABEL_28;
LABEL_17:
  v59 = 0;
  sub_20AFB1764(&v56, "MakePixelBuffer");
  v62.__r_.__value_.__r.__words[0] = (std::string::size_type)&v56;
  v62.__r_.__value_.__l.__size_ = (std::string::size_type)" for format ";
  v62.__r_.__value_.__r.__words[2] = (std::string::size_type)&v56;
  v63 = " for format ";
  v64 = " for format ";
  if (v59 == -1)
    sub_20AECFAB8();
  __dst[0] = &v62;
  ((void (*)(void **, int *))off_24C416AD8[v59])(__dst, &v56);
  sub_20AF80CB8((uint64_t)&v55, (uint64_t)&v56, &v53);
  v62.__r_.__value_.__r.__words[0] = (std::string::size_type)&v56;
  v62.__r_.__value_.__l.__size_ = (std::string::size_type)" and size ";
  v62.__r_.__value_.__r.__words[2] = (std::string::size_type)&v56;
  v63 = " and size ";
  v64 = " and size ";
  if (v59 == -1)
    sub_20AECFAB8();
  __dst[0] = &v62;
  ((void (*)(void **, int *))off_24C416AF0[v59])(__dst, &v56);
  sub_20B288F00((uint64_t)&v54, (uint64_t)&v56, a1);
  v62.__r_.__value_.__r.__words[0] = (std::string::size_type)&v56;
  v62.__r_.__value_.__l.__size_ = (std::string::size_type)", used attributes:\n";
  v62.__r_.__value_.__r.__words[2] = (std::string::size_type)&v56;
  v63 = ", used attributes:\n";
  v64 = ", used attributes:\n";
  if (v59 == -1)
    sub_20AECFAB8();
  __dst[0] = &v62;
  ((void (*)(void **, int *))off_24C416B08[v59])(__dst, &v56);
  v20 = operator new();
  *(_QWORD *)(v20 + 272) = 0;
  *(_OWORD *)(v20 + 240) = 0u;
  *(_OWORD *)(v20 + 256) = 0u;
  *(_OWORD *)(v20 + 208) = 0u;
  *(_OWORD *)(v20 + 224) = 0u;
  *(_OWORD *)(v20 + 176) = 0u;
  *(_OWORD *)(v20 + 192) = 0u;
  *(_OWORD *)(v20 + 144) = 0u;
  *(_OWORD *)(v20 + 160) = 0u;
  *(_OWORD *)(v20 + 112) = 0u;
  *(_OWORD *)(v20 + 128) = 0u;
  *(_OWORD *)(v20 + 80) = 0u;
  *(_OWORD *)(v20 + 96) = 0u;
  *(_OWORD *)(v20 + 48) = 0u;
  *(_OWORD *)(v20 + 64) = 0u;
  *(_OWORD *)(v20 + 16) = 0u;
  *(_OWORD *)(v20 + 32) = 0u;
  *(_OWORD *)v20 = 0u;
  sub_20AEC0BD8(v20);
  v65 = (std::string *)v20;
  sub_20B284A78(&v62, a4);
  sub_20B4F66B8((_QWORD *)(v20 + 16), v62.__r_.__value_.__l.__data_);
  v21 = (std::__shared_weak_count *)v62.__r_.__value_.__l.__size_;
  if (v62.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v62.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      v24 = (std::string::__raw *)v65;
      data = (int)v65[5].__r_.__value_.__l.__data_;
      if ((data & 0x10) == 0)
        goto LABEL_25;
LABEL_31:
      v29 = v24[4].__words[2];
      v30 = v24[3].__words[0];
      if (v29 < v30)
      {
        v24[4].__words[2] = v30;
        v29 = v30;
      }
      v28 = (const void **)&v24[2].__words[2];
      goto LABEL_34;
    }
  }
  v24 = (std::string::__raw *)v65;
  data = (int)v65[5].__r_.__value_.__l.__data_;
  if ((data & 0x10) != 0)
    goto LABEL_31;
LABEL_25:
  if ((data & 8) == 0)
  {
    v26 = 0;
    HIBYTE(v61) = 0;
    v27 = __dst;
    goto LABEL_42;
  }
  v28 = (const void **)&v24[1].__words[2];
  v29 = v24[2].__words[1];
LABEL_34:
  v31 = *v28;
  v26 = v29 - (_QWORD)*v28;
  if (v26 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  if (v26 >= 0x17)
  {
    v32 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v26 | 7) != 0x17)
      v32 = v26 | 7;
    v33 = v32 + 1;
    v27 = (void **)operator new(v32 + 1);
    __dst[1] = (void *)v26;
    v61 = v33 | 0x8000000000000000;
    __dst[0] = v27;
  }
  else
  {
    HIBYTE(v61) = v29 - *(_BYTE *)v28;
    v27 = __dst;
    if (!v26)
      goto LABEL_42;
  }
  memmove(v27, v31, v26);
LABEL_42:
  *((_BYTE *)v27 + v26) = 0;
  v34 = v65;
  if (v65)
  {
    v35 = MEMORY[0x24BEDB7F0];
    v36 = *MEMORY[0x24BEDB7F0];
    v65->__r_.__value_.__r.__words[0] = *MEMORY[0x24BEDB7F0];
    v37 = *(_QWORD *)(v35 + 72);
    *(std::string::size_type *)((char *)v34->__r_.__value_.__r.__words + *(_QWORD *)(v36 - 24)) = *(_QWORD *)(v35 + 64);
    v34[1].__r_.__value_.__r.__words[0] = MEMORY[0x24BEDB848] + 16;
    v34->__r_.__value_.__r.__words[2] = v37;
    if (v34[4].__r_.__value_.__s.__data_[15] < 0)
      operator delete((void *)v34[3].__r_.__value_.__r.__words[2]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](&v34[5].__r_.__value_.__r.__words[1]);
    MEMORY[0x20BD3583C](v34, 0x10B2C40EED050F3);
  }
  v62.__r_.__value_.__r.__words[0] = (std::string::size_type)&v56;
  v62.__r_.__value_.__l.__size_ = (std::string::size_type)__dst;
  v62.__r_.__value_.__r.__words[2] = (std::string::size_type)&v56;
  v63 = (const char *)__dst;
  v64 = (const char *)__dst;
  if (v59 == -1)
    sub_20AECFAB8();
  v65 = &v62;
  ((void (*)(std::string **, int *))off_24C416A28[v59])(&v65, &v56);
  if (SHIBYTE(v61) < 0)
    operator delete(__dst[0]);
  if (v59 == -1)
    sub_20AECFAB8();
  v62.__r_.__value_.__r.__words[0] = (std::string::size_type)__dst;
  ((void (*)(void **__return_ptr, std::string *, int *))off_24C416A40[v59])(__p, &v62, &v56);
  if (v59 != -1)
    ((void (*)(std::string *, int *))off_24C416A10[v59])(&v62, &v56);
  if ((v46 & 0x80u) == 0)
    v38 = __p;
  else
    v38 = (void **)__p[0];
  if ((v46 & 0x80u) == 0)
    v39 = v46;
  else
    v39 = (uint64_t)__p[1];
  sub_20B286F14(&v47, v16, (uint64_t)v38, v39);
  v40 = v47;
  v41 = v49;
  *(_QWORD *)(a5 + 8) = v48;
  *(_QWORD *)(a5 + 16) = v41;
  *(_QWORD *)(a5 + 23) = *(_QWORD *)((char *)&v49 + 7);
  LOBYTE(v41) = HIBYTE(v49);
  v49 = 0uLL;
  v48 = 0;
  *(_DWORD *)a5 = v40;
  *(_WORD *)(a5 + 31) = v41;
  if ((char)v46 < 0)
    operator delete(__p[0]);
LABEL_60:
  v42 = v51;
  if (v51)
  {
    v43 = (unint64_t *)&v51->__shared_owners_;
    do
      v44 = __ldaxr(v43);
    while (__stlxr(v44 - 1, v43));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
      std::__shared_weak_count::__release_weak(v42);
    }
  }
}

void sub_20B2876D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  sub_20B2845E8((uint64_t)&a23);
  sub_20AEC147C((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_20B287778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  sub_20AEC147C(v8 - 112);
  sub_20AEC147C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2877B0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0)
    operator delete(__p);
  JUMPOUT(0x20B2877D4);
}

void sub_20B2877D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v9;
  va_list va;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a8);
  va_start(va, a8);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  sub_20AECFA60((uint64_t)va1);
  sub_20AEC147C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2877EC(char *__s, int *a2)
{
  uint64_t result;
  _DWORD v4[6];
  int v5;
  void *__p[2];
  char v7;
  _QWORD v8[5];
  _QWORD *v9;

  v5 = 0;
  sub_20AFB1674(v4, __s);
  sub_20B287930(__p, a2);
  v8[0] = v4;
  v8[1] = __p;
  v8[2] = v4;
  v8[3] = __p;
  v8[4] = __p;
  if (v5 == -1)
    sub_20AECFAB8();
  v9 = v8;
  ((void (*)(_QWORD **, _DWORD *))off_24C416A28[v5])(&v9, v4);
  if (v7 < 0)
    operator delete(__p[0]);
  if (v5 == -1)
    sub_20AECFAB8();
  v8[0] = __p;
  result = ((uint64_t (*)(_QWORD *, _DWORD *))off_24C416A40[v5])(v8, v4);
  if (v5 != -1)
    return ((uint64_t (*)(_QWORD *, _DWORD *))off_24C416A10[v5])(v8, v4);
  return result;
}

void sub_20B2878F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B28790C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_20AECFA60((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x20B2878FCLL);
}

void sub_20B287930(_BYTE *a1, int *a2)
{
  uint64_t v4;
  void **v5;
  uint64_t v6;
  int v7;
  size_t v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__p[2];
  unsigned __int8 v20;
  _DWORD v21[6];
  int v22;
  std::string v23;
  std::string *v24;
  std::string *v25;
  _DWORD *v26;
  std::string *v27;
  std::string *v28;
  std::string **v29;

  v4 = operator new();
  *(_OWORD *)v4 = 0u;
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_OWORD *)(v4 + 80) = 0u;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 128) = 0u;
  *(_OWORD *)(v4 + 144) = 0u;
  *(_OWORD *)(v4 + 160) = 0u;
  *(_OWORD *)(v4 + 176) = 0u;
  *(_OWORD *)(v4 + 192) = 0u;
  *(_OWORD *)(v4 + 208) = 0u;
  *(_OWORD *)(v4 + 224) = 0u;
  *(_OWORD *)(v4 + 240) = 0u;
  *(_OWORD *)(v4 + 256) = 0u;
  *(_QWORD *)(v4 + 272) = 0;
  sub_20AEC0BD8(v4);
  v18 = v4;
  v22 = 0;
  sub_20AED5B5C(v21, "{");
  std::to_string(&v23, *a2);
  v24 = (std::string *)v21;
  v25 = &v23;
  v26 = v21;
  v27 = &v23;
  v28 = &v23;
  if (v22 == -1)
    sub_20AECFAB8();
  v29 = &v24;
  ((void (*)(std::string ***, _DWORD *))off_24C416A28[v22])(&v29, v21);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v23.__r_.__value_.__l.__data_);
  v24 = (std::string *)v21;
  v25 = (std::string *)",";
  v26 = v21;
  v27 = (std::string *)",";
  v28 = (std::string *)",";
  if (v22 == -1)
    goto LABEL_38;
  v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v24;
  ((void (*)(std::string *, _DWORD *))off_24C416AA8[v22])(&v23, v21);
  v24 = (std::string *)v21;
  v25 = (std::string *)(a2 + 2);
  v26 = v21;
  v27 = (std::string *)(a2 + 2);
  v28 = (std::string *)(a2 + 2);
  if (v22 == -1
    || (v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v24,
        ((void (*)(std::string *, _DWORD *))off_24C416AC0[v22])(&v23, v21),
        v24 = (std::string *)v21,
        v25 = (std::string *)"}",
        v26 = v21,
        v27 = (std::string *)"}",
        v28 = (std::string *)"}",
        v22 == -1))
  {
LABEL_38:
    sub_20AECFAB8();
  }
  v23.__r_.__value_.__r.__words[0] = (std::string::size_type)&v24;
  ((void (*)(std::string *, _DWORD *))off_24C416AA8[v22])(&v23, v21);
  if (v22 == -1)
    sub_20AECFAB8();
  v24 = &v23;
  ((void (*)(void **__return_ptr, std::string **, _DWORD *))off_24C416A40[v22])(__p, &v24, v21);
  if (v22 != -1)
    ((void (*)(std::string **, _DWORD *))off_24C416A10[v22])(&v24, v21);
  if ((v20 & 0x80u) == 0)
    v5 = __p;
  else
    v5 = (void **)__p[0];
  if ((v20 & 0x80u) == 0)
    v6 = v20;
  else
    v6 = (uint64_t)__p[1];
  sub_20AEC01D0((_QWORD *)(v4 + 16), (uint64_t)v5, v6);
  if (((char)v20 & 0x80000000) == 0)
  {
    v7 = *(_DWORD *)(v4 + 120);
    if ((v7 & 0x10) == 0)
      goto LABEL_18;
LABEL_21:
    v9 = *(_QWORD *)(v4 + 112);
    v10 = *(_QWORD *)(v4 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v4 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v4 + 64);
    v8 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_37;
    goto LABEL_24;
  }
  operator delete(__p[0]);
  v7 = *(_DWORD *)(v4 + 120);
  if ((v7 & 0x10) != 0)
    goto LABEL_21;
LABEL_18:
  if ((v7 & 8) == 0)
  {
    v8 = 0;
    a1[23] = 0;
    goto LABEL_31;
  }
  v11 = *(const void **)(v4 + 40);
  v8 = *(_QWORD *)(v4 + 56) - (_QWORD)v11;
  if (v8 >= 0x7FFFFFFFFFFFFFF8)
LABEL_37:
    sub_20AEC0138();
LABEL_24:
  if (v8 >= 0x17)
  {
    v12 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v12 = v8 | 7;
    v13 = v12 + 1;
    v14 = operator new(v12 + 1);
    *((_QWORD *)a1 + 1) = v8;
    *((_QWORD *)a1 + 2) = v13 | 0x8000000000000000;
    *(_QWORD *)a1 = v14;
    a1 = v14;
    goto LABEL_30;
  }
  a1[23] = v8;
  if (v8)
LABEL_30:
    memmove(a1, v11, v8);
LABEL_31:
  a1[v8] = 0;
  if (v18)
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v18 = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v18 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v18 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v18 + 16) = v17;
    if (*(char *)(v18 + 111) < 0)
      operator delete(*(void **)(v18 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v18 + 128);
    MEMORY[0x20BD3583C](v18, 0x10B2C40EED050F3);
  }
}

void sub_20B287CDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a16 < 0)
  {
    operator delete(__p);
    sub_20B52CE84(&a10);
    _Unwind_Resume(a1);
  }
  sub_20B52CE84(&a10);
  _Unwind_Resume(a1);
}

void sub_20B287D70()
{
  unsigned __int8 v0;
  uint64_t v1;
  void *v2;
  __int128 v3;
  int v4;
  void *v5;
  __int128 v6;
  int v7;
  void *v8;
  __int128 v9;
  int v10;
  void *v11;
  __int128 v12;
  int v13;
  void *v14[3];
  int v15;
  void *v16;
  __int128 v17;
  int v18;
  void *v19;
  __int128 v20;
  int v21;
  void *v22;
  __int128 v23;
  int v24;
  void *v25;
  __int128 v26;
  uint64_t v27;
  void *v28;
  char v29;
  int v30;
  void *v31;
  __int128 v32;
  uint64_t v33;
  void *v34;
  char v35;
  int v36;
  void *v37;
  __int128 v38;
  int v39;
  void *v40;
  __int128 v41;
  int v42;
  void *v43;
  __int128 v44;
  int v45;
  void *v46;
  __int128 v47;
  int v48;
  void *v49;
  __int128 v50;
  int v51;
  void *__p;
  __int128 v53;
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25463BE08);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463BE08))
  {
    LODWORD(v1) = 0;
    v2 = operator new(0x48uLL);
    v3 = xmmword_20B5B03E0;
    strcpy((char *)v2, "kCVReturnSuccess: Function executed successfully without errors.");
    v4 = -6660;
    v5 = operator new(0x38uLL);
    v6 = xmmword_20B5F1A70;
    strcpy((char *)v5, "kCVReturnError: Function executed with unknown error.");
    v7 = -6661;
    v8 = operator new(0x78uLL);
    v9 = xmmword_20B5F1A80;
    strcpy((char *)v8, "kCVReturnInvalidArgument: At least one of the arguments passed in is not valid. Either out of range or the wrong type.");
    v10 = -6662;
    v11 = operator new(0x78uLL);
    v12 = xmmword_20B5F1A90;
    strcpy((char *)v11, "kCVReturnAllocationFailed: The allocation for a buffer or buffer pool failed. Most likely because of lack of resources.");
    v13 = -6663;
    HIBYTE(v14[2]) = 20;
    strcpy((char *)v14, "kCVReturnUnsupported");
    v15 = -6670;
    v16 = operator new(0x58uLL);
    v17 = xmmword_20B5F1AA0;
    strcpy((char *)v16, "kCVReturnInvalidDisplay: A CVDisplayLink cannot be created for the given DisplayRef.");
    v18 = -6671;
    v19 = operator new(0x58uLL);
    v20 = xmmword_20B5F1AB0;
    strcpy((char *)v19, "kCVReturnDisplayLinkAlreadyRunning: The CVDisplayLink is already started and running.");
    v21 = -6672;
    v22 = operator new(0x48uLL);
    v23 = xmmword_20B5B3790;
    strcpy((char *)v22, "kCVReturnDisplayLinkNotRunning: The CVDisplayLink has not been started.");
    v24 = -6673;
    v25 = operator new(0x48uLL);
    v26 = xmmword_20B5F1AC0;
    strcpy((char *)v25, "kCVReturnDisplayLinkCallbacksNotSet: The output callback is not set.");
    sub_20B288790((uint64_t)&v27, -6680, "kCVReturnInvalidPixelFormat: The requested pixelformat is not supported for the CVBuffer type.");
    v30 = -6681;
    v31 = operator new(0x68uLL);
    v32 = xmmword_20B5F1AD0;
    strcpy((char *)v31, "kCVReturnInvalidSize: The requested size (most likely too big) is not supported for the CVBuffer type.");
    sub_20B288790((uint64_t)&v33, -6682, "kCVReturnInvalidPixelBufferAttributes: A CVBuffer cannot be created with the given attributes.");
    v36 = -6683;
    v37 = operator new(0xA0uLL);
    v38 = xmmword_20B5F1AE0;
    strcpy((char *)v37, "kCVReturnPixelBufferNotOpenGLCompatible: The Buffer cannot be used with OpenGL as either its size, pixelformat or attributes are not supported by OpenGL.");
    v39 = -6684;
    v40 = operator new(0x98uLL);
    v41 = xmmword_20B5F1AF0;
    strcpy((char *)v40, "kCVReturnPixelBufferNotMetalCompatible: The Buffer cannot be used with Metal as either its size, pixelformat or attributes are not supported by Metal.");
    v42 = -6689;
    v43 = operator new(0xB8uLL);
    v44 = xmmword_20B5F1B00;
    strcpy((char *)v43, "kCVReturnWouldExceedAllocationThreshold: The allocation request failed because it would have exceeded a specified allocation threshold (see kCVPixelBufferPoolAllocationThresholdKey).");
    v45 = -6690;
    v46 = operator new(0xA0uLL);
    v47 = xmmword_20B5F1B10;
    strcpy((char *)v46, "kCVReturnPoolAllocationFailed: The allocation for the buffer pool failed. Most likely because of lack of resources. Check if your parameters are in range.");
    v48 = -6691;
    v49 = operator new(0x60uLL);
    v50 = xmmword_20B5F1B20;
    strcpy((char *)v49, "kCVReturnInvalidPoolAttributes: A CVBufferPool cannot be created with the given attributes.");
    v51 = -6692;
    __p = operator new(0x88uLL);
    v53 = xmmword_20B5F1B30;
    strcpy((char *)__p, "kCVReturnRetry: a scan hasn't completely traversed the CVBufferPool due to a concurrent operation. The client can retry the scan.");
    sub_20B288844(&v1, 18);
    if (SHIBYTE(v53) < 0)
    {
      operator delete(__p);
      if ((SHIBYTE(v50) & 0x80000000) == 0)
      {
LABEL_6:
        if ((SHIBYTE(v47) & 0x80000000) == 0)
          goto LABEL_7;
        goto LABEL_25;
      }
    }
    else if ((SHIBYTE(v50) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v49);
    if ((SHIBYTE(v47) & 0x80000000) == 0)
    {
LABEL_7:
      if ((SHIBYTE(v44) & 0x80000000) == 0)
        goto LABEL_8;
      goto LABEL_26;
    }
LABEL_25:
    operator delete(v46);
    if ((SHIBYTE(v44) & 0x80000000) == 0)
    {
LABEL_8:
      if ((SHIBYTE(v41) & 0x80000000) == 0)
        goto LABEL_9;
      goto LABEL_27;
    }
LABEL_26:
    operator delete(v43);
    if ((SHIBYTE(v41) & 0x80000000) == 0)
    {
LABEL_9:
      if ((SHIBYTE(v38) & 0x80000000) == 0)
        goto LABEL_10;
      goto LABEL_28;
    }
LABEL_27:
    operator delete(v40);
    if ((SHIBYTE(v38) & 0x80000000) == 0)
    {
LABEL_10:
      if ((v35 & 0x80000000) == 0)
        goto LABEL_11;
      goto LABEL_29;
    }
LABEL_28:
    operator delete(v37);
    if ((v35 & 0x80000000) == 0)
    {
LABEL_11:
      if ((SHIBYTE(v32) & 0x80000000) == 0)
        goto LABEL_12;
      goto LABEL_30;
    }
LABEL_29:
    operator delete(v34);
    if ((SHIBYTE(v32) & 0x80000000) == 0)
    {
LABEL_12:
      if ((v29 & 0x80000000) == 0)
        goto LABEL_13;
      goto LABEL_31;
    }
LABEL_30:
    operator delete(v31);
    if ((v29 & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v26) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_32;
    }
LABEL_31:
    operator delete(v28);
    if ((SHIBYTE(v26) & 0x80000000) == 0)
    {
LABEL_14:
      if ((SHIBYTE(v23) & 0x80000000) == 0)
        goto LABEL_15;
      goto LABEL_33;
    }
LABEL_32:
    operator delete(v25);
    if ((SHIBYTE(v23) & 0x80000000) == 0)
    {
LABEL_15:
      if ((SHIBYTE(v20) & 0x80000000) == 0)
        goto LABEL_16;
      goto LABEL_34;
    }
LABEL_33:
    operator delete(v22);
    if ((SHIBYTE(v20) & 0x80000000) == 0)
    {
LABEL_16:
      if ((SHIBYTE(v17) & 0x80000000) == 0)
        goto LABEL_17;
      goto LABEL_35;
    }
LABEL_34:
    operator delete(v19);
    if ((SHIBYTE(v17) & 0x80000000) == 0)
    {
LABEL_17:
      if ((SHIBYTE(v14[2]) & 0x80000000) == 0)
        goto LABEL_18;
      goto LABEL_36;
    }
LABEL_35:
    operator delete(v16);
    if ((SHIBYTE(v14[2]) & 0x80000000) == 0)
    {
LABEL_18:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_19;
      goto LABEL_37;
    }
LABEL_36:
    operator delete(v14[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_19:
      if ((SHIBYTE(v9) & 0x80000000) == 0)
        goto LABEL_20;
      goto LABEL_38;
    }
LABEL_37:
    operator delete(v11);
    if ((SHIBYTE(v9) & 0x80000000) == 0)
    {
LABEL_20:
      if ((SHIBYTE(v6) & 0x80000000) == 0)
        goto LABEL_21;
      goto LABEL_39;
    }
LABEL_38:
    operator delete(v8);
    if ((SHIBYTE(v6) & 0x80000000) == 0)
    {
LABEL_21:
      if ((SHIBYTE(v3) & 0x80000000) == 0)
      {
LABEL_22:
        __cxa_atexit((void (*)(void *))sub_20B288A28, &qword_25463BE10, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463BE08);
        return;
      }
LABEL_40:
      operator delete(v2);
      goto LABEL_22;
    }
LABEL_39:
    operator delete(v5);
    if ((SHIBYTE(v3) & 0x80000000) == 0)
      goto LABEL_22;
    goto LABEL_40;
  }
}

void sub_20B28854C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58,uint64_t a59,void *a60,uint64_t a61,int a62,__int16 a63)
{
  char a65;
  void *a67;
  char a72;
  void *a73;
  char a74;
  void *a75;
  char a76;
  void *a77;
  char a78;
  void *a79;
  char a80;
  void *a81;
  char a82;
  void *a83;
  char a84;
  void *a85;

  if (SLOBYTE(STACK[0x247]) < 0)
  {
    operator delete((void *)STACK[0x230]);
    if ((SLOBYTE(STACK[0x227]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0x207]) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_22;
    }
  }
  else if ((SLOBYTE(STACK[0x227]) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete((void *)STACK[0x210]);
  if ((SLOBYTE(STACK[0x207]) & 0x80000000) == 0)
  {
LABEL_4:
    if ((a84 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a85);
  if ((a84 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a82 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_24;
  }
LABEL_23:
  operator delete(a83);
  if ((a82 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a80 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_25;
  }
LABEL_24:
  operator delete(a81);
  if ((a80 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a78 & 0x80000000) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_25:
  operator delete(a79);
  if ((a78 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a76 & 0x80000000) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_26:
  operator delete(a77);
  if ((a76 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a74 & 0x80000000) == 0)
      goto LABEL_10;
    goto LABEL_28;
  }
LABEL_27:
  operator delete(a75);
  if ((a74 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a72 & 0x80000000) == 0)
      goto LABEL_11;
    goto LABEL_29;
  }
LABEL_28:
  operator delete(a73);
  if ((a72 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a65 & 0x80000000) == 0)
      goto LABEL_12;
    goto LABEL_30;
  }
LABEL_29:
  operator delete(a67);
  if ((a65 & 0x80000000) == 0)
  {
LABEL_12:
    if ((a58 & 0x80000000) == 0)
      goto LABEL_13;
    goto LABEL_31;
  }
LABEL_30:
  operator delete(a60);
  if ((a58 & 0x80000000) == 0)
  {
LABEL_13:
    if ((a51 & 0x80000000) == 0)
      goto LABEL_14;
    goto LABEL_32;
  }
LABEL_31:
  operator delete(a53);
  if ((a51 & 0x80000000) == 0)
  {
LABEL_14:
    if ((a44 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_33;
  }
LABEL_32:
  operator delete(a46);
  if ((a44 & 0x80000000) == 0)
  {
LABEL_15:
    if ((a37 & 0x80000000) == 0)
      goto LABEL_16;
    goto LABEL_34;
  }
LABEL_33:
  operator delete(a39);
  if ((a37 & 0x80000000) == 0)
  {
LABEL_16:
    if ((a30 & 0x80000000) == 0)
      goto LABEL_17;
    goto LABEL_35;
  }
LABEL_34:
  operator delete(a32);
  if ((a30 & 0x80000000) == 0)
  {
LABEL_17:
    if ((a23 & 0x80000000) == 0)
      goto LABEL_18;
    goto LABEL_36;
  }
LABEL_35:
  operator delete(a25);
  if ((a23 & 0x80000000) == 0)
  {
LABEL_18:
    if ((a16 & 0x80000000) == 0)
    {
LABEL_38:
      __cxa_guard_abort(&qword_25463BE08);
      _Unwind_Resume(a1);
    }
LABEL_37:
    operator delete(a11);
    __cxa_guard_abort(&qword_25463BE08);
    _Unwind_Resume(a1);
  }
LABEL_36:
  operator delete(a18);
  if ((a16 & 0x80000000) == 0)
    goto LABEL_38;
  goto LABEL_37;
}

uint64_t sub_20B288790(uint64_t a1, int a2, char *__s)
{
  void *v5;
  size_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_DWORD *)a1 = a2;
  v5 = (void *)(a1 + 8);
  v6 = strlen(__s);
  if (v6 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v7 = v6;
  if (v6 >= 0x17)
  {
    v8 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v8 = v6 | 7;
    v9 = v8 + 1;
    v5 = operator new(v8 + 1);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v9 | 0x8000000000000000;
    *(_QWORD *)(a1 + 8) = v5;
  }
  else
  {
    *(_BYTE *)(a1 + 31) = v6;
    if (!v6)
      goto LABEL_9;
  }
  memmove(v5, __s, v7);
LABEL_9:
  *((_BYTE *)v5 + v7) = 0;
  return a1;
}

uint64_t *sub_20B288844(uint64_t *result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  BOOL v9;
  uint64_t *v10;
  uint64_t v11;
  int v12;
  char *v13;
  _BYTE *v14;
  __int128 v15;

  qword_25463BE20 = 0;
  qword_25463BE18 = 0;
  qword_25463BE10 = (uint64_t)&qword_25463BE18;
  if (a2)
  {
    v2 = result;
    v3 = 0;
    v4 = &result[4 * a2];
    v5 = *(_DWORD *)result;
LABEL_6:
    v7 = &qword_25463BE18;
LABEL_10:
    if (v3)
    {
      v10 = v7 + 1;
      if (v7[1])
        goto LABEL_27;
    }
    else
    {
LABEL_20:
      v10 = &qword_25463BE18;
      v7 = &qword_25463BE18;
    }
LABEL_21:
    v13 = (char *)operator new(0x40uLL);
    *((_DWORD *)v13 + 8) = v5;
    v14 = v13 + 40;
    if (*((char *)v2 + 31) < 0)
    {
      sub_20AEC60F4(v14, (void *)v2[1], v2[2]);
    }
    else
    {
      v15 = *(_OWORD *)(v2 + 1);
      *((_QWORD *)v13 + 7) = v2[3];
      *(_OWORD *)v14 = v15;
    }
    *(_QWORD *)v13 = 0;
    *((_QWORD *)v13 + 1) = 0;
    *((_QWORD *)v13 + 2) = v7;
    *v10 = (uint64_t)v13;
    if (*(_QWORD *)qword_25463BE10)
    {
      qword_25463BE10 = *(_QWORD *)qword_25463BE10;
      v13 = (char *)*v10;
    }
    result = sub_20AEC84C8((uint64_t *)qword_25463BE18, (uint64_t *)v13);
    ++qword_25463BE20;
LABEL_27:
    while (1)
    {
      v2 += 4;
      if (v2 == v4)
        break;
      v3 = qword_25463BE18;
      v5 = *(_DWORD *)v2;
      if ((uint64_t *)qword_25463BE10 == &qword_25463BE18)
        goto LABEL_6;
      v6 = qword_25463BE18;
      if (qword_25463BE18)
      {
        do
        {
          v7 = (uint64_t *)v6;
          v6 = *(_QWORD *)(v6 + 8);
        }
        while (v6);
      }
      else
      {
        v8 = &qword_25463BE18;
        do
        {
          v7 = (uint64_t *)v8[2];
          v9 = *v7 == (_QWORD)v8;
          v8 = v7;
        }
        while (v9);
      }
      if (*((_DWORD *)v7 + 8) < v5)
        goto LABEL_10;
      if (!qword_25463BE18)
        goto LABEL_20;
      v11 = qword_25463BE18;
      while (1)
      {
        while (1)
        {
          v7 = (uint64_t *)v11;
          v12 = *(_DWORD *)(v11 + 32);
          if (v12 <= v5)
            break;
          v11 = *v7;
          v10 = v7;
          if (!*v7)
            goto LABEL_21;
        }
        if (v12 >= v5)
          break;
        v11 = v7[1];
        if (!v11)
        {
          v10 = v7 + 1;
          goto LABEL_21;
        }
      }
    }
  }
  return result;
}

void sub_20B2889F0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  sub_20B288A50((char *)qword_25463BE18);
  _Unwind_Resume(a1);
}

void sub_20B288A14(_Unwind_Exception *a1)
{
  char *v1;

  sub_20B288A50(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B288A28(uint64_t a1)
{
  sub_20B288A50(*(char **)(a1 + 8));
  return a1;
}

void sub_20B288A50(char *a1)
{
  if (a1)
  {
    sub_20B288A50(*(_QWORD *)a1);
    sub_20B288A50(*((_QWORD *)a1 + 1));
    if (a1[63] < 0)
      operator delete(*((void **)a1 + 5));
    operator delete(a1);
  }
}

uint64_t sub_20B288AA8(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;

  v7 = a2;
  v3 = a1[3];
  if (!v3)
    sub_20AECABA4();
  (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v3 + 48))(v3, &v7);
  v4 = (_QWORD *)a1[3];
  if (v4 == a1)
  {
    v5 = 4;
    v4 = a1;
    goto LABEL_6;
  }
  if (v4)
  {
    v5 = 5;
LABEL_6:
    (*(void (**)(void))(*v4 + 8 * v5))();
  }
  return MEMORY[0x20BD3583C](a1, 0x1020C40A5B76CDFLL);
}

void sub_20B288B34(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B288B58(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_20B288B78(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP11__IOSurfaceEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP11__IOSurfaceEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP11__IOSurfaceEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP11__IOSurfaceEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_20B288BE8(CVPixelBufferRef ****a1)
{
  CVPixelBufferRef **v1;
  CVPixelBufferRef *v2;
  IOSurfaceRef IOSurface;
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  __CVBuffer *v7;
  double result;
  std::__shared_weak_count *v9;
  __CVBuffer *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  size_t PlaneCount;
  unint64_t v14;
  char *v15;
  size_t v16;
  unint64_t *v17;
  unint64_t v18;
  __int128 v19;
  __CVBuffer *v20;
  IOSurfaceRef v21;
  std::__shared_weak_count *v22;

  v1 = **a1;
  v2 = *v1;
  IOSurface = CVPixelBufferGetIOSurface(**v1);
  sub_20B285A10(&v21, IOSurface);
  if (v21)
  {
    sub_20B4E7AC0(&v21, &v19);
    goto LABEL_3;
  }
  v10 = *v2;
  v9 = (std::__shared_weak_count *)v2[1];
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  if (!v10)
  {
    v19 = 0uLL;
    v20 = 0;
    if (!v9)
      goto LABEL_3;
    goto LABEL_24;
  }
  PlaneCount = CVPixelBufferGetPlaneCount(v10);
  if (PlaneCount <= 1)
    v14 = 1;
  else
    v14 = PlaneCount;
  sub_20B289920((uint64_t)v2);
  v19 = 0uLL;
  v20 = 0;
  if (v14 >> 61)
    sub_20AEC60B8();
  v15 = (char *)operator new(8 * v14);
  *(_QWORD *)&v19 = v15;
  v20 = (__CVBuffer *)&v15[8 * v14];
  bzero(v15, 8 * v14);
  v16 = 0;
  *((_QWORD *)&v19 + 1) = v20;
  do
  {
    *(_QWORD *)&v15[8 * v16] = CVPixelBufferGetBaseAddressOfPlane(v10, v16);
    ++v16;
  }
  while (v14 != v16);
  sub_20B289AFC((uint64_t)v2);
  if (v9)
  {
LABEL_24:
    v17 = (unint64_t *)&v9->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
LABEL_3:
  v4 = v22;
  if (v22)
  {
    v5 = (unint64_t *)&v22->__shared_owners_;
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v2[14];
  if (v7)
  {
    v2[15] = v7;
    operator delete(v7);
  }
  result = *(double *)&v19;
  *((_OWORD *)v2 + 7) = v19;
  v2[16] = v20;
  return result;
}

void sub_20B288D9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  std::__shared_weak_count *v14;
  void *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  operator delete(v15);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (a14)
  {
    v19 = (unint64_t *)&a14->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B288E48(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C416A68;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B288E58(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C416A68;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B288E88(uint64_t a1)
{
  void *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v2 = *(void **)(a1 + 136);
  if (v2)
  {
    *(_QWORD *)(a1 + 144) = v2;
    operator delete(v2);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 64));
  v3 = *(std::__shared_weak_count **)(a1 + 32);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_20B288F00(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20AEC0BD8(v5);
  v21[0] = v5;
  sub_20B2891A4((_QWORD *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_20AEC0138();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v14 + 128);
    MEMORY[0x20BD3583C](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_20AECFAB8();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24C416A28[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_20B289150(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20B289174(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B289190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B52CE84((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2891A4(_QWORD *a1, unsigned int *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B01219C((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C416A40[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C416A10[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B28928C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B2892A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2892BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

size_t sub_20B2892D0(_QWORD **a1)
{
  _DWORD *v1;
  const char *v2;
  uint64_t v3;
  size_t result;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v1 = (_DWORD *)**a1;
  v2 = (const char *)(*a1)[1];
  v3 = v1[6];
  if ((_DWORD)v3 != -1)
    ((void (*)(char *, _DWORD *))off_24C416A10[v3])(&v9, v1);
  v1[6] = -1;
  result = strlen(v2);
  if (result >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v5 = result;
  if (result >= 0x17)
  {
    v7 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17)
      v7 = result | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    *((_QWORD *)v1 + 1) = v5;
    *((_QWORD *)v1 + 2) = v8 | 0x8000000000000000;
    *(_QWORD *)v1 = v6;
  }
  else
  {
    *((_BYTE *)v1 + 23) = result;
    v6 = v1;
    if (!result)
      goto LABEL_11;
  }
  result = (size_t)memmove(v6, v2, v5);
LABEL_11:
  *((_BYTE *)v6 + v5) = 0;
  v1[6] = 1;
  return result;
}

void sub_20B2893BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  void *v6;
  const char *v7;
  size_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  _BYTE v15[15];
  char v16;
  void *__p[2];
  unint64_t v18;
  _QWORD v19[3];

  v19[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 16);
  *(_QWORD *)((char *)v19 + 7) = *(_QWORD *)(a2 + 15);
  v4 = *(void **)a2;
  v19[0] = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v14 = v4;
  *(_QWORD *)v15 = v19[0];
  *(_QWORD *)&v15[7] = *(_QWORD *)((char *)v19 + 7);
  v16 = v5;
  memset(v19, 0, 15);
  v6 = __p;
  v7 = *(const char **)(v2 + 24);
  v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v11 = v8 | 7;
    v12 = v11 + 1;
    v6 = operator new(v11 + 1);
    __p[1] = v9;
    v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((_BYTE *)v9 + (_QWORD)v6) = 0;
    v10 = *(unsigned int *)(v3 + 24);
    if ((_DWORD)v10 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v10 = *(unsigned int *)(v3 + 24);
  if ((_DWORD)v10 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24C416A10[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_20AEC7620((_QWORD *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0)
    goto LABEL_15;
}

void sub_20B289574(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B2895B8(uint64_t a1, void **a2)
{
  const void *v3;
  _BYTE *v4;
  _QWORD *v5;
  size_t v6;
  size_t v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  size_t v18;
  size_t v19;
  void *v20;
  char *v21;
  void **v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  void **v27;

  v3 = *(const void **)(*(_QWORD *)a1 + 32);
  v5 = a2[1];
  v4 = a2[2];
  if (v5 < (_QWORD *)v4)
  {
    v6 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7)
      sub_20AEC0138();
    v7 = v6;
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v8 = operator new(v14 + 1);
      v5[1] = v7;
      v5[2] = v15 | 0x8000000000000000;
      *v5 = v8;
    }
    else
    {
      *((_BYTE *)v5 + 23) = v6;
      v8 = v5;
      if (!v6)
        goto LABEL_19;
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((_BYTE *)v8 + v7) = 0;
    v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (_BYTE *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20AEC60B8();
  v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (_BYTE *)*a2) >> 3);
  v11 = 2 * v10;
  if (2 * v10 <= v9 + 1)
    v11 = v9 + 1;
  if (v10 >= 0x555555555555555)
    v12 = 0xAAAAAAAAAAAAAAALL;
  else
    v12 = v11;
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60CC();
    v13 = (char *)operator new(24 * v12);
  }
  else
  {
    v13 = 0;
  }
  v17 = &v13[24 * v9];
  v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7)
    sub_20AEC0138();
  v19 = v18;
  if (v18 >= 0x17)
  {
    v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17)
      v24 = v18 | 7;
    v25 = v24 + 1;
    v20 = operator new(v24 + 1);
    *((_QWORD *)v17 + 1) = v19;
    *((_QWORD *)v17 + 2) = v25 | 0x8000000000000000;
    *(_QWORD *)v17 = v20;
  }
  else
  {
    v17[23] = v18;
    v20 = v17;
    if (!v18)
    {
      v21 = &v13[24 * v12];
      *v17 = 0;
      v16 = v17 + 24;
      v22 = (void **)*a2;
      v23 = (void **)a2[1];
      if (v23 == *a2)
        goto LABEL_36;
      do
      {
LABEL_30:
        v26 = *(_OWORD *)(v23 - 3);
        *((_QWORD *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      v23 = (void **)*a2;
      v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0)
          operator delete(*(v27 - 3));
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  v21 = &v13[24 * v12];
  *((_BYTE *)v20 + v19) = 0;
  v16 = v17 + 24;
  v22 = (void **)*a2;
  v23 = (void **)a2[1];
  if (v23 != *a2)
    goto LABEL_30;
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23)
    operator delete(v23);
LABEL_39:
  a2[1] = v16;
}

void sub_20B289848(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

void sub_20B289860(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_20B28986C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B289890(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_20B2898B0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP10__CVBufferEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP10__CVBufferEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP10__CVBufferEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP10__CVBufferEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_20B289920(uint64_t a1)
{
  std::mutex *v2;
  uint64_t v3;
  int v4;
  CVPixelBufferLockFlags v5;
  CVPixelBufferLockFlags v6;
  int v7;

  v2 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 24) + 1;
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_DWORD *)(a1 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      if (v3 && !*(_QWORD *)(a1 + 32))
        goto LABEL_5;
      v5 = 1;
    }
    else
    {
      if (v4 != 2 || *(_QWORD *)(a1 + 32))
        goto LABEL_5;
      v5 = 0;
    }
    CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)a1, v5);
    *(_DWORD *)(a1 + 16) = 0;
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v6 = 0;
    v7 = 2;
LABEL_16:
    CVPixelBufferLockBaseAddress(*(CVPixelBufferRef *)a1, v6);
    *(_DWORD *)(a1 + 16) = v7;
    std::mutex::unlock(v2);
    return;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    v6 = 1;
    v7 = 1;
    goto LABEL_16;
  }
LABEL_5:
  std::mutex::unlock(v2);
}

void sub_20B2899E8(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_20B2899FC(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_20B289A10(uint64_t a1)
{
  std::mutex *v2;
  uint64_t v3;
  int v4;
  CVPixelBufferLockFlags v6;
  CVPixelBufferLockFlags v7;
  int v8;

  v2 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 32) + 1;
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_DWORD *)(a1 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      v6 = 1;
      if (*(_QWORD *)(a1 + 24) && !v3)
        goto LABEL_7;
    }
    else
    {
      if (v4 != 2 || v3 != 0)
        goto LABEL_7;
      v6 = 0;
    }
    CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)a1, v6);
    *(_DWORD *)(a1 + 16) = 0;
    v3 = *(_QWORD *)(a1 + 32);
  }
  if (v3)
  {
    v7 = 0;
    v8 = 2;
LABEL_18:
    CVPixelBufferLockBaseAddress(*(CVPixelBufferRef *)a1, v7);
    *(_DWORD *)(a1 + 16) = v8;
    std::mutex::unlock(v2);
    return;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    v7 = 1;
    v8 = 1;
    goto LABEL_18;
  }
LABEL_7:
  std::mutex::unlock(v2);
}

void sub_20B289AD4(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_20B289AE8(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_20B289AFC(uint64_t a1)
{
  std::mutex *v2;
  uint64_t v3;
  int v4;
  CVPixelBufferLockFlags v5;
  CVPixelBufferLockFlags v6;
  int v7;

  v2 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 24) - 1;
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_DWORD *)(a1 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      if (v3 && !*(_QWORD *)(a1 + 32))
        goto LABEL_5;
      v5 = 1;
    }
    else
    {
      if (v4 != 2 || *(_QWORD *)(a1 + 32))
        goto LABEL_5;
      v5 = 0;
    }
    CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)a1, v5);
    *(_DWORD *)(a1 + 16) = 0;
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v6 = 0;
    v7 = 2;
LABEL_16:
    CVPixelBufferLockBaseAddress(*(CVPixelBufferRef *)a1, v6);
    *(_DWORD *)(a1 + 16) = v7;
    std::mutex::unlock(v2);
    return;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    v6 = 1;
    v7 = 1;
    goto LABEL_16;
  }
LABEL_5:
  std::mutex::unlock(v2);
}

void sub_20B289BC4(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_20B289BD8(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_20B289BEC(uint64_t a1)
{
  std::mutex *v2;
  uint64_t v3;
  int v4;
  CVPixelBufferLockFlags v6;
  CVPixelBufferLockFlags v7;
  int v8;

  v2 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 32) - 1;
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_DWORD *)(a1 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      v6 = 1;
      if (*(_QWORD *)(a1 + 24) && !v3)
        goto LABEL_7;
    }
    else
    {
      if (v4 != 2 || v3 != 0)
        goto LABEL_7;
      v6 = 0;
    }
    CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)a1, v6);
    *(_DWORD *)(a1 + 16) = 0;
    v3 = *(_QWORD *)(a1 + 32);
  }
  if (v3)
  {
    v7 = 0;
    v8 = 2;
LABEL_18:
    CVPixelBufferLockBaseAddress(*(CVPixelBufferRef *)a1, v7);
    *(_DWORD *)(a1 + 16) = v8;
    std::mutex::unlock(v2);
    return;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    v7 = 1;
    v8 = 1;
    goto LABEL_18;
  }
LABEL_7:
  std::mutex::unlock(v2);
}

void sub_20B289CB0(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_20B289CC4(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_20B289CD8(int a1@<W0>, int a2@<W1>, unsigned int *a3@<X2>, uint64_t a4@<X8>)
{
  int v7;
  uint64_t *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  void *__p;
  __int128 v29;
  uint64_t (**v30)();
  uint64_t *v31;
  std::__shared_weak_count *v32;
  void (**v33)(_QWORD);
  uint64_t *v34;
  std::__shared_weak_count *v35;
  char v36;

  if ((a2 - 1) > 0x25)
    v7 = 0;
  else
    v7 = dword_20B5F3478[a2 - 1] | dword_20B5F33E0[a2 - 1];
  __p = operator new(0x78uLL);
  v29 = xmmword_20B5F1DA0;
  strcpy((char *)__p, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
  sub_20B4E7E40(a3, v7, (uint64_t *)&__p, (uint64_t)&v33);
  if (!v36)
  {
    v27 = sub_20B0B52D8((uint64_t)&v33);
    sub_20B0BFB50(v27);
  }
  v8 = v34;
  v30 = &off_24C41E150;
  v31 = v34;
  v9 = v35;
  v32 = v35;
  v34 = 0;
  v35 = 0;
  (*v33)(&v33);
  if (SHIBYTE(v29) < 0)
  {
    operator delete(__p);
    if (!a1)
      goto LABEL_25;
  }
  else if (!a1)
  {
LABEL_25:
    *(_QWORD *)a4 = &off_24C41E150;
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    v31 = 0;
    v32 = 0;
    *(_DWORD *)(a4 + 24) = 0;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
    goto LABEL_40;
  }
  if (a1 == 1)
  {
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v19 = __ldxr(p_shared_owners);
      while (__stxr(v19 + 1, p_shared_owners));
    }
    if (v8)
    {
      v21 = *v8;
      v20 = (std::__shared_weak_count *)v8[1];
      if (v20)
      {
        v22 = (unint64_t *)&v20->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      if (v21)
        sub_20B4ED800((uint64_t)v8);
    }
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    *(_QWORD *)a4 = &off_24C41DFE8;
    *(_DWORD *)(a4 + 24) = 1;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
LABEL_40:
    v25 = (unint64_t *)&v17->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    return;
  }
  if (a1 != 2)
    goto LABEL_25;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  if (v8)
  {
    v13 = *v8;
    v12 = (std::__shared_weak_count *)v8[1];
    if (v12)
    {
      v14 = (unint64_t *)&v12->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      do
        v16 = __ldaxr(v14);
      while (__stlxr(v16 - 1, v14));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    if (v13)
      sub_20B4ED8EC((uint64_t)v8);
  }
  *(_QWORD *)(a4 + 8) = v8;
  *(_QWORD *)(a4 + 16) = v9;
  *(_QWORD *)a4 = &off_24C41E008;
  *(_DWORD *)(a4 + 24) = 2;
  v30 = &off_24C41E150;
  v17 = v32;
  if (v32)
    goto LABEL_40;
}

void sub_20B289FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v7;
  va_list va;

  va_start(va, a4);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28A01C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  sub_20AEEF4E0((uint64_t)&a18);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_20B28A048(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t *v16;
  _QWORD v18[3];
  _QWORD v19[3];
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  if (a1 == 2)
  {
    if (*(_DWORD *)(a2 + 24) != 2)
      goto LABEL_30;
    v9 = *(_QWORD *)(a2 + 8);
    v4 = *(std::__shared_weak_count **)(a2 + 16);
    v18[0] = &off_24C41E150;
    v18[1] = v9;
    v18[2] = v4;
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
    }
    sub_20B28A218(&v21, (uint64_t)v18);
    v2 = v22;
    v18[0] = &off_24C41E150;
    if (!v4)
      return v2;
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldaxr(v12);
    while (__stlxr(v8 - 1, v12));
    goto LABEL_27;
  }
  if (a1 == 1)
  {
    if (*(_DWORD *)(a2 + 24) != 1)
      goto LABEL_30;
    v13 = *(_QWORD *)(a2 + 8);
    v4 = *(std::__shared_weak_count **)(a2 + 16);
    v19[0] = &off_24C41E150;
    v19[1] = v13;
    v19[2] = v4;
    if (v4)
    {
      v14 = (unint64_t *)&v4->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
    }
    sub_20B28A218(&v21, (uint64_t)v19);
    v2 = v22;
    v19[0] = &off_24C41E150;
    if (!v4)
      return v2;
    v16 = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldaxr(v16);
    while (__stlxr(v8 - 1, v16));
LABEL_27:
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    return v2;
  }
  if (a1)
    return v2;
  if (*(_DWORD *)(a2 + 24))
LABEL_30:
    sub_20AECFAB8();
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(std::__shared_weak_count **)(a2 + 16);
  v20[0] = &off_24C41E150;
  v20[1] = v3;
  v20[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  sub_20B28A218(&v21, (uint64_t)v20);
  v2 = v22;
  v20[0] = &off_24C41E150;
  if (v4)
  {
    v7 = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    goto LABEL_27;
  }
  return v2;
}

void sub_20B28A1DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28A1F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B28A204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28A218(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  BOOL v41;
  unint64_t v42;
  uint64_t (**v43)();
  uint64_t v44;
  std::__shared_weak_count *v45;
  _QWORD v46[3];
  _QWORD v47[3];

  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_52;
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v46[0] = &off_24C41E150;
  v46[1] = v10;
  v46[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  sub_20B2C2D3C((uint64_t)v46);
  v46[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_16;
  v14 = (unint64_t *)&v11->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
  {
LABEL_16:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (v16)
      goto LABEL_17;
LABEL_27:
    v24 = *(_QWORD *)(a2 + 8);
    v43 = &off_24C41E150;
    v44 = v24;
    v45 = 0;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v16)
    goto LABEL_27;
LABEL_17:
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  v21 = *(_QWORD *)(a2 + 8);
  v20 = *(std::__shared_weak_count **)(a2 + 16);
  v43 = &off_24C41E150;
  v44 = v21;
  v45 = v20;
  if (v20)
  {
    v22 = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
LABEL_28:
  v25 = sub_20B4E7694((uint64_t)&v43, 0);
  v26 = v45;
  v47[0] = &off_24C41E150;
  v47[1] = v44;
  v47[2] = v45;
  if (v45)
  {
    v27 = (unint64_t *)&v45->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  v29 = sub_20B4E8AAC((uint64_t)v47);
  v30 = sub_20B4E8D2C((uint64_t)v47);
  v31 = sub_20B4E8FAC((uint64_t)v47);
  v32 = sub_20B4E922C((uint64_t)v47);
  v47[0] = &off_24C41E150;
  if (v26)
  {
    v33 = (unint64_t *)&v26->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
  v35 = v29;
  v36 = v29 | ((unint64_t)v30 << 32);
  v37 = v31 | ((unint64_t)v32 << 32);
  v43 = &off_24C41E150;
  v38 = v45;
  if (v45)
  {
    v39 = (unint64_t *)&v45->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
  if (v30)
    v41 = v35 == 0;
  else
    v41 = 1;
  if (v41)
    v42 = 0;
  else
    v42 = v36;
  *a1 = v25;
  a1[1] = v42;
  a1[2] = v37;
  if (v32 * HIDWORD(v42) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
LABEL_52:
    abort();
  }
}

void sub_20B28A520(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28A534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28A548(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va1);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B28A564(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416BF8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

uint64_t sub_20B28A5C8(uint64_t a1)
{
  uint64_t v2;
  char v4;

  v2 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1);
  *(_DWORD *)(a1 + 24) = -1;
  return a1;
}

void sub_20B28A620(uint64_t a1, size_t a2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  uint64_t v46[3];
  uint64_t (**v47)();
  uint64_t *v48;
  std::__shared_weak_count *v49;
  size_t v50[2];

  if (*(_DWORD *)(a1 + 40) >= 3u)
    goto LABEL_66;
  v3 = *(uint64_t **)(a1 + 24);
  if (!v3)
    return;
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!v6)
      return;
  }
  else
  {
LABEL_8:
    if (!v6)
      return;
  }
  v10 = *(_DWORD *)(a1 + 40);
  if (v10 == 2)
  {
    v20 = *(uint64_t **)(a1 + 24);
    v21 = *(std::__shared_weak_count **)(a1 + 32);
    v48 = v20;
    v49 = v21;
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
    }
    v47 = &off_24C41E008;
    if (v20)
    {
      v25 = *v20;
      v24 = (std::__shared_weak_count *)v20[1];
      if (v24)
      {
        v26 = (unint64_t *)&v24->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
        do
          v28 = __ldaxr(v26);
        while (__stlxr(v28 - 1, v26));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      if (v25)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10 == 1)
  {
    v29 = *(uint64_t **)(a1 + 24);
    v30 = *(std::__shared_weak_count **)(a1 + 32);
    v48 = v29;
    v49 = v30;
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    v47 = &off_24C41E008;
    if (v29)
    {
      v34 = *v29;
      v33 = (std::__shared_weak_count *)v29[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10)
LABEL_66:
    sub_20AECFAB8();
  v11 = *(uint64_t **)(a1 + 24);
  v12 = *(std::__shared_weak_count **)(a1 + 32);
  v48 = v11;
  v49 = v12;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v47 = &off_24C41E008;
  if (v11)
  {
    v16 = *v11;
    v15 = (std::__shared_weak_count *)v11[1];
    if (v15)
    {
      v17 = (unint64_t *)&v15->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    if (v16)
LABEL_49:
      sub_20B4ED8EC((uint64_t)v48);
  }
LABEL_50:
  sub_20B28AFA8(v46, a1);
  v50[0] = a2;
  v50[1] = (size_t)v46;
  sub_20AFC3DF8(v50);
  if (!v48)
    goto LABEL_58;
  v39 = *v48;
  v38 = (std::__shared_weak_count *)v48[1];
  if (!v38)
    goto LABEL_56;
  v40 = (unint64_t *)&v38->__shared_owners_;
  do
    v41 = __ldxr(v40);
  while (__stxr(v41 + 1, v40));
  do
    v42 = __ldaxr(v40);
  while (__stlxr(v42 - 1, v40));
  if (v42)
  {
LABEL_56:
    if (!v39)
      goto LABEL_58;
    goto LABEL_57;
  }
  ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
  std::__shared_weak_count::__release_weak(v38);
  if (v39)
LABEL_57:
    sub_20B4EDAC0((uint64_t)v48);
LABEL_58:
  v47 = &off_24C41E150;
  v43 = v49;
  if (v49)
  {
    v44 = (unint64_t *)&v49->__shared_owners_;
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }
}

void sub_20B28A9F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E79B0((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B28AA08(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD v34[2];
  std::__shared_weak_count *v35;

  *(_QWORD *)a1 = off_24C416BF8;
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
        goto LABEL_8;
    }
    else
    {
LABEL_7:
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
      {
LABEL_8:
        v10 = *((_DWORD *)v4 + 4);
        goto LABEL_11;
      }
    }
  }
  v10 = 0;
LABEL_11:
  *(_QWORD *)(a1 + 16) = &off_24C41E150;
  *(_DWORD *)(a1 + 8) = v10;
  v11 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v11;
  if (v11)
  {
    v12 = (unint64_t *)(v11 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  *(_DWORD *)(a1 + 40) = 0;
  v15 = *(_QWORD *)(a2 + 8);
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  v34[0] = &off_24C41E150;
  v34[1] = v15;
  v35 = v14;
  if (v14)
  {
    v16 = (unint64_t *)&v14->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  *(_QWORD *)(a1 + 48) = sub_20B28ACBC((uint64_t)v34);
  *(_QWORD *)(a1 + 56) = v18;
  v34[0] = &off_24C41E150;
  v19 = v35;
  if (v35)
  {
    v20 = (unint64_t *)&v35->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      v22 = *(_QWORD *)(a2 + 8);
      if (v22)
        goto LABEL_22;
LABEL_36:
      v29 = 0;
      goto LABEL_37;
    }
  }
  v22 = *(_QWORD *)(a2 + 8);
  if (!v22)
    goto LABEL_36;
LABEL_22:
  v23 = *(std::__shared_weak_count **)(v22 + 8);
  if (v23)
  {
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
      v27 = *(uint64_t **)(a2 + 8);
      if (v27)
        goto LABEL_28;
LABEL_41:
      v29 = 0;
      if (!*(_DWORD *)(a1 + 48))
        goto LABEL_42;
      goto LABEL_38;
    }
  }
  v27 = *(uint64_t **)(a2 + 8);
  if (!v27)
    goto LABEL_41;
LABEL_28:
  v29 = *v27;
  v28 = (std::__shared_weak_count *)v27[1];
  if (!v28)
    goto LABEL_37;
  v30 = (unint64_t *)&v28->__shared_owners_;
  do
    v31 = __ldxr(v30);
  while (__stxr(v31 + 1, v30));
  do
    v32 = __ldaxr(v30);
  while (__stlxr(v32 - 1, v30));
  if (v32)
  {
LABEL_37:
    if (!*(_DWORD *)(a1 + 48))
      goto LABEL_42;
    goto LABEL_38;
  }
  ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
  std::__shared_weak_count::__release_weak(v28);
  if (!*(_DWORD *)(a1 + 48))
  {
LABEL_42:
    if (!v29)
      return a1;
    goto LABEL_43;
  }
LABEL_38:
  if ((v29 == 0) == (*(_DWORD *)(a1 + 52) == 0))
    return a1;
LABEL_43:
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 105, (uint64_t)"(buffer == nullptr) == extent.IsEmpty()", 39, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return a1;
}

void sub_20B28AC8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v2);
  _Unwind_Resume(a1);
}

void sub_20B28ACA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_20B28ACBC(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t (**v29)();
  uint64_t v30;
  std::__shared_weak_count *v31;
  _QWORD v32[3];

  v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (!v3)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v4)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 156, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  v32[0] = &off_24C41E150;
  v32[1] = v8;
  v32[2] = v9;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  sub_20B2C2D3C((uint64_t)v32);
  v32[0] = &off_24C41E150;
  if (!v9)
    goto LABEL_16;
  v12 = (unint64_t *)&v9->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (v13)
  {
LABEL_16:
    v14 = *(std::__shared_weak_count **)(a1 + 16);
    if (v14)
      goto LABEL_17;
LABEL_27:
    v22 = *(_QWORD *)(a1 + 8);
    v29 = &off_24C41E150;
    v30 = v22;
    v31 = 0;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_27;
LABEL_17:
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v19 = *(_QWORD *)(a1 + 8);
  v18 = *(std::__shared_weak_count **)(a1 + 16);
  v29 = &off_24C41E150;
  v30 = v19;
  v31 = v18;
  if (v18)
  {
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
  }
LABEL_28:
  v23 = sub_20B4E8AAC((uint64_t)&v29);
  v24 = sub_20B4E8D2C((uint64_t)&v29);
  sub_20B4E8FAC((uint64_t)&v29);
  sub_20B4E922C((uint64_t)&v29);
  v29 = &off_24C41E150;
  v25 = v31;
  if (v31)
  {
    v26 = (unint64_t *)&v31->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  return v23 | ((unint64_t)v24 << 32);
}

void sub_20B28AEF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28AF04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B28AF20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_20AECFAB8();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20B28AFA8(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t (**v26)();
  uint64_t v27;
  std::__shared_weak_count *v28;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v26 = &off_24C41E150;
          v27 = v10;
          v28 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24C41E150;
          sub_20B28A218(a1, (uint64_t)&v23);
          v23 = &off_24C41E150;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v26 = &off_24C41E150;
          v20 = v28;
          if (v28)
          {
            v21 = (unint64_t *)&v28->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *a1 = 0;
  a1[1] = v16;
  a1[2] = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
}

void sub_20B28B1A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_20B4E888C(&a9);
  sub_20B4E888C(&a12);
  _Unwind_Resume(a1);
}

void sub_20B28B1C4(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int *v6;
  int v7;
  uint64_t *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  void *__p;
  __int128 v29;
  uint64_t (**v30)();
  uint64_t *v31;
  std::__shared_weak_count *v32;
  void (**v33)(_QWORD);
  uint64_t *v34;
  std::__shared_weak_count *v35;
  char v36;

  v6 = (unsigned int *)(a3 + 24);
  if ((a2 - 1) > 0x25)
    v7 = 0;
  else
    v7 = dword_20B5F3478[a2 - 1] | dword_20B5F33E0[a2 - 1];
  __p = operator new(0x78uLL);
  v29 = xmmword_20B5F1DA0;
  strcpy((char *)__p, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
  sub_20B4E7E40(v6, v7, (uint64_t *)&__p, (uint64_t)&v33);
  if (!v36)
  {
    v27 = sub_20B0B52D8((uint64_t)&v33);
    sub_20B0BFB50(v27);
  }
  v8 = v34;
  v30 = &off_24C41E150;
  v31 = v34;
  v9 = v35;
  v32 = v35;
  v34 = 0;
  v35 = 0;
  (*v33)(&v33);
  if (SHIBYTE(v29) < 0)
  {
    operator delete(__p);
    if (!a1)
      goto LABEL_25;
  }
  else if (!a1)
  {
LABEL_25:
    *(_QWORD *)a4 = &off_24C41E150;
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    v31 = 0;
    v32 = 0;
    *(_DWORD *)(a4 + 24) = 0;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
    goto LABEL_40;
  }
  if (a1 == 1)
  {
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v19 = __ldxr(p_shared_owners);
      while (__stxr(v19 + 1, p_shared_owners));
    }
    if (v8)
    {
      v21 = *v8;
      v20 = (std::__shared_weak_count *)v8[1];
      if (v20)
      {
        v22 = (unint64_t *)&v20->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      if (v21)
        sub_20B4ED800((uint64_t)v8);
    }
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    *(_QWORD *)a4 = &off_24C41DFE8;
    *(_DWORD *)(a4 + 24) = 1;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
LABEL_40:
    v25 = (unint64_t *)&v17->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    return;
  }
  if (a1 != 2)
    goto LABEL_25;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  if (v8)
  {
    v13 = *v8;
    v12 = (std::__shared_weak_count *)v8[1];
    if (v12)
    {
      v14 = (unint64_t *)&v12->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      do
        v16 = __ldaxr(v14);
      while (__stlxr(v16 - 1, v14));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    if (v13)
      sub_20B4ED8EC((uint64_t)v8);
  }
  *(_QWORD *)(a4 + 8) = v8;
  *(_QWORD *)(a4 + 16) = v9;
  *(_QWORD *)a4 = &off_24C41E008;
  *(_DWORD *)(a4 + 24) = 2;
  v30 = &off_24C41E150;
  v17 = v32;
  if (v32)
    goto LABEL_40;
}

void sub_20B28B4A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v7;
  va_list va;

  va_start(va, a4);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28B508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  sub_20AEEF4E0((uint64_t)&a18);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20B28B534(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  BOOL v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (**v45)();
  uint64_t v46;
  std::__shared_weak_count *v47;
  _QWORD v48[3];
  __int128 v49;
  std::__shared_weak_count *v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_52;
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v48[0] = &off_24C41E150;
  v48[1] = v10;
  v48[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  sub_20B2C2D3C((uint64_t)v48);
  v48[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_16;
  v14 = (unint64_t *)&v11->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
  {
LABEL_16:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (v16)
      goto LABEL_17;
LABEL_27:
    v24 = *(_QWORD *)(a2 + 8);
    v45 = &off_24C41E150;
    v46 = v24;
    v47 = 0;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v16)
    goto LABEL_27;
LABEL_17:
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  v21 = *(_QWORD *)(a2 + 8);
  v20 = *(std::__shared_weak_count **)(a2 + 16);
  v45 = &off_24C41E150;
  v46 = v21;
  v47 = v20;
  if (v20)
  {
    v22 = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
LABEL_28:
  v25 = sub_20B4E7694((uint64_t)&v45, 0);
  v26 = v47;
  *(_QWORD *)&v49 = &off_24C41E150;
  *((_QWORD *)&v49 + 1) = v46;
  v50 = v47;
  if (v47)
  {
    v27 = (unint64_t *)&v47->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  v29 = sub_20B4E8AAC((uint64_t)&v49);
  v30 = sub_20B4E8D2C((uint64_t)&v49);
  v31 = sub_20B4E8FAC((uint64_t)&v49);
  v32 = sub_20B4E922C((uint64_t)&v49);
  *(_QWORD *)&v49 = &off_24C41E150;
  if (v26)
  {
    v33 = (unint64_t *)&v26->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
  v35 = v29;
  v36 = v29 | ((unint64_t)v30 << 32);
  v37 = v31 | ((unint64_t)v32 << 32);
  v45 = &off_24C41E150;
  v38 = v47;
  if (v47)
  {
    v39 = (unint64_t *)&v47->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
  if (v30)
    v41 = v35 == 0;
  else
    v41 = 1;
  if (v41)
    v42 = 0;
  else
    v42 = v36;
  *(_QWORD *)((char *)&v49 + 4) = v42;
  LODWORD(v49) = 2;
  v43 = v49;
  LODWORD(v49) = 1;
  *(_QWORD *)((char *)&v49 + 4) = v37;
  v44 = v49;
  *(_QWORD *)a1 = v25;
  *(_QWORD *)(a1 + 8) = v43;
  *(_DWORD *)(a1 + 16) = HIDWORD(v42);
  *(_QWORD *)(a1 + 20) = v44;
  *(_DWORD *)(a1 + 28) = v32;
  *(_QWORD *)(a1 + 32) = v42;
  *(_QWORD *)(a1 + 40) = v37;
  if (HIDWORD(v42) * v32 == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
LABEL_52:
    abort();
  }
}

void sub_20B28B8B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B28B8C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28B8D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_20B4E888C(&a15);
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B28B8F4(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416C88;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

uint64_t sub_20B28B958(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v33[2];
  std::__shared_weak_count *v34;

  *(_QWORD *)a1 = off_24C416C88;
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
        goto LABEL_8;
    }
    else
    {
LABEL_7:
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
      {
LABEL_8:
        v10 = *((_DWORD *)v4 + 4);
        goto LABEL_11;
      }
    }
  }
  v10 = 0;
LABEL_11:
  *(_QWORD *)(a1 + 16) = &off_24C41E150;
  *(_DWORD *)(a1 + 8) = v10;
  v11 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v11;
  if (v11)
  {
    v12 = (unint64_t *)(v11 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  *(_DWORD *)(a1 + 40) = 0;
  v15 = *(_QWORD *)(a2 + 8);
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  v33[0] = &off_24C41E150;
  v33[1] = v15;
  v34 = v14;
  if (v14)
  {
    v16 = (unint64_t *)&v14->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  sub_20B28BC0C((uint64_t)v33, a1 + 48);
  v33[0] = &off_24C41E150;
  v18 = v34;
  if (v34)
  {
    v19 = (unint64_t *)&v34->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      v21 = *(_QWORD *)(a2 + 8);
      if (v21)
        goto LABEL_22;
LABEL_36:
      v28 = 0;
      goto LABEL_37;
    }
  }
  v21 = *(_QWORD *)(a2 + 8);
  if (!v21)
    goto LABEL_36;
LABEL_22:
  v22 = *(std::__shared_weak_count **)(v21 + 8);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
      v26 = *(uint64_t **)(a2 + 8);
      if (v26)
        goto LABEL_28;
LABEL_41:
      v28 = 0;
      if (!*(_DWORD *)(a1 + 72))
        goto LABEL_42;
      goto LABEL_38;
    }
  }
  v26 = *(uint64_t **)(a2 + 8);
  if (!v26)
    goto LABEL_41;
LABEL_28:
  v28 = *v26;
  v27 = (std::__shared_weak_count *)v26[1];
  if (!v27)
    goto LABEL_37;
  v29 = (unint64_t *)&v27->__shared_owners_;
  do
    v30 = __ldxr(v29);
  while (__stxr(v30 + 1, v29));
  do
    v31 = __ldaxr(v29);
  while (__stlxr(v31 - 1, v29));
  if (v31)
  {
LABEL_37:
    if (!*(_DWORD *)(a1 + 72))
      goto LABEL_42;
    goto LABEL_38;
  }
  ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
  std::__shared_weak_count::__release_weak(v27);
  if (!*(_DWORD *)(a1 + 72))
  {
LABEL_42:
    if (!v28)
      return a1;
    goto LABEL_43;
  }
LABEL_38:
  if ((v28 == 0) == (*(_DWORD *)(a1 + 76) == 0))
    return a1;
LABEL_43:
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 105, (uint64_t)"(buffer == nullptr) == extent.IsEmpty()", 39, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return a1;
}

void sub_20B28BBDC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v2);
  _Unwind_Resume(a1);
}

void sub_20B28BBF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

void sub_20B28BC0C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  _QWORD v37[3];
  _QWORD v38[3];

  v38[2] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 156, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  v37[0] = &off_24C41E150;
  v37[1] = v10;
  v37[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  sub_20B2C2D3C((uint64_t)v37);
  v37[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_16;
  v14 = (unint64_t *)&v11->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
  {
LABEL_16:
    v16 = *(std::__shared_weak_count **)(a1 + 16);
    if (v16)
      goto LABEL_17;
LABEL_27:
    v24 = *(_QWORD *)(a1 + 8);
    v34 = &off_24C41E150;
    v35 = v24;
    v36 = 0;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v16 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v16)
    goto LABEL_27;
LABEL_17:
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  v21 = *(_QWORD *)(a1 + 8);
  v20 = *(std::__shared_weak_count **)(a1 + 16);
  v34 = &off_24C41E150;
  v35 = v21;
  v36 = v20;
  if (v20)
  {
    v22 = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
LABEL_28:
  v25 = sub_20B4E8AAC((uint64_t)&v34);
  v26 = sub_20B4E8D2C((uint64_t)&v34);
  v27 = sub_20B4E8FAC((uint64_t)&v34);
  v28 = sub_20B4E922C((uint64_t)&v34);
  v34 = &off_24C41E150;
  v29 = v36;
  if (v36)
  {
    v30 = (unint64_t *)&v36->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v32 = v27 | ((unint64_t)v28 << 32);
  v33 = v25 | ((unint64_t)v26 << 32);
  LODWORD(v38[0]) = 2;
  HIDWORD(v38[0]) = v33;
  *(_QWORD *)a2 = v38[0];
  *(_DWORD *)(a2 + 8) = v26;
  LODWORD(v38[0]) = 1;
  *(_QWORD *)((char *)v38 + 4) = v32;
  *(_QWORD *)(a2 + 12) = v38[0];
  *(_DWORD *)(a2 + 20) = v28;
  *(_QWORD *)(a2 + 24) = v33;
  *(_QWORD *)(a2 + 32) = v32;
}

void sub_20B28BE9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28BEB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28BECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_20AECFAB8();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20B28BF54(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24C41E150;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B28B534(a1, (uint64_t)&v27);
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24C41E150;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 2;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 2 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
  v20 = __PAIR64__(DWORD1(v30), 2);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B28C17C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_20B28C198(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int *v6;
  int v7;
  uint64_t *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  void *__p;
  __int128 v29;
  uint64_t (**v30)();
  uint64_t *v31;
  std::__shared_weak_count *v32;
  void (**v33)(_QWORD);
  uint64_t *v34;
  std::__shared_weak_count *v35;
  char v36;

  v6 = (unsigned int *)(a3 + 24);
  if ((a2 - 1) > 0x25)
    v7 = 0;
  else
    v7 = dword_20B5F3478[a2 - 1] | dword_20B5F33E0[a2 - 1];
  __p = operator new(0x78uLL);
  v29 = xmmword_20B5F1DA0;
  strcpy((char *)__p, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
  sub_20B4E7E40(v6, v7, (uint64_t *)&__p, (uint64_t)&v33);
  if (!v36)
  {
    v27 = sub_20B0B52D8((uint64_t)&v33);
    sub_20B0BFB50(v27);
  }
  v8 = v34;
  v30 = &off_24C41E150;
  v31 = v34;
  v9 = v35;
  v32 = v35;
  v34 = 0;
  v35 = 0;
  (*v33)(&v33);
  if (SHIBYTE(v29) < 0)
  {
    operator delete(__p);
    if (!a1)
      goto LABEL_25;
  }
  else if (!a1)
  {
LABEL_25:
    *(_QWORD *)a4 = &off_24C41E150;
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    v31 = 0;
    v32 = 0;
    *(_DWORD *)(a4 + 24) = 0;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
    goto LABEL_40;
  }
  if (a1 == 1)
  {
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v19 = __ldxr(p_shared_owners);
      while (__stxr(v19 + 1, p_shared_owners));
    }
    if (v8)
    {
      v21 = *v8;
      v20 = (std::__shared_weak_count *)v8[1];
      if (v20)
      {
        v22 = (unint64_t *)&v20->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      if (v21)
        sub_20B4ED800((uint64_t)v8);
    }
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    *(_QWORD *)a4 = &off_24C41DFE8;
    *(_DWORD *)(a4 + 24) = 1;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
LABEL_40:
    v25 = (unint64_t *)&v17->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    return;
  }
  if (a1 != 2)
    goto LABEL_25;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  if (v8)
  {
    v13 = *v8;
    v12 = (std::__shared_weak_count *)v8[1];
    if (v12)
    {
      v14 = (unint64_t *)&v12->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      do
        v16 = __ldaxr(v14);
      while (__stlxr(v16 - 1, v14));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    if (v13)
      sub_20B4ED8EC((uint64_t)v8);
  }
  *(_QWORD *)(a4 + 8) = v8;
  *(_QWORD *)(a4 + 16) = v9;
  *(_QWORD *)a4 = &off_24C41E008;
  *(_DWORD *)(a4 + 24) = 2;
  v30 = &off_24C41E150;
  v17 = v32;
  if (v32)
    goto LABEL_40;
}

void sub_20B28C474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v7;
  va_list va;

  va_start(va, a4);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28C4DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  sub_20AEEF4E0((uint64_t)&a18);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20B28C508(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  BOOL v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (**v45)();
  uint64_t v46;
  std::__shared_weak_count *v47;
  _QWORD v48[3];
  __int128 v49;
  std::__shared_weak_count *v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_52;
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v48[0] = &off_24C41E150;
  v48[1] = v10;
  v48[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  sub_20B2C2D3C((uint64_t)v48);
  v48[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_16;
  v14 = (unint64_t *)&v11->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
  {
LABEL_16:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (v16)
      goto LABEL_17;
LABEL_27:
    v24 = *(_QWORD *)(a2 + 8);
    v45 = &off_24C41E150;
    v46 = v24;
    v47 = 0;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v16)
    goto LABEL_27;
LABEL_17:
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  v21 = *(_QWORD *)(a2 + 8);
  v20 = *(std::__shared_weak_count **)(a2 + 16);
  v45 = &off_24C41E150;
  v46 = v21;
  v47 = v20;
  if (v20)
  {
    v22 = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
LABEL_28:
  v25 = sub_20B4E7694((uint64_t)&v45, 0);
  v26 = v47;
  *(_QWORD *)&v49 = &off_24C41E150;
  *((_QWORD *)&v49 + 1) = v46;
  v50 = v47;
  if (v47)
  {
    v27 = (unint64_t *)&v47->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  v29 = sub_20B4E8AAC((uint64_t)&v49);
  v30 = sub_20B4E8D2C((uint64_t)&v49);
  v31 = sub_20B4E8FAC((uint64_t)&v49);
  v32 = sub_20B4E922C((uint64_t)&v49);
  *(_QWORD *)&v49 = &off_24C41E150;
  if (v26)
  {
    v33 = (unint64_t *)&v26->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
  v35 = v29;
  v36 = v29 | ((unint64_t)v30 << 32);
  v37 = v31 | ((unint64_t)v32 << 32);
  v45 = &off_24C41E150;
  v38 = v47;
  if (v47)
  {
    v39 = (unint64_t *)&v47->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
  if (v30)
    v41 = v35 == 0;
  else
    v41 = 1;
  if (v41)
    v42 = 0;
  else
    v42 = v36;
  *(_QWORD *)((char *)&v49 + 4) = v42;
  LODWORD(v49) = 3;
  v43 = v49;
  LODWORD(v49) = 1;
  *(_QWORD *)((char *)&v49 + 4) = v37;
  v44 = v49;
  *(_QWORD *)a1 = v25;
  *(_QWORD *)(a1 + 8) = v43;
  *(_DWORD *)(a1 + 16) = HIDWORD(v42);
  *(_QWORD *)(a1 + 20) = v44;
  *(_DWORD *)(a1 + 28) = v32;
  *(_QWORD *)(a1 + 32) = v42;
  *(_QWORD *)(a1 + 40) = v37;
  if (HIDWORD(v42) * v32 == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
LABEL_52:
    abort();
  }
}

void sub_20B28C884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B28C898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28C8AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_20B4E888C(&a15);
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B28C8C8(uint64_t a1, _BYTE *a2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  _BYTE *v40;
  int v41;
  uint64_t v42;
  int v43;
  _BYTE *v44;
  _BYTE *v45;
  int v46;
  std::__shared_weak_count *v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  _BYTE *v55;
  int v56;
  int v57;
  int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  uint64_t (**v62)();
  uint64_t *v63;
  std::__shared_weak_count *v64;
  _QWORD v65[2];

  if (*(_DWORD *)(a1 + 40) >= 3u)
    goto LABEL_82;
  v3 = *(uint64_t **)(a1 + 24);
  if (!v3)
    return;
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!v6)
      return;
  }
  else
  {
LABEL_8:
    if (!v6)
      return;
  }
  v10 = *(_DWORD *)(a1 + 40);
  if (v10 == 2)
  {
    v20 = *(uint64_t **)(a1 + 24);
    v21 = *(std::__shared_weak_count **)(a1 + 32);
    v63 = v20;
    v64 = v21;
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
    }
    v62 = &off_24C41E008;
    if (v20)
    {
      v25 = *v20;
      v24 = (std::__shared_weak_count *)v20[1];
      if (v24)
      {
        v26 = (unint64_t *)&v24->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
        do
          v28 = __ldaxr(v26);
        while (__stlxr(v28 - 1, v26));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      if (v25)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10 == 1)
  {
    v29 = *(uint64_t **)(a1 + 24);
    v30 = *(std::__shared_weak_count **)(a1 + 32);
    v63 = v29;
    v64 = v30;
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    v62 = &off_24C41E008;
    if (v29)
    {
      v34 = *v29;
      v33 = (std::__shared_weak_count *)v29[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10)
LABEL_82:
    sub_20AECFAB8();
  v11 = *(uint64_t **)(a1 + 24);
  v12 = *(std::__shared_weak_count **)(a1 + 32);
  v63 = v11;
  v64 = v12;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v62 = &off_24C41E008;
  if (v11)
  {
    v16 = *v11;
    v15 = (std::__shared_weak_count *)v11[1];
    if (v15)
    {
      v17 = (unint64_t *)&v15->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    if (v16)
LABEL_49:
      sub_20B4ED8EC((uint64_t)v63);
  }
LABEL_50:
  sub_20B28D850((uint64_t)&v55, a1);
  v65[0] = &v55;
  v65[1] = a2;
  if (v59 == 1)
  {
    sub_20B27E420(v65);
  }
  else if (v56 && v57 && v58)
  {
    v38 = v57 - 1;
    v39 = v60;
    v40 = v55;
    v41 = v58 - 1;
    if (v58 != 1)
    {
      v42 = v61;
      if (v57 == 1)
      {
        do
        {
          *v40 = *a2;
          v40[1] = *a2;
          v40[2] = *a2;
          v40 += v42;
          --v41;
        }
        while (v41);
      }
      else
      {
        v43 = 0;
        v44 = v55 + 2;
        do
        {
          v45 = v44;
          v46 = v38;
          do
          {
            *(v45 - 2) = *a2;
            *(v45 - 1) = *a2;
            *v45 = *a2;
            v45 += v39;
            --v46;
          }
          while (v46);
          *(v45 - 2) = *a2;
          *(v45 - 1) = *a2;
          *v45 = *a2;
          v40 += v42;
          ++v43;
          v44 += v42;
        }
        while (v43 != v41);
      }
    }
    for (; v38; --v38)
    {
      *v40 = *a2;
      v40[1] = *a2;
      v40[2] = *a2;
      v40 += v39;
    }
    *v40 = *a2;
    v40[1] = *a2;
    v40[2] = *a2;
  }
  if (!v63)
    goto LABEL_74;
  v48 = *v63;
  v47 = (std::__shared_weak_count *)v63[1];
  if (!v47)
    goto LABEL_72;
  v49 = (unint64_t *)&v47->__shared_owners_;
  do
    v50 = __ldxr(v49);
  while (__stxr(v50 + 1, v49));
  do
    v51 = __ldaxr(v49);
  while (__stlxr(v51 - 1, v49));
  if (v51)
  {
LABEL_72:
    if (!v48)
      goto LABEL_74;
    goto LABEL_73;
  }
  ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
  std::__shared_weak_count::__release_weak(v47);
  if (v48)
LABEL_73:
    sub_20B4EDAC0((uint64_t)v63);
LABEL_74:
  v62 = &off_24C41E150;
  v52 = v64;
  if (v64)
  {
    v53 = (unint64_t *)&v64->__shared_owners_;
    do
      v54 = __ldaxr(v53);
    while (__stlxr(v54 - 1, v53));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
      std::__shared_weak_count::__release_weak(v52);
    }
  }
}

void sub_20B28CDA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20B4E79B0((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B28CDBC(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416D18;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_20B28CE20(uint64_t a1, _DWORD *a2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  _BYTE v47[20];
  int v48;
  uint64_t (**v49)();
  uint64_t *v50;
  std::__shared_weak_count *v51;
  size_t v52[2];
  char v53;
  char *v54;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    goto LABEL_75;
  v3 = *(uint64_t **)(a1 + 24);
  if (!v3)
    return;
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!v6)
      return;
  }
  else
  {
LABEL_8:
    if (!v6)
      return;
  }
  v10 = *(_DWORD *)(a1 + 40);
  if (v10 == 2)
  {
    v20 = *(uint64_t **)(a1 + 24);
    v21 = *(std::__shared_weak_count **)(a1 + 32);
    v50 = v20;
    v51 = v21;
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
    }
    v49 = &off_24C41E008;
    if (v20)
    {
      v25 = *v20;
      v24 = (std::__shared_weak_count *)v20[1];
      if (v24)
      {
        v26 = (unint64_t *)&v24->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
        do
          v28 = __ldaxr(v26);
        while (__stlxr(v28 - 1, v26));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      if (v25)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10 == 1)
  {
    v29 = *(uint64_t **)(a1 + 24);
    v30 = *(std::__shared_weak_count **)(a1 + 32);
    v50 = v29;
    v51 = v30;
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    v49 = &off_24C41E008;
    if (v29)
    {
      v34 = *v29;
      v33 = (std::__shared_weak_count *)v29[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10)
LABEL_75:
    sub_20AECFAB8();
  v11 = *(uint64_t **)(a1 + 24);
  v12 = *(std::__shared_weak_count **)(a1 + 32);
  v50 = v11;
  v51 = v12;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v49 = &off_24C41E008;
  if (v11)
  {
    v16 = *v11;
    v15 = (std::__shared_weak_count *)v11[1];
    if (v15)
    {
      v17 = (unint64_t *)&v15->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    if (v16)
LABEL_49:
      sub_20B4ED8EC((uint64_t)v50);
  }
LABEL_50:
  sub_20B28D850((uint64_t)v47, a1);
  v52[0] = (size_t)a2;
  v52[1] = (size_t)v47;
  if (a2[5] == 1 && v48 == 1)
  {
    sub_20AFE5D88(v52);
  }
  else
  {
    v53 = 0;
    if (a2[2] && a2[3] && a2[4])
    {
      v54 = &v53;
      sub_20AFE9048((uint64_t)&v54, (uint64_t)a2, (uint64_t)v47);
    }
  }
  if (!v50)
    goto LABEL_67;
  v40 = *v50;
  v39 = (std::__shared_weak_count *)v50[1];
  if (!v39)
    goto LABEL_65;
  v41 = (unint64_t *)&v39->__shared_owners_;
  do
    v42 = __ldxr(v41);
  while (__stxr(v42 + 1, v41));
  do
    v43 = __ldaxr(v41);
  while (__stlxr(v43 - 1, v41));
  if (v43)
  {
LABEL_65:
    if (!v40)
      goto LABEL_67;
    goto LABEL_66;
  }
  ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
  std::__shared_weak_count::__release_weak(v39);
  if (v40)
LABEL_66:
    sub_20B4EDAC0((uint64_t)v50);
LABEL_67:
  v49 = &off_24C41E150;
  v44 = v51;
  if (v51)
  {
    v45 = (unint64_t *)&v51->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
      std::__shared_weak_count::__release_weak(v44);
    }
  }
}

void sub_20B28D240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20B4E79B0((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B28D254(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v33[2];
  std::__shared_weak_count *v34;

  *(_QWORD *)a1 = off_24C416D18;
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
        goto LABEL_8;
    }
    else
    {
LABEL_7:
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
      {
LABEL_8:
        v10 = *((_DWORD *)v4 + 4);
        goto LABEL_11;
      }
    }
  }
  v10 = 0;
LABEL_11:
  *(_QWORD *)(a1 + 16) = &off_24C41E150;
  *(_DWORD *)(a1 + 8) = v10;
  v11 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v11;
  if (v11)
  {
    v12 = (unint64_t *)(v11 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  *(_DWORD *)(a1 + 40) = 0;
  v15 = *(_QWORD *)(a2 + 8);
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  v33[0] = &off_24C41E150;
  v33[1] = v15;
  v34 = v14;
  if (v14)
  {
    v16 = (unint64_t *)&v14->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  sub_20B28D508((uint64_t)v33, a1 + 48);
  v33[0] = &off_24C41E150;
  v18 = v34;
  if (v34)
  {
    v19 = (unint64_t *)&v34->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      v21 = *(_QWORD *)(a2 + 8);
      if (v21)
        goto LABEL_22;
LABEL_36:
      v28 = 0;
      goto LABEL_37;
    }
  }
  v21 = *(_QWORD *)(a2 + 8);
  if (!v21)
    goto LABEL_36;
LABEL_22:
  v22 = *(std::__shared_weak_count **)(v21 + 8);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
      v26 = *(uint64_t **)(a2 + 8);
      if (v26)
        goto LABEL_28;
LABEL_41:
      v28 = 0;
      if (!*(_DWORD *)(a1 + 72))
        goto LABEL_42;
      goto LABEL_38;
    }
  }
  v26 = *(uint64_t **)(a2 + 8);
  if (!v26)
    goto LABEL_41;
LABEL_28:
  v28 = *v26;
  v27 = (std::__shared_weak_count *)v26[1];
  if (!v27)
    goto LABEL_37;
  v29 = (unint64_t *)&v27->__shared_owners_;
  do
    v30 = __ldxr(v29);
  while (__stxr(v30 + 1, v29));
  do
    v31 = __ldaxr(v29);
  while (__stlxr(v31 - 1, v29));
  if (v31)
  {
LABEL_37:
    if (!*(_DWORD *)(a1 + 72))
      goto LABEL_42;
    goto LABEL_38;
  }
  ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
  std::__shared_weak_count::__release_weak(v27);
  if (!*(_DWORD *)(a1 + 72))
  {
LABEL_42:
    if (!v28)
      return a1;
    goto LABEL_43;
  }
LABEL_38:
  if ((v28 == 0) == (*(_DWORD *)(a1 + 76) == 0))
    return a1;
LABEL_43:
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 105, (uint64_t)"(buffer == nullptr) == extent.IsEmpty()", 39, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return a1;
}

void sub_20B28D4D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v2);
  _Unwind_Resume(a1);
}

void sub_20B28D4F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

void sub_20B28D508(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  _QWORD v37[3];
  _QWORD v38[3];

  v38[2] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 156, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  v37[0] = &off_24C41E150;
  v37[1] = v10;
  v37[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  sub_20B2C2D3C((uint64_t)v37);
  v37[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_16;
  v14 = (unint64_t *)&v11->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
  {
LABEL_16:
    v16 = *(std::__shared_weak_count **)(a1 + 16);
    if (v16)
      goto LABEL_17;
LABEL_27:
    v24 = *(_QWORD *)(a1 + 8);
    v34 = &off_24C41E150;
    v35 = v24;
    v36 = 0;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v16 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v16)
    goto LABEL_27;
LABEL_17:
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  v21 = *(_QWORD *)(a1 + 8);
  v20 = *(std::__shared_weak_count **)(a1 + 16);
  v34 = &off_24C41E150;
  v35 = v21;
  v36 = v20;
  if (v20)
  {
    v22 = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
LABEL_28:
  v25 = sub_20B4E8AAC((uint64_t)&v34);
  v26 = sub_20B4E8D2C((uint64_t)&v34);
  v27 = sub_20B4E8FAC((uint64_t)&v34);
  v28 = sub_20B4E922C((uint64_t)&v34);
  v34 = &off_24C41E150;
  v29 = v36;
  if (v36)
  {
    v30 = (unint64_t *)&v36->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v32 = v27 | ((unint64_t)v28 << 32);
  v33 = v25 | ((unint64_t)v26 << 32);
  LODWORD(v38[0]) = 3;
  HIDWORD(v38[0]) = v33;
  *(_QWORD *)a2 = v38[0];
  *(_DWORD *)(a2 + 8) = v26;
  LODWORD(v38[0]) = 1;
  *(_QWORD *)((char *)v38 + 4) = v32;
  *(_QWORD *)(a2 + 12) = v38[0];
  *(_DWORD *)(a2 + 20) = v28;
  *(_QWORD *)(a2 + 24) = v33;
  *(_QWORD *)(a2 + 32) = v32;
}

void sub_20B28D798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28D7AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28D7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_20AECFAB8();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20B28D850(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;

  if (*(_DWORD *)(a2 + 40) >= 3u)
LABEL_31:
    sub_20AECFAB8();
  v4 = *(uint64_t **)(a2 + 24);
  if (!v4)
    goto LABEL_17;
  v6 = *v4;
  v5 = (std::__shared_weak_count *)v4[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
LABEL_8:
    if (v6)
      goto LABEL_9;
LABEL_17:
    sub_20B27E5CC(a1, 0, (_DWORD *)(a2 + 72));
    return;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6)
    goto LABEL_17;
LABEL_9:
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_31;
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(std::__shared_weak_count **)(a2 + 32);
  v23 = &off_24C41E150;
  v24 = v10;
  v25 = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v21 = v10;
    v22 = v11;
    do
      v14 = __ldxr(v12);
    while (__stxr(v14 + 1, v12));
  }
  else
  {
    v21 = v10;
    v22 = 0;
  }
  v20 = &off_24C41E150;
  sub_20B28C508(a1, (uint64_t)&v20);
  v20 = &off_24C41E150;
  if (!v11)
    goto LABEL_23;
  v15 = (unint64_t *)&v11->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v23 = &off_24C41E150;
    v17 = v25;
    if (!v25)
      return;
  }
  else
  {
LABEL_23:
    v23 = &off_24C41E150;
    v17 = v25;
    if (!v25)
      return;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
}

void sub_20B28DA00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_20B4E888C(&a9);
  sub_20B4E888C(&a12);
  _Unwind_Resume(a1);
}

void sub_20B28DA1C(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int *v6;
  int v7;
  uint64_t *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  void *__p;
  __int128 v29;
  uint64_t (**v30)();
  uint64_t *v31;
  std::__shared_weak_count *v32;
  void (**v33)(_QWORD);
  uint64_t *v34;
  std::__shared_weak_count *v35;
  char v36;

  v6 = (unsigned int *)(a3 + 24);
  if ((a2 - 1) > 0x25)
    v7 = 0;
  else
    v7 = dword_20B5F3478[a2 - 1] | dword_20B5F33E0[a2 - 1];
  __p = operator new(0x78uLL);
  v29 = xmmword_20B5F1DA0;
  strcpy((char *)__p, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
  sub_20B4E7E40(v6, v7, (uint64_t *)&__p, (uint64_t)&v33);
  if (!v36)
  {
    v27 = sub_20B0B52D8((uint64_t)&v33);
    sub_20B0BFB50(v27);
  }
  v8 = v34;
  v30 = &off_24C41E150;
  v31 = v34;
  v9 = v35;
  v32 = v35;
  v34 = 0;
  v35 = 0;
  (*v33)(&v33);
  if (SHIBYTE(v29) < 0)
  {
    operator delete(__p);
    if (!a1)
      goto LABEL_25;
  }
  else if (!a1)
  {
LABEL_25:
    *(_QWORD *)a4 = &off_24C41E150;
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    v31 = 0;
    v32 = 0;
    *(_DWORD *)(a4 + 24) = 0;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
    goto LABEL_40;
  }
  if (a1 == 1)
  {
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v19 = __ldxr(p_shared_owners);
      while (__stxr(v19 + 1, p_shared_owners));
    }
    if (v8)
    {
      v21 = *v8;
      v20 = (std::__shared_weak_count *)v8[1];
      if (v20)
      {
        v22 = (unint64_t *)&v20->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      if (v21)
        sub_20B4ED800((uint64_t)v8);
    }
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    *(_QWORD *)a4 = &off_24C41DFE8;
    *(_DWORD *)(a4 + 24) = 1;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
LABEL_40:
    v25 = (unint64_t *)&v17->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    return;
  }
  if (a1 != 2)
    goto LABEL_25;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  if (v8)
  {
    v13 = *v8;
    v12 = (std::__shared_weak_count *)v8[1];
    if (v12)
    {
      v14 = (unint64_t *)&v12->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      do
        v16 = __ldaxr(v14);
      while (__stlxr(v16 - 1, v14));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    if (v13)
      sub_20B4ED8EC((uint64_t)v8);
  }
  *(_QWORD *)(a4 + 8) = v8;
  *(_QWORD *)(a4 + 16) = v9;
  *(_QWORD *)a4 = &off_24C41E008;
  *(_DWORD *)(a4 + 24) = 2;
  v30 = &off_24C41E150;
  v17 = v32;
  if (v32)
    goto LABEL_40;
}

void sub_20B28DCF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v7;
  va_list va;

  va_start(va, a4);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28DD60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  sub_20AEEF4E0((uint64_t)&a18);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20B28DD8C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  BOOL v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (**v45)();
  uint64_t v46;
  std::__shared_weak_count *v47;
  _QWORD v48[3];
  __int128 v49;
  std::__shared_weak_count *v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_52;
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v48[0] = &off_24C41E150;
  v48[1] = v10;
  v48[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  sub_20B2C2D3C((uint64_t)v48);
  v48[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_16;
  v14 = (unint64_t *)&v11->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
  {
LABEL_16:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (v16)
      goto LABEL_17;
LABEL_27:
    v24 = *(_QWORD *)(a2 + 8);
    v45 = &off_24C41E150;
    v46 = v24;
    v47 = 0;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v16)
    goto LABEL_27;
LABEL_17:
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  v21 = *(_QWORD *)(a2 + 8);
  v20 = *(std::__shared_weak_count **)(a2 + 16);
  v45 = &off_24C41E150;
  v46 = v21;
  v47 = v20;
  if (v20)
  {
    v22 = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
LABEL_28:
  v25 = sub_20B4E7694((uint64_t)&v45, 0);
  v26 = v47;
  *(_QWORD *)&v49 = &off_24C41E150;
  *((_QWORD *)&v49 + 1) = v46;
  v50 = v47;
  if (v47)
  {
    v27 = (unint64_t *)&v47->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  v29 = sub_20B4E8AAC((uint64_t)&v49);
  v30 = sub_20B4E8D2C((uint64_t)&v49);
  v31 = sub_20B4E8FAC((uint64_t)&v49);
  v32 = sub_20B4E922C((uint64_t)&v49);
  *(_QWORD *)&v49 = &off_24C41E150;
  if (v26)
  {
    v33 = (unint64_t *)&v26->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
  v35 = v29;
  v36 = v29 | ((unint64_t)v30 << 32);
  v37 = v31 | ((unint64_t)v32 << 32);
  v45 = &off_24C41E150;
  v38 = v47;
  if (v47)
  {
    v39 = (unint64_t *)&v47->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
  if (v30)
    v41 = v35 == 0;
  else
    v41 = 1;
  if (v41)
    v42 = 0;
  else
    v42 = v36;
  *(_QWORD *)((char *)&v49 + 4) = v42;
  LODWORD(v49) = 4;
  v43 = v49;
  LODWORD(v49) = 1;
  *(_QWORD *)((char *)&v49 + 4) = v37;
  v44 = v49;
  *(_QWORD *)a1 = v25;
  *(_QWORD *)(a1 + 8) = v43;
  *(_DWORD *)(a1 + 16) = HIDWORD(v42);
  *(_QWORD *)(a1 + 20) = v44;
  *(_DWORD *)(a1 + 28) = v32;
  *(_QWORD *)(a1 + 32) = v42;
  *(_QWORD *)(a1 + 40) = v37;
  if (HIDWORD(v42) * v32 == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
LABEL_52:
    abort();
  }
}

void sub_20B28E108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B28E11C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28E130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_20B4E888C(&a15);
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B28E14C(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  _BYTE *v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  uint64_t (**v53)();
  uint64_t *v54;
  std::__shared_weak_count *v55;
  _QWORD v56[2];
  uint64_t v57;
  uint64_t *v58;
  _DWORD v59[7];
  _QWORD v60[2];

  if (*(_DWORD *)(a1 + 40) >= 3u)
    goto LABEL_72;
  v3 = *(uint64_t **)(a1 + 24);
  if (!v3)
    return;
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!v6)
      return;
  }
  else
  {
LABEL_8:
    if (!v6)
      return;
  }
  v10 = *(_DWORD *)(a1 + 40);
  if (v10 == 2)
  {
    v20 = *(uint64_t **)(a1 + 24);
    v21 = *(std::__shared_weak_count **)(a1 + 32);
    v54 = v20;
    v55 = v21;
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
    }
    v53 = &off_24C41E008;
    if (v20)
    {
      v25 = *v20;
      v24 = (std::__shared_weak_count *)v20[1];
      if (v24)
      {
        v26 = (unint64_t *)&v24->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
        do
          v28 = __ldaxr(v26);
        while (__stlxr(v28 - 1, v26));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      if (v25)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10 == 1)
  {
    v29 = *(uint64_t **)(a1 + 24);
    v30 = *(std::__shared_weak_count **)(a1 + 32);
    v54 = v29;
    v55 = v30;
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    v53 = &off_24C41E008;
    if (v29)
    {
      v34 = *v29;
      v33 = (std::__shared_weak_count *)v29[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10)
LABEL_72:
    sub_20AECFAB8();
  v11 = *(uint64_t **)(a1 + 24);
  v12 = *(std::__shared_weak_count **)(a1 + 32);
  v54 = v11;
  v55 = v12;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v53 = &off_24C41E008;
  if (v11)
  {
    v16 = *v11;
    v15 = (std::__shared_weak_count *)v11[1];
    if (v15)
    {
      v17 = (unint64_t *)&v15->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    if (v16)
LABEL_49:
      sub_20B4ED8EC((uint64_t)v54);
  }
LABEL_50:
  sub_20B28F034((uint64_t)&v46, a1);
  v56[0] = &v46;
  v56[1] = a2;
  if (v50 == 1)
  {
    sub_20B27E420(v56);
  }
  else
  {
    v57 = a2;
    if (v47 && v48 && v49)
    {
      v58 = &v57;
      v59[0] = 0;
      v59[1] = v47 - 1;
      v59[2] = v50;
      v59[3] = v48 - 1;
      v59[4] = v51;
      v59[5] = v49 - 1;
      v59[6] = v52;
      v60[0] = 0;
      v60[1] = 0;
      sub_20B27E6E4(v59, (uint64_t)v60, (_BYTE ***)&v58, v46);
    }
  }
  if (!v54)
    goto LABEL_64;
  v39 = *v54;
  v38 = (std::__shared_weak_count *)v54[1];
  if (!v38)
    goto LABEL_62;
  v40 = (unint64_t *)&v38->__shared_owners_;
  do
    v41 = __ldxr(v40);
  while (__stxr(v41 + 1, v40));
  do
    v42 = __ldaxr(v40);
  while (__stlxr(v42 - 1, v40));
  if (v42)
  {
LABEL_62:
    if (!v39)
      goto LABEL_64;
    goto LABEL_63;
  }
  ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
  std::__shared_weak_count::__release_weak(v38);
  if (v39)
LABEL_63:
    sub_20B4EDAC0((uint64_t)v54);
LABEL_64:
  v53 = &off_24C41E150;
  v43 = v55;
  if (v55)
  {
    v44 = (unint64_t *)&v55->__shared_owners_;
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }
}

void sub_20B28E58C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20B4E79B0((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B28E5A0(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416DA8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_20B28E604(uint64_t a1, _DWORD *a2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  _BYTE v47[20];
  int v48;
  uint64_t (**v49)();
  uint64_t *v50;
  std::__shared_weak_count *v51;
  size_t v52[2];
  char v53;
  char *v54;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    goto LABEL_75;
  v3 = *(uint64_t **)(a1 + 24);
  if (!v3)
    return;
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!v6)
      return;
  }
  else
  {
LABEL_8:
    if (!v6)
      return;
  }
  v10 = *(_DWORD *)(a1 + 40);
  if (v10 == 2)
  {
    v20 = *(uint64_t **)(a1 + 24);
    v21 = *(std::__shared_weak_count **)(a1 + 32);
    v50 = v20;
    v51 = v21;
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
    }
    v49 = &off_24C41E008;
    if (v20)
    {
      v25 = *v20;
      v24 = (std::__shared_weak_count *)v20[1];
      if (v24)
      {
        v26 = (unint64_t *)&v24->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
        do
          v28 = __ldaxr(v26);
        while (__stlxr(v28 - 1, v26));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      if (v25)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10 == 1)
  {
    v29 = *(uint64_t **)(a1 + 24);
    v30 = *(std::__shared_weak_count **)(a1 + 32);
    v50 = v29;
    v51 = v30;
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    v49 = &off_24C41E008;
    if (v29)
    {
      v34 = *v29;
      v33 = (std::__shared_weak_count *)v29[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10)
LABEL_75:
    sub_20AECFAB8();
  v11 = *(uint64_t **)(a1 + 24);
  v12 = *(std::__shared_weak_count **)(a1 + 32);
  v50 = v11;
  v51 = v12;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v49 = &off_24C41E008;
  if (v11)
  {
    v16 = *v11;
    v15 = (std::__shared_weak_count *)v11[1];
    if (v15)
    {
      v17 = (unint64_t *)&v15->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    if (v16)
LABEL_49:
      sub_20B4ED8EC((uint64_t)v50);
  }
LABEL_50:
  sub_20B28F034((uint64_t)v47, a1);
  v52[0] = (size_t)a2;
  v52[1] = (size_t)v47;
  if (a2[5] == 1 && v48 == 1)
  {
    sub_20AFE5D88(v52);
  }
  else
  {
    v53 = 0;
    if (a2[2] && a2[3] && a2[4])
    {
      v54 = &v53;
      sub_20AFEA3E0((uint64_t)&v54, (uint64_t)a2, (uint64_t)v47);
    }
  }
  if (!v50)
    goto LABEL_67;
  v40 = *v50;
  v39 = (std::__shared_weak_count *)v50[1];
  if (!v39)
    goto LABEL_65;
  v41 = (unint64_t *)&v39->__shared_owners_;
  do
    v42 = __ldxr(v41);
  while (__stxr(v42 + 1, v41));
  do
    v43 = __ldaxr(v41);
  while (__stlxr(v43 - 1, v41));
  if (v43)
  {
LABEL_65:
    if (!v40)
      goto LABEL_67;
    goto LABEL_66;
  }
  ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
  std::__shared_weak_count::__release_weak(v39);
  if (v40)
LABEL_66:
    sub_20B4EDAC0((uint64_t)v50);
LABEL_67:
  v49 = &off_24C41E150;
  v44 = v51;
  if (v51)
  {
    v45 = (unint64_t *)&v51->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
      std::__shared_weak_count::__release_weak(v44);
    }
  }
}

void sub_20B28EA24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20B4E79B0((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B28EA38(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v33[2];
  std::__shared_weak_count *v34;

  *(_QWORD *)a1 = off_24C416DA8;
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
        goto LABEL_8;
    }
    else
    {
LABEL_7:
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
      {
LABEL_8:
        v10 = *((_DWORD *)v4 + 4);
        goto LABEL_11;
      }
    }
  }
  v10 = 0;
LABEL_11:
  *(_QWORD *)(a1 + 16) = &off_24C41E150;
  *(_DWORD *)(a1 + 8) = v10;
  v11 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v11;
  if (v11)
  {
    v12 = (unint64_t *)(v11 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  *(_DWORD *)(a1 + 40) = 0;
  v15 = *(_QWORD *)(a2 + 8);
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  v33[0] = &off_24C41E150;
  v33[1] = v15;
  v34 = v14;
  if (v14)
  {
    v16 = (unint64_t *)&v14->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  sub_20B28ECEC((uint64_t)v33, a1 + 48);
  v33[0] = &off_24C41E150;
  v18 = v34;
  if (v34)
  {
    v19 = (unint64_t *)&v34->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      v21 = *(_QWORD *)(a2 + 8);
      if (v21)
        goto LABEL_22;
LABEL_36:
      v28 = 0;
      goto LABEL_37;
    }
  }
  v21 = *(_QWORD *)(a2 + 8);
  if (!v21)
    goto LABEL_36;
LABEL_22:
  v22 = *(std::__shared_weak_count **)(v21 + 8);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
      v26 = *(uint64_t **)(a2 + 8);
      if (v26)
        goto LABEL_28;
LABEL_41:
      v28 = 0;
      if (!*(_DWORD *)(a1 + 72))
        goto LABEL_42;
      goto LABEL_38;
    }
  }
  v26 = *(uint64_t **)(a2 + 8);
  if (!v26)
    goto LABEL_41;
LABEL_28:
  v28 = *v26;
  v27 = (std::__shared_weak_count *)v26[1];
  if (!v27)
    goto LABEL_37;
  v29 = (unint64_t *)&v27->__shared_owners_;
  do
    v30 = __ldxr(v29);
  while (__stxr(v30 + 1, v29));
  do
    v31 = __ldaxr(v29);
  while (__stlxr(v31 - 1, v29));
  if (v31)
  {
LABEL_37:
    if (!*(_DWORD *)(a1 + 72))
      goto LABEL_42;
    goto LABEL_38;
  }
  ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
  std::__shared_weak_count::__release_weak(v27);
  if (!*(_DWORD *)(a1 + 72))
  {
LABEL_42:
    if (!v28)
      return a1;
    goto LABEL_43;
  }
LABEL_38:
  if ((v28 == 0) == (*(_DWORD *)(a1 + 76) == 0))
    return a1;
LABEL_43:
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 105, (uint64_t)"(buffer == nullptr) == extent.IsEmpty()", 39, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return a1;
}

void sub_20B28ECBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v2);
  _Unwind_Resume(a1);
}

void sub_20B28ECD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

void sub_20B28ECEC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  _QWORD v37[3];
  _QWORD v38[3];

  v38[2] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 156, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  v37[0] = &off_24C41E150;
  v37[1] = v10;
  v37[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  sub_20B2C2D3C((uint64_t)v37);
  v37[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_16;
  v14 = (unint64_t *)&v11->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
  {
LABEL_16:
    v16 = *(std::__shared_weak_count **)(a1 + 16);
    if (v16)
      goto LABEL_17;
LABEL_27:
    v24 = *(_QWORD *)(a1 + 8);
    v34 = &off_24C41E150;
    v35 = v24;
    v36 = 0;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v16 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v16)
    goto LABEL_27;
LABEL_17:
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  v21 = *(_QWORD *)(a1 + 8);
  v20 = *(std::__shared_weak_count **)(a1 + 16);
  v34 = &off_24C41E150;
  v35 = v21;
  v36 = v20;
  if (v20)
  {
    v22 = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
LABEL_28:
  v25 = sub_20B4E8AAC((uint64_t)&v34);
  v26 = sub_20B4E8D2C((uint64_t)&v34);
  v27 = sub_20B4E8FAC((uint64_t)&v34);
  v28 = sub_20B4E922C((uint64_t)&v34);
  v34 = &off_24C41E150;
  v29 = v36;
  if (v36)
  {
    v30 = (unint64_t *)&v36->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v32 = v27 | ((unint64_t)v28 << 32);
  v33 = v25 | ((unint64_t)v26 << 32);
  LODWORD(v38[0]) = 4;
  HIDWORD(v38[0]) = v33;
  *(_QWORD *)a2 = v38[0];
  *(_DWORD *)(a2 + 8) = v26;
  LODWORD(v38[0]) = 1;
  *(_QWORD *)((char *)v38 + 4) = v32;
  *(_QWORD *)(a2 + 12) = v38[0];
  *(_DWORD *)(a2 + 20) = v28;
  *(_QWORD *)(a2 + 24) = v33;
  *(_QWORD *)(a2 + 32) = v32;
}

void sub_20B28EF7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28EF90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28EFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_20AECFAB8();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20B28F034(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24C41E150;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B28DD8C(a1, (uint64_t)&v27);
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24C41E150;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B28F25C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_20B28F278(int a1@<W0>, int a2@<W1>, unsigned int *a3@<X2>, uint64_t a4@<X8>)
{
  int v7;
  uint64_t *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  void *__p;
  __int128 v29;
  uint64_t (**v30)();
  uint64_t *v31;
  std::__shared_weak_count *v32;
  void (**v33)(_QWORD);
  uint64_t *v34;
  std::__shared_weak_count *v35;
  char v36;

  if ((a2 - 1) > 0x25)
    v7 = 0;
  else
    v7 = dword_20B5F3478[a2 - 1] | dword_20B5F33E0[a2 - 1];
  __p = operator new(0x78uLL);
  v29 = xmmword_20B5F1DA0;
  strcpy((char *)__p, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
  sub_20B4E7E40(a3, v7, (uint64_t *)&__p, (uint64_t)&v33);
  if (!v36)
  {
    v27 = sub_20B0B52D8((uint64_t)&v33);
    sub_20B0BFB50(v27);
  }
  v8 = v34;
  v30 = &off_24C41E150;
  v31 = v34;
  v9 = v35;
  v32 = v35;
  v34 = 0;
  v35 = 0;
  (*v33)(&v33);
  if (SHIBYTE(v29) < 0)
  {
    operator delete(__p);
    if (!a1)
      goto LABEL_25;
  }
  else if (!a1)
  {
LABEL_25:
    *(_QWORD *)a4 = &off_24C41E150;
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    v31 = 0;
    v32 = 0;
    *(_DWORD *)(a4 + 24) = 0;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
    goto LABEL_40;
  }
  if (a1 == 1)
  {
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v19 = __ldxr(p_shared_owners);
      while (__stxr(v19 + 1, p_shared_owners));
    }
    if (v8)
    {
      v21 = *v8;
      v20 = (std::__shared_weak_count *)v8[1];
      if (v20)
      {
        v22 = (unint64_t *)&v20->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      if (v21)
        sub_20B4ED800((uint64_t)v8);
    }
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    *(_QWORD *)a4 = &off_24C41DFE8;
    *(_DWORD *)(a4 + 24) = 1;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
LABEL_40:
    v25 = (unint64_t *)&v17->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    return;
  }
  if (a1 != 2)
    goto LABEL_25;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  if (v8)
  {
    v13 = *v8;
    v12 = (std::__shared_weak_count *)v8[1];
    if (v12)
    {
      v14 = (unint64_t *)&v12->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      do
        v16 = __ldaxr(v14);
      while (__stlxr(v16 - 1, v14));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    if (v13)
      sub_20B4ED8EC((uint64_t)v8);
  }
  *(_QWORD *)(a4 + 8) = v8;
  *(_QWORD *)(a4 + 16) = v9;
  *(_QWORD *)a4 = &off_24C41E008;
  *(_DWORD *)(a4 + 24) = 2;
  v30 = &off_24C41E150;
  v17 = v32;
  if (v32)
    goto LABEL_40;
}

void sub_20B28F554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v7;
  va_list va;

  va_start(va, a4);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28F5BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  sub_20AEEF4E0((uint64_t)&a18);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_20B28F5E8(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t *v16;
  _QWORD v18[3];
  _QWORD v19[3];
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  if (a1 == 2)
  {
    if (*(_DWORD *)(a2 + 24) != 2)
      goto LABEL_30;
    v9 = *(_QWORD *)(a2 + 8);
    v4 = *(std::__shared_weak_count **)(a2 + 16);
    v18[0] = &off_24C41E150;
    v18[1] = v9;
    v18[2] = v4;
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
    }
    sub_20B28F7B8(&v21, (uint64_t)v18);
    v2 = v22;
    v18[0] = &off_24C41E150;
    if (!v4)
      return v2;
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldaxr(v12);
    while (__stlxr(v8 - 1, v12));
    goto LABEL_27;
  }
  if (a1 == 1)
  {
    if (*(_DWORD *)(a2 + 24) != 1)
      goto LABEL_30;
    v13 = *(_QWORD *)(a2 + 8);
    v4 = *(std::__shared_weak_count **)(a2 + 16);
    v19[0] = &off_24C41E150;
    v19[1] = v13;
    v19[2] = v4;
    if (v4)
    {
      v14 = (unint64_t *)&v4->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
    }
    sub_20B28F7B8(&v21, (uint64_t)v19);
    v2 = v22;
    v19[0] = &off_24C41E150;
    if (!v4)
      return v2;
    v16 = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldaxr(v16);
    while (__stlxr(v8 - 1, v16));
LABEL_27:
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    return v2;
  }
  if (a1)
    return v2;
  if (*(_DWORD *)(a2 + 24))
LABEL_30:
    sub_20AECFAB8();
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(std::__shared_weak_count **)(a2 + 16);
  v20[0] = &off_24C41E150;
  v20[1] = v3;
  v20[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  sub_20B28F7B8(&v21, (uint64_t)v20);
  v2 = v22;
  v20[0] = &off_24C41E150;
  if (v4)
  {
    v7 = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    goto LABEL_27;
  }
  return v2;
}

void sub_20B28F77C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28F790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B28F7A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28F7B8(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  std::__shared_weak_count **v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  size_t v34;
  size_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t (**v45)();
  uint64_t v46;
  std::__shared_weak_count *v47;
  _QWORD v48[3];
  _QWORD v49[2];
  std::__shared_weak_count *v50;

  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_64;
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v48[0] = &off_24C41E150;
  v48[1] = v10;
  v48[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_20B4E94AC((uint64_t)v48);
  v15 = &v50;
  if (v14 > 1647589489)
  {
    if (v14 == 1647719521)
    {
      v16 = 0;
      goto LABEL_21;
    }
    if (v14 == 1647589490)
    {
      v16 = 1;
      goto LABEL_21;
    }
  }
  else
  {
    if (v14 == 1278226742)
    {
      v16 = 3;
      goto LABEL_21;
    }
    if (v14 == 1647392359)
    {
      v16 = 2;
LABEL_21:
      v15 = (std::__shared_weak_count **)((char *)v49 + 4 * v16);
    }
  }
  if ((char *)v15 - (char *)v49 == 16
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 113, (uint64_t)"Contains(pf::formats::U16(), ref.Format())", 42, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v48[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_28;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_28:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (v19)
      goto LABEL_29;
LABEL_39:
    v27 = *(_QWORD *)(a2 + 8);
    v45 = &off_24C41E150;
    v46 = v27;
    v47 = 0;
    goto LABEL_40;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_39;
LABEL_29:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a2 + 8);
  v23 = *(std::__shared_weak_count **)(a2 + 16);
  v45 = &off_24C41E150;
  v46 = v24;
  v47 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_40:
  v28 = sub_20B4E7694((uint64_t)&v45, 0);
  v29 = v47;
  v49[0] = &off_24C41E150;
  v49[1] = v46;
  v50 = v47;
  if (v47)
  {
    v30 = (unint64_t *)&v47->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  v32 = sub_20B4E8AAC((uint64_t)v49);
  v33 = sub_20B4E8D2C((uint64_t)v49);
  v34 = sub_20B4E8FAC((uint64_t)v49);
  v35 = sub_20B4E922C((uint64_t)v49) << 31;
  v49[0] = &off_24C41E150;
  if (v29)
  {
    v36 = (unint64_t *)&v29->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v38 = v32;
  v39 = v32 | ((unint64_t)v33 << 32);
  v45 = &off_24C41E150;
  v40 = v47;
  if (v47)
  {
    v41 = (unint64_t *)&v47->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  if (v33)
    v43 = v38 == 0;
  else
    v43 = 1;
  if (v43)
    v44 = 0;
  else
    v44 = v39;
  *a1 = v28;
  a1[1] = v44;
  a1[2] = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  if (HIDWORD(v35) * HIDWORD(v44) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
LABEL_64:
    abort();
  }
}

void sub_20B28FB90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28FBA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B28FBB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va1);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B28FBD4(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416E38;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_20B28FC38(uint64_t a1, uint64_t *a2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  uint64_t v46[3];
  uint64_t (**v47)();
  uint64_t *v48;
  std::__shared_weak_count *v49;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    goto LABEL_66;
  v3 = *(uint64_t **)(a1 + 24);
  if (!v3)
    return;
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!v6)
      return;
  }
  else
  {
LABEL_8:
    if (!v6)
      return;
  }
  v10 = *(_DWORD *)(a1 + 40);
  if (v10 == 2)
  {
    v20 = *(uint64_t **)(a1 + 24);
    v21 = *(std::__shared_weak_count **)(a1 + 32);
    v48 = v20;
    v49 = v21;
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
    }
    v47 = &off_24C41E008;
    if (v20)
    {
      v25 = *v20;
      v24 = (std::__shared_weak_count *)v20[1];
      if (v24)
      {
        v26 = (unint64_t *)&v24->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
        do
          v28 = __ldaxr(v26);
        while (__stlxr(v28 - 1, v26));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      if (v25)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10 == 1)
  {
    v29 = *(uint64_t **)(a1 + 24);
    v30 = *(std::__shared_weak_count **)(a1 + 32);
    v48 = v29;
    v49 = v30;
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    v47 = &off_24C41E008;
    if (v29)
    {
      v34 = *v29;
      v33 = (std::__shared_weak_count *)v29[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10)
LABEL_66:
    sub_20AECFAB8();
  v11 = *(uint64_t **)(a1 + 24);
  v12 = *(std::__shared_weak_count **)(a1 + 32);
  v48 = v11;
  v49 = v12;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v47 = &off_24C41E008;
  if (v11)
  {
    v16 = *v11;
    v15 = (std::__shared_weak_count *)v11[1];
    if (v15)
    {
      v17 = (unint64_t *)&v15->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    if (v16)
LABEL_49:
      sub_20B4ED8EC((uint64_t)v48);
  }
LABEL_50:
  sub_20B290684(v46, a1);
  sub_20AFC48E4(a2, (uint64_t)v46);
  if (!v48)
    goto LABEL_58;
  v39 = *v48;
  v38 = (std::__shared_weak_count *)v48[1];
  if (!v38)
    goto LABEL_56;
  v40 = (unint64_t *)&v38->__shared_owners_;
  do
    v41 = __ldxr(v40);
  while (__stxr(v41 + 1, v40));
  do
    v42 = __ldaxr(v40);
  while (__stlxr(v42 - 1, v40));
  if (v42)
  {
LABEL_56:
    if (!v39)
      goto LABEL_58;
    goto LABEL_57;
  }
  ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
  std::__shared_weak_count::__release_weak(v38);
  if (v39)
LABEL_57:
    sub_20B4EDAC0((uint64_t)v48);
LABEL_58:
  v47 = &off_24C41E150;
  v43 = v49;
  if (v49)
  {
    v44 = (unint64_t *)&v49->__shared_owners_;
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }
}

void sub_20B290008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E79B0((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B29001C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD v34[2];
  std::__shared_weak_count *v35;

  *(_QWORD *)a1 = off_24C416E38;
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
        goto LABEL_8;
    }
    else
    {
LABEL_7:
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
      {
LABEL_8:
        v10 = *((_DWORD *)v4 + 4);
        goto LABEL_11;
      }
    }
  }
  v10 = 0;
LABEL_11:
  *(_QWORD *)(a1 + 16) = &off_24C41E150;
  *(_DWORD *)(a1 + 8) = v10;
  v11 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v11;
  if (v11)
  {
    v12 = (unint64_t *)(v11 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  *(_DWORD *)(a1 + 40) = 0;
  v15 = *(_QWORD *)(a2 + 8);
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  v34[0] = &off_24C41E150;
  v34[1] = v15;
  v35 = v14;
  if (v14)
  {
    v16 = (unint64_t *)&v14->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  *(_QWORD *)(a1 + 48) = sub_20B2902D0((uint64_t)v34);
  *(_QWORD *)(a1 + 56) = v18;
  v34[0] = &off_24C41E150;
  v19 = v35;
  if (v35)
  {
    v20 = (unint64_t *)&v35->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      v22 = *(_QWORD *)(a2 + 8);
      if (v22)
        goto LABEL_22;
LABEL_36:
      v29 = 0;
      goto LABEL_37;
    }
  }
  v22 = *(_QWORD *)(a2 + 8);
  if (!v22)
    goto LABEL_36;
LABEL_22:
  v23 = *(std::__shared_weak_count **)(v22 + 8);
  if (v23)
  {
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
      v27 = *(uint64_t **)(a2 + 8);
      if (v27)
        goto LABEL_28;
LABEL_41:
      v29 = 0;
      if (!*(_DWORD *)(a1 + 48))
        goto LABEL_42;
      goto LABEL_38;
    }
  }
  v27 = *(uint64_t **)(a2 + 8);
  if (!v27)
    goto LABEL_41;
LABEL_28:
  v29 = *v27;
  v28 = (std::__shared_weak_count *)v27[1];
  if (!v28)
    goto LABEL_37;
  v30 = (unint64_t *)&v28->__shared_owners_;
  do
    v31 = __ldxr(v30);
  while (__stxr(v31 + 1, v30));
  do
    v32 = __ldaxr(v30);
  while (__stlxr(v32 - 1, v30));
  if (v32)
  {
LABEL_37:
    if (!*(_DWORD *)(a1 + 48))
      goto LABEL_42;
    goto LABEL_38;
  }
  ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
  std::__shared_weak_count::__release_weak(v28);
  if (!*(_DWORD *)(a1 + 48))
  {
LABEL_42:
    if (!v29)
      return a1;
    goto LABEL_43;
  }
LABEL_38:
  if ((v29 == 0) == (*(_DWORD *)(a1 + 52) == 0))
    return a1;
LABEL_43:
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 105, (uint64_t)"(buffer == nullptr) == extent.IsEmpty()", 39, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return a1;
}

void sub_20B2902A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v2);
  _Unwind_Resume(a1);
}

void sub_20B2902BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_20B2902D0(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  int v12;
  char *v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  uint64_t (**v32)();
  uint64_t v33;
  std::__shared_weak_count *v34;
  _QWORD v35[3];
  _DWORD v36[4];
  uint64_t v37;

  v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (!v3)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v4)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 156, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  v35[0] = &off_24C41E150;
  v35[1] = v8;
  v35[2] = v9;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  v12 = sub_20B4E94AC((uint64_t)v35);
  v13 = (char *)&v37;
  if (v12 > 1647589489)
  {
    if (v12 == 1647719521)
    {
      v14 = 0;
      goto LABEL_21;
    }
    if (v12 == 1647589490)
    {
      v14 = 1;
      goto LABEL_21;
    }
  }
  else
  {
    if (v12 == 1278226742)
    {
      v14 = 3;
      goto LABEL_21;
    }
    if (v12 == 1647392359)
    {
      v14 = 2;
LABEL_21:
      v13 = (char *)&v36[v14];
    }
  }
  if (v13 - (char *)v36 == 16
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 113, (uint64_t)"Contains(pf::formats::U16(), ref.Format())", 42, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v35[0] = &off_24C41E150;
  if (!v9)
    goto LABEL_28;
  v15 = (unint64_t *)&v9->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (v16)
  {
LABEL_28:
    v17 = *(std::__shared_weak_count **)(a1 + 16);
    if (v17)
      goto LABEL_29;
LABEL_39:
    v25 = *(_QWORD *)(a1 + 8);
    v32 = &off_24C41E150;
    v33 = v25;
    v34 = 0;
    goto LABEL_40;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  v17 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v17)
    goto LABEL_39;
LABEL_29:
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldxr(v18);
  while (__stxr(v19 + 1, v18));
  do
    v20 = __ldaxr(v18);
  while (__stlxr(v20 - 1, v18));
  if (!v20)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
  v22 = *(_QWORD *)(a1 + 8);
  v21 = *(std::__shared_weak_count **)(a1 + 16);
  v32 = &off_24C41E150;
  v33 = v22;
  v34 = v21;
  if (v21)
  {
    v23 = (unint64_t *)&v21->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
LABEL_40:
  v26 = sub_20B4E8AAC((uint64_t)&v32);
  v27 = sub_20B4E8D2C((uint64_t)&v32);
  sub_20B4E8FAC((uint64_t)&v32);
  sub_20B4E922C((uint64_t)&v32);
  v32 = &off_24C41E150;
  v28 = v34;
  if (v34)
  {
    v29 = (unint64_t *)&v34->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  return v26 | ((unint64_t)v27 << 32);
}

void sub_20B2905CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2905E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2905FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_20AECFAB8();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20B290684(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t (**v26)();
  uint64_t v27;
  std::__shared_weak_count *v28;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v26 = &off_24C41E150;
          v27 = v10;
          v28 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24C41E150;
          sub_20B28F7B8(a1, (uint64_t)&v23);
          v23 = &off_24C41E150;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v26 = &off_24C41E150;
          v20 = v28;
          if (v28)
          {
            v21 = (unint64_t *)&v28->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *a1 = 0;
  a1[1] = v16;
  a1[2] = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
}

void sub_20B290884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_20B4E888C(&a9);
  sub_20B4E888C(&a12);
  _Unwind_Resume(a1);
}

void sub_20B2908A0(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int *v6;
  int v7;
  uint64_t *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  void *__p;
  __int128 v29;
  uint64_t (**v30)();
  uint64_t *v31;
  std::__shared_weak_count *v32;
  void (**v33)(_QWORD);
  uint64_t *v34;
  std::__shared_weak_count *v35;
  char v36;

  v6 = (unsigned int *)(a3 + 24);
  if ((a2 - 1) > 0x25)
    v7 = 0;
  else
    v7 = dword_20B5F3478[a2 - 1] | dword_20B5F33E0[a2 - 1];
  __p = operator new(0x78uLL);
  v29 = xmmword_20B5F1DA0;
  strcpy((char *)__p, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
  sub_20B4E7E40(v6, v7, (uint64_t *)&__p, (uint64_t)&v33);
  if (!v36)
  {
    v27 = sub_20B0B52D8((uint64_t)&v33);
    sub_20B0BFB50(v27);
  }
  v8 = v34;
  v30 = &off_24C41E150;
  v31 = v34;
  v9 = v35;
  v32 = v35;
  v34 = 0;
  v35 = 0;
  (*v33)(&v33);
  if (SHIBYTE(v29) < 0)
  {
    operator delete(__p);
    if (!a1)
      goto LABEL_25;
  }
  else if (!a1)
  {
LABEL_25:
    *(_QWORD *)a4 = &off_24C41E150;
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    v31 = 0;
    v32 = 0;
    *(_DWORD *)(a4 + 24) = 0;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
    goto LABEL_40;
  }
  if (a1 == 1)
  {
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v19 = __ldxr(p_shared_owners);
      while (__stxr(v19 + 1, p_shared_owners));
    }
    if (v8)
    {
      v21 = *v8;
      v20 = (std::__shared_weak_count *)v8[1];
      if (v20)
      {
        v22 = (unint64_t *)&v20->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      if (v21)
        sub_20B4ED800((uint64_t)v8);
    }
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    *(_QWORD *)a4 = &off_24C41DFE8;
    *(_DWORD *)(a4 + 24) = 1;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
LABEL_40:
    v25 = (unint64_t *)&v17->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    return;
  }
  if (a1 != 2)
    goto LABEL_25;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  if (v8)
  {
    v13 = *v8;
    v12 = (std::__shared_weak_count *)v8[1];
    if (v12)
    {
      v14 = (unint64_t *)&v12->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      do
        v16 = __ldaxr(v14);
      while (__stlxr(v16 - 1, v14));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    if (v13)
      sub_20B4ED8EC((uint64_t)v8);
  }
  *(_QWORD *)(a4 + 8) = v8;
  *(_QWORD *)(a4 + 16) = v9;
  *(_QWORD *)a4 = &off_24C41E008;
  *(_DWORD *)(a4 + 24) = 2;
  v30 = &off_24C41E150;
  v17 = v32;
  if (v32)
    goto LABEL_40;
}

void sub_20B290B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v7;
  va_list va;

  va_start(va, a4);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B290BE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  sub_20AEEF4E0((uint64_t)&a18);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20B290C10(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  size_t v34;
  size_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (**v47)();
  uint64_t v48;
  std::__shared_weak_count *v49;
  _QWORD v50[3];
  __int128 v51;
  _QWORD v52[2];

  v52[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v50[0] = &off_24C41E150;
  v50[1] = v10;
  v50[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_20B4E94AC((uint64_t)v50);
  v15 = (char *)v52;
  if (v14 > 1647589489)
  {
    if (v14 == 1647719521)
    {
      v16 = 0;
      goto LABEL_21;
    }
    if (v14 == 1647589490)
    {
      v16 = 1;
      goto LABEL_21;
    }
  }
  else
  {
    if (v14 == 1278226742)
    {
      v16 = 3;
      goto LABEL_21;
    }
    if (v14 == 1647392359)
    {
      v16 = 2;
LABEL_21:
      v15 = (char *)&v52[-2] + 4 * v16;
    }
  }
  if (v15 - (char *)&v51 == 16
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 113, (uint64_t)"Contains(pf::formats::U16(), ref.Format())", 42, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v50[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_28;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_28:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (v19)
      goto LABEL_29;
LABEL_39:
    v27 = *(_QWORD *)(a2 + 8);
    v47 = &off_24C41E150;
    v48 = v27;
    v49 = 0;
    goto LABEL_40;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_39;
LABEL_29:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a2 + 8);
  v23 = *(std::__shared_weak_count **)(a2 + 16);
  v47 = &off_24C41E150;
  v48 = v24;
  v49 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_40:
  v28 = sub_20B4E7694((uint64_t)&v47, 0);
  v29 = v49;
  *(_QWORD *)&v51 = &off_24C41E150;
  *((_QWORD *)&v51 + 1) = v48;
  v52[0] = v49;
  if (v49)
  {
    v30 = (unint64_t *)&v49->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  v32 = sub_20B4E8AAC((uint64_t)&v51);
  v33 = sub_20B4E8D2C((uint64_t)&v51);
  v34 = sub_20B4E8FAC((uint64_t)&v51);
  v35 = sub_20B4E922C((uint64_t)&v51) << 31;
  *(_QWORD *)&v51 = &off_24C41E150;
  if (v29)
  {
    v36 = (unint64_t *)&v29->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v38 = v32;
  v39 = v32 | ((unint64_t)v33 << 32);
  v47 = &off_24C41E150;
  v40 = v49;
  if (v49)
  {
    v41 = (unint64_t *)&v49->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  if (v33)
    v43 = v38 == 0;
  else
    v43 = 1;
  if (v43)
    v44 = 0;
  else
    v44 = v39;
  *(_QWORD *)((char *)&v51 + 4) = v44;
  LODWORD(v51) = 3;
  v45 = v51;
  LODWORD(v51) = 1;
  *(_QWORD *)((char *)&v51 + 4) = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  v46 = v51;
  *(_QWORD *)a1 = v28;
  *(_QWORD *)(a1 + 8) = v45;
  *(_DWORD *)(a1 + 16) = HIDWORD(v44);
  *(_QWORD *)(a1 + 20) = v46;
  *(_DWORD *)(a1 + 28) = HIDWORD(v35);
  *(_QWORD *)(a1 + 32) = v44;
  *(_QWORD *)(a1 + 40) = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  if (HIDWORD(v44) * HIDWORD(v35) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
}

void sub_20B291068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B29107C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B291090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_20B4E888C(&a15);
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2910AC(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416EC8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

uint64_t sub_20B291110(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v33[2];
  std::__shared_weak_count *v34;

  *(_QWORD *)a1 = off_24C416EC8;
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
        goto LABEL_8;
    }
    else
    {
LABEL_7:
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
      {
LABEL_8:
        v10 = *((_DWORD *)v4 + 4);
        goto LABEL_11;
      }
    }
  }
  v10 = 0;
LABEL_11:
  *(_QWORD *)(a1 + 16) = &off_24C41E150;
  *(_DWORD *)(a1 + 8) = v10;
  v11 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v11;
  if (v11)
  {
    v12 = (unint64_t *)(v11 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  *(_DWORD *)(a1 + 40) = 0;
  v15 = *(_QWORD *)(a2 + 8);
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  v33[0] = &off_24C41E150;
  v33[1] = v15;
  v34 = v14;
  if (v14)
  {
    v16 = (unint64_t *)&v14->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  sub_20B2913C4((uint64_t)v33, a1 + 48);
  v33[0] = &off_24C41E150;
  v18 = v34;
  if (v34)
  {
    v19 = (unint64_t *)&v34->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      v21 = *(_QWORD *)(a2 + 8);
      if (v21)
        goto LABEL_22;
LABEL_36:
      v28 = 0;
      goto LABEL_37;
    }
  }
  v21 = *(_QWORD *)(a2 + 8);
  if (!v21)
    goto LABEL_36;
LABEL_22:
  v22 = *(std::__shared_weak_count **)(v21 + 8);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
      v26 = *(uint64_t **)(a2 + 8);
      if (v26)
        goto LABEL_28;
LABEL_41:
      v28 = 0;
      if (!*(_DWORD *)(a1 + 72))
        goto LABEL_42;
      goto LABEL_38;
    }
  }
  v26 = *(uint64_t **)(a2 + 8);
  if (!v26)
    goto LABEL_41;
LABEL_28:
  v28 = *v26;
  v27 = (std::__shared_weak_count *)v26[1];
  if (!v27)
    goto LABEL_37;
  v29 = (unint64_t *)&v27->__shared_owners_;
  do
    v30 = __ldxr(v29);
  while (__stxr(v30 + 1, v29));
  do
    v31 = __ldaxr(v29);
  while (__stlxr(v31 - 1, v29));
  if (v31)
  {
LABEL_37:
    if (!*(_DWORD *)(a1 + 72))
      goto LABEL_42;
    goto LABEL_38;
  }
  ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
  std::__shared_weak_count::__release_weak(v27);
  if (!*(_DWORD *)(a1 + 72))
  {
LABEL_42:
    if (!v28)
      return a1;
    goto LABEL_43;
  }
LABEL_38:
  if ((v28 == 0) == (*(_DWORD *)(a1 + 76) == 0))
    return a1;
LABEL_43:
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 105, (uint64_t)"(buffer == nullptr) == extent.IsEmpty()", 39, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return a1;
}

void sub_20B291394(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v2);
  _Unwind_Resume(a1);
}

void sub_20B2913B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

void sub_20B2913C4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  size_t v30;
  size_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t (**v36)();
  uint64_t v37;
  std::__shared_weak_count *v38;
  _QWORD v39[3];
  _BYTE v40[12];
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 156, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  v39[0] = &off_24C41E150;
  v39[1] = v10;
  v39[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_20B4E94AC((uint64_t)v39);
  v15 = &v41;
  if (v14 > 1647589489)
  {
    if (v14 == 1647719521)
    {
      v16 = 0;
      goto LABEL_21;
    }
    if (v14 == 1647589490)
    {
      v16 = 1;
      goto LABEL_21;
    }
  }
  else
  {
    if (v14 == 1278226742)
    {
      v16 = 3;
      goto LABEL_21;
    }
    if (v14 == 1647392359)
    {
      v16 = 2;
LABEL_21:
      v15 = (uint64_t *)&v40[4 * v16];
    }
  }
  if ((char *)v15 - v40 == 16
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 113, (uint64_t)"Contains(pf::formats::U16(), ref.Format())", 42, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v39[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_28;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_28:
    v19 = *(std::__shared_weak_count **)(a1 + 16);
    if (v19)
      goto LABEL_29;
LABEL_39:
    v27 = *(_QWORD *)(a1 + 8);
    v36 = &off_24C41E150;
    v37 = v27;
    v38 = 0;
    goto LABEL_40;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v19)
    goto LABEL_39;
LABEL_29:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a1 + 8);
  v23 = *(std::__shared_weak_count **)(a1 + 16);
  v36 = &off_24C41E150;
  v37 = v24;
  v38 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_40:
  v28 = sub_20B4E8AAC((uint64_t)&v36);
  v29 = sub_20B4E8D2C((uint64_t)&v36);
  v30 = sub_20B4E8FAC((uint64_t)&v36);
  v31 = sub_20B4E922C((uint64_t)&v36);
  v36 = &off_24C41E150;
  v32 = v38;
  if (v38)
  {
    v33 = (unint64_t *)&v38->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  v35 = v28 | ((unint64_t)v29 << 32);
  *(_DWORD *)v40 = 3;
  *(_DWORD *)&v40[4] = v35;
  *(_QWORD *)a2 = *(_QWORD *)v40;
  *(_DWORD *)(a2 + 8) = v29;
  *(_DWORD *)v40 = 1;
  *(_QWORD *)&v40[4] = (v31 << 31) & 0xFFFFFFFF00000000 | (v30 >> 1);
  *(_QWORD *)(a2 + 12) = *(_QWORD *)v40;
  *(_DWORD *)(a2 + 20) = v31 >> 1;
  *(_QWORD *)(a2 + 24) = v35;
  *(_QWORD *)(a2 + 32) = (v31 << 31) & 0xFFFFFFFF00000000 | (v30 >> 1);
}

void sub_20B291724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B291738(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B291754(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_20AECFAB8();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20B2917DC(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;

  if (*(_DWORD *)(a2 + 40) >= 3u)
LABEL_31:
    sub_20AECFAB8();
  v4 = *(uint64_t **)(a2 + 24);
  if (!v4)
    goto LABEL_17;
  v6 = *v4;
  v5 = (std::__shared_weak_count *)v4[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
LABEL_8:
    if (v6)
      goto LABEL_9;
LABEL_17:
    sub_20B27E5CC(a1, 0, (_DWORD *)(a2 + 72));
    return;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6)
    goto LABEL_17;
LABEL_9:
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_31;
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(std::__shared_weak_count **)(a2 + 32);
  v23 = &off_24C41E150;
  v24 = v10;
  v25 = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v21 = v10;
    v22 = v11;
    do
      v14 = __ldxr(v12);
    while (__stxr(v14 + 1, v12));
  }
  else
  {
    v21 = v10;
    v22 = 0;
  }
  v20 = &off_24C41E150;
  sub_20B290C10(a1, (uint64_t)&v20);
  v20 = &off_24C41E150;
  if (!v11)
    goto LABEL_23;
  v15 = (unint64_t *)&v11->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v23 = &off_24C41E150;
    v17 = v25;
    if (!v25)
      return;
  }
  else
  {
LABEL_23:
    v23 = &off_24C41E150;
    v17 = v25;
    if (!v25)
      return;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
}

void sub_20B29198C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_20B4E888C(&a9);
  sub_20B4E888C(&a12);
  _Unwind_Resume(a1);
}

void sub_20B2919A8(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int *v6;
  int v7;
  uint64_t *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  void *__p;
  __int128 v29;
  uint64_t (**v30)();
  uint64_t *v31;
  std::__shared_weak_count *v32;
  void (**v33)(_QWORD);
  uint64_t *v34;
  std::__shared_weak_count *v35;
  char v36;

  v6 = (unsigned int *)(a3 + 24);
  if ((a2 - 1) > 0x25)
    v7 = 0;
  else
    v7 = dword_20B5F3478[a2 - 1] | dword_20B5F33E0[a2 - 1];
  __p = operator new(0x78uLL);
  v29 = xmmword_20B5F1DA0;
  strcpy((char *)__p, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
  sub_20B4E7E40(v6, v7, (uint64_t *)&__p, (uint64_t)&v33);
  if (!v36)
  {
    v27 = sub_20B0B52D8((uint64_t)&v33);
    sub_20B0BFB50(v27);
  }
  v8 = v34;
  v30 = &off_24C41E150;
  v31 = v34;
  v9 = v35;
  v32 = v35;
  v34 = 0;
  v35 = 0;
  (*v33)(&v33);
  if (SHIBYTE(v29) < 0)
  {
    operator delete(__p);
    if (!a1)
      goto LABEL_25;
  }
  else if (!a1)
  {
LABEL_25:
    *(_QWORD *)a4 = &off_24C41E150;
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    v31 = 0;
    v32 = 0;
    *(_DWORD *)(a4 + 24) = 0;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
    goto LABEL_40;
  }
  if (a1 == 1)
  {
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v19 = __ldxr(p_shared_owners);
      while (__stxr(v19 + 1, p_shared_owners));
    }
    if (v8)
    {
      v21 = *v8;
      v20 = (std::__shared_weak_count *)v8[1];
      if (v20)
      {
        v22 = (unint64_t *)&v20->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      if (v21)
        sub_20B4ED800((uint64_t)v8);
    }
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    *(_QWORD *)a4 = &off_24C41DFE8;
    *(_DWORD *)(a4 + 24) = 1;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
LABEL_40:
    v25 = (unint64_t *)&v17->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    return;
  }
  if (a1 != 2)
    goto LABEL_25;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  if (v8)
  {
    v13 = *v8;
    v12 = (std::__shared_weak_count *)v8[1];
    if (v12)
    {
      v14 = (unint64_t *)&v12->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      do
        v16 = __ldaxr(v14);
      while (__stlxr(v16 - 1, v14));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    if (v13)
      sub_20B4ED8EC((uint64_t)v8);
  }
  *(_QWORD *)(a4 + 8) = v8;
  *(_QWORD *)(a4 + 16) = v9;
  *(_QWORD *)a4 = &off_24C41E008;
  *(_DWORD *)(a4 + 24) = 2;
  v30 = &off_24C41E150;
  v17 = v32;
  if (v32)
    goto LABEL_40;
}

void sub_20B291C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v7;
  va_list va;

  va_start(va, a4);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B291CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  sub_20AEEF4E0((uint64_t)&a18);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20B291D18(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  size_t v34;
  size_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (**v47)();
  uint64_t v48;
  std::__shared_weak_count *v49;
  _QWORD v50[3];
  __int128 v51;
  _QWORD v52[2];

  v52[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v50[0] = &off_24C41E150;
  v50[1] = v10;
  v50[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_20B4E94AC((uint64_t)v50);
  v15 = (char *)v52;
  if (v14 > 1647589489)
  {
    if (v14 == 1647719521)
    {
      v16 = 0;
      goto LABEL_21;
    }
    if (v14 == 1647589490)
    {
      v16 = 1;
      goto LABEL_21;
    }
  }
  else
  {
    if (v14 == 1278226742)
    {
      v16 = 3;
      goto LABEL_21;
    }
    if (v14 == 1647392359)
    {
      v16 = 2;
LABEL_21:
      v15 = (char *)&v52[-2] + 4 * v16;
    }
  }
  if (v15 - (char *)&v51 == 16
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 113, (uint64_t)"Contains(pf::formats::U16(), ref.Format())", 42, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v50[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_28;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_28:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (v19)
      goto LABEL_29;
LABEL_39:
    v27 = *(_QWORD *)(a2 + 8);
    v47 = &off_24C41E150;
    v48 = v27;
    v49 = 0;
    goto LABEL_40;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_39;
LABEL_29:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a2 + 8);
  v23 = *(std::__shared_weak_count **)(a2 + 16);
  v47 = &off_24C41E150;
  v48 = v24;
  v49 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_40:
  v28 = sub_20B4E7694((uint64_t)&v47, 0);
  v29 = v49;
  *(_QWORD *)&v51 = &off_24C41E150;
  *((_QWORD *)&v51 + 1) = v48;
  v52[0] = v49;
  if (v49)
  {
    v30 = (unint64_t *)&v49->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  v32 = sub_20B4E8AAC((uint64_t)&v51);
  v33 = sub_20B4E8D2C((uint64_t)&v51);
  v34 = sub_20B4E8FAC((uint64_t)&v51);
  v35 = sub_20B4E922C((uint64_t)&v51) << 31;
  *(_QWORD *)&v51 = &off_24C41E150;
  if (v29)
  {
    v36 = (unint64_t *)&v29->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v38 = v32;
  v39 = v32 | ((unint64_t)v33 << 32);
  v47 = &off_24C41E150;
  v40 = v49;
  if (v49)
  {
    v41 = (unint64_t *)&v49->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  if (v33)
    v43 = v38 == 0;
  else
    v43 = 1;
  if (v43)
    v44 = 0;
  else
    v44 = v39;
  *(_QWORD *)((char *)&v51 + 4) = v44;
  LODWORD(v51) = 4;
  v45 = v51;
  LODWORD(v51) = 1;
  *(_QWORD *)((char *)&v51 + 4) = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  v46 = v51;
  *(_QWORD *)a1 = v28;
  *(_QWORD *)(a1 + 8) = v45;
  *(_DWORD *)(a1 + 16) = HIDWORD(v44);
  *(_QWORD *)(a1 + 20) = v46;
  *(_DWORD *)(a1 + 28) = HIDWORD(v35);
  *(_QWORD *)(a1 + 32) = v44;
  *(_QWORD *)(a1 + 40) = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  if (HIDWORD(v44) * HIDWORD(v35) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
}

void sub_20B292170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B292184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B292198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_20B4E888C(&a15);
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2921B4(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416F58;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

uint64_t sub_20B292218(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v33[2];
  std::__shared_weak_count *v34;

  *(_QWORD *)a1 = off_24C416F58;
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
        goto LABEL_8;
    }
    else
    {
LABEL_7:
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
      {
LABEL_8:
        v10 = *((_DWORD *)v4 + 4);
        goto LABEL_11;
      }
    }
  }
  v10 = 0;
LABEL_11:
  *(_QWORD *)(a1 + 16) = &off_24C41E150;
  *(_DWORD *)(a1 + 8) = v10;
  v11 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v11;
  if (v11)
  {
    v12 = (unint64_t *)(v11 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  *(_DWORD *)(a1 + 40) = 0;
  v15 = *(_QWORD *)(a2 + 8);
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  v33[0] = &off_24C41E150;
  v33[1] = v15;
  v34 = v14;
  if (v14)
  {
    v16 = (unint64_t *)&v14->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  sub_20B2924CC((uint64_t)v33, a1 + 48);
  v33[0] = &off_24C41E150;
  v18 = v34;
  if (v34)
  {
    v19 = (unint64_t *)&v34->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      v21 = *(_QWORD *)(a2 + 8);
      if (v21)
        goto LABEL_22;
LABEL_36:
      v28 = 0;
      goto LABEL_37;
    }
  }
  v21 = *(_QWORD *)(a2 + 8);
  if (!v21)
    goto LABEL_36;
LABEL_22:
  v22 = *(std::__shared_weak_count **)(v21 + 8);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
      v26 = *(uint64_t **)(a2 + 8);
      if (v26)
        goto LABEL_28;
LABEL_41:
      v28 = 0;
      if (!*(_DWORD *)(a1 + 72))
        goto LABEL_42;
      goto LABEL_38;
    }
  }
  v26 = *(uint64_t **)(a2 + 8);
  if (!v26)
    goto LABEL_41;
LABEL_28:
  v28 = *v26;
  v27 = (std::__shared_weak_count *)v26[1];
  if (!v27)
    goto LABEL_37;
  v29 = (unint64_t *)&v27->__shared_owners_;
  do
    v30 = __ldxr(v29);
  while (__stxr(v30 + 1, v29));
  do
    v31 = __ldaxr(v29);
  while (__stlxr(v31 - 1, v29));
  if (v31)
  {
LABEL_37:
    if (!*(_DWORD *)(a1 + 72))
      goto LABEL_42;
    goto LABEL_38;
  }
  ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
  std::__shared_weak_count::__release_weak(v27);
  if (!*(_DWORD *)(a1 + 72))
  {
LABEL_42:
    if (!v28)
      return a1;
    goto LABEL_43;
  }
LABEL_38:
  if ((v28 == 0) == (*(_DWORD *)(a1 + 76) == 0))
    return a1;
LABEL_43:
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 105, (uint64_t)"(buffer == nullptr) == extent.IsEmpty()", 39, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return a1;
}

void sub_20B29249C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v2);
  _Unwind_Resume(a1);
}

void sub_20B2924B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

void sub_20B2924CC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  size_t v30;
  size_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t (**v36)();
  uint64_t v37;
  std::__shared_weak_count *v38;
  _QWORD v39[3];
  _BYTE v40[12];
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 156, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  v39[0] = &off_24C41E150;
  v39[1] = v10;
  v39[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_20B4E94AC((uint64_t)v39);
  v15 = &v41;
  if (v14 > 1647589489)
  {
    if (v14 == 1647719521)
    {
      v16 = 0;
      goto LABEL_21;
    }
    if (v14 == 1647589490)
    {
      v16 = 1;
      goto LABEL_21;
    }
  }
  else
  {
    if (v14 == 1278226742)
    {
      v16 = 3;
      goto LABEL_21;
    }
    if (v14 == 1647392359)
    {
      v16 = 2;
LABEL_21:
      v15 = (uint64_t *)&v40[4 * v16];
    }
  }
  if ((char *)v15 - v40 == 16
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 113, (uint64_t)"Contains(pf::formats::U16(), ref.Format())", 42, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v39[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_28;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_28:
    v19 = *(std::__shared_weak_count **)(a1 + 16);
    if (v19)
      goto LABEL_29;
LABEL_39:
    v27 = *(_QWORD *)(a1 + 8);
    v36 = &off_24C41E150;
    v37 = v27;
    v38 = 0;
    goto LABEL_40;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v19)
    goto LABEL_39;
LABEL_29:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a1 + 8);
  v23 = *(std::__shared_weak_count **)(a1 + 16);
  v36 = &off_24C41E150;
  v37 = v24;
  v38 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_40:
  v28 = sub_20B4E8AAC((uint64_t)&v36);
  v29 = sub_20B4E8D2C((uint64_t)&v36);
  v30 = sub_20B4E8FAC((uint64_t)&v36);
  v31 = sub_20B4E922C((uint64_t)&v36);
  v36 = &off_24C41E150;
  v32 = v38;
  if (v38)
  {
    v33 = (unint64_t *)&v38->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  v35 = v28 | ((unint64_t)v29 << 32);
  *(_DWORD *)v40 = 4;
  *(_DWORD *)&v40[4] = v35;
  *(_QWORD *)a2 = *(_QWORD *)v40;
  *(_DWORD *)(a2 + 8) = v29;
  *(_DWORD *)v40 = 1;
  *(_QWORD *)&v40[4] = (v31 << 31) & 0xFFFFFFFF00000000 | (v30 >> 1);
  *(_QWORD *)(a2 + 12) = *(_QWORD *)v40;
  *(_DWORD *)(a2 + 20) = v31 >> 1;
  *(_QWORD *)(a2 + 24) = v35;
  *(_QWORD *)(a2 + 32) = (v31 << 31) & 0xFFFFFFFF00000000 | (v30 >> 1);
}

void sub_20B29282C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B292840(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B29285C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_20AECFAB8();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20B2928E4(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24C41E150;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B291D18(a1, (uint64_t)&v27);
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24C41E150;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B292B0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_20B292B28(int a1@<W0>, int a2@<W1>, unsigned int *a3@<X2>, uint64_t a4@<X8>)
{
  int v7;
  uint64_t *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  void *__p;
  __int128 v29;
  uint64_t (**v30)();
  uint64_t *v31;
  std::__shared_weak_count *v32;
  void (**v33)(_QWORD);
  uint64_t *v34;
  std::__shared_weak_count *v35;
  char v36;

  if ((a2 - 1) > 0x25)
    v7 = 0;
  else
    v7 = dword_20B5F3478[a2 - 1] | dword_20B5F33E0[a2 - 1];
  __p = operator new(0x78uLL);
  v29 = xmmword_20B5F1DA0;
  strcpy((char *)__p, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
  sub_20B4E7E40(a3, v7, (uint64_t *)&__p, (uint64_t)&v33);
  if (!v36)
  {
    v27 = sub_20B0B52D8((uint64_t)&v33);
    sub_20B0BFB50(v27);
  }
  v8 = v34;
  v30 = &off_24C41E150;
  v31 = v34;
  v9 = v35;
  v32 = v35;
  v34 = 0;
  v35 = 0;
  (*v33)(&v33);
  if (SHIBYTE(v29) < 0)
  {
    operator delete(__p);
    if (!a1)
      goto LABEL_25;
  }
  else if (!a1)
  {
LABEL_25:
    *(_QWORD *)a4 = &off_24C41E150;
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    v31 = 0;
    v32 = 0;
    *(_DWORD *)(a4 + 24) = 0;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
    goto LABEL_40;
  }
  if (a1 == 1)
  {
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v19 = __ldxr(p_shared_owners);
      while (__stxr(v19 + 1, p_shared_owners));
    }
    if (v8)
    {
      v21 = *v8;
      v20 = (std::__shared_weak_count *)v8[1];
      if (v20)
      {
        v22 = (unint64_t *)&v20->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      if (v21)
        sub_20B4ED800((uint64_t)v8);
    }
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    *(_QWORD *)a4 = &off_24C41DFE8;
    *(_DWORD *)(a4 + 24) = 1;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
LABEL_40:
    v25 = (unint64_t *)&v17->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    return;
  }
  if (a1 != 2)
    goto LABEL_25;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  if (v8)
  {
    v13 = *v8;
    v12 = (std::__shared_weak_count *)v8[1];
    if (v12)
    {
      v14 = (unint64_t *)&v12->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      do
        v16 = __ldaxr(v14);
      while (__stlxr(v16 - 1, v14));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    if (v13)
      sub_20B4ED8EC((uint64_t)v8);
  }
  *(_QWORD *)(a4 + 8) = v8;
  *(_QWORD *)(a4 + 16) = v9;
  *(_QWORD *)a4 = &off_24C41E008;
  *(_DWORD *)(a4 + 24) = 2;
  v30 = &off_24C41E150;
  v17 = v32;
  if (v32)
    goto LABEL_40;
}

void sub_20B292E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v7;
  va_list va;

  va_start(va, a4);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B292E6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  sub_20AEEF4E0((uint64_t)&a18);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_20B292E98(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t *v16;
  _QWORD v18[3];
  _QWORD v19[3];
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  if (a1 == 2)
  {
    if (*(_DWORD *)(a2 + 24) != 2)
      goto LABEL_30;
    v9 = *(_QWORD *)(a2 + 8);
    v4 = *(std::__shared_weak_count **)(a2 + 16);
    v18[0] = &off_24C41E150;
    v18[1] = v9;
    v18[2] = v4;
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
    }
    sub_20B293068(&v21, (uint64_t)v18);
    v2 = v22;
    v18[0] = &off_24C41E150;
    if (!v4)
      return v2;
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldaxr(v12);
    while (__stlxr(v8 - 1, v12));
    goto LABEL_27;
  }
  if (a1 == 1)
  {
    if (*(_DWORD *)(a2 + 24) != 1)
      goto LABEL_30;
    v13 = *(_QWORD *)(a2 + 8);
    v4 = *(std::__shared_weak_count **)(a2 + 16);
    v19[0] = &off_24C41E150;
    v19[1] = v13;
    v19[2] = v4;
    if (v4)
    {
      v14 = (unint64_t *)&v4->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
    }
    sub_20B293068(&v21, (uint64_t)v19);
    v2 = v22;
    v19[0] = &off_24C41E150;
    if (!v4)
      return v2;
    v16 = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldaxr(v16);
    while (__stlxr(v8 - 1, v16));
LABEL_27:
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    return v2;
  }
  if (a1)
    return v2;
  if (*(_DWORD *)(a2 + 24))
LABEL_30:
    sub_20AECFAB8();
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(std::__shared_weak_count **)(a2 + 16);
  v20[0] = &off_24C41E150;
  v20[1] = v3;
  v20[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  sub_20B293068(&v21, (uint64_t)v20);
  v2 = v22;
  v20[0] = &off_24C41E150;
  if (v4)
  {
    v7 = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    goto LABEL_27;
  }
  return v2;
}

void sub_20B29302C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B293040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B293054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B293068(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  size_t v34;
  size_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t (**v45)();
  uint64_t v46;
  std::__shared_weak_count *v47;
  _QWORD v48[3];
  _QWORD v49[2];
  std::__shared_weak_count *v50;

  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_66;
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v48[0] = &off_24C41E150;
  v48[1] = v10;
  v48[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_20B4E94AC((uint64_t)v48);
  v15 = (char *)&v50 + 4;
  if (v14 <= 1380411456)
  {
    if (v14 == 843264104)
    {
      v16 = 1;
      goto LABEL_23;
    }
    if (v14 == 1278226536)
    {
      v16 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    switch(v14)
    {
      case 1380411457:
        v16 = 2;
        goto LABEL_23;
      case 1751410032:
        v16 = 4;
        goto LABEL_23;
      case 1751411059:
        v16 = 3;
LABEL_23:
        v15 = (char *)v49 + 4 * v16;
        break;
    }
  }
  if (v15 - (char *)v49 == 20
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 115, (uint64_t)"Contains(pf::formats::F16(), ref.Format())", 42, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v48[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_30;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_30:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (v19)
      goto LABEL_31;
LABEL_41:
    v27 = *(_QWORD *)(a2 + 8);
    v45 = &off_24C41E150;
    v46 = v27;
    v47 = 0;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_41;
LABEL_31:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a2 + 8);
  v23 = *(std::__shared_weak_count **)(a2 + 16);
  v45 = &off_24C41E150;
  v46 = v24;
  v47 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_42:
  v28 = sub_20B4E7694((uint64_t)&v45, 0);
  v29 = v47;
  v49[0] = &off_24C41E150;
  v49[1] = v46;
  v50 = v47;
  if (v47)
  {
    v30 = (unint64_t *)&v47->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  v32 = sub_20B4E8AAC((uint64_t)v49);
  v33 = sub_20B4E8D2C((uint64_t)v49);
  v34 = sub_20B4E8FAC((uint64_t)v49);
  v35 = sub_20B4E922C((uint64_t)v49) << 31;
  v49[0] = &off_24C41E150;
  if (v29)
  {
    v36 = (unint64_t *)&v29->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v38 = v32;
  v39 = v32 | ((unint64_t)v33 << 32);
  v45 = &off_24C41E150;
  v40 = v47;
  if (v47)
  {
    v41 = (unint64_t *)&v47->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  if (v33)
    v43 = v38 == 0;
  else
    v43 = 1;
  if (v43)
    v44 = 0;
  else
    v44 = v39;
  *a1 = v28;
  a1[1] = v44;
  a1[2] = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  if (HIDWORD(v35) * HIDWORD(v44) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
LABEL_66:
    abort();
  }
}

void sub_20B293458(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B29346C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B293480(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va1);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B29349C(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416FE8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_20B293500(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  __n128 v38;
  std::__shared_weak_count *v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  uint64_t v47[3];
  uint64_t (**v48)();
  uint64_t *v49;
  std::__shared_weak_count *v50;
  uint64_t v51[2];

  if (*(_DWORD *)(a1 + 40) >= 3u)
    goto LABEL_66;
  v3 = *(uint64_t **)(a1 + 24);
  if (!v3)
    return;
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!v6)
      return;
  }
  else
  {
LABEL_8:
    if (!v6)
      return;
  }
  v10 = *(_DWORD *)(a1 + 40);
  if (v10 == 2)
  {
    v20 = *(uint64_t **)(a1 + 24);
    v21 = *(std::__shared_weak_count **)(a1 + 32);
    v49 = v20;
    v50 = v21;
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
    }
    v48 = &off_24C41E008;
    if (v20)
    {
      v25 = *v20;
      v24 = (std::__shared_weak_count *)v20[1];
      if (v24)
      {
        v26 = (unint64_t *)&v24->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
        do
          v28 = __ldaxr(v26);
        while (__stlxr(v28 - 1, v26));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      if (v25)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10 == 1)
  {
    v29 = *(uint64_t **)(a1 + 24);
    v30 = *(std::__shared_weak_count **)(a1 + 32);
    v49 = v29;
    v50 = v30;
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    v48 = &off_24C41E008;
    if (v29)
    {
      v34 = *v29;
      v33 = (std::__shared_weak_count *)v29[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10)
LABEL_66:
    sub_20AECFAB8();
  v11 = *(uint64_t **)(a1 + 24);
  v12 = *(std::__shared_weak_count **)(a1 + 32);
  v49 = v11;
  v50 = v12;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v48 = &off_24C41E008;
  if (v11)
  {
    v16 = *v11;
    v15 = (std::__shared_weak_count *)v11[1];
    if (v15)
    {
      v17 = (unint64_t *)&v15->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    if (v16)
LABEL_49:
      sub_20B4ED8EC((uint64_t)v49);
  }
LABEL_50:
  sub_20B293F68(v47, a1);
  v51[0] = a2;
  v51[1] = (uint64_t)v47;
  v38.n128_u64[0] = sub_20AFE4B3C(v51);
  if (!v49)
    goto LABEL_58;
  v40 = *v49;
  v39 = (std::__shared_weak_count *)v49[1];
  if (!v39)
    goto LABEL_56;
  v41 = (unint64_t *)&v39->__shared_owners_;
  do
    v42 = __ldxr(v41);
  while (__stxr(v42 + 1, v41));
  do
    v43 = __ldaxr(v41);
  while (__stlxr(v43 - 1, v41));
  if (v43)
  {
LABEL_56:
    if (!v40)
      goto LABEL_58;
    goto LABEL_57;
  }
  ((void (*)(std::__shared_weak_count *, __n128))v39->__on_zero_shared)(v39, v38);
  std::__shared_weak_count::__release_weak(v39);
  if (v40)
LABEL_57:
    sub_20B4EDAC0((uint64_t)v49);
LABEL_58:
  v48 = &off_24C41E150;
  v44 = v50;
  if (v50)
  {
    v45 = (unint64_t *)&v50->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v44->__on_zero_shared)(v44, v38);
      std::__shared_weak_count::__release_weak(v44);
    }
  }
}

void sub_20B2938D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E79B0((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2938E8(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD v34[2];
  std::__shared_weak_count *v35;

  *(_QWORD *)a1 = off_24C416FE8;
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
        goto LABEL_8;
    }
    else
    {
LABEL_7:
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
      {
LABEL_8:
        v10 = *((_DWORD *)v4 + 4);
        goto LABEL_11;
      }
    }
  }
  v10 = 0;
LABEL_11:
  *(_QWORD *)(a1 + 16) = &off_24C41E150;
  *(_DWORD *)(a1 + 8) = v10;
  v11 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v11;
  if (v11)
  {
    v12 = (unint64_t *)(v11 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  *(_DWORD *)(a1 + 40) = 0;
  v15 = *(_QWORD *)(a2 + 8);
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  v34[0] = &off_24C41E150;
  v34[1] = v15;
  v35 = v14;
  if (v14)
  {
    v16 = (unint64_t *)&v14->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  *(_QWORD *)(a1 + 48) = sub_20B293B9C((uint64_t)v34);
  *(_QWORD *)(a1 + 56) = v18;
  v34[0] = &off_24C41E150;
  v19 = v35;
  if (v35)
  {
    v20 = (unint64_t *)&v35->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      v22 = *(_QWORD *)(a2 + 8);
      if (v22)
        goto LABEL_22;
LABEL_36:
      v29 = 0;
      goto LABEL_37;
    }
  }
  v22 = *(_QWORD *)(a2 + 8);
  if (!v22)
    goto LABEL_36;
LABEL_22:
  v23 = *(std::__shared_weak_count **)(v22 + 8);
  if (v23)
  {
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
      v27 = *(uint64_t **)(a2 + 8);
      if (v27)
        goto LABEL_28;
LABEL_41:
      v29 = 0;
      if (!*(_DWORD *)(a1 + 48))
        goto LABEL_42;
      goto LABEL_38;
    }
  }
  v27 = *(uint64_t **)(a2 + 8);
  if (!v27)
    goto LABEL_41;
LABEL_28:
  v29 = *v27;
  v28 = (std::__shared_weak_count *)v27[1];
  if (!v28)
    goto LABEL_37;
  v30 = (unint64_t *)&v28->__shared_owners_;
  do
    v31 = __ldxr(v30);
  while (__stxr(v31 + 1, v30));
  do
    v32 = __ldaxr(v30);
  while (__stlxr(v32 - 1, v30));
  if (v32)
  {
LABEL_37:
    if (!*(_DWORD *)(a1 + 48))
      goto LABEL_42;
    goto LABEL_38;
  }
  ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
  std::__shared_weak_count::__release_weak(v28);
  if (!*(_DWORD *)(a1 + 48))
  {
LABEL_42:
    if (!v29)
      return a1;
    goto LABEL_43;
  }
LABEL_38:
  if ((v29 == 0) == (*(_DWORD *)(a1 + 52) == 0))
    return a1;
LABEL_43:
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 105, (uint64_t)"(buffer == nullptr) == extent.IsEmpty()", 39, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return a1;
}

void sub_20B293B6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v2);
  _Unwind_Resume(a1);
}

void sub_20B293B88(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_20B293B9C(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  int v12;
  char *v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  uint64_t (**v32)();
  uint64_t v33;
  std::__shared_weak_count *v34;
  _QWORD v35[3];
  _DWORD v36[5];
  uint64_t v37;

  v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (!v3)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v4)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 156, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  v35[0] = &off_24C41E150;
  v35[1] = v8;
  v35[2] = v9;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  v12 = sub_20B4E94AC((uint64_t)v35);
  v13 = (char *)&v37;
  if (v12 <= 1380411456)
  {
    if (v12 == 843264104)
    {
      v14 = 1;
      goto LABEL_23;
    }
    if (v12 == 1278226536)
    {
      v14 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    switch(v12)
    {
      case 1380411457:
        v14 = 2;
        goto LABEL_23;
      case 1751410032:
        v14 = 4;
        goto LABEL_23;
      case 1751411059:
        v14 = 3;
LABEL_23:
        v13 = (char *)&v36[v14];
        break;
    }
  }
  if (v13 - (char *)v36 == 20
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 115, (uint64_t)"Contains(pf::formats::F16(), ref.Format())", 42, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v35[0] = &off_24C41E150;
  if (!v9)
    goto LABEL_30;
  v15 = (unint64_t *)&v9->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (v16)
  {
LABEL_30:
    v17 = *(std::__shared_weak_count **)(a1 + 16);
    if (v17)
      goto LABEL_31;
LABEL_41:
    v25 = *(_QWORD *)(a1 + 8);
    v32 = &off_24C41E150;
    v33 = v25;
    v34 = 0;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  v17 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v17)
    goto LABEL_41;
LABEL_31:
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldxr(v18);
  while (__stxr(v19 + 1, v18));
  do
    v20 = __ldaxr(v18);
  while (__stlxr(v20 - 1, v18));
  if (!v20)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
  v22 = *(_QWORD *)(a1 + 8);
  v21 = *(std::__shared_weak_count **)(a1 + 16);
  v32 = &off_24C41E150;
  v33 = v22;
  v34 = v21;
  if (v21)
  {
    v23 = (unint64_t *)&v21->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
LABEL_42:
  v26 = sub_20B4E8AAC((uint64_t)&v32);
  v27 = sub_20B4E8D2C((uint64_t)&v32);
  sub_20B4E8FAC((uint64_t)&v32);
  sub_20B4E922C((uint64_t)&v32);
  v32 = &off_24C41E150;
  v28 = v34;
  if (v34)
  {
    v29 = (unint64_t *)&v34->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  return v26 | ((unint64_t)v27 << 32);
}

void sub_20B293EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B293EC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B293EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_20AECFAB8();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20B293F68(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t (**v26)();
  uint64_t v27;
  std::__shared_weak_count *v28;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v26 = &off_24C41E150;
          v27 = v10;
          v28 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24C41E150;
          sub_20B293068(a1, (uint64_t)&v23);
          v23 = &off_24C41E150;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v26 = &off_24C41E150;
          v20 = v28;
          if (v28)
          {
            v21 = (unint64_t *)&v28->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *a1 = 0;
  a1[1] = v16;
  a1[2] = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
}

void sub_20B294168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_20B4E888C(&a9);
  sub_20B4E888C(&a12);
  _Unwind_Resume(a1);
}

void sub_20B294184(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int *v6;
  int v7;
  uint64_t *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  void *__p;
  __int128 v29;
  uint64_t (**v30)();
  uint64_t *v31;
  std::__shared_weak_count *v32;
  void (**v33)(_QWORD);
  uint64_t *v34;
  std::__shared_weak_count *v35;
  char v36;

  v6 = (unsigned int *)(a3 + 24);
  if ((a2 - 1) > 0x25)
    v7 = 0;
  else
    v7 = dword_20B5F3478[a2 - 1] | dword_20B5F33E0[a2 - 1];
  __p = operator new(0x78uLL);
  v29 = xmmword_20B5F1DA0;
  strcpy((char *)__p, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
  sub_20B4E7E40(v6, v7, (uint64_t *)&__p, (uint64_t)&v33);
  if (!v36)
  {
    v27 = sub_20B0B52D8((uint64_t)&v33);
    sub_20B0BFB50(v27);
  }
  v8 = v34;
  v30 = &off_24C41E150;
  v31 = v34;
  v9 = v35;
  v32 = v35;
  v34 = 0;
  v35 = 0;
  (*v33)(&v33);
  if (SHIBYTE(v29) < 0)
  {
    operator delete(__p);
    if (!a1)
      goto LABEL_25;
  }
  else if (!a1)
  {
LABEL_25:
    *(_QWORD *)a4 = &off_24C41E150;
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    v31 = 0;
    v32 = 0;
    *(_DWORD *)(a4 + 24) = 0;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
    goto LABEL_40;
  }
  if (a1 == 1)
  {
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v19 = __ldxr(p_shared_owners);
      while (__stxr(v19 + 1, p_shared_owners));
    }
    if (v8)
    {
      v21 = *v8;
      v20 = (std::__shared_weak_count *)v8[1];
      if (v20)
      {
        v22 = (unint64_t *)&v20->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      if (v21)
        sub_20B4ED800((uint64_t)v8);
    }
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    *(_QWORD *)a4 = &off_24C41DFE8;
    *(_DWORD *)(a4 + 24) = 1;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
LABEL_40:
    v25 = (unint64_t *)&v17->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    return;
  }
  if (a1 != 2)
    goto LABEL_25;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  if (v8)
  {
    v13 = *v8;
    v12 = (std::__shared_weak_count *)v8[1];
    if (v12)
    {
      v14 = (unint64_t *)&v12->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      do
        v16 = __ldaxr(v14);
      while (__stlxr(v16 - 1, v14));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    if (v13)
      sub_20B4ED8EC((uint64_t)v8);
  }
  *(_QWORD *)(a4 + 8) = v8;
  *(_QWORD *)(a4 + 16) = v9;
  *(_QWORD *)a4 = &off_24C41E008;
  *(_DWORD *)(a4 + 24) = 2;
  v30 = &off_24C41E150;
  v17 = v32;
  if (v32)
    goto LABEL_40;
}

void sub_20B294460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v7;
  va_list va;

  va_start(va, a4);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2944C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  sub_20AEEF4E0((uint64_t)&a18);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20B2944F4(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  size_t v34;
  size_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (**v47)();
  uint64_t v48;
  std::__shared_weak_count *v49;
  _QWORD v50[3];
  __int128 v51;
  _QWORD v52[2];

  v52[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v50[0] = &off_24C41E150;
  v50[1] = v10;
  v50[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_20B4E94AC((uint64_t)v50);
  v15 = (char *)v52 + 4;
  if (v14 <= 1380411456)
  {
    if (v14 == 843264104)
    {
      v16 = 1;
      goto LABEL_23;
    }
    if (v14 == 1278226536)
    {
      v16 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    switch(v14)
    {
      case 1380411457:
        v16 = 2;
        goto LABEL_23;
      case 1751410032:
        v16 = 4;
        goto LABEL_23;
      case 1751411059:
        v16 = 3;
LABEL_23:
        v15 = (char *)&v52[-2] + 4 * v16;
        break;
    }
  }
  if (v15 - (char *)&v51 == 20
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 115, (uint64_t)"Contains(pf::formats::F16(), ref.Format())", 42, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v50[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_30;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_30:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (v19)
      goto LABEL_31;
LABEL_41:
    v27 = *(_QWORD *)(a2 + 8);
    v47 = &off_24C41E150;
    v48 = v27;
    v49 = 0;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_41;
LABEL_31:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a2 + 8);
  v23 = *(std::__shared_weak_count **)(a2 + 16);
  v47 = &off_24C41E150;
  v48 = v24;
  v49 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_42:
  v28 = sub_20B4E7694((uint64_t)&v47, 0);
  v29 = v49;
  *(_QWORD *)&v51 = &off_24C41E150;
  *((_QWORD *)&v51 + 1) = v48;
  v52[0] = v49;
  if (v49)
  {
    v30 = (unint64_t *)&v49->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  v32 = sub_20B4E8AAC((uint64_t)&v51);
  v33 = sub_20B4E8D2C((uint64_t)&v51);
  v34 = sub_20B4E8FAC((uint64_t)&v51);
  v35 = sub_20B4E922C((uint64_t)&v51) << 31;
  *(_QWORD *)&v51 = &off_24C41E150;
  if (v29)
  {
    v36 = (unint64_t *)&v29->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v38 = v32;
  v39 = v32 | ((unint64_t)v33 << 32);
  v47 = &off_24C41E150;
  v40 = v49;
  if (v49)
  {
    v41 = (unint64_t *)&v49->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  if (v33)
    v43 = v38 == 0;
  else
    v43 = 1;
  if (v43)
    v44 = 0;
  else
    v44 = v39;
  *(_QWORD *)((char *)&v51 + 4) = v44;
  LODWORD(v51) = 2;
  v45 = v51;
  LODWORD(v51) = 1;
  *(_QWORD *)((char *)&v51 + 4) = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  v46 = v51;
  *(_QWORD *)a1 = v28;
  *(_QWORD *)(a1 + 8) = v45;
  *(_DWORD *)(a1 + 16) = HIDWORD(v44);
  *(_QWORD *)(a1 + 20) = v46;
  *(_DWORD *)(a1 + 28) = HIDWORD(v35);
  *(_QWORD *)(a1 + 32) = v44;
  *(_QWORD *)(a1 + 40) = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  if (HIDWORD(v44) * HIDWORD(v35) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
}

void sub_20B294964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B294978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B29498C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_20B4E888C(&a15);
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2949A8(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C417078;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

uint64_t sub_20B294A0C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v33[2];
  std::__shared_weak_count *v34;

  *(_QWORD *)a1 = off_24C417078;
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
        goto LABEL_8;
    }
    else
    {
LABEL_7:
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
      {
LABEL_8:
        v10 = *((_DWORD *)v4 + 4);
        goto LABEL_11;
      }
    }
  }
  v10 = 0;
LABEL_11:
  *(_QWORD *)(a1 + 16) = &off_24C41E150;
  *(_DWORD *)(a1 + 8) = v10;
  v11 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v11;
  if (v11)
  {
    v12 = (unint64_t *)(v11 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  *(_DWORD *)(a1 + 40) = 0;
  v15 = *(_QWORD *)(a2 + 8);
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  v33[0] = &off_24C41E150;
  v33[1] = v15;
  v34 = v14;
  if (v14)
  {
    v16 = (unint64_t *)&v14->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  sub_20B294CC0((uint64_t)v33, a1 + 48);
  v33[0] = &off_24C41E150;
  v18 = v34;
  if (v34)
  {
    v19 = (unint64_t *)&v34->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      v21 = *(_QWORD *)(a2 + 8);
      if (v21)
        goto LABEL_22;
LABEL_36:
      v28 = 0;
      goto LABEL_37;
    }
  }
  v21 = *(_QWORD *)(a2 + 8);
  if (!v21)
    goto LABEL_36;
LABEL_22:
  v22 = *(std::__shared_weak_count **)(v21 + 8);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
      v26 = *(uint64_t **)(a2 + 8);
      if (v26)
        goto LABEL_28;
LABEL_41:
      v28 = 0;
      if (!*(_DWORD *)(a1 + 72))
        goto LABEL_42;
      goto LABEL_38;
    }
  }
  v26 = *(uint64_t **)(a2 + 8);
  if (!v26)
    goto LABEL_41;
LABEL_28:
  v28 = *v26;
  v27 = (std::__shared_weak_count *)v26[1];
  if (!v27)
    goto LABEL_37;
  v29 = (unint64_t *)&v27->__shared_owners_;
  do
    v30 = __ldxr(v29);
  while (__stxr(v30 + 1, v29));
  do
    v31 = __ldaxr(v29);
  while (__stlxr(v31 - 1, v29));
  if (v31)
  {
LABEL_37:
    if (!*(_DWORD *)(a1 + 72))
      goto LABEL_42;
    goto LABEL_38;
  }
  ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
  std::__shared_weak_count::__release_weak(v27);
  if (!*(_DWORD *)(a1 + 72))
  {
LABEL_42:
    if (!v28)
      return a1;
    goto LABEL_43;
  }
LABEL_38:
  if ((v28 == 0) == (*(_DWORD *)(a1 + 76) == 0))
    return a1;
LABEL_43:
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 105, (uint64_t)"(buffer == nullptr) == extent.IsEmpty()", 39, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return a1;
}

void sub_20B294C90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v2);
  _Unwind_Resume(a1);
}

void sub_20B294CAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

void sub_20B294CC0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  _BYTE *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  size_t v30;
  size_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t (**v36)();
  uint64_t v37;
  std::__shared_weak_count *v38;
  _QWORD v39[3];
  _BYTE v40[12];
  _BYTE v41[12];

  *(_QWORD *)&v41[4] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 156, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  v39[0] = &off_24C41E150;
  v39[1] = v10;
  v39[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_20B4E94AC((uint64_t)v39);
  v15 = v41;
  if (v14 <= 1380411456)
  {
    if (v14 == 843264104)
    {
      v16 = 1;
      goto LABEL_23;
    }
    if (v14 == 1278226536)
    {
      v16 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    switch(v14)
    {
      case 1380411457:
        v16 = 2;
        goto LABEL_23;
      case 1751410032:
        v16 = 4;
        goto LABEL_23;
      case 1751411059:
        v16 = 3;
LABEL_23:
        v15 = &v40[4 * v16];
        break;
    }
  }
  if (v15 - v40 == 20
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 115, (uint64_t)"Contains(pf::formats::F16(), ref.Format())", 42, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v39[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_30;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_30:
    v19 = *(std::__shared_weak_count **)(a1 + 16);
    if (v19)
      goto LABEL_31;
LABEL_41:
    v27 = *(_QWORD *)(a1 + 8);
    v36 = &off_24C41E150;
    v37 = v27;
    v38 = 0;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v19)
    goto LABEL_41;
LABEL_31:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a1 + 8);
  v23 = *(std::__shared_weak_count **)(a1 + 16);
  v36 = &off_24C41E150;
  v37 = v24;
  v38 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_42:
  v28 = sub_20B4E8AAC((uint64_t)&v36);
  v29 = sub_20B4E8D2C((uint64_t)&v36);
  v30 = sub_20B4E8FAC((uint64_t)&v36);
  v31 = sub_20B4E922C((uint64_t)&v36);
  v36 = &off_24C41E150;
  v32 = v38;
  if (v38)
  {
    v33 = (unint64_t *)&v38->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  v35 = v28 | ((unint64_t)v29 << 32);
  *(_DWORD *)v40 = 2;
  *(_DWORD *)&v40[4] = v35;
  *(_QWORD *)a2 = *(_QWORD *)v40;
  *(_DWORD *)(a2 + 8) = v29;
  *(_DWORD *)v40 = 1;
  *(_QWORD *)&v40[4] = (v31 << 31) & 0xFFFFFFFF00000000 | (v30 >> 1);
  *(_QWORD *)(a2 + 12) = *(_QWORD *)v40;
  *(_DWORD *)(a2 + 20) = v31 >> 1;
  *(_QWORD *)(a2 + 24) = v35;
  *(_QWORD *)(a2 + 32) = (v31 << 31) & 0xFFFFFFFF00000000 | (v30 >> 1);
}

void sub_20B295038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B29504C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B295068(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_20AECFAB8();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20B2950F0(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24C41E150;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B2944F4(a1, (uint64_t)&v27);
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24C41E150;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 2;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 2 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
  v20 = __PAIR64__(DWORD1(v30), 2);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B295318(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_20B295334(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int *v6;
  int v7;
  uint64_t *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  void *__p;
  __int128 v29;
  uint64_t (**v30)();
  uint64_t *v31;
  std::__shared_weak_count *v32;
  void (**v33)(_QWORD);
  uint64_t *v34;
  std::__shared_weak_count *v35;
  char v36;

  v6 = (unsigned int *)(a3 + 24);
  if ((a2 - 1) > 0x25)
    v7 = 0;
  else
    v7 = dword_20B5F3478[a2 - 1] | dword_20B5F33E0[a2 - 1];
  __p = operator new(0x78uLL);
  v29 = xmmword_20B5F1DA0;
  strcpy((char *)__p, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
  sub_20B4E7E40(v6, v7, (uint64_t *)&__p, (uint64_t)&v33);
  if (!v36)
  {
    v27 = sub_20B0B52D8((uint64_t)&v33);
    sub_20B0BFB50(v27);
  }
  v8 = v34;
  v30 = &off_24C41E150;
  v31 = v34;
  v9 = v35;
  v32 = v35;
  v34 = 0;
  v35 = 0;
  (*v33)(&v33);
  if (SHIBYTE(v29) < 0)
  {
    operator delete(__p);
    if (!a1)
      goto LABEL_25;
  }
  else if (!a1)
  {
LABEL_25:
    *(_QWORD *)a4 = &off_24C41E150;
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    v31 = 0;
    v32 = 0;
    *(_DWORD *)(a4 + 24) = 0;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
    goto LABEL_40;
  }
  if (a1 == 1)
  {
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v19 = __ldxr(p_shared_owners);
      while (__stxr(v19 + 1, p_shared_owners));
    }
    if (v8)
    {
      v21 = *v8;
      v20 = (std::__shared_weak_count *)v8[1];
      if (v20)
      {
        v22 = (unint64_t *)&v20->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      if (v21)
        sub_20B4ED800((uint64_t)v8);
    }
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    *(_QWORD *)a4 = &off_24C41DFE8;
    *(_DWORD *)(a4 + 24) = 1;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
LABEL_40:
    v25 = (unint64_t *)&v17->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    return;
  }
  if (a1 != 2)
    goto LABEL_25;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  if (v8)
  {
    v13 = *v8;
    v12 = (std::__shared_weak_count *)v8[1];
    if (v12)
    {
      v14 = (unint64_t *)&v12->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      do
        v16 = __ldaxr(v14);
      while (__stlxr(v16 - 1, v14));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    if (v13)
      sub_20B4ED8EC((uint64_t)v8);
  }
  *(_QWORD *)(a4 + 8) = v8;
  *(_QWORD *)(a4 + 16) = v9;
  *(_QWORD *)a4 = &off_24C41E008;
  *(_DWORD *)(a4 + 24) = 2;
  v30 = &off_24C41E150;
  v17 = v32;
  if (v32)
    goto LABEL_40;
}

void sub_20B295610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v7;
  va_list va;

  va_start(va, a4);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B295678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  sub_20AEEF4E0((uint64_t)&a18);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20B2956A4(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  size_t v34;
  size_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (**v47)();
  uint64_t v48;
  std::__shared_weak_count *v49;
  _QWORD v50[3];
  __int128 v51;
  _QWORD v52[2];

  v52[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v50[0] = &off_24C41E150;
  v50[1] = v10;
  v50[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_20B4E94AC((uint64_t)v50);
  v15 = (char *)v52 + 4;
  if (v14 <= 1380411456)
  {
    if (v14 == 843264104)
    {
      v16 = 1;
      goto LABEL_23;
    }
    if (v14 == 1278226536)
    {
      v16 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    switch(v14)
    {
      case 1380411457:
        v16 = 2;
        goto LABEL_23;
      case 1751410032:
        v16 = 4;
        goto LABEL_23;
      case 1751411059:
        v16 = 3;
LABEL_23:
        v15 = (char *)&v52[-2] + 4 * v16;
        break;
    }
  }
  if (v15 - (char *)&v51 == 20
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 115, (uint64_t)"Contains(pf::formats::F16(), ref.Format())", 42, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v50[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_30;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_30:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (v19)
      goto LABEL_31;
LABEL_41:
    v27 = *(_QWORD *)(a2 + 8);
    v47 = &off_24C41E150;
    v48 = v27;
    v49 = 0;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_41;
LABEL_31:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a2 + 8);
  v23 = *(std::__shared_weak_count **)(a2 + 16);
  v47 = &off_24C41E150;
  v48 = v24;
  v49 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_42:
  v28 = sub_20B4E7694((uint64_t)&v47, 0);
  v29 = v49;
  *(_QWORD *)&v51 = &off_24C41E150;
  *((_QWORD *)&v51 + 1) = v48;
  v52[0] = v49;
  if (v49)
  {
    v30 = (unint64_t *)&v49->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  v32 = sub_20B4E8AAC((uint64_t)&v51);
  v33 = sub_20B4E8D2C((uint64_t)&v51);
  v34 = sub_20B4E8FAC((uint64_t)&v51);
  v35 = sub_20B4E922C((uint64_t)&v51) << 31;
  *(_QWORD *)&v51 = &off_24C41E150;
  if (v29)
  {
    v36 = (unint64_t *)&v29->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v38 = v32;
  v39 = v32 | ((unint64_t)v33 << 32);
  v47 = &off_24C41E150;
  v40 = v49;
  if (v49)
  {
    v41 = (unint64_t *)&v49->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  if (v33)
    v43 = v38 == 0;
  else
    v43 = 1;
  if (v43)
    v44 = 0;
  else
    v44 = v39;
  *(_QWORD *)((char *)&v51 + 4) = v44;
  LODWORD(v51) = 4;
  v45 = v51;
  LODWORD(v51) = 1;
  *(_QWORD *)((char *)&v51 + 4) = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  v46 = v51;
  *(_QWORD *)a1 = v28;
  *(_QWORD *)(a1 + 8) = v45;
  *(_DWORD *)(a1 + 16) = HIDWORD(v44);
  *(_QWORD *)(a1 + 20) = v46;
  *(_DWORD *)(a1 + 28) = HIDWORD(v35);
  *(_QWORD *)(a1 + 32) = v44;
  *(_QWORD *)(a1 + 40) = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  if (HIDWORD(v44) * HIDWORD(v35) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
}

void sub_20B295B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B295B28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B295B3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_20B4E888C(&a15);
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B295B58(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C417108;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

uint64_t sub_20B295BBC(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v33[2];
  std::__shared_weak_count *v34;

  *(_QWORD *)a1 = off_24C417108;
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
        goto LABEL_8;
    }
    else
    {
LABEL_7:
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
      {
LABEL_8:
        v10 = *((_DWORD *)v4 + 4);
        goto LABEL_11;
      }
    }
  }
  v10 = 0;
LABEL_11:
  *(_QWORD *)(a1 + 16) = &off_24C41E150;
  *(_DWORD *)(a1 + 8) = v10;
  v11 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v11;
  if (v11)
  {
    v12 = (unint64_t *)(v11 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  *(_DWORD *)(a1 + 40) = 0;
  v15 = *(_QWORD *)(a2 + 8);
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  v33[0] = &off_24C41E150;
  v33[1] = v15;
  v34 = v14;
  if (v14)
  {
    v16 = (unint64_t *)&v14->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  sub_20B295E70((uint64_t)v33, a1 + 48);
  v33[0] = &off_24C41E150;
  v18 = v34;
  if (v34)
  {
    v19 = (unint64_t *)&v34->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      v21 = *(_QWORD *)(a2 + 8);
      if (v21)
        goto LABEL_22;
LABEL_36:
      v28 = 0;
      goto LABEL_37;
    }
  }
  v21 = *(_QWORD *)(a2 + 8);
  if (!v21)
    goto LABEL_36;
LABEL_22:
  v22 = *(std::__shared_weak_count **)(v21 + 8);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
      v26 = *(uint64_t **)(a2 + 8);
      if (v26)
        goto LABEL_28;
LABEL_41:
      v28 = 0;
      if (!*(_DWORD *)(a1 + 72))
        goto LABEL_42;
      goto LABEL_38;
    }
  }
  v26 = *(uint64_t **)(a2 + 8);
  if (!v26)
    goto LABEL_41;
LABEL_28:
  v28 = *v26;
  v27 = (std::__shared_weak_count *)v26[1];
  if (!v27)
    goto LABEL_37;
  v29 = (unint64_t *)&v27->__shared_owners_;
  do
    v30 = __ldxr(v29);
  while (__stxr(v30 + 1, v29));
  do
    v31 = __ldaxr(v29);
  while (__stlxr(v31 - 1, v29));
  if (v31)
  {
LABEL_37:
    if (!*(_DWORD *)(a1 + 72))
      goto LABEL_42;
    goto LABEL_38;
  }
  ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
  std::__shared_weak_count::__release_weak(v27);
  if (!*(_DWORD *)(a1 + 72))
  {
LABEL_42:
    if (!v28)
      return a1;
    goto LABEL_43;
  }
LABEL_38:
  if ((v28 == 0) == (*(_DWORD *)(a1 + 76) == 0))
    return a1;
LABEL_43:
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 105, (uint64_t)"(buffer == nullptr) == extent.IsEmpty()", 39, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return a1;
}

void sub_20B295E40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v2);
  _Unwind_Resume(a1);
}

void sub_20B295E5C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

void sub_20B295E70(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  _BYTE *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  size_t v30;
  size_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t (**v36)();
  uint64_t v37;
  std::__shared_weak_count *v38;
  _QWORD v39[3];
  _BYTE v40[12];
  _BYTE v41[12];

  *(_QWORD *)&v41[4] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 156, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  v39[0] = &off_24C41E150;
  v39[1] = v10;
  v39[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_20B4E94AC((uint64_t)v39);
  v15 = v41;
  if (v14 <= 1380411456)
  {
    if (v14 == 843264104)
    {
      v16 = 1;
      goto LABEL_23;
    }
    if (v14 == 1278226536)
    {
      v16 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    switch(v14)
    {
      case 1380411457:
        v16 = 2;
        goto LABEL_23;
      case 1751410032:
        v16 = 4;
        goto LABEL_23;
      case 1751411059:
        v16 = 3;
LABEL_23:
        v15 = &v40[4 * v16];
        break;
    }
  }
  if (v15 - v40 == 20
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 115, (uint64_t)"Contains(pf::formats::F16(), ref.Format())", 42, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v39[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_30;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_30:
    v19 = *(std::__shared_weak_count **)(a1 + 16);
    if (v19)
      goto LABEL_31;
LABEL_41:
    v27 = *(_QWORD *)(a1 + 8);
    v36 = &off_24C41E150;
    v37 = v27;
    v38 = 0;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v19)
    goto LABEL_41;
LABEL_31:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a1 + 8);
  v23 = *(std::__shared_weak_count **)(a1 + 16);
  v36 = &off_24C41E150;
  v37 = v24;
  v38 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_42:
  v28 = sub_20B4E8AAC((uint64_t)&v36);
  v29 = sub_20B4E8D2C((uint64_t)&v36);
  v30 = sub_20B4E8FAC((uint64_t)&v36);
  v31 = sub_20B4E922C((uint64_t)&v36);
  v36 = &off_24C41E150;
  v32 = v38;
  if (v38)
  {
    v33 = (unint64_t *)&v38->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  v35 = v28 | ((unint64_t)v29 << 32);
  *(_DWORD *)v40 = 4;
  *(_DWORD *)&v40[4] = v35;
  *(_QWORD *)a2 = *(_QWORD *)v40;
  *(_DWORD *)(a2 + 8) = v29;
  *(_DWORD *)v40 = 1;
  *(_QWORD *)&v40[4] = (v31 << 31) & 0xFFFFFFFF00000000 | (v30 >> 1);
  *(_QWORD *)(a2 + 12) = *(_QWORD *)v40;
  *(_DWORD *)(a2 + 20) = v31 >> 1;
  *(_QWORD *)(a2 + 24) = v35;
  *(_QWORD *)(a2 + 32) = (v31 << 31) & 0xFFFFFFFF00000000 | (v30 >> 1);
}

void sub_20B2961E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2961FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B296218(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_20AECFAB8();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20B2962A0(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24C41E150;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B2956A4(a1, (uint64_t)&v27);
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24C41E150;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2964C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_20B2964E4(int a1@<W0>, int a2@<W1>, unsigned int *a3@<X2>, uint64_t a4@<X8>)
{
  int v7;
  uint64_t *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  void *__p;
  __int128 v29;
  uint64_t (**v30)();
  uint64_t *v31;
  std::__shared_weak_count *v32;
  void (**v33)(_QWORD);
  uint64_t *v34;
  std::__shared_weak_count *v35;
  char v36;

  if ((a2 - 1) > 0x25)
    v7 = 0;
  else
    v7 = dword_20B5F3478[a2 - 1] | dword_20B5F33E0[a2 - 1];
  __p = operator new(0x78uLL);
  v29 = xmmword_20B5F1DA0;
  strcpy((char *)__p, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
  sub_20B4E7E40(a3, v7, (uint64_t *)&__p, (uint64_t)&v33);
  if (!v36)
  {
    v27 = sub_20B0B52D8((uint64_t)&v33);
    sub_20B0BFB50(v27);
  }
  v8 = v34;
  v30 = &off_24C41E150;
  v31 = v34;
  v9 = v35;
  v32 = v35;
  v34 = 0;
  v35 = 0;
  (*v33)(&v33);
  if (SHIBYTE(v29) < 0)
  {
    operator delete(__p);
    if (!a1)
      goto LABEL_25;
  }
  else if (!a1)
  {
LABEL_25:
    *(_QWORD *)a4 = &off_24C41E150;
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    v31 = 0;
    v32 = 0;
    *(_DWORD *)(a4 + 24) = 0;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
    goto LABEL_40;
  }
  if (a1 == 1)
  {
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v19 = __ldxr(p_shared_owners);
      while (__stxr(v19 + 1, p_shared_owners));
    }
    if (v8)
    {
      v21 = *v8;
      v20 = (std::__shared_weak_count *)v8[1];
      if (v20)
      {
        v22 = (unint64_t *)&v20->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      if (v21)
        sub_20B4ED800((uint64_t)v8);
    }
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    *(_QWORD *)a4 = &off_24C41DFE8;
    *(_DWORD *)(a4 + 24) = 1;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
LABEL_40:
    v25 = (unint64_t *)&v17->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    return;
  }
  if (a1 != 2)
    goto LABEL_25;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  if (v8)
  {
    v13 = *v8;
    v12 = (std::__shared_weak_count *)v8[1];
    if (v12)
    {
      v14 = (unint64_t *)&v12->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      do
        v16 = __ldaxr(v14);
      while (__stlxr(v16 - 1, v14));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    if (v13)
      sub_20B4ED8EC((uint64_t)v8);
  }
  *(_QWORD *)(a4 + 8) = v8;
  *(_QWORD *)(a4 + 16) = v9;
  *(_QWORD *)a4 = &off_24C41E008;
  *(_DWORD *)(a4 + 24) = 2;
  v30 = &off_24C41E150;
  v17 = v32;
  if (v32)
    goto LABEL_40;
}

void sub_20B2967C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v7;
  va_list va;

  va_start(va, a4);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B296828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  sub_20AEEF4E0((uint64_t)&a18);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_20B296854(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t *v16;
  _QWORD v18[3];
  _QWORD v19[3];
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  if (a1 == 2)
  {
    if (*(_DWORD *)(a2 + 24) != 2)
      goto LABEL_30;
    v9 = *(_QWORD *)(a2 + 8);
    v4 = *(std::__shared_weak_count **)(a2 + 16);
    v18[0] = &off_24C41E150;
    v18[1] = v9;
    v18[2] = v4;
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
    }
    sub_20B296A24(&v21, (uint64_t)v18);
    v2 = v22;
    v18[0] = &off_24C41E150;
    if (!v4)
      return v2;
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldaxr(v12);
    while (__stlxr(v8 - 1, v12));
    goto LABEL_27;
  }
  if (a1 == 1)
  {
    if (*(_DWORD *)(a2 + 24) != 1)
      goto LABEL_30;
    v13 = *(_QWORD *)(a2 + 8);
    v4 = *(std::__shared_weak_count **)(a2 + 16);
    v19[0] = &off_24C41E150;
    v19[1] = v13;
    v19[2] = v4;
    if (v4)
    {
      v14 = (unint64_t *)&v4->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
    }
    sub_20B296A24(&v21, (uint64_t)v19);
    v2 = v22;
    v19[0] = &off_24C41E150;
    if (!v4)
      return v2;
    v16 = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldaxr(v16);
    while (__stlxr(v8 - 1, v16));
LABEL_27:
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    return v2;
  }
  if (a1)
    return v2;
  if (*(_DWORD *)(a2 + 24))
LABEL_30:
    sub_20AECFAB8();
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(std::__shared_weak_count **)(a2 + 16);
  v20[0] = &off_24C41E150;
  v20[1] = v3;
  v20[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  sub_20B296A24(&v21, (uint64_t)v20);
  v2 = v22;
  v20[0] = &off_24C41E150;
  if (v4)
  {
    v7 = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    goto LABEL_27;
  }
  return v2;
}

void sub_20B2969E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2969FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B296A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B296A24(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  size_t v34;
  size_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t (**v45)();
  uint64_t v46;
  std::__shared_weak_count *v47;
  _QWORD v48[3];
  _QWORD v49[2];
  std::__shared_weak_count *v50;

  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_66;
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v48[0] = &off_24C41E150;
  v48[1] = v10;
  v48[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_20B4E94AC((uint64_t)v48);
  v15 = (char *)&v50 + 4;
  if (v14 <= 1380410944)
  {
    if (v14 == 843264102)
    {
      v16 = 1;
      goto LABEL_23;
    }
    if (v14 == 1278226534)
    {
      v16 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    switch(v14)
    {
      case 1380410945:
        v16 = 2;
        goto LABEL_23;
      case 1717855600:
        v16 = 4;
        goto LABEL_23;
      case 1717856627:
        v16 = 3;
LABEL_23:
        v15 = (char *)v49 + 4 * v16;
        break;
    }
  }
  if (v15 - (char *)v49 == 20
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 117, (uint64_t)"Contains(pf::formats::F32(), ref.Format())", 42, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v48[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_30;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_30:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (v19)
      goto LABEL_31;
LABEL_41:
    v27 = *(_QWORD *)(a2 + 8);
    v45 = &off_24C41E150;
    v46 = v27;
    v47 = 0;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_41;
LABEL_31:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a2 + 8);
  v23 = *(std::__shared_weak_count **)(a2 + 16);
  v45 = &off_24C41E150;
  v46 = v24;
  v47 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_42:
  v28 = sub_20B4E7694((uint64_t)&v45, 0);
  v29 = v47;
  v49[0] = &off_24C41E150;
  v49[1] = v46;
  v50 = v47;
  if (v47)
  {
    v30 = (unint64_t *)&v47->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  v32 = sub_20B4E8AAC((uint64_t)v49);
  v33 = sub_20B4E8D2C((uint64_t)v49);
  v34 = sub_20B4E8FAC((uint64_t)v49);
  v35 = sub_20B4E922C((uint64_t)v49) << 30;
  v49[0] = &off_24C41E150;
  if (v29)
  {
    v36 = (unint64_t *)&v29->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v38 = v32;
  v39 = v32 | ((unint64_t)v33 << 32);
  v45 = &off_24C41E150;
  v40 = v47;
  if (v47)
  {
    v41 = (unint64_t *)&v47->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  if (v33)
    v43 = v38 == 0;
  else
    v43 = 1;
  if (v43)
    v44 = 0;
  else
    v44 = v39;
  *a1 = v28;
  a1[1] = v44;
  a1[2] = v35 & 0xFFFFFFFF00000000 | (v34 >> 2);
  if (HIDWORD(v35) * HIDWORD(v44) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
LABEL_66:
    abort();
  }
}

void sub_20B296E14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B296E28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B296E3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va1);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B296E58(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C417198;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_20B296EBC(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  __n128 v38;
  std::__shared_weak_count *v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  uint64_t v47[3];
  uint64_t (**v48)();
  uint64_t *v49;
  std::__shared_weak_count *v50;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    goto LABEL_66;
  v3 = *(uint64_t **)(a1 + 24);
  if (!v3)
    return;
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!v6)
      return;
  }
  else
  {
LABEL_8:
    if (!v6)
      return;
  }
  v10 = *(_DWORD *)(a1 + 40);
  if (v10 == 2)
  {
    v20 = *(uint64_t **)(a1 + 24);
    v21 = *(std::__shared_weak_count **)(a1 + 32);
    v49 = v20;
    v50 = v21;
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
    }
    v48 = &off_24C41E008;
    if (v20)
    {
      v25 = *v20;
      v24 = (std::__shared_weak_count *)v20[1];
      if (v24)
      {
        v26 = (unint64_t *)&v24->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
        do
          v28 = __ldaxr(v26);
        while (__stlxr(v28 - 1, v26));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      if (v25)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10 == 1)
  {
    v29 = *(uint64_t **)(a1 + 24);
    v30 = *(std::__shared_weak_count **)(a1 + 32);
    v49 = v29;
    v50 = v30;
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    v48 = &off_24C41E008;
    if (v29)
    {
      v34 = *v29;
      v33 = (std::__shared_weak_count *)v29[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10)
LABEL_66:
    sub_20AECFAB8();
  v11 = *(uint64_t **)(a1 + 24);
  v12 = *(std::__shared_weak_count **)(a1 + 32);
  v49 = v11;
  v50 = v12;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v48 = &off_24C41E008;
  if (v11)
  {
    v16 = *v11;
    v15 = (std::__shared_weak_count *)v11[1];
    if (v15)
    {
      v17 = (unint64_t *)&v15->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    if (v16)
LABEL_49:
      sub_20B4ED8EC((uint64_t)v49);
  }
LABEL_50:
  sub_20B297920(v47, a1);
  v38.n128_f32[0] = sub_20AFC5D04(a2, (uint64_t)v47);
  if (!v49)
    goto LABEL_58;
  v40 = *v49;
  v39 = (std::__shared_weak_count *)v49[1];
  if (!v39)
    goto LABEL_56;
  v41 = (unint64_t *)&v39->__shared_owners_;
  do
    v42 = __ldxr(v41);
  while (__stxr(v42 + 1, v41));
  do
    v43 = __ldaxr(v41);
  while (__stlxr(v43 - 1, v41));
  if (v43)
  {
LABEL_56:
    if (!v40)
      goto LABEL_58;
    goto LABEL_57;
  }
  ((void (*)(std::__shared_weak_count *, __n128))v39->__on_zero_shared)(v39, v38);
  std::__shared_weak_count::__release_weak(v39);
  if (v40)
LABEL_57:
    sub_20B4EDAC0((uint64_t)v49);
LABEL_58:
  v48 = &off_24C41E150;
  v44 = v50;
  if (v50)
  {
    v45 = (unint64_t *)&v50->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v44->__on_zero_shared)(v44, v38);
      std::__shared_weak_count::__release_weak(v44);
    }
  }
}

void sub_20B29728C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E79B0((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2972A0(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD v34[2];
  std::__shared_weak_count *v35;

  *(_QWORD *)a1 = off_24C417198;
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
        goto LABEL_8;
    }
    else
    {
LABEL_7:
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
      {
LABEL_8:
        v10 = *((_DWORD *)v4 + 4);
        goto LABEL_11;
      }
    }
  }
  v10 = 0;
LABEL_11:
  *(_QWORD *)(a1 + 16) = &off_24C41E150;
  *(_DWORD *)(a1 + 8) = v10;
  v11 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v11;
  if (v11)
  {
    v12 = (unint64_t *)(v11 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  *(_DWORD *)(a1 + 40) = 0;
  v15 = *(_QWORD *)(a2 + 8);
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  v34[0] = &off_24C41E150;
  v34[1] = v15;
  v35 = v14;
  if (v14)
  {
    v16 = (unint64_t *)&v14->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  *(_QWORD *)(a1 + 48) = sub_20B297554((uint64_t)v34);
  *(_QWORD *)(a1 + 56) = v18;
  v34[0] = &off_24C41E150;
  v19 = v35;
  if (v35)
  {
    v20 = (unint64_t *)&v35->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      v22 = *(_QWORD *)(a2 + 8);
      if (v22)
        goto LABEL_22;
LABEL_36:
      v29 = 0;
      goto LABEL_37;
    }
  }
  v22 = *(_QWORD *)(a2 + 8);
  if (!v22)
    goto LABEL_36;
LABEL_22:
  v23 = *(std::__shared_weak_count **)(v22 + 8);
  if (v23)
  {
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
      v27 = *(uint64_t **)(a2 + 8);
      if (v27)
        goto LABEL_28;
LABEL_41:
      v29 = 0;
      if (!*(_DWORD *)(a1 + 48))
        goto LABEL_42;
      goto LABEL_38;
    }
  }
  v27 = *(uint64_t **)(a2 + 8);
  if (!v27)
    goto LABEL_41;
LABEL_28:
  v29 = *v27;
  v28 = (std::__shared_weak_count *)v27[1];
  if (!v28)
    goto LABEL_37;
  v30 = (unint64_t *)&v28->__shared_owners_;
  do
    v31 = __ldxr(v30);
  while (__stxr(v31 + 1, v30));
  do
    v32 = __ldaxr(v30);
  while (__stlxr(v32 - 1, v30));
  if (v32)
  {
LABEL_37:
    if (!*(_DWORD *)(a1 + 48))
      goto LABEL_42;
    goto LABEL_38;
  }
  ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
  std::__shared_weak_count::__release_weak(v28);
  if (!*(_DWORD *)(a1 + 48))
  {
LABEL_42:
    if (!v29)
      return a1;
    goto LABEL_43;
  }
LABEL_38:
  if ((v29 == 0) == (*(_DWORD *)(a1 + 52) == 0))
    return a1;
LABEL_43:
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 105, (uint64_t)"(buffer == nullptr) == extent.IsEmpty()", 39, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return a1;
}

void sub_20B297524(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v2);
  _Unwind_Resume(a1);
}

void sub_20B297540(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_20B297554(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  int v12;
  char *v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  uint64_t (**v32)();
  uint64_t v33;
  std::__shared_weak_count *v34;
  _QWORD v35[3];
  _DWORD v36[5];
  uint64_t v37;

  v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (!v3)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v4)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 156, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  v35[0] = &off_24C41E150;
  v35[1] = v8;
  v35[2] = v9;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  v12 = sub_20B4E94AC((uint64_t)v35);
  v13 = (char *)&v37;
  if (v12 <= 1380410944)
  {
    if (v12 == 843264102)
    {
      v14 = 1;
      goto LABEL_23;
    }
    if (v12 == 1278226534)
    {
      v14 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    switch(v12)
    {
      case 1380410945:
        v14 = 2;
        goto LABEL_23;
      case 1717855600:
        v14 = 4;
        goto LABEL_23;
      case 1717856627:
        v14 = 3;
LABEL_23:
        v13 = (char *)&v36[v14];
        break;
    }
  }
  if (v13 - (char *)v36 == 20
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 117, (uint64_t)"Contains(pf::formats::F32(), ref.Format())", 42, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v35[0] = &off_24C41E150;
  if (!v9)
    goto LABEL_30;
  v15 = (unint64_t *)&v9->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (v16)
  {
LABEL_30:
    v17 = *(std::__shared_weak_count **)(a1 + 16);
    if (v17)
      goto LABEL_31;
LABEL_41:
    v25 = *(_QWORD *)(a1 + 8);
    v32 = &off_24C41E150;
    v33 = v25;
    v34 = 0;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  v17 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v17)
    goto LABEL_41;
LABEL_31:
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldxr(v18);
  while (__stxr(v19 + 1, v18));
  do
    v20 = __ldaxr(v18);
  while (__stlxr(v20 - 1, v18));
  if (!v20)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
  v22 = *(_QWORD *)(a1 + 8);
  v21 = *(std::__shared_weak_count **)(a1 + 16);
  v32 = &off_24C41E150;
  v33 = v22;
  v34 = v21;
  if (v21)
  {
    v23 = (unint64_t *)&v21->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
LABEL_42:
  v26 = sub_20B4E8AAC((uint64_t)&v32);
  v27 = sub_20B4E8D2C((uint64_t)&v32);
  sub_20B4E8FAC((uint64_t)&v32);
  sub_20B4E922C((uint64_t)&v32);
  v32 = &off_24C41E150;
  v28 = v34;
  if (v34)
  {
    v29 = (unint64_t *)&v34->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  return v26 | ((unint64_t)v27 << 32);
}

void sub_20B297868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B29787C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B297898(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_20AECFAB8();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20B297920(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t (**v26)();
  uint64_t v27;
  std::__shared_weak_count *v28;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v26 = &off_24C41E150;
          v27 = v10;
          v28 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24C41E150;
          sub_20B296A24(a1, (uint64_t)&v23);
          v23 = &off_24C41E150;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v26 = &off_24C41E150;
          v20 = v28;
          if (v28)
          {
            v21 = (unint64_t *)&v28->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *a1 = 0;
  a1[1] = v16;
  a1[2] = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
}

void sub_20B297B20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_20B4E888C(&a9);
  sub_20B4E888C(&a12);
  _Unwind_Resume(a1);
}

void sub_20B297B3C(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int *v6;
  int v7;
  uint64_t *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  void *__p;
  __int128 v29;
  uint64_t (**v30)();
  uint64_t *v31;
  std::__shared_weak_count *v32;
  void (**v33)(_QWORD);
  uint64_t *v34;
  std::__shared_weak_count *v35;
  char v36;

  v6 = (unsigned int *)(a3 + 24);
  if ((a2 - 1) > 0x25)
    v7 = 0;
  else
    v7 = dword_20B5F3478[a2 - 1] | dword_20B5F33E0[a2 - 1];
  __p = operator new(0x78uLL);
  v29 = xmmword_20B5F1DA0;
  strcpy((char *)__p, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
  sub_20B4E7E40(v6, v7, (uint64_t *)&__p, (uint64_t)&v33);
  if (!v36)
  {
    v27 = sub_20B0B52D8((uint64_t)&v33);
    sub_20B0BFB50(v27);
  }
  v8 = v34;
  v30 = &off_24C41E150;
  v31 = v34;
  v9 = v35;
  v32 = v35;
  v34 = 0;
  v35 = 0;
  (*v33)(&v33);
  if (SHIBYTE(v29) < 0)
  {
    operator delete(__p);
    if (!a1)
      goto LABEL_25;
  }
  else if (!a1)
  {
LABEL_25:
    *(_QWORD *)a4 = &off_24C41E150;
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    v31 = 0;
    v32 = 0;
    *(_DWORD *)(a4 + 24) = 0;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
    goto LABEL_40;
  }
  if (a1 == 1)
  {
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v19 = __ldxr(p_shared_owners);
      while (__stxr(v19 + 1, p_shared_owners));
    }
    if (v8)
    {
      v21 = *v8;
      v20 = (std::__shared_weak_count *)v8[1];
      if (v20)
      {
        v22 = (unint64_t *)&v20->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      if (v21)
        sub_20B4ED800((uint64_t)v8);
    }
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    *(_QWORD *)a4 = &off_24C41DFE8;
    *(_DWORD *)(a4 + 24) = 1;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
LABEL_40:
    v25 = (unint64_t *)&v17->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    return;
  }
  if (a1 != 2)
    goto LABEL_25;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  if (v8)
  {
    v13 = *v8;
    v12 = (std::__shared_weak_count *)v8[1];
    if (v12)
    {
      v14 = (unint64_t *)&v12->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      do
        v16 = __ldaxr(v14);
      while (__stlxr(v16 - 1, v14));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    if (v13)
      sub_20B4ED8EC((uint64_t)v8);
  }
  *(_QWORD *)(a4 + 8) = v8;
  *(_QWORD *)(a4 + 16) = v9;
  *(_QWORD *)a4 = &off_24C41E008;
  *(_DWORD *)(a4 + 24) = 2;
  v30 = &off_24C41E150;
  v17 = v32;
  if (v32)
    goto LABEL_40;
}

void sub_20B297E18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v7;
  va_list va;

  va_start(va, a4);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B297E80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  sub_20AEEF4E0((uint64_t)&a18);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20B297EAC(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  size_t v34;
  size_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (**v47)();
  uint64_t v48;
  std::__shared_weak_count *v49;
  _QWORD v50[3];
  __int128 v51;
  _QWORD v52[2];

  v52[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v50[0] = &off_24C41E150;
  v50[1] = v10;
  v50[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_20B4E94AC((uint64_t)v50);
  v15 = (char *)v52 + 4;
  if (v14 <= 1380410944)
  {
    if (v14 == 843264102)
    {
      v16 = 1;
      goto LABEL_23;
    }
    if (v14 == 1278226534)
    {
      v16 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    switch(v14)
    {
      case 1380410945:
        v16 = 2;
        goto LABEL_23;
      case 1717855600:
        v16 = 4;
        goto LABEL_23;
      case 1717856627:
        v16 = 3;
LABEL_23:
        v15 = (char *)&v52[-2] + 4 * v16;
        break;
    }
  }
  if (v15 - (char *)&v51 == 20
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 117, (uint64_t)"Contains(pf::formats::F32(), ref.Format())", 42, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v50[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_30;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_30:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (v19)
      goto LABEL_31;
LABEL_41:
    v27 = *(_QWORD *)(a2 + 8);
    v47 = &off_24C41E150;
    v48 = v27;
    v49 = 0;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_41;
LABEL_31:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a2 + 8);
  v23 = *(std::__shared_weak_count **)(a2 + 16);
  v47 = &off_24C41E150;
  v48 = v24;
  v49 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_42:
  v28 = sub_20B4E7694((uint64_t)&v47, 0);
  v29 = v49;
  *(_QWORD *)&v51 = &off_24C41E150;
  *((_QWORD *)&v51 + 1) = v48;
  v52[0] = v49;
  if (v49)
  {
    v30 = (unint64_t *)&v49->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  v32 = sub_20B4E8AAC((uint64_t)&v51);
  v33 = sub_20B4E8D2C((uint64_t)&v51);
  v34 = sub_20B4E8FAC((uint64_t)&v51);
  v35 = sub_20B4E922C((uint64_t)&v51) << 30;
  *(_QWORD *)&v51 = &off_24C41E150;
  if (v29)
  {
    v36 = (unint64_t *)&v29->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v38 = v32;
  v39 = v32 | ((unint64_t)v33 << 32);
  v47 = &off_24C41E150;
  v40 = v49;
  if (v49)
  {
    v41 = (unint64_t *)&v49->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  if (v33)
    v43 = v38 == 0;
  else
    v43 = 1;
  if (v43)
    v44 = 0;
  else
    v44 = v39;
  *(_QWORD *)((char *)&v51 + 4) = v44;
  LODWORD(v51) = 2;
  v45 = v51;
  LODWORD(v51) = 1;
  *(_QWORD *)((char *)&v51 + 4) = v35 & 0xFFFFFFFF00000000 | (v34 >> 2);
  v46 = v51;
  *(_QWORD *)a1 = v28;
  *(_QWORD *)(a1 + 8) = v45;
  *(_DWORD *)(a1 + 16) = HIDWORD(v44);
  *(_QWORD *)(a1 + 20) = v46;
  *(_DWORD *)(a1 + 28) = HIDWORD(v35);
  *(_QWORD *)(a1 + 32) = v44;
  *(_QWORD *)(a1 + 40) = v35 & 0xFFFFFFFF00000000 | (v34 >> 2);
  if (HIDWORD(v44) * HIDWORD(v35) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
}

void sub_20B29831C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B298330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B298344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_20B4E888C(&a15);
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B298360(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C417228;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

uint64_t sub_20B2983C4(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v33[2];
  std::__shared_weak_count *v34;

  *(_QWORD *)a1 = off_24C417228;
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
        goto LABEL_8;
    }
    else
    {
LABEL_7:
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
      {
LABEL_8:
        v10 = *((_DWORD *)v4 + 4);
        goto LABEL_11;
      }
    }
  }
  v10 = 0;
LABEL_11:
  *(_QWORD *)(a1 + 16) = &off_24C41E150;
  *(_DWORD *)(a1 + 8) = v10;
  v11 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v11;
  if (v11)
  {
    v12 = (unint64_t *)(v11 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  *(_DWORD *)(a1 + 40) = 0;
  v15 = *(_QWORD *)(a2 + 8);
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  v33[0] = &off_24C41E150;
  v33[1] = v15;
  v34 = v14;
  if (v14)
  {
    v16 = (unint64_t *)&v14->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  sub_20B298678((uint64_t)v33, a1 + 48);
  v33[0] = &off_24C41E150;
  v18 = v34;
  if (v34)
  {
    v19 = (unint64_t *)&v34->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      v21 = *(_QWORD *)(a2 + 8);
      if (v21)
        goto LABEL_22;
LABEL_36:
      v28 = 0;
      goto LABEL_37;
    }
  }
  v21 = *(_QWORD *)(a2 + 8);
  if (!v21)
    goto LABEL_36;
LABEL_22:
  v22 = *(std::__shared_weak_count **)(v21 + 8);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
      v26 = *(uint64_t **)(a2 + 8);
      if (v26)
        goto LABEL_28;
LABEL_41:
      v28 = 0;
      if (!*(_DWORD *)(a1 + 72))
        goto LABEL_42;
      goto LABEL_38;
    }
  }
  v26 = *(uint64_t **)(a2 + 8);
  if (!v26)
    goto LABEL_41;
LABEL_28:
  v28 = *v26;
  v27 = (std::__shared_weak_count *)v26[1];
  if (!v27)
    goto LABEL_37;
  v29 = (unint64_t *)&v27->__shared_owners_;
  do
    v30 = __ldxr(v29);
  while (__stxr(v30 + 1, v29));
  do
    v31 = __ldaxr(v29);
  while (__stlxr(v31 - 1, v29));
  if (v31)
  {
LABEL_37:
    if (!*(_DWORD *)(a1 + 72))
      goto LABEL_42;
    goto LABEL_38;
  }
  ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
  std::__shared_weak_count::__release_weak(v27);
  if (!*(_DWORD *)(a1 + 72))
  {
LABEL_42:
    if (!v28)
      return a1;
    goto LABEL_43;
  }
LABEL_38:
  if ((v28 == 0) == (*(_DWORD *)(a1 + 76) == 0))
    return a1;
LABEL_43:
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 105, (uint64_t)"(buffer == nullptr) == extent.IsEmpty()", 39, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return a1;
}

void sub_20B298648(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v2);
  _Unwind_Resume(a1);
}

void sub_20B298664(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

void sub_20B298678(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  _BYTE *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  size_t v30;
  size_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t (**v36)();
  uint64_t v37;
  std::__shared_weak_count *v38;
  _QWORD v39[3];
  _BYTE v40[12];
  _BYTE v41[12];

  *(_QWORD *)&v41[4] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 156, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  v39[0] = &off_24C41E150;
  v39[1] = v10;
  v39[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_20B4E94AC((uint64_t)v39);
  v15 = v41;
  if (v14 <= 1380410944)
  {
    if (v14 == 843264102)
    {
      v16 = 1;
      goto LABEL_23;
    }
    if (v14 == 1278226534)
    {
      v16 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    switch(v14)
    {
      case 1380410945:
        v16 = 2;
        goto LABEL_23;
      case 1717855600:
        v16 = 4;
        goto LABEL_23;
      case 1717856627:
        v16 = 3;
LABEL_23:
        v15 = &v40[4 * v16];
        break;
    }
  }
  if (v15 - v40 == 20
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 117, (uint64_t)"Contains(pf::formats::F32(), ref.Format())", 42, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v39[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_30;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_30:
    v19 = *(std::__shared_weak_count **)(a1 + 16);
    if (v19)
      goto LABEL_31;
LABEL_41:
    v27 = *(_QWORD *)(a1 + 8);
    v36 = &off_24C41E150;
    v37 = v27;
    v38 = 0;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v19)
    goto LABEL_41;
LABEL_31:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a1 + 8);
  v23 = *(std::__shared_weak_count **)(a1 + 16);
  v36 = &off_24C41E150;
  v37 = v24;
  v38 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_42:
  v28 = sub_20B4E8AAC((uint64_t)&v36);
  v29 = sub_20B4E8D2C((uint64_t)&v36);
  v30 = sub_20B4E8FAC((uint64_t)&v36);
  v31 = sub_20B4E922C((uint64_t)&v36);
  v36 = &off_24C41E150;
  v32 = v38;
  if (v38)
  {
    v33 = (unint64_t *)&v38->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  v35 = v28 | ((unint64_t)v29 << 32);
  *(_DWORD *)v40 = 2;
  *(_DWORD *)&v40[4] = v35;
  *(_QWORD *)a2 = *(_QWORD *)v40;
  *(_DWORD *)(a2 + 8) = v29;
  *(_DWORD *)v40 = 1;
  *(_QWORD *)&v40[4] = (v31 << 30) & 0xFFFFFFFF00000000 | (v30 >> 2);
  *(_QWORD *)(a2 + 12) = *(_QWORD *)v40;
  *(_DWORD *)(a2 + 20) = v31 >> 2;
  *(_QWORD *)(a2 + 24) = v35;
  *(_QWORD *)(a2 + 32) = (v31 << 30) & 0xFFFFFFFF00000000 | (v30 >> 2);
}

void sub_20B2989F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B298A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B298A20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_20AECFAB8();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20B298AA8(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24C41E150;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B297EAC(a1, (uint64_t)&v27);
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24C41E150;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 2;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 2 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
  v20 = __PAIR64__(DWORD1(v30), 2);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B298CD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_20B298CEC(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int *v6;
  int v7;
  uint64_t *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  void *__p;
  __int128 v29;
  uint64_t (**v30)();
  uint64_t *v31;
  std::__shared_weak_count *v32;
  void (**v33)(_QWORD);
  uint64_t *v34;
  std::__shared_weak_count *v35;
  char v36;

  v6 = (unsigned int *)(a3 + 24);
  if ((a2 - 1) > 0x25)
    v7 = 0;
  else
    v7 = dword_20B5F3478[a2 - 1] | dword_20B5F33E0[a2 - 1];
  __p = operator new(0x78uLL);
  v29 = xmmword_20B5F1DA0;
  strcpy((char *)__p, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
  sub_20B4E7E40(v6, v7, (uint64_t *)&__p, (uint64_t)&v33);
  if (!v36)
  {
    v27 = sub_20B0B52D8((uint64_t)&v33);
    sub_20B0BFB50(v27);
  }
  v8 = v34;
  v30 = &off_24C41E150;
  v31 = v34;
  v9 = v35;
  v32 = v35;
  v34 = 0;
  v35 = 0;
  (*v33)(&v33);
  if (SHIBYTE(v29) < 0)
  {
    operator delete(__p);
    if (!a1)
      goto LABEL_25;
  }
  else if (!a1)
  {
LABEL_25:
    *(_QWORD *)a4 = &off_24C41E150;
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    v31 = 0;
    v32 = 0;
    *(_DWORD *)(a4 + 24) = 0;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
    goto LABEL_40;
  }
  if (a1 == 1)
  {
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v19 = __ldxr(p_shared_owners);
      while (__stxr(v19 + 1, p_shared_owners));
    }
    if (v8)
    {
      v21 = *v8;
      v20 = (std::__shared_weak_count *)v8[1];
      if (v20)
      {
        v22 = (unint64_t *)&v20->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      if (v21)
        sub_20B4ED800((uint64_t)v8);
    }
    *(_QWORD *)(a4 + 8) = v8;
    *(_QWORD *)(a4 + 16) = v9;
    *(_QWORD *)a4 = &off_24C41DFE8;
    *(_DWORD *)(a4 + 24) = 1;
    v30 = &off_24C41E150;
    v17 = v32;
    if (!v32)
      return;
LABEL_40:
    v25 = (unint64_t *)&v17->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    return;
  }
  if (a1 != 2)
    goto LABEL_25;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  if (v8)
  {
    v13 = *v8;
    v12 = (std::__shared_weak_count *)v8[1];
    if (v12)
    {
      v14 = (unint64_t *)&v12->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      do
        v16 = __ldaxr(v14);
      while (__stlxr(v16 - 1, v14));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    if (v13)
      sub_20B4ED8EC((uint64_t)v8);
  }
  *(_QWORD *)(a4 + 8) = v8;
  *(_QWORD *)(a4 + 16) = v9;
  *(_QWORD *)a4 = &off_24C41E008;
  *(_DWORD *)(a4 + 24) = 2;
  v30 = &off_24C41E150;
  v17 = v32;
  if (v32)
    goto LABEL_40;
}

void sub_20B298FC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v7;
  va_list va;

  va_start(va, a4);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B299030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  sub_20AEEF4E0((uint64_t)&a18);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20B29905C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  size_t v34;
  size_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (**v47)();
  uint64_t v48;
  std::__shared_weak_count *v49;
  _QWORD v50[3];
  __int128 v51;
  _QWORD v52[2];

  v52[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v50[0] = &off_24C41E150;
  v50[1] = v10;
  v50[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_20B4E94AC((uint64_t)v50);
  v15 = (char *)v52 + 4;
  if (v14 <= 1380410944)
  {
    if (v14 == 843264102)
    {
      v16 = 1;
      goto LABEL_23;
    }
    if (v14 == 1278226534)
    {
      v16 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    switch(v14)
    {
      case 1380410945:
        v16 = 2;
        goto LABEL_23;
      case 1717855600:
        v16 = 4;
        goto LABEL_23;
      case 1717856627:
        v16 = 3;
LABEL_23:
        v15 = (char *)&v52[-2] + 4 * v16;
        break;
    }
  }
  if (v15 - (char *)&v51 == 20
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 117, (uint64_t)"Contains(pf::formats::F32(), ref.Format())", 42, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v50[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_30;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_30:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (v19)
      goto LABEL_31;
LABEL_41:
    v27 = *(_QWORD *)(a2 + 8);
    v47 = &off_24C41E150;
    v48 = v27;
    v49 = 0;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_41;
LABEL_31:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a2 + 8);
  v23 = *(std::__shared_weak_count **)(a2 + 16);
  v47 = &off_24C41E150;
  v48 = v24;
  v49 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_42:
  v28 = sub_20B4E7694((uint64_t)&v47, 0);
  v29 = v49;
  *(_QWORD *)&v51 = &off_24C41E150;
  *((_QWORD *)&v51 + 1) = v48;
  v52[0] = v49;
  if (v49)
  {
    v30 = (unint64_t *)&v49->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  v32 = sub_20B4E8AAC((uint64_t)&v51);
  v33 = sub_20B4E8D2C((uint64_t)&v51);
  v34 = sub_20B4E8FAC((uint64_t)&v51);
  v35 = sub_20B4E922C((uint64_t)&v51) << 30;
  *(_QWORD *)&v51 = &off_24C41E150;
  if (v29)
  {
    v36 = (unint64_t *)&v29->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v38 = v32;
  v39 = v32 | ((unint64_t)v33 << 32);
  v47 = &off_24C41E150;
  v40 = v49;
  if (v49)
  {
    v41 = (unint64_t *)&v49->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  if (v33)
    v43 = v38 == 0;
  else
    v43 = 1;
  if (v43)
    v44 = 0;
  else
    v44 = v39;
  *(_QWORD *)((char *)&v51 + 4) = v44;
  LODWORD(v51) = 4;
  v45 = v51;
  LODWORD(v51) = 1;
  *(_QWORD *)((char *)&v51 + 4) = v35 & 0xFFFFFFFF00000000 | (v34 >> 2);
  v46 = v51;
  *(_QWORD *)a1 = v28;
  *(_QWORD *)(a1 + 8) = v45;
  *(_DWORD *)(a1 + 16) = HIDWORD(v44);
  *(_QWORD *)(a1 + 20) = v46;
  *(_DWORD *)(a1 + 28) = HIDWORD(v35);
  *(_QWORD *)(a1 + 32) = v44;
  *(_QWORD *)(a1 + 40) = v35 & 0xFFFFFFFF00000000 | (v34 >> 2);
  if (HIDWORD(v44) * HIDWORD(v35) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
}

void sub_20B2994CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2994E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2994F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_20B4E888C(&a15);
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B299510(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C4172B8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

uint64_t sub_20B299574(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v33[2];
  std::__shared_weak_count *v34;

  *(_QWORD *)a1 = off_24C4172B8;
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
        goto LABEL_8;
    }
    else
    {
LABEL_7:
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
      {
LABEL_8:
        v10 = *((_DWORD *)v4 + 4);
        goto LABEL_11;
      }
    }
  }
  v10 = 0;
LABEL_11:
  *(_QWORD *)(a1 + 16) = &off_24C41E150;
  *(_DWORD *)(a1 + 8) = v10;
  v11 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v11;
  if (v11)
  {
    v12 = (unint64_t *)(v11 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  *(_DWORD *)(a1 + 40) = 0;
  v15 = *(_QWORD *)(a2 + 8);
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  v33[0] = &off_24C41E150;
  v33[1] = v15;
  v34 = v14;
  if (v14)
  {
    v16 = (unint64_t *)&v14->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  sub_20B299828((uint64_t)v33, a1 + 48);
  v33[0] = &off_24C41E150;
  v18 = v34;
  if (v34)
  {
    v19 = (unint64_t *)&v34->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      v21 = *(_QWORD *)(a2 + 8);
      if (v21)
        goto LABEL_22;
LABEL_36:
      v28 = 0;
      goto LABEL_37;
    }
  }
  v21 = *(_QWORD *)(a2 + 8);
  if (!v21)
    goto LABEL_36;
LABEL_22:
  v22 = *(std::__shared_weak_count **)(v21 + 8);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
      v26 = *(uint64_t **)(a2 + 8);
      if (v26)
        goto LABEL_28;
LABEL_41:
      v28 = 0;
      if (!*(_DWORD *)(a1 + 72))
        goto LABEL_42;
      goto LABEL_38;
    }
  }
  v26 = *(uint64_t **)(a2 + 8);
  if (!v26)
    goto LABEL_41;
LABEL_28:
  v28 = *v26;
  v27 = (std::__shared_weak_count *)v26[1];
  if (!v27)
    goto LABEL_37;
  v29 = (unint64_t *)&v27->__shared_owners_;
  do
    v30 = __ldxr(v29);
  while (__stxr(v30 + 1, v29));
  do
    v31 = __ldaxr(v29);
  while (__stlxr(v31 - 1, v29));
  if (v31)
  {
LABEL_37:
    if (!*(_DWORD *)(a1 + 72))
      goto LABEL_42;
    goto LABEL_38;
  }
  ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
  std::__shared_weak_count::__release_weak(v27);
  if (!*(_DWORD *)(a1 + 72))
  {
LABEL_42:
    if (!v28)
      return a1;
    goto LABEL_43;
  }
LABEL_38:
  if ((v28 == 0) == (*(_DWORD *)(a1 + 76) == 0))
    return a1;
LABEL_43:
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 105, (uint64_t)"(buffer == nullptr) == extent.IsEmpty()", 39, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return a1;
}

void sub_20B2997F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v2);
  _Unwind_Resume(a1);
}

void sub_20B299814(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

void sub_20B299828(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  _BYTE *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  size_t v30;
  size_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t (**v36)();
  uint64_t v37;
  std::__shared_weak_count *v38;
  _QWORD v39[3];
  _BYTE v40[12];
  _BYTE v41[12];

  *(_QWORD *)&v41[4] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 156, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  v39[0] = &off_24C41E150;
  v39[1] = v10;
  v39[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_20B4E94AC((uint64_t)v39);
  v15 = v41;
  if (v14 <= 1380410944)
  {
    if (v14 == 843264102)
    {
      v16 = 1;
      goto LABEL_23;
    }
    if (v14 == 1278226534)
    {
      v16 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    switch(v14)
    {
      case 1380410945:
        v16 = 2;
        goto LABEL_23;
      case 1717855600:
        v16 = 4;
        goto LABEL_23;
      case 1717856627:
        v16 = 3;
LABEL_23:
        v15 = &v40[4 * v16];
        break;
    }
  }
  if (v15 - v40 == 20
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 117, (uint64_t)"Contains(pf::formats::F32(), ref.Format())", 42, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v39[0] = &off_24C41E150;
  if (!v11)
    goto LABEL_30;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_30:
    v19 = *(std::__shared_weak_count **)(a1 + 16);
    if (v19)
      goto LABEL_31;
LABEL_41:
    v27 = *(_QWORD *)(a1 + 8);
    v36 = &off_24C41E150;
    v37 = v27;
    v38 = 0;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v19)
    goto LABEL_41;
LABEL_31:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a1 + 8);
  v23 = *(std::__shared_weak_count **)(a1 + 16);
  v36 = &off_24C41E150;
  v37 = v24;
  v38 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_42:
  v28 = sub_20B4E8AAC((uint64_t)&v36);
  v29 = sub_20B4E8D2C((uint64_t)&v36);
  v30 = sub_20B4E8FAC((uint64_t)&v36);
  v31 = sub_20B4E922C((uint64_t)&v36);
  v36 = &off_24C41E150;
  v32 = v38;
  if (v38)
  {
    v33 = (unint64_t *)&v38->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  v35 = v28 | ((unint64_t)v29 << 32);
  *(_DWORD *)v40 = 4;
  *(_DWORD *)&v40[4] = v35;
  *(_QWORD *)a2 = *(_QWORD *)v40;
  *(_DWORD *)(a2 + 8) = v29;
  *(_DWORD *)v40 = 1;
  *(_QWORD *)&v40[4] = (v31 << 30) & 0xFFFFFFFF00000000 | (v30 >> 2);
  *(_QWORD *)(a2 + 12) = *(_QWORD *)v40;
  *(_DWORD *)(a2 + 20) = v31 >> 2;
  *(_QWORD *)(a2 + 24) = v35;
  *(_QWORD *)(a2 + 32) = (v31 << 30) & 0xFFFFFFFF00000000 | (v30 >> 2);
}

void sub_20B299BA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B299BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E888C(&a9);
  _Unwind_Resume(a1);
}

void sub_20B299BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_20AECFAB8();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20B299C58(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24C41E150;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B29905C(a1, (uint64_t)&v27);
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24C41E150;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B299E80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B299E9C(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416BF8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

_QWORD *sub_20B299F00(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];
  std::__shared_weak_count *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v3 = *(std::__shared_weak_count **)(a2 + 16);
  v11[0] = &off_24C41E150;
  v11[1] = v4;
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20B28AA08((uint64_t)a1, (uint64_t)v11);
  v11[0] = &off_24C41E150;
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *a1 = off_24C417348;
  return a1;
}

void sub_20B299FA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B299FBC(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t (**v26)();
  uint64_t v27;
  std::__shared_weak_count *v28;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v26 = &off_24C41E150;
          v27 = v10;
          v28 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24C41E150;
          sub_20B28A218(a1, (uint64_t)&v23);
          v23 = &off_24C41E150;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v26 = &off_24C41E150;
          v20 = v28;
          if (v28)
          {
            v21 = (unint64_t *)&v28->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *a1 = 0;
  a1[1] = v16;
  a1[2] = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
}

void sub_20B29A1BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_20B4E888C(&a9);
  sub_20B4E888C(&a12);
  _Unwind_Resume(a1);
}

void sub_20B29A1D8(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t (**v28)();
  uint64_t v29;
  std::__shared_weak_count *v30;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v28 = &off_24C41E150;
          v29 = v10;
          v30 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24C41E150;
          sub_20B28A218(&v26, (uint64_t)&v23);
          *(_QWORD *)a1 = v26;
          *(_OWORD *)(a1 + 8) = v27;
          v23 = &off_24C41E150;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v28 = &off_24C41E150;
          v20 = v30;
          if (v30)
          {
            v21 = (unint64_t *)&v30->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v16;
  *(_QWORD *)(a1 + 16) = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
}

void sub_20B29A3E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B29A404()
{
  return 1;
}

_UNKNOWN **sub_20B29A40C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE28))
    return &off_253EC31A8;
  __cxa_guard_release(&qword_25463BE28);
  return &off_253EC31A8;
}

void sub_20B29A460(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  __int128 v47;
  uint64_t v48;
  char v49[8];
  unint64_t v50;
  unsigned int v51;
  unsigned int v52;
  uint64_t (**v53)();
  uint64_t *v54;
  std::__shared_weak_count *v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v54 = v14;
    v55 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v53 = &off_24C41DFE8;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_20B4ED800((uint64_t)v54);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v54 = v23;
    v55 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v53 = &off_24C41DFE8;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_20AECFAB8();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v54 = v5;
  v55 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v53 = &off_24C41DFE8;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_20B29A1D8((uint64_t)v49, a1);
  sub_20B29A1D8((uint64_t)&v47, a1);
  v32 = operator new();
  v33 = (_QWORD *)v32;
  if (v52 <= 0x20)
    v34 = 32;
  else
    v34 = v52;
  v35 = v50;
  *(_QWORD *)&v56 = v50;
  *((_QWORD *)&v56 + 1) = v51 | (unint64_t)(v34 << 32);
  *(_QWORD *)v32 = off_24C416BF8;
  *(_DWORD *)(v32 + 8) = 0;
  v36 = v32 + 16;
  v37 = HIDWORD(v35);
  if ((_DWORD)v35 && HIDWORD(v35))
  {
    sub_20B289CD8(0, 1, (unsigned int *)&v56, v32 + 16);
    LODWORD(v37) = DWORD1(v56);
    if (!(_DWORD)v56)
      goto LABEL_47;
  }
  else
  {
    *(_QWORD *)(v32 + 24) = 0;
    *(_QWORD *)(v32 + 32) = 0;
    *(_QWORD *)(v32 + 16) = &off_24C41E150;
    *(_DWORD *)(v32 + 40) = 0;
    if (!(_DWORD)v35)
      goto LABEL_47;
  }
  if ((_DWORD)v37)
  {
    v33[6] = sub_20B28A048(0, v36);
    v33[7] = v38;
    goto LABEL_48;
  }
LABEL_47:
  *((_OWORD *)v33 + 3) = v56;
LABEL_48:
  v57 = v47;
  v58 = v48;
  sub_20B28A620((uint64_t)v33, (size_t)&v57);
  *v33 = off_24C417348;
  *a2 = v33;
  if (!v54)
    goto LABEL_56;
  v40 = *v54;
  v39 = (std::__shared_weak_count *)v54[1];
  if (!v39)
    goto LABEL_54;
  v41 = (unint64_t *)&v39->__shared_owners_;
  do
    v42 = __ldxr(v41);
  while (__stxr(v42 + 1, v41));
  do
    v43 = __ldaxr(v41);
  while (__stlxr(v43 - 1, v41));
  if (v43)
  {
LABEL_54:
    if (!v40)
      goto LABEL_56;
    goto LABEL_55;
  }
  ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
  std::__shared_weak_count::__release_weak(v39);
  if (v40)
LABEL_55:
    sub_20B4ED9D4((uint64_t)v54);
LABEL_56:
  v53 = &off_24C41E150;
  v44 = v55;
  if (v55)
  {
    v45 = (unint64_t *)&v55->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
      std::__shared_weak_count::__release_weak(v44);
    }
  }
}

void sub_20B29A8C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  uint64_t v9;
  va_list va;

  va_start(va, a8);
  sub_20B28A5C8(v9);
  MEMORY[0x20BD3583C](v8, 0x10A3C40EE3858B8);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B29A938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B29A94C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B29A960@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E736C(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_20AECFAB8();
    return sub_20B4E736C(a2, v2);
  }
  return sub_20B4E7478(a2, v2);
}

double sub_20B29A9A0(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t (**v16)();
  double result;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  __int128 v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  uint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t (**v52)();
  _BYTE *v53;
  std::__shared_weak_count *v54;
  unsigned int v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  uint64_t (**v60)();
  _BYTE *v61;
  std::__shared_weak_count *v62;
  _BYTE v63[24];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C41DF08, (const struct __class_type_info *)&unk_24C417E88, 0);
  if (!v4)
  {
    (*(void (**)(_BYTE *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v63, lpsrc, 1);
    v16 = *(uint64_t (***)())(*(_QWORD *)v63 + 16);
    v51 = **(_OWORD **)v63;
    v52 = v16;
    *(_QWORD *)v63 = 0;
    MEMORY[0x20BD3583C]();
    sub_20B299FBC((uint64_t *)v63, a1);
    v60 = (uint64_t (**)())&v51;
    v61 = v63;
    sub_20AFC3DF8((size_t *)&v60);
    return result;
  }
  v5 = (uint64_t)v4;
  v6 = *((_DWORD *)v4 + 10);
  if (v6 == 2)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v26 = __ldxr(p_shared_owners);
      while (__stxr(v26 + 1, p_shared_owners));
    }
    if (v8)
    {
      v28 = *v8;
      v27 = (std::__shared_weak_count *)v8[1];
      if (v27)
      {
        v29 = (unint64_t *)&v27->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
      if (v28)
        goto LABEL_41;
    }
  }
  else if (v6 == 1)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v18 = (unint64_t *)&v7->__shared_owners_;
      do
        v19 = __ldxr(v18);
      while (__stxr(v19 + 1, v18));
    }
    if (v8)
    {
      v21 = *v8;
      v20 = (std::__shared_weak_count *)v8[1];
      if (v20)
      {
        v22 = (unint64_t *)&v20->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      if (v21)
        goto LABEL_41;
    }
  }
  else
  {
    if (v6)
      sub_20AECFAB8();
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v9 = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    if (v8)
    {
      v12 = *v8;
      v11 = (std::__shared_weak_count *)v8[1];
      if (v11)
      {
        v13 = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
        do
          v15 = __ldaxr(v13);
        while (__stlxr(v15 - 1, v13));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      if (v12)
LABEL_41:
        sub_20B4ED800((uint64_t)v8);
    }
  }
  sub_20B29A1D8((uint64_t)&v57, v5);
  if (HIDWORD(v58) <= 0x20)
    v32 = 32;
  else
    v32 = HIDWORD(v58);
  *(_QWORD *)&v59 = *((_QWORD *)&v57 + 1);
  *((_QWORD *)&v59 + 1) = v58 | (unint64_t)(v32 << 32);
  *(_QWORD *)&v51 = off_24C416BF8;
  DWORD2(v51) = 0;
  v33 = HIDWORD(*((_QWORD *)&v57 + 1));
  if (DWORD2(v57) && HIDWORD(v57))
  {
    sub_20B289CD8(0, 1, (unsigned int *)&v59, (uint64_t)&v52);
    LODWORD(v33) = DWORD1(v59);
    if (!(_DWORD)v59)
      goto LABEL_61;
  }
  else
  {
    v53 = 0;
    v54 = 0;
    v52 = &off_24C41E150;
    v55 = 0;
    if (!DWORD2(v57))
    {
LABEL_61:
      v56 = v59;
      goto LABEL_62;
    }
  }
  if (!(_DWORD)v33)
    goto LABEL_61;
  if (v55)
    sub_20AECFAB8();
  v34 = v54;
  v60 = &off_24C41E150;
  v61 = v53;
  v62 = v54;
  if (v54)
  {
    v35 = (unint64_t *)&v54->__shared_owners_;
    do
      v36 = __ldxr(v35);
    while (__stxr(v36 + 1, v35));
  }
  sub_20B28A218((uint64_t *)v63, (uint64_t)&v60);
  v37 = *(_OWORD *)&v63[8];
  v60 = &off_24C41E150;
  if (v34)
  {
    v38 = (unint64_t *)&v34->__shared_owners_;
    do
      v39 = __ldaxr(v38);
    while (__stlxr(v39 - 1, v38));
    if (!v39)
    {
      v50 = v37;
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
      v37 = v50;
    }
  }
  v56 = v37;
LABEL_62:
  *(_OWORD *)v63 = v57;
  *(_QWORD *)&v63[16] = v58;
  sub_20B28A620((uint64_t)&v51, (size_t)v63);
  *(_QWORD *)&v51 = off_24C417348;
  if (v8)
  {
    v41 = *v8;
    v40 = (std::__shared_weak_count *)v8[1];
    if (v40)
    {
      v42 = (unint64_t *)&v40->__shared_owners_;
      do
        v43 = __ldxr(v42);
      while (__stxr(v43 + 1, v42));
      do
        v44 = __ldaxr(v42);
      while (__stlxr(v44 - 1, v42));
      if (!v44)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
        if (!v41)
          goto LABEL_70;
        goto LABEL_69;
      }
    }
    if (v41)
LABEL_69:
      sub_20B4ED9D4((uint64_t)v8);
  }
LABEL_70:
  if (v7)
  {
    v45 = (unint64_t *)&v7->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v47 = v55;
  *(_DWORD *)(a1 + 8) = DWORD2(v51);
  v48 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v48 == -1)
  {
    if ((_DWORD)v47 == -1)
    {
      result = *(double *)&v56;
      *(_OWORD *)(a1 + 48) = v56;
      return result;
    }
  }
  else if ((_DWORD)v47 == -1)
  {
    ((void (*)(_BYTE *, uint64_t))off_24C418120[v48])(v63, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_80;
  }
  *(_QWORD *)v63 = a1 + 16;
  ((void (*)(_BYTE *))off_24C418150[v47])(v63);
LABEL_80:
  v49 = v55;
  result = *(double *)&v56;
  *(_OWORD *)(a1 + 48) = v56;
  *(_QWORD *)&v51 = off_24C416BF8;
  if ((_DWORD)v49 != -1)
    ((void (*)(_BYTE *, uint64_t (***)()))off_24C418120[v49])(v63, &v52);
  return result;
}

uint64_t sub_20B29B06C(uint64_t a1)
{
  uint64_t v2[3];

  sub_20B299FBC(v2, a1);
  return v2[0];
}

double sub_20B29B094@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  double result;
  __int128 v7;
  uint64_t v8;

  if (a2 != 1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B299FBC((uint64_t *)&v7, a1);
  v5 = operator new();
  result = *(double *)&v7;
  *(_OWORD *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v8;
  *a3 = v5;
  return result;
}

double sub_20B29B134@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  double result;
  __int128 v7;
  uint64_t v8;

  if (a2 != 1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B29A1D8((uint64_t)&v7, a1);
  v5 = operator new();
  result = *(double *)&v7;
  *(_OWORD *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v8;
  *a3 = v5;
  return result;
}

__int128 *sub_20B29B1D4()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE30);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE30))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_25463BE38);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463BE38))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25463BE40);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE40))
    {
LABEL_13:
      if (byte_25463C1A7 < 0)
      {
        sub_20AEC60F4(&xmmword_25463C178, (void *)qword_25463C190, unk_25463C198);
      }
      else
      {
        xmmword_25463C178 = *(_OWORD *)&qword_25463C190;
        unk_25463C188 = unk_25463C1A0;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C178, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BE38);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_25463BE48);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463BE48))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Gray8u>]", &qword_25463C1A8);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C1A8, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BE48);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_25463BE50);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE50))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_25463BE58);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25463BE58))
      {
        if (byte_25463C1C0[23] < 0)
          sub_20AEC60F4(&__p, *(void **)byte_25463C1C0, *(unint64_t *)&byte_25463C1C0[8]);
        else
          __p = *(std::string *)byte_25463C1C0;
        sub_20B52B814(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_25463C1D8);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C1D8, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463BE58);
      }
      if (byte_25463C1EF < 0)
      {
        sub_20AEC60F4(v17, (void *)xmmword_25463C1D8, *((unint64_t *)&xmmword_25463C1D8 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_25463C1D8;
        v18 = unk_25463C1E8;
      }
      sub_20AFC38F0((char *)v17, (std::string *)&qword_25463C190);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C190, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BE40);
      goto LABEL_13;
    }
    if (byte_25463C1BF >= 0)
      v6 = byte_25463C1BF;
    else
      v6 = unk_25463C1B0;
    if (byte_25463C1BF >= 0)
      v7 = &qword_25463C1A8;
    else
      v7 = (uint64_t *)qword_25463C1A8;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_25463C1C0[8] = v6;
      *(_QWORD *)&byte_25463C1C0[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_25463C1C0 = v13;
    }
    else
    {
      v13 = byte_25463C1C0;
      byte_25463C1C0[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_25463C1C0, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463BE50);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_25463C18F < 0)
  {
    sub_20AEC60F4(&xmmword_25463C160, (void *)xmmword_25463C178, *((unint64_t *)&xmmword_25463C178 + 1));
  }
  else
  {
    xmmword_25463C160 = xmmword_25463C178;
    unk_25463C170 = unk_25463C188;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C160, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463BE30);
LABEL_2:
  if (byte_25463C177 >= 0)
    return &xmmword_25463C160;
  else
    return (__int128 *)xmmword_25463C160;
}

void sub_20B29B628(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25463BE40);
  __cxa_guard_abort(&qword_25463BE38);
  __cxa_guard_abort(&qword_25463BE30);
  _Unwind_Resume(a1);
}

void sub_20B29B6C4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463BE30);
  _Unwind_Resume(a1);
}

void sub_20B29B6DC()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_20B5AACCD, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B29B718(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_20B4ED8EC(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24C41E008;
        *v42 = &off_24C417CF8;
        sub_20B4E78A4(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_20B4EDAC0(v79);
        }
LABEL_64:
        v78 = &off_24C41E150;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_20AECFAB8();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_20B4ED800(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24C41DFE8;
  *v42 = &off_24C417CD8;
  sub_20B4E7478(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_20B4ED9D4(v79);
  }
LABEL_102:
  v78 = &off_24C41E150;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_20B29BF0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E7584(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B29BF40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B29BF54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E79B0(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B29BF88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B29BF9C()
{
  return 65792;
}

_QWORD *sub_20B29BFA8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E78A4(a2, v2);
  if (v3 > 1)
    sub_20AECFAB8();
  return sub_20B4E7798(a2, v2);
}

uint64_t sub_20B29BFE8(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416E38;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

_QWORD *sub_20B29C04C(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];
  std::__shared_weak_count *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v3 = *(std::__shared_weak_count **)(a2 + 16);
  v11[0] = &off_24C41E150;
  v11[1] = v4;
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20B29001C((uint64_t)a1, (uint64_t)v11);
  v11[0] = &off_24C41E150;
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *a1 = off_24C4173D8;
  return a1;
}

void sub_20B29C0F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B29C108(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t (**v26)();
  uint64_t v27;
  std::__shared_weak_count *v28;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v26 = &off_24C41E150;
          v27 = v10;
          v28 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24C41E150;
          sub_20B28F7B8(a1, (uint64_t)&v23);
          v23 = &off_24C41E150;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v26 = &off_24C41E150;
          v20 = v28;
          if (v28)
          {
            v21 = (unint64_t *)&v28->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *a1 = 0;
  a1[1] = v16;
  a1[2] = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
}

void sub_20B29C308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_20B4E888C(&a9);
  sub_20B4E888C(&a12);
  _Unwind_Resume(a1);
}

void sub_20B29C324(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t (**v28)();
  uint64_t v29;
  std::__shared_weak_count *v30;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v28 = &off_24C41E150;
          v29 = v10;
          v30 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24C41E150;
          sub_20B28F7B8(&v26, (uint64_t)&v23);
          *(_QWORD *)a1 = v26;
          *(_OWORD *)(a1 + 8) = v27;
          v23 = &off_24C41E150;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v28 = &off_24C41E150;
          v20 = v30;
          if (v30)
          {
            v21 = (unint64_t *)&v30->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v16;
  *(_QWORD *)(a1 + 16) = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
}

void sub_20B29C534(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B29C550()
{
  return 2;
}

_UNKNOWN **sub_20B29C558()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE28))
    return &off_253EC31A8;
  __cxa_guard_release(&qword_25463BE28);
  return &off_253EC31A8;
}

void sub_20B29C5AC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  __int128 v47;
  uint64_t v48;
  char v49[8];
  unint64_t v50;
  unsigned int v51;
  unsigned int v52;
  uint64_t (**v53)();
  uint64_t *v54;
  std::__shared_weak_count *v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v54 = v14;
    v55 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v53 = &off_24C41DFE8;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_20B4ED800((uint64_t)v54);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v54 = v23;
    v55 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v53 = &off_24C41DFE8;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_20AECFAB8();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v54 = v5;
  v55 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v53 = &off_24C41DFE8;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_20B29C324((uint64_t)v49, a1);
  sub_20B29C324((uint64_t)&v47, a1);
  v32 = operator new();
  v33 = (_QWORD *)v32;
  if (v52 <= 0x10)
    v34 = 16;
  else
    v34 = v52;
  v35 = v50;
  *(_QWORD *)&v56 = v50;
  *((_QWORD *)&v56 + 1) = v51 | (unint64_t)(v34 << 32);
  *(_QWORD *)v32 = off_24C416E38;
  *(_DWORD *)(v32 + 8) = 0;
  v36 = v32 + 16;
  v37 = HIDWORD(v35);
  if ((_DWORD)v35 && HIDWORD(v35))
  {
    sub_20B28F278(0, 2, (unsigned int *)&v56, v32 + 16);
    LODWORD(v37) = DWORD1(v56);
    if (!(_DWORD)v56)
      goto LABEL_47;
  }
  else
  {
    *(_QWORD *)(v32 + 24) = 0;
    *(_QWORD *)(v32 + 32) = 0;
    *(_QWORD *)(v32 + 16) = &off_24C41E150;
    *(_DWORD *)(v32 + 40) = 0;
    if (!(_DWORD)v35)
      goto LABEL_47;
  }
  if ((_DWORD)v37)
  {
    v33[6] = sub_20B28F5E8(0, v36);
    v33[7] = v38;
    goto LABEL_48;
  }
LABEL_47:
  *((_OWORD *)v33 + 3) = v56;
LABEL_48:
  v57 = v47;
  v58 = v48;
  sub_20B28FC38((uint64_t)v33, (uint64_t *)&v57);
  *v33 = off_24C4173D8;
  *a2 = v33;
  if (!v54)
    goto LABEL_56;
  v40 = *v54;
  v39 = (std::__shared_weak_count *)v54[1];
  if (!v39)
    goto LABEL_54;
  v41 = (unint64_t *)&v39->__shared_owners_;
  do
    v42 = __ldxr(v41);
  while (__stxr(v42 + 1, v41));
  do
    v43 = __ldaxr(v41);
  while (__stlxr(v43 - 1, v41));
  if (v43)
  {
LABEL_54:
    if (!v40)
      goto LABEL_56;
    goto LABEL_55;
  }
  ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
  std::__shared_weak_count::__release_weak(v39);
  if (v40)
LABEL_55:
    sub_20B4ED9D4((uint64_t)v54);
LABEL_56:
  v53 = &off_24C41E150;
  v44 = v55;
  if (v55)
  {
    v45 = (unint64_t *)&v55->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
      std::__shared_weak_count::__release_weak(v44);
    }
  }
}

void sub_20B29CA0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  uint64_t v9;
  va_list va;

  va_start(va, a8);
  sub_20B28A5C8(v9);
  MEMORY[0x20BD3583C](v8, 0x10A3C40EE3858B8);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B29CA84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B29CA98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B29CAAC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E736C(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_20AECFAB8();
    return sub_20B4E736C(a2, v2);
  }
  return sub_20B4E7478(a2, v2);
}

double sub_20B29CAEC(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t (**v16)();
  double result;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  __int128 v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  uint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t (**v52)();
  uint64_t v53;
  std::__shared_weak_count *v54;
  unsigned int v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  _QWORD v60[3];
  _BYTE v61[24];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C41DF08, (const struct __class_type_info *)&unk_24C417EA0, 0);
  if (!v4)
  {
    (*(void (**)(_BYTE *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v61, lpsrc, 2);
    v16 = *(uint64_t (***)())(*(_QWORD *)v61 + 16);
    v51 = **(_OWORD **)v61;
    v52 = v16;
    *(_QWORD *)v61 = 0;
    MEMORY[0x20BD3583C]();
    sub_20B29C108((uint64_t *)v61, a1);
    sub_20AFC48E4((uint64_t *)&v51, (uint64_t)v61);
    return result;
  }
  v5 = (uint64_t)v4;
  v6 = *((_DWORD *)v4 + 10);
  if (v6 == 2)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v26 = __ldxr(p_shared_owners);
      while (__stxr(v26 + 1, p_shared_owners));
    }
    if (v8)
    {
      v28 = *v8;
      v27 = (std::__shared_weak_count *)v8[1];
      if (v27)
      {
        v29 = (unint64_t *)&v27->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
      if (v28)
        goto LABEL_41;
    }
  }
  else if (v6 == 1)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v18 = (unint64_t *)&v7->__shared_owners_;
      do
        v19 = __ldxr(v18);
      while (__stxr(v19 + 1, v18));
    }
    if (v8)
    {
      v21 = *v8;
      v20 = (std::__shared_weak_count *)v8[1];
      if (v20)
      {
        v22 = (unint64_t *)&v20->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      if (v21)
        goto LABEL_41;
    }
  }
  else
  {
    if (v6)
      sub_20AECFAB8();
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v9 = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    if (v8)
    {
      v12 = *v8;
      v11 = (std::__shared_weak_count *)v8[1];
      if (v11)
      {
        v13 = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
        do
          v15 = __ldaxr(v13);
        while (__stlxr(v15 - 1, v13));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      if (v12)
LABEL_41:
        sub_20B4ED800((uint64_t)v8);
    }
  }
  sub_20B29C324((uint64_t)&v57, v5);
  if (HIDWORD(v58) <= 0x10)
    v32 = 16;
  else
    v32 = HIDWORD(v58);
  *(_QWORD *)&v59 = *((_QWORD *)&v57 + 1);
  *((_QWORD *)&v59 + 1) = v58 | (unint64_t)(v32 << 32);
  *(_QWORD *)&v51 = off_24C416E38;
  DWORD2(v51) = 0;
  v33 = HIDWORD(*((_QWORD *)&v57 + 1));
  if (DWORD2(v57) && HIDWORD(v57))
  {
    sub_20B28F278(0, 2, (unsigned int *)&v59, (uint64_t)&v52);
    LODWORD(v33) = DWORD1(v59);
    if (!(_DWORD)v59)
      goto LABEL_61;
  }
  else
  {
    v53 = 0;
    v54 = 0;
    v52 = &off_24C41E150;
    v55 = 0;
    if (!DWORD2(v57))
    {
LABEL_61:
      v56 = v59;
      goto LABEL_62;
    }
  }
  if (!(_DWORD)v33)
    goto LABEL_61;
  if (v55)
    sub_20AECFAB8();
  v34 = v54;
  v60[0] = &off_24C41E150;
  v60[1] = v53;
  v60[2] = v54;
  if (v54)
  {
    v35 = (unint64_t *)&v54->__shared_owners_;
    do
      v36 = __ldxr(v35);
    while (__stxr(v36 + 1, v35));
  }
  sub_20B28F7B8((uint64_t *)v61, (uint64_t)v60);
  v37 = *(_OWORD *)&v61[8];
  v60[0] = &off_24C41E150;
  if (v34)
  {
    v38 = (unint64_t *)&v34->__shared_owners_;
    do
      v39 = __ldaxr(v38);
    while (__stlxr(v39 - 1, v38));
    if (!v39)
    {
      v50 = v37;
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
      v37 = v50;
    }
  }
  v56 = v37;
LABEL_62:
  *(_OWORD *)v61 = v57;
  *(_QWORD *)&v61[16] = v58;
  sub_20B28FC38((uint64_t)&v51, (uint64_t *)v61);
  *(_QWORD *)&v51 = off_24C4173D8;
  if (v8)
  {
    v41 = *v8;
    v40 = (std::__shared_weak_count *)v8[1];
    if (v40)
    {
      v42 = (unint64_t *)&v40->__shared_owners_;
      do
        v43 = __ldxr(v42);
      while (__stxr(v43 + 1, v42));
      do
        v44 = __ldaxr(v42);
      while (__stlxr(v44 - 1, v42));
      if (!v44)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
        if (!v41)
          goto LABEL_70;
        goto LABEL_69;
      }
    }
    if (v41)
LABEL_69:
      sub_20B4ED9D4((uint64_t)v8);
  }
LABEL_70:
  if (v7)
  {
    v45 = (unint64_t *)&v7->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v47 = v55;
  *(_DWORD *)(a1 + 8) = DWORD2(v51);
  v48 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v48 == -1)
  {
    if ((_DWORD)v47 == -1)
    {
      result = *(double *)&v56;
      *(_OWORD *)(a1 + 48) = v56;
      return result;
    }
  }
  else if ((_DWORD)v47 == -1)
  {
    ((void (*)(_BYTE *, uint64_t))off_24C418120[v48])(v61, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_80;
  }
  *(_QWORD *)v61 = a1 + 16;
  ((void (*)(_BYTE *))off_24C418150[v47])(v61);
LABEL_80:
  v49 = v55;
  result = *(double *)&v56;
  *(_OWORD *)(a1 + 48) = v56;
  *(_QWORD *)&v51 = off_24C416E38;
  if ((_DWORD)v49 != -1)
    ((void (*)(_BYTE *, uint64_t (***)()))off_24C418120[v49])(v61, &v52);
  return result;
}

uint64_t sub_20B29D1B0(uint64_t a1)
{
  uint64_t v2[3];

  sub_20B29C108(v2, a1);
  return v2[0];
}

double sub_20B29D1D8@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  double result;
  __int128 v7;
  uint64_t v8;

  if (a2 != 2
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B29C108((uint64_t *)&v7, a1);
  v5 = operator new();
  result = *(double *)&v7;
  *(_OWORD *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v8;
  *a3 = v5;
  return result;
}

double sub_20B29D278@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  double result;
  __int128 v7;
  uint64_t v8;

  if (a2 != 2
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B29C324((uint64_t)&v7, a1);
  v5 = operator new();
  result = *(double *)&v7;
  *(_OWORD *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v8;
  *a3 = v5;
  return result;
}

__int128 *sub_20B29D318()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE60);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE60))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_25463BE68);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463BE68))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25463BE70);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE70))
    {
LABEL_13:
      if (byte_25463C237 < 0)
      {
        sub_20AEC60F4(&xmmword_25463C208, (void *)qword_25463C220, unk_25463C228);
      }
      else
      {
        xmmword_25463C208 = *(_OWORD *)&qword_25463C220;
        unk_25463C218 = unk_25463C230;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C208, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BE68);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_25463BE78);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463BE78))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Gray16u>]", &qword_25463C238);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C238, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BE78);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_25463BE80);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE80))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_25463BE88);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25463BE88))
      {
        if (byte_25463C250[23] < 0)
          sub_20AEC60F4(&__p, *(void **)byte_25463C250, *(unint64_t *)&byte_25463C250[8]);
        else
          __p = *(std::string *)byte_25463C250;
        sub_20B52B814(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_25463C268);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C268, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463BE88);
      }
      if (byte_25463C27F < 0)
      {
        sub_20AEC60F4(v17, (void *)xmmword_25463C268, *((unint64_t *)&xmmword_25463C268 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_25463C268;
        v18 = unk_25463C278;
      }
      sub_20AFC43B8((char *)v17, (std::string *)&qword_25463C220);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C220, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BE70);
      goto LABEL_13;
    }
    if (byte_25463C24F >= 0)
      v6 = byte_25463C24F;
    else
      v6 = unk_25463C240;
    if (byte_25463C24F >= 0)
      v7 = &qword_25463C238;
    else
      v7 = (uint64_t *)qword_25463C238;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_25463C250[8] = v6;
      *(_QWORD *)&byte_25463C250[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_25463C250 = v13;
    }
    else
    {
      v13 = byte_25463C250;
      byte_25463C250[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_25463C250, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463BE80);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_25463C21F < 0)
  {
    sub_20AEC60F4(&xmmword_25463C1F0, (void *)xmmword_25463C208, *((unint64_t *)&xmmword_25463C208 + 1));
  }
  else
  {
    xmmword_25463C1F0 = xmmword_25463C208;
    unk_25463C200 = unk_25463C218;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C1F0, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463BE60);
LABEL_2:
  if (byte_25463C207 >= 0)
    return &xmmword_25463C1F0;
  else
    return (__int128 *)xmmword_25463C1F0;
}

void sub_20B29D76C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25463BE70);
  __cxa_guard_abort(&qword_25463BE68);
  __cxa_guard_abort(&qword_25463BE60);
  _Unwind_Resume(a1);
}

void sub_20B29D808(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463BE60);
  _Unwind_Resume(a1);
}

void sub_20B29D820()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_20B5AACCD, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B29D85C(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_20B4ED8EC(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24C41E008;
        *v42 = &off_24C417CF8;
        sub_20B4E78A4(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_20B4EDAC0(v79);
        }
LABEL_64:
        v78 = &off_24C41E150;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_20AECFAB8();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_20B4ED800(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24C41DFE8;
  *v42 = &off_24C417CD8;
  sub_20B4E7478(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_20B4ED9D4(v79);
  }
LABEL_102:
  v78 = &off_24C41E150;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_20B29E050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E7584(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B29E084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B29E098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E79B0(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B29E0CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B29E0E0()
{
  return 65792;
}

_QWORD *sub_20B29E0EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E78A4(a2, v2);
  if (v3 > 1)
    sub_20AECFAB8();
  return sub_20B4E7798(a2, v2);
}

uint64_t sub_20B29E12C(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416FE8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

_QWORD *sub_20B29E190(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];
  std::__shared_weak_count *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v3 = *(std::__shared_weak_count **)(a2 + 16);
  v11[0] = &off_24C41E150;
  v11[1] = v4;
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20B2938E8((uint64_t)a1, (uint64_t)v11);
  v11[0] = &off_24C41E150;
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *a1 = off_24C417468;
  return a1;
}

void sub_20B29E238(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B29E24C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t (**v26)();
  uint64_t v27;
  std::__shared_weak_count *v28;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v26 = &off_24C41E150;
          v27 = v10;
          v28 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24C41E150;
          sub_20B293068(a1, (uint64_t)&v23);
          v23 = &off_24C41E150;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v26 = &off_24C41E150;
          v20 = v28;
          if (v28)
          {
            v21 = (unint64_t *)&v28->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *a1 = 0;
  a1[1] = v16;
  a1[2] = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
}

void sub_20B29E44C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_20B4E888C(&a9);
  sub_20B4E888C(&a12);
  _Unwind_Resume(a1);
}

void sub_20B29E468(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t (**v28)();
  uint64_t v29;
  std::__shared_weak_count *v30;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v28 = &off_24C41E150;
          v29 = v10;
          v30 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24C41E150;
          sub_20B293068(&v26, (uint64_t)&v23);
          *(_QWORD *)a1 = v26;
          *(_OWORD *)(a1 + 8) = v27;
          v23 = &off_24C41E150;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v28 = &off_24C41E150;
          v20 = v30;
          if (v30)
          {
            v21 = (unint64_t *)&v30->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v16;
  *(_QWORD *)(a1 + 16) = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
}

void sub_20B29E678(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B29E694()
{
  return 3;
}

_UNKNOWN **sub_20B29E69C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE28))
    return &off_253EC31A8;
  __cxa_guard_release(&qword_25463BE28);
  return &off_253EC31A8;
}

void sub_20B29E6F0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  __int128 v47;
  uint64_t v48;
  char v49[8];
  unint64_t v50;
  unsigned int v51;
  unsigned int v52;
  uint64_t (**v53)();
  uint64_t *v54;
  std::__shared_weak_count *v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v54 = v14;
    v55 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v53 = &off_24C41DFE8;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_20B4ED800((uint64_t)v54);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v54 = v23;
    v55 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v53 = &off_24C41DFE8;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_20AECFAB8();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v54 = v5;
  v55 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v53 = &off_24C41DFE8;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_20B29E468((uint64_t)v49, a1);
  sub_20B29E468((uint64_t)&v47, a1);
  v32 = operator new();
  v33 = (_QWORD *)v32;
  if (v52 <= 0x10)
    v34 = 16;
  else
    v34 = v52;
  v35 = v50;
  *(_QWORD *)&v56 = v50;
  *((_QWORD *)&v56 + 1) = v51 | (unint64_t)(v34 << 32);
  *(_QWORD *)v32 = off_24C416FE8;
  *(_DWORD *)(v32 + 8) = 0;
  v36 = v32 + 16;
  v37 = HIDWORD(v35);
  if ((_DWORD)v35 && HIDWORD(v35))
  {
    sub_20B292B28(0, 3, (unsigned int *)&v56, v32 + 16);
    LODWORD(v37) = DWORD1(v56);
    if (!(_DWORD)v56)
      goto LABEL_47;
  }
  else
  {
    *(_QWORD *)(v32 + 24) = 0;
    *(_QWORD *)(v32 + 32) = 0;
    *(_QWORD *)(v32 + 16) = &off_24C41E150;
    *(_DWORD *)(v32 + 40) = 0;
    if (!(_DWORD)v35)
      goto LABEL_47;
  }
  if ((_DWORD)v37)
  {
    v33[6] = sub_20B292E98(0, v36);
    v33[7] = v38;
    goto LABEL_48;
  }
LABEL_47:
  *((_OWORD *)v33 + 3) = v56;
LABEL_48:
  v57 = v47;
  v58 = v48;
  sub_20B293500((uint64_t)v33, (uint64_t)&v57);
  *v33 = off_24C417468;
  *a2 = v33;
  if (!v54)
    goto LABEL_56;
  v40 = *v54;
  v39 = (std::__shared_weak_count *)v54[1];
  if (!v39)
    goto LABEL_54;
  v41 = (unint64_t *)&v39->__shared_owners_;
  do
    v42 = __ldxr(v41);
  while (__stxr(v42 + 1, v41));
  do
    v43 = __ldaxr(v41);
  while (__stlxr(v43 - 1, v41));
  if (v43)
  {
LABEL_54:
    if (!v40)
      goto LABEL_56;
    goto LABEL_55;
  }
  ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
  std::__shared_weak_count::__release_weak(v39);
  if (v40)
LABEL_55:
    sub_20B4ED9D4((uint64_t)v54);
LABEL_56:
  v53 = &off_24C41E150;
  v44 = v55;
  if (v55)
  {
    v45 = (unint64_t *)&v55->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
      std::__shared_weak_count::__release_weak(v44);
    }
  }
}

void sub_20B29EB50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  uint64_t v9;
  va_list va;

  va_start(va, a8);
  sub_20B28A5C8(v9);
  MEMORY[0x20BD3583C](v8, 0x10A3C40EE3858B8);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B29EBC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B29EBDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B29EBF0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E736C(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_20AECFAB8();
    return sub_20B4E736C(a2, v2);
  }
  return sub_20B4E7478(a2, v2);
}

double sub_20B29EC30(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t (**v16)();
  double result;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  __int128 v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  uint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t (**v52)();
  _BYTE *v53;
  std::__shared_weak_count *v54;
  unsigned int v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  uint64_t (**v60)();
  _BYTE *v61;
  std::__shared_weak_count *v62;
  _BYTE v63[24];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C41DF08, (const struct __class_type_info *)&unk_24C417EB8, 0);
  if (!v4)
  {
    (*(void (**)(_BYTE *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v63, lpsrc, 3);
    v16 = *(uint64_t (***)())(*(_QWORD *)v63 + 16);
    v51 = **(_OWORD **)v63;
    v52 = v16;
    *(_QWORD *)v63 = 0;
    MEMORY[0x20BD3583C]();
    sub_20B29E24C((uint64_t *)v63, a1);
    v60 = (uint64_t (**)())&v51;
    v61 = v63;
    *(_QWORD *)&result = sub_20AFE4B3C((uint64_t *)&v60);
    return result;
  }
  v5 = (uint64_t)v4;
  v6 = *((_DWORD *)v4 + 10);
  if (v6 == 2)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v26 = __ldxr(p_shared_owners);
      while (__stxr(v26 + 1, p_shared_owners));
    }
    if (v8)
    {
      v28 = *v8;
      v27 = (std::__shared_weak_count *)v8[1];
      if (v27)
      {
        v29 = (unint64_t *)&v27->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
      if (v28)
        goto LABEL_41;
    }
  }
  else if (v6 == 1)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v18 = (unint64_t *)&v7->__shared_owners_;
      do
        v19 = __ldxr(v18);
      while (__stxr(v19 + 1, v18));
    }
    if (v8)
    {
      v21 = *v8;
      v20 = (std::__shared_weak_count *)v8[1];
      if (v20)
      {
        v22 = (unint64_t *)&v20->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      if (v21)
        goto LABEL_41;
    }
  }
  else
  {
    if (v6)
      sub_20AECFAB8();
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v9 = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    if (v8)
    {
      v12 = *v8;
      v11 = (std::__shared_weak_count *)v8[1];
      if (v11)
      {
        v13 = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
        do
          v15 = __ldaxr(v13);
        while (__stlxr(v15 - 1, v13));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      if (v12)
LABEL_41:
        sub_20B4ED800((uint64_t)v8);
    }
  }
  sub_20B29E468((uint64_t)&v57, v5);
  if (HIDWORD(v58) <= 0x10)
    v32 = 16;
  else
    v32 = HIDWORD(v58);
  *(_QWORD *)&v59 = *((_QWORD *)&v57 + 1);
  *((_QWORD *)&v59 + 1) = v58 | (unint64_t)(v32 << 32);
  *(_QWORD *)&v51 = off_24C416FE8;
  DWORD2(v51) = 0;
  v33 = HIDWORD(*((_QWORD *)&v57 + 1));
  if (DWORD2(v57) && HIDWORD(v57))
  {
    sub_20B292B28(0, 3, (unsigned int *)&v59, (uint64_t)&v52);
    LODWORD(v33) = DWORD1(v59);
    if (!(_DWORD)v59)
      goto LABEL_61;
  }
  else
  {
    v53 = 0;
    v54 = 0;
    v52 = &off_24C41E150;
    v55 = 0;
    if (!DWORD2(v57))
    {
LABEL_61:
      v56 = v59;
      goto LABEL_62;
    }
  }
  if (!(_DWORD)v33)
    goto LABEL_61;
  if (v55)
    sub_20AECFAB8();
  v34 = v54;
  v60 = &off_24C41E150;
  v61 = v53;
  v62 = v54;
  if (v54)
  {
    v35 = (unint64_t *)&v54->__shared_owners_;
    do
      v36 = __ldxr(v35);
    while (__stxr(v36 + 1, v35));
  }
  sub_20B293068((uint64_t *)v63, (uint64_t)&v60);
  v37 = *(_OWORD *)&v63[8];
  v60 = &off_24C41E150;
  if (v34)
  {
    v38 = (unint64_t *)&v34->__shared_owners_;
    do
      v39 = __ldaxr(v38);
    while (__stlxr(v39 - 1, v38));
    if (!v39)
    {
      v50 = v37;
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
      v37 = v50;
    }
  }
  v56 = v37;
LABEL_62:
  *(_OWORD *)v63 = v57;
  *(_QWORD *)&v63[16] = v58;
  sub_20B293500((uint64_t)&v51, (uint64_t)v63);
  *(_QWORD *)&v51 = off_24C417468;
  if (v8)
  {
    v41 = *v8;
    v40 = (std::__shared_weak_count *)v8[1];
    if (v40)
    {
      v42 = (unint64_t *)&v40->__shared_owners_;
      do
        v43 = __ldxr(v42);
      while (__stxr(v43 + 1, v42));
      do
        v44 = __ldaxr(v42);
      while (__stlxr(v44 - 1, v42));
      if (!v44)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
        if (!v41)
          goto LABEL_70;
        goto LABEL_69;
      }
    }
    if (v41)
LABEL_69:
      sub_20B4ED9D4((uint64_t)v8);
  }
LABEL_70:
  if (v7)
  {
    v45 = (unint64_t *)&v7->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v47 = v55;
  *(_DWORD *)(a1 + 8) = DWORD2(v51);
  v48 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v48 == -1)
  {
    if ((_DWORD)v47 == -1)
    {
      result = *(double *)&v56;
      *(_OWORD *)(a1 + 48) = v56;
      return result;
    }
  }
  else if ((_DWORD)v47 == -1)
  {
    ((void (*)(_BYTE *, uint64_t))off_24C418120[v48])(v63, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_80;
  }
  *(_QWORD *)v63 = a1 + 16;
  ((void (*)(_BYTE *))off_24C418150[v47])(v63);
LABEL_80:
  v49 = v55;
  result = *(double *)&v56;
  *(_OWORD *)(a1 + 48) = v56;
  *(_QWORD *)&v51 = off_24C416FE8;
  if ((_DWORD)v49 != -1)
    ((void (*)(_BYTE *, uint64_t (***)()))off_24C418120[v49])(v63, &v52);
  return result;
}

uint64_t sub_20B29F2FC(uint64_t a1)
{
  uint64_t v2[3];

  sub_20B29E24C(v2, a1);
  return v2[0];
}

double sub_20B29F324@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  double result;
  __int128 v7;
  uint64_t v8;

  if (a2 != 3
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B29E24C((uint64_t *)&v7, a1);
  v5 = operator new();
  result = *(double *)&v7;
  *(_OWORD *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v8;
  *a3 = v5;
  return result;
}

double sub_20B29F3C4@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  double result;
  __int128 v7;
  uint64_t v8;

  if (a2 != 3
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B29E468((uint64_t)&v7, a1);
  v5 = operator new();
  result = *(double *)&v7;
  *(_OWORD *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v8;
  *a3 = v5;
  return result;
}

__int128 *sub_20B29F464()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE90);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE90))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_25463BE98);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463BE98))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25463BEA0);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BEA0))
    {
LABEL_13:
      if (byte_25463C2C7 < 0)
      {
        sub_20AEC60F4(&xmmword_25463C298, (void *)qword_25463C2B0, unk_25463C2B8);
      }
      else
      {
        xmmword_25463C298 = *(_OWORD *)&qword_25463C2B0;
        unk_25463C2A8 = unk_25463C2C0;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C298, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BE98);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_25463BEA8);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463BEA8))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Gray16f>]", &qword_25463C2C8);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C2C8, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BEA8);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_25463BEB0);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BEB0))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_25463BEB8);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25463BEB8))
      {
        if (byte_25463C2E0[23] < 0)
          sub_20AEC60F4(&__p, *(void **)byte_25463C2E0, *(unint64_t *)&byte_25463C2E0[8]);
        else
          __p = *(std::string *)byte_25463C2E0;
        sub_20B52B814(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_25463C2F8);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C2F8, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463BEB8);
      }
      if (byte_25463C30F < 0)
      {
        sub_20AEC60F4(v17, (void *)xmmword_25463C2F8, *((unint64_t *)&xmmword_25463C2F8 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_25463C2F8;
        v18 = unk_25463C308;
      }
      sub_20AFC4EC4((char *)v17, (std::string *)&qword_25463C2B0);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C2B0, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BEA0);
      goto LABEL_13;
    }
    if (byte_25463C2DF >= 0)
      v6 = byte_25463C2DF;
    else
      v6 = unk_25463C2D0;
    if (byte_25463C2DF >= 0)
      v7 = &qword_25463C2C8;
    else
      v7 = (uint64_t *)qword_25463C2C8;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_25463C2E0[8] = v6;
      *(_QWORD *)&byte_25463C2E0[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_25463C2E0 = v13;
    }
    else
    {
      v13 = byte_25463C2E0;
      byte_25463C2E0[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_25463C2E0, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463BEB0);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_25463C2AF < 0)
  {
    sub_20AEC60F4(&xmmword_25463C280, (void *)xmmword_25463C298, *((unint64_t *)&xmmword_25463C298 + 1));
  }
  else
  {
    xmmword_25463C280 = xmmword_25463C298;
    unk_25463C290 = unk_25463C2A8;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C280, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463BE90);
LABEL_2:
  if (byte_25463C297 >= 0)
    return &xmmword_25463C280;
  else
    return (__int128 *)xmmword_25463C280;
}

void sub_20B29F8B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25463BEA0);
  __cxa_guard_abort(&qword_25463BE98);
  __cxa_guard_abort(&qword_25463BE90);
  _Unwind_Resume(a1);
}

void sub_20B29F954(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463BE90);
  _Unwind_Resume(a1);
}

void sub_20B29F96C()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_20B5AACCD, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B29F9A8(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_20B4ED8EC(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24C41E008;
        *v42 = &off_24C417CF8;
        sub_20B4E78A4(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_20B4EDAC0(v79);
        }
LABEL_64:
        v78 = &off_24C41E150;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_20AECFAB8();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_20B4ED800(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24C41DFE8;
  *v42 = &off_24C417CD8;
  sub_20B4E7478(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_20B4ED9D4(v79);
  }
LABEL_102:
  v78 = &off_24C41E150;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_20B2A019C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E7584(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2A01D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2A01E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E79B0(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2A0218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2A022C()
{
  return 65792;
}

_QWORD *sub_20B2A0238@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E78A4(a2, v2);
  if (v3 > 1)
    sub_20AECFAB8();
  return sub_20B4E7798(a2, v2);
}

uint64_t sub_20B2A0278(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C417198;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

_QWORD *sub_20B2A02DC(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];
  std::__shared_weak_count *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v3 = *(std::__shared_weak_count **)(a2 + 16);
  v11[0] = &off_24C41E150;
  v11[1] = v4;
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20B2972A0((uint64_t)a1, (uint64_t)v11);
  v11[0] = &off_24C41E150;
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *a1 = off_24C4174F8;
  return a1;
}

void sub_20B2A0384(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2A0398(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t (**v26)();
  uint64_t v27;
  std::__shared_weak_count *v28;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v26 = &off_24C41E150;
          v27 = v10;
          v28 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24C41E150;
          sub_20B296A24(a1, (uint64_t)&v23);
          v23 = &off_24C41E150;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v26 = &off_24C41E150;
          v20 = v28;
          if (v28)
          {
            v21 = (unint64_t *)&v28->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *a1 = 0;
  a1[1] = v16;
  a1[2] = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
}

void sub_20B2A0598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_20B4E888C(&a9);
  sub_20B4E888C(&a12);
  _Unwind_Resume(a1);
}

void sub_20B2A05B4(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t (**v28)();
  uint64_t v29;
  std::__shared_weak_count *v30;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v28 = &off_24C41E150;
          v29 = v10;
          v30 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24C41E150;
          sub_20B296A24(&v26, (uint64_t)&v23);
          *(_QWORD *)a1 = v26;
          *(_OWORD *)(a1 + 8) = v27;
          v23 = &off_24C41E150;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v28 = &off_24C41E150;
          v20 = v30;
          if (v30)
          {
            v21 = (unint64_t *)&v30->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v16;
  *(_QWORD *)(a1 + 16) = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
}

void sub_20B2A07C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2A07E0()
{
  return 4;
}

_UNKNOWN **sub_20B2A07E8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE28))
    return &off_253EC31A8;
  __cxa_guard_release(&qword_25463BE28);
  return &off_253EC31A8;
}

void sub_20B2A083C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  __int128 v47;
  uint64_t v48;
  char v49[8];
  unint64_t v50;
  unsigned int v51;
  unsigned int v52;
  uint64_t (**v53)();
  uint64_t *v54;
  std::__shared_weak_count *v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v54 = v14;
    v55 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v53 = &off_24C41DFE8;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_20B4ED800((uint64_t)v54);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v54 = v23;
    v55 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v53 = &off_24C41DFE8;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_20AECFAB8();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v54 = v5;
  v55 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v53 = &off_24C41DFE8;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_20B2A05B4((uint64_t)v49, a1);
  sub_20B2A05B4((uint64_t)&v47, a1);
  v32 = operator new();
  v33 = (_QWORD *)v32;
  if (v52 <= 8)
    v34 = 8;
  else
    v34 = v52;
  v35 = v50;
  *(_QWORD *)&v56 = v50;
  *((_QWORD *)&v56 + 1) = v51 | (unint64_t)(v34 << 32);
  *(_QWORD *)v32 = off_24C417198;
  *(_DWORD *)(v32 + 8) = 0;
  v36 = v32 + 16;
  v37 = HIDWORD(v35);
  if ((_DWORD)v35 && HIDWORD(v35))
  {
    sub_20B2964E4(0, 4, (unsigned int *)&v56, v32 + 16);
    LODWORD(v37) = DWORD1(v56);
    if (!(_DWORD)v56)
      goto LABEL_47;
  }
  else
  {
    *(_QWORD *)(v32 + 24) = 0;
    *(_QWORD *)(v32 + 32) = 0;
    *(_QWORD *)(v32 + 16) = &off_24C41E150;
    *(_DWORD *)(v32 + 40) = 0;
    if (!(_DWORD)v35)
      goto LABEL_47;
  }
  if ((_DWORD)v37)
  {
    v33[6] = sub_20B296854(0, v36);
    v33[7] = v38;
    goto LABEL_48;
  }
LABEL_47:
  *((_OWORD *)v33 + 3) = v56;
LABEL_48:
  v57 = v47;
  v58 = v48;
  sub_20B296EBC((uint64_t)v33, (uint64_t)&v57);
  *v33 = off_24C4174F8;
  *a2 = v33;
  if (!v54)
    goto LABEL_56;
  v40 = *v54;
  v39 = (std::__shared_weak_count *)v54[1];
  if (!v39)
    goto LABEL_54;
  v41 = (unint64_t *)&v39->__shared_owners_;
  do
    v42 = __ldxr(v41);
  while (__stxr(v42 + 1, v41));
  do
    v43 = __ldaxr(v41);
  while (__stlxr(v43 - 1, v41));
  if (v43)
  {
LABEL_54:
    if (!v40)
      goto LABEL_56;
    goto LABEL_55;
  }
  ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
  std::__shared_weak_count::__release_weak(v39);
  if (v40)
LABEL_55:
    sub_20B4ED9D4((uint64_t)v54);
LABEL_56:
  v53 = &off_24C41E150;
  v44 = v55;
  if (v55)
  {
    v45 = (unint64_t *)&v55->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
      std::__shared_weak_count::__release_weak(v44);
    }
  }
}

void sub_20B2A0C9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  uint64_t v9;
  va_list va;

  va_start(va, a8);
  sub_20B28A5C8(v9);
  MEMORY[0x20BD3583C](v8, 0x10A3C40EE3858B8);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2A0D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2A0D28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2A0D3C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E736C(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_20AECFAB8();
    return sub_20B4E736C(a2, v2);
  }
  return sub_20B4E7478(a2, v2);
}

double sub_20B2A0D7C(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t (**v16)();
  double result;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  __int128 v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  uint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t (**v52)();
  uint64_t v53;
  std::__shared_weak_count *v54;
  unsigned int v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  _QWORD v60[3];
  _BYTE v61[24];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C41DF08, (const struct __class_type_info *)&unk_24C417ED0, 0);
  if (!v4)
  {
    (*(void (**)(_BYTE *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v61, lpsrc, 4);
    v16 = *(uint64_t (***)())(*(_QWORD *)v61 + 16);
    v51 = **(_OWORD **)v61;
    v52 = v16;
    *(_QWORD *)v61 = 0;
    MEMORY[0x20BD3583C]();
    sub_20B2A0398((uint64_t *)v61, a1);
    *(float *)&result = sub_20AFC5D04((uint64_t)&v51, (uint64_t)v61);
    return result;
  }
  v5 = (uint64_t)v4;
  v6 = *((_DWORD *)v4 + 10);
  if (v6 == 2)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v26 = __ldxr(p_shared_owners);
      while (__stxr(v26 + 1, p_shared_owners));
    }
    if (v8)
    {
      v28 = *v8;
      v27 = (std::__shared_weak_count *)v8[1];
      if (v27)
      {
        v29 = (unint64_t *)&v27->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
      if (v28)
        goto LABEL_41;
    }
  }
  else if (v6 == 1)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v18 = (unint64_t *)&v7->__shared_owners_;
      do
        v19 = __ldxr(v18);
      while (__stxr(v19 + 1, v18));
    }
    if (v8)
    {
      v21 = *v8;
      v20 = (std::__shared_weak_count *)v8[1];
      if (v20)
      {
        v22 = (unint64_t *)&v20->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      if (v21)
        goto LABEL_41;
    }
  }
  else
  {
    if (v6)
      sub_20AECFAB8();
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v9 = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    if (v8)
    {
      v12 = *v8;
      v11 = (std::__shared_weak_count *)v8[1];
      if (v11)
      {
        v13 = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
        do
          v15 = __ldaxr(v13);
        while (__stlxr(v15 - 1, v13));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      if (v12)
LABEL_41:
        sub_20B4ED800((uint64_t)v8);
    }
  }
  sub_20B2A05B4((uint64_t)&v57, v5);
  if (HIDWORD(v58) <= 8)
    v32 = 8;
  else
    v32 = HIDWORD(v58);
  *(_QWORD *)&v59 = *((_QWORD *)&v57 + 1);
  *((_QWORD *)&v59 + 1) = v58 | (unint64_t)(v32 << 32);
  *(_QWORD *)&v51 = off_24C417198;
  DWORD2(v51) = 0;
  v33 = HIDWORD(*((_QWORD *)&v57 + 1));
  if (DWORD2(v57) && HIDWORD(v57))
  {
    sub_20B2964E4(0, 4, (unsigned int *)&v59, (uint64_t)&v52);
    LODWORD(v33) = DWORD1(v59);
    if (!(_DWORD)v59)
      goto LABEL_61;
  }
  else
  {
    v53 = 0;
    v54 = 0;
    v52 = &off_24C41E150;
    v55 = 0;
    if (!DWORD2(v57))
    {
LABEL_61:
      v56 = v59;
      goto LABEL_62;
    }
  }
  if (!(_DWORD)v33)
    goto LABEL_61;
  if (v55)
    sub_20AECFAB8();
  v34 = v54;
  v60[0] = &off_24C41E150;
  v60[1] = v53;
  v60[2] = v54;
  if (v54)
  {
    v35 = (unint64_t *)&v54->__shared_owners_;
    do
      v36 = __ldxr(v35);
    while (__stxr(v36 + 1, v35));
  }
  sub_20B296A24((uint64_t *)v61, (uint64_t)v60);
  v37 = *(_OWORD *)&v61[8];
  v60[0] = &off_24C41E150;
  if (v34)
  {
    v38 = (unint64_t *)&v34->__shared_owners_;
    do
      v39 = __ldaxr(v38);
    while (__stlxr(v39 - 1, v38));
    if (!v39)
    {
      v50 = v37;
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
      v37 = v50;
    }
  }
  v56 = v37;
LABEL_62:
  *(_OWORD *)v61 = v57;
  *(_QWORD *)&v61[16] = v58;
  sub_20B296EBC((uint64_t)&v51, (uint64_t)v61);
  *(_QWORD *)&v51 = off_24C4174F8;
  if (v8)
  {
    v41 = *v8;
    v40 = (std::__shared_weak_count *)v8[1];
    if (v40)
    {
      v42 = (unint64_t *)&v40->__shared_owners_;
      do
        v43 = __ldxr(v42);
      while (__stxr(v43 + 1, v42));
      do
        v44 = __ldaxr(v42);
      while (__stlxr(v44 - 1, v42));
      if (!v44)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
        if (!v41)
          goto LABEL_70;
        goto LABEL_69;
      }
    }
    if (v41)
LABEL_69:
      sub_20B4ED9D4((uint64_t)v8);
  }
LABEL_70:
  if (v7)
  {
    v45 = (unint64_t *)&v7->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v47 = v55;
  *(_DWORD *)(a1 + 8) = DWORD2(v51);
  v48 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v48 == -1)
  {
    if ((_DWORD)v47 == -1)
    {
      result = *(double *)&v56;
      *(_OWORD *)(a1 + 48) = v56;
      return result;
    }
  }
  else if ((_DWORD)v47 == -1)
  {
    ((void (*)(_BYTE *, uint64_t))off_24C418120[v48])(v61, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_80;
  }
  *(_QWORD *)v61 = a1 + 16;
  ((void (*)(_BYTE *))off_24C418150[v47])(v61);
LABEL_80:
  v49 = v55;
  result = *(double *)&v56;
  *(_OWORD *)(a1 + 48) = v56;
  *(_QWORD *)&v51 = off_24C417198;
  if ((_DWORD)v49 != -1)
    ((void (*)(_BYTE *, uint64_t (***)()))off_24C418120[v49])(v61, &v52);
  return result;
}

uint64_t sub_20B2A1440(uint64_t a1)
{
  uint64_t v2[3];

  sub_20B2A0398(v2, a1);
  return v2[0];
}

double sub_20B2A1468@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  double result;
  __int128 v7;
  uint64_t v8;

  if (a2 != 4
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2A0398((uint64_t *)&v7, a1);
  v5 = operator new();
  result = *(double *)&v7;
  *(_OWORD *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v8;
  *a3 = v5;
  return result;
}

double sub_20B2A1508@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  double result;
  __int128 v7;
  uint64_t v8;

  if (a2 != 4
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2A05B4((uint64_t)&v7, a1);
  v5 = operator new();
  result = *(double *)&v7;
  *(_OWORD *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v8;
  *a3 = v5;
  return result;
}

__int128 *sub_20B2A15A8()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BEC0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BEC0))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_25463BEC8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463BEC8))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25463BED0);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BED0))
    {
LABEL_13:
      if (byte_25463C357 < 0)
      {
        sub_20AEC60F4(&xmmword_25463C328, (void *)qword_25463C340, unk_25463C348);
      }
      else
      {
        xmmword_25463C328 = *(_OWORD *)&qword_25463C340;
        unk_25463C338 = unk_25463C350;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C328, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BEC8);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_25463BED8);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463BED8))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Gray32f>]", &qword_25463C358);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C358, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BED8);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_25463BEE0);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BEE0))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_25463BEE8);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25463BEE8))
      {
        if (byte_25463C370[23] < 0)
          sub_20AEC60F4(&__p, *(void **)byte_25463C370, *(unint64_t *)&byte_25463C370[8]);
        else
          __p = *(std::string *)byte_25463C370;
        sub_20B52B814(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_25463C388);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C388, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463BEE8);
      }
      if (byte_25463C39F < 0)
      {
        sub_20AEC60F4(v17, (void *)xmmword_25463C388, *((unint64_t *)&xmmword_25463C388 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_25463C388;
        v18 = unk_25463C398;
      }
      sub_20AFC57D8((char *)v17, (std::string *)&qword_25463C340);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C340, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BED0);
      goto LABEL_13;
    }
    if (byte_25463C36F >= 0)
      v6 = byte_25463C36F;
    else
      v6 = unk_25463C360;
    if (byte_25463C36F >= 0)
      v7 = &qword_25463C358;
    else
      v7 = (uint64_t *)qword_25463C358;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_25463C370[8] = v6;
      *(_QWORD *)&byte_25463C370[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_25463C370 = v13;
    }
    else
    {
      v13 = byte_25463C370;
      byte_25463C370[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_25463C370, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463BEE0);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_25463C33F < 0)
  {
    sub_20AEC60F4(&xmmword_25463C310, (void *)xmmword_25463C328, *((unint64_t *)&xmmword_25463C328 + 1));
  }
  else
  {
    xmmword_25463C310 = xmmword_25463C328;
    unk_25463C320 = unk_25463C338;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C310, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463BEC0);
LABEL_2:
  if (byte_25463C327 >= 0)
    return &xmmword_25463C310;
  else
    return (__int128 *)xmmword_25463C310;
}

void sub_20B2A19FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25463BED0);
  __cxa_guard_abort(&qword_25463BEC8);
  __cxa_guard_abort(&qword_25463BEC0);
  _Unwind_Resume(a1);
}

void sub_20B2A1A98(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463BEC0);
  _Unwind_Resume(a1);
}

void sub_20B2A1AB0()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_20B5AACCD, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B2A1AEC(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_20B4ED8EC(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24C41E008;
        *v42 = &off_24C417CF8;
        sub_20B4E78A4(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_20B4EDAC0(v79);
        }
LABEL_64:
        v78 = &off_24C41E150;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_20AECFAB8();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_20B4ED800(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24C41DFE8;
  *v42 = &off_24C417CD8;
  sub_20B4E7478(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_20B4ED9D4(v79);
  }
LABEL_102:
  v78 = &off_24C41E150;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_20B2A22E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E7584(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2A2314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2A2328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E79B0(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2A235C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2A2370()
{
  return 65792;
}

_QWORD *sub_20B2A237C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E78A4(a2, v2);
  if (v3 > 1)
    sub_20AECFAB8();
  return sub_20B4E7798(a2, v2);
}

uint64_t sub_20B2A23BC(uint64_t a1, uint64_t a2, __int128 *a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  unint64_t *v15;
  unint64_t v16;
  __int128 v17;
  uint64_t *v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t *v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  uint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  _BYTE v64[32];
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t (**v69)();
  uint64_t *v70;
  std::__shared_weak_count *v71;
  size_t v72[2];
  _QWORD v73[3];
  __int128 v74;
  uint64_t v75;
  uint64_t v76;

  v76 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24C417588;
  v5 = *(unsigned int *)(a2 + 32);
  v4 = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x20)
    v6 = 32;
  else
    v6 = v4;
  LODWORD(v73[0]) = 2;
  v7 = *(_QWORD *)(a2 + 24);
  HIDWORD(v73[0]) = v7;
  v8 = HIDWORD(v7);
  *(_QWORD *)v64 = v73[0];
  *(_DWORD *)&v64[8] = HIDWORD(v7);
  LODWORD(v73[0]) = 1;
  *(_QWORD *)((char *)v73 + 4) = v5 | (v6 << 32);
  *(_QWORD *)&v64[12] = v73[0];
  *(_DWORD *)&v64[20] = v6;
  *(_QWORD *)&v64[24] = v7;
  v65 = *(_QWORD *)((char *)v73 + 4);
  v62 = a3[1];
  v63 = a3[2];
  v61 = *a3;
  *(_QWORD *)a1 = off_24C416C88;
  *(_DWORD *)(a1 + 8) = 0;
  if ((_DWORD)v7 && HIDWORD(v7))
  {
    sub_20B28B1C4(0, 5, (uint64_t)v64, a1 + 16);
    LODWORD(v8) = *(_DWORD *)&v64[28];
    v9 = a1 + 48;
    if (!*(_DWORD *)&v64[24])
      goto LABEL_19;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24C41E150;
    *(_DWORD *)(a1 + 40) = 0;
    v9 = a1 + 48;
    if (!(_DWORD)v7)
      goto LABEL_19;
  }
  if ((_DWORD)v8)
  {
    if (*(_DWORD *)(a1 + 40))
      sub_20AECFAB8();
    v10 = *(_QWORD *)(a1 + 24);
    v11 = *(std::__shared_weak_count **)(a1 + 32);
    *(_QWORD *)&v66 = &off_24C41E150;
    *((_QWORD *)&v66 + 1) = v10;
    *(_QWORD *)&v67 = v11;
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(p_shared_owners);
      while (__stxr(v13 + 1, p_shared_owners));
    }
    sub_20B28B534((uint64_t)v73, (uint64_t)&v66);
    v14 = v74;
    *(_OWORD *)v9 = *(_OWORD *)&v73[1];
    *(_OWORD *)(v9 + 16) = v14;
    *(_QWORD *)(v9 + 32) = v75;
    *(_QWORD *)&v66 = &off_24C41E150;
    if (v11)
    {
      v15 = (unint64_t *)&v11->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    goto LABEL_20;
  }
LABEL_19:
  v17 = *(_OWORD *)&v64[16];
  *(_OWORD *)v9 = *(_OWORD *)v64;
  *(_OWORD *)(v9 + 16) = v17;
  *(_QWORD *)(v9 + 32) = v65;
LABEL_20:
  v66 = v61;
  v67 = v62;
  v68 = v63;
  if (*(_DWORD *)(a1 + 40) > 2u)
    goto LABEL_85;
  v18 = *(uint64_t **)(a1 + 24);
  if (!v18)
    goto LABEL_82;
  v20 = *v18;
  v19 = (std::__shared_weak_count *)v18[1];
  if (!v19)
    goto LABEL_27;
  v21 = (unint64_t *)&v19->__shared_owners_;
  do
    v22 = __ldxr(v21);
  while (__stxr(v22 + 1, v21));
  do
    v23 = __ldaxr(v21);
  while (__stlxr(v23 - 1, v21));
  if (!v23)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
    if (!v20)
      goto LABEL_82;
  }
  else
  {
LABEL_27:
    if (!v20)
      goto LABEL_82;
  }
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 == 2)
  {
    v43 = *(uint64_t **)(a1 + 24);
    v44 = *(std::__shared_weak_count **)(a1 + 32);
    v70 = v43;
    v71 = v44;
    if (v44)
    {
      v45 = (unint64_t *)&v44->__shared_owners_;
      do
        v46 = __ldxr(v45);
      while (__stxr(v46 + 1, v45));
    }
    v69 = &off_24C41E008;
    if (v43)
    {
      v48 = *v43;
      v47 = (std::__shared_weak_count *)v43[1];
      if (v47)
      {
        v49 = (unint64_t *)&v47->__shared_owners_;
        do
          v50 = __ldxr(v49);
        while (__stxr(v50 + 1, v49));
        do
          v51 = __ldaxr(v49);
        while (__stlxr(v51 - 1, v49));
        if (!v51)
        {
          ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
          std::__shared_weak_count::__release_weak(v47);
        }
      }
      if (v48)
        goto LABEL_68;
    }
    goto LABEL_69;
  }
  if (v24 == 1)
  {
    v34 = *(uint64_t **)(a1 + 24);
    v35 = *(std::__shared_weak_count **)(a1 + 32);
    v70 = v34;
    v71 = v35;
    if (v35)
    {
      v36 = (unint64_t *)&v35->__shared_owners_;
      do
        v37 = __ldxr(v36);
      while (__stxr(v37 + 1, v36));
    }
    v69 = &off_24C41E008;
    if (v34)
    {
      v39 = *v34;
      v38 = (std::__shared_weak_count *)v34[1];
      if (v38)
      {
        v40 = (unint64_t *)&v38->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
          std::__shared_weak_count::__release_weak(v38);
        }
      }
      if (v39)
        goto LABEL_68;
    }
    goto LABEL_69;
  }
  if (v24)
LABEL_85:
    sub_20AECFAB8();
  v25 = *(uint64_t **)(a1 + 24);
  v26 = *(std::__shared_weak_count **)(a1 + 32);
  v70 = v25;
  v71 = v26;
  if (v26)
  {
    v27 = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  v69 = &off_24C41E008;
  if (v25)
  {
    v30 = *v25;
    v29 = (std::__shared_weak_count *)v25[1];
    if (v29)
    {
      v31 = (unint64_t *)&v29->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
    if (v30)
LABEL_68:
      sub_20B4ED8EC((uint64_t)v70);
  }
LABEL_69:
  sub_20B28BF54((uint64_t)v73, a1);
  v72[0] = (size_t)&v66;
  v72[1] = (size_t)v73;
  sub_20AFE5C6C(v72);
  if (v70)
  {
    v53 = *v70;
    v52 = (std::__shared_weak_count *)v70[1];
    if (v52)
    {
      v54 = (unint64_t *)&v52->__shared_owners_;
      do
        v55 = __ldxr(v54);
      while (__stxr(v55 + 1, v54));
      do
        v56 = __ldaxr(v54);
      while (__stlxr(v56 - 1, v54));
      if (!v56)
      {
        ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
        std::__shared_weak_count::__release_weak(v52);
        if (!v53)
          goto LABEL_77;
        goto LABEL_76;
      }
    }
    if (v53)
LABEL_76:
      sub_20B4EDAC0((uint64_t)v70);
  }
LABEL_77:
  v69 = &off_24C41E150;
  v57 = v71;
  if (v71)
  {
    v58 = (unint64_t *)&v71->__shared_owners_;
    do
      v59 = __ldaxr(v58);
    while (__stlxr(v59 - 1, v58));
    if (!v59)
    {
      ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
      std::__shared_weak_count::__release_weak(v57);
    }
  }
LABEL_82:
  *(_QWORD *)a1 = off_24C417588;
  return a1;
}

void sub_20B2A28B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::__shared_weak_count *a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *p_shared_owners;
  unint64_t v35;
  uint64_t v36;

  if (a29)
  {
    p_shared_owners = (unint64_t *)&a29->__shared_owners_;
    do
      v35 = __ldaxr(p_shared_owners);
    while (__stlxr(v35 - 1, p_shared_owners));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))a29->__on_zero_shared)(a29);
      std::__shared_weak_count::__release_weak(a29);
    }
  }
  *(_QWORD *)v29 = v31;
  v36 = *(unsigned int *)(v29 + 40);
  if ((_DWORD)v36 != -1)
    ((void (*)(uint64_t, uint64_t))off_24C418120[v36])(v32 - 136, v30);
  *(_DWORD *)(v29 + 40) = -1;
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B2A29F8(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416C88;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

_QWORD *sub_20B2A2A5C(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];
  std::__shared_weak_count *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v3 = *(std::__shared_weak_count **)(a2 + 16);
  v11[0] = &off_24C41E150;
  v11[1] = v4;
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20B28B958((uint64_t)a1, (uint64_t)v11);
  v11[0] = &off_24C41E150;
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *a1 = off_24C417588;
  return a1;
}

void sub_20B2A2B04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2A2B18(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24C41E150;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B28B534(a1, (uint64_t)&v27);
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24C41E150;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 2;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 2 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
  v20 = __PAIR64__(DWORD1(v30), 2);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2A2D40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_20B2A2D5C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24C41E150;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B28B534((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24C41E150;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 2;
  *(_QWORD *)&v33[4] = v16;
  v17 = 2 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 2);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2A2FA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2A2FC0()
{
  return 5;
}

_UNKNOWN **sub_20B2A2FC8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE28))
    return &off_253EC31A8;
  __cxa_guard_release(&qword_25463BE28);
  return &off_253EC31A8;
}

void sub_20B2A301C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24C41DFE8;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_20B4ED800((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24C41DFE8;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_20AECFAB8();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24C41DFE8;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_20B2A2D5C((uint64_t)v42, a1);
  sub_20B2A2D5C((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_20B2A23BC(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_20B4ED9D4((uint64_t)v45);
LABEL_45:
  v44 = &off_24C41E150;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_20B2A33E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x20BD3583C](v14, 0x10A3C4049419736);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2A340C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2A3420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2A3434@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E736C(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_20AECFAB8();
    return sub_20B4E736C(a2, v2);
  }
  return sub_20B4E7478(a2, v2);
}

double sub_20B2A3474(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56[3];
  _OWORD v57[3];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C41DF08, (const struct __class_type_info *)&unk_24C417EE8, 0);
  if (!v4)
  {
    (*(void (**)(_OWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v57, lpsrc, 5);
    v16 = *(_QWORD *)&v57[0];
    v18 = *(_OWORD *)(*(_QWORD *)&v57[0] + 16);
    v17 = *(_OWORD *)(*(_QWORD *)&v57[0] + 32);
    v50 = **(_OWORD **)&v57[0];
    v51 = v18;
    v52 = v17;
    *(_QWORD *)&v57[0] = 0;
    MEMORY[0x20BD3583C](v16, 0xC400A2AC0F1, v19, v20, v21, v22);
    sub_20B2A2B18((uint64_t)v57, a1);
    *(_QWORD *)&v56[0] = &v50;
    *((_QWORD *)&v56[0] + 1) = v57;
    sub_20AFE5C6C((size_t *)v56);
    return result;
  }
  v5 = (uint64_t)v4;
  v6 = *((_DWORD *)v4 + 10);
  if (v6 == 2)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v25 = __ldxr(p_shared_owners);
      while (__stxr(v25 + 1, p_shared_owners));
    }
    if (v8)
    {
      v27 = *v8;
      v26 = (std::__shared_weak_count *)v8[1];
      if (v26)
      {
        v28 = (unint64_t *)&v26->__shared_owners_;
        do
          v29 = __ldxr(v28);
        while (__stxr(v29 + 1, v28));
        do
          v30 = __ldaxr(v28);
        while (__stlxr(v30 - 1, v28));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      if (v27)
        goto LABEL_41;
    }
  }
  else if (v6 == 1)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v31 = (unint64_t *)&v7->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_41;
    }
  }
  else
  {
    if (v6)
      sub_20AECFAB8();
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v9 = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    if (v8)
    {
      v12 = *v8;
      v11 = (std::__shared_weak_count *)v8[1];
      if (v11)
      {
        v13 = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
        do
          v15 = __ldaxr(v13);
        while (__stlxr(v15 - 1, v13));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      if (v12)
LABEL_41:
        sub_20B4ED800((uint64_t)v8);
    }
  }
  sub_20B2A2D5C((uint64_t)v57, v5);
  v56[0] = v57[0];
  v56[1] = v57[1];
  v56[2] = v57[2];
  sub_20B2A23BC((uint64_t)&v50, (uint64_t)v57 + 8, v56);
  if (v8)
  {
    v39 = *v8;
    v38 = (std::__shared_weak_count *)v8[1];
    if (v38)
    {
      v40 = (unint64_t *)&v38->__shared_owners_;
      do
        v41 = __ldxr(v40);
      while (__stxr(v41 + 1, v40));
      do
        v42 = __ldaxr(v40);
      while (__stlxr(v42 - 1, v40));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
        if (!v39)
          goto LABEL_50;
        goto LABEL_49;
      }
    }
    if (v39)
LABEL_49:
      sub_20B4ED9D4((uint64_t)v8);
  }
LABEL_50:
  if (v7)
  {
    v43 = (unint64_t *)&v7->__shared_owners_;
    do
      v44 = __ldaxr(v43);
    while (__stlxr(v44 - 1, v43));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v45 = DWORD2(v52);
  *(_DWORD *)(a1 + 8) = DWORD2(v50);
  v46 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v46 == -1)
  {
    if ((_DWORD)v45 == -1)
    {
      result = *(double *)&v53;
      v49 = v54;
      *(_OWORD *)(a1 + 48) = v53;
      *(_OWORD *)(a1 + 64) = v49;
      *(_QWORD *)(a1 + 80) = v55;
      return result;
    }
  }
  else if ((_DWORD)v45 == -1)
  {
    ((void (*)(_OWORD *, uint64_t))off_24C418120[v46])(v57, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_60;
  }
  *(_QWORD *)&v57[0] = a1 + 16;
  ((void (*)(_OWORD *))off_24C418150[v45])(v57);
LABEL_60:
  v47 = DWORD2(v52);
  result = *(double *)&v53;
  v48 = v54;
  *(_OWORD *)(a1 + 48) = v53;
  *(_OWORD *)(a1 + 64) = v48;
  *(_QWORD *)(a1 + 80) = v55;
  *(_QWORD *)&v50 = off_24C416C88;
  if ((_DWORD)v47 != -1)
    ((void (*)(_OWORD *, __int128 *))off_24C418120[v47])(v57, &v51);
  return result;
}

uint64_t sub_20B2A3988(uint64_t a1)
{
  _QWORD v2[6];

  sub_20B2A2B18((uint64_t)v2, a1);
  return v2[0];
}

double sub_20B2A39B0@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2A2B18((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_20B2A3A50@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2A2D5C((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_20B2A3AF0()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BEF0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BEF0))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_25463BEF8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463BEF8))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25463BF00);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BF00))
    {
LABEL_13:
      if (byte_25463C3E7 < 0)
      {
        sub_20AEC60F4(&xmmword_25463C3B8, (void *)qword_25463C3D0, unk_25463C3D8);
      }
      else
      {
        xmmword_25463C3B8 = *(_OWORD *)&qword_25463C3D0;
        unk_25463C3C8 = unk_25463C3E0;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C3B8, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BEF8);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_25463BF08);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463BF08))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Two8u>]", &qword_25463C3E8);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C3E8, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BF08);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_25463BF10);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BF10))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_25463BF18);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25463BF18))
      {
        if (byte_25463C400[23] < 0)
          sub_20AEC60F4(&__p, *(void **)byte_25463C400, *(unint64_t *)&byte_25463C400[8]);
        else
          __p = *(std::string *)byte_25463C400;
        sub_20B52B814(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_25463C418);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C418, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463BF18);
      }
      if (byte_25463C42F < 0)
      {
        sub_20AEC60F4(v17, (void *)xmmword_25463C418, *((unint64_t *)&xmmword_25463C418 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_25463C418;
        v18 = unk_25463C428;
      }
      sub_20AFC62E4((char *)v17, (std::string *)&qword_25463C3D0);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C3D0, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BF00);
      goto LABEL_13;
    }
    if (byte_25463C3FF >= 0)
      v6 = byte_25463C3FF;
    else
      v6 = unk_25463C3F0;
    if (byte_25463C3FF >= 0)
      v7 = &qword_25463C3E8;
    else
      v7 = (uint64_t *)qword_25463C3E8;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_25463C400[8] = v6;
      *(_QWORD *)&byte_25463C400[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_25463C400 = v13;
    }
    else
    {
      v13 = byte_25463C400;
      byte_25463C400[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_25463C400, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463BF10);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_25463C3CF < 0)
  {
    sub_20AEC60F4(&xmmword_25463C3A0, (void *)xmmword_25463C3B8, *((unint64_t *)&xmmword_25463C3B8 + 1));
  }
  else
  {
    xmmword_25463C3A0 = xmmword_25463C3B8;
    unk_25463C3B0 = unk_25463C3C8;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C3A0, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463BEF0);
LABEL_2:
  if (byte_25463C3B7 >= 0)
    return &xmmword_25463C3A0;
  else
    return (__int128 *)xmmword_25463C3A0;
}

void sub_20B2A3F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25463BF00);
  __cxa_guard_abort(&qword_25463BEF8);
  __cxa_guard_abort(&qword_25463BEF0);
  _Unwind_Resume(a1);
}

void sub_20B2A3FE0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463BEF0);
  _Unwind_Resume(a1);
}

void sub_20B2A3FF8()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_20B5AACCD, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B2A4034(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_20B4ED8EC(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24C41E008;
        *v42 = &off_24C417CF8;
        sub_20B4E78A4(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_20B4EDAC0(v79);
        }
LABEL_64:
        v78 = &off_24C41E150;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_20AECFAB8();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_20B4ED800(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24C41DFE8;
  *v42 = &off_24C417CD8;
  sub_20B4E7478(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_20B4ED9D4(v79);
  }
LABEL_102:
  v78 = &off_24C41E150;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_20B2A4828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E7584(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2A485C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2A4870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E79B0(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2A48A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2A48B8()
{
  return 65792;
}

_QWORD *sub_20B2A48C4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E78A4(a2, v2);
  if (v3 > 1)
    sub_20AECFAB8();
  return sub_20B4E7798(a2, v2);
}

uint64_t sub_20B2A4904(uint64_t a1, uint64_t a2, __int128 *a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  unint64_t *v15;
  unint64_t v16;
  __int128 v17;
  uint64_t *v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t *v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  __n128 v52;
  std::__shared_weak_count *v53;
  uint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _BYTE v65[32];
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t (**v70)();
  uint64_t *v71;
  std::__shared_weak_count *v72;
  uint64_t v73[2];
  _QWORD v74[3];
  __int128 v75;
  uint64_t v76;
  uint64_t v77;

  v77 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24C417618;
  v5 = *(unsigned int *)(a2 + 32);
  v4 = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x10)
    v6 = 16;
  else
    v6 = v4;
  LODWORD(v74[0]) = 2;
  v7 = *(_QWORD *)(a2 + 24);
  HIDWORD(v74[0]) = v7;
  v8 = HIDWORD(v7);
  *(_QWORD *)v65 = v74[0];
  *(_DWORD *)&v65[8] = HIDWORD(v7);
  LODWORD(v74[0]) = 1;
  *(_QWORD *)((char *)v74 + 4) = v5 | (v6 << 32);
  *(_QWORD *)&v65[12] = v74[0];
  *(_DWORD *)&v65[20] = v6;
  *(_QWORD *)&v65[24] = v7;
  v66 = *(_QWORD *)((char *)v74 + 4);
  v63 = a3[1];
  v64 = a3[2];
  v62 = *a3;
  *(_QWORD *)a1 = off_24C417078;
  *(_DWORD *)(a1 + 8) = 0;
  if ((_DWORD)v7 && HIDWORD(v7))
  {
    sub_20B294184(0, 7, (uint64_t)v65, a1 + 16);
    LODWORD(v8) = *(_DWORD *)&v65[28];
    v9 = a1 + 48;
    if (!*(_DWORD *)&v65[24])
      goto LABEL_19;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24C41E150;
    *(_DWORD *)(a1 + 40) = 0;
    v9 = a1 + 48;
    if (!(_DWORD)v7)
      goto LABEL_19;
  }
  if ((_DWORD)v8)
  {
    if (*(_DWORD *)(a1 + 40))
      sub_20AECFAB8();
    v10 = *(_QWORD *)(a1 + 24);
    v11 = *(std::__shared_weak_count **)(a1 + 32);
    *(_QWORD *)&v67 = &off_24C41E150;
    *((_QWORD *)&v67 + 1) = v10;
    *(_QWORD *)&v68 = v11;
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(p_shared_owners);
      while (__stxr(v13 + 1, p_shared_owners));
    }
    sub_20B2944F4((uint64_t)v74, (uint64_t)&v67);
    v14 = v75;
    *(_OWORD *)v9 = *(_OWORD *)&v74[1];
    *(_OWORD *)(v9 + 16) = v14;
    *(_QWORD *)(v9 + 32) = v76;
    *(_QWORD *)&v67 = &off_24C41E150;
    if (v11)
    {
      v15 = (unint64_t *)&v11->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    goto LABEL_20;
  }
LABEL_19:
  v17 = *(_OWORD *)&v65[16];
  *(_OWORD *)v9 = *(_OWORD *)v65;
  *(_OWORD *)(v9 + 16) = v17;
  *(_QWORD *)(v9 + 32) = v66;
LABEL_20:
  v67 = v62;
  v68 = v63;
  v69 = v64;
  if (*(_DWORD *)(a1 + 40) > 2u)
    goto LABEL_85;
  v18 = *(uint64_t **)(a1 + 24);
  if (!v18)
    goto LABEL_82;
  v20 = *v18;
  v19 = (std::__shared_weak_count *)v18[1];
  if (!v19)
    goto LABEL_27;
  v21 = (unint64_t *)&v19->__shared_owners_;
  do
    v22 = __ldxr(v21);
  while (__stxr(v22 + 1, v21));
  do
    v23 = __ldaxr(v21);
  while (__stlxr(v23 - 1, v21));
  if (!v23)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
    if (!v20)
      goto LABEL_82;
  }
  else
  {
LABEL_27:
    if (!v20)
      goto LABEL_82;
  }
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 == 2)
  {
    v43 = *(uint64_t **)(a1 + 24);
    v44 = *(std::__shared_weak_count **)(a1 + 32);
    v71 = v43;
    v72 = v44;
    if (v44)
    {
      v45 = (unint64_t *)&v44->__shared_owners_;
      do
        v46 = __ldxr(v45);
      while (__stxr(v46 + 1, v45));
    }
    v70 = &off_24C41E008;
    if (v43)
    {
      v48 = *v43;
      v47 = (std::__shared_weak_count *)v43[1];
      if (v47)
      {
        v49 = (unint64_t *)&v47->__shared_owners_;
        do
          v50 = __ldxr(v49);
        while (__stxr(v50 + 1, v49));
        do
          v51 = __ldaxr(v49);
        while (__stlxr(v51 - 1, v49));
        if (!v51)
        {
          ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
          std::__shared_weak_count::__release_weak(v47);
        }
      }
      if (v48)
        goto LABEL_68;
    }
    goto LABEL_69;
  }
  if (v24 == 1)
  {
    v34 = *(uint64_t **)(a1 + 24);
    v35 = *(std::__shared_weak_count **)(a1 + 32);
    v71 = v34;
    v72 = v35;
    if (v35)
    {
      v36 = (unint64_t *)&v35->__shared_owners_;
      do
        v37 = __ldxr(v36);
      while (__stxr(v37 + 1, v36));
    }
    v70 = &off_24C41E008;
    if (v34)
    {
      v39 = *v34;
      v38 = (std::__shared_weak_count *)v34[1];
      if (v38)
      {
        v40 = (unint64_t *)&v38->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
          std::__shared_weak_count::__release_weak(v38);
        }
      }
      if (v39)
        goto LABEL_68;
    }
    goto LABEL_69;
  }
  if (v24)
LABEL_85:
    sub_20AECFAB8();
  v25 = *(uint64_t **)(a1 + 24);
  v26 = *(std::__shared_weak_count **)(a1 + 32);
  v71 = v25;
  v72 = v26;
  if (v26)
  {
    v27 = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  v70 = &off_24C41E008;
  if (v25)
  {
    v30 = *v25;
    v29 = (std::__shared_weak_count *)v25[1];
    if (v29)
    {
      v31 = (unint64_t *)&v29->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
    if (v30)
LABEL_68:
      sub_20B4ED8EC((uint64_t)v71);
  }
LABEL_69:
  sub_20B2950F0((uint64_t)v74, a1);
  v73[0] = (uint64_t)&v67;
  v73[1] = (uint64_t)v74;
  v52.n128_u64[0] = sub_20AFE741C(v73);
  if (v71)
  {
    v54 = *v71;
    v53 = (std::__shared_weak_count *)v71[1];
    if (v53)
    {
      v55 = (unint64_t *)&v53->__shared_owners_;
      do
        v56 = __ldxr(v55);
      while (__stxr(v56 + 1, v55));
      do
        v57 = __ldaxr(v55);
      while (__stlxr(v57 - 1, v55));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v53->__on_zero_shared)(v53, v52);
        std::__shared_weak_count::__release_weak(v53);
        if (!v54)
          goto LABEL_77;
        goto LABEL_76;
      }
    }
    if (v54)
LABEL_76:
      sub_20B4EDAC0((uint64_t)v71);
  }
LABEL_77:
  v70 = &off_24C41E150;
  v58 = v72;
  if (v72)
  {
    v59 = (unint64_t *)&v72->__shared_owners_;
    do
      v60 = __ldaxr(v59);
    while (__stlxr(v60 - 1, v59));
    if (!v60)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v58->__on_zero_shared)(v58, v52);
      std::__shared_weak_count::__release_weak(v58);
    }
  }
LABEL_82:
  *(_QWORD *)a1 = off_24C417618;
  return a1;
}

void sub_20B2A4DF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::__shared_weak_count *a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *p_shared_owners;
  unint64_t v35;
  uint64_t v36;

  if (a29)
  {
    p_shared_owners = (unint64_t *)&a29->__shared_owners_;
    do
      v35 = __ldaxr(p_shared_owners);
    while (__stlxr(v35 - 1, p_shared_owners));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))a29->__on_zero_shared)(a29);
      std::__shared_weak_count::__release_weak(a29);
    }
  }
  *(_QWORD *)v29 = v31;
  v36 = *(unsigned int *)(v29 + 40);
  if ((_DWORD)v36 != -1)
    ((void (*)(uint64_t, uint64_t))off_24C418120[v36])(v32 - 136, v30);
  *(_DWORD *)(v29 + 40) = -1;
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B2A4F40(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C417078;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

_QWORD *sub_20B2A4FA4(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];
  std::__shared_weak_count *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v3 = *(std::__shared_weak_count **)(a2 + 16);
  v11[0] = &off_24C41E150;
  v11[1] = v4;
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20B294A0C((uint64_t)a1, (uint64_t)v11);
  v11[0] = &off_24C41E150;
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *a1 = off_24C417618;
  return a1;
}

void sub_20B2A504C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2A5060(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24C41E150;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B2944F4(a1, (uint64_t)&v27);
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24C41E150;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 2;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 2 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
  v20 = __PAIR64__(DWORD1(v30), 2);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2A5288(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_20B2A52A4(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24C41E150;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B2944F4((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24C41E150;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 2;
  *(_QWORD *)&v33[4] = v16;
  v17 = 2 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 2);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2A54EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2A5508()
{
  return 7;
}

_UNKNOWN **sub_20B2A5510()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE28))
    return &off_253EC31A8;
  __cxa_guard_release(&qword_25463BE28);
  return &off_253EC31A8;
}

void sub_20B2A5564(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24C41DFE8;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_20B4ED800((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24C41DFE8;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_20AECFAB8();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24C41DFE8;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_20B2A52A4((uint64_t)v42, a1);
  sub_20B2A52A4((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_20B2A4904(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_20B4ED9D4((uint64_t)v45);
LABEL_45:
  v44 = &off_24C41E150;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_20B2A5928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x20BD3583C](v14, 0x10A3C4049419736);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2A5954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2A5968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2A597C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E736C(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_20AECFAB8();
    return sub_20B4E736C(a2, v2);
  }
  return sub_20B4E7478(a2, v2);
}

double sub_20B2A59BC(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56[3];
  _OWORD v57[3];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C41DF08, (const struct __class_type_info *)&unk_24C417F00, 0);
  if (!v4)
  {
    (*(void (**)(_OWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v57, lpsrc, 7);
    v16 = *(_QWORD *)&v57[0];
    v18 = *(_OWORD *)(*(_QWORD *)&v57[0] + 16);
    v17 = *(_OWORD *)(*(_QWORD *)&v57[0] + 32);
    v50 = **(_OWORD **)&v57[0];
    v51 = v18;
    v52 = v17;
    *(_QWORD *)&v57[0] = 0;
    MEMORY[0x20BD3583C](v16, 0xC400A2AC0F1, v19, v20, v21, v22);
    sub_20B2A5060((uint64_t)v57, a1);
    *(_QWORD *)&v56[0] = &v50;
    *((_QWORD *)&v56[0] + 1) = v57;
    *(_QWORD *)&result = sub_20AFE741C((uint64_t *)v56);
    return result;
  }
  v5 = (uint64_t)v4;
  v6 = *((_DWORD *)v4 + 10);
  if (v6 == 2)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v25 = __ldxr(p_shared_owners);
      while (__stxr(v25 + 1, p_shared_owners));
    }
    if (v8)
    {
      v27 = *v8;
      v26 = (std::__shared_weak_count *)v8[1];
      if (v26)
      {
        v28 = (unint64_t *)&v26->__shared_owners_;
        do
          v29 = __ldxr(v28);
        while (__stxr(v29 + 1, v28));
        do
          v30 = __ldaxr(v28);
        while (__stlxr(v30 - 1, v28));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      if (v27)
        goto LABEL_41;
    }
  }
  else if (v6 == 1)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v31 = (unint64_t *)&v7->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_41;
    }
  }
  else
  {
    if (v6)
      sub_20AECFAB8();
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v9 = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    if (v8)
    {
      v12 = *v8;
      v11 = (std::__shared_weak_count *)v8[1];
      if (v11)
      {
        v13 = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
        do
          v15 = __ldaxr(v13);
        while (__stlxr(v15 - 1, v13));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      if (v12)
LABEL_41:
        sub_20B4ED800((uint64_t)v8);
    }
  }
  sub_20B2A52A4((uint64_t)v57, v5);
  v56[0] = v57[0];
  v56[1] = v57[1];
  v56[2] = v57[2];
  sub_20B2A4904((uint64_t)&v50, (uint64_t)v57 + 8, v56);
  if (v8)
  {
    v39 = *v8;
    v38 = (std::__shared_weak_count *)v8[1];
    if (v38)
    {
      v40 = (unint64_t *)&v38->__shared_owners_;
      do
        v41 = __ldxr(v40);
      while (__stxr(v41 + 1, v40));
      do
        v42 = __ldaxr(v40);
      while (__stlxr(v42 - 1, v40));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
        if (!v39)
          goto LABEL_50;
        goto LABEL_49;
      }
    }
    if (v39)
LABEL_49:
      sub_20B4ED9D4((uint64_t)v8);
  }
LABEL_50:
  if (v7)
  {
    v43 = (unint64_t *)&v7->__shared_owners_;
    do
      v44 = __ldaxr(v43);
    while (__stlxr(v44 - 1, v43));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v45 = DWORD2(v52);
  *(_DWORD *)(a1 + 8) = DWORD2(v50);
  v46 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v46 == -1)
  {
    if ((_DWORD)v45 == -1)
    {
      result = *(double *)&v53;
      v49 = v54;
      *(_OWORD *)(a1 + 48) = v53;
      *(_OWORD *)(a1 + 64) = v49;
      *(_QWORD *)(a1 + 80) = v55;
      return result;
    }
  }
  else if ((_DWORD)v45 == -1)
  {
    ((void (*)(_OWORD *, uint64_t))off_24C418120[v46])(v57, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_60;
  }
  *(_QWORD *)&v57[0] = a1 + 16;
  ((void (*)(_OWORD *))off_24C418150[v45])(v57);
LABEL_60:
  v47 = DWORD2(v52);
  result = *(double *)&v53;
  v48 = v54;
  *(_OWORD *)(a1 + 48) = v53;
  *(_OWORD *)(a1 + 64) = v48;
  *(_QWORD *)(a1 + 80) = v55;
  *(_QWORD *)&v50 = off_24C417078;
  if ((_DWORD)v47 != -1)
    ((void (*)(_OWORD *, __int128 *))off_24C418120[v47])(v57, &v51);
  return result;
}

uint64_t sub_20B2A5ED0(uint64_t a1)
{
  _QWORD v2[6];

  sub_20B2A5060((uint64_t)v2, a1);
  return v2[0];
}

double sub_20B2A5EF8@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 7
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2A5060((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_20B2A5F98@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 7
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2A52A4((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_20B2A6038()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BF20);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BF20))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_25463BF28);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463BF28))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25463BF30);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BF30))
    {
LABEL_13:
      if (byte_25463C477 < 0)
      {
        sub_20AEC60F4(&xmmword_25463C448, (void *)qword_25463C460, unk_25463C468);
      }
      else
      {
        xmmword_25463C448 = *(_OWORD *)&qword_25463C460;
        unk_25463C458 = unk_25463C470;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C448, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BF28);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_25463BF38);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463BF38))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Two16f>]", &qword_25463C478);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C478, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BF38);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_25463BF40);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BF40))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_25463BF48);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25463BF48))
      {
        if (byte_25463C490[23] < 0)
          sub_20AEC60F4(&__p, *(void **)byte_25463C490, *(unint64_t *)&byte_25463C490[8]);
        else
          __p = *(std::string *)byte_25463C490;
        sub_20B52B814(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_25463C4A8);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C4A8, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463BF48);
      }
      if (byte_25463C4BF < 0)
      {
        sub_20AEC60F4(v17, (void *)xmmword_25463C4A8, *((unint64_t *)&xmmword_25463C4A8 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_25463C4A8;
        v18 = unk_25463C4B8;
      }
      sub_20AFC882C((char *)v17, (std::string *)&qword_25463C460);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C460, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BF30);
      goto LABEL_13;
    }
    if (byte_25463C48F >= 0)
      v6 = byte_25463C48F;
    else
      v6 = unk_25463C480;
    if (byte_25463C48F >= 0)
      v7 = &qword_25463C478;
    else
      v7 = (uint64_t *)qword_25463C478;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_25463C490[8] = v6;
      *(_QWORD *)&byte_25463C490[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_25463C490 = v13;
    }
    else
    {
      v13 = byte_25463C490;
      byte_25463C490[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_25463C490, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463BF40);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_25463C45F < 0)
  {
    sub_20AEC60F4(&xmmword_25463C430, (void *)xmmword_25463C448, *((unint64_t *)&xmmword_25463C448 + 1));
  }
  else
  {
    xmmword_25463C430 = xmmword_25463C448;
    unk_25463C440 = unk_25463C458;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C430, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463BF20);
LABEL_2:
  if (byte_25463C447 >= 0)
    return &xmmword_25463C430;
  else
    return (__int128 *)xmmword_25463C430;
}

void sub_20B2A648C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25463BF30);
  __cxa_guard_abort(&qword_25463BF28);
  __cxa_guard_abort(&qword_25463BF20);
  _Unwind_Resume(a1);
}

void sub_20B2A6528(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463BF20);
  _Unwind_Resume(a1);
}

void sub_20B2A6540()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_20B5AACCD, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B2A657C(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_20B4ED8EC(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24C41E008;
        *v42 = &off_24C417CF8;
        sub_20B4E78A4(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_20B4EDAC0(v79);
        }
LABEL_64:
        v78 = &off_24C41E150;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_20AECFAB8();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_20B4ED800(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24C41DFE8;
  *v42 = &off_24C417CD8;
  sub_20B4E7478(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_20B4ED9D4(v79);
  }
LABEL_102:
  v78 = &off_24C41E150;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_20B2A6D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E7584(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2A6DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2A6DB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E79B0(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2A6DEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2A6E00()
{
  return 65792;
}

_QWORD *sub_20B2A6E0C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E78A4(a2, v2);
  if (v3 > 1)
    sub_20AECFAB8();
  return sub_20B4E7798(a2, v2);
}

uint64_t sub_20B2A6E4C(uint64_t a1, uint64_t a2, __int128 *a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  unint64_t *v15;
  unint64_t v16;
  __int128 v17;
  uint64_t *v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t *v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  __n128 v52;
  std::__shared_weak_count *v53;
  uint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _BYTE v65[32];
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t (**v70)();
  uint64_t *v71;
  std::__shared_weak_count *v72;
  uint64_t v73[2];
  _QWORD v74[3];
  __int128 v75;
  uint64_t v76;
  uint64_t v77;

  v77 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24C4176A8;
  v5 = *(unsigned int *)(a2 + 32);
  v4 = *(_DWORD *)(a2 + 36);
  if (v4 <= 8)
    v6 = 8;
  else
    v6 = v4;
  LODWORD(v74[0]) = 2;
  v7 = *(_QWORD *)(a2 + 24);
  HIDWORD(v74[0]) = v7;
  v8 = HIDWORD(v7);
  *(_QWORD *)v65 = v74[0];
  *(_DWORD *)&v65[8] = HIDWORD(v7);
  LODWORD(v74[0]) = 1;
  *(_QWORD *)((char *)v74 + 4) = v5 | (v6 << 32);
  *(_QWORD *)&v65[12] = v74[0];
  *(_DWORD *)&v65[20] = v6;
  *(_QWORD *)&v65[24] = v7;
  v66 = *(_QWORD *)((char *)v74 + 4);
  v63 = a3[1];
  v64 = a3[2];
  v62 = *a3;
  *(_QWORD *)a1 = off_24C417228;
  *(_DWORD *)(a1 + 8) = 0;
  if ((_DWORD)v7 && HIDWORD(v7))
  {
    sub_20B297B3C(0, 8, (uint64_t)v65, a1 + 16);
    LODWORD(v8) = *(_DWORD *)&v65[28];
    v9 = a1 + 48;
    if (!*(_DWORD *)&v65[24])
      goto LABEL_19;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24C41E150;
    *(_DWORD *)(a1 + 40) = 0;
    v9 = a1 + 48;
    if (!(_DWORD)v7)
      goto LABEL_19;
  }
  if ((_DWORD)v8)
  {
    if (*(_DWORD *)(a1 + 40))
      sub_20AECFAB8();
    v10 = *(_QWORD *)(a1 + 24);
    v11 = *(std::__shared_weak_count **)(a1 + 32);
    *(_QWORD *)&v67 = &off_24C41E150;
    *((_QWORD *)&v67 + 1) = v10;
    *(_QWORD *)&v68 = v11;
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(p_shared_owners);
      while (__stxr(v13 + 1, p_shared_owners));
    }
    sub_20B297EAC((uint64_t)v74, (uint64_t)&v67);
    v14 = v75;
    *(_OWORD *)v9 = *(_OWORD *)&v74[1];
    *(_OWORD *)(v9 + 16) = v14;
    *(_QWORD *)(v9 + 32) = v76;
    *(_QWORD *)&v67 = &off_24C41E150;
    if (v11)
    {
      v15 = (unint64_t *)&v11->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    goto LABEL_20;
  }
LABEL_19:
  v17 = *(_OWORD *)&v65[16];
  *(_OWORD *)v9 = *(_OWORD *)v65;
  *(_OWORD *)(v9 + 16) = v17;
  *(_QWORD *)(v9 + 32) = v66;
LABEL_20:
  v67 = v62;
  v68 = v63;
  v69 = v64;
  if (*(_DWORD *)(a1 + 40) > 2u)
    goto LABEL_85;
  v18 = *(uint64_t **)(a1 + 24);
  if (!v18)
    goto LABEL_82;
  v20 = *v18;
  v19 = (std::__shared_weak_count *)v18[1];
  if (!v19)
    goto LABEL_27;
  v21 = (unint64_t *)&v19->__shared_owners_;
  do
    v22 = __ldxr(v21);
  while (__stxr(v22 + 1, v21));
  do
    v23 = __ldaxr(v21);
  while (__stlxr(v23 - 1, v21));
  if (!v23)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
    if (!v20)
      goto LABEL_82;
  }
  else
  {
LABEL_27:
    if (!v20)
      goto LABEL_82;
  }
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 == 2)
  {
    v43 = *(uint64_t **)(a1 + 24);
    v44 = *(std::__shared_weak_count **)(a1 + 32);
    v71 = v43;
    v72 = v44;
    if (v44)
    {
      v45 = (unint64_t *)&v44->__shared_owners_;
      do
        v46 = __ldxr(v45);
      while (__stxr(v46 + 1, v45));
    }
    v70 = &off_24C41E008;
    if (v43)
    {
      v48 = *v43;
      v47 = (std::__shared_weak_count *)v43[1];
      if (v47)
      {
        v49 = (unint64_t *)&v47->__shared_owners_;
        do
          v50 = __ldxr(v49);
        while (__stxr(v50 + 1, v49));
        do
          v51 = __ldaxr(v49);
        while (__stlxr(v51 - 1, v49));
        if (!v51)
        {
          ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
          std::__shared_weak_count::__release_weak(v47);
        }
      }
      if (v48)
        goto LABEL_68;
    }
    goto LABEL_69;
  }
  if (v24 == 1)
  {
    v34 = *(uint64_t **)(a1 + 24);
    v35 = *(std::__shared_weak_count **)(a1 + 32);
    v71 = v34;
    v72 = v35;
    if (v35)
    {
      v36 = (unint64_t *)&v35->__shared_owners_;
      do
        v37 = __ldxr(v36);
      while (__stxr(v37 + 1, v36));
    }
    v70 = &off_24C41E008;
    if (v34)
    {
      v39 = *v34;
      v38 = (std::__shared_weak_count *)v34[1];
      if (v38)
      {
        v40 = (unint64_t *)&v38->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
          std::__shared_weak_count::__release_weak(v38);
        }
      }
      if (v39)
        goto LABEL_68;
    }
    goto LABEL_69;
  }
  if (v24)
LABEL_85:
    sub_20AECFAB8();
  v25 = *(uint64_t **)(a1 + 24);
  v26 = *(std::__shared_weak_count **)(a1 + 32);
  v71 = v25;
  v72 = v26;
  if (v26)
  {
    v27 = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  v70 = &off_24C41E008;
  if (v25)
  {
    v30 = *v25;
    v29 = (std::__shared_weak_count *)v25[1];
    if (v29)
    {
      v31 = (unint64_t *)&v29->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
    if (v30)
LABEL_68:
      sub_20B4ED8EC((uint64_t)v71);
  }
LABEL_69:
  sub_20B298AA8((uint64_t)v74, a1);
  v73[0] = (uint64_t)&v67;
  v73[1] = (uint64_t)v74;
  v52.n128_f32[0] = sub_20AFE84BC(v73);
  if (v71)
  {
    v54 = *v71;
    v53 = (std::__shared_weak_count *)v71[1];
    if (v53)
    {
      v55 = (unint64_t *)&v53->__shared_owners_;
      do
        v56 = __ldxr(v55);
      while (__stxr(v56 + 1, v55));
      do
        v57 = __ldaxr(v55);
      while (__stlxr(v57 - 1, v55));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v53->__on_zero_shared)(v53, v52);
        std::__shared_weak_count::__release_weak(v53);
        if (!v54)
          goto LABEL_77;
        goto LABEL_76;
      }
    }
    if (v54)
LABEL_76:
      sub_20B4EDAC0((uint64_t)v71);
  }
LABEL_77:
  v70 = &off_24C41E150;
  v58 = v72;
  if (v72)
  {
    v59 = (unint64_t *)&v72->__shared_owners_;
    do
      v60 = __ldaxr(v59);
    while (__stlxr(v60 - 1, v59));
    if (!v60)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v58->__on_zero_shared)(v58, v52);
      std::__shared_weak_count::__release_weak(v58);
    }
  }
LABEL_82:
  *(_QWORD *)a1 = off_24C4176A8;
  return a1;
}

void sub_20B2A7340(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::__shared_weak_count *a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *p_shared_owners;
  unint64_t v35;
  uint64_t v36;

  if (a29)
  {
    p_shared_owners = (unint64_t *)&a29->__shared_owners_;
    do
      v35 = __ldaxr(p_shared_owners);
    while (__stlxr(v35 - 1, p_shared_owners));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))a29->__on_zero_shared)(a29);
      std::__shared_weak_count::__release_weak(a29);
    }
  }
  *(_QWORD *)v29 = v31;
  v36 = *(unsigned int *)(v29 + 40);
  if ((_DWORD)v36 != -1)
    ((void (*)(uint64_t, uint64_t))off_24C418120[v36])(v32 - 136, v30);
  *(_DWORD *)(v29 + 40) = -1;
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B2A7488(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C417228;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

_QWORD *sub_20B2A74EC(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];
  std::__shared_weak_count *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v3 = *(std::__shared_weak_count **)(a2 + 16);
  v11[0] = &off_24C41E150;
  v11[1] = v4;
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20B2983C4((uint64_t)a1, (uint64_t)v11);
  v11[0] = &off_24C41E150;
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *a1 = off_24C4176A8;
  return a1;
}

void sub_20B2A7594(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2A75A8(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24C41E150;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B297EAC(a1, (uint64_t)&v27);
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24C41E150;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 2;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 2 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
  v20 = __PAIR64__(DWORD1(v30), 2);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2A77D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_20B2A77EC(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24C41E150;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B297EAC((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24C41E150;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 2;
  *(_QWORD *)&v33[4] = v16;
  v17 = 2 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 2);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2A7A34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2A7A50()
{
  return 8;
}

_UNKNOWN **sub_20B2A7A58()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE28))
    return &off_253EC31A8;
  __cxa_guard_release(&qword_25463BE28);
  return &off_253EC31A8;
}

void sub_20B2A7AAC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24C41DFE8;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_20B4ED800((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24C41DFE8;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_20AECFAB8();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24C41DFE8;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_20B2A77EC((uint64_t)v42, a1);
  sub_20B2A77EC((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_20B2A6E4C(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_20B4ED9D4((uint64_t)v45);
LABEL_45:
  v44 = &off_24C41E150;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_20B2A7E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x20BD3583C](v14, 0x10A3C4049419736);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2A7E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2A7EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2A7EC4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E736C(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_20AECFAB8();
    return sub_20B4E736C(a2, v2);
  }
  return sub_20B4E7478(a2, v2);
}

double sub_20B2A7F04(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56[3];
  _OWORD v57[3];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C41DF08, (const struct __class_type_info *)&unk_24C417F18, 0);
  if (!v4)
  {
    (*(void (**)(_OWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v57, lpsrc, 8);
    v16 = *(_QWORD *)&v57[0];
    v18 = *(_OWORD *)(*(_QWORD *)&v57[0] + 16);
    v17 = *(_OWORD *)(*(_QWORD *)&v57[0] + 32);
    v50 = **(_OWORD **)&v57[0];
    v51 = v18;
    v52 = v17;
    *(_QWORD *)&v57[0] = 0;
    MEMORY[0x20BD3583C](v16, 0xC400A2AC0F1, v19, v20, v21, v22);
    sub_20B2A75A8((uint64_t)v57, a1);
    *(_QWORD *)&v56[0] = &v50;
    *((_QWORD *)&v56[0] + 1) = v57;
    *(float *)&result = sub_20AFE84BC((uint64_t *)v56);
    return result;
  }
  v5 = (uint64_t)v4;
  v6 = *((_DWORD *)v4 + 10);
  if (v6 == 2)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v25 = __ldxr(p_shared_owners);
      while (__stxr(v25 + 1, p_shared_owners));
    }
    if (v8)
    {
      v27 = *v8;
      v26 = (std::__shared_weak_count *)v8[1];
      if (v26)
      {
        v28 = (unint64_t *)&v26->__shared_owners_;
        do
          v29 = __ldxr(v28);
        while (__stxr(v29 + 1, v28));
        do
          v30 = __ldaxr(v28);
        while (__stlxr(v30 - 1, v28));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      if (v27)
        goto LABEL_41;
    }
  }
  else if (v6 == 1)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v31 = (unint64_t *)&v7->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_41;
    }
  }
  else
  {
    if (v6)
      sub_20AECFAB8();
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v9 = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    if (v8)
    {
      v12 = *v8;
      v11 = (std::__shared_weak_count *)v8[1];
      if (v11)
      {
        v13 = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
        do
          v15 = __ldaxr(v13);
        while (__stlxr(v15 - 1, v13));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      if (v12)
LABEL_41:
        sub_20B4ED800((uint64_t)v8);
    }
  }
  sub_20B2A77EC((uint64_t)v57, v5);
  v56[0] = v57[0];
  v56[1] = v57[1];
  v56[2] = v57[2];
  sub_20B2A6E4C((uint64_t)&v50, (uint64_t)v57 + 8, v56);
  if (v8)
  {
    v39 = *v8;
    v38 = (std::__shared_weak_count *)v8[1];
    if (v38)
    {
      v40 = (unint64_t *)&v38->__shared_owners_;
      do
        v41 = __ldxr(v40);
      while (__stxr(v41 + 1, v40));
      do
        v42 = __ldaxr(v40);
      while (__stlxr(v42 - 1, v40));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
        if (!v39)
          goto LABEL_50;
        goto LABEL_49;
      }
    }
    if (v39)
LABEL_49:
      sub_20B4ED9D4((uint64_t)v8);
  }
LABEL_50:
  if (v7)
  {
    v43 = (unint64_t *)&v7->__shared_owners_;
    do
      v44 = __ldaxr(v43);
    while (__stlxr(v44 - 1, v43));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v45 = DWORD2(v52);
  *(_DWORD *)(a1 + 8) = DWORD2(v50);
  v46 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v46 == -1)
  {
    if ((_DWORD)v45 == -1)
    {
      result = *(double *)&v53;
      v49 = v54;
      *(_OWORD *)(a1 + 48) = v53;
      *(_OWORD *)(a1 + 64) = v49;
      *(_QWORD *)(a1 + 80) = v55;
      return result;
    }
  }
  else if ((_DWORD)v45 == -1)
  {
    ((void (*)(_OWORD *, uint64_t))off_24C418120[v46])(v57, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_60;
  }
  *(_QWORD *)&v57[0] = a1 + 16;
  ((void (*)(_OWORD *))off_24C418150[v45])(v57);
LABEL_60:
  v47 = DWORD2(v52);
  result = *(double *)&v53;
  v48 = v54;
  *(_OWORD *)(a1 + 48) = v53;
  *(_OWORD *)(a1 + 64) = v48;
  *(_QWORD *)(a1 + 80) = v55;
  *(_QWORD *)&v50 = off_24C417228;
  if ((_DWORD)v47 != -1)
    ((void (*)(_OWORD *, __int128 *))off_24C418120[v47])(v57, &v51);
  return result;
}

uint64_t sub_20B2A8418(uint64_t a1)
{
  _QWORD v2[6];

  sub_20B2A75A8((uint64_t)v2, a1);
  return v2[0];
}

double sub_20B2A8440@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 8
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2A75A8((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_20B2A84E0@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 8
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2A77EC((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_20B2A8580()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BF50);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BF50))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_25463BF58);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463BF58))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25463BF60);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BF60))
    {
LABEL_13:
      if (byte_25463C507 < 0)
      {
        sub_20AEC60F4(&xmmword_25463C4D8, (void *)qword_25463C4F0, unk_25463C4F8);
      }
      else
      {
        xmmword_25463C4D8 = *(_OWORD *)&qword_25463C4F0;
        unk_25463C4E8 = unk_25463C500;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C4D8, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BF58);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_25463BF68);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463BF68))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Two32f>]", &qword_25463C508);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C508, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BF68);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_25463BF70);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BF70))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_25463BF78);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25463BF78))
      {
        if (byte_25463C520[23] < 0)
          sub_20AEC60F4(&__p, *(void **)byte_25463C520, *(unint64_t *)&byte_25463C520[8]);
        else
          __p = *(std::string *)byte_25463C520;
        sub_20B52B814(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_25463C538);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C538, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463BF78);
      }
      if (byte_25463C54F < 0)
      {
        sub_20AEC60F4(v17, (void *)xmmword_25463C538, *((unint64_t *)&xmmword_25463C538 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_25463C538;
        v18 = unk_25463C548;
      }
      sub_20AFC93D0((char *)v17, (std::string *)&qword_25463C4F0);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C4F0, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BF60);
      goto LABEL_13;
    }
    if (byte_25463C51F >= 0)
      v6 = byte_25463C51F;
    else
      v6 = unk_25463C510;
    if (byte_25463C51F >= 0)
      v7 = &qword_25463C508;
    else
      v7 = (uint64_t *)qword_25463C508;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_25463C520[8] = v6;
      *(_QWORD *)&byte_25463C520[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_25463C520 = v13;
    }
    else
    {
      v13 = byte_25463C520;
      byte_25463C520[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_25463C520, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463BF70);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_25463C4EF < 0)
  {
    sub_20AEC60F4(&xmmword_25463C4C0, (void *)xmmword_25463C4D8, *((unint64_t *)&xmmword_25463C4D8 + 1));
  }
  else
  {
    xmmword_25463C4C0 = xmmword_25463C4D8;
    unk_25463C4D0 = unk_25463C4E8;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C4C0, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463BF50);
LABEL_2:
  if (byte_25463C4D7 >= 0)
    return &xmmword_25463C4C0;
  else
    return (__int128 *)xmmword_25463C4C0;
}

void sub_20B2A89D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25463BF60);
  __cxa_guard_abort(&qword_25463BF58);
  __cxa_guard_abort(&qword_25463BF50);
  _Unwind_Resume(a1);
}

void sub_20B2A8A70(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463BF50);
  _Unwind_Resume(a1);
}

void sub_20B2A8A88()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_20B5AACCD, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B2A8AC4(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_20B4ED8EC(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24C41E008;
        *v42 = &off_24C417CF8;
        sub_20B4E78A4(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_20B4EDAC0(v79);
        }
LABEL_64:
        v78 = &off_24C41E150;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_20AECFAB8();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_20B4ED800(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24C41DFE8;
  *v42 = &off_24C417CD8;
  sub_20B4E7478(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_20B4ED9D4(v79);
  }
LABEL_102:
  v78 = &off_24C41E150;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_20B2A92B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E7584(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2A92EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2A9300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E79B0(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2A9334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2A9348()
{
  return 65792;
}

_QWORD *sub_20B2A9354@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E78A4(a2, v2);
  if (v3 > 1)
    sub_20AECFAB8();
  return sub_20B4E7798(a2, v2);
}

uint64_t sub_20B2A9394(uint64_t a1, uint64_t a2, __int128 *a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  unint64_t *v15;
  unint64_t v16;
  __int128 v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[32];
  uint64_t v23;
  _QWORD v24[3];
  _BYTE v25[48];
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24C417738;
  v5 = *(unsigned int *)(a2 + 32);
  v4 = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x20)
    v6 = 32;
  else
    v6 = v4;
  *(_DWORD *)v25 = 3;
  v7 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v25[4] = v7;
  v8 = HIDWORD(v7);
  *(_QWORD *)v22 = *(_QWORD *)v25;
  *(_DWORD *)&v22[8] = HIDWORD(v7);
  *(_DWORD *)v25 = 1;
  *(_QWORD *)&v25[4] = v5 | (v6 << 32);
  *(_QWORD *)&v22[12] = *(_QWORD *)v25;
  *(_DWORD *)&v22[20] = v6;
  *(_QWORD *)&v22[24] = v7;
  v23 = *(_QWORD *)&v25[4];
  v20 = a3[1];
  v21 = a3[2];
  v19 = *a3;
  *(_QWORD *)a1 = off_24C416D18;
  *(_DWORD *)(a1 + 8) = 0;
  if ((_DWORD)v7 && HIDWORD(v7))
  {
    sub_20B28C198(0, 17, (uint64_t)v22, a1 + 16);
    LODWORD(v8) = *(_DWORD *)&v22[28];
    v9 = a1 + 48;
    if (!*(_DWORD *)&v22[24])
      goto LABEL_19;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24C41E150;
    *(_DWORD *)(a1 + 40) = 0;
    v9 = a1 + 48;
    if (!(_DWORD)v7)
    {
LABEL_19:
      v17 = *(_OWORD *)&v22[16];
      *(_OWORD *)v9 = *(_OWORD *)v22;
      *(_OWORD *)(v9 + 16) = v17;
      *(_QWORD *)(v9 + 32) = v23;
      goto LABEL_20;
    }
  }
  if (!(_DWORD)v8)
    goto LABEL_19;
  if (*(_DWORD *)(a1 + 40))
    sub_20AECFAB8();
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(std::__shared_weak_count **)(a1 + 32);
  v24[0] = &off_24C41E150;
  v24[1] = v10;
  v24[2] = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
  }
  sub_20B28C508((uint64_t)v25, (uint64_t)v24);
  v14 = *(_OWORD *)&v25[24];
  *(_OWORD *)v9 = *(_OWORD *)&v25[8];
  *(_OWORD *)(v9 + 16) = v14;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)&v25[40];
  v24[0] = &off_24C41E150;
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
LABEL_20:
  *(_OWORD *)v25 = v19;
  *(_OWORD *)&v25[16] = v20;
  *(_OWORD *)&v25[32] = v21;
  sub_20B28CE20(a1, v25);
  *(_QWORD *)a1 = off_24C417738;
  return a1;
}

void sub_20B2A95A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  va_list va;

  va_start(va, a12);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v12);
  _Unwind_Resume(a1);
}

void sub_20B2A95BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

void sub_20B2A95D0(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_20B2A95DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  *(_QWORD *)v20 = v22;
  v24 = *(unsigned int *)(v20 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a20, v21);
  *(_DWORD *)(v20 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2A9618(void *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  JUMPOUT(0x20B2A95D4);
}

uint64_t sub_20B2A9628(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416D18;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

_QWORD *sub_20B2A968C(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];
  std::__shared_weak_count *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v3 = *(std::__shared_weak_count **)(a2 + 16);
  v11[0] = &off_24C41E150;
  v11[1] = v4;
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20B28D254((uint64_t)a1, (uint64_t)v11);
  v11[0] = &off_24C41E150;
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *a1 = off_24C417738;
  return a1;
}

void sub_20B2A9734(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2A9748(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;

  if (*(_DWORD *)(a2 + 40) >= 3u)
LABEL_31:
    sub_20AECFAB8();
  v4 = *(uint64_t **)(a2 + 24);
  if (!v4)
    goto LABEL_17;
  v6 = *v4;
  v5 = (std::__shared_weak_count *)v4[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
LABEL_8:
    if (v6)
      goto LABEL_9;
LABEL_17:
    sub_20B27E5CC(a1, 0, (_DWORD *)(a2 + 72));
    return;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6)
    goto LABEL_17;
LABEL_9:
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_31;
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(std::__shared_weak_count **)(a2 + 32);
  v23 = &off_24C41E150;
  v24 = v10;
  v25 = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v21 = v10;
    v22 = v11;
    do
      v14 = __ldxr(v12);
    while (__stxr(v14 + 1, v12));
  }
  else
  {
    v21 = v10;
    v22 = 0;
  }
  v20 = &off_24C41E150;
  sub_20B28C508(a1, (uint64_t)&v20);
  v20 = &off_24C41E150;
  if (!v11)
    goto LABEL_23;
  v15 = (unint64_t *)&v11->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v23 = &off_24C41E150;
    v17 = v25;
    if (!v25)
      return;
  }
  else
  {
LABEL_23:
    v23 = &off_24C41E150;
    v17 = v25;
    if (!v25)
      return;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
}

void sub_20B2A98F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_20B4E888C(&a9);
  sub_20B4E888C(&a12);
  _Unwind_Resume(a1);
}

void sub_20B2A9914(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;

  if (*(_DWORD *)(a2 + 40) >= 3u)
LABEL_31:
    sub_20AECFAB8();
  v4 = *(uint64_t **)(a2 + 24);
  if (!v4)
    goto LABEL_17;
  v6 = *v4;
  v5 = (std::__shared_weak_count *)v4[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
LABEL_8:
    if (v6)
      goto LABEL_9;
LABEL_17:
    sub_20B27E5CC(a1, 0, (_DWORD *)(a2 + 72));
    return;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6)
    goto LABEL_17;
LABEL_9:
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_31;
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(std::__shared_weak_count **)(a2 + 32);
  v27 = &off_24C41E150;
  v28 = v10;
  v29 = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v21 = v10;
    v22 = v11;
    do
      v14 = __ldxr(v12);
    while (__stxr(v14 + 1, v12));
  }
  else
  {
    v21 = v10;
    v22 = 0;
  }
  v20 = &off_24C41E150;
  sub_20B28C508((uint64_t)&v23, (uint64_t)&v20);
  *(_QWORD *)a1 = v23;
  *(_OWORD *)(a1 + 8) = v24;
  *(_OWORD *)(a1 + 24) = v25;
  *(_QWORD *)(a1 + 40) = v26;
  v20 = &off_24C41E150;
  if (!v11)
    goto LABEL_23;
  v15 = (unint64_t *)&v11->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v27 = &off_24C41E150;
    v17 = v29;
    if (!v29)
      return;
  }
  else
  {
LABEL_23:
    v27 = &off_24C41E150;
    v17 = v29;
    if (!v29)
      return;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
}

void sub_20B2A9AE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_20B4E888C(&a9);
  sub_20B4E888C((_QWORD *)(v9 - 56));
  _Unwind_Resume(a1);
}

uint64_t sub_20B2A9B00()
{
  return 17;
}

_UNKNOWN **sub_20B2A9B08()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE28))
    return &off_253EC31A8;
  __cxa_guard_release(&qword_25463BE28);
  return &off_253EC31A8;
}

void sub_20B2A9B5C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24C41DFE8;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_20B4ED800((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24C41DFE8;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_20AECFAB8();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24C41DFE8;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_20B2A9914((uint64_t)v42, a1);
  sub_20B2A9914((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_20B2A9394(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_20B4ED9D4((uint64_t)v45);
LABEL_45:
  v44 = &off_24C41E150;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_20B2A9F24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x20BD3583C](v14, 0x10A3C4049419736);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2A9F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2A9F64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2A9F78@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E736C(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_20AECFAB8();
    return sub_20B4E736C(a2, v2);
  }
  return sub_20B4E7478(a2, v2);
}

double sub_20B2A9FB8(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  _BYTE *v53;
  _BYTE *v54;
  _BYTE *v55;
  _BYTE *v56;
  int v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65[3];
  __int128 v66;
  __int128 v67;
  __int128 v68;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C41DF08, (const struct __class_type_info *)&unk_24C417F30, 0);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = *((_DWORD *)v4 + 10);
    if (v6 == 2)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
      }
      if (v8)
      {
        v22 = *v8;
        v21 = (std::__shared_weak_count *)v8[1];
        if (v21)
        {
          v23 = (unint64_t *)&v21->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        if (v22)
          goto LABEL_43;
      }
    }
    else if (v6 == 1)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v26 = (unint64_t *)&v7->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
      }
      if (v8)
      {
        v29 = *v8;
        v28 = (std::__shared_weak_count *)v8[1];
        if (v28)
        {
          v30 = (unint64_t *)&v28->__shared_owners_;
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 1, v30));
          do
            v32 = __ldaxr(v30);
          while (__stlxr(v32 - 1, v30));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        if (v29)
          goto LABEL_43;
      }
    }
    else
    {
      if (v6)
        sub_20AECFAB8();
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v9 = (unint64_t *)&v7->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      if (v8)
      {
        v12 = *v8;
        v11 = (std::__shared_weak_count *)v8[1];
        if (v11)
        {
          v13 = (unint64_t *)&v11->__shared_owners_;
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
          do
            v15 = __ldaxr(v13);
          while (__stlxr(v15 - 1, v13));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        if (v12)
LABEL_43:
          sub_20B4ED800((uint64_t)v8);
      }
    }
    sub_20B2A9914((uint64_t)&v66, v5);
    v65[0] = v66;
    v65[1] = v67;
    v65[2] = v68;
    sub_20B2A9394((uint64_t)&v59, (uint64_t)&v66 + 8, v65);
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
          if (!v34)
            goto LABEL_52;
          goto LABEL_51;
        }
      }
      if (v34)
LABEL_51:
        sub_20B4ED9D4((uint64_t)v8);
    }
LABEL_52:
    if (v7)
    {
      v38 = (unint64_t *)&v7->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v40 = DWORD2(v61);
    *(_DWORD *)(a1 + 8) = DWORD2(v59);
    v41 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v41 == -1)
    {
      if ((_DWORD)v40 == -1)
      {
        result = *(double *)&v62;
        v58 = v63;
        *(_OWORD *)(a1 + 48) = v62;
        *(_OWORD *)(a1 + 64) = v58;
        *(_QWORD *)(a1 + 80) = v64;
        return result;
      }
    }
    else if ((_DWORD)v40 == -1)
    {
      ((void (*)(__int128 *, uint64_t))off_24C418120[v41])(&v66, a1 + 16);
      *(_DWORD *)(a1 + 40) = -1;
      goto LABEL_62;
    }
    *(_QWORD *)&v66 = a1 + 16;
    ((void (*)(__int128 *))off_24C418150[v40])(&v66);
LABEL_62:
    v42 = DWORD2(v61);
    result = *(double *)&v62;
    v43 = v63;
    *(_OWORD *)(a1 + 48) = v62;
    *(_OWORD *)(a1 + 64) = v43;
    *(_QWORD *)(a1 + 80) = v64;
    *(_QWORD *)&v59 = off_24C416D18;
    if ((_DWORD)v42 != -1)
      ((void (*)(__int128 *, __int128 *))off_24C418120[v42])(&v66, &v60);
    return result;
  }
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v66, lpsrc, 17);
  v17 = *(_OWORD *)(v66 + 16);
  v16 = *(_OWORD *)(v66 + 32);
  v59 = *(_OWORD *)v66;
  v60 = v17;
  v61 = v16;
  *(_QWORD *)&v66 = 0;
  MEMORY[0x20BD3583C]();
  sub_20B2A9748((uint64_t)&v66, a1);
  *(_QWORD *)&v65[0] = &v59;
  *((_QWORD *)&v65[0] + 1) = &v66;
  if (DWORD1(v60) == 1 && DWORD1(v67) == 1)
  {
    sub_20AFE5D88((size_t *)v65);
  }
  else if (DWORD2(v59) && HIDWORD(v59) && (_DWORD)v60)
  {
    v44 = HIDWORD(v59) - 1;
    v45 = DWORD2(v60);
    v46 = DWORD2(v67);
    v47 = (_BYTE *)v59;
    v48 = (_BYTE *)v66;
    v49 = v60 - 1;
    if ((_DWORD)v60 != 1)
    {
      v50 = HIDWORD(v67);
      v51 = HIDWORD(v60);
      if (HIDWORD(v59) == 1)
      {
        do
        {
          *v48 = *v47;
          v48[1] = v47[1];
          v48[2] = v47[2];
          v47 += v51;
          v48 += v50;
          --v49;
        }
        while (v49);
      }
      else
      {
        v52 = 0;
        v53 = (_BYTE *)(v66 + 2);
        v54 = (_BYTE *)(v59 + 2);
        do
        {
          v55 = v54;
          v56 = v53;
          v57 = v44;
          do
          {
            *(v56 - 2) = *(v55 - 2);
            *(v56 - 1) = *(v55 - 1);
            *v56 = *v55;
            v56 += v46;
            v55 += v45;
            --v57;
          }
          while (v57);
          *(v56 - 2) = *(v55 - 2);
          *(v56 - 1) = *(v55 - 1);
          *v56 = *v55;
          v47 += v51;
          v48 += v50;
          ++v52;
          v53 += v50;
          v54 += v51;
        }
        while (v52 != v49);
      }
    }
    for (; v44; --v44)
    {
      *v48 = *v47;
      v48[1] = v47[1];
      v48[2] = v47[2];
      v47 += v45;
      v48 += v46;
    }
    *v48 = *v47;
    v48[1] = v47[1];
    v48[2] = v47[2];
  }
  return result;
}

uint64_t sub_20B2AA60C(uint64_t a1)
{
  _QWORD v2[6];

  sub_20B2A9748((uint64_t)v2, a1);
  return v2[0];
}

double sub_20B2AA634@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 17
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2A9748((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_20B2AA6D4@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 17
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2A9914((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_20B2AA774()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BF80);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BF80))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_25463BF88);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463BF88))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25463BF90);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BF90))
    {
LABEL_13:
      if (byte_25463C597 < 0)
      {
        sub_20AEC60F4(&xmmword_25463C568, (void *)qword_25463C580, unk_25463C588);
      }
      else
      {
        xmmword_25463C568 = *(_OWORD *)&qword_25463C580;
        unk_25463C578 = unk_25463C590;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C568, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BF88);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_25463BF98);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463BF98))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Bgr8u>]", &qword_25463C598);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C598, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BF98);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_25463BFA0);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BFA0))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_25463BFA8);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25463BFA8))
      {
        if (byte_25463C5B0[23] < 0)
          sub_20AEC60F4(&__p, *(void **)byte_25463C5B0, *(unint64_t *)&byte_25463C5B0[8]);
        else
          __p = *(std::string *)byte_25463C5B0;
        sub_20B52B814(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_25463C5C8);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C5C8, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463BFA8);
      }
      if (byte_25463C5DF < 0)
      {
        sub_20AEC60F4(v17, (void *)xmmword_25463C5C8, *((unint64_t *)&xmmword_25463C5C8 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_25463C5C8;
        v18 = unk_25463C5D8;
      }
      sub_20AFCE18C((char *)v17, (std::string *)&qword_25463C580);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C580, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BF90);
      goto LABEL_13;
    }
    if (byte_25463C5AF >= 0)
      v6 = byte_25463C5AF;
    else
      v6 = unk_25463C5A0;
    if (byte_25463C5AF >= 0)
      v7 = &qword_25463C598;
    else
      v7 = (uint64_t *)qword_25463C598;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_25463C5B0[8] = v6;
      *(_QWORD *)&byte_25463C5B0[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_25463C5B0 = v13;
    }
    else
    {
      v13 = byte_25463C5B0;
      byte_25463C5B0[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_25463C5B0, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463BFA0);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_25463C57F < 0)
  {
    sub_20AEC60F4(&xmmword_25463C550, (void *)xmmword_25463C568, *((unint64_t *)&xmmword_25463C568 + 1));
  }
  else
  {
    xmmword_25463C550 = xmmword_25463C568;
    unk_25463C560 = unk_25463C578;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C550, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463BF80);
LABEL_2:
  if (byte_25463C567 >= 0)
    return &xmmword_25463C550;
  else
    return (__int128 *)xmmword_25463C550;
}

void sub_20B2AABC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25463BF90);
  __cxa_guard_abort(&qword_25463BF88);
  __cxa_guard_abort(&qword_25463BF80);
  _Unwind_Resume(a1);
}

void sub_20B2AAC64(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463BF80);
  _Unwind_Resume(a1);
}

void sub_20B2AAC7C()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_20B5AACCD, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B2AACB8(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_20B4ED8EC(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24C41E008;
        *v42 = &off_24C417CF8;
        sub_20B4E78A4(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_20B4EDAC0(v79);
        }
LABEL_64:
        v78 = &off_24C41E150;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_20AECFAB8();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_20B4ED800(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24C41DFE8;
  *v42 = &off_24C417CD8;
  sub_20B4E7478(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_20B4ED9D4(v79);
  }
LABEL_102:
  v78 = &off_24C41E150;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_20B2AB4AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E7584(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2AB4E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2AB4F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E79B0(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2AB528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2AB53C()
{
  return 65792;
}

_QWORD *sub_20B2AB548@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E78A4(a2, v2);
  if (v3 > 1)
    sub_20AECFAB8();
  return sub_20B4E7798(a2, v2);
}

uint64_t sub_20B2AB588(uint64_t a1, uint64_t a2, __int128 *a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  unint64_t *v15;
  unint64_t v16;
  __int128 v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[32];
  uint64_t v23;
  _QWORD v24[3];
  _BYTE v25[48];
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24C4177C8;
  v5 = *(unsigned int *)(a2 + 32);
  v4 = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x20)
    v6 = 32;
  else
    v6 = v4;
  *(_DWORD *)v25 = 3;
  v7 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v25[4] = v7;
  v8 = HIDWORD(v7);
  *(_QWORD *)v22 = *(_QWORD *)v25;
  *(_DWORD *)&v22[8] = HIDWORD(v7);
  *(_DWORD *)v25 = 1;
  *(_QWORD *)&v25[4] = v5 | (v6 << 32);
  *(_QWORD *)&v22[12] = *(_QWORD *)v25;
  *(_DWORD *)&v22[20] = v6;
  *(_QWORD *)&v22[24] = v7;
  v23 = *(_QWORD *)&v25[4];
  v20 = a3[1];
  v21 = a3[2];
  v19 = *a3;
  *(_QWORD *)a1 = off_24C416D18;
  *(_DWORD *)(a1 + 8) = 0;
  if ((_DWORD)v7 && HIDWORD(v7))
  {
    sub_20B28C198(0, 21, (uint64_t)v22, a1 + 16);
    LODWORD(v8) = *(_DWORD *)&v22[28];
    v9 = a1 + 48;
    if (!*(_DWORD *)&v22[24])
      goto LABEL_19;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24C41E150;
    *(_DWORD *)(a1 + 40) = 0;
    v9 = a1 + 48;
    if (!(_DWORD)v7)
    {
LABEL_19:
      v17 = *(_OWORD *)&v22[16];
      *(_OWORD *)v9 = *(_OWORD *)v22;
      *(_OWORD *)(v9 + 16) = v17;
      *(_QWORD *)(v9 + 32) = v23;
      goto LABEL_20;
    }
  }
  if (!(_DWORD)v8)
    goto LABEL_19;
  if (*(_DWORD *)(a1 + 40))
    sub_20AECFAB8();
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(std::__shared_weak_count **)(a1 + 32);
  v24[0] = &off_24C41E150;
  v24[1] = v10;
  v24[2] = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
  }
  sub_20B28C508((uint64_t)v25, (uint64_t)v24);
  v14 = *(_OWORD *)&v25[24];
  *(_OWORD *)v9 = *(_OWORD *)&v25[8];
  *(_OWORD *)(v9 + 16) = v14;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)&v25[40];
  v24[0] = &off_24C41E150;
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
LABEL_20:
  *(_OWORD *)v25 = v19;
  *(_OWORD *)&v25[16] = v20;
  *(_OWORD *)&v25[32] = v21;
  sub_20B28CE20(a1, v25);
  *(_QWORD *)a1 = off_24C4177C8;
  return a1;
}

void sub_20B2AB794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  va_list va;

  va_start(va, a12);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v12);
  _Unwind_Resume(a1);
}

void sub_20B2AB7B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

void sub_20B2AB7C4(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_20B2AB7D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  *(_QWORD *)v20 = v22;
  v24 = *(unsigned int *)(v20 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a20, v21);
  *(_DWORD *)(v20 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2AB80C(void *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  JUMPOUT(0x20B2AB7C8);
}

uint64_t sub_20B2AB81C(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416D18;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

_QWORD *sub_20B2AB880(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];
  std::__shared_weak_count *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v3 = *(std::__shared_weak_count **)(a2 + 16);
  v11[0] = &off_24C41E150;
  v11[1] = v4;
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20B28D254((uint64_t)a1, (uint64_t)v11);
  v11[0] = &off_24C41E150;
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *a1 = off_24C4177C8;
  return a1;
}

void sub_20B2AB928(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2AB93C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;

  if (*(_DWORD *)(a2 + 40) >= 3u)
LABEL_31:
    sub_20AECFAB8();
  v4 = *(uint64_t **)(a2 + 24);
  if (!v4)
    goto LABEL_17;
  v6 = *v4;
  v5 = (std::__shared_weak_count *)v4[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
LABEL_8:
    if (v6)
      goto LABEL_9;
LABEL_17:
    sub_20B27E5CC(a1, 0, (_DWORD *)(a2 + 72));
    return;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6)
    goto LABEL_17;
LABEL_9:
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_31;
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(std::__shared_weak_count **)(a2 + 32);
  v23 = &off_24C41E150;
  v24 = v10;
  v25 = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v21 = v10;
    v22 = v11;
    do
      v14 = __ldxr(v12);
    while (__stxr(v14 + 1, v12));
  }
  else
  {
    v21 = v10;
    v22 = 0;
  }
  v20 = &off_24C41E150;
  sub_20B28C508(a1, (uint64_t)&v20);
  v20 = &off_24C41E150;
  if (!v11)
    goto LABEL_23;
  v15 = (unint64_t *)&v11->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v23 = &off_24C41E150;
    v17 = v25;
    if (!v25)
      return;
  }
  else
  {
LABEL_23:
    v23 = &off_24C41E150;
    v17 = v25;
    if (!v25)
      return;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
}

void sub_20B2ABAEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_20B4E888C(&a9);
  sub_20B4E888C(&a12);
  _Unwind_Resume(a1);
}

void sub_20B2ABB08(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;

  if (*(_DWORD *)(a2 + 40) >= 3u)
LABEL_31:
    sub_20AECFAB8();
  v4 = *(uint64_t **)(a2 + 24);
  if (!v4)
    goto LABEL_17;
  v6 = *v4;
  v5 = (std::__shared_weak_count *)v4[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
LABEL_8:
    if (v6)
      goto LABEL_9;
LABEL_17:
    sub_20B27E5CC(a1, 0, (_DWORD *)(a2 + 72));
    return;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6)
    goto LABEL_17;
LABEL_9:
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_31;
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(std::__shared_weak_count **)(a2 + 32);
  v27 = &off_24C41E150;
  v28 = v10;
  v29 = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v21 = v10;
    v22 = v11;
    do
      v14 = __ldxr(v12);
    while (__stxr(v14 + 1, v12));
  }
  else
  {
    v21 = v10;
    v22 = 0;
  }
  v20 = &off_24C41E150;
  sub_20B28C508((uint64_t)&v23, (uint64_t)&v20);
  *(_QWORD *)a1 = v23;
  *(_OWORD *)(a1 + 8) = v24;
  *(_OWORD *)(a1 + 24) = v25;
  *(_QWORD *)(a1 + 40) = v26;
  v20 = &off_24C41E150;
  if (!v11)
    goto LABEL_23;
  v15 = (unint64_t *)&v11->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v27 = &off_24C41E150;
    v17 = v29;
    if (!v29)
      return;
  }
  else
  {
LABEL_23:
    v27 = &off_24C41E150;
    v17 = v29;
    if (!v29)
      return;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
}

void sub_20B2ABCD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_20B4E888C(&a9);
  sub_20B4E888C((_QWORD *)(v9 - 56));
  _Unwind_Resume(a1);
}

uint64_t sub_20B2ABCF4()
{
  return 21;
}

_UNKNOWN **sub_20B2ABCFC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE28))
    return &off_253EC31A8;
  __cxa_guard_release(&qword_25463BE28);
  return &off_253EC31A8;
}

void sub_20B2ABD50(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24C41DFE8;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_20B4ED800((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24C41DFE8;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_20AECFAB8();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24C41DFE8;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_20B2ABB08((uint64_t)v42, a1);
  sub_20B2ABB08((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_20B2AB588(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_20B4ED9D4((uint64_t)v45);
LABEL_45:
  v44 = &off_24C41E150;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_20B2AC118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x20BD3583C](v14, 0x10A3C4049419736);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2AC144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2AC158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2AC16C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E736C(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_20AECFAB8();
    return sub_20B4E736C(a2, v2);
  }
  return sub_20B4E7478(a2, v2);
}

double sub_20B2AC1AC(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  _BYTE *v53;
  _BYTE *v54;
  _BYTE *v55;
  _BYTE *v56;
  int v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65[3];
  __int128 v66;
  __int128 v67;
  __int128 v68;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C41DF08, (const struct __class_type_info *)&unk_24C417F48, 0);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = *((_DWORD *)v4 + 10);
    if (v6 == 2)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
      }
      if (v8)
      {
        v22 = *v8;
        v21 = (std::__shared_weak_count *)v8[1];
        if (v21)
        {
          v23 = (unint64_t *)&v21->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        if (v22)
          goto LABEL_43;
      }
    }
    else if (v6 == 1)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v26 = (unint64_t *)&v7->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
      }
      if (v8)
      {
        v29 = *v8;
        v28 = (std::__shared_weak_count *)v8[1];
        if (v28)
        {
          v30 = (unint64_t *)&v28->__shared_owners_;
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 1, v30));
          do
            v32 = __ldaxr(v30);
          while (__stlxr(v32 - 1, v30));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        if (v29)
          goto LABEL_43;
      }
    }
    else
    {
      if (v6)
        sub_20AECFAB8();
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v9 = (unint64_t *)&v7->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      if (v8)
      {
        v12 = *v8;
        v11 = (std::__shared_weak_count *)v8[1];
        if (v11)
        {
          v13 = (unint64_t *)&v11->__shared_owners_;
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
          do
            v15 = __ldaxr(v13);
          while (__stlxr(v15 - 1, v13));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        if (v12)
LABEL_43:
          sub_20B4ED800((uint64_t)v8);
      }
    }
    sub_20B2ABB08((uint64_t)&v66, v5);
    v65[0] = v66;
    v65[1] = v67;
    v65[2] = v68;
    sub_20B2AB588((uint64_t)&v59, (uint64_t)&v66 + 8, v65);
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
          if (!v34)
            goto LABEL_52;
          goto LABEL_51;
        }
      }
      if (v34)
LABEL_51:
        sub_20B4ED9D4((uint64_t)v8);
    }
LABEL_52:
    if (v7)
    {
      v38 = (unint64_t *)&v7->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v40 = DWORD2(v61);
    *(_DWORD *)(a1 + 8) = DWORD2(v59);
    v41 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v41 == -1)
    {
      if ((_DWORD)v40 == -1)
      {
        result = *(double *)&v62;
        v58 = v63;
        *(_OWORD *)(a1 + 48) = v62;
        *(_OWORD *)(a1 + 64) = v58;
        *(_QWORD *)(a1 + 80) = v64;
        return result;
      }
    }
    else if ((_DWORD)v40 == -1)
    {
      ((void (*)(__int128 *, uint64_t))off_24C418120[v41])(&v66, a1 + 16);
      *(_DWORD *)(a1 + 40) = -1;
      goto LABEL_62;
    }
    *(_QWORD *)&v66 = a1 + 16;
    ((void (*)(__int128 *))off_24C418150[v40])(&v66);
LABEL_62:
    v42 = DWORD2(v61);
    result = *(double *)&v62;
    v43 = v63;
    *(_OWORD *)(a1 + 48) = v62;
    *(_OWORD *)(a1 + 64) = v43;
    *(_QWORD *)(a1 + 80) = v64;
    *(_QWORD *)&v59 = off_24C416D18;
    if ((_DWORD)v42 != -1)
      ((void (*)(__int128 *, __int128 *))off_24C418120[v42])(&v66, &v60);
    return result;
  }
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v66, lpsrc, 21);
  v17 = *(_OWORD *)(v66 + 16);
  v16 = *(_OWORD *)(v66 + 32);
  v59 = *(_OWORD *)v66;
  v60 = v17;
  v61 = v16;
  *(_QWORD *)&v66 = 0;
  MEMORY[0x20BD3583C]();
  sub_20B2AB93C((uint64_t)&v66, a1);
  *(_QWORD *)&v65[0] = &v59;
  *((_QWORD *)&v65[0] + 1) = &v66;
  if (DWORD1(v60) == 1 && DWORD1(v67) == 1)
  {
    sub_20AFE5D88((size_t *)v65);
  }
  else if (DWORD2(v59) && HIDWORD(v59) && (_DWORD)v60)
  {
    v44 = HIDWORD(v59) - 1;
    v45 = DWORD2(v60);
    v46 = DWORD2(v67);
    v47 = (_BYTE *)v59;
    v48 = (_BYTE *)v66;
    v49 = v60 - 1;
    if ((_DWORD)v60 != 1)
    {
      v50 = HIDWORD(v67);
      v51 = HIDWORD(v60);
      if (HIDWORD(v59) == 1)
      {
        do
        {
          *v48 = *v47;
          v48[1] = v47[1];
          v48[2] = v47[2];
          v47 += v51;
          v48 += v50;
          --v49;
        }
        while (v49);
      }
      else
      {
        v52 = 0;
        v53 = (_BYTE *)(v66 + 2);
        v54 = (_BYTE *)(v59 + 2);
        do
        {
          v55 = v54;
          v56 = v53;
          v57 = v44;
          do
          {
            *(v56 - 2) = *(v55 - 2);
            *(v56 - 1) = *(v55 - 1);
            *v56 = *v55;
            v56 += v46;
            v55 += v45;
            --v57;
          }
          while (v57);
          *(v56 - 2) = *(v55 - 2);
          *(v56 - 1) = *(v55 - 1);
          *v56 = *v55;
          v47 += v51;
          v48 += v50;
          ++v52;
          v53 += v50;
          v54 += v51;
        }
        while (v52 != v49);
      }
    }
    for (; v44; --v44)
    {
      *v48 = *v47;
      v48[1] = v47[1];
      v48[2] = v47[2];
      v47 += v45;
      v48 += v46;
    }
    *v48 = *v47;
    v48[1] = v47[1];
    v48[2] = v47[2];
  }
  return result;
}

uint64_t sub_20B2AC800(uint64_t a1)
{
  _QWORD v2[6];

  sub_20B2AB93C((uint64_t)v2, a1);
  return v2[0];
}

double sub_20B2AC828@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 21
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2AB93C((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_20B2AC8C8@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 21
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2ABB08((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_20B2AC968()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BFB0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BFB0))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_25463BFB8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463BFB8))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25463BFC0);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BFC0))
    {
LABEL_13:
      if (byte_25463C627 < 0)
      {
        sub_20AEC60F4(&xmmword_25463C5F8, (void *)qword_25463C610, unk_25463C618);
      }
      else
      {
        xmmword_25463C5F8 = *(_OWORD *)&qword_25463C610;
        unk_25463C608 = unk_25463C620;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C5F8, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BFB8);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_25463BFC8);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463BFC8))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Rgb8u>]", &qword_25463C628);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C628, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BFC8);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_25463BFD0);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BFD0))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_25463BFD8);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25463BFD8))
      {
        if (byte_25463C640[23] < 0)
          sub_20AEC60F4(&__p, *(void **)byte_25463C640, *(unint64_t *)&byte_25463C640[8]);
        else
          __p = *(std::string *)byte_25463C640;
        sub_20B52B814(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_25463C658);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C658, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463BFD8);
      }
      if (byte_25463C66F < 0)
      {
        sub_20AEC60F4(v17, (void *)xmmword_25463C658, *((unint64_t *)&xmmword_25463C658 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_25463C658;
        v18 = unk_25463C668;
      }
      sub_20AFCFF10((char *)v17, (std::string *)&qword_25463C610);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C610, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BFC0);
      goto LABEL_13;
    }
    if (byte_25463C63F >= 0)
      v6 = byte_25463C63F;
    else
      v6 = unk_25463C630;
    if (byte_25463C63F >= 0)
      v7 = &qword_25463C628;
    else
      v7 = (uint64_t *)qword_25463C628;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_25463C640[8] = v6;
      *(_QWORD *)&byte_25463C640[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_25463C640 = v13;
    }
    else
    {
      v13 = byte_25463C640;
      byte_25463C640[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_25463C640, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463BFD0);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_25463C60F < 0)
  {
    sub_20AEC60F4(&xmmword_25463C5E0, (void *)xmmword_25463C5F8, *((unint64_t *)&xmmword_25463C5F8 + 1));
  }
  else
  {
    xmmword_25463C5E0 = xmmword_25463C5F8;
    unk_25463C5F0 = unk_25463C608;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C5E0, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463BFB0);
LABEL_2:
  if (byte_25463C5F7 >= 0)
    return &xmmword_25463C5E0;
  else
    return (__int128 *)xmmword_25463C5E0;
}

void sub_20B2ACDBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25463BFC0);
  __cxa_guard_abort(&qword_25463BFB8);
  __cxa_guard_abort(&qword_25463BFB0);
  _Unwind_Resume(a1);
}

void sub_20B2ACE58(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463BFB0);
  _Unwind_Resume(a1);
}

void sub_20B2ACE70()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_20B5AACCD, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B2ACEAC(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_20B4ED8EC(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24C41E008;
        *v42 = &off_24C417CF8;
        sub_20B4E78A4(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_20B4EDAC0(v79);
        }
LABEL_64:
        v78 = &off_24C41E150;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_20AECFAB8();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_20B4ED800(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24C41DFE8;
  *v42 = &off_24C417CD8;
  sub_20B4E7478(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_20B4ED9D4(v79);
  }
LABEL_102:
  v78 = &off_24C41E150;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_20B2AD6A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E7584(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2AD6D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2AD6E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E79B0(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2AD71C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2AD730()
{
  return 65792;
}

_QWORD *sub_20B2AD73C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E78A4(a2, v2);
  if (v3 > 1)
    sub_20AECFAB8();
  return sub_20B4E7798(a2, v2);
}

uint64_t sub_20B2AD77C(uint64_t a1, uint64_t a2, __int128 *a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  unint64_t *v15;
  unint64_t v16;
  __int128 v17;
  uint64_t *v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t *v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  int v53;
  uint64_t v54;
  uint64_t v55;
  _WORD *v56;
  _WORD *v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  _WORD *v63;
  uint64_t v64;
  uint64_t v65;
  _WORD *v66;
  _WORD *v67;
  int v68;
  uint64_t *v69;
  std::__shared_weak_count *v70;
  uint64_t v71;
  unint64_t *v72;
  unint64_t v73;
  unint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  _BYTE v82[32];
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t (**v87)();
  uint64_t *v88;
  std::__shared_weak_count *v89;
  uint64_t v90[2];
  _BYTE v91[24];
  __int128 v92;
  uint64_t v93;
  uint64_t v94;

  v94 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24C417858;
  v5 = *(unsigned int *)(a2 + 32);
  v4 = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x10)
    v6 = 16;
  else
    v6 = v4;
  *(_DWORD *)v91 = 3;
  v7 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v91[4] = v7;
  v8 = HIDWORD(v7);
  *(_QWORD *)v82 = *(_QWORD *)v91;
  *(_DWORD *)&v82[8] = HIDWORD(v7);
  *(_DWORD *)v91 = 1;
  *(_QWORD *)&v91[4] = v5 | (v6 << 32);
  *(_QWORD *)&v82[12] = *(_QWORD *)v91;
  *(_DWORD *)&v82[20] = v6;
  *(_QWORD *)&v82[24] = v7;
  v83 = *(_QWORD *)&v91[4];
  v80 = a3[1];
  v81 = a3[2];
  v79 = *a3;
  *(_QWORD *)a1 = off_24C416EC8;
  *(_DWORD *)(a1 + 8) = 0;
  if ((_DWORD)v7 && HIDWORD(v7))
  {
    sub_20B2908A0(0, 22, (uint64_t)v82, a1 + 16);
    LODWORD(v8) = *(_DWORD *)&v82[28];
    v9 = a1 + 48;
    if (!*(_DWORD *)&v82[24])
      goto LABEL_19;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24C41E150;
    *(_DWORD *)(a1 + 40) = 0;
    v9 = a1 + 48;
    if (!(_DWORD)v7)
      goto LABEL_19;
  }
  if ((_DWORD)v8)
  {
    if (*(_DWORD *)(a1 + 40))
      sub_20AECFAB8();
    v10 = *(_QWORD *)(a1 + 24);
    v11 = *(std::__shared_weak_count **)(a1 + 32);
    *(_QWORD *)&v84 = &off_24C41E150;
    *((_QWORD *)&v84 + 1) = v10;
    *(_QWORD *)&v85 = v11;
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(p_shared_owners);
      while (__stxr(v13 + 1, p_shared_owners));
    }
    sub_20B290C10((uint64_t)v91, (uint64_t)&v84);
    v14 = v92;
    *(_OWORD *)v9 = *(_OWORD *)&v91[8];
    *(_OWORD *)(v9 + 16) = v14;
    *(_QWORD *)(v9 + 32) = v93;
    *(_QWORD *)&v84 = &off_24C41E150;
    if (v11)
    {
      v15 = (unint64_t *)&v11->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    goto LABEL_20;
  }
LABEL_19:
  v17 = *(_OWORD *)&v82[16];
  *(_OWORD *)v9 = *(_OWORD *)v82;
  *(_OWORD *)(v9 + 16) = v17;
  *(_QWORD *)(v9 + 32) = v83;
LABEL_20:
  v84 = v79;
  v85 = v80;
  v86 = v81;
  if (*(_DWORD *)(a1 + 40) > 2u)
    goto LABEL_105;
  v18 = *(uint64_t **)(a1 + 24);
  if (!v18)
    goto LABEL_102;
  v20 = *v18;
  v19 = (std::__shared_weak_count *)v18[1];
  if (!v19)
    goto LABEL_27;
  v21 = (unint64_t *)&v19->__shared_owners_;
  do
    v22 = __ldxr(v21);
  while (__stxr(v22 + 1, v21));
  do
    v23 = __ldaxr(v21);
  while (__stlxr(v23 - 1, v21));
  if (!v23)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
    if (!v20)
      goto LABEL_102;
  }
  else
  {
LABEL_27:
    if (!v20)
      goto LABEL_102;
  }
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 == 2)
  {
    v43 = *(uint64_t **)(a1 + 24);
    v44 = *(std::__shared_weak_count **)(a1 + 32);
    v88 = v43;
    v89 = v44;
    if (v44)
    {
      v45 = (unint64_t *)&v44->__shared_owners_;
      do
        v46 = __ldxr(v45);
      while (__stxr(v46 + 1, v45));
    }
    v87 = &off_24C41E008;
    if (v43)
    {
      v48 = *v43;
      v47 = (std::__shared_weak_count *)v43[1];
      if (v47)
      {
        v49 = (unint64_t *)&v47->__shared_owners_;
        do
          v50 = __ldxr(v49);
        while (__stxr(v50 + 1, v49));
        do
          v51 = __ldaxr(v49);
        while (__stlxr(v51 - 1, v49));
        if (!v51)
        {
          ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
          std::__shared_weak_count::__release_weak(v47);
        }
      }
      if (v48)
        goto LABEL_68;
    }
    goto LABEL_69;
  }
  if (v24 == 1)
  {
    v34 = *(uint64_t **)(a1 + 24);
    v35 = *(std::__shared_weak_count **)(a1 + 32);
    v88 = v34;
    v89 = v35;
    if (v35)
    {
      v36 = (unint64_t *)&v35->__shared_owners_;
      do
        v37 = __ldxr(v36);
      while (__stxr(v37 + 1, v36));
    }
    v87 = &off_24C41E008;
    if (v34)
    {
      v39 = *v34;
      v38 = (std::__shared_weak_count *)v34[1];
      if (v38)
      {
        v40 = (unint64_t *)&v38->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
          std::__shared_weak_count::__release_weak(v38);
        }
      }
      if (v39)
        goto LABEL_68;
    }
    goto LABEL_69;
  }
  if (v24)
LABEL_105:
    sub_20AECFAB8();
  v25 = *(uint64_t **)(a1 + 24);
  v26 = *(std::__shared_weak_count **)(a1 + 32);
  v88 = v25;
  v89 = v26;
  if (v26)
  {
    v27 = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  v87 = &off_24C41E008;
  if (v25)
  {
    v30 = *v25;
    v29 = (std::__shared_weak_count *)v25[1];
    if (v29)
    {
      v31 = (unint64_t *)&v29->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
    if (v30)
LABEL_68:
      sub_20B4ED8EC((uint64_t)v88);
  }
LABEL_69:
  sub_20B2917DC((uint64_t)v91, a1);
  v90[0] = (uint64_t)&v84;
  v90[1] = (uint64_t)v91;
  if (DWORD1(v85) == 1 && *(_DWORD *)&v91[20] == 1)
  {
    sub_20AFC7BE4(v90);
  }
  else if (DWORD2(v84) && HIDWORD(v84) && (_DWORD)v85)
  {
    v53 = HIDWORD(v84) - 1;
    v54 = DWORD2(v85);
    v55 = v92;
    v56 = (_WORD *)v84;
    v57 = *(_WORD **)v91;
    v58 = v85 - 1;
    if ((_DWORD)v85 != 1)
    {
      v59 = DWORD1(v92);
      v60 = HIDWORD(v85);
      if (HIDWORD(v84) == 1)
      {
        do
        {
          *v57 = *v56;
          v57[1] = v56[1];
          v57[2] = v56[2];
          v56 += v60;
          v57 += v59;
          --v58;
        }
        while (v58);
        goto LABEL_89;
      }
      v61 = 0;
      v62 = *(_QWORD *)v91 + 4;
      v63 = (_WORD *)(v84 + 4);
      v64 = 2 * HIDWORD(v85);
      v65 = 2 * DWORD2(v85);
      do
      {
        v66 = v63;
        v67 = (_WORD *)v62;
        v68 = v53;
        do
        {
          *(v67 - 2) = *(v66 - 2);
          *(v67 - 1) = *(v66 - 1);
          *v67 = *v66;
          v67 += v55;
          v66 = (_WORD *)((char *)v66 + v65);
          --v68;
        }
        while (v68);
        *(v67 - 2) = *(v66 - 2);
        *(v67 - 1) = *(v66 - 1);
        *v67 = *v66;
        v56 += v60;
        v57 += v59;
        ++v61;
        v62 += 2 * v59;
        v63 = (_WORD *)((char *)v63 + v64);
      }
      while (v61 != v58);
    }
    for (; v53; --v53)
    {
      *v57 = *v56;
      v57[1] = v56[1];
      v57[2] = v56[2];
      v56 += v54;
      v57 += v55;
    }
LABEL_89:
    *v57 = *v56;
    v57[1] = v56[1];
    v57[2] = v56[2];
    v69 = v88;
    if (!v88)
      goto LABEL_97;
    goto LABEL_90;
  }
  v69 = v88;
  if (!v88)
    goto LABEL_97;
LABEL_90:
  v71 = *v69;
  v70 = (std::__shared_weak_count *)v69[1];
  if (v70)
  {
    v72 = (unint64_t *)&v70->__shared_owners_;
    do
      v73 = __ldxr(v72);
    while (__stxr(v73 + 1, v72));
    do
      v74 = __ldaxr(v72);
    while (__stlxr(v74 - 1, v72));
    if (!v74)
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
      if (!v71)
        goto LABEL_97;
      goto LABEL_96;
    }
  }
  if (v71)
LABEL_96:
    sub_20B4EDAC0((uint64_t)v88);
LABEL_97:
  v87 = &off_24C41E150;
  v75 = v89;
  if (v89)
  {
    v76 = (unint64_t *)&v89->__shared_owners_;
    do
      v77 = __ldaxr(v76);
    while (__stlxr(v77 - 1, v76));
    if (!v77)
    {
      ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
      std::__shared_weak_count::__release_weak(v75);
    }
  }
LABEL_102:
  *(_QWORD *)a1 = off_24C417858;
  return a1;
}

void sub_20B2ADDD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::__shared_weak_count *a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *p_shared_owners;
  unint64_t v35;
  uint64_t v36;

  if (a29)
  {
    p_shared_owners = (unint64_t *)&a29->__shared_owners_;
    do
      v35 = __ldaxr(p_shared_owners);
    while (__stlxr(v35 - 1, p_shared_owners));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))a29->__on_zero_shared)(a29);
      std::__shared_weak_count::__release_weak(a29);
    }
  }
  *(_QWORD *)v29 = v31;
  v36 = *(unsigned int *)(v29 + 40);
  if ((_DWORD)v36 != -1)
    ((void (*)(uint64_t, uint64_t))off_24C418120[v36])(v32 - 136, v30);
  *(_DWORD *)(v29 + 40) = -1;
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B2ADF1C(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416EC8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

_QWORD *sub_20B2ADF80(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];
  std::__shared_weak_count *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v3 = *(std::__shared_weak_count **)(a2 + 16);
  v11[0] = &off_24C41E150;
  v11[1] = v4;
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20B291110((uint64_t)a1, (uint64_t)v11);
  v11[0] = &off_24C41E150;
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *a1 = off_24C417858;
  return a1;
}

void sub_20B2AE028(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2AE03C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;

  if (*(_DWORD *)(a2 + 40) >= 3u)
LABEL_31:
    sub_20AECFAB8();
  v4 = *(uint64_t **)(a2 + 24);
  if (!v4)
    goto LABEL_17;
  v6 = *v4;
  v5 = (std::__shared_weak_count *)v4[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
LABEL_8:
    if (v6)
      goto LABEL_9;
LABEL_17:
    sub_20B27E5CC(a1, 0, (_DWORD *)(a2 + 72));
    return;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6)
    goto LABEL_17;
LABEL_9:
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_31;
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(std::__shared_weak_count **)(a2 + 32);
  v23 = &off_24C41E150;
  v24 = v10;
  v25 = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v21 = v10;
    v22 = v11;
    do
      v14 = __ldxr(v12);
    while (__stxr(v14 + 1, v12));
  }
  else
  {
    v21 = v10;
    v22 = 0;
  }
  v20 = &off_24C41E150;
  sub_20B290C10(a1, (uint64_t)&v20);
  v20 = &off_24C41E150;
  if (!v11)
    goto LABEL_23;
  v15 = (unint64_t *)&v11->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v23 = &off_24C41E150;
    v17 = v25;
    if (!v25)
      return;
  }
  else
  {
LABEL_23:
    v23 = &off_24C41E150;
    v17 = v25;
    if (!v25)
      return;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
}

void sub_20B2AE1EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_20B4E888C(&a9);
  sub_20B4E888C(&a12);
  _Unwind_Resume(a1);
}

void sub_20B2AE208(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;

  if (*(_DWORD *)(a2 + 40) >= 3u)
LABEL_31:
    sub_20AECFAB8();
  v4 = *(uint64_t **)(a2 + 24);
  if (!v4)
    goto LABEL_17;
  v6 = *v4;
  v5 = (std::__shared_weak_count *)v4[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
LABEL_8:
    if (v6)
      goto LABEL_9;
LABEL_17:
    sub_20B27E5CC(a1, 0, (_DWORD *)(a2 + 72));
    return;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6)
    goto LABEL_17;
LABEL_9:
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_31;
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(std::__shared_weak_count **)(a2 + 32);
  v27 = &off_24C41E150;
  v28 = v10;
  v29 = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v21 = v10;
    v22 = v11;
    do
      v14 = __ldxr(v12);
    while (__stxr(v14 + 1, v12));
  }
  else
  {
    v21 = v10;
    v22 = 0;
  }
  v20 = &off_24C41E150;
  sub_20B290C10((uint64_t)&v23, (uint64_t)&v20);
  *(_QWORD *)a1 = v23;
  *(_OWORD *)(a1 + 8) = v24;
  *(_OWORD *)(a1 + 24) = v25;
  *(_QWORD *)(a1 + 40) = v26;
  v20 = &off_24C41E150;
  if (!v11)
    goto LABEL_23;
  v15 = (unint64_t *)&v11->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v27 = &off_24C41E150;
    v17 = v29;
    if (!v29)
      return;
  }
  else
  {
LABEL_23:
    v27 = &off_24C41E150;
    v17 = v29;
    if (!v29)
      return;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
}

void sub_20B2AE3D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_20B4E888C(&a9);
  sub_20B4E888C((_QWORD *)(v9 - 56));
  _Unwind_Resume(a1);
}

uint64_t sub_20B2AE3F4()
{
  return 22;
}

_UNKNOWN **sub_20B2AE3FC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE28))
    return &off_253EC31A8;
  __cxa_guard_release(&qword_25463BE28);
  return &off_253EC31A8;
}

void sub_20B2AE450(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24C41DFE8;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_20B4ED800((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24C41DFE8;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_20AECFAB8();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24C41DFE8;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_20B2AE208((uint64_t)v42, a1);
  sub_20B2AE208((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_20B2AD77C(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_20B4ED9D4((uint64_t)v45);
LABEL_45:
  v44 = &off_24C41E150;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_20B2AE818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x20BD3583C](v14, 0x10A3C4049419736);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2AE844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2AE858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2AE86C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E736C(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_20AECFAB8();
    return sub_20B4E736C(a2, v2);
  }
  return sub_20B4E7478(a2, v2);
}

void sub_20B2AE8AC(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  uint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  _WORD *v46;
  _WORD *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  _WORD *v53;
  _WORD *v54;
  _WORD *v55;
  _WORD *v56;
  int v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65[3];
  __int128 v66;
  __int128 v67;
  __int128 v68;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C41DF08, (const struct __class_type_info *)&unk_24C417F60, 0);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = *((_DWORD *)v4 + 10);
    if (v6 == 2)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v19 = __ldxr(p_shared_owners);
        while (__stxr(v19 + 1, p_shared_owners));
      }
      if (v8)
      {
        v21 = *v8;
        v20 = (std::__shared_weak_count *)v8[1];
        if (v20)
        {
          v22 = (unint64_t *)&v20->__shared_owners_;
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
          do
            v24 = __ldaxr(v22);
          while (__stlxr(v24 - 1, v22));
          if (!v24)
          {
            ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
            std::__shared_weak_count::__release_weak(v20);
          }
        }
        if (v21)
          goto LABEL_43;
      }
    }
    else if (v6 == 1)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v25 = (unint64_t *)&v7->__shared_owners_;
        do
          v26 = __ldxr(v25);
        while (__stxr(v26 + 1, v25));
      }
      if (v8)
      {
        v28 = *v8;
        v27 = (std::__shared_weak_count *)v8[1];
        if (v27)
        {
          v29 = (unint64_t *)&v27->__shared_owners_;
          do
            v30 = __ldxr(v29);
          while (__stxr(v30 + 1, v29));
          do
            v31 = __ldaxr(v29);
          while (__stlxr(v31 - 1, v29));
          if (!v31)
          {
            ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
            std::__shared_weak_count::__release_weak(v27);
          }
        }
        if (v28)
          goto LABEL_43;
      }
    }
    else
    {
      if (v6)
        sub_20AECFAB8();
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v9 = (unint64_t *)&v7->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      if (v8)
      {
        v12 = *v8;
        v11 = (std::__shared_weak_count *)v8[1];
        if (v11)
        {
          v13 = (unint64_t *)&v11->__shared_owners_;
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
          do
            v15 = __ldaxr(v13);
          while (__stlxr(v15 - 1, v13));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        if (v12)
LABEL_43:
          sub_20B4ED800((uint64_t)v8);
      }
    }
    sub_20B2AE208((uint64_t)&v66, v5);
    v65[0] = v66;
    v65[1] = v67;
    v65[2] = v68;
    sub_20B2AD77C((uint64_t)&v59, (uint64_t)&v66 + 8, v65);
    if (v8)
    {
      v33 = *v8;
      v32 = (std::__shared_weak_count *)v8[1];
      if (v32)
      {
        v34 = (unint64_t *)&v32->__shared_owners_;
        do
          v35 = __ldxr(v34);
        while (__stxr(v35 + 1, v34));
        do
          v36 = __ldaxr(v34);
        while (__stlxr(v36 - 1, v34));
        if (!v36)
        {
          ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
          std::__shared_weak_count::__release_weak(v32);
          if (!v33)
            goto LABEL_52;
          goto LABEL_51;
        }
      }
      if (v33)
LABEL_51:
        sub_20B4ED9D4((uint64_t)v8);
    }
LABEL_52:
    if (v7)
    {
      v37 = (unint64_t *)&v7->__shared_owners_;
      do
        v38 = __ldaxr(v37);
      while (__stlxr(v38 - 1, v37));
      if (!v38)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v39 = DWORD2(v61);
    *(_DWORD *)(a1 + 8) = DWORD2(v59);
    v40 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v40 == -1)
    {
      if ((_DWORD)v39 == -1)
      {
        v58 = v63;
        *(_OWORD *)(a1 + 48) = v62;
        *(_OWORD *)(a1 + 64) = v58;
        *(_QWORD *)(a1 + 80) = v64;
        return;
      }
    }
    else if ((_DWORD)v39 == -1)
    {
      ((void (*)(__int128 *, uint64_t))off_24C418120[v40])(&v66, a1 + 16);
      *(_DWORD *)(a1 + 40) = -1;
      goto LABEL_62;
    }
    *(_QWORD *)&v66 = a1 + 16;
    ((void (*)(__int128 *))off_24C418150[v39])(&v66);
LABEL_62:
    v41 = DWORD2(v61);
    v42 = v63;
    *(_OWORD *)(a1 + 48) = v62;
    *(_OWORD *)(a1 + 64) = v42;
    *(_QWORD *)(a1 + 80) = v64;
    *(_QWORD *)&v59 = off_24C416EC8;
    if ((_DWORD)v41 != -1)
      ((void (*)(__int128 *, __int128 *))off_24C418120[v41])(&v66, &v60);
    return;
  }
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v66, lpsrc, 22);
  v17 = *(_OWORD *)(v66 + 16);
  v16 = *(_OWORD *)(v66 + 32);
  v59 = *(_OWORD *)v66;
  v60 = v17;
  v61 = v16;
  *(_QWORD *)&v66 = 0;
  MEMORY[0x20BD3583C]();
  sub_20B2AE03C((uint64_t)&v66, a1);
  *(_QWORD *)&v65[0] = &v59;
  *((_QWORD *)&v65[0] + 1) = &v66;
  if (DWORD1(v60) == 1 && DWORD1(v67) == 1)
  {
    sub_20AFC7BE4((uint64_t *)v65);
    return;
  }
  if (DWORD2(v59) && HIDWORD(v59) && (_DWORD)v60)
  {
    v43 = HIDWORD(v59) - 1;
    v44 = DWORD2(v60);
    v45 = DWORD2(v67);
    v46 = (_WORD *)v59;
    v47 = (_WORD *)v66;
    v48 = v60 - 1;
    if ((_DWORD)v60 != 1)
    {
      v49 = HIDWORD(v67);
      v50 = HIDWORD(v60);
      if (HIDWORD(v59) == 1)
      {
        do
        {
          *v47 = *v46;
          v47[1] = v46[1];
          v47[2] = v46[2];
          v46 += v50;
          v47 += v49;
          --v48;
        }
        while (v48);
LABEL_80:
        *v47 = *v46;
        v47[1] = v46[1];
        v47[2] = v46[2];
        return;
      }
      v51 = 0;
      v52 = 2 * DWORD2(v67);
      v53 = (_WORD *)(v66 + 4);
      v54 = (_WORD *)(v59 + 4);
      do
      {
        v55 = v54;
        v56 = v53;
        v57 = v43;
        do
        {
          *(v56 - 2) = *(v55 - 2);
          *(v56 - 1) = *(v55 - 1);
          *v56 = *v55;
          v56 = (_WORD *)((char *)v56 + v52);
          v55 += v44;
          --v57;
        }
        while (v57);
        *(v56 - 2) = *(v55 - 2);
        *(v56 - 1) = *(v55 - 1);
        *v56 = *v55;
        v46 += v50;
        v47 += v49;
        ++v51;
        v53 += v49;
        v54 += v50;
      }
      while (v51 != v48);
    }
    for (; v43; --v43)
    {
      *v47 = *v46;
      v47[1] = v46[1];
      v47[2] = v46[2];
      v46 += v44;
      v47 += v45;
    }
    goto LABEL_80;
  }
}

uint64_t sub_20B2AEF20(uint64_t a1)
{
  _QWORD v2[6];

  sub_20B2AE03C((uint64_t)v2, a1);
  return v2[0];
}

double sub_20B2AEF48@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 22
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2AE03C((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_20B2AEFE8@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 22
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2AE208((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_20B2AF088()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BFE0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BFE0))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_25463BFE8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463BFE8))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25463BFF0);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BFF0))
    {
LABEL_13:
      if (byte_25463C6B7 < 0)
      {
        sub_20AEC60F4(&xmmword_25463C688, (void *)qword_25463C6A0, unk_25463C6A8);
      }
      else
      {
        xmmword_25463C688 = *(_OWORD *)&qword_25463C6A0;
        unk_25463C698 = unk_25463C6B0;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C688, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BFE8);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_25463BFF8);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463BFF8))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Rgb16u>]", &qword_25463C6B8);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C6B8, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BFF8);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_25463C000);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C000))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_25463C008);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25463C008))
      {
        if (byte_25463C6D0[23] < 0)
          sub_20AEC60F4(&__p, *(void **)byte_25463C6D0, *(unint64_t *)&byte_25463C6D0[8]);
        else
          __p = *(std::string *)byte_25463C6D0;
        sub_20B52B814(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_25463C6E8);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C6E8, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463C008);
      }
      if (byte_25463C6FF < 0)
      {
        sub_20AEC60F4(v17, (void *)xmmword_25463C6E8, *((unint64_t *)&xmmword_25463C6E8 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_25463C6E8;
        v18 = unk_25463C6F8;
      }
      sub_20AFD055C((char *)v17, (std::string *)&qword_25463C6A0);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C6A0, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463BFF0);
      goto LABEL_13;
    }
    if (byte_25463C6CF >= 0)
      v6 = byte_25463C6CF;
    else
      v6 = unk_25463C6C0;
    if (byte_25463C6CF >= 0)
      v7 = &qword_25463C6B8;
    else
      v7 = (uint64_t *)qword_25463C6B8;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_25463C6D0[8] = v6;
      *(_QWORD *)&byte_25463C6D0[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_25463C6D0 = v13;
    }
    else
    {
      v13 = byte_25463C6D0;
      byte_25463C6D0[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_25463C6D0, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463C000);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_25463C69F < 0)
  {
    sub_20AEC60F4(&xmmword_25463C670, (void *)xmmword_25463C688, *((unint64_t *)&xmmword_25463C688 + 1));
  }
  else
  {
    xmmword_25463C670 = xmmword_25463C688;
    unk_25463C680 = unk_25463C698;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C670, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463BFE0);
LABEL_2:
  if (byte_25463C687 >= 0)
    return &xmmword_25463C670;
  else
    return (__int128 *)xmmword_25463C670;
}

void sub_20B2AF4DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25463BFF0);
  __cxa_guard_abort(&qword_25463BFE8);
  __cxa_guard_abort(&qword_25463BFE0);
  _Unwind_Resume(a1);
}

void sub_20B2AF578(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463BFE0);
  _Unwind_Resume(a1);
}

void sub_20B2AF590()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_20B5AACCD, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B2AF5CC(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_20B4ED8EC(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24C41E008;
        *v42 = &off_24C417CF8;
        sub_20B4E78A4(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_20B4EDAC0(v79);
        }
LABEL_64:
        v78 = &off_24C41E150;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_20AECFAB8();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_20B4ED800(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24C41DFE8;
  *v42 = &off_24C417CD8;
  sub_20B4E7478(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_20B4ED9D4(v79);
  }
LABEL_102:
  v78 = &off_24C41E150;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_20B2AFDC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E7584(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2AFDF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2AFE08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E79B0(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2AFE3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2AFE50()
{
  return 65792;
}

_QWORD *sub_20B2AFE5C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E78A4(a2, v2);
  if (v3 > 1)
    sub_20AECFAB8();
  return sub_20B4E7798(a2, v2);
}

uint64_t sub_20B2AFE9C(uint64_t a1, uint64_t a2, __int128 *a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  unint64_t *v15;
  unint64_t v16;
  __int128 v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[32];
  uint64_t v23;
  _QWORD v24[3];
  _BYTE v25[48];
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24C4178E8;
  v5 = *(unsigned int *)(a2 + 32);
  v4 = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x20)
    v6 = 32;
  else
    v6 = v4;
  *(_DWORD *)v25 = 4;
  v7 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v25[4] = v7;
  v8 = HIDWORD(v7);
  *(_QWORD *)v22 = *(_QWORD *)v25;
  *(_DWORD *)&v22[8] = HIDWORD(v7);
  *(_DWORD *)v25 = 1;
  *(_QWORD *)&v25[4] = v5 | (v6 << 32);
  *(_QWORD *)&v22[12] = *(_QWORD *)v25;
  *(_DWORD *)&v22[20] = v6;
  *(_QWORD *)&v22[24] = v7;
  v23 = *(_QWORD *)&v25[4];
  v20 = a3[1];
  v21 = a3[2];
  v19 = *a3;
  *(_QWORD *)a1 = off_24C416DA8;
  *(_DWORD *)(a1 + 8) = 0;
  if ((_DWORD)v7 && HIDWORD(v7))
  {
    sub_20B28DA1C(0, 25, (uint64_t)v22, a1 + 16);
    LODWORD(v8) = *(_DWORD *)&v22[28];
    v9 = a1 + 48;
    if (!*(_DWORD *)&v22[24])
      goto LABEL_19;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24C41E150;
    *(_DWORD *)(a1 + 40) = 0;
    v9 = a1 + 48;
    if (!(_DWORD)v7)
    {
LABEL_19:
      v17 = *(_OWORD *)&v22[16];
      *(_OWORD *)v9 = *(_OWORD *)v22;
      *(_OWORD *)(v9 + 16) = v17;
      *(_QWORD *)(v9 + 32) = v23;
      goto LABEL_20;
    }
  }
  if (!(_DWORD)v8)
    goto LABEL_19;
  if (*(_DWORD *)(a1 + 40))
    sub_20AECFAB8();
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(std::__shared_weak_count **)(a1 + 32);
  v24[0] = &off_24C41E150;
  v24[1] = v10;
  v24[2] = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
  }
  sub_20B28DD8C((uint64_t)v25, (uint64_t)v24);
  v14 = *(_OWORD *)&v25[24];
  *(_OWORD *)v9 = *(_OWORD *)&v25[8];
  *(_OWORD *)(v9 + 16) = v14;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)&v25[40];
  v24[0] = &off_24C41E150;
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
LABEL_20:
  *(_OWORD *)v25 = v19;
  *(_OWORD *)&v25[16] = v20;
  *(_OWORD *)&v25[32] = v21;
  sub_20B28E604(a1, v25);
  *(_QWORD *)a1 = off_24C4178E8;
  return a1;
}

void sub_20B2B00A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  va_list va;

  va_start(va, a12);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v12);
  _Unwind_Resume(a1);
}

void sub_20B2B00C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

void sub_20B2B00D8(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_20B2B00E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  *(_QWORD *)v20 = v22;
  v24 = *(unsigned int *)(v20 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a20, v21);
  *(_DWORD *)(v20 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2B0120(void *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  JUMPOUT(0x20B2B00DCLL);
}

uint64_t sub_20B2B0130(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416DA8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

_QWORD *sub_20B2B0194(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];
  std::__shared_weak_count *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v3 = *(std::__shared_weak_count **)(a2 + 16);
  v11[0] = &off_24C41E150;
  v11[1] = v4;
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20B28EA38((uint64_t)a1, (uint64_t)v11);
  v11[0] = &off_24C41E150;
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *a1 = off_24C4178E8;
  return a1;
}

void sub_20B2B023C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2B0250(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24C41E150;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B28DD8C(a1, (uint64_t)&v27);
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24C41E150;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2B0478(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_20B2B0494(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24C41E150;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B28DD8C((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24C41E150;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 4;
  *(_QWORD *)&v33[4] = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 4);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2B06DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2B06F8()
{
  return 25;
}

_UNKNOWN **sub_20B2B0700()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE28))
    return &off_253EC31A8;
  __cxa_guard_release(&qword_25463BE28);
  return &off_253EC31A8;
}

void sub_20B2B0754(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24C41DFE8;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_20B4ED800((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24C41DFE8;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_20AECFAB8();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24C41DFE8;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_20B2B0494((uint64_t)v42, a1);
  sub_20B2B0494((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_20B2AFE9C(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_20B4ED9D4((uint64_t)v45);
LABEL_45:
  v44 = &off_24C41E150;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_20B2B0B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x20BD3583C](v14, 0x10A3C4049419736);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2B0B44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2B0B58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2B0B6C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E736C(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_20AECFAB8();
    return sub_20B4E736C(a2, v2);
  }
  return sub_20B4E7478(a2, v2);
}

double sub_20B2B0BAC(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  char v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53[3];
  __int128 v54;
  __int128 v55;
  __int128 v56;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C41DF08, (const struct __class_type_info *)&unk_24C417F78, 0);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = *((_DWORD *)v4 + 10);
    if (v6 == 2)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
      }
      if (v8)
      {
        v22 = *v8;
        v21 = (std::__shared_weak_count *)v8[1];
        if (v21)
        {
          v23 = (unint64_t *)&v21->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        if (v22)
          goto LABEL_43;
      }
    }
    else if (v6 == 1)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v26 = (unint64_t *)&v7->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
      }
      if (v8)
      {
        v29 = *v8;
        v28 = (std::__shared_weak_count *)v8[1];
        if (v28)
        {
          v30 = (unint64_t *)&v28->__shared_owners_;
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 1, v30));
          do
            v32 = __ldaxr(v30);
          while (__stlxr(v32 - 1, v30));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        if (v29)
          goto LABEL_43;
      }
    }
    else
    {
      if (v6)
        sub_20AECFAB8();
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v9 = (unint64_t *)&v7->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      if (v8)
      {
        v12 = *v8;
        v11 = (std::__shared_weak_count *)v8[1];
        if (v11)
        {
          v13 = (unint64_t *)&v11->__shared_owners_;
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
          do
            v15 = __ldaxr(v13);
          while (__stlxr(v15 - 1, v13));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        if (v12)
LABEL_43:
          sub_20B4ED800((uint64_t)v8);
      }
    }
    sub_20B2B0494((uint64_t)&v54, v5);
    v53[0] = v54;
    v53[1] = v55;
    v53[2] = v56;
    sub_20B2AFE9C((uint64_t)&v47, (uint64_t)&v54 + 8, v53);
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
          if (!v34)
            goto LABEL_52;
          goto LABEL_51;
        }
      }
      if (v34)
LABEL_51:
        sub_20B4ED9D4((uint64_t)v8);
    }
LABEL_52:
    if (v7)
    {
      v38 = (unint64_t *)&v7->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v40 = DWORD2(v49);
    *(_DWORD *)(a1 + 8) = DWORD2(v47);
    v41 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v41 == -1)
    {
      if ((_DWORD)v40 == -1)
      {
        result = *(double *)&v50;
        v44 = v51;
        *(_OWORD *)(a1 + 48) = v50;
        *(_OWORD *)(a1 + 64) = v44;
        *(_QWORD *)(a1 + 80) = v52;
        return result;
      }
    }
    else if ((_DWORD)v40 == -1)
    {
      ((void (*)(__int128 *, uint64_t))off_24C418120[v41])(&v54, a1 + 16);
      *(_DWORD *)(a1 + 40) = -1;
      goto LABEL_62;
    }
    *(_QWORD *)&v54 = a1 + 16;
    ((void (*)(__int128 *))off_24C418150[v40])(&v54);
LABEL_62:
    v42 = DWORD2(v49);
    result = *(double *)&v50;
    v43 = v51;
    *(_OWORD *)(a1 + 48) = v50;
    *(_OWORD *)(a1 + 64) = v43;
    *(_QWORD *)(a1 + 80) = v52;
    *(_QWORD *)&v47 = off_24C416DA8;
    if ((_DWORD)v42 != -1)
      ((void (*)(__int128 *, __int128 *))off_24C418120[v42])(&v54, &v48);
    return result;
  }
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v54, lpsrc, 25);
  v17 = *(_OWORD *)(v54 + 16);
  v16 = *(_OWORD *)(v54 + 32);
  v47 = *(_OWORD *)v54;
  v48 = v17;
  v49 = v16;
  *(_QWORD *)&v54 = 0;
  MEMORY[0x20BD3583C]();
  sub_20B2B0250((uint64_t)&v54, a1);
  *(_QWORD *)&v53[0] = &v47;
  *((_QWORD *)&v53[0] + 1) = &v54;
  if (DWORD1(v48) == 1 && DWORD1(v55) == 1)
  {
    sub_20AFE5D88((size_t *)v53);
  }
  else
  {
    v45 = 0;
    if (DWORD2(v47) && HIDWORD(v47) && (_DWORD)v48)
    {
      v46 = &v45;
      sub_20AFEA3E0((uint64_t)&v46, (uint64_t)&v47, (uint64_t)&v54);
    }
  }
  return result;
}

uint64_t sub_20B2B1114(uint64_t a1)
{
  _QWORD v2[6];

  sub_20B2B0250((uint64_t)v2, a1);
  return v2[0];
}

double sub_20B2B113C@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 25
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2B0250((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_20B2B11DC@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 25
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2B0494((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_20B2B127C()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_25463C010);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C010))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_25463C018);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463C018))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25463C020);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C020))
    {
LABEL_13:
      if (byte_25463C747 < 0)
      {
        sub_20AEC60F4(&xmmword_25463C718, (void *)qword_25463C730, unk_25463C738);
      }
      else
      {
        xmmword_25463C718 = *(_OWORD *)&qword_25463C730;
        unk_25463C728 = unk_25463C740;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C718, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C018);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_25463C028);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463C028))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Bgra8u>]", &qword_25463C748);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C748, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C028);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_25463C030);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C030))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_25463C038);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25463C038))
      {
        if (byte_25463C760[23] < 0)
          sub_20AEC60F4(&__p, *(void **)byte_25463C760, *(unint64_t *)&byte_25463C760[8]);
        else
          __p = *(std::string *)byte_25463C760;
        sub_20B52B814(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_25463C778);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C778, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463C038);
      }
      if (byte_25463C78F < 0)
      {
        sub_20AEC60F4(v17, (void *)xmmword_25463C778, *((unint64_t *)&xmmword_25463C778 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_25463C778;
        v18 = unk_25463C788;
      }
      sub_20AFD1AA4((char *)v17, (std::string *)&qword_25463C730);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C730, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C020);
      goto LABEL_13;
    }
    if (byte_25463C75F >= 0)
      v6 = byte_25463C75F;
    else
      v6 = unk_25463C750;
    if (byte_25463C75F >= 0)
      v7 = &qword_25463C748;
    else
      v7 = (uint64_t *)qword_25463C748;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_25463C760[8] = v6;
      *(_QWORD *)&byte_25463C760[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_25463C760 = v13;
    }
    else
    {
      v13 = byte_25463C760;
      byte_25463C760[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_25463C760, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463C030);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_25463C72F < 0)
  {
    sub_20AEC60F4(&xmmword_25463C700, (void *)xmmword_25463C718, *((unint64_t *)&xmmword_25463C718 + 1));
  }
  else
  {
    xmmword_25463C700 = xmmword_25463C718;
    unk_25463C710 = unk_25463C728;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C700, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463C010);
LABEL_2:
  if (byte_25463C717 >= 0)
    return &xmmword_25463C700;
  else
    return (__int128 *)xmmword_25463C700;
}

void sub_20B2B16D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25463C020);
  __cxa_guard_abort(&qword_25463C018);
  __cxa_guard_abort(&qword_25463C010);
  _Unwind_Resume(a1);
}

void sub_20B2B176C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463C010);
  _Unwind_Resume(a1);
}

void sub_20B2B1784()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_20B5AACCD, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B2B17C0(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_20B4ED8EC(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24C41E008;
        *v42 = &off_24C417CF8;
        sub_20B4E78A4(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_20B4EDAC0(v79);
        }
LABEL_64:
        v78 = &off_24C41E150;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_20AECFAB8();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_20B4ED800(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24C41DFE8;
  *v42 = &off_24C417CD8;
  sub_20B4E7478(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_20B4ED9D4(v79);
  }
LABEL_102:
  v78 = &off_24C41E150;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_20B2B1FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E7584(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2B1FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2B1FFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E79B0(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2B2030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2B2044()
{
  return 65792;
}

_QWORD *sub_20B2B2050@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E78A4(a2, v2);
  if (v3 > 1)
    sub_20AECFAB8();
  return sub_20B4E7798(a2, v2);
}

uint64_t sub_20B2B2090(uint64_t a1, uint64_t a2, __int128 *a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  unint64_t *v15;
  unint64_t v16;
  __int128 v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[32];
  uint64_t v23;
  _QWORD v24[3];
  _BYTE v25[48];
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24C417978;
  v5 = *(unsigned int *)(a2 + 32);
  v4 = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x20)
    v6 = 32;
  else
    v6 = v4;
  *(_DWORD *)v25 = 4;
  v7 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v25[4] = v7;
  v8 = HIDWORD(v7);
  *(_QWORD *)v22 = *(_QWORD *)v25;
  *(_DWORD *)&v22[8] = HIDWORD(v7);
  *(_DWORD *)v25 = 1;
  *(_QWORD *)&v25[4] = v5 | (v6 << 32);
  *(_QWORD *)&v22[12] = *(_QWORD *)v25;
  *(_DWORD *)&v22[20] = v6;
  *(_QWORD *)&v22[24] = v7;
  v23 = *(_QWORD *)&v25[4];
  v20 = a3[1];
  v21 = a3[2];
  v19 = *a3;
  *(_QWORD *)a1 = off_24C416DA8;
  *(_DWORD *)(a1 + 8) = 0;
  if ((_DWORD)v7 && HIDWORD(v7))
  {
    sub_20B28DA1C(0, 29, (uint64_t)v22, a1 + 16);
    LODWORD(v8) = *(_DWORD *)&v22[28];
    v9 = a1 + 48;
    if (!*(_DWORD *)&v22[24])
      goto LABEL_19;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24C41E150;
    *(_DWORD *)(a1 + 40) = 0;
    v9 = a1 + 48;
    if (!(_DWORD)v7)
    {
LABEL_19:
      v17 = *(_OWORD *)&v22[16];
      *(_OWORD *)v9 = *(_OWORD *)v22;
      *(_OWORD *)(v9 + 16) = v17;
      *(_QWORD *)(v9 + 32) = v23;
      goto LABEL_20;
    }
  }
  if (!(_DWORD)v8)
    goto LABEL_19;
  if (*(_DWORD *)(a1 + 40))
    sub_20AECFAB8();
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(std::__shared_weak_count **)(a1 + 32);
  v24[0] = &off_24C41E150;
  v24[1] = v10;
  v24[2] = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
  }
  sub_20B28DD8C((uint64_t)v25, (uint64_t)v24);
  v14 = *(_OWORD *)&v25[24];
  *(_OWORD *)v9 = *(_OWORD *)&v25[8];
  *(_OWORD *)(v9 + 16) = v14;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)&v25[40];
  v24[0] = &off_24C41E150;
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
LABEL_20:
  *(_OWORD *)v25 = v19;
  *(_OWORD *)&v25[16] = v20;
  *(_OWORD *)&v25[32] = v21;
  sub_20B28E604(a1, v25);
  *(_QWORD *)a1 = off_24C417978;
  return a1;
}

void sub_20B2B229C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  va_list va;

  va_start(va, a12);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v12);
  _Unwind_Resume(a1);
}

void sub_20B2B22B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

void sub_20B2B22CC(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_20B2B22D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  *(_QWORD *)v20 = v22;
  v24 = *(unsigned int *)(v20 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a20, v21);
  *(_DWORD *)(v20 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2B2314(void *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  JUMPOUT(0x20B2B22D0);
}

uint64_t sub_20B2B2324(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416DA8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

_QWORD *sub_20B2B2388(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];
  std::__shared_weak_count *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v3 = *(std::__shared_weak_count **)(a2 + 16);
  v11[0] = &off_24C41E150;
  v11[1] = v4;
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20B28EA38((uint64_t)a1, (uint64_t)v11);
  v11[0] = &off_24C41E150;
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *a1 = off_24C417978;
  return a1;
}

void sub_20B2B2430(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2B2444(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24C41E150;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B28DD8C(a1, (uint64_t)&v27);
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24C41E150;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2B266C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_20B2B2688(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24C41E150;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B28DD8C((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24C41E150;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 4;
  *(_QWORD *)&v33[4] = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 4);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2B28D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2B28EC()
{
  return 29;
}

_UNKNOWN **sub_20B2B28F4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE28))
    return &off_253EC31A8;
  __cxa_guard_release(&qword_25463BE28);
  return &off_253EC31A8;
}

void sub_20B2B2948(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24C41DFE8;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_20B4ED800((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24C41DFE8;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_20AECFAB8();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24C41DFE8;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_20B2B2688((uint64_t)v42, a1);
  sub_20B2B2688((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_20B2B2090(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_20B4ED9D4((uint64_t)v45);
LABEL_45:
  v44 = &off_24C41E150;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_20B2B2D0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x20BD3583C](v14, 0x10A3C4049419736);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2B2D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2B2D4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2B2D60@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E736C(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_20AECFAB8();
    return sub_20B4E736C(a2, v2);
  }
  return sub_20B4E7478(a2, v2);
}

double sub_20B2B2DA0(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  char v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53[3];
  __int128 v54;
  __int128 v55;
  __int128 v56;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C41DF08, (const struct __class_type_info *)&unk_24C417F90, 0);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = *((_DWORD *)v4 + 10);
    if (v6 == 2)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
      }
      if (v8)
      {
        v22 = *v8;
        v21 = (std::__shared_weak_count *)v8[1];
        if (v21)
        {
          v23 = (unint64_t *)&v21->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        if (v22)
          goto LABEL_43;
      }
    }
    else if (v6 == 1)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v26 = (unint64_t *)&v7->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
      }
      if (v8)
      {
        v29 = *v8;
        v28 = (std::__shared_weak_count *)v8[1];
        if (v28)
        {
          v30 = (unint64_t *)&v28->__shared_owners_;
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 1, v30));
          do
            v32 = __ldaxr(v30);
          while (__stlxr(v32 - 1, v30));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        if (v29)
          goto LABEL_43;
      }
    }
    else
    {
      if (v6)
        sub_20AECFAB8();
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v9 = (unint64_t *)&v7->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      if (v8)
      {
        v12 = *v8;
        v11 = (std::__shared_weak_count *)v8[1];
        if (v11)
        {
          v13 = (unint64_t *)&v11->__shared_owners_;
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
          do
            v15 = __ldaxr(v13);
          while (__stlxr(v15 - 1, v13));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        if (v12)
LABEL_43:
          sub_20B4ED800((uint64_t)v8);
      }
    }
    sub_20B2B2688((uint64_t)&v54, v5);
    v53[0] = v54;
    v53[1] = v55;
    v53[2] = v56;
    sub_20B2B2090((uint64_t)&v47, (uint64_t)&v54 + 8, v53);
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
          if (!v34)
            goto LABEL_52;
          goto LABEL_51;
        }
      }
      if (v34)
LABEL_51:
        sub_20B4ED9D4((uint64_t)v8);
    }
LABEL_52:
    if (v7)
    {
      v38 = (unint64_t *)&v7->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v40 = DWORD2(v49);
    *(_DWORD *)(a1 + 8) = DWORD2(v47);
    v41 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v41 == -1)
    {
      if ((_DWORD)v40 == -1)
      {
        result = *(double *)&v50;
        v44 = v51;
        *(_OWORD *)(a1 + 48) = v50;
        *(_OWORD *)(a1 + 64) = v44;
        *(_QWORD *)(a1 + 80) = v52;
        return result;
      }
    }
    else if ((_DWORD)v40 == -1)
    {
      ((void (*)(__int128 *, uint64_t))off_24C418120[v41])(&v54, a1 + 16);
      *(_DWORD *)(a1 + 40) = -1;
      goto LABEL_62;
    }
    *(_QWORD *)&v54 = a1 + 16;
    ((void (*)(__int128 *))off_24C418150[v40])(&v54);
LABEL_62:
    v42 = DWORD2(v49);
    result = *(double *)&v50;
    v43 = v51;
    *(_OWORD *)(a1 + 48) = v50;
    *(_OWORD *)(a1 + 64) = v43;
    *(_QWORD *)(a1 + 80) = v52;
    *(_QWORD *)&v47 = off_24C416DA8;
    if ((_DWORD)v42 != -1)
      ((void (*)(__int128 *, __int128 *))off_24C418120[v42])(&v54, &v48);
    return result;
  }
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v54, lpsrc, 29);
  v17 = *(_OWORD *)(v54 + 16);
  v16 = *(_OWORD *)(v54 + 32);
  v47 = *(_OWORD *)v54;
  v48 = v17;
  v49 = v16;
  *(_QWORD *)&v54 = 0;
  MEMORY[0x20BD3583C]();
  sub_20B2B2444((uint64_t)&v54, a1);
  *(_QWORD *)&v53[0] = &v47;
  *((_QWORD *)&v53[0] + 1) = &v54;
  if (DWORD1(v48) == 1 && DWORD1(v55) == 1)
  {
    sub_20AFE5D88((size_t *)v53);
  }
  else
  {
    v45 = 0;
    if (DWORD2(v47) && HIDWORD(v47) && (_DWORD)v48)
    {
      v46 = &v45;
      sub_20AFEA3E0((uint64_t)&v46, (uint64_t)&v47, (uint64_t)&v54);
    }
  }
  return result;
}

uint64_t sub_20B2B3308(uint64_t a1)
{
  _QWORD v2[6];

  sub_20B2B2444((uint64_t)v2, a1);
  return v2[0];
}

double sub_20B2B3330@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 29
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2B2444((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_20B2B33D0@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 29
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2B2688((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_20B2B3470()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_25463C040);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C040))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_25463C048);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463C048))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25463C050);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C050))
    {
LABEL_13:
      if (byte_25463C7D7 < 0)
      {
        sub_20AEC60F4(&xmmword_25463C7A8, (void *)qword_25463C7C0, unk_25463C7C8);
      }
      else
      {
        xmmword_25463C7A8 = *(_OWORD *)&qword_25463C7C0;
        unk_25463C7B8 = unk_25463C7D0;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C7A8, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C048);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_25463C058);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463C058))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Rgba8u>]", &qword_25463C7D8);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C7D8, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C058);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_25463C060);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C060))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_25463C068);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25463C068))
      {
        if (byte_25463C7F0[23] < 0)
          sub_20AEC60F4(&__p, *(void **)byte_25463C7F0, *(unint64_t *)&byte_25463C7F0[8]);
        else
          __p = *(std::string *)byte_25463C7F0;
        sub_20B52B814(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_25463C808);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C808, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463C068);
      }
      if (byte_25463C81F < 0)
      {
        sub_20AEC60F4(v17, (void *)xmmword_25463C808, *((unint64_t *)&xmmword_25463C808 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_25463C808;
        v18 = unk_25463C818;
      }
      sub_20AFD3730((char *)v17, (std::string *)&qword_25463C7C0);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C7C0, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C050);
      goto LABEL_13;
    }
    if (byte_25463C7EF >= 0)
      v6 = byte_25463C7EF;
    else
      v6 = unk_25463C7E0;
    if (byte_25463C7EF >= 0)
      v7 = &qword_25463C7D8;
    else
      v7 = (uint64_t *)qword_25463C7D8;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_25463C7F0[8] = v6;
      *(_QWORD *)&byte_25463C7F0[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_25463C7F0 = v13;
    }
    else
    {
      v13 = byte_25463C7F0;
      byte_25463C7F0[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_25463C7F0, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463C060);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_25463C7BF < 0)
  {
    sub_20AEC60F4(&xmmword_25463C790, (void *)xmmword_25463C7A8, *((unint64_t *)&xmmword_25463C7A8 + 1));
  }
  else
  {
    xmmword_25463C790 = xmmword_25463C7A8;
    unk_25463C7A0 = unk_25463C7B8;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C790, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463C040);
LABEL_2:
  if (byte_25463C7A7 >= 0)
    return &xmmword_25463C790;
  else
    return (__int128 *)xmmword_25463C790;
}

void sub_20B2B38C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25463C050);
  __cxa_guard_abort(&qword_25463C048);
  __cxa_guard_abort(&qword_25463C040);
  _Unwind_Resume(a1);
}

void sub_20B2B3960(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463C040);
  _Unwind_Resume(a1);
}

void sub_20B2B3978()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_20B5AACCD, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B2B39B4(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_20B4ED8EC(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24C41E008;
        *v42 = &off_24C417CF8;
        sub_20B4E78A4(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_20B4EDAC0(v79);
        }
LABEL_64:
        v78 = &off_24C41E150;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_20AECFAB8();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_20B4ED800(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24C41DFE8;
  *v42 = &off_24C417CD8;
  sub_20B4E7478(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_20B4ED9D4(v79);
  }
LABEL_102:
  v78 = &off_24C41E150;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_20B2B41A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E7584(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2B41DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2B41F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E79B0(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2B4224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2B4238()
{
  return 65792;
}

_QWORD *sub_20B2B4244@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E78A4(a2, v2);
  if (v3 > 1)
    sub_20AECFAB8();
  return sub_20B4E7798(a2, v2);
}

uint64_t sub_20B2B4284(uint64_t a1, uint64_t a2, __int128 *a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  unint64_t *v15;
  unint64_t v16;
  __int128 v17;
  uint64_t *v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t *v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  __n128 v52;
  std::__shared_weak_count *v53;
  uint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _BYTE v65[32];
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t (**v70)();
  uint64_t *v71;
  std::__shared_weak_count *v72;
  _QWORD v73[2];
  _QWORD v74[3];
  __int128 v75;
  uint64_t v76;
  uint64_t v77;

  v77 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24C417A08;
  v5 = *(unsigned int *)(a2 + 32);
  v4 = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x10)
    v6 = 16;
  else
    v6 = v4;
  LODWORD(v74[0]) = 4;
  v7 = *(_QWORD *)(a2 + 24);
  HIDWORD(v74[0]) = v7;
  v8 = HIDWORD(v7);
  *(_QWORD *)v65 = v74[0];
  *(_DWORD *)&v65[8] = HIDWORD(v7);
  LODWORD(v74[0]) = 1;
  *(_QWORD *)((char *)v74 + 4) = v5 | (v6 << 32);
  *(_QWORD *)&v65[12] = v74[0];
  *(_DWORD *)&v65[20] = v6;
  *(_QWORD *)&v65[24] = v7;
  v66 = *(_QWORD *)((char *)v74 + 4);
  v63 = a3[1];
  v64 = a3[2];
  v62 = *a3;
  *(_QWORD *)a1 = off_24C417108;
  *(_DWORD *)(a1 + 8) = 0;
  if ((_DWORD)v7 && HIDWORD(v7))
  {
    sub_20B295334(0, 31, (uint64_t)v65, a1 + 16);
    LODWORD(v8) = *(_DWORD *)&v65[28];
    v9 = a1 + 48;
    if (!*(_DWORD *)&v65[24])
      goto LABEL_19;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24C41E150;
    *(_DWORD *)(a1 + 40) = 0;
    v9 = a1 + 48;
    if (!(_DWORD)v7)
      goto LABEL_19;
  }
  if ((_DWORD)v8)
  {
    if (*(_DWORD *)(a1 + 40))
      sub_20AECFAB8();
    v10 = *(_QWORD *)(a1 + 24);
    v11 = *(std::__shared_weak_count **)(a1 + 32);
    *(_QWORD *)&v67 = &off_24C41E150;
    *((_QWORD *)&v67 + 1) = v10;
    *(_QWORD *)&v68 = v11;
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(p_shared_owners);
      while (__stxr(v13 + 1, p_shared_owners));
    }
    sub_20B2956A4((uint64_t)v74, (uint64_t)&v67);
    v14 = v75;
    *(_OWORD *)v9 = *(_OWORD *)&v74[1];
    *(_OWORD *)(v9 + 16) = v14;
    *(_QWORD *)(v9 + 32) = v76;
    *(_QWORD *)&v67 = &off_24C41E150;
    if (v11)
    {
      v15 = (unint64_t *)&v11->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    goto LABEL_20;
  }
LABEL_19:
  v17 = *(_OWORD *)&v65[16];
  *(_OWORD *)v9 = *(_OWORD *)v65;
  *(_OWORD *)(v9 + 16) = v17;
  *(_QWORD *)(v9 + 32) = v66;
LABEL_20:
  v67 = v62;
  v68 = v63;
  v69 = v64;
  if (*(_DWORD *)(a1 + 40) > 2u)
    goto LABEL_85;
  v18 = *(uint64_t **)(a1 + 24);
  if (!v18)
    goto LABEL_82;
  v20 = *v18;
  v19 = (std::__shared_weak_count *)v18[1];
  if (!v19)
    goto LABEL_27;
  v21 = (unint64_t *)&v19->__shared_owners_;
  do
    v22 = __ldxr(v21);
  while (__stxr(v22 + 1, v21));
  do
    v23 = __ldaxr(v21);
  while (__stlxr(v23 - 1, v21));
  if (!v23)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
    if (!v20)
      goto LABEL_82;
  }
  else
  {
LABEL_27:
    if (!v20)
      goto LABEL_82;
  }
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 == 2)
  {
    v43 = *(uint64_t **)(a1 + 24);
    v44 = *(std::__shared_weak_count **)(a1 + 32);
    v71 = v43;
    v72 = v44;
    if (v44)
    {
      v45 = (unint64_t *)&v44->__shared_owners_;
      do
        v46 = __ldxr(v45);
      while (__stxr(v46 + 1, v45));
    }
    v70 = &off_24C41E008;
    if (v43)
    {
      v48 = *v43;
      v47 = (std::__shared_weak_count *)v43[1];
      if (v47)
      {
        v49 = (unint64_t *)&v47->__shared_owners_;
        do
          v50 = __ldxr(v49);
        while (__stxr(v50 + 1, v49));
        do
          v51 = __ldaxr(v49);
        while (__stlxr(v51 - 1, v49));
        if (!v51)
        {
          ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
          std::__shared_weak_count::__release_weak(v47);
        }
      }
      if (v48)
        goto LABEL_68;
    }
    goto LABEL_69;
  }
  if (v24 == 1)
  {
    v34 = *(uint64_t **)(a1 + 24);
    v35 = *(std::__shared_weak_count **)(a1 + 32);
    v71 = v34;
    v72 = v35;
    if (v35)
    {
      v36 = (unint64_t *)&v35->__shared_owners_;
      do
        v37 = __ldxr(v36);
      while (__stxr(v37 + 1, v36));
    }
    v70 = &off_24C41E008;
    if (v34)
    {
      v39 = *v34;
      v38 = (std::__shared_weak_count *)v34[1];
      if (v38)
      {
        v40 = (unint64_t *)&v38->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
          std::__shared_weak_count::__release_weak(v38);
        }
      }
      if (v39)
        goto LABEL_68;
    }
    goto LABEL_69;
  }
  if (v24)
LABEL_85:
    sub_20AECFAB8();
  v25 = *(uint64_t **)(a1 + 24);
  v26 = *(std::__shared_weak_count **)(a1 + 32);
  v71 = v25;
  v72 = v26;
  if (v26)
  {
    v27 = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  v70 = &off_24C41E008;
  if (v25)
  {
    v30 = *v25;
    v29 = (std::__shared_weak_count *)v25[1];
    if (v29)
    {
      v31 = (unint64_t *)&v29->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
    if (v30)
LABEL_68:
      sub_20B4ED8EC((uint64_t)v71);
  }
LABEL_69:
  sub_20B2962A0((uint64_t)v74, a1);
  v73[0] = &v67;
  v73[1] = v74;
  v52.n128_f64[0] = sub_20AFEAE58(v73);
  if (v71)
  {
    v54 = *v71;
    v53 = (std::__shared_weak_count *)v71[1];
    if (v53)
    {
      v55 = (unint64_t *)&v53->__shared_owners_;
      do
        v56 = __ldxr(v55);
      while (__stxr(v56 + 1, v55));
      do
        v57 = __ldaxr(v55);
      while (__stlxr(v57 - 1, v55));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v53->__on_zero_shared)(v53, v52);
        std::__shared_weak_count::__release_weak(v53);
        if (!v54)
          goto LABEL_77;
        goto LABEL_76;
      }
    }
    if (v54)
LABEL_76:
      sub_20B4EDAC0((uint64_t)v71);
  }
LABEL_77:
  v70 = &off_24C41E150;
  v58 = v72;
  if (v72)
  {
    v59 = (unint64_t *)&v72->__shared_owners_;
    do
      v60 = __ldaxr(v59);
    while (__stlxr(v60 - 1, v59));
    if (!v60)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v58->__on_zero_shared)(v58, v52);
      std::__shared_weak_count::__release_weak(v58);
    }
  }
LABEL_82:
  *(_QWORD *)a1 = off_24C417A08;
  return a1;
}

void sub_20B2B4778(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::__shared_weak_count *a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *p_shared_owners;
  unint64_t v35;
  uint64_t v36;

  if (a29)
  {
    p_shared_owners = (unint64_t *)&a29->__shared_owners_;
    do
      v35 = __ldaxr(p_shared_owners);
    while (__stlxr(v35 - 1, p_shared_owners));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))a29->__on_zero_shared)(a29);
      std::__shared_weak_count::__release_weak(a29);
    }
  }
  *(_QWORD *)v29 = v31;
  v36 = *(unsigned int *)(v29 + 40);
  if ((_DWORD)v36 != -1)
    ((void (*)(uint64_t, uint64_t))off_24C418120[v36])(v32 - 136, v30);
  *(_DWORD *)(v29 + 40) = -1;
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B2B48C0(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C417108;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

_QWORD *sub_20B2B4924(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];
  std::__shared_weak_count *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v3 = *(std::__shared_weak_count **)(a2 + 16);
  v11[0] = &off_24C41E150;
  v11[1] = v4;
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20B295BBC((uint64_t)a1, (uint64_t)v11);
  v11[0] = &off_24C41E150;
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *a1 = off_24C417A08;
  return a1;
}

void sub_20B2B49CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2B49E0(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24C41E150;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B2956A4(a1, (uint64_t)&v27);
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24C41E150;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2B4C08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_20B2B4C24(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24C41E150;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B2956A4((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24C41E150;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 4;
  *(_QWORD *)&v33[4] = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 4);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2B4E6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2B4E88()
{
  return 31;
}

_UNKNOWN **sub_20B2B4E90()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE28))
    return &off_253EC31A8;
  __cxa_guard_release(&qword_25463BE28);
  return &off_253EC31A8;
}

void sub_20B2B4EE4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24C41DFE8;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_20B4ED800((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24C41DFE8;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_20AECFAB8();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24C41DFE8;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_20B2B4C24((uint64_t)v42, a1);
  sub_20B2B4C24((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_20B2B4284(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_20B4ED9D4((uint64_t)v45);
LABEL_45:
  v44 = &off_24C41E150;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_20B2B52A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x20BD3583C](v14, 0x10A3C4049419736);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2B52D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2B52E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2B52FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E736C(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_20AECFAB8();
    return sub_20B4E736C(a2, v2);
  }
  return sub_20B4E7478(a2, v2);
}

double sub_20B2B533C(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56[3];
  _OWORD v57[3];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C41DF08, (const struct __class_type_info *)&unk_24C417FA8, 0);
  if (!v4)
  {
    (*(void (**)(_OWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v57, lpsrc, 31);
    v16 = *(_QWORD *)&v57[0];
    v18 = *(_OWORD *)(*(_QWORD *)&v57[0] + 16);
    v17 = *(_OWORD *)(*(_QWORD *)&v57[0] + 32);
    v50 = **(_OWORD **)&v57[0];
    v51 = v18;
    v52 = v17;
    *(_QWORD *)&v57[0] = 0;
    MEMORY[0x20BD3583C](v16, 0xC400A2AC0F1, v19, v20, v21, v22);
    sub_20B2B49E0((uint64_t)v57, a1);
    *(_QWORD *)&v56[0] = &v50;
    *((_QWORD *)&v56[0] + 1) = v57;
    return sub_20AFEAE58(v56);
  }
  v5 = (uint64_t)v4;
  v6 = *((_DWORD *)v4 + 10);
  if (v6 == 2)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v25 = __ldxr(p_shared_owners);
      while (__stxr(v25 + 1, p_shared_owners));
    }
    if (v8)
    {
      v27 = *v8;
      v26 = (std::__shared_weak_count *)v8[1];
      if (v26)
      {
        v28 = (unint64_t *)&v26->__shared_owners_;
        do
          v29 = __ldxr(v28);
        while (__stxr(v29 + 1, v28));
        do
          v30 = __ldaxr(v28);
        while (__stlxr(v30 - 1, v28));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      if (v27)
        goto LABEL_41;
    }
  }
  else if (v6 == 1)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v31 = (unint64_t *)&v7->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_41;
    }
  }
  else
  {
    if (v6)
      sub_20AECFAB8();
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v9 = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    if (v8)
    {
      v12 = *v8;
      v11 = (std::__shared_weak_count *)v8[1];
      if (v11)
      {
        v13 = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
        do
          v15 = __ldaxr(v13);
        while (__stlxr(v15 - 1, v13));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      if (v12)
LABEL_41:
        sub_20B4ED800((uint64_t)v8);
    }
  }
  sub_20B2B4C24((uint64_t)v57, v5);
  v56[0] = v57[0];
  v56[1] = v57[1];
  v56[2] = v57[2];
  sub_20B2B4284((uint64_t)&v50, (uint64_t)v57 + 8, v56);
  if (v8)
  {
    v39 = *v8;
    v38 = (std::__shared_weak_count *)v8[1];
    if (v38)
    {
      v40 = (unint64_t *)&v38->__shared_owners_;
      do
        v41 = __ldxr(v40);
      while (__stxr(v41 + 1, v40));
      do
        v42 = __ldaxr(v40);
      while (__stlxr(v42 - 1, v40));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
        if (!v39)
          goto LABEL_50;
        goto LABEL_49;
      }
    }
    if (v39)
LABEL_49:
      sub_20B4ED9D4((uint64_t)v8);
  }
LABEL_50:
  if (v7)
  {
    v43 = (unint64_t *)&v7->__shared_owners_;
    do
      v44 = __ldaxr(v43);
    while (__stlxr(v44 - 1, v43));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v45 = DWORD2(v52);
  *(_DWORD *)(a1 + 8) = DWORD2(v50);
  v46 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v46 == -1)
  {
    if ((_DWORD)v45 == -1)
    {
      result = *(double *)&v53;
      v49 = v54;
      *(_OWORD *)(a1 + 48) = v53;
      *(_OWORD *)(a1 + 64) = v49;
      *(_QWORD *)(a1 + 80) = v55;
      return result;
    }
  }
  else if ((_DWORD)v45 == -1)
  {
    ((void (*)(_OWORD *, uint64_t))off_24C418120[v46])(v57, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_60;
  }
  *(_QWORD *)&v57[0] = a1 + 16;
  ((void (*)(_OWORD *))off_24C418150[v45])(v57);
LABEL_60:
  v47 = DWORD2(v52);
  result = *(double *)&v53;
  v48 = v54;
  *(_OWORD *)(a1 + 48) = v53;
  *(_OWORD *)(a1 + 64) = v48;
  *(_QWORD *)(a1 + 80) = v55;
  *(_QWORD *)&v50 = off_24C417108;
  if ((_DWORD)v47 != -1)
    ((void (*)(_OWORD *, __int128 *))off_24C418120[v47])(v57, &v51);
  return result;
}

uint64_t sub_20B2B5850(uint64_t a1)
{
  _QWORD v2[6];

  sub_20B2B49E0((uint64_t)v2, a1);
  return v2[0];
}

double sub_20B2B5878@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 31
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2B49E0((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_20B2B5918@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 31
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2B4C24((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_20B2B59B8()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_25463C070);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C070))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_25463C078);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463C078))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25463C080);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C080))
    {
LABEL_13:
      if (byte_25463C867 < 0)
      {
        sub_20AEC60F4(&xmmword_25463C838, (void *)qword_25463C850, unk_25463C858);
      }
      else
      {
        xmmword_25463C838 = *(_OWORD *)&qword_25463C850;
        unk_25463C848 = unk_25463C860;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C838, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C078);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_25463C088);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463C088))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Rgba16f>]", &qword_25463C868);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C868, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C088);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_25463C090);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C090))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_25463C098);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25463C098))
      {
        if (byte_25463C880[23] < 0)
          sub_20AEC60F4(&__p, *(void **)byte_25463C880, *(unint64_t *)&byte_25463C880[8]);
        else
          __p = *(std::string *)byte_25463C880;
        sub_20B52B814(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_25463C898);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C898, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463C098);
      }
      if (byte_25463C8AF < 0)
      {
        sub_20AEC60F4(v17, (void *)xmmword_25463C898, *((unint64_t *)&xmmword_25463C898 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_25463C898;
        v18 = unk_25463C8A8;
      }
      sub_20AFD45B8((char *)v17, (std::string *)&qword_25463C850);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C850, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C080);
      goto LABEL_13;
    }
    if (byte_25463C87F >= 0)
      v6 = byte_25463C87F;
    else
      v6 = unk_25463C870;
    if (byte_25463C87F >= 0)
      v7 = &qword_25463C868;
    else
      v7 = (uint64_t *)qword_25463C868;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_25463C880[8] = v6;
      *(_QWORD *)&byte_25463C880[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_25463C880 = v13;
    }
    else
    {
      v13 = byte_25463C880;
      byte_25463C880[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_25463C880, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463C090);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_25463C84F < 0)
  {
    sub_20AEC60F4(&xmmword_25463C820, (void *)xmmword_25463C838, *((unint64_t *)&xmmword_25463C838 + 1));
  }
  else
  {
    xmmword_25463C820 = xmmword_25463C838;
    unk_25463C830 = unk_25463C848;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C820, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463C070);
LABEL_2:
  if (byte_25463C837 >= 0)
    return &xmmword_25463C820;
  else
    return (__int128 *)xmmword_25463C820;
}

void sub_20B2B5E0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25463C080);
  __cxa_guard_abort(&qword_25463C078);
  __cxa_guard_abort(&qword_25463C070);
  _Unwind_Resume(a1);
}

void sub_20B2B5EA8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463C070);
  _Unwind_Resume(a1);
}

void sub_20B2B5EC0()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_20B5AACCD, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B2B5EFC(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_20B4ED8EC(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24C41E008;
        *v42 = &off_24C417CF8;
        sub_20B4E78A4(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_20B4EDAC0(v79);
        }
LABEL_64:
        v78 = &off_24C41E150;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_20AECFAB8();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_20B4ED800(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24C41DFE8;
  *v42 = &off_24C417CD8;
  sub_20B4E7478(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_20B4ED9D4(v79);
  }
LABEL_102:
  v78 = &off_24C41E150;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_20B2B66F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E7584(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2B6724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2B6738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E79B0(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2B676C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2B6780()
{
  return 65792;
}

_QWORD *sub_20B2B678C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E78A4(a2, v2);
  if (v3 > 1)
    sub_20AECFAB8();
  return sub_20B4E7798(a2, v2);
}

uint64_t sub_20B2B67CC(uint64_t a1, uint64_t a2, __int128 *a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  unint64_t *v15;
  unint64_t v16;
  __int128 v17;
  uint64_t *v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t *v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  std::__shared_weak_count *v53;
  uint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _BYTE v65[32];
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t (**v70)();
  uint64_t *v71;
  std::__shared_weak_count *v72;
  uint64_t v73[2];
  char v74;
  char *v75;
  _BYTE v76[24];
  __int128 v77;
  uint64_t v78;
  uint64_t v79;

  v79 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24C417A98;
  v5 = *(unsigned int *)(a2 + 32);
  v4 = *(_DWORD *)(a2 + 36);
  if (v4 <= 8)
    v6 = 8;
  else
    v6 = v4;
  *(_DWORD *)v76 = 4;
  v7 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v76[4] = v7;
  v8 = HIDWORD(v7);
  *(_QWORD *)v65 = *(_QWORD *)v76;
  *(_DWORD *)&v65[8] = HIDWORD(v7);
  *(_DWORD *)v76 = 1;
  *(_QWORD *)&v76[4] = v5 | (v6 << 32);
  *(_QWORD *)&v65[12] = *(_QWORD *)v76;
  *(_DWORD *)&v65[20] = v6;
  *(_QWORD *)&v65[24] = v7;
  v66 = *(_QWORD *)&v76[4];
  v63 = a3[1];
  v64 = a3[2];
  v62 = *a3;
  *(_QWORD *)a1 = off_24C4172B8;
  *(_DWORD *)(a1 + 8) = 0;
  if ((_DWORD)v7 && HIDWORD(v7))
  {
    sub_20B298CEC(0, 32, (uint64_t)v65, a1 + 16);
    LODWORD(v8) = *(_DWORD *)&v65[28];
    v9 = a1 + 48;
    if (!*(_DWORD *)&v65[24])
      goto LABEL_19;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24C41E150;
    *(_DWORD *)(a1 + 40) = 0;
    v9 = a1 + 48;
    if (!(_DWORD)v7)
      goto LABEL_19;
  }
  if ((_DWORD)v8)
  {
    if (*(_DWORD *)(a1 + 40))
      sub_20AECFAB8();
    v10 = *(_QWORD *)(a1 + 24);
    v11 = *(std::__shared_weak_count **)(a1 + 32);
    *(_QWORD *)&v67 = &off_24C41E150;
    *((_QWORD *)&v67 + 1) = v10;
    *(_QWORD *)&v68 = v11;
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(p_shared_owners);
      while (__stxr(v13 + 1, p_shared_owners));
    }
    sub_20B29905C((uint64_t)v76, (uint64_t)&v67);
    v14 = v77;
    *(_OWORD *)v9 = *(_OWORD *)&v76[8];
    *(_OWORD *)(v9 + 16) = v14;
    *(_QWORD *)(v9 + 32) = v78;
    *(_QWORD *)&v67 = &off_24C41E150;
    if (v11)
    {
      v15 = (unint64_t *)&v11->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    goto LABEL_20;
  }
LABEL_19:
  v17 = *(_OWORD *)&v65[16];
  *(_OWORD *)v9 = *(_OWORD *)v65;
  *(_OWORD *)(v9 + 16) = v17;
  *(_QWORD *)(v9 + 32) = v66;
LABEL_20:
  v67 = v62;
  v68 = v63;
  v69 = v64;
  if (*(_DWORD *)(a1 + 40) > 2u)
    goto LABEL_94;
  v18 = *(uint64_t **)(a1 + 24);
  if (!v18)
    goto LABEL_91;
  v20 = *v18;
  v19 = (std::__shared_weak_count *)v18[1];
  if (!v19)
    goto LABEL_27;
  v21 = (unint64_t *)&v19->__shared_owners_;
  do
    v22 = __ldxr(v21);
  while (__stxr(v22 + 1, v21));
  do
    v23 = __ldaxr(v21);
  while (__stlxr(v23 - 1, v21));
  if (!v23)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
    if (!v20)
      goto LABEL_91;
  }
  else
  {
LABEL_27:
    if (!v20)
      goto LABEL_91;
  }
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 == 2)
  {
    v43 = *(uint64_t **)(a1 + 24);
    v44 = *(std::__shared_weak_count **)(a1 + 32);
    v71 = v43;
    v72 = v44;
    if (v44)
    {
      v45 = (unint64_t *)&v44->__shared_owners_;
      do
        v46 = __ldxr(v45);
      while (__stxr(v46 + 1, v45));
    }
    v70 = &off_24C41E008;
    if (v43)
    {
      v48 = *v43;
      v47 = (std::__shared_weak_count *)v43[1];
      if (v47)
      {
        v49 = (unint64_t *)&v47->__shared_owners_;
        do
          v50 = __ldxr(v49);
        while (__stxr(v50 + 1, v49));
        do
          v51 = __ldaxr(v49);
        while (__stlxr(v51 - 1, v49));
        if (!v51)
        {
          ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
          std::__shared_weak_count::__release_weak(v47);
        }
      }
      if (v48)
        goto LABEL_68;
    }
    goto LABEL_69;
  }
  if (v24 == 1)
  {
    v34 = *(uint64_t **)(a1 + 24);
    v35 = *(std::__shared_weak_count **)(a1 + 32);
    v71 = v34;
    v72 = v35;
    if (v35)
    {
      v36 = (unint64_t *)&v35->__shared_owners_;
      do
        v37 = __ldxr(v36);
      while (__stxr(v37 + 1, v36));
    }
    v70 = &off_24C41E008;
    if (v34)
    {
      v39 = *v34;
      v38 = (std::__shared_weak_count *)v34[1];
      if (v38)
      {
        v40 = (unint64_t *)&v38->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
          std::__shared_weak_count::__release_weak(v38);
        }
      }
      if (v39)
        goto LABEL_68;
    }
    goto LABEL_69;
  }
  if (v24)
LABEL_94:
    sub_20AECFAB8();
  v25 = *(uint64_t **)(a1 + 24);
  v26 = *(std::__shared_weak_count **)(a1 + 32);
  v71 = v25;
  v72 = v26;
  if (v26)
  {
    v27 = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  v70 = &off_24C41E008;
  if (v25)
  {
    v30 = *v25;
    v29 = (std::__shared_weak_count *)v25[1];
    if (v29)
    {
      v31 = (unint64_t *)&v29->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
    if (v30)
LABEL_68:
      sub_20B4ED8EC((uint64_t)v71);
  }
LABEL_69:
  sub_20B299C58((uint64_t)v76, a1);
  v73[0] = (uint64_t)&v67;
  v73[1] = (uint64_t)v76;
  if (DWORD1(v68) == 1 && *(_DWORD *)&v76[20] == 1)
  {
    sub_20AFC9A3C(v73);
  }
  else
  {
    v74 = 0;
    if (DWORD2(v67) && HIDWORD(v67) && (_DWORD)v68)
    {
      v75 = &v74;
      sub_20AFEB5FC((uint64_t)&v75, (uint64_t)&v67, (uint64_t)v76);
    }
  }
  if (!v71)
    goto LABEL_86;
  v54 = *v71;
  v53 = (std::__shared_weak_count *)v71[1];
  if (v53)
  {
    v55 = (unint64_t *)&v53->__shared_owners_;
    do
      v56 = __ldxr(v55);
    while (__stxr(v56 + 1, v55));
    do
      v57 = __ldaxr(v55);
    while (__stlxr(v57 - 1, v55));
    if (!v57)
    {
      ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
      std::__shared_weak_count::__release_weak(v53);
      if (!v54)
        goto LABEL_86;
      goto LABEL_85;
    }
  }
  if (v54)
LABEL_85:
    sub_20B4EDAC0((uint64_t)v71);
LABEL_86:
  v70 = &off_24C41E150;
  v58 = v72;
  if (v72)
  {
    v59 = (unint64_t *)&v72->__shared_owners_;
    do
      v60 = __ldaxr(v59);
    while (__stlxr(v60 - 1, v59));
    if (!v60)
    {
      ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
      std::__shared_weak_count::__release_weak(v58);
    }
  }
LABEL_91:
  *(_QWORD *)a1 = off_24C417A98;
  return a1;
}

void sub_20B2B6D0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::__shared_weak_count *a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *p_shared_owners;
  unint64_t v35;
  uint64_t v36;

  if (a29)
  {
    p_shared_owners = (unint64_t *)&a29->__shared_owners_;
    do
      v35 = __ldaxr(p_shared_owners);
    while (__stlxr(v35 - 1, p_shared_owners));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))a29->__on_zero_shared)(a29);
      std::__shared_weak_count::__release_weak(a29);
    }
  }
  *(_QWORD *)v29 = v31;
  v36 = *(unsigned int *)(v29 + 40);
  if ((_DWORD)v36 != -1)
    ((void (*)(uint64_t, uint64_t))off_24C418120[v36])(v32 - 136, v30);
  *(_DWORD *)(v29 + 40) = -1;
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B2B6E54(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C4172B8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

_QWORD *sub_20B2B6EB8(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];
  std::__shared_weak_count *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v3 = *(std::__shared_weak_count **)(a2 + 16);
  v11[0] = &off_24C41E150;
  v11[1] = v4;
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20B299574((uint64_t)a1, (uint64_t)v11);
  v11[0] = &off_24C41E150;
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *a1 = off_24C417A98;
  return a1;
}

void sub_20B2B6F60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2B6F74(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24C41E150;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B29905C(a1, (uint64_t)&v27);
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24C41E150;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2B719C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_20B2B71B8(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24C41E150;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B29905C((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24C41E150;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 4;
  *(_QWORD *)&v33[4] = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 4);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2B7400(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2B741C()
{
  return 32;
}

_UNKNOWN **sub_20B2B7424()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE28))
    return &off_253EC31A8;
  __cxa_guard_release(&qword_25463BE28);
  return &off_253EC31A8;
}

void sub_20B2B7478(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24C41DFE8;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_20B4ED800((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24C41DFE8;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_20AECFAB8();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24C41DFE8;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_20B2B71B8((uint64_t)v42, a1);
  sub_20B2B71B8((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_20B2B67CC(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_20B4ED9D4((uint64_t)v45);
LABEL_45:
  v44 = &off_24C41E150;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_20B2B783C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x20BD3583C](v14, 0x10A3C4049419736);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2B7868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2B787C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2B7890@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E736C(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_20AECFAB8();
    return sub_20B4E736C(a2, v2);
  }
  return sub_20B4E7478(a2, v2);
}

double sub_20B2B78D0(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  char v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53[3];
  __int128 v54;
  __int128 v55;
  __int128 v56;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C41DF08, (const struct __class_type_info *)&unk_24C417FC0, 0);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = *((_DWORD *)v4 + 10);
    if (v6 == 2)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
      }
      if (v8)
      {
        v22 = *v8;
        v21 = (std::__shared_weak_count *)v8[1];
        if (v21)
        {
          v23 = (unint64_t *)&v21->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        if (v22)
          goto LABEL_43;
      }
    }
    else if (v6 == 1)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v26 = (unint64_t *)&v7->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
      }
      if (v8)
      {
        v29 = *v8;
        v28 = (std::__shared_weak_count *)v8[1];
        if (v28)
        {
          v30 = (unint64_t *)&v28->__shared_owners_;
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 1, v30));
          do
            v32 = __ldaxr(v30);
          while (__stlxr(v32 - 1, v30));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        if (v29)
          goto LABEL_43;
      }
    }
    else
    {
      if (v6)
        sub_20AECFAB8();
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v9 = (unint64_t *)&v7->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      if (v8)
      {
        v12 = *v8;
        v11 = (std::__shared_weak_count *)v8[1];
        if (v11)
        {
          v13 = (unint64_t *)&v11->__shared_owners_;
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
          do
            v15 = __ldaxr(v13);
          while (__stlxr(v15 - 1, v13));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        if (v12)
LABEL_43:
          sub_20B4ED800((uint64_t)v8);
      }
    }
    sub_20B2B71B8((uint64_t)&v54, v5);
    v53[0] = v54;
    v53[1] = v55;
    v53[2] = v56;
    sub_20B2B67CC((uint64_t)&v47, (uint64_t)&v54 + 8, v53);
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
          if (!v34)
            goto LABEL_52;
          goto LABEL_51;
        }
      }
      if (v34)
LABEL_51:
        sub_20B4ED9D4((uint64_t)v8);
    }
LABEL_52:
    if (v7)
    {
      v38 = (unint64_t *)&v7->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v40 = DWORD2(v49);
    *(_DWORD *)(a1 + 8) = DWORD2(v47);
    v41 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v41 == -1)
    {
      if ((_DWORD)v40 == -1)
      {
        result = *(double *)&v50;
        v44 = v51;
        *(_OWORD *)(a1 + 48) = v50;
        *(_OWORD *)(a1 + 64) = v44;
        *(_QWORD *)(a1 + 80) = v52;
        return result;
      }
    }
    else if ((_DWORD)v40 == -1)
    {
      ((void (*)(__int128 *, uint64_t))off_24C418120[v41])(&v54, a1 + 16);
      *(_DWORD *)(a1 + 40) = -1;
      goto LABEL_62;
    }
    *(_QWORD *)&v54 = a1 + 16;
    ((void (*)(__int128 *))off_24C418150[v40])(&v54);
LABEL_62:
    v42 = DWORD2(v49);
    result = *(double *)&v50;
    v43 = v51;
    *(_OWORD *)(a1 + 48) = v50;
    *(_OWORD *)(a1 + 64) = v43;
    *(_QWORD *)(a1 + 80) = v52;
    *(_QWORD *)&v47 = off_24C4172B8;
    if ((_DWORD)v42 != -1)
      ((void (*)(__int128 *, __int128 *))off_24C418120[v42])(&v54, &v48);
    return result;
  }
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v54, lpsrc, 32);
  v17 = *(_OWORD *)(v54 + 16);
  v16 = *(_OWORD *)(v54 + 32);
  v47 = *(_OWORD *)v54;
  v48 = v17;
  v49 = v16;
  *(_QWORD *)&v54 = 0;
  MEMORY[0x20BD3583C]();
  sub_20B2B6F74((uint64_t)&v54, a1);
  *(_QWORD *)&v53[0] = &v47;
  *((_QWORD *)&v53[0] + 1) = &v54;
  if (DWORD1(v48) == 1 && DWORD1(v55) == 1)
  {
    sub_20AFC9A3C((uint64_t *)v53);
  }
  else
  {
    v45 = 0;
    if (DWORD2(v47) && HIDWORD(v47) && (_DWORD)v48)
    {
      v46 = &v45;
      *(float *)&result = sub_20AFEB5FC((uint64_t)&v46, (uint64_t)&v47, (uint64_t)&v54);
    }
  }
  return result;
}

uint64_t sub_20B2B7E38(uint64_t a1)
{
  _QWORD v2[6];

  sub_20B2B6F74((uint64_t)v2, a1);
  return v2[0];
}

double sub_20B2B7E60@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 32
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2B6F74((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_20B2B7F00@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 32
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2B71B8((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_20B2B7FA0()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_25463C0A0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C0A0))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_25463C0A8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463C0A8))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25463C0B0);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C0B0))
    {
LABEL_13:
      if (byte_25463C8F7 < 0)
      {
        sub_20AEC60F4(&xmmword_25463C8C8, (void *)qword_25463C8E0, unk_25463C8E8);
      }
      else
      {
        xmmword_25463C8C8 = *(_OWORD *)&qword_25463C8E0;
        unk_25463C8D8 = unk_25463C8F0;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C8C8, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C0A8);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_25463C0B8);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463C0B8))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Rgba32f>]", &qword_25463C8F8);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C8F8, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C0B8);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_25463C0C0);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C0C0))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_25463C0C8);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25463C0C8))
      {
        if (byte_25463C910[23] < 0)
          sub_20AEC60F4(&__p, *(void **)byte_25463C910, *(unint64_t *)&byte_25463C910[8]);
        else
          __p = *(std::string *)byte_25463C910;
        sub_20B52B814(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_25463C928);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C928, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463C0C8);
      }
      if (byte_25463C93F < 0)
      {
        sub_20AEC60F4(v17, (void *)xmmword_25463C928, *((unint64_t *)&xmmword_25463C928 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_25463C928;
        v18 = unk_25463C938;
      }
      sub_20AFD4C78((char *)v17, (std::string *)&qword_25463C8E0);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C8E0, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C0B0);
      goto LABEL_13;
    }
    if (byte_25463C90F >= 0)
      v6 = byte_25463C90F;
    else
      v6 = unk_25463C900;
    if (byte_25463C90F >= 0)
      v7 = &qword_25463C8F8;
    else
      v7 = (uint64_t *)qword_25463C8F8;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_25463C910[8] = v6;
      *(_QWORD *)&byte_25463C910[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_25463C910 = v13;
    }
    else
    {
      v13 = byte_25463C910;
      byte_25463C910[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_25463C910, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463C0C0);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_25463C8DF < 0)
  {
    sub_20AEC60F4(&xmmword_25463C8B0, (void *)xmmword_25463C8C8, *((unint64_t *)&xmmword_25463C8C8 + 1));
  }
  else
  {
    xmmword_25463C8B0 = xmmword_25463C8C8;
    unk_25463C8C0 = unk_25463C8D8;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C8B0, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463C0A0);
LABEL_2:
  if (byte_25463C8C7 >= 0)
    return &xmmword_25463C8B0;
  else
    return (__int128 *)xmmword_25463C8B0;
}

void sub_20B2B83F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25463C0B0);
  __cxa_guard_abort(&qword_25463C0A8);
  __cxa_guard_abort(&qword_25463C0A0);
  _Unwind_Resume(a1);
}

void sub_20B2B8490(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463C0A0);
  _Unwind_Resume(a1);
}

void sub_20B2B84A8()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_20B5AACCD, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B2B84E4(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_20B4ED8EC(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24C41E008;
        *v42 = &off_24C417CF8;
        sub_20B4E78A4(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_20B4EDAC0(v79);
        }
LABEL_64:
        v78 = &off_24C41E150;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_20AECFAB8();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_20B4ED800(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24C41DFE8;
  *v42 = &off_24C417CD8;
  sub_20B4E7478(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_20B4ED9D4(v79);
  }
LABEL_102:
  v78 = &off_24C41E150;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_20B2B8CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E7584(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2B8D0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2B8D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E79B0(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2B8D54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2B8D68()
{
  return 65792;
}

_QWORD *sub_20B2B8D74@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E78A4(a2, v2);
  if (v3 > 1)
    sub_20AECFAB8();
  return sub_20B4E7798(a2, v2);
}

uint64_t sub_20B2B8DB4(uint64_t a1, uint64_t a2, __int128 *a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  unint64_t *v15;
  unint64_t v16;
  __int128 v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[32];
  uint64_t v23;
  _QWORD v24[3];
  _BYTE v25[48];
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24C417B28;
  v5 = *(unsigned int *)(a2 + 32);
  v4 = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x20)
    v6 = 32;
  else
    v6 = v4;
  *(_DWORD *)v25 = 4;
  v7 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v25[4] = v7;
  v8 = HIDWORD(v7);
  *(_QWORD *)v22 = *(_QWORD *)v25;
  *(_DWORD *)&v22[8] = HIDWORD(v7);
  *(_DWORD *)v25 = 1;
  *(_QWORD *)&v25[4] = v5 | (v6 << 32);
  *(_QWORD *)&v22[12] = *(_QWORD *)v25;
  *(_DWORD *)&v22[20] = v6;
  *(_QWORD *)&v22[24] = v7;
  v23 = *(_QWORD *)&v25[4];
  v20 = a3[1];
  v21 = a3[2];
  v19 = *a3;
  *(_QWORD *)a1 = off_24C416DA8;
  *(_DWORD *)(a1 + 8) = 0;
  if ((_DWORD)v7 && HIDWORD(v7))
  {
    sub_20B28DA1C(0, 33, (uint64_t)v22, a1 + 16);
    LODWORD(v8) = *(_DWORD *)&v22[28];
    v9 = a1 + 48;
    if (!*(_DWORD *)&v22[24])
      goto LABEL_19;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24C41E150;
    *(_DWORD *)(a1 + 40) = 0;
    v9 = a1 + 48;
    if (!(_DWORD)v7)
    {
LABEL_19:
      v17 = *(_OWORD *)&v22[16];
      *(_OWORD *)v9 = *(_OWORD *)v22;
      *(_OWORD *)(v9 + 16) = v17;
      *(_QWORD *)(v9 + 32) = v23;
      goto LABEL_20;
    }
  }
  if (!(_DWORD)v8)
    goto LABEL_19;
  if (*(_DWORD *)(a1 + 40))
    sub_20AECFAB8();
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(std::__shared_weak_count **)(a1 + 32);
  v24[0] = &off_24C41E150;
  v24[1] = v10;
  v24[2] = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
  }
  sub_20B28DD8C((uint64_t)v25, (uint64_t)v24);
  v14 = *(_OWORD *)&v25[24];
  *(_OWORD *)v9 = *(_OWORD *)&v25[8];
  *(_OWORD *)(v9 + 16) = v14;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)&v25[40];
  v24[0] = &off_24C41E150;
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
LABEL_20:
  *(_OWORD *)v25 = v19;
  *(_OWORD *)&v25[16] = v20;
  *(_OWORD *)&v25[32] = v21;
  sub_20B28E604(a1, v25);
  *(_QWORD *)a1 = off_24C417B28;
  return a1;
}

void sub_20B2B8FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  va_list va;

  va_start(va, a12);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v12);
  _Unwind_Resume(a1);
}

void sub_20B2B8FDC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

void sub_20B2B8FF0(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_20B2B8FFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  *(_QWORD *)v20 = v22;
  v24 = *(unsigned int *)(v20 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a20, v21);
  *(_DWORD *)(v20 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2B9038(void *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  JUMPOUT(0x20B2B8FF4);
}

uint64_t sub_20B2B9048(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416DA8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

_QWORD *sub_20B2B90AC(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];
  std::__shared_weak_count *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v3 = *(std::__shared_weak_count **)(a2 + 16);
  v11[0] = &off_24C41E150;
  v11[1] = v4;
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20B28EA38((uint64_t)a1, (uint64_t)v11);
  v11[0] = &off_24C41E150;
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *a1 = off_24C417B28;
  return a1;
}

void sub_20B2B9154(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2B9168(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24C41E150;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B28DD8C(a1, (uint64_t)&v27);
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24C41E150;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2B9390(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_20B2B93AC(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24C41E150;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B28DD8C((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24C41E150;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 4;
  *(_QWORD *)&v33[4] = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 4);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2B95F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2B9610()
{
  return 33;
}

_UNKNOWN **sub_20B2B9618()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE28))
    return &off_253EC31A8;
  __cxa_guard_release(&qword_25463BE28);
  return &off_253EC31A8;
}

void sub_20B2B966C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24C41DFE8;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_20B4ED800((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24C41DFE8;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_20AECFAB8();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24C41DFE8;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_20B2B93AC((uint64_t)v42, a1);
  sub_20B2B93AC((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_20B2B8DB4(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_20B4ED9D4((uint64_t)v45);
LABEL_45:
  v44 = &off_24C41E150;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_20B2B9A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x20BD3583C](v14, 0x10A3C4049419736);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2B9A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2B9A70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2B9A84@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E736C(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_20AECFAB8();
    return sub_20B4E736C(a2, v2);
  }
  return sub_20B4E7478(a2, v2);
}

double sub_20B2B9AC4(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  char v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53[3];
  __int128 v54;
  __int128 v55;
  __int128 v56;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C41DF08, (const struct __class_type_info *)&unk_24C417FD8, 0);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = *((_DWORD *)v4 + 10);
    if (v6 == 2)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
      }
      if (v8)
      {
        v22 = *v8;
        v21 = (std::__shared_weak_count *)v8[1];
        if (v21)
        {
          v23 = (unint64_t *)&v21->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        if (v22)
          goto LABEL_43;
      }
    }
    else if (v6 == 1)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v26 = (unint64_t *)&v7->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
      }
      if (v8)
      {
        v29 = *v8;
        v28 = (std::__shared_weak_count *)v8[1];
        if (v28)
        {
          v30 = (unint64_t *)&v28->__shared_owners_;
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 1, v30));
          do
            v32 = __ldaxr(v30);
          while (__stlxr(v32 - 1, v30));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        if (v29)
          goto LABEL_43;
      }
    }
    else
    {
      if (v6)
        sub_20AECFAB8();
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v9 = (unint64_t *)&v7->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      if (v8)
      {
        v12 = *v8;
        v11 = (std::__shared_weak_count *)v8[1];
        if (v11)
        {
          v13 = (unint64_t *)&v11->__shared_owners_;
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
          do
            v15 = __ldaxr(v13);
          while (__stlxr(v15 - 1, v13));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        if (v12)
LABEL_43:
          sub_20B4ED800((uint64_t)v8);
      }
    }
    sub_20B2B93AC((uint64_t)&v54, v5);
    v53[0] = v54;
    v53[1] = v55;
    v53[2] = v56;
    sub_20B2B8DB4((uint64_t)&v47, (uint64_t)&v54 + 8, v53);
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
          if (!v34)
            goto LABEL_52;
          goto LABEL_51;
        }
      }
      if (v34)
LABEL_51:
        sub_20B4ED9D4((uint64_t)v8);
    }
LABEL_52:
    if (v7)
    {
      v38 = (unint64_t *)&v7->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v40 = DWORD2(v49);
    *(_DWORD *)(a1 + 8) = DWORD2(v47);
    v41 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v41 == -1)
    {
      if ((_DWORD)v40 == -1)
      {
        result = *(double *)&v50;
        v44 = v51;
        *(_OWORD *)(a1 + 48) = v50;
        *(_OWORD *)(a1 + 64) = v44;
        *(_QWORD *)(a1 + 80) = v52;
        return result;
      }
    }
    else if ((_DWORD)v40 == -1)
    {
      ((void (*)(__int128 *, uint64_t))off_24C418120[v41])(&v54, a1 + 16);
      *(_DWORD *)(a1 + 40) = -1;
      goto LABEL_62;
    }
    *(_QWORD *)&v54 = a1 + 16;
    ((void (*)(__int128 *))off_24C418150[v40])(&v54);
LABEL_62:
    v42 = DWORD2(v49);
    result = *(double *)&v50;
    v43 = v51;
    *(_OWORD *)(a1 + 48) = v50;
    *(_OWORD *)(a1 + 64) = v43;
    *(_QWORD *)(a1 + 80) = v52;
    *(_QWORD *)&v47 = off_24C416DA8;
    if ((_DWORD)v42 != -1)
      ((void (*)(__int128 *, __int128 *))off_24C418120[v42])(&v54, &v48);
    return result;
  }
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v54, lpsrc, 33);
  v17 = *(_OWORD *)(v54 + 16);
  v16 = *(_OWORD *)(v54 + 32);
  v47 = *(_OWORD *)v54;
  v48 = v17;
  v49 = v16;
  *(_QWORD *)&v54 = 0;
  MEMORY[0x20BD3583C]();
  sub_20B2B9168((uint64_t)&v54, a1);
  *(_QWORD *)&v53[0] = &v47;
  *((_QWORD *)&v53[0] + 1) = &v54;
  if (DWORD1(v48) == 1 && DWORD1(v55) == 1)
  {
    sub_20AFE5D88((size_t *)v53);
  }
  else
  {
    v45 = 0;
    if (DWORD2(v47) && HIDWORD(v47) && (_DWORD)v48)
    {
      v46 = &v45;
      sub_20AFEA3E0((uint64_t)&v46, (uint64_t)&v47, (uint64_t)&v54);
    }
  }
  return result;
}

uint64_t sub_20B2BA02C(uint64_t a1)
{
  _QWORD v2[6];

  sub_20B2B9168((uint64_t)v2, a1);
  return v2[0];
}

double sub_20B2BA054@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 33
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2B9168((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_20B2BA0F4@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 33
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2B93AC((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_20B2BA194()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_25463C0D0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C0D0))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_25463C0D8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463C0D8))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25463C0E0);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C0E0))
    {
LABEL_13:
      if (byte_25463C987 < 0)
      {
        sub_20AEC60F4(&xmmword_25463C958, (void *)qword_25463C970, unk_25463C978);
      }
      else
      {
        xmmword_25463C958 = *(_OWORD *)&qword_25463C970;
        unk_25463C968 = unk_25463C980;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C958, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C0D8);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_25463C0E8);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463C0E8))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Abgr8u>]", &qword_25463C988);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C988, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C0E8);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_25463C0F0);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C0F0))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_25463C0F8);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25463C0F8))
      {
        if (byte_25463C9A0[23] < 0)
          sub_20AEC60F4(&__p, *(void **)byte_25463C9A0, *(unint64_t *)&byte_25463C9A0[8]);
        else
          __p = *(std::string *)byte_25463C9A0;
        sub_20B52B814(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_25463C9B8);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C9B8, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463C0F8);
      }
      if (byte_25463C9CF < 0)
      {
        sub_20AEC60F4(v17, (void *)xmmword_25463C9B8, *((unint64_t *)&xmmword_25463C9B8 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_25463C9B8;
        v18 = unk_25463C9C8;
      }
      sub_20AFD52C4((char *)v17, (std::string *)&qword_25463C970);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463C970, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C0E0);
      goto LABEL_13;
    }
    if (byte_25463C99F >= 0)
      v6 = byte_25463C99F;
    else
      v6 = unk_25463C990;
    if (byte_25463C99F >= 0)
      v7 = &qword_25463C988;
    else
      v7 = (uint64_t *)qword_25463C988;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_25463C9A0[8] = v6;
      *(_QWORD *)&byte_25463C9A0[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_25463C9A0 = v13;
    }
    else
    {
      v13 = byte_25463C9A0;
      byte_25463C9A0[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_25463C9A0, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463C0F0);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_25463C96F < 0)
  {
    sub_20AEC60F4(&xmmword_25463C940, (void *)xmmword_25463C958, *((unint64_t *)&xmmword_25463C958 + 1));
  }
  else
  {
    xmmword_25463C940 = xmmword_25463C958;
    unk_25463C950 = unk_25463C968;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C940, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463C0D0);
LABEL_2:
  if (byte_25463C957 >= 0)
    return &xmmword_25463C940;
  else
    return (__int128 *)xmmword_25463C940;
}

void sub_20B2BA5E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25463C0E0);
  __cxa_guard_abort(&qword_25463C0D8);
  __cxa_guard_abort(&qword_25463C0D0);
  _Unwind_Resume(a1);
}

void sub_20B2BA684(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463C0D0);
  _Unwind_Resume(a1);
}

void sub_20B2BA69C()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_20B5AACCD, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B2BA6D8(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_20B4ED8EC(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24C41E008;
        *v42 = &off_24C417CF8;
        sub_20B4E78A4(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_20B4EDAC0(v79);
        }
LABEL_64:
        v78 = &off_24C41E150;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_20AECFAB8();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_20B4ED800(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24C41DFE8;
  *v42 = &off_24C417CD8;
  sub_20B4E7478(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_20B4ED9D4(v79);
  }
LABEL_102:
  v78 = &off_24C41E150;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_20B2BAECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E7584(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2BAF00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2BAF14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E79B0(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2BAF48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2BAF5C()
{
  return 65792;
}

_QWORD *sub_20B2BAF68@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E78A4(a2, v2);
  if (v3 > 1)
    sub_20AECFAB8();
  return sub_20B4E7798(a2, v2);
}

uint64_t sub_20B2BAFA8(uint64_t a1, uint64_t a2, __int128 *a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  unint64_t *v15;
  unint64_t v16;
  __int128 v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[32];
  uint64_t v23;
  _QWORD v24[3];
  _BYTE v25[48];
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24C417BB8;
  v5 = *(unsigned int *)(a2 + 32);
  v4 = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x20)
    v6 = 32;
  else
    v6 = v4;
  *(_DWORD *)v25 = 4;
  v7 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v25[4] = v7;
  v8 = HIDWORD(v7);
  *(_QWORD *)v22 = *(_QWORD *)v25;
  *(_DWORD *)&v22[8] = HIDWORD(v7);
  *(_DWORD *)v25 = 1;
  *(_QWORD *)&v25[4] = v5 | (v6 << 32);
  *(_QWORD *)&v22[12] = *(_QWORD *)v25;
  *(_DWORD *)&v22[20] = v6;
  *(_QWORD *)&v22[24] = v7;
  v23 = *(_QWORD *)&v25[4];
  v20 = a3[1];
  v21 = a3[2];
  v19 = *a3;
  *(_QWORD *)a1 = off_24C416DA8;
  *(_DWORD *)(a1 + 8) = 0;
  if ((_DWORD)v7 && HIDWORD(v7))
  {
    sub_20B28DA1C(0, 37, (uint64_t)v22, a1 + 16);
    LODWORD(v8) = *(_DWORD *)&v22[28];
    v9 = a1 + 48;
    if (!*(_DWORD *)&v22[24])
      goto LABEL_19;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24C41E150;
    *(_DWORD *)(a1 + 40) = 0;
    v9 = a1 + 48;
    if (!(_DWORD)v7)
    {
LABEL_19:
      v17 = *(_OWORD *)&v22[16];
      *(_OWORD *)v9 = *(_OWORD *)v22;
      *(_OWORD *)(v9 + 16) = v17;
      *(_QWORD *)(v9 + 32) = v23;
      goto LABEL_20;
    }
  }
  if (!(_DWORD)v8)
    goto LABEL_19;
  if (*(_DWORD *)(a1 + 40))
    sub_20AECFAB8();
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(std::__shared_weak_count **)(a1 + 32);
  v24[0] = &off_24C41E150;
  v24[1] = v10;
  v24[2] = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
  }
  sub_20B28DD8C((uint64_t)v25, (uint64_t)v24);
  v14 = *(_OWORD *)&v25[24];
  *(_OWORD *)v9 = *(_OWORD *)&v25[8];
  *(_OWORD *)(v9 + 16) = v14;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)&v25[40];
  v24[0] = &off_24C41E150;
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
LABEL_20:
  *(_OWORD *)v25 = v19;
  *(_OWORD *)&v25[16] = v20;
  *(_OWORD *)&v25[32] = v21;
  sub_20B28E604(a1, v25);
  *(_QWORD *)a1 = off_24C417BB8;
  return a1;
}

void sub_20B2BB1B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  va_list va;

  va_start(va, a12);
  sub_20B4E888C((uint64_t *)va);
  sub_20B28A5C8(v12);
  _Unwind_Resume(a1);
}

void sub_20B2BB1D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B28A5C8(v1);
  _Unwind_Resume(a1);
}

void sub_20B2BB1E4(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_20B2BB1F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  *(_QWORD *)v20 = v22;
  v24 = *(unsigned int *)(v20 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a20, v21);
  *(_DWORD *)(v20 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2BB22C(void *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  JUMPOUT(0x20B2BB1E8);
}

uint64_t sub_20B2BB23C(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416DA8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

_QWORD *sub_20B2BB2A0(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];
  std::__shared_weak_count *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v3 = *(std::__shared_weak_count **)(a2 + 16);
  v11[0] = &off_24C41E150;
  v11[1] = v4;
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20B28EA38((uint64_t)a1, (uint64_t)v11);
  v11[0] = &off_24C41E150;
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *a1 = off_24C417BB8;
  return a1;
}

void sub_20B2BB348(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2BB35C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24C41E150;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B28DD8C(a1, (uint64_t)&v27);
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24C41E150;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2BB584(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_20B2BB5A0(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24C41E150;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B28DD8C((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24C41E150;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 4;
  *(_QWORD *)&v33[4] = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 4);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2BB7E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2BB804()
{
  return 37;
}

_UNKNOWN **sub_20B2BB80C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE28))
    return &off_253EC31A8;
  __cxa_guard_release(&qword_25463BE28);
  return &off_253EC31A8;
}

void sub_20B2BB860(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24C41DFE8;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_20B4ED800((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24C41DFE8;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_20AECFAB8();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24C41DFE8;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_20B2BB5A0((uint64_t)v42, a1);
  sub_20B2BB5A0((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_20B2BAFA8(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_20B4ED9D4((uint64_t)v45);
LABEL_45:
  v44 = &off_24C41E150;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_20B2BBC24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x20BD3583C](v14, 0x10A3C4049419736);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2BBC50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2BBC64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2BBC78@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E736C(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_20AECFAB8();
    return sub_20B4E736C(a2, v2);
  }
  return sub_20B4E7478(a2, v2);
}

double sub_20B2BBCB8(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  char v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53[3];
  __int128 v54;
  __int128 v55;
  __int128 v56;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C41DF08, (const struct __class_type_info *)&unk_24C417FF0, 0);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = *((_DWORD *)v4 + 10);
    if (v6 == 2)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
      }
      if (v8)
      {
        v22 = *v8;
        v21 = (std::__shared_weak_count *)v8[1];
        if (v21)
        {
          v23 = (unint64_t *)&v21->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        if (v22)
          goto LABEL_43;
      }
    }
    else if (v6 == 1)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v26 = (unint64_t *)&v7->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
      }
      if (v8)
      {
        v29 = *v8;
        v28 = (std::__shared_weak_count *)v8[1];
        if (v28)
        {
          v30 = (unint64_t *)&v28->__shared_owners_;
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 1, v30));
          do
            v32 = __ldaxr(v30);
          while (__stlxr(v32 - 1, v30));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        if (v29)
          goto LABEL_43;
      }
    }
    else
    {
      if (v6)
        sub_20AECFAB8();
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v9 = (unint64_t *)&v7->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      if (v8)
      {
        v12 = *v8;
        v11 = (std::__shared_weak_count *)v8[1];
        if (v11)
        {
          v13 = (unint64_t *)&v11->__shared_owners_;
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
          do
            v15 = __ldaxr(v13);
          while (__stlxr(v15 - 1, v13));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        if (v12)
LABEL_43:
          sub_20B4ED800((uint64_t)v8);
      }
    }
    sub_20B2BB5A0((uint64_t)&v54, v5);
    v53[0] = v54;
    v53[1] = v55;
    v53[2] = v56;
    sub_20B2BAFA8((uint64_t)&v47, (uint64_t)&v54 + 8, v53);
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
          if (!v34)
            goto LABEL_52;
          goto LABEL_51;
        }
      }
      if (v34)
LABEL_51:
        sub_20B4ED9D4((uint64_t)v8);
    }
LABEL_52:
    if (v7)
    {
      v38 = (unint64_t *)&v7->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v40 = DWORD2(v49);
    *(_DWORD *)(a1 + 8) = DWORD2(v47);
    v41 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v41 == -1)
    {
      if ((_DWORD)v40 == -1)
      {
        result = *(double *)&v50;
        v44 = v51;
        *(_OWORD *)(a1 + 48) = v50;
        *(_OWORD *)(a1 + 64) = v44;
        *(_QWORD *)(a1 + 80) = v52;
        return result;
      }
    }
    else if ((_DWORD)v40 == -1)
    {
      ((void (*)(__int128 *, uint64_t))off_24C418120[v41])(&v54, a1 + 16);
      *(_DWORD *)(a1 + 40) = -1;
      goto LABEL_62;
    }
    *(_QWORD *)&v54 = a1 + 16;
    ((void (*)(__int128 *))off_24C418150[v40])(&v54);
LABEL_62:
    v42 = DWORD2(v49);
    result = *(double *)&v50;
    v43 = v51;
    *(_OWORD *)(a1 + 48) = v50;
    *(_OWORD *)(a1 + 64) = v43;
    *(_QWORD *)(a1 + 80) = v52;
    *(_QWORD *)&v47 = off_24C416DA8;
    if ((_DWORD)v42 != -1)
      ((void (*)(__int128 *, __int128 *))off_24C418120[v42])(&v54, &v48);
    return result;
  }
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v54, lpsrc, 37);
  v17 = *(_OWORD *)(v54 + 16);
  v16 = *(_OWORD *)(v54 + 32);
  v47 = *(_OWORD *)v54;
  v48 = v17;
  v49 = v16;
  *(_QWORD *)&v54 = 0;
  MEMORY[0x20BD3583C]();
  sub_20B2BB35C((uint64_t)&v54, a1);
  *(_QWORD *)&v53[0] = &v47;
  *((_QWORD *)&v53[0] + 1) = &v54;
  if (DWORD1(v48) == 1 && DWORD1(v55) == 1)
  {
    sub_20AFE5D88((size_t *)v53);
  }
  else
  {
    v45 = 0;
    if (DWORD2(v47) && HIDWORD(v47) && (_DWORD)v48)
    {
      v46 = &v45;
      sub_20AFEA3E0((uint64_t)&v46, (uint64_t)&v47, (uint64_t)&v54);
    }
  }
  return result;
}

uint64_t sub_20B2BC220(uint64_t a1)
{
  _QWORD v2[6];

  sub_20B2BB35C((uint64_t)v2, a1);
  return v2[0];
}

double sub_20B2BC248@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 37
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2BB35C((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_20B2BC2E8@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 37
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2BB5A0((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_20B2BC388()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_25463C100);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C100))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_25463C108);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463C108))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25463C110);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C110))
    {
LABEL_13:
      if (byte_25463CA17 < 0)
      {
        sub_20AEC60F4(&xmmword_25463C9E8, (void *)qword_25463CA00, unk_25463CA08);
      }
      else
      {
        xmmword_25463C9E8 = *(_OWORD *)&qword_25463CA00;
        unk_25463C9F8 = unk_25463CA10;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C9E8, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C108);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_25463C118);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463C118))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Argb8u>]", &qword_25463CA18);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463CA18, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C118);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_25463C120);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C120))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_25463C128);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25463C128))
      {
        if (byte_25463CA30[23] < 0)
          sub_20AEC60F4(&__p, *(void **)byte_25463CA30, *(unint64_t *)&byte_25463CA30[8]);
        else
          __p = *(std::string *)byte_25463CA30;
        sub_20B52B814(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_25463CA48);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463CA48, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463C128);
      }
      if (byte_25463CA5F < 0)
      {
        sub_20AEC60F4(v17, (void *)xmmword_25463CA48, *((unint64_t *)&xmmword_25463CA48 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_25463CA48;
        v18 = unk_25463CA58;
      }
      sub_20AFD7048((char *)v17, (std::string *)&qword_25463CA00);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463CA00, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C110);
      goto LABEL_13;
    }
    if (byte_25463CA2F >= 0)
      v6 = byte_25463CA2F;
    else
      v6 = unk_25463CA20;
    if (byte_25463CA2F >= 0)
      v7 = &qword_25463CA18;
    else
      v7 = (uint64_t *)qword_25463CA18;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_25463CA30[8] = v6;
      *(_QWORD *)&byte_25463CA30[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_25463CA30 = v13;
    }
    else
    {
      v13 = byte_25463CA30;
      byte_25463CA30[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_25463CA30, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463C120);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_25463C9FF < 0)
  {
    sub_20AEC60F4(&xmmword_25463C9D0, (void *)xmmword_25463C9E8, *((unint64_t *)&xmmword_25463C9E8 + 1));
  }
  else
  {
    xmmword_25463C9D0 = xmmword_25463C9E8;
    unk_25463C9E0 = unk_25463C9F8;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463C9D0, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463C100);
LABEL_2:
  if (byte_25463C9E7 >= 0)
    return &xmmword_25463C9D0;
  else
    return (__int128 *)xmmword_25463C9D0;
}

void sub_20B2BC7DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25463C110);
  __cxa_guard_abort(&qword_25463C108);
  __cxa_guard_abort(&qword_25463C100);
  _Unwind_Resume(a1);
}

void sub_20B2BC878(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463C100);
  _Unwind_Resume(a1);
}

void sub_20B2BC890()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_20B5AACCD, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B2BC8CC(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_20B4ED8EC(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24C41E008;
        *v42 = &off_24C417CF8;
        sub_20B4E78A4(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_20B4EDAC0(v79);
        }
LABEL_64:
        v78 = &off_24C41E150;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_20AECFAB8();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_20B4ED800(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24C41DFE8;
  *v42 = &off_24C417CD8;
  sub_20B4E7478(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_20B4ED9D4(v79);
  }
LABEL_102:
  v78 = &off_24C41E150;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_20B2BD0C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E7584(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2BD0F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2BD108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E79B0(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2BD13C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2BD150()
{
  return 65792;
}

_QWORD *sub_20B2BD15C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E78A4(a2, v2);
  if (v3 > 1)
    sub_20AECFAB8();
  return sub_20B4E7798(a2, v2);
}

uint64_t sub_20B2BD19C(uint64_t a1, uint64_t a2, __int128 *a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  unint64_t *v15;
  unint64_t v16;
  __int128 v17;
  uint64_t *v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t *v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  std::__shared_weak_count *v53;
  uint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _BYTE v65[32];
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t (**v70)();
  uint64_t *v71;
  std::__shared_weak_count *v72;
  uint64_t v73[2];
  char v74;
  char *v75;
  _BYTE v76[24];
  __int128 v77;
  uint64_t v78;
  uint64_t v79;

  v79 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24C417C48;
  v5 = *(unsigned int *)(a2 + 32);
  v4 = *(_DWORD *)(a2 + 36);
  if (v4 <= 0x10)
    v6 = 16;
  else
    v6 = v4;
  *(_DWORD *)v76 = 4;
  v7 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v76[4] = v7;
  v8 = HIDWORD(v7);
  *(_QWORD *)v65 = *(_QWORD *)v76;
  *(_DWORD *)&v65[8] = HIDWORD(v7);
  *(_DWORD *)v76 = 1;
  *(_QWORD *)&v76[4] = v5 | (v6 << 32);
  *(_QWORD *)&v65[12] = *(_QWORD *)v76;
  *(_DWORD *)&v65[20] = v6;
  *(_QWORD *)&v65[24] = v7;
  v66 = *(_QWORD *)&v76[4];
  v63 = a3[1];
  v64 = a3[2];
  v62 = *a3;
  *(_QWORD *)a1 = off_24C416F58;
  *(_DWORD *)(a1 + 8) = 0;
  if ((_DWORD)v7 && HIDWORD(v7))
  {
    sub_20B2919A8(0, 38, (uint64_t)v65, a1 + 16);
    LODWORD(v8) = *(_DWORD *)&v65[28];
    v9 = a1 + 48;
    if (!*(_DWORD *)&v65[24])
      goto LABEL_19;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24C41E150;
    *(_DWORD *)(a1 + 40) = 0;
    v9 = a1 + 48;
    if (!(_DWORD)v7)
      goto LABEL_19;
  }
  if ((_DWORD)v8)
  {
    if (*(_DWORD *)(a1 + 40))
      sub_20AECFAB8();
    v10 = *(_QWORD *)(a1 + 24);
    v11 = *(std::__shared_weak_count **)(a1 + 32);
    *(_QWORD *)&v67 = &off_24C41E150;
    *((_QWORD *)&v67 + 1) = v10;
    *(_QWORD *)&v68 = v11;
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(p_shared_owners);
      while (__stxr(v13 + 1, p_shared_owners));
    }
    sub_20B291D18((uint64_t)v76, (uint64_t)&v67);
    v14 = v77;
    *(_OWORD *)v9 = *(_OWORD *)&v76[8];
    *(_OWORD *)(v9 + 16) = v14;
    *(_QWORD *)(v9 + 32) = v78;
    *(_QWORD *)&v67 = &off_24C41E150;
    if (v11)
    {
      v15 = (unint64_t *)&v11->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    goto LABEL_20;
  }
LABEL_19:
  v17 = *(_OWORD *)&v65[16];
  *(_OWORD *)v9 = *(_OWORD *)v65;
  *(_OWORD *)(v9 + 16) = v17;
  *(_QWORD *)(v9 + 32) = v66;
LABEL_20:
  v67 = v62;
  v68 = v63;
  v69 = v64;
  if (*(_DWORD *)(a1 + 40) > 2u)
    goto LABEL_94;
  v18 = *(uint64_t **)(a1 + 24);
  if (!v18)
    goto LABEL_91;
  v20 = *v18;
  v19 = (std::__shared_weak_count *)v18[1];
  if (!v19)
    goto LABEL_27;
  v21 = (unint64_t *)&v19->__shared_owners_;
  do
    v22 = __ldxr(v21);
  while (__stxr(v22 + 1, v21));
  do
    v23 = __ldaxr(v21);
  while (__stlxr(v23 - 1, v21));
  if (!v23)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
    if (!v20)
      goto LABEL_91;
  }
  else
  {
LABEL_27:
    if (!v20)
      goto LABEL_91;
  }
  v24 = *(_DWORD *)(a1 + 40);
  if (v24 == 2)
  {
    v43 = *(uint64_t **)(a1 + 24);
    v44 = *(std::__shared_weak_count **)(a1 + 32);
    v71 = v43;
    v72 = v44;
    if (v44)
    {
      v45 = (unint64_t *)&v44->__shared_owners_;
      do
        v46 = __ldxr(v45);
      while (__stxr(v46 + 1, v45));
    }
    v70 = &off_24C41E008;
    if (v43)
    {
      v48 = *v43;
      v47 = (std::__shared_weak_count *)v43[1];
      if (v47)
      {
        v49 = (unint64_t *)&v47->__shared_owners_;
        do
          v50 = __ldxr(v49);
        while (__stxr(v50 + 1, v49));
        do
          v51 = __ldaxr(v49);
        while (__stlxr(v51 - 1, v49));
        if (!v51)
        {
          ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
          std::__shared_weak_count::__release_weak(v47);
        }
      }
      if (v48)
        goto LABEL_68;
    }
    goto LABEL_69;
  }
  if (v24 == 1)
  {
    v34 = *(uint64_t **)(a1 + 24);
    v35 = *(std::__shared_weak_count **)(a1 + 32);
    v71 = v34;
    v72 = v35;
    if (v35)
    {
      v36 = (unint64_t *)&v35->__shared_owners_;
      do
        v37 = __ldxr(v36);
      while (__stxr(v37 + 1, v36));
    }
    v70 = &off_24C41E008;
    if (v34)
    {
      v39 = *v34;
      v38 = (std::__shared_weak_count *)v34[1];
      if (v38)
      {
        v40 = (unint64_t *)&v38->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
          std::__shared_weak_count::__release_weak(v38);
        }
      }
      if (v39)
        goto LABEL_68;
    }
    goto LABEL_69;
  }
  if (v24)
LABEL_94:
    sub_20AECFAB8();
  v25 = *(uint64_t **)(a1 + 24);
  v26 = *(std::__shared_weak_count **)(a1 + 32);
  v71 = v25;
  v72 = v26;
  if (v26)
  {
    v27 = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  v70 = &off_24C41E008;
  if (v25)
  {
    v30 = *v25;
    v29 = (std::__shared_weak_count *)v25[1];
    if (v29)
    {
      v31 = (unint64_t *)&v29->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
    if (v30)
LABEL_68:
      sub_20B4ED8EC((uint64_t)v71);
  }
LABEL_69:
  sub_20B2928E4((uint64_t)v76, a1);
  v73[0] = (uint64_t)&v67;
  v73[1] = (uint64_t)v76;
  if (DWORD1(v68) == 1 && *(_DWORD *)&v76[20] == 1)
  {
    sub_20AFC7BE4(v73);
  }
  else
  {
    v74 = 0;
    if (DWORD2(v67) && HIDWORD(v67) && (_DWORD)v68)
    {
      v75 = &v74;
      sub_20AFEA8F4((uint64_t)&v75, (uint64_t)&v67, (uint64_t)v76);
    }
  }
  if (!v71)
    goto LABEL_86;
  v54 = *v71;
  v53 = (std::__shared_weak_count *)v71[1];
  if (v53)
  {
    v55 = (unint64_t *)&v53->__shared_owners_;
    do
      v56 = __ldxr(v55);
    while (__stxr(v56 + 1, v55));
    do
      v57 = __ldaxr(v55);
    while (__stlxr(v57 - 1, v55));
    if (!v57)
    {
      ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
      std::__shared_weak_count::__release_weak(v53);
      if (!v54)
        goto LABEL_86;
      goto LABEL_85;
    }
  }
  if (v54)
LABEL_85:
    sub_20B4EDAC0((uint64_t)v71);
LABEL_86:
  v70 = &off_24C41E150;
  v58 = v72;
  if (v72)
  {
    v59 = (unint64_t *)&v72->__shared_owners_;
    do
      v60 = __ldaxr(v59);
    while (__stlxr(v60 - 1, v59));
    if (!v60)
    {
      ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
      std::__shared_weak_count::__release_weak(v58);
    }
  }
LABEL_91:
  *(_QWORD *)a1 = off_24C417C48;
  return a1;
}

void sub_20B2BD6DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::__shared_weak_count *a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *p_shared_owners;
  unint64_t v35;
  uint64_t v36;

  if (a29)
  {
    p_shared_owners = (unint64_t *)&a29->__shared_owners_;
    do
      v35 = __ldaxr(p_shared_owners);
    while (__stlxr(v35 - 1, p_shared_owners));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))a29->__on_zero_shared)(a29);
      std::__shared_weak_count::__release_weak(a29);
    }
  }
  *(_QWORD *)v29 = v31;
  v36 = *(unsigned int *)(v29 + 40);
  if ((_DWORD)v36 != -1)
    ((void (*)(uint64_t, uint64_t))off_24C418120[v36])(v32 - 136, v30);
  *(_DWORD *)(v29 + 40) = -1;
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B2BD824(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416F58;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

_QWORD *sub_20B2BD888(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];
  std::__shared_weak_count *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v3 = *(std::__shared_weak_count **)(a2 + 16);
  v11[0] = &off_24C41E150;
  v11[1] = v4;
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20B292218((uint64_t)a1, (uint64_t)v11);
  v11[0] = &off_24C41E150;
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *a1 = off_24C417C48;
  return a1;
}

void sub_20B2BD930(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4E888C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2BD944(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24C41E150;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B291D18(a1, (uint64_t)&v27);
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24C41E150;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2BDB6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_20B2BDB88(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24C41E150;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24C41E150;
          sub_20B291D18((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24C41E150;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24C41E150;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_20AECFAB8();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 4;
  *(_QWORD *)&v33[4] = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 4);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_20B2BDDD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_20B4E888C((uint64_t *)va);
  sub_20B4E888C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2BDDEC()
{
  return 38;
}

_UNKNOWN **sub_20B2BDDF4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463BE28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463BE28))
    return &off_253EC31A8;
  __cxa_guard_release(&qword_25463BE28);
  return &off_253EC31A8;
}

void sub_20B2BDE48(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24C41DFE8;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_20B4ED800((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24C41DFE8;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_20AECFAB8();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24C41DFE8;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_20B2BDB88((uint64_t)v42, a1);
  sub_20B2BDB88((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_20B2BD19C(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_20B4ED9D4((uint64_t)v45);
LABEL_45:
  v44 = &off_24C41E150;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_20B2BE20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x20BD3583C](v14, 0x10A3C4049419736);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2BE238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2BE24C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_20B4E7584((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2BE260@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E736C(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_20AECFAB8();
    return sub_20B4E736C(a2, v2);
  }
  return sub_20B4E7478(a2, v2);
}

double sub_20B2BE2A0(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  char v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53[3];
  __int128 v54;
  __int128 v55;
  __int128 v56;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C41DF08, (const struct __class_type_info *)&unk_24C418008, 0);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = *((_DWORD *)v4 + 10);
    if (v6 == 2)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
      }
      if (v8)
      {
        v22 = *v8;
        v21 = (std::__shared_weak_count *)v8[1];
        if (v21)
        {
          v23 = (unint64_t *)&v21->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        if (v22)
          goto LABEL_43;
      }
    }
    else if (v6 == 1)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v26 = (unint64_t *)&v7->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
      }
      if (v8)
      {
        v29 = *v8;
        v28 = (std::__shared_weak_count *)v8[1];
        if (v28)
        {
          v30 = (unint64_t *)&v28->__shared_owners_;
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 1, v30));
          do
            v32 = __ldaxr(v30);
          while (__stlxr(v32 - 1, v30));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        if (v29)
          goto LABEL_43;
      }
    }
    else
    {
      if (v6)
        sub_20AECFAB8();
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v9 = (unint64_t *)&v7->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      if (v8)
      {
        v12 = *v8;
        v11 = (std::__shared_weak_count *)v8[1];
        if (v11)
        {
          v13 = (unint64_t *)&v11->__shared_owners_;
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
          do
            v15 = __ldaxr(v13);
          while (__stlxr(v15 - 1, v13));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        if (v12)
LABEL_43:
          sub_20B4ED800((uint64_t)v8);
      }
    }
    sub_20B2BDB88((uint64_t)&v54, v5);
    v53[0] = v54;
    v53[1] = v55;
    v53[2] = v56;
    sub_20B2BD19C((uint64_t)&v47, (uint64_t)&v54 + 8, v53);
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
          if (!v34)
            goto LABEL_52;
          goto LABEL_51;
        }
      }
      if (v34)
LABEL_51:
        sub_20B4ED9D4((uint64_t)v8);
    }
LABEL_52:
    if (v7)
    {
      v38 = (unint64_t *)&v7->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v40 = DWORD2(v49);
    *(_DWORD *)(a1 + 8) = DWORD2(v47);
    v41 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v41 == -1)
    {
      if ((_DWORD)v40 == -1)
      {
        result = *(double *)&v50;
        v44 = v51;
        *(_OWORD *)(a1 + 48) = v50;
        *(_OWORD *)(a1 + 64) = v44;
        *(_QWORD *)(a1 + 80) = v52;
        return result;
      }
    }
    else if ((_DWORD)v40 == -1)
    {
      ((void (*)(__int128 *, uint64_t))off_24C418120[v41])(&v54, a1 + 16);
      *(_DWORD *)(a1 + 40) = -1;
      goto LABEL_62;
    }
    *(_QWORD *)&v54 = a1 + 16;
    ((void (*)(__int128 *))off_24C418150[v40])(&v54);
LABEL_62:
    v42 = DWORD2(v49);
    result = *(double *)&v50;
    v43 = v51;
    *(_OWORD *)(a1 + 48) = v50;
    *(_OWORD *)(a1 + 64) = v43;
    *(_QWORD *)(a1 + 80) = v52;
    *(_QWORD *)&v47 = off_24C416F58;
    if ((_DWORD)v42 != -1)
      ((void (*)(__int128 *, __int128 *))off_24C418120[v42])(&v54, &v48);
    return result;
  }
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v54, lpsrc, 38);
  v17 = *(_OWORD *)(v54 + 16);
  v16 = *(_OWORD *)(v54 + 32);
  v47 = *(_OWORD *)v54;
  v48 = v17;
  v49 = v16;
  *(_QWORD *)&v54 = 0;
  MEMORY[0x20BD3583C]();
  sub_20B2BD944((uint64_t)&v54, a1);
  *(_QWORD *)&v53[0] = &v47;
  *((_QWORD *)&v53[0] + 1) = &v54;
  if (DWORD1(v48) == 1 && DWORD1(v55) == 1)
  {
    sub_20AFC7BE4((uint64_t *)v53);
  }
  else
  {
    v45 = 0;
    if (DWORD2(v47) && HIDWORD(v47) && (_DWORD)v48)
    {
      v46 = &v45;
      sub_20AFEA8F4((uint64_t)&v46, (uint64_t)&v47, (uint64_t)&v54);
    }
  }
  return result;
}

uint64_t sub_20B2BE808(uint64_t a1)
{
  _QWORD v2[6];

  sub_20B2BD944((uint64_t)v2, a1);
  return v2[0];
}

double sub_20B2BE830@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 38
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2BD944((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_20B2BE8D0@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 38
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  sub_20B2BDB88((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_20B2BE970()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_25463C130);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C130))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_25463C138);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25463C138))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25463C140);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C140))
    {
LABEL_13:
      if (byte_25463CAA7 < 0)
      {
        sub_20AEC60F4(&xmmword_25463CA78, (void *)qword_25463CA90, unk_25463CA98);
      }
      else
      {
        xmmword_25463CA78 = *(_OWORD *)&qword_25463CA90;
        unk_25463CA88 = unk_25463CAA0;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463CA78, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C138);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_25463C148);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463C148))
    {
      sub_20B5313E4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Argb16u>]", &qword_25463CAA8);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463CAA8, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C148);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_25463C150);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_25463C150))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_25463C158);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25463C158))
      {
        if (byte_25463CAC0[23] < 0)
          sub_20AEC60F4(&__p, *(void **)byte_25463CAC0, *(unint64_t *)&byte_25463CAC0[8]);
        else
          __p = *(std::string *)byte_25463CAC0;
        sub_20B52B814(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_25463CAD8);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463CAD8, &dword_20AEBB000);
        __cxa_guard_release(&qword_25463C158);
      }
      if (byte_25463CAEF < 0)
      {
        sub_20AEC60F4(v17, (void *)xmmword_25463CAD8, *((unint64_t *)&xmmword_25463CAD8 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_25463CAD8;
        v18 = unk_25463CAE8;
      }
      sub_20AFD7694((char *)v17, (std::string *)&qword_25463CA90);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_25463CA90, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463C140);
      goto LABEL_13;
    }
    if (byte_25463CABF >= 0)
      v6 = byte_25463CABF;
    else
      v6 = unk_25463CAB0;
    if (byte_25463CABF >= 0)
      v7 = &qword_25463CAA8;
    else
      v7 = (uint64_t *)qword_25463CAA8;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_25463CAC0[8] = v6;
      *(_QWORD *)&byte_25463CAC0[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_25463CAC0 = v13;
    }
    else
    {
      v13 = byte_25463CAC0;
      byte_25463CAC0[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_25463CAC0, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463C150);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_25463CA8F < 0)
  {
    sub_20AEC60F4(&xmmword_25463CA60, (void *)xmmword_25463CA78, *((unint64_t *)&xmmword_25463CA78 + 1));
  }
  else
  {
    xmmword_25463CA60 = xmmword_25463CA78;
    unk_25463CA70 = unk_25463CA88;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25463CA60, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463C130);
LABEL_2:
  if (byte_25463CA77 >= 0)
    return &xmmword_25463CA60;
  else
    return (__int128 *)xmmword_25463CA60;
}

void sub_20B2BEDC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25463C140);
  __cxa_guard_abort(&qword_25463C138);
  __cxa_guard_abort(&qword_25463C130);
  _Unwind_Resume(a1);
}

void sub_20B2BEE60(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463C130);
  _Unwind_Resume(a1);
}

void sub_20B2BEE78()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_20B5AACCD, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B2BEEB4(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_20B4ED8EC(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24C41E008;
        *v42 = &off_24C417CF8;
        sub_20B4E78A4(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_20B4EDAC0(v79);
        }
LABEL_64:
        v78 = &off_24C41E150;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_20AECFAB8();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_20B4ED800(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24C41DFE8;
  *v42 = &off_24C417CD8;
  sub_20B4E7478(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_20B4ED9D4(v79);
  }
LABEL_102:
  v78 = &off_24C41E150;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_20B2BF6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E7584(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2BF6DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E7584(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2BF6F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_20B4E79B0(&a12);
  MEMORY[0x20BD3583C](v12, 0xA1C40711E6FFCLL);
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2BF724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B4E79B0(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2BF738()
{
  return 65792;
}

_QWORD *sub_20B2BF744@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_20B4E78A4(a2, v2);
  if (v3 > 1)
    sub_20AECFAB8();
  return sub_20B4E7798(a2, v2);
}

void sub_20B2BF784(unsigned int *a1@<X1>, uint64_t a2@<X8>)
{
  _BOOL8 v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;

  v3 = *a1 != 0;
  if (*a1 <= 0x20)
    v4 = 32;
  else
    v4 = *a1;
  v5 = *(_QWORD *)a1;
  if (a1[1])
    v6 = v4;
  else
    v6 = 32;
  *(_QWORD *)&v9 = *(_QWORD *)a1;
  *((_QWORD *)&v9 + 1) = v3 | (v6 << 32);
  *(_QWORD *)a2 = off_24C416BF8;
  *(_DWORD *)(a2 + 8) = 0;
  v7 = HIDWORD(v5);
  if ((_DWORD)v5 && HIDWORD(v5))
  {
    sub_20B289CD8(0, 1, (unsigned int *)&v9, a2 + 16);
    LODWORD(v7) = DWORD1(v9);
    if (!(_DWORD)v9)
      goto LABEL_14;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = &off_24C41E150;
    *(_DWORD *)(a2 + 40) = 0;
    if (!(_DWORD)v5)
    {
LABEL_14:
      *(_OWORD *)(a2 + 48) = v9;
      goto LABEL_15;
    }
  }
  if (!(_DWORD)v7)
    goto LABEL_14;
  *(_QWORD *)(a2 + 48) = sub_20B28A048(0, a2 + 16);
  *(_QWORD *)(a2 + 56) = v8;
LABEL_15:
  *(_QWORD *)a2 = off_24C417348;
}

void sub_20B2BF864(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v18 = *(unsigned int *)(v15 + 40);
  if ((_DWORD)v18 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v18])(&a15, v16);
  *(_DWORD *)(v15 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2BF8A0(unsigned int *a1@<X1>, uint64_t a2@<X8>)
{
  _BOOL8 v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;

  v3 = *a1 != 0;
  if (*a1 <= 0x10)
    v4 = 16;
  else
    v4 = *a1;
  v5 = *(_QWORD *)a1;
  if (a1[1])
    v6 = v4;
  else
    v6 = 16;
  *(_QWORD *)&v9 = *(_QWORD *)a1;
  *((_QWORD *)&v9 + 1) = v3 | (v6 << 32);
  *(_QWORD *)a2 = off_24C416E38;
  *(_DWORD *)(a2 + 8) = 0;
  v7 = HIDWORD(v5);
  if ((_DWORD)v5 && HIDWORD(v5))
  {
    sub_20B28F278(0, 2, (unsigned int *)&v9, a2 + 16);
    LODWORD(v7) = DWORD1(v9);
    if (!(_DWORD)v9)
      goto LABEL_14;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = &off_24C41E150;
    *(_DWORD *)(a2 + 40) = 0;
    if (!(_DWORD)v5)
    {
LABEL_14:
      *(_OWORD *)(a2 + 48) = v9;
      goto LABEL_15;
    }
  }
  if (!(_DWORD)v7)
    goto LABEL_14;
  *(_QWORD *)(a2 + 48) = sub_20B28F5E8(0, a2 + 16);
  *(_QWORD *)(a2 + 56) = v8;
LABEL_15:
  *(_QWORD *)a2 = off_24C4173D8;
}

void sub_20B2BF980(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v18 = *(unsigned int *)(v15 + 40);
  if ((_DWORD)v18 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v18])(&a15, v16);
  *(_DWORD *)(v15 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2BF9BC(unsigned int *a1@<X1>, uint64_t a2@<X8>)
{
  _BOOL8 v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;

  v3 = *a1 != 0;
  if (*a1 <= 0x10)
    v4 = 16;
  else
    v4 = *a1;
  v5 = *(_QWORD *)a1;
  if (a1[1])
    v6 = v4;
  else
    v6 = 16;
  *(_QWORD *)&v9 = *(_QWORD *)a1;
  *((_QWORD *)&v9 + 1) = v3 | (v6 << 32);
  *(_QWORD *)a2 = off_24C416FE8;
  *(_DWORD *)(a2 + 8) = 0;
  v7 = HIDWORD(v5);
  if ((_DWORD)v5 && HIDWORD(v5))
  {
    sub_20B292B28(0, 3, (unsigned int *)&v9, a2 + 16);
    LODWORD(v7) = DWORD1(v9);
    if (!(_DWORD)v9)
      goto LABEL_14;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = &off_24C41E150;
    *(_DWORD *)(a2 + 40) = 0;
    if (!(_DWORD)v5)
    {
LABEL_14:
      *(_OWORD *)(a2 + 48) = v9;
      goto LABEL_15;
    }
  }
  if (!(_DWORD)v7)
    goto LABEL_14;
  *(_QWORD *)(a2 + 48) = sub_20B292E98(0, a2 + 16);
  *(_QWORD *)(a2 + 56) = v8;
LABEL_15:
  *(_QWORD *)a2 = off_24C417468;
}

void sub_20B2BFA9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v18 = *(unsigned int *)(v15 + 40);
  if ((_DWORD)v18 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v18])(&a15, v16);
  *(_DWORD *)(v15 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2BFAD8(unsigned int *a1@<X1>, uint64_t a2@<X8>)
{
  _BOOL8 v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;

  v3 = *a1 != 0;
  if (*a1 <= 8)
    v4 = 8;
  else
    v4 = *a1;
  v5 = *(_QWORD *)a1;
  if (a1[1])
    v6 = v4;
  else
    v6 = 8;
  *(_QWORD *)&v9 = *(_QWORD *)a1;
  *((_QWORD *)&v9 + 1) = v3 | (v6 << 32);
  *(_QWORD *)a2 = off_24C417198;
  *(_DWORD *)(a2 + 8) = 0;
  v7 = HIDWORD(v5);
  if ((_DWORD)v5 && HIDWORD(v5))
  {
    sub_20B2964E4(0, 4, (unsigned int *)&v9, a2 + 16);
    LODWORD(v7) = DWORD1(v9);
    if (!(_DWORD)v9)
      goto LABEL_14;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = &off_24C41E150;
    *(_DWORD *)(a2 + 40) = 0;
    if (!(_DWORD)v5)
    {
LABEL_14:
      *(_OWORD *)(a2 + 48) = v9;
      goto LABEL_15;
    }
  }
  if (!(_DWORD)v7)
    goto LABEL_14;
  *(_QWORD *)(a2 + 48) = sub_20B296854(0, a2 + 16);
  *(_QWORD *)(a2 + 56) = v8;
LABEL_15:
  *(_QWORD *)a2 = off_24C4174F8;
}

void sub_20B2BFBB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v18 = *(unsigned int *)(v15 + 40);
  if ((_DWORD)v18 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v18])(&a15, v16);
  *(_DWORD *)(v15 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2BFBF4(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  _BYTE v17[32];
  uint64_t v18;
  _QWORD v19[3];
  _BYTE v20[24];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v3 = 2 * (*a1 != 0);
  if ((v3 * *a1) <= 0x20)
    v4 = 32;
  else
    v4 = v3 * *a1;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  if (a1[1])
    v7 = v4;
  else
    v7 = 32;
  *(_DWORD *)v20 = 2;
  *(_DWORD *)&v20[4] = v5;
  *(_QWORD *)v17 = *(_QWORD *)v20;
  *(_DWORD *)&v17[8] = v6;
  *(_DWORD *)v20 = 1;
  *(_QWORD *)&v20[4] = v3 & 0x1FFFFFFFFLL | ((unint64_t)(v7 >> 1) << 33);
  *(_QWORD *)&v17[12] = *(_QWORD *)v20;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  v18 = *(_QWORD *)&v20[4];
  *(_QWORD *)a2 = off_24C416C88;
  *(_DWORD *)(a2 + 8) = 0;
  if ((_DWORD)v5 && (_DWORD)v6)
  {
    sub_20B28B1C4(0, 5, (uint64_t)v17, a2 + 16);
    LODWORD(v6) = *(_DWORD *)&v17[28];
    v8 = a2 + 48;
    if (!*(_DWORD *)&v17[24])
      goto LABEL_22;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = &off_24C41E150;
    *(_DWORD *)(a2 + 40) = 0;
    v8 = a2 + 48;
    if (!(_DWORD)v5)
    {
LABEL_22:
      v16 = *(_OWORD *)&v17[16];
      *(_OWORD *)v8 = *(_OWORD *)v17;
      *(_OWORD *)(v8 + 16) = v16;
      *(_QWORD *)(v8 + 32) = v18;
      goto LABEL_23;
    }
  }
  if (!(_DWORD)v6)
    goto LABEL_22;
  if (*(_DWORD *)(a2 + 40))
    sub_20AECFAB8();
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(std::__shared_weak_count **)(a2 + 32);
  v19[0] = &off_24C41E150;
  v19[1] = v9;
  v19[2] = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  sub_20B28B534((uint64_t)v20, (uint64_t)v19);
  v13 = v21;
  *(_OWORD *)v8 = *(_OWORD *)&v20[8];
  *(_OWORD *)(v8 + 16) = v13;
  *(_QWORD *)(v8 + 32) = v22;
  v19[0] = &off_24C41E150;
  if (v10)
  {
    v14 = (unint64_t *)&v10->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_23:
  *(_QWORD *)a2 = off_24C417588;
}

void sub_20B2BFDDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v23;
  uint64_t v24;

  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v24 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2BFE54(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B2BFE70(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  _BYTE v17[32];
  uint64_t v18;
  _QWORD v19[3];
  _BYTE v20[24];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v3 = 2 * (*a1 != 0);
  if ((v3 * *a1) <= 0x10)
    v4 = 16;
  else
    v4 = v3 * *a1;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  if (a1[1])
    v7 = v4;
  else
    v7 = 16;
  *(_DWORD *)v20 = 2;
  *(_DWORD *)&v20[4] = v5;
  *(_QWORD *)v17 = *(_QWORD *)v20;
  *(_DWORD *)&v17[8] = v6;
  *(_DWORD *)v20 = 1;
  *(_QWORD *)&v20[4] = v3 & 0x1FFFFFFFFLL | ((unint64_t)(v7 >> 1) << 33);
  *(_QWORD *)&v17[12] = *(_QWORD *)v20;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  v18 = *(_QWORD *)&v20[4];
  *(_QWORD *)a2 = off_24C417078;
  *(_DWORD *)(a2 + 8) = 0;
  if ((_DWORD)v5 && (_DWORD)v6)
  {
    sub_20B294184(0, 7, (uint64_t)v17, a2 + 16);
    LODWORD(v6) = *(_DWORD *)&v17[28];
    v8 = a2 + 48;
    if (!*(_DWORD *)&v17[24])
      goto LABEL_22;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = &off_24C41E150;
    *(_DWORD *)(a2 + 40) = 0;
    v8 = a2 + 48;
    if (!(_DWORD)v5)
    {
LABEL_22:
      v16 = *(_OWORD *)&v17[16];
      *(_OWORD *)v8 = *(_OWORD *)v17;
      *(_OWORD *)(v8 + 16) = v16;
      *(_QWORD *)(v8 + 32) = v18;
      goto LABEL_23;
    }
  }
  if (!(_DWORD)v6)
    goto LABEL_22;
  if (*(_DWORD *)(a2 + 40))
    sub_20AECFAB8();
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(std::__shared_weak_count **)(a2 + 32);
  v19[0] = &off_24C41E150;
  v19[1] = v9;
  v19[2] = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  sub_20B2944F4((uint64_t)v20, (uint64_t)v19);
  v13 = v21;
  *(_OWORD *)v8 = *(_OWORD *)&v20[8];
  *(_OWORD *)(v8 + 16) = v13;
  *(_QWORD *)(v8 + 32) = v22;
  v19[0] = &off_24C41E150;
  if (v10)
  {
    v14 = (unint64_t *)&v10->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_23:
  *(_QWORD *)a2 = off_24C417618;
}

void sub_20B2C0058(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v23;
  uint64_t v24;

  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v24 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2C00D0(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B2C00EC(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  _BYTE v17[32];
  uint64_t v18;
  _QWORD v19[3];
  _BYTE v20[24];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v3 = 2 * (*a1 != 0);
  if ((v3 * *a1) <= 8)
    v4 = 8;
  else
    v4 = v3 * *a1;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  if (a1[1])
    v7 = v4;
  else
    v7 = 8;
  *(_DWORD *)v20 = 2;
  *(_DWORD *)&v20[4] = v5;
  *(_QWORD *)v17 = *(_QWORD *)v20;
  *(_DWORD *)&v17[8] = v6;
  *(_DWORD *)v20 = 1;
  *(_QWORD *)&v20[4] = v3 & 0x1FFFFFFFFLL | ((unint64_t)(v7 >> 1) << 33);
  *(_QWORD *)&v17[12] = *(_QWORD *)v20;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  v18 = *(_QWORD *)&v20[4];
  *(_QWORD *)a2 = off_24C417228;
  *(_DWORD *)(a2 + 8) = 0;
  if ((_DWORD)v5 && (_DWORD)v6)
  {
    sub_20B297B3C(0, 8, (uint64_t)v17, a2 + 16);
    LODWORD(v6) = *(_DWORD *)&v17[28];
    v8 = a2 + 48;
    if (!*(_DWORD *)&v17[24])
      goto LABEL_22;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = &off_24C41E150;
    *(_DWORD *)(a2 + 40) = 0;
    v8 = a2 + 48;
    if (!(_DWORD)v5)
    {
LABEL_22:
      v16 = *(_OWORD *)&v17[16];
      *(_OWORD *)v8 = *(_OWORD *)v17;
      *(_OWORD *)(v8 + 16) = v16;
      *(_QWORD *)(v8 + 32) = v18;
      goto LABEL_23;
    }
  }
  if (!(_DWORD)v6)
    goto LABEL_22;
  if (*(_DWORD *)(a2 + 40))
    sub_20AECFAB8();
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(std::__shared_weak_count **)(a2 + 32);
  v19[0] = &off_24C41E150;
  v19[1] = v9;
  v19[2] = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  sub_20B297EAC((uint64_t)v20, (uint64_t)v19);
  v13 = v21;
  *(_OWORD *)v8 = *(_OWORD *)&v20[8];
  *(_OWORD *)(v8 + 16) = v13;
  *(_QWORD *)(v8 + 32) = v22;
  v19[0] = &off_24C41E150;
  if (v10)
  {
    v14 = (unint64_t *)&v10->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_23:
  *(_QWORD *)a2 = off_24C4176A8;
}

void sub_20B2C02D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v23;
  uint64_t v24;

  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v24 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2C034C(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B2C0368(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  _BYTE v17[32];
  uint64_t v18;
  _QWORD v19[3];
  _BYTE v20[24];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  if (*a1)
    v3 = 3;
  else
    v3 = 0;
  if ((v3 * *a1) <= 0x20)
    v4 = 32;
  else
    v4 = v3 * *a1;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  if (a1[1])
    v7 = v4;
  else
    v7 = 32;
  *(_QWORD *)v17 = __PAIR64__(v5, 3);
  *(_DWORD *)&v17[8] = v6;
  *(_DWORD *)v20 = 1;
  *(_QWORD *)&v20[4] = v3 | (v7 << 32);
  *(_QWORD *)&v17[12] = *(_QWORD *)v20;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  v18 = *(_QWORD *)&v20[4];
  *(_QWORD *)a2 = off_24C416D18;
  *(_DWORD *)(a2 + 8) = 0;
  if ((_DWORD)v5 && (_DWORD)v6)
  {
    sub_20B28C198(0, 17, (uint64_t)v17, a2 + 16);
    LODWORD(v6) = *(_DWORD *)&v17[28];
    v8 = a2 + 48;
    if (!*(_DWORD *)&v17[24])
      goto LABEL_25;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = &off_24C41E150;
    *(_DWORD *)(a2 + 40) = 0;
    v8 = a2 + 48;
    if (!(_DWORD)v5)
    {
LABEL_25:
      v16 = *(_OWORD *)&v17[16];
      *(_OWORD *)v8 = *(_OWORD *)v17;
      *(_OWORD *)(v8 + 16) = v16;
      *(_QWORD *)(v8 + 32) = v18;
      goto LABEL_26;
    }
  }
  if (!(_DWORD)v6)
    goto LABEL_25;
  if (*(_DWORD *)(a2 + 40))
    sub_20AECFAB8();
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(std::__shared_weak_count **)(a2 + 32);
  v19[0] = &off_24C41E150;
  v19[1] = v9;
  v19[2] = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  sub_20B28C508((uint64_t)v20, (uint64_t)v19);
  v13 = v21;
  *(_OWORD *)v8 = *(_OWORD *)&v20[8];
  *(_OWORD *)(v8 + 16) = v13;
  *(_QWORD *)(v8 + 32) = v22;
  v19[0] = &off_24C41E150;
  if (v10)
  {
    v14 = (unint64_t *)&v10->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_26:
  *(_QWORD *)a2 = off_24C417738;
}

void sub_20B2C0548(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v23;
  uint64_t v24;

  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v24 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2C05C0(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B2C05DC(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  _BYTE v17[32];
  uint64_t v18;
  _QWORD v19[3];
  _BYTE v20[24];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  if (*a1)
    v3 = 3;
  else
    v3 = 0;
  if ((v3 * *a1) <= 0x20)
    v4 = 32;
  else
    v4 = v3 * *a1;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  if (a1[1])
    v7 = v4;
  else
    v7 = 32;
  *(_QWORD *)v17 = __PAIR64__(v5, 3);
  *(_DWORD *)&v17[8] = v6;
  *(_DWORD *)v20 = 1;
  *(_QWORD *)&v20[4] = v3 | (v7 << 32);
  *(_QWORD *)&v17[12] = *(_QWORD *)v20;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  v18 = *(_QWORD *)&v20[4];
  *(_QWORD *)a2 = off_24C416D18;
  *(_DWORD *)(a2 + 8) = 0;
  if ((_DWORD)v5 && (_DWORD)v6)
  {
    sub_20B28C198(0, 21, (uint64_t)v17, a2 + 16);
    LODWORD(v6) = *(_DWORD *)&v17[28];
    v8 = a2 + 48;
    if (!*(_DWORD *)&v17[24])
      goto LABEL_25;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = &off_24C41E150;
    *(_DWORD *)(a2 + 40) = 0;
    v8 = a2 + 48;
    if (!(_DWORD)v5)
    {
LABEL_25:
      v16 = *(_OWORD *)&v17[16];
      *(_OWORD *)v8 = *(_OWORD *)v17;
      *(_OWORD *)(v8 + 16) = v16;
      *(_QWORD *)(v8 + 32) = v18;
      goto LABEL_26;
    }
  }
  if (!(_DWORD)v6)
    goto LABEL_25;
  if (*(_DWORD *)(a2 + 40))
    sub_20AECFAB8();
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(std::__shared_weak_count **)(a2 + 32);
  v19[0] = &off_24C41E150;
  v19[1] = v9;
  v19[2] = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  sub_20B28C508((uint64_t)v20, (uint64_t)v19);
  v13 = v21;
  *(_OWORD *)v8 = *(_OWORD *)&v20[8];
  *(_OWORD *)(v8 + 16) = v13;
  *(_QWORD *)(v8 + 32) = v22;
  v19[0] = &off_24C41E150;
  if (v10)
  {
    v14 = (unint64_t *)&v10->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_26:
  *(_QWORD *)a2 = off_24C4177C8;
}

void sub_20B2C07BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v23;
  uint64_t v24;

  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v24 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2C0834(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B2C0850(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  _BYTE v17[32];
  uint64_t v18;
  _QWORD v19[3];
  _BYTE v20[24];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  if (*a1)
    v3 = 3;
  else
    v3 = 0;
  if ((v3 * *a1) <= 0x10)
    v4 = 16;
  else
    v4 = v3 * *a1;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  if (a1[1])
    v7 = v4;
  else
    v7 = 16;
  *(_QWORD *)v17 = __PAIR64__(v5, 3);
  *(_DWORD *)&v17[8] = v6;
  *(_DWORD *)v20 = 1;
  *(_QWORD *)&v20[4] = v3 | (v7 << 32);
  *(_QWORD *)&v17[12] = *(_QWORD *)v20;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  v18 = *(_QWORD *)&v20[4];
  *(_QWORD *)a2 = off_24C416EC8;
  *(_DWORD *)(a2 + 8) = 0;
  if ((_DWORD)v5 && (_DWORD)v6)
  {
    sub_20B2908A0(0, 22, (uint64_t)v17, a2 + 16);
    LODWORD(v6) = *(_DWORD *)&v17[28];
    v8 = a2 + 48;
    if (!*(_DWORD *)&v17[24])
      goto LABEL_25;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = &off_24C41E150;
    *(_DWORD *)(a2 + 40) = 0;
    v8 = a2 + 48;
    if (!(_DWORD)v5)
    {
LABEL_25:
      v16 = *(_OWORD *)&v17[16];
      *(_OWORD *)v8 = *(_OWORD *)v17;
      *(_OWORD *)(v8 + 16) = v16;
      *(_QWORD *)(v8 + 32) = v18;
      goto LABEL_26;
    }
  }
  if (!(_DWORD)v6)
    goto LABEL_25;
  if (*(_DWORD *)(a2 + 40))
    sub_20AECFAB8();
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(std::__shared_weak_count **)(a2 + 32);
  v19[0] = &off_24C41E150;
  v19[1] = v9;
  v19[2] = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  sub_20B290C10((uint64_t)v20, (uint64_t)v19);
  v13 = v21;
  *(_OWORD *)v8 = *(_OWORD *)&v20[8];
  *(_OWORD *)(v8 + 16) = v13;
  *(_QWORD *)(v8 + 32) = v22;
  v19[0] = &off_24C41E150;
  if (v10)
  {
    v14 = (unint64_t *)&v10->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_26:
  *(_QWORD *)a2 = off_24C417858;
}

void sub_20B2C0A30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v23;
  uint64_t v24;

  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v24 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2C0AA8(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B2C0AC4(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  _BYTE v17[32];
  uint64_t v18;
  _QWORD v19[3];
  _BYTE v20[24];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v3 = 4 * (*a1 != 0);
  if ((v3 * *a1) <= 0x20)
    v4 = 32;
  else
    v4 = v3 * *a1;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  if (a1[1])
    v7 = v4;
  else
    v7 = 32;
  *(_DWORD *)v20 = 4;
  *(_DWORD *)&v20[4] = v5;
  *(_QWORD *)v17 = *(_QWORD *)v20;
  *(_DWORD *)&v17[8] = v6;
  *(_DWORD *)v20 = 1;
  *(_QWORD *)&v20[4] = v3 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_QWORD *)&v17[12] = *(_QWORD *)v20;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  v18 = *(_QWORD *)&v20[4];
  *(_QWORD *)a2 = off_24C416DA8;
  *(_DWORD *)(a2 + 8) = 0;
  if ((_DWORD)v5 && (_DWORD)v6)
  {
    sub_20B28DA1C(0, 25, (uint64_t)v17, a2 + 16);
    LODWORD(v6) = *(_DWORD *)&v17[28];
    v8 = a2 + 48;
    if (!*(_DWORD *)&v17[24])
      goto LABEL_22;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = &off_24C41E150;
    *(_DWORD *)(a2 + 40) = 0;
    v8 = a2 + 48;
    if (!(_DWORD)v5)
    {
LABEL_22:
      v16 = *(_OWORD *)&v17[16];
      *(_OWORD *)v8 = *(_OWORD *)v17;
      *(_OWORD *)(v8 + 16) = v16;
      *(_QWORD *)(v8 + 32) = v18;
      goto LABEL_23;
    }
  }
  if (!(_DWORD)v6)
    goto LABEL_22;
  if (*(_DWORD *)(a2 + 40))
    sub_20AECFAB8();
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(std::__shared_weak_count **)(a2 + 32);
  v19[0] = &off_24C41E150;
  v19[1] = v9;
  v19[2] = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  sub_20B28DD8C((uint64_t)v20, (uint64_t)v19);
  v13 = v21;
  *(_OWORD *)v8 = *(_OWORD *)&v20[8];
  *(_OWORD *)(v8 + 16) = v13;
  *(_QWORD *)(v8 + 32) = v22;
  v19[0] = &off_24C41E150;
  if (v10)
  {
    v14 = (unint64_t *)&v10->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_23:
  *(_QWORD *)a2 = off_24C4178E8;
}

void sub_20B2C0CAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v23;
  uint64_t v24;

  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v24 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2C0D24(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B2C0D40(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  _BYTE v17[32];
  uint64_t v18;
  _QWORD v19[3];
  _BYTE v20[24];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v3 = 4 * (*a1 != 0);
  if ((v3 * *a1) <= 0x20)
    v4 = 32;
  else
    v4 = v3 * *a1;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  if (a1[1])
    v7 = v4;
  else
    v7 = 32;
  *(_DWORD *)v20 = 4;
  *(_DWORD *)&v20[4] = v5;
  *(_QWORD *)v17 = *(_QWORD *)v20;
  *(_DWORD *)&v17[8] = v6;
  *(_DWORD *)v20 = 1;
  *(_QWORD *)&v20[4] = v3 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_QWORD *)&v17[12] = *(_QWORD *)v20;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  v18 = *(_QWORD *)&v20[4];
  *(_QWORD *)a2 = off_24C416DA8;
  *(_DWORD *)(a2 + 8) = 0;
  if ((_DWORD)v5 && (_DWORD)v6)
  {
    sub_20B28DA1C(0, 29, (uint64_t)v17, a2 + 16);
    LODWORD(v6) = *(_DWORD *)&v17[28];
    v8 = a2 + 48;
    if (!*(_DWORD *)&v17[24])
      goto LABEL_22;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = &off_24C41E150;
    *(_DWORD *)(a2 + 40) = 0;
    v8 = a2 + 48;
    if (!(_DWORD)v5)
    {
LABEL_22:
      v16 = *(_OWORD *)&v17[16];
      *(_OWORD *)v8 = *(_OWORD *)v17;
      *(_OWORD *)(v8 + 16) = v16;
      *(_QWORD *)(v8 + 32) = v18;
      goto LABEL_23;
    }
  }
  if (!(_DWORD)v6)
    goto LABEL_22;
  if (*(_DWORD *)(a2 + 40))
    sub_20AECFAB8();
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(std::__shared_weak_count **)(a2 + 32);
  v19[0] = &off_24C41E150;
  v19[1] = v9;
  v19[2] = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  sub_20B28DD8C((uint64_t)v20, (uint64_t)v19);
  v13 = v21;
  *(_OWORD *)v8 = *(_OWORD *)&v20[8];
  *(_OWORD *)(v8 + 16) = v13;
  *(_QWORD *)(v8 + 32) = v22;
  v19[0] = &off_24C41E150;
  if (v10)
  {
    v14 = (unint64_t *)&v10->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_23:
  *(_QWORD *)a2 = off_24C417978;
}

void sub_20B2C0F28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v23;
  uint64_t v24;

  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v24 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2C0FA0(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B2C0FBC(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  _BYTE v17[32];
  uint64_t v18;
  _QWORD v19[3];
  _BYTE v20[24];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v3 = 4 * (*a1 != 0);
  if ((v3 * *a1) <= 0x10)
    v4 = 16;
  else
    v4 = v3 * *a1;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  if (a1[1])
    v7 = v4;
  else
    v7 = 16;
  *(_DWORD *)v20 = 4;
  *(_DWORD *)&v20[4] = v5;
  *(_QWORD *)v17 = *(_QWORD *)v20;
  *(_DWORD *)&v17[8] = v6;
  *(_DWORD *)v20 = 1;
  *(_QWORD *)&v20[4] = v3 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_QWORD *)&v17[12] = *(_QWORD *)v20;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  v18 = *(_QWORD *)&v20[4];
  *(_QWORD *)a2 = off_24C417108;
  *(_DWORD *)(a2 + 8) = 0;
  if ((_DWORD)v5 && (_DWORD)v6)
  {
    sub_20B295334(0, 31, (uint64_t)v17, a2 + 16);
    LODWORD(v6) = *(_DWORD *)&v17[28];
    v8 = a2 + 48;
    if (!*(_DWORD *)&v17[24])
      goto LABEL_22;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = &off_24C41E150;
    *(_DWORD *)(a2 + 40) = 0;
    v8 = a2 + 48;
    if (!(_DWORD)v5)
    {
LABEL_22:
      v16 = *(_OWORD *)&v17[16];
      *(_OWORD *)v8 = *(_OWORD *)v17;
      *(_OWORD *)(v8 + 16) = v16;
      *(_QWORD *)(v8 + 32) = v18;
      goto LABEL_23;
    }
  }
  if (!(_DWORD)v6)
    goto LABEL_22;
  if (*(_DWORD *)(a2 + 40))
    sub_20AECFAB8();
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(std::__shared_weak_count **)(a2 + 32);
  v19[0] = &off_24C41E150;
  v19[1] = v9;
  v19[2] = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  sub_20B2956A4((uint64_t)v20, (uint64_t)v19);
  v13 = v21;
  *(_OWORD *)v8 = *(_OWORD *)&v20[8];
  *(_OWORD *)(v8 + 16) = v13;
  *(_QWORD *)(v8 + 32) = v22;
  v19[0] = &off_24C41E150;
  if (v10)
  {
    v14 = (unint64_t *)&v10->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_23:
  *(_QWORD *)a2 = off_24C417A08;
}

void sub_20B2C11A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v23;
  uint64_t v24;

  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v24 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2C121C(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B2C1238(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  _BYTE v17[32];
  uint64_t v18;
  _QWORD v19[3];
  _BYTE v20[24];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v3 = 4 * (*a1 != 0);
  if ((v3 * *a1) <= 8)
    v4 = 8;
  else
    v4 = v3 * *a1;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  if (a1[1])
    v7 = v4;
  else
    v7 = 8;
  *(_DWORD *)v20 = 4;
  *(_DWORD *)&v20[4] = v5;
  *(_QWORD *)v17 = *(_QWORD *)v20;
  *(_DWORD *)&v17[8] = v6;
  *(_DWORD *)v20 = 1;
  *(_QWORD *)&v20[4] = v3 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_QWORD *)&v17[12] = *(_QWORD *)v20;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  v18 = *(_QWORD *)&v20[4];
  *(_QWORD *)a2 = off_24C4172B8;
  *(_DWORD *)(a2 + 8) = 0;
  if ((_DWORD)v5 && (_DWORD)v6)
  {
    sub_20B298CEC(0, 32, (uint64_t)v17, a2 + 16);
    LODWORD(v6) = *(_DWORD *)&v17[28];
    v8 = a2 + 48;
    if (!*(_DWORD *)&v17[24])
      goto LABEL_22;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = &off_24C41E150;
    *(_DWORD *)(a2 + 40) = 0;
    v8 = a2 + 48;
    if (!(_DWORD)v5)
    {
LABEL_22:
      v16 = *(_OWORD *)&v17[16];
      *(_OWORD *)v8 = *(_OWORD *)v17;
      *(_OWORD *)(v8 + 16) = v16;
      *(_QWORD *)(v8 + 32) = v18;
      goto LABEL_23;
    }
  }
  if (!(_DWORD)v6)
    goto LABEL_22;
  if (*(_DWORD *)(a2 + 40))
    sub_20AECFAB8();
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(std::__shared_weak_count **)(a2 + 32);
  v19[0] = &off_24C41E150;
  v19[1] = v9;
  v19[2] = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  sub_20B29905C((uint64_t)v20, (uint64_t)v19);
  v13 = v21;
  *(_OWORD *)v8 = *(_OWORD *)&v20[8];
  *(_OWORD *)(v8 + 16) = v13;
  *(_QWORD *)(v8 + 32) = v22;
  v19[0] = &off_24C41E150;
  if (v10)
  {
    v14 = (unint64_t *)&v10->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_23:
  *(_QWORD *)a2 = off_24C417A98;
}

void sub_20B2C1420(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v23;
  uint64_t v24;

  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v24 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2C1498(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B2C14B4(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  _BYTE v17[32];
  uint64_t v18;
  _QWORD v19[3];
  _BYTE v20[24];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v3 = 4 * (*a1 != 0);
  if ((v3 * *a1) <= 0x20)
    v4 = 32;
  else
    v4 = v3 * *a1;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  if (a1[1])
    v7 = v4;
  else
    v7 = 32;
  *(_DWORD *)v20 = 4;
  *(_DWORD *)&v20[4] = v5;
  *(_QWORD *)v17 = *(_QWORD *)v20;
  *(_DWORD *)&v17[8] = v6;
  *(_DWORD *)v20 = 1;
  *(_QWORD *)&v20[4] = v3 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_QWORD *)&v17[12] = *(_QWORD *)v20;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  v18 = *(_QWORD *)&v20[4];
  *(_QWORD *)a2 = off_24C416DA8;
  *(_DWORD *)(a2 + 8) = 0;
  if ((_DWORD)v5 && (_DWORD)v6)
  {
    sub_20B28DA1C(0, 33, (uint64_t)v17, a2 + 16);
    LODWORD(v6) = *(_DWORD *)&v17[28];
    v8 = a2 + 48;
    if (!*(_DWORD *)&v17[24])
      goto LABEL_22;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = &off_24C41E150;
    *(_DWORD *)(a2 + 40) = 0;
    v8 = a2 + 48;
    if (!(_DWORD)v5)
    {
LABEL_22:
      v16 = *(_OWORD *)&v17[16];
      *(_OWORD *)v8 = *(_OWORD *)v17;
      *(_OWORD *)(v8 + 16) = v16;
      *(_QWORD *)(v8 + 32) = v18;
      goto LABEL_23;
    }
  }
  if (!(_DWORD)v6)
    goto LABEL_22;
  if (*(_DWORD *)(a2 + 40))
    sub_20AECFAB8();
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(std::__shared_weak_count **)(a2 + 32);
  v19[0] = &off_24C41E150;
  v19[1] = v9;
  v19[2] = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  sub_20B28DD8C((uint64_t)v20, (uint64_t)v19);
  v13 = v21;
  *(_OWORD *)v8 = *(_OWORD *)&v20[8];
  *(_OWORD *)(v8 + 16) = v13;
  *(_QWORD *)(v8 + 32) = v22;
  v19[0] = &off_24C41E150;
  if (v10)
  {
    v14 = (unint64_t *)&v10->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_23:
  *(_QWORD *)a2 = off_24C417B28;
}

void sub_20B2C169C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v23;
  uint64_t v24;

  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v24 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2C1714(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B2C1730(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  _BYTE v17[32];
  uint64_t v18;
  _QWORD v19[3];
  _BYTE v20[24];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v3 = 4 * (*a1 != 0);
  if ((v3 * *a1) <= 0x20)
    v4 = 32;
  else
    v4 = v3 * *a1;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  if (a1[1])
    v7 = v4;
  else
    v7 = 32;
  *(_DWORD *)v20 = 4;
  *(_DWORD *)&v20[4] = v5;
  *(_QWORD *)v17 = *(_QWORD *)v20;
  *(_DWORD *)&v17[8] = v6;
  *(_DWORD *)v20 = 1;
  *(_QWORD *)&v20[4] = v3 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_QWORD *)&v17[12] = *(_QWORD *)v20;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  v18 = *(_QWORD *)&v20[4];
  *(_QWORD *)a2 = off_24C416DA8;
  *(_DWORD *)(a2 + 8) = 0;
  if ((_DWORD)v5 && (_DWORD)v6)
  {
    sub_20B28DA1C(0, 37, (uint64_t)v17, a2 + 16);
    LODWORD(v6) = *(_DWORD *)&v17[28];
    v8 = a2 + 48;
    if (!*(_DWORD *)&v17[24])
      goto LABEL_22;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = &off_24C41E150;
    *(_DWORD *)(a2 + 40) = 0;
    v8 = a2 + 48;
    if (!(_DWORD)v5)
    {
LABEL_22:
      v16 = *(_OWORD *)&v17[16];
      *(_OWORD *)v8 = *(_OWORD *)v17;
      *(_OWORD *)(v8 + 16) = v16;
      *(_QWORD *)(v8 + 32) = v18;
      goto LABEL_23;
    }
  }
  if (!(_DWORD)v6)
    goto LABEL_22;
  if (*(_DWORD *)(a2 + 40))
    sub_20AECFAB8();
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(std::__shared_weak_count **)(a2 + 32);
  v19[0] = &off_24C41E150;
  v19[1] = v9;
  v19[2] = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  sub_20B28DD8C((uint64_t)v20, (uint64_t)v19);
  v13 = v21;
  *(_OWORD *)v8 = *(_OWORD *)&v20[8];
  *(_OWORD *)(v8 + 16) = v13;
  *(_QWORD *)(v8 + 32) = v22;
  v19[0] = &off_24C41E150;
  if (v10)
  {
    v14 = (unint64_t *)&v10->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_23:
  *(_QWORD *)a2 = off_24C417BB8;
}

void sub_20B2C1918(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v23;
  uint64_t v24;

  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v24 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2C1990(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B2C19AC(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  _BYTE v17[32];
  uint64_t v18;
  _QWORD v19[3];
  _BYTE v20[24];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v3 = 4 * (*a1 != 0);
  if ((v3 * *a1) <= 0x10)
    v4 = 16;
  else
    v4 = v3 * *a1;
  v5 = *(_QWORD *)a1;
  v6 = HIDWORD(*(_QWORD *)a1);
  if (a1[1])
    v7 = v4;
  else
    v7 = 16;
  *(_DWORD *)v20 = 4;
  *(_DWORD *)&v20[4] = v5;
  *(_QWORD *)v17 = *(_QWORD *)v20;
  *(_DWORD *)&v17[8] = v6;
  *(_DWORD *)v20 = 1;
  *(_QWORD *)&v20[4] = v3 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_QWORD *)&v17[12] = *(_QWORD *)v20;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  v18 = *(_QWORD *)&v20[4];
  *(_QWORD *)a2 = off_24C416F58;
  *(_DWORD *)(a2 + 8) = 0;
  if ((_DWORD)v5 && (_DWORD)v6)
  {
    sub_20B2919A8(0, 38, (uint64_t)v17, a2 + 16);
    LODWORD(v6) = *(_DWORD *)&v17[28];
    v8 = a2 + 48;
    if (!*(_DWORD *)&v17[24])
      goto LABEL_22;
  }
  else
  {
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = &off_24C41E150;
    *(_DWORD *)(a2 + 40) = 0;
    v8 = a2 + 48;
    if (!(_DWORD)v5)
    {
LABEL_22:
      v16 = *(_OWORD *)&v17[16];
      *(_OWORD *)v8 = *(_OWORD *)v17;
      *(_OWORD *)(v8 + 16) = v16;
      *(_QWORD *)(v8 + 32) = v18;
      goto LABEL_23;
    }
  }
  if (!(_DWORD)v6)
    goto LABEL_22;
  if (*(_DWORD *)(a2 + 40))
    sub_20AECFAB8();
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(std::__shared_weak_count **)(a2 + 32);
  v19[0] = &off_24C41E150;
  v19[1] = v9;
  v19[2] = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  sub_20B291D18((uint64_t)v20, (uint64_t)v19);
  v13 = v21;
  *(_OWORD *)v8 = *(_OWORD *)&v20[8];
  *(_OWORD *)(v8 + 16) = v13;
  *(_QWORD *)(v8 + 32) = v22;
  v19[0] = &off_24C41E150;
  if (v10)
  {
    v14 = (unint64_t *)&v10->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_23:
  *(_QWORD *)a2 = off_24C417C48;
}

void sub_20B2C1B94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v23;
  uint64_t v24;

  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v24 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v24 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v24])(&a17, v19);
  *(_DWORD *)(v18 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_20B2C1C0C(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B2C1C28(_QWORD *a1)
{
  *a1 = &off_24C417CD8;
  sub_20B4E7584(a1 + 1);
  return a1;
}

void sub_20B2C1C58(_QWORD *a1)
{
  *a1 = &off_24C417CD8;
  sub_20B4E7584(a1 + 1);
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B2C1C98(_QWORD *a1)
{
  *a1 = &off_24C417CF8;
  sub_20B4E79B0(a1 + 1);
  return a1;
}

void sub_20B2C1CC8(_QWORD *a1)
{
  *a1 = &off_24C417CF8;
  sub_20B4E79B0(a1 + 1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B2C1D08(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416BF8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x20BD3583C](a1, 0x10A3C40EE3858B8);
}

uint64_t sub_20B2C1D80(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416E38;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x20BD3583C](a1, 0x10A3C40EE3858B8);
}

uint64_t sub_20B2C1DF8(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416FE8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x20BD3583C](a1, 0x10A3C40EE3858B8);
}

uint64_t sub_20B2C1E70(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C417198;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x20BD3583C](a1, 0x10A3C40EE3858B8);
}

uint64_t sub_20B2C1EE8(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416C88;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x20BD3583C](a1, 0x10A3C4049419736);
}

uint64_t sub_20B2C1F60(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C417078;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x20BD3583C](a1, 0x10A3C4049419736);
}

uint64_t sub_20B2C1FD8(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C417228;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x20BD3583C](a1, 0x10A3C4049419736);
}

uint64_t sub_20B2C2050(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416D18;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x20BD3583C](a1, 0x10A3C4049419736);
}

uint64_t sub_20B2C20C8(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416D18;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x20BD3583C](a1, 0x10A3C4049419736);
}

uint64_t sub_20B2C2140(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416EC8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x20BD3583C](a1, 0x10A3C4049419736);
}

uint64_t sub_20B2C21B8(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416DA8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x20BD3583C](a1, 0x10A3C4049419736);
}

uint64_t sub_20B2C2230(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416DA8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x20BD3583C](a1, 0x10A3C4049419736);
}

uint64_t sub_20B2C22A8(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C417108;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x20BD3583C](a1, 0x10A3C4049419736);
}

uint64_t sub_20B2C2320(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C4172B8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x20BD3583C](a1, 0x10A3C4049419736);
}

uint64_t sub_20B2C2398(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416DA8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x20BD3583C](a1, 0x10A3C4049419736);
}

uint64_t sub_20B2C2410(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416DA8;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x20BD3583C](a1, 0x10A3C4049419736);
}

uint64_t sub_20B2C2488(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24C416F58;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24C418120[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x20BD3583C](a1, 0x10A3C4049419736);
}

void sub_20B2C2500(uint64_t a1, _QWORD *a2)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a2 = &off_24C41E150;
  v2 = (std::__shared_weak_count *)a2[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
}

_QWORD *sub_20B2C2564(uint64_t a1, _QWORD *a2)
{
  return sub_20B4E7584(a2);
}

_QWORD *sub_20B2C256C(uint64_t a1, _QWORD *a2)
{
  return sub_20B4E79B0(a2);
}

void sub_20B2C2574(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  char v10;

  v4 = *a1;
  v5 = *(unsigned int *)(*a1 + 24);
  if ((_DWORD)v5 == -1)
    goto LABEL_9;
  if ((_DWORD)v5)
  {
    ((void (*)(char *, uint64_t))off_24C418120[v5])(&v10, v4);
LABEL_9:
    *(_QWORD *)v4 = &off_24C41E150;
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(a3 + 8);
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_DWORD *)(v4 + 24) = 0;
    return;
  }
  v6 = *(_OWORD *)(a3 + 8);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v7 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v6;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_20B2C2644(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  char v17;

  v4 = *a1;
  v5 = *(unsigned int *)(*a1 + 24);
  if ((_DWORD)v5 == -1)
    goto LABEL_18;
  if ((_DWORD)v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_24C418120[v5])(&v17, v4);
LABEL_18:
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(a3 + 8);
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_QWORD *)v4 = &off_24C41DFE8;
    *(_DWORD *)(v4 + 24) = 1;
    return;
  }
  v7 = *(uint64_t **)(a2 + 8);
  if (v7)
  {
    v9 = *v7;
    v8 = (std::__shared_weak_count *)v7[1];
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    if (v9)
      sub_20B4ED9D4(*(_QWORD *)(a2 + 8));
  }
  v13 = *(_OWORD *)(a3 + 8);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v13;
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_20B2C278C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  char v17;

  v4 = *a1;
  v5 = *(unsigned int *)(*a1 + 24);
  if ((_DWORD)v5 == -1)
    goto LABEL_18;
  if ((_DWORD)v5 != 2)
  {
    ((void (*)(char *, uint64_t))off_24C418120[v5])(&v17, v4);
LABEL_18:
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(a3 + 8);
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_QWORD *)v4 = &off_24C41E008;
    *(_DWORD *)(v4 + 24) = 2;
    return;
  }
  v7 = *(uint64_t **)(a2 + 8);
  if (v7)
  {
    v9 = *v7;
    v8 = (std::__shared_weak_count *)v7[1];
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    if (v9)
      sub_20B4EDAC0(*(_QWORD *)(a2 + 8));
  }
  v13 = *(_OWORD *)(a3 + 8);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v13;
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

uint64_t sub_20B2C28D4(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20B2C293C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B2C29A4()
{
  return 17;
}

uint64_t sub_20B2C29AC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20B2C29B4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20B2C29C8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20B2C2A4C(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20B2C2AB4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B2C2B1C()
{
  return 29;
}

uint64_t sub_20B2C2B24(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20B2C2B2C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20B2C2B40(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20B2C2BC4(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20B2C2C2C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B2C2C94()
{
  return 33;
}

uint64_t sub_20B2C2C9C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20B2C2CA4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20B2C2CB8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20B2C2D3C(uint64_t a1)
{
  uint64_t result;
  char *v2;
  uint64_t v3;
  _DWORD v4[12];
  uint64_t vars0;

  result = sub_20B4E94AC(a1);
  v2 = (char *)&vars0;
  if ((int)result > 875836517)
  {
    if ((int)result > 1111970368)
    {
      switch((_DWORD)result)
      {
        case 0x42475241:
          v3 = 4;
          break;
        case 0x4C303038:
          v3 = 0;
          break;
        case 0x52474241:
          v3 = 6;
          break;
        default:
          goto LABEL_29;
      }
    }
    else
    {
      switch((_DWORD)result)
      {
        case 0x34343466:
          v3 = 10;
          break;
        case 0x34343476:
          v3 = 9;
          break;
        case 0x41424752:
          v3 = 5;
          break;
        default:
          goto LABEL_29;
      }
    }
  }
  else if ((int)result > 843264055)
  {
    switch((_DWORD)result)
    {
      case 0x32433038:
        v3 = 11;
        break;
      case 0x34323066:
        v3 = 8;
        break;
      case 0x34323076:
        v3 = 7;
        break;
      default:
        goto LABEL_29;
    }
  }
  else
  {
    switch((_DWORD)result)
    {
      case 0x18:
        v3 = 1;
        break;
      case 0x20:
        v3 = 3;
        break;
      case 0x32344247:
        v3 = 2;
        break;
      default:
        goto LABEL_29;
    }
  }
  v2 = (char *)&v4[v3];
LABEL_29:
  if (v2 - (char *)v4 == 48)
  {
    result = sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 111, (uint64_t)"Contains(pf::formats::U8(), ref.Format())", 41, (uint64_t)&unk_20B5AACCD, 0, (void (*)(void **))sub_20B532360);
    if ((_DWORD)result)
      abort();
  }
  return result;
}

void sub_20B2C2EF0()
{
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B2C2F04(int a1@<W1>, uint64_t a2@<X8>)
{
  sub_20B2C2F54(a2, a1);
}

void sub_20B2C2F2C(int a1@<W1>, uint64_t a2@<X8>)
{
  sub_20B2C88DC(a2, a1);
}

void sub_20B2C2F54(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_20B2C2FA8(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  __int128 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t *v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t *v52;
  std::__shared_weak_count *v53;
  uint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  uint64_t result;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  char v66;
  __int128 v67;
  void **v68[6];
  uint64_t v69;
  _BYTE v70[32];
  __int128 v71;

  v6 = *a3 != 0;
  if (*a3 <= 0x20)
    v7 = 32;
  else
    v7 = *a3;
  v8 = *(_QWORD *)a3;
  if (a3[1])
    v9 = v7;
  else
    v9 = 32;
  *(_QWORD *)&v67 = *(_QWORD *)a3;
  *((_QWORD *)&v67 + 1) = v6 | (v9 << 32);
  v66 = 0;
  *(_QWORD *)v4 = off_24C416BF8;
  *(_DWORD *)(v4 + 8) = 0;
  v10 = HIDWORD(v8);
  if ((_DWORD)v8 && HIDWORD(v8))
  {
    sub_20B289CD8(0, 1, (unsigned int *)&v67, (uint64_t)v70);
    LODWORD(v8) = v67;
    LODWORD(v10) = DWORD1(v67);
  }
  else
  {
    *(_QWORD *)(v4 + 24) = 0;
    *(_QWORD *)(v4 + 32) = 0;
    *(_QWORD *)(v4 + 16) = &off_24C41E150;
    *(_DWORD *)(v4 + 40) = 0;
  }
  if ((_DWORD)v8 && (_DWORD)v10)
  {
    if (*(_DWORD *)(v4 + 40))
      sub_20AECFAB8();
    v11 = *(_QWORD *)(v4 + 24);
    v12 = *(std::__shared_weak_count **)(v4 + 32);
    *(_QWORD *)(v4 + 88) = &off_24C41E150;
    *(_QWORD *)(v4 + 96) = v11;
    *(_QWORD *)(v4 + 104) = v12;
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
    }
    sub_20B28A218((uint64_t *)(v5 - 136), v5 - 176);
    v15 = *(_OWORD *)(v4 + 136);
    *(_QWORD *)(v4 + 88) = &off_24C41E150;
    if (v12)
    {
      v16 = (unint64_t *)&v12->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        v65 = v15;
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
        v15 = v65;
      }
    }
    *(_OWORD *)(v4 + 48) = v15;
  }
  else
  {
    v71 = v67;
  }
  if (*(_DWORD *)(v4 + 40) > 2u)
    goto LABEL_91;
  v18 = *(uint64_t **)(v4 + 24);
  if (v18)
  {
    v20 = *v18;
    v19 = (std::__shared_weak_count *)v18[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
    {
      v24 = *(_DWORD *)(v4 + 40);
      switch(v24)
      {
        case 2:
          v43 = *(uint64_t **)(v4 + 24);
          v44 = *(_QWORD *)(v4 + 32);
          *(_QWORD *)(v4 + 136) = v43;
          *(_QWORD *)(v4 + 144) = v44;
          if (v44)
          {
            v45 = (unint64_t *)(v44 + 8);
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
          }
          *(_QWORD *)(v4 + 128) = &off_24C41E008;
          if (!v43)
            goto LABEL_72;
          v48 = *v43;
          v47 = (std::__shared_weak_count *)v43[1];
          if (v47)
          {
            v49 = (unint64_t *)&v47->__shared_owners_;
            do
              v50 = __ldxr(v49);
            while (__stxr(v50 + 1, v49));
            do
              v51 = __ldaxr(v49);
            while (__stlxr(v51 - 1, v49));
            if (!v51)
            {
              ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
              std::__shared_weak_count::__release_weak(v47);
            }
          }
          if (!v48)
            goto LABEL_72;
          break;
        case 1:
          v34 = *(uint64_t **)(v4 + 24);
          v35 = *(_QWORD *)(v4 + 32);
          *(_QWORD *)(v4 + 136) = v34;
          *(_QWORD *)(v4 + 144) = v35;
          if (v35)
          {
            v36 = (unint64_t *)(v35 + 8);
            do
              v37 = __ldxr(v36);
            while (__stxr(v37 + 1, v36));
          }
          *(_QWORD *)(v4 + 128) = &off_24C41E008;
          if (!v34)
            goto LABEL_72;
          v39 = *v34;
          v38 = (std::__shared_weak_count *)v34[1];
          if (v38)
          {
            v40 = (unint64_t *)&v38->__shared_owners_;
            do
              v41 = __ldxr(v40);
            while (__stxr(v41 + 1, v40));
            do
              v42 = __ldaxr(v40);
            while (__stlxr(v42 - 1, v40));
            if (!v42)
            {
              ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
              std::__shared_weak_count::__release_weak(v38);
            }
          }
          if (!v39)
            goto LABEL_72;
          break;
        case 0:
          v25 = *(uint64_t **)(v4 + 24);
          v26 = *(_QWORD *)(v4 + 32);
          *(_QWORD *)(v4 + 136) = v25;
          *(_QWORD *)(v4 + 144) = v26;
          if (v26)
          {
            v27 = (unint64_t *)(v26 + 8);
            do
              v28 = __ldxr(v27);
            while (__stxr(v28 + 1, v27));
          }
          *(_QWORD *)(v4 + 128) = &off_24C41E008;
          if (!v25)
            goto LABEL_72;
          v30 = *v25;
          v29 = (std::__shared_weak_count *)v25[1];
          if (v29)
          {
            v31 = (unint64_t *)&v29->__shared_owners_;
            do
              v32 = __ldxr(v31);
            while (__stxr(v32 + 1, v31));
            do
              v33 = __ldaxr(v31);
            while (__stlxr(v33 - 1, v31));
            if (!v33)
            {
              ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
              std::__shared_weak_count::__release_weak(v29);
            }
          }
          if (!v30)
            goto LABEL_72;
          break;
        default:
LABEL_91:
          sub_20AECFAB8();
      }
      sub_20B4ED8EC(*(_QWORD *)(v4 + 136));
LABEL_72:
      sub_20B28AFA8((uint64_t *)(v5 - 176), (uint64_t)&v69);
      v68[0] = (void **)(v5 - 176);
      v68[1] = (void **)&v66;
      sub_20B27E2A8(v68);
      v52 = *(uint64_t **)(v4 + 136);
      if (v52)
      {
        v54 = *v52;
        v53 = (std::__shared_weak_count *)v52[1];
        if (v53)
        {
          v55 = (unint64_t *)&v53->__shared_owners_;
          do
            v56 = __ldxr(v55);
          while (__stxr(v56 + 1, v55));
          do
            v57 = __ldaxr(v55);
          while (__stlxr(v57 - 1, v55));
          if (!v57)
          {
            ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
            std::__shared_weak_count::__release_weak(v53);
          }
        }
        if (v54)
          sub_20B4EDAC0(*(_QWORD *)(v4 + 136));
      }
      *(_QWORD *)(v4 + 128) = &off_24C41E150;
      v58 = *(std::__shared_weak_count **)(v4 + 144);
      if (v58)
      {
        v59 = (unint64_t *)&v58->__shared_owners_;
        do
          v60 = __ldaxr(v59);
        while (__stlxr(v60 - 1, v59));
        if (!v60)
        {
          ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
          std::__shared_weak_count::__release_weak(v58);
        }
      }
    }
  }
  *(_QWORD *)v4 = off_24C417348;
  result = operator new();
  v62 = result;
  *(_QWORD *)result = off_24C416BF8;
  *(_DWORD *)(result + 8) = *(_DWORD *)(v4 + 8);
  *(_BYTE *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = -1;
  v63 = *(unsigned int *)(v4 + 40);
  if ((_DWORD)v63 == -1)
  {
    *(_OWORD *)(result + 48) = v71;
    *(_QWORD *)result = off_24C417348;
  }
  else
  {
    result = ((uint64_t (*)(uint64_t, uint64_t, _BYTE *))off_24C418138[v63])(v5 - 136, result + 16, v70);
    *(_DWORD *)(v62 + 40) = v63;
    v64 = *(unsigned int *)(v4 + 40);
    *(_OWORD *)(v62 + 48) = v71;
    *(_QWORD *)v62 = off_24C417348;
    *(_QWORD *)v4 = off_24C416BF8;
    if ((_DWORD)v64 != -1)
      result = ((uint64_t (*)(uint64_t, _BYTE *))off_24C418120[v64])(v5 - 136, v70);
  }
  *v3 = v62;
  return result;
}

void sub_20B2C7964(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,std::__shared_weak_count *a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t *p_shared_owners;
  unint64_t v34;
  uint64_t v35;

  if (a24)
  {
    p_shared_owners = (unint64_t *)&a24->__shared_owners_;
    do
      v34 = __ldaxr(p_shared_owners);
    while (__stlxr(v34 - 1, p_shared_owners));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))a24->__on_zero_shared)(a24);
      std::__shared_weak_count::__release_weak(a24);
    }
  }
  *(_QWORD *)v29 = v30;
  v35 = *(unsigned int *)(v29 + 40);
  if ((_DWORD)v35 != -1)
    ((void (*)(uint64_t, uint64_t))off_24C418120[v35])(v31 - 136, v28);
  _Unwind_Resume(exception_object);
}

void sub_20B2C88DC(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_20B2C892C(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t (**v22)();
  uint64_t v23;
  std::__shared_weak_count *v24;
  unsigned int v25;
  __int128 v26;
  _QWORD v27[5];
  __int128 v28;

  v6 = *a3 != 0;
  if (*a3 <= 0x20)
    v7 = 32;
  else
    v7 = *a3;
  v8 = *(_QWORD *)a3;
  if (a3[1])
    v9 = v7;
  else
    v9 = 32;
  *(_QWORD *)&v28 = *(_QWORD *)a3;
  *((_QWORD *)&v28 + 1) = v6 | (v9 << 32);
  v10 = HIDWORD(v8);
  if ((_DWORD)v8 && HIDWORD(v8))
  {
    sub_20B289CD8(0, 1, (unsigned int *)&v28, (uint64_t)&v22);
    LODWORD(v8) = v28;
    LODWORD(v10) = DWORD1(v28);
  }
  else
  {
    v23 = 0;
    v24 = 0;
    v22 = &off_24C41E150;
    v25 = 0;
  }
  if ((_DWORD)v8 && (_DWORD)v10)
  {
    if (v25)
      sub_20AECFAB8();
    v11 = v24;
    v27[0] = &off_24C41E150;
    v27[1] = v23;
    v27[2] = v24;
    if (v24)
    {
      p_shared_owners = (unint64_t *)&v24->__shared_owners_;
      do
        v13 = __ldxr(p_shared_owners);
      while (__stxr(v13 + 1, p_shared_owners));
    }
    sub_20B28A218((uint64_t *)(v5 - 120), (uint64_t)v27);
    v14 = *(_OWORD *)(v4 + 8);
    v27[0] = &off_24C41E150;
    if (v11)
    {
      v15 = (unint64_t *)&v11->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        v21 = v14;
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        v14 = v21;
      }
    }
    v26 = v14;
  }
  else
  {
    v26 = v28;
  }
  result = operator new();
  v18 = result;
  *(_QWORD *)result = off_24C416BF8;
  v19 = v25;
  *(_DWORD *)(result + 8) = 0;
  *(_BYTE *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = -1;
  if ((_DWORD)v19 == -1)
  {
    *(_OWORD *)(result + 48) = v26;
    *(_QWORD *)result = off_24C417348;
  }
  else
  {
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t (***)()))off_24C418138[v19])(v5 - 120, result + 16, &v22);
    *(_DWORD *)(v18 + 40) = v19;
    v20 = v25;
    *(_OWORD *)(v18 + 48) = v26;
    *(_QWORD *)v18 = off_24C417348;
    if ((_DWORD)v20 != -1)
      result = ((uint64_t (*)(uint64_t, uint64_t (***)()))off_24C418120[v20])(v5 - 120, &v22);
  }
  *v3 = v18;
  return result;
}

void sub_20B2CADB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B2CB174@<X0>(_QWORD *a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  _QWORD *v9;
  unsigned __int8 v10;
  int v11;
  std::__shared_weak_count_vtbl *v12;
  CGImageSource *v13;
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  CGImageRef ImageAtIndex;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _BYTE *v42;
  int v43;
  uint64_t v44;
  int v45;
  CGImageSource *v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  int v51;
  __int16 v52;
  unint64_t v53;
  _BYTE *v54;
  int v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  _QWORD *result;
  uint64_t v72;
  CGImageSourceRef isrc[2];
  void *v74[2];
  int v75;
  char v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  char v83;
  char v84;
  __int128 v85;
  __int128 __p;
  void (__cdecl *v87)(void *);
  uint64_t v88;
  void *v89[2];
  uint64_t v90;
  uint64_t v91;
  void *v92[2];
  uint64_t v93;
  char v94;
  char v95;
  char v96;
  CGDataProviderRef provider[2];
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  CGDataProviderSequentialCallbacks callbacks;
  unsigned __int8 v102;
  void *v103[2];
  uint64_t v104;
  uint64_t v105;
  void *v106[2];
  uint64_t v107;
  char v108;
  char v109;
  char v110;
  __int128 v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  CGDataProviderGetBytesCallback getBytes;
  std::__shared_weak_count_vtbl *v117;
  std::__shared_weak_count *v118;
  __int128 v119;
  __int128 v120;
  char v121;
  char v122;
  void *v123;
  char v124;
  void *v125;
  char v126;
  char v127;
  char v128;
  char v129;
  int v130;
  _BYTE v131[24];
  _BYTE *v132;
  uint64_t v133;

  v133 = *MEMORY[0x24BDAC8D0];
  v9 = (_QWORD *)a1[3];
  if (v9)
  {
    if (v9 == a1)
    {
      v132 = v131;
      (*(void (**)(_QWORD *, _BYTE *))(*a1 + 24))(a1, v131);
    }
    else
    {
      v132 = (_BYTE *)(*(uint64_t (**)(_QWORD))(*v9 + 16))(a1[3]);
    }
  }
  else
  {
    v132 = 0;
  }
  v10 = std::istream::peek();
  sub_20B2CE4F0(a4, v10, (uint64_t)&v119);
  if (v129)
  {
    v11 = v119;
    *(_OWORD *)&callbacks.version = xmmword_24C41A678;
    *(_OWORD *)&callbacks.skipForward = *(_OWORD *)off_24C41A688;
    callbacks.releaseInfo = 0;
    v12 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateSequential(a2, &callbacks);
    sub_20B3EE244(&v117, v12, 0);
    if ((v11 - 3) > 2)
    {
      sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/ImageIO/src/Apple.cpp", 157, (uint64_t)"", 0, (uint64_t)"Unsupported Format", 18, (void (*)(void **))sub_20B532360);
      abort();
    }
    sub_20B2CC354(provider, (uint64_t)&v117);
    v13 = CGImageSourceCreateWithDataProvider(provider[0], 0);
    v14 = (std::__shared_weak_count *)operator new();
    v15 = v14;
    v14->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    v14->__vftable = (std::__shared_weak_count_vtbl *)&off_24C4184A8;
    v14->__shared_weak_owners_ = 0;
    v14[1].__vftable = (std::__shared_weak_count_vtbl *)v13;
    isrc[0] = v13;
    isrc[1] = (CGImageSourceRef)v14;
    do
      v17 = __ldxr(p_shared_owners);
    while (__stxr(v17 + 1, p_shared_owners));
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v15);
    }
    ImageAtIndex = CGImageSourceCreateImageAtIndex(isrc[0], 0, 0);
    *(_QWORD *)&v111 = ImageAtIndex;
    v20 = (std::__shared_weak_count *)operator new();
    v20->__shared_owners_ = 0;
    v21 = (unint64_t *)&v20->__shared_owners_;
    v20->__vftable = (std::__shared_weak_count_vtbl *)&off_24C418558;
    v20->__shared_weak_owners_ = 0;
    v20[1].__vftable = (std::__shared_weak_count_vtbl *)ImageAtIndex;
    *((_QWORD *)&v111 + 1) = v20;
    *(_QWORD *)&v85 = ImageAtIndex;
    *((_QWORD *)&v85 + 1) = v20;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    sub_20B2CD5C4(&callbacks, ImageAtIndex);
    v115 = *(_QWORD *)&callbacks.version;
    getBytes = callbacks.getBytes;
    if (callbacks.getBytes)
    {
      v23 = (unint64_t *)((char *)callbacks.getBytes + 8);
      do
        v24 = __ldxr(v23);
      while (__stxr(v24 + 1, v23));
      v25 = (std::__shared_weak_count *)callbacks.getBytes;
      if (callbacks.getBytes)
      {
        v26 = (unint64_t *)((char *)callbacks.getBytes + 8);
        do
          v27 = __ldaxr(v26);
        while (__stlxr(v27 - 1, v26));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
      }
    }
    do
      v28 = __ldaxr(v21);
    while (__stlxr(v28 - 1, v21));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
    v29 = (std::__shared_weak_count *)*((_QWORD *)&v111 + 1);
    if (*((_QWORD *)&v111 + 1))
    {
      v30 = (unint64_t *)(*((_QWORD *)&v111 + 1) + 8);
      do
        v31 = __ldaxr(v30);
      while (__stlxr(v31 - 1, v30));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
    if (isrc[1])
    {
      v32 = (unint64_t *)((char *)isrc[1] + 8);
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      if (!v33)
      {
        (*(void (**)(CGImageSourceRef))(*(_QWORD *)isrc[1] + 16))(isrc[1]);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)isrc[1]);
      }
    }
    v34 = (std::__shared_weak_count *)provider[1];
    if (!provider[1])
      goto LABEL_40;
    v35 = (unint64_t *)((char *)provider[1] + 8);
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
      v38 = v115;
      v37 = (std::__shared_weak_count *)getBytes;
      if (!getBytes)
        goto LABEL_45;
    }
    else
    {
LABEL_40:
      v38 = v115;
      v37 = (std::__shared_weak_count *)getBytes;
      if (!getBytes)
        goto LABEL_45;
    }
    v39 = (unint64_t *)&v37->__shared_owners_;
    do
      v40 = __ldxr(v39);
    while (__stxr(v40 + 1, v39));
    do
      v41 = __ldaxr(v39);
    while (__stlxr(v41 - 1, v39));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
      if (v38)
        goto LABEL_60;
      goto LABEL_46;
    }
LABEL_45:
    if (v38)
      goto LABEL_60;
LABEL_46:
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/ImageIO/src/Apple.cpp", 160, (uint64_t)"cg_image.IsValid()", 18, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
LABEL_60:
    sub_20B3EE6F0((uint64_t)&v115, (uint64_t)&v111);
    *(_OWORD *)provider = v111;
    v98 = v112;
    if (SHIBYTE(v114) < 0)
    {
      sub_20AEC60F4(&v99, (void *)v113, *((unint64_t *)&v113 + 1));
    }
    else
    {
      v99 = v113;
      v100 = v114;
    }
    if (a3)
    {
      switch(v11)
      {
        case 3:
          if (a3 >= 3 && (a3 & 0xFFFFFFF7) - 21 >= 2)
            goto LABEL_77;
          break;
        case 5:
          if (a3 > 0x20 || ((1 << a3) & 0x1E1E0001ELL) == 0)
            goto LABEL_77;
          break;
        case 4:
          if (a3 != 1 && a3 != 21)
          {
LABEL_77:
            sub_20B2CE1D8(a3, v11, (uint64_t)&v85);
            *(_OWORD *)&callbacks.version = v85;
            LOBYTE(callbacks.skipForward) = 0;
            v109 = 0;
            if (v95)
            {
              v102 = 0;
              v45 = v88;
              if (!(_BYTE)v88)
                goto LABEL_86;
LABEL_85:
              *(_OWORD *)&callbacks.skipForward = __p;
              callbacks.releaseInfo = v87;
              v87 = 0;
              __p = 0uLL;
              v102 = 1;
LABEL_86:
              LOBYTE(v103[0]) = 0;
              v108 = 0;
              if (v94)
              {
                v104 = v90;
                *(_OWORD *)v103 = *(_OWORD *)v89;
                v89[0] = 0;
                v89[1] = 0;
                v105 = v91;
                *(_OWORD *)v106 = *(_OWORD *)v92;
                v107 = v93;
                v90 = 0;
                v92[0] = 0;
                v92[1] = 0;
                v93 = 0;
                v108 = 1;
              }
              v109 = 1;
              v110 = 0;
              if (v45 && SHIBYTE(v87) < 0)
                operator delete((void *)__p);
              if ((SHIBYTE(v100) & 0x80000000) == 0)
              {
LABEL_92:
                if (v110)
                {
LABEL_93:
                  if (!BYTE4(v111)
                    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/ImageIO/src/Apple.cpp", 172, (uint64_t)"compat.format.has_value()", 25, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
                  {
                    abort();
                  }
                  isrc[0] = (CGImageSourceRef)sub_20B3EE518((uint64_t)&v115);
                  v130 = v111;
                  if (!v132)
                    sub_20AECABA4();
                  (*(void (**)(__int128 *__return_ptr, _BYTE *, CGImageSourceRef *, int *))(*(_QWORD *)v132 + 48))(&v85, v132, isrc, &v130);
                  if (v96)
                  {
                    isrc[0] = (CGImageSourceRef)&off_24C400938;
                    v46 = (CGImageSource *)*((_QWORD *)&v85 + 1);
                    v47 = (std::__shared_weak_count *)__p;
                    if ((_QWORD)__p)
                    {
                      v48 = (unint64_t *)(__p + 8);
                      do
                        v49 = __ldxr(v48);
                      while (__stxr(v49 + 1, v48));
                      v50 = v88;
                      v51 = (int)v89[0];
                      v52 = WORD2(v89[0]);
                      do
                        v53 = __ldxr(v48);
                      while (__stxr(v53 + 1, v48));
                    }
                    else
                    {
                      v50 = v88;
                      v51 = (int)v89[0];
                      v52 = WORD2(v89[0]);
                    }
                    isrc[1] = v46;
                    v74[0] = v47;
                    v74[1] = *((void **)&__p + 1);
                    v75 = (int)v87;
                    v77 = v50;
                    LODWORD(v78) = v51;
                    WORD2(v78) = v52;
                    if (v47)
                    {
                      v57 = (unint64_t *)&v47->__shared_owners_;
                      do
                        v58 = __ldaxr(v57);
                      while (__stlxr(v58 - 1, v57));
                      if (!v58)
                      {
                        ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
                        std::__shared_weak_count::__release_weak(v47);
                      }
                    }
                    sub_20B3F07DC(&v115, isrc);
                    v59 = (std::__shared_weak_count *)v74[0];
                    if (v74[0])
                    {
                      v60 = (unint64_t *)((char *)v74[0] + 8);
                      do
                        v61 = __ldaxr(v60);
                      while (__stlxr(v61 - 1, v60));
                      if (!v61)
                      {
                        ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
                        std::__shared_weak_count::__release_weak(v59);
                      }
                    }
                    *(_BYTE *)(a5 + 120) = 1;
                  }
                  else
                  {
                    *(_OWORD *)isrc = v85;
                    v54 = sub_20AECEBD0(v74, &__p);
                    *(_OWORD *)a5 = *(_OWORD *)isrc;
                    *(_BYTE *)(a5 + 16) = 0;
                    *(_BYTE *)(a5 + 112) = 0;
                    if (!v84)
                    {
                      *(_BYTE *)(a5 + 120) = 0;
                      if (v96)
                        goto LABEL_128;
                      goto LABEL_134;
                    }
                    *(_BYTE *)(a5 + 40) = 0;
                    v55 = v77;
                    if ((_BYTE)v77)
                    {
                      *(_OWORD *)(a5 + 16) = *(_OWORD *)v54;
                      *(_QWORD *)(a5 + 32) = *((_QWORD *)v54 + 2);
                      *((_QWORD *)v54 + 1) = 0;
                      *((_QWORD *)v54 + 2) = 0;
                      *(_QWORD *)v54 = 0;
                      *(_BYTE *)(a5 + 40) = 1;
                    }
                    *(_BYTE *)(a5 + 48) = 0;
                    *(_BYTE *)(a5 + 104) = 0;
                    if (v83)
                    {
                      v56 = v80;
                      *(_QWORD *)(a5 + 64) = v79;
                      *(_OWORD *)(a5 + 48) = v78;
                      v78 = 0uLL;
                      *(_QWORD *)(a5 + 72) = v56;
                      *(_OWORD *)(a5 + 80) = v81;
                      *(_QWORD *)(a5 + 96) = v82;
                      v79 = 0;
                      v81 = 0uLL;
                      v82 = 0;
                      *(_BYTE *)(a5 + 104) = 1;
                    }
                    *(_BYTE *)(a5 + 112) = 1;
                    *(_BYTE *)(a5 + 120) = 0;
                    if (v55 && v76 < 0)
                    {
                      operator delete(v74[0]);
                      if (v96)
                      {
LABEL_128:
                        v62 = (std::__shared_weak_count *)__p;
                        if ((_QWORD)__p)
                        {
                          v63 = (unint64_t *)(__p + 8);
                          do
                            v64 = __ldaxr(v63);
                          while (__stlxr(v64 - 1, v63));
                          if (!v64)
                          {
                            ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
                            std::__shared_weak_count::__release_weak(v62);
                          }
                        }
                        goto LABEL_143;
                      }
LABEL_134:
                      if (v95)
                      {
                        if (v94)
                        {
                          if (SHIBYTE(v93) < 0)
                            operator delete(v92[0]);
                          if (SHIBYTE(v90) < 0)
                            operator delete(v89[0]);
                        }
                        if ((_BYTE)v88 && SHIBYTE(v87) < 0)
                          operator delete((void *)__p);
                      }
LABEL_143:
                      if (!v110 && v109)
                      {
                        if (v108)
                        {
                          if (SHIBYTE(v107) < 0)
                            operator delete(v106[0]);
                          if (SHIBYTE(v104) < 0)
                            operator delete(v103[0]);
                        }
                        if (v102 && SHIBYTE(callbacks.releaseInfo) < 0)
                          operator delete(callbacks.skipForward);
                      }
                      if (SHIBYTE(v114) < 0)
                        operator delete((void *)v113);
                      v65 = (std::__shared_weak_count *)getBytes;
                      if (!getBytes)
                        goto LABEL_150;
                      v66 = (unint64_t *)((char *)getBytes + 8);
                      do
                        v67 = __ldaxr(v66);
                      while (__stlxr(v67 - 1, v66));
                      if (!v67)
                      {
                        ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
                        std::__shared_weak_count::__release_weak(v65);
                        v68 = v118;
                        if (v118)
                          goto LABEL_151;
                      }
                      else
                      {
LABEL_150:
                        v68 = v118;
                        if (v118)
                        {
LABEL_151:
                          v69 = (unint64_t *)&v68->__shared_owners_;
                          do
                            v70 = __ldaxr(v69);
                          while (__stlxr(v70 - 1, v69));
                          if (!v70)
                          {
                            ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
                            std::__shared_weak_count::__release_weak(v68);
                            if (v129)
                              goto LABEL_155;
                            goto LABEL_173;
                          }
                        }
                      }
LABEL_154:
                      if (v129)
                        goto LABEL_155;
                      goto LABEL_173;
                    }
                  }
                  if (v96)
                    goto LABEL_128;
                  goto LABEL_134;
                }
LABEL_114:
                *(_BYTE *)(a5 + 120) = 0;
                *(_OWORD *)a5 = *(_OWORD *)&callbacks.version;
                sub_20AECEBD0((_BYTE *)(a5 + 16), (__int128 *)&callbacks.skipForward);
                goto LABEL_143;
              }
LABEL_113:
              operator delete((void *)v99);
              if (v110)
                goto LABEL_93;
              goto LABEL_114;
            }
            goto LABEL_112;
          }
          break;
        default:
          sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/ImageIO/src/Apple.cpp", 118, (uint64_t)"", 0, (uint64_t)"should not be reached", 21, (void (*)(void **))sub_20B532360);
          abort();
      }
      if (LODWORD(provider[0]) != a3)
      {
        sub_20B2CDEC0(a3, provider[0], (uint64_t)&v85);
        *(_OWORD *)&callbacks.version = v85;
        LOBYTE(callbacks.skipForward) = 0;
        v109 = 0;
        if (v95)
        {
          v102 = 0;
          v45 = v88;
          if (!(_BYTE)v88)
            goto LABEL_86;
          goto LABEL_85;
        }
LABEL_112:
        v110 = 0;
        if ((SHIBYTE(v100) & 0x80000000) == 0)
          goto LABEL_92;
        goto LABEL_113;
      }
    }
    v110 = 1;
    if ((SHIBYTE(v100) & 0x80000000) == 0)
      goto LABEL_92;
    goto LABEL_113;
  }
  *(_OWORD *)&callbacks.version = v119;
  v42 = sub_20AECEBD0(&callbacks.skipForward, &v120);
  *(_OWORD *)a5 = *(_OWORD *)&callbacks.version;
  *(_BYTE *)(a5 + 16) = 0;
  *(_BYTE *)(a5 + 112) = 0;
  if (v109)
  {
    *(_BYTE *)(a5 + 40) = 0;
    v43 = v102;
    if (v102)
    {
      *(_OWORD *)(a5 + 16) = *(_OWORD *)v42;
      *(_QWORD *)(a5 + 32) = *((_QWORD *)v42 + 2);
      *((_QWORD *)v42 + 1) = 0;
      *((_QWORD *)v42 + 2) = 0;
      *(_QWORD *)v42 = 0;
      *(_BYTE *)(a5 + 40) = 1;
    }
    *(_BYTE *)(a5 + 48) = 0;
    *(_BYTE *)(a5 + 104) = 0;
    if (v108)
    {
      v44 = v105;
      *(_QWORD *)(a5 + 64) = v104;
      *(_OWORD *)(a5 + 48) = *(_OWORD *)v103;
      v103[0] = 0;
      v103[1] = 0;
      *(_QWORD *)(a5 + 72) = v44;
      *(_OWORD *)(a5 + 80) = *(_OWORD *)v106;
      *(_QWORD *)(a5 + 96) = v107;
      v104 = 0;
      v106[0] = 0;
      v106[1] = 0;
      v107 = 0;
      *(_BYTE *)(a5 + 104) = 1;
    }
    *(_BYTE *)(a5 + 112) = 1;
    *(_BYTE *)(a5 + 120) = 0;
    if (!v43 || (SHIBYTE(callbacks.releaseInfo) & 0x80000000) == 0)
      goto LABEL_154;
    operator delete(callbacks.skipForward);
    if (v129)
      goto LABEL_155;
  }
  else
  {
    *(_BYTE *)(a5 + 120) = 0;
    if (v129)
      goto LABEL_155;
  }
LABEL_173:
  if (v128)
  {
    if (v127)
    {
      if (v126 < 0)
        operator delete(v125);
      if (v124 < 0)
        operator delete(v123);
    }
    if (v122)
    {
      if (v121 < 0)
        operator delete((void *)v120);
    }
  }
LABEL_155:
  result = v132;
  if (v132 == v131)
  {
    v72 = 4;
    result = v131;
  }
  else
  {
    if (!v132)
      return result;
    v72 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v72))();
}

void sub_20B2CBD64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *__p;
  char a71;
  char a72;
  uint64_t v72;
  uint64_t v74;

  sub_20AFAB33C((uint64_t)&a25);
  sub_20AECD704((uint64_t)&a47);
  if (a71 < 0)
    operator delete(__p);
  sub_20AEC147C((uint64_t)&a72);
  sub_20AEC147C(v72 - 256);
  sub_20AECD704(v72 - 240);
  v74 = *(_QWORD *)(v72 - 80);
  if (v74 == v72 - 104)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v72 - 104) + 32))(v72 - 104);
    _Unwind_Resume(a1);
  }
  if (!v74)
    _Unwind_Resume(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v74 + 40))(v74);
  _Unwind_Resume(a1);
}

void sub_20B2CBD94(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *__p,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (a49 < 0)
    operator delete(__p);
  JUMPOUT(0x20B2CBE78);
}

void sub_20B2CBDAC()
{
  JUMPOUT(0x20B2CBE88);
}

void sub_20B2CBDB8()
{
  JUMPOUT(0x20B2CBE88);
}

void sub_20B2CBDC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  uint64_t v63;

  sub_20AEC147C((uint64_t)&a25);
  sub_20AEC147C((uint64_t)&a63);
  sub_20AEC147C((uint64_t)&a9);
  sub_20AEC147C((uint64_t)&a41);
  sub_20AEC147C(v63 - 256);
  sub_20AECD704(v63 - 240);
  if (*(_QWORD *)(v63 - 80) == v63 - 104)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v63 - 104) + 32))(v63 - 104);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x20B2CBF08);
}

void sub_20B2CBE1C(void *a1, int a2)
{
  const void *v2;

  if (a2)
  {
    __cxa_begin_catch(a1);
    if (v2)
      CFRelease(v2);
    __cxa_rethrow();
  }
  JUMPOUT(0x20B2CBF0CLL);
}

void sub_20B2CBE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  __cxa_end_catch();
  sub_20AEC147C((uint64_t)&a41);
  JUMPOUT(0x20B2CBE98);
}

void sub_20B2CBED4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_20AECD704(v1 - 240);
  v3 = *(_QWORD *)(v1 - 80);
  if (v3 != v1 - 104)
  {
    if (!v3)
      _Unwind_Resume(a1);
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 40))(v3);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x20B2CBEB8);
}

void sub_20B2CBEF4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 - 80) != v0 - 104)
    JUMPOUT(0x20B2CBF08);
  JUMPOUT(0x20B2CBEB8);
}

void sub_20B2CBF2C(char *info@<X1>, uint64_t a2@<X0>, int a3@<W2>, uint64_t a4@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _BYTE *v9;
  int v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  void *__p;
  char v17;
  unsigned __int8 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  char v25;
  __int128 v26;
  __int128 v27;
  char v28;
  char v29;
  void *v30;
  char v31;
  void *v32;
  char v33;
  char v34;
  char v35;
  char v36;

  sub_20B2D0398(info, a3, (uint64_t)&v26);
  if (!v36)
  {
    v15 = v26;
    v9 = sub_20AECEBD0(&__p, &v27);
    *(_OWORD *)a4 = v15;
    *(_BYTE *)(a4 + 16) = 0;
    *(_BYTE *)(a4 + 112) = 0;
    if (!v25)
    {
      *(_BYTE *)(a4 + 120) = 0;
      if (!v36)
        goto LABEL_24;
      goto LABEL_17;
    }
    *(_BYTE *)(a4 + 40) = 0;
    v10 = v18;
    if (v18)
    {
      *(_OWORD *)(a4 + 16) = *(_OWORD *)v9;
      *(_QWORD *)(a4 + 32) = *((_QWORD *)v9 + 2);
      *((_QWORD *)v9 + 1) = 0;
      *((_QWORD *)v9 + 2) = 0;
      *(_QWORD *)v9 = 0;
      *(_BYTE *)(a4 + 40) = 1;
    }
    *(_BYTE *)(a4 + 48) = 0;
    *(_BYTE *)(a4 + 104) = 0;
    if (v24)
    {
      v11 = v21;
      *(_QWORD *)(a4 + 64) = v20;
      *(_OWORD *)(a4 + 48) = v19;
      v19 = 0uLL;
      *(_QWORD *)(a4 + 72) = v11;
      *(_OWORD *)(a4 + 80) = v22;
      *(_QWORD *)(a4 + 96) = v23;
      v20 = 0;
      v22 = 0uLL;
      v23 = 0;
      *(_BYTE *)(a4 + 104) = 1;
    }
    *(_BYTE *)(a4 + 112) = 1;
    *(_BYTE *)(a4 + 120) = 0;
    if (v10 && v17 < 0)
      operator delete(__p);
LABEL_16:
    if (!v36)
      goto LABEL_24;
    goto LABEL_17;
  }
  sub_20B2CD650(&v15, (const void *)v26, *((std::__shared_weak_count **)&v26 + 1));
  sub_20B2CCB80(a4, a2, (uint64_t)&v15);
  v6 = (std::__shared_weak_count *)*((_QWORD *)&v15 + 1);
  if (!*((_QWORD *)&v15 + 1))
    goto LABEL_16;
  v7 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (v8)
    goto LABEL_16;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  if (!v36)
  {
LABEL_24:
    if (v35)
    {
      if (v34)
      {
        if (v33 < 0)
          operator delete(v32);
        if (v31 < 0)
          operator delete(v30);
      }
      if (v29)
      {
        if (v28 < 0)
          operator delete((void *)v27);
      }
    }
    return;
  }
LABEL_17:
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v26 + 1);
  if (*((_QWORD *)&v26 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v26 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_20B2CC164(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,void *__p,uint64_t a42,int a43,__int16 a44,char a45,char a46,char a47,int a48,__int16 a49,char a50,char a51,int a52,__int16 a53,char a54,char a55)
{
  if (!(_BYTE)a53)
  {
    if ((_BYTE)a49)
    {
      if (a47)
      {
        if (a46 < 0)
          operator delete(__p);
        if (a39 < 0)
          operator delete(a34);
      }
      if (a33)
      {
        if (a32 < 0)
          operator delete(a27);
      }
    }
    _Unwind_Resume(exception_object);
  }
  sub_20AEC147C((uint64_t)&a25);
  _Unwind_Resume(exception_object);
}

void sub_20B2CC1E8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B2CC20C(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_20B2CC22C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP13CGImageSourceEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP13CGImageSourceEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP13CGImageSourceEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP13CGImageSourceEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_20B2CC2A0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B2CC2C4(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_20B2CC2E4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP7CGImageEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP7CGImageEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP7CGImageEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP7CGImageEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_20B2CC354(_QWORD *a1, uint64_t a2)
{
  const void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v4 = *(const void **)a2;
  v5 = *(std::__shared_weak_count **)(a2 + 8);
  v17 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_20B2CC464(&v18, v4);
  v8 = v19;
  *a1 = v18;
  a1[1] = v8;
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    v11 = v19;
    if (v19)
    {
      v12 = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  if (!v17)
    return a1;
  v14 = (unint64_t *)&v17->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
    return a1;
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  return a1;
}

void sub_20B2CC450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AEC147C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2CC464(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_24C4185A8;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_20B2CC4C4(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B2CC4DC(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_20B2CC4F4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B2CC518(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_20B2CC538(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP14CGDataProviderEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP14CGDataProviderEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP14CGDataProviderEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP14CGDataProviderEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_20B2CC5A8(unsigned int a1@<W0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  int v5;
  uint64_t v6;
  void *v7[2];
  char v8;
  char v9;
  void *v10;
  char v11;
  void *v12;
  char v13;
  char v14;
  char v15;
  __int128 v16;
  __int128 __p;
  uint64_t v18;
  unsigned __int8 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  char v26;

  sub_20AECEBD0(v7, a2);
  sub_20B2CC720((uint64_t)&v16, a1, (__int128 *)v7);
  *(_OWORD *)a3 = v16;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (v26)
  {
    *(_BYTE *)(a3 + 40) = 0;
    v5 = v19;
    if (v19)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(_QWORD *)(a3 + 32) = v18;
      v18 = 0;
      __p = 0uLL;
      *(_BYTE *)(a3 + 40) = 1;
    }
    *(_BYTE *)(a3 + 48) = 0;
    *(_BYTE *)(a3 + 104) = 0;
    if (v25)
    {
      v6 = v22;
      *(_QWORD *)(a3 + 64) = v21;
      *(_OWORD *)(a3 + 48) = v20;
      v20 = 0uLL;
      *(_QWORD *)(a3 + 72) = v6;
      *(_OWORD *)(a3 + 80) = v23;
      *(_QWORD *)(a3 + 96) = v24;
      v21 = 0;
      v23 = 0uLL;
      v24 = 0;
      *(_BYTE *)(a3 + 104) = 1;
    }
    *(_BYTE *)(a3 + 112) = 1;
    if (v5 && SHIBYTE(v18) < 0)
      operator delete((void *)__p);
  }
  if (v15)
  {
    if (!v14)
      goto LABEL_13;
    if (v13 < 0)
    {
      operator delete(v12);
      if ((v11 & 0x80000000) == 0)
      {
LABEL_13:
        if (!v9)
          return;
        goto LABEL_14;
      }
    }
    else if ((v11 & 0x80000000) == 0)
    {
      goto LABEL_13;
    }
    operator delete(v10);
    if (!v9)
      return;
LABEL_14:
    if (v8 < 0)
      operator delete(v7[0]);
  }
}

void sub_20B2CC70C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECCDB4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2CC720(uint64_t a1, unsigned int a2, __int128 *a3)
{
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  int v8;
  unsigned int v9;
  __int128 *v10;
  void *__dst[2];
  uint64_t v12;
  char v13;
  void *v14[2];
  uint64_t v15;
  uint64_t v16;
  void *__p[2];
  uint64_t v18;
  char v19;
  char v20;

  v4 = atomic_load((unsigned __int8 *)&qword_25463CF60);
  if ((v4 & 1) == 0)
  {
    v10 = a3;
    v9 = a2;
    v8 = __cxa_guard_acquire(&qword_25463CF60);
    a2 = v9;
    a3 = v10;
    if (v8)
    {
      __cxa_atexit((void (*)(void *))std::error_category::~error_category, &off_253EC31B0, &dword_20AEBB000);
      __cxa_guard_release(&qword_25463CF60);
      a2 = v9;
      a3 = v10;
    }
  }
  v5 = a2;
  sub_20AECEBD0(__dst, a3);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = &off_253EC31B0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (!v20)
    return a1;
  *(_BYTE *)(a1 + 40) = 0;
  if (v13)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)__dst;
    *(_QWORD *)(a1 + 32) = v12;
    __dst[1] = 0;
    v12 = 0;
    __dst[0] = 0;
    *(_BYTE *)(a1 + 40) = 1;
  }
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 104) = 0;
  if (!v19)
  {
    *(_BYTE *)(a1 + 112) = 1;
    if (!v13)
      return a1;
    goto LABEL_14;
  }
  v6 = v16;
  *(_QWORD *)(a1 + 64) = v15;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v14;
  v14[0] = 0;
  v14[1] = 0;
  *(_QWORD *)(a1 + 72) = v6;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)__p;
  *(_QWORD *)(a1 + 96) = v18;
  __p[1] = 0;
  v18 = 0;
  v15 = 0;
  __p[0] = 0;
  *(_BYTE *)(a1 + 104) = 1;
  *(_BYTE *)(a1 + 112) = 1;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v15) & 0x80000000) == 0)
      goto LABEL_8;
LABEL_13:
    operator delete(v14[0]);
    if (!v13)
      return a1;
    goto LABEL_14;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v15) < 0)
    goto LABEL_13;
LABEL_8:
  if (!v13)
    return a1;
LABEL_14:
  if ((SHIBYTE(v12) & 0x80000000) == 0)
    return a1;
  operator delete(__dst[0]);
  return a1;
}

void sub_20B2CC8CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20AEC0BD8(v5);
  v21[0] = v5;
  sub_20AEC01D0((_QWORD *)(v5 + 16), (uint64_t)(&off_24C418798)[2 * *a3], (uint64_t)(&off_24C418798)[2 * *a3 + 1]);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_20AEC0138();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v14 + 128);
    MEMORY[0x20BD3583C](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_20AECFAB8();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24C418500[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_20B2CCB2C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20B2CCB50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B2CCB6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B52CE84((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2CCB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageDestinationRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  int v25;
  __int16 v26;
  int v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  BOOL v37;
  BOOL v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  void *v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  void *v51[2];
  char v52;
  char v53;
  void *v54;
  char v55;
  void *v56;
  char v57;
  char v58;
  char v59;
  CGImageRef image;
  std::__shared_weak_count *v61;
  void *v62[2];
  uint64_t v63;
  void *__dst[2];
  uint64_t v65;
  char v66;
  void *v67;
  char v68;
  void *v69;
  char v70;
  char v71;
  char v72;
  unsigned int v73;
  _QWORD v74[2];
  char v75;
  char v76;
  void *v77;
  char v78;
  void *__p;
  char v80;
  char v81;
  char v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  char v92;
  char v93;
  char v94;
  _QWORD v95[3];
  int v96;
  _QWORD **v97;
  const char *v98;
  _QWORD *v99;
  const char *v100;
  const char *v101;
  _QWORD *v102;

  v7 = *(CGImageDestinationRef *)a3;
  v6 = *(std::__shared_weak_count **)(a3 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (v7)
      goto LABEL_7;
  }
  else
  {
LABEL_6:
    if (v7)
    {
LABEL_7:
      v73 = *(_DWORD *)(a2 + 48);
      v11 = (char *)&v89;
      v12 = v73 - 1;
      if (v73 - 1 <= 0x27 && ((0xF1F1F0000FuLL >> v12) & 1) != 0)
        v11 = (char *)&v83 + 4 * qword_20B5F3780[v12];
      if (v11 - (char *)&v83 == 72)
      {
        v96 = 0;
        sub_20AFAE5CC(v95, "Invalid image format. Format ");
        sub_20AF86710((uint64_t)&v94, (uint64_t)v95, &v73);
        v97 = (_QWORD **)v95;
        v98 = " can't be saved with CoreGraphics.";
        v99 = v95;
        v100 = " can't be saved with CoreGraphics.";
        v101 = " can't be saved with CoreGraphics.";
        if (v96 == -1)
          sub_20AECFAB8();
        v102 = &v97;
        ((void (*)(_QWORD **, _QWORD *))off_24C418530[v96])(&v102, v95);
        if (v96 == -1)
          sub_20AECFAB8();
        v97 = &v102;
        ((void (*)(void **__return_ptr, _QWORD ***, _QWORD *))off_24C418518[v96])(v62, &v97, v95);
        if (v96 != -1)
          ((void (*)(_QWORD ***, _QWORD *))off_24C4184E8[v96])(&v97, v95);
        if (SHIBYTE(v63) < 0)
        {
          sub_20AEC60F4(__dst, v62[0], (unint64_t)v62[1]);
        }
        else
        {
          *(_OWORD *)__dst = *(_OWORD *)v62;
          v65 = v63;
        }
        v66 = 1;
        LOBYTE(v67) = 0;
        v71 = 0;
        v72 = 1;
        sub_20B52280C((uint64_t)__dst, (uint64_t)&v83);
        *(_OWORD *)a1 = v83;
        *(_BYTE *)(a1 + 16) = 0;
        *(_BYTE *)(a1 + 112) = 0;
        if (v93)
        {
          *(_BYTE *)(a1 + 40) = 0;
          v43 = v86;
          if ((_BYTE)v86)
          {
            *(_OWORD *)(a1 + 16) = v84;
            *(_QWORD *)(a1 + 32) = v85;
            v85 = 0;
            v84 = 0uLL;
            *(_BYTE *)(a1 + 40) = 1;
          }
          *(_BYTE *)(a1 + 48) = 0;
          *(_BYTE *)(a1 + 104) = 0;
          if (v92)
          {
            v44 = v89;
            *(_QWORD *)(a1 + 64) = v88;
            *(_OWORD *)(a1 + 48) = v87;
            v87 = 0uLL;
            *(_QWORD *)(a1 + 72) = v44;
            *(_OWORD *)(a1 + 80) = v90;
            *(_QWORD *)(a1 + 96) = v91;
            v88 = 0;
            v90 = 0uLL;
            v91 = 0;
            *(_BYTE *)(a1 + 104) = 1;
          }
          *(_BYTE *)(a1 + 112) = 1;
          *(_BYTE *)(a1 + 120) = 0;
          if (v43 && SHIBYTE(v85) < 0)
            operator delete((void *)v84);
          if (!v72)
          {
LABEL_94:
            if (SHIBYTE(v63) < 0)
            {
              v42 = v62[0];
              goto LABEL_96;
            }
            return;
          }
        }
        else
        {
          *(_BYTE *)(a1 + 120) = 0;
          if (!v72)
            goto LABEL_94;
        }
        if (v71)
        {
          if (v70 < 0)
            operator delete(v69);
          if (v68 < 0)
            operator delete(v67);
        }
        if (v66)
        {
          if (SHIBYTE(v65) < 0)
            operator delete(__dst[0]);
        }
        goto LABEL_94;
      }
      v13 = *(_QWORD *)(a2 + 8);
      if (!v13)
        goto LABEL_44;
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        v15 = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(v15);
        while (__stxr(v16 + 1, v15));
        do
          v17 = __ldaxr(v15);
        while (__stlxr(v17 - 1, v15));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
        v13 = *(_QWORD *)(a2 + 8);
        v18 = *(std::__shared_weak_count **)(a2 + 16);
        if (v18)
        {
          v19 = (unint64_t *)&v18->__shared_owners_;
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
          do
            v21 = __ldaxr(v19);
          while (__stlxr(v21 - 1, v19));
          if (!v21)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
      }
      if (*(_BYTE *)(a2 + 53))
      {
        (*(void (**)(_QWORD *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(v95, v13, 0);
        *(_QWORD *)&v83 = &off_24C3FA3D0;
        v22 = *(_QWORD *)(a2 + 8);
        v23 = *(std::__shared_weak_count **)(a2 + 16);
        if (!v23)
        {
LABEL_32:
          v24 = *(_QWORD *)(a2 + 40);
          v25 = *(_DWORD *)(a2 + 48);
          v26 = *(_WORD *)(a2 + 52);
          goto LABEL_49;
        }
      }
      else
      {
LABEL_44:
        v95[0] = 0;
        *(_QWORD *)&v83 = &off_24C3FA3D0;
        v22 = *(_QWORD *)(a2 + 8);
        v23 = *(std::__shared_weak_count **)(a2 + 16);
        if (!v23)
          goto LABEL_32;
      }
      v29 = (unint64_t *)&v23->__shared_owners_;
      do
        v30 = __ldxr(v29);
      while (__stxr(v30 + 1, v29));
      v24 = *(_QWORD *)(a2 + 40);
      v25 = *(_DWORD *)(a2 + 48);
      v26 = *(_WORD *)(a2 + 52);
      do
        v31 = __ldxr(v29);
      while (__stxr(v31 + 1, v29));
LABEL_49:
      *((_QWORD *)&v83 + 1) = v22;
      *(_QWORD *)&v84 = v23;
      *((_QWORD *)&v84 + 1) = *(_QWORD *)(a2 + 24);
      LODWORD(v85) = *(_DWORD *)(a2 + 32);
      v86 = v24;
      LODWORD(v87) = v25;
      WORD2(v87) = v26;
      if (v23)
      {
        v32 = (unint64_t *)&v23->__shared_owners_;
        do
          v33 = __ldaxr(v32);
        while (__stlxr(v33 - 1, v32));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      sub_20B3EFA10((uint64_t)&v83);
      v34 = (std::__shared_weak_count *)v84;
      if ((_QWORD)v84)
      {
        v35 = (unint64_t *)(v84 + 8);
        do
          v36 = __ldaxr(v35);
        while (__stlxr(v36 - 1, v35));
        if (!v36)
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
      }
      sub_20B2CD4B4(&image, (uint64_t)&v97);
      CGImageDestinationAddImage(*(CGImageDestinationRef *)a3, image, 0);
      v37 = CGImageDestinationFinalize(*(CGImageDestinationRef *)a3);
      v38 = v37;
      v39 = v61;
      if (!v61)
        goto LABEL_63;
      v40 = (unint64_t *)&v61->__shared_owners_;
      do
        v41 = __ldaxr(v40);
      while (__stlxr(v41 - 1, v40));
      if (!v41)
      {
        ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
        std::__shared_weak_count::__release_weak(v39);
        if (v38)
          goto LABEL_64;
      }
      else
      {
LABEL_63:
        if (v37)
        {
LABEL_64:
          *(_BYTE *)(a1 + 120) = 1;
LABEL_116:
          v47 = (std::__shared_weak_count *)v98;
          if (v98)
          {
            v48 = (unint64_t *)(v98 + 8);
            do
              v49 = __ldaxr(v48);
            while (__stlxr(v49 - 1, v48));
            if (!v49)
            {
              ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
              std::__shared_weak_count::__release_weak(v47);
            }
          }
          v50 = v95[0];
          v95[0] = 0;
          if (v50)
            (*(void (**)(uint64_t))(*(_QWORD *)v50 + 8))(v50);
          return;
        }
      }
      sub_20AF55B94((uint64_t)v51, "Failed to save image to destination.");
      v59 = 1;
      sub_20AF558C0(5u, (__int128 *)v51, (uint64_t)&v83);
      *(_OWORD *)a1 = v83;
      *(_BYTE *)(a1 + 16) = 0;
      *(_BYTE *)(a1 + 112) = 0;
      if (v93)
      {
        *(_BYTE *)(a1 + 40) = 0;
        v45 = v86;
        if ((_BYTE)v86)
        {
          *(_OWORD *)(a1 + 16) = v84;
          *(_QWORD *)(a1 + 32) = v85;
          v85 = 0;
          v84 = 0uLL;
          *(_BYTE *)(a1 + 40) = 1;
        }
        *(_BYTE *)(a1 + 48) = 0;
        *(_BYTE *)(a1 + 104) = 0;
        if (v92)
        {
          v46 = v89;
          *(_QWORD *)(a1 + 64) = v88;
          *(_OWORD *)(a1 + 48) = v87;
          v87 = 0uLL;
          *(_QWORD *)(a1 + 72) = v46;
          *(_OWORD *)(a1 + 80) = v90;
          *(_QWORD *)(a1 + 96) = v91;
          v88 = 0;
          v90 = 0uLL;
          v91 = 0;
          *(_BYTE *)(a1 + 104) = 1;
        }
        *(_BYTE *)(a1 + 112) = 1;
        *(_BYTE *)(a1 + 120) = 0;
        if (v45 && SHIBYTE(v85) < 0)
          operator delete((void *)v84);
      }
      else
      {
        *(_BYTE *)(a1 + 120) = 0;
      }
      if (v59)
      {
        if (v58)
        {
          if (v57 < 0)
            operator delete(v56);
          if (v55 < 0)
            operator delete(v54);
        }
        if (v53 && v52 < 0)
          operator delete(v51[0]);
      }
      goto LABEL_116;
    }
  }
  sub_20AF55B94((uint64_t)v74, "Unsupported format");
  v82 = 1;
  sub_20B52280C((uint64_t)v74, (uint64_t)&v83);
  *(_OWORD *)a1 = v83;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (v93)
  {
    *(_BYTE *)(a1 + 40) = 0;
    v27 = v86;
    if ((_BYTE)v86)
    {
      *(_OWORD *)(a1 + 16) = v84;
      *(_QWORD *)(a1 + 32) = v85;
      v85 = 0;
      v84 = 0uLL;
      *(_BYTE *)(a1 + 40) = 1;
    }
    *(_BYTE *)(a1 + 48) = 0;
    *(_BYTE *)(a1 + 104) = 0;
    if (v92)
    {
      v28 = v89;
      *(_QWORD *)(a1 + 64) = v88;
      *(_OWORD *)(a1 + 48) = v87;
      v87 = 0uLL;
      *(_QWORD *)(a1 + 72) = v28;
      *(_OWORD *)(a1 + 80) = v90;
      *(_QWORD *)(a1 + 96) = v91;
      v88 = 0;
      v90 = 0uLL;
      v91 = 0;
      *(_BYTE *)(a1 + 104) = 1;
    }
    *(_BYTE *)(a1 + 112) = 1;
    *(_BYTE *)(a1 + 120) = 0;
    if (v27 && SHIBYTE(v85) < 0)
      operator delete((void *)v84);
    if (!v82)
      return;
  }
  else
  {
    *(_BYTE *)(a1 + 120) = 0;
    if (!v82)
      return;
  }
  if (v81)
  {
    if (v80 < 0)
      operator delete(__p);
    if (v78 < 0)
      operator delete(v77);
  }
  if (v76 && v75 < 0)
  {
    v42 = (void *)v74[0];
LABEL_96:
    operator delete(v42);
  }
}

void sub_20B2CD3B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  if (a29 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B2CD4B4(_QWORD *a1, uint64_t a2)
{
  const void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v4 = *(const void **)a2;
  v5 = *(std::__shared_weak_count **)(a2 + 8);
  v17 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_20B2CD5C4(&v18, v4);
  v8 = v19;
  *a1 = v18;
  a1[1] = v8;
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    v11 = v19;
    if (v19)
    {
      v12 = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  if (!v17)
    return a1;
  v14 = (unint64_t *)&v17->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
    return a1;
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  return a1;
}

void sub_20B2CD5B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AEC147C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2CD5C4(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_24C418558;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_20B2CD624(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B2CD63C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2CD650(_QWORD *a1, const void *a2, std::__shared_weak_count *a3)
{
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v16;
  std::__shared_weak_count *v17;

  if (a3)
  {
    p_shared_owners = (unint64_t *)&a3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_20B2CD754(&v16, a2);
  v6 = v17;
  *a1 = v16;
  a1[1] = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
    v9 = v17;
    if (v17)
    {
      v10 = (unint64_t *)&v17->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  if (!a3)
    return a1;
  v12 = (unint64_t *)&a3->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (v13)
    return a1;
  ((void (*)(std::__shared_weak_count *))a3->__on_zero_shared)(a3);
  std::__shared_weak_count::__release_weak(a3);
  return a1;
}

void sub_20B2CD740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AEC147C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B2CD754(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_24C4185F8;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_20B2CD7B4(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B2CD7CC(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_20B2CD7E4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B2CD808(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_20B2CD828(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP18CGImageDestinationEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP18CGImageDestinationEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP18CGImageDestinationEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP18CGImageDestinationEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

const char *sub_20B2CD89C()
{
  return "ImageIO";
}

uint64_t sub_20B2CD8A8(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  int v7;
  size_t v8;
  void **v9;
  unint64_t v10;
  unint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _BYTE v20[24];
  int v21;
  void *__dst[2];
  unint64_t v23;
  _QWORD v24[5];
  _QWORD *v25;

  v21 = 0;
  v3 = operator new();
  *(_QWORD *)(v3 + 272) = 0;
  *(_OWORD *)(v3 + 240) = 0u;
  *(_OWORD *)(v3 + 256) = 0u;
  *(_OWORD *)(v3 + 208) = 0u;
  *(_OWORD *)(v3 + 224) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_OWORD *)(v3 + 192) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)v3 = 0u;
  sub_20AEC0BD8(v3);
  v24[0] = v3;
  if (a2 > 7)
  {
    v5 = "unknown error code";
    v6 = 18;
  }
  else
  {
    v4 = (int)a2;
    v5 = off_24C418758[v4];
    v6 = *(_QWORD *)((char *)&unk_20B5F38E8 + v4 * 8);
  }
  sub_20AEC01D0((_QWORD *)(v3 + 16), (uint64_t)v5, v6);
  v7 = *(_DWORD *)(v3 + 120);
  if ((v7 & 0x10) != 0)
  {
    v10 = *(_QWORD *)(v3 + 112);
    v11 = *(_QWORD *)(v3 + 72);
    if (v10 < v11)
    {
      *(_QWORD *)(v3 + 112) = v11;
      v10 = v11;
    }
    v12 = *(const void **)(v3 + 64);
    v8 = v10 - (_QWORD)v12;
    if (v10 - (unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_29;
  }
  else
  {
    if ((v7 & 8) == 0)
    {
      v8 = 0;
      HIBYTE(v23) = 0;
      v9 = __dst;
      goto LABEL_17;
    }
    v12 = *(const void **)(v3 + 40);
    v8 = *(_QWORD *)(v3 + 56) - (_QWORD)v12;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
LABEL_29:
      sub_20AEC0138();
  }
  if (v8 >= 0x17)
  {
    v13 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v13 = v8 | 7;
    v14 = v13 + 1;
    v9 = (void **)operator new(v13 + 1);
    __dst[1] = (void *)v8;
    v23 = v14 | 0x8000000000000000;
    __dst[0] = v9;
    goto LABEL_16;
  }
  HIBYTE(v23) = v8;
  v9 = __dst;
  if (v8)
LABEL_16:
    memmove(v9, v12, v8);
LABEL_17:
  *((_BYTE *)v9 + v8) = 0;
  v15 = v24[0];
  if (v24[0])
  {
    v16 = MEMORY[0x24BEDB7F0];
    v17 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v24[0] = *MEMORY[0x24BEDB7F0];
    v18 = *(_QWORD *)(v16 + 72);
    *(_QWORD *)(v15 + *(_QWORD *)(v17 - 24)) = *(_QWORD *)(v16 + 64);
    *(_QWORD *)(v15 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v15 + 16) = v18;
    if (*(char *)(v15 + 111) < 0)
      operator delete(*(void **)(v15 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v15 + 128);
    MEMORY[0x20BD3583C](v15, 0x10B2C40EED050F3);
  }
  v24[0] = v20;
  v24[1] = __dst;
  v24[2] = v20;
  v24[3] = __dst;
  v24[4] = __dst;
  if (v21 == -1)
    sub_20AECFAB8();
  v25 = v24;
  ((void (*)(_QWORD **, _BYTE *))off_24C418698[v21])(&v25, v20);
  if (SHIBYTE(v23) < 0)
    operator delete(__dst[0]);
  if (v21 == -1)
    sub_20AECFAB8();
  v24[0] = __dst;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24C4186C8[v21])(v24, v20);
  if (v21 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24C4186B0[v21])(v24, v20);
  return result;
}

void sub_20B2CDB78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24)
{
  uint64_t v24;

  MEMORY[0x20BD3583C](v24, 0x10B2C40EED050F3);
  if (a12 != -1)
    ((void (*)(char *, uint64_t *))off_24C4186B0[a12])(&a17, &a9);
  _Unwind_Resume(a1);
}

void sub_20B2CDBF8(uint64_t a1, int a2, int a3)
{
  void *v4[2];
  uint64_t v5;
  void *__p[2];
  uint64_t v7;
  char v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  char v13;
  char v14;
  int v15;
  int v16;
  char v17;
  char v18;
  _DWORD v19[6];
  int v20;
  _QWORD **v21;
  const char *v22;
  _DWORD *v23;
  const char *v24;
  const char *v25;
  _QWORD *v26;

  v15 = a3;
  v16 = a2;
  v20 = 0;
  sub_20B012374(v19, "Requested to load ");
  sub_20B2CC8CC((uint64_t)&v18, (uint64_t)v19, &v16);
  v21 = (_QWORD **)v19;
  v22 = " format, but file contains ";
  v23 = v19;
  v24 = " format, but file contains ";
  v25 = " format, but file contains ";
  if (v20 == -1)
    sub_20AECFAB8();
  v26 = &v21;
  ((void (*)(_QWORD **, _DWORD *))off_24C4186E0[v20])(&v26, v19);
  sub_20B2CC8CC((uint64_t)&v17, (uint64_t)v19, &v15);
  v21 = (_QWORD **)v19;
  v22 = " data.";
  v23 = v19;
  v24 = " data.";
  v25 = " data.";
  if (v20 == -1)
    sub_20AECFAB8();
  v26 = &v21;
  ((void (*)(_QWORD **, _DWORD *))off_24C4186F8[v20])(&v26, v19);
  if (v20 == -1)
    sub_20AECFAB8();
  v21 = &v26;
  ((void (*)(void **__return_ptr, _QWORD ***, _DWORD *))off_24C4186C8[v20])(v4, &v21, v19);
  if (v20 != -1)
    ((void (*)(_QWORD ***, _DWORD *))off_24C4186B0[v20])(&v21, v19);
  if (SHIBYTE(v5) < 0)
  {
    sub_20AEC60F4(__p, v4[0], (unint64_t)v4[1]);
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)v4;
    v7 = v5;
  }
  v8 = 1;
  LOBYTE(v9) = 0;
  v13 = 0;
  v14 = 1;
  sub_20B2CC5A8(1u, (__int128 *)__p, a1);
  if (v14)
  {
    if (!v13)
      goto LABEL_13;
    if (v12 < 0)
    {
      operator delete(v11);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_13:
        if (!v8)
          goto LABEL_16;
LABEL_14:
        if (SHIBYTE(v7) < 0)
          operator delete(__p[0]);
        goto LABEL_16;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_13;
    }
    operator delete(v9);
    if (!v8)
      goto LABEL_16;
    goto LABEL_14;
  }
LABEL_16:
  if (SHIBYTE(v5) < 0)
    operator delete(v4[0]);
}

void sub_20B2CDE18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B2CDE48(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20B2CDE5C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20B2CDE70(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20B2CDE84(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20B2CDE98(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20B2CDEAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20B2CDEC0(unsigned int a1@<W0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  void *v4[2];
  uint64_t v5;
  void *__p[2];
  uint64_t v7;
  char v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  char v13;
  char v14;
  unsigned int v15;
  unsigned int v16;

  v15 = a2;
  v16 = a1;
  sub_20B2CE004("Desired image format is ", &v16, (uint64_t)" but file contains ", &v15, (uint64_t)".");
  if (SHIBYTE(v5) < 0)
  {
    sub_20AEC60F4(__p, v4[0], (unint64_t)v4[1]);
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)v4;
    v7 = v5;
  }
  v8 = 1;
  LOBYTE(v9) = 0;
  v13 = 0;
  v14 = 1;
  sub_20B2CC5A8(2u, (__int128 *)__p, a3);
  if (!v14)
    goto LABEL_11;
  if (v13)
  {
    if ((v12 & 0x80000000) == 0)
    {
      if ((v10 & 0x80000000) == 0)
        goto LABEL_8;
LABEL_14:
      operator delete(v9);
      if (!v8)
        goto LABEL_11;
      goto LABEL_9;
    }
    operator delete(v11);
    if (v10 < 0)
      goto LABEL_14;
  }
LABEL_8:
  if (!v8)
    goto LABEL_11;
LABEL_9:
  if (SHIBYTE(v7) < 0)
    operator delete(__p[0]);
LABEL_11:
  if (SHIBYTE(v5) < 0)
    operator delete(v4[0]);
}

void sub_20B2CDFD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B2CE004(char *__s, unsigned int *a2, uint64_t a3, unsigned int *a4, uint64_t a5)
{
  uint64_t result;
  char v10;
  char v11;
  _DWORD v12[6];
  int v13;
  _QWORD **v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v13 = 0;
  sub_20AF75B44(v12, __s);
  sub_20AF86710((uint64_t)&v11, (uint64_t)v12, a2);
  v14 = (_QWORD **)v12;
  v15 = a3;
  v16 = v12;
  v17 = a3;
  v18 = a3;
  if (v13 == -1)
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(_QWORD **, _DWORD *))off_24C418710[v13])(&v19, v12);
  sub_20AF86710((uint64_t)&v10, (uint64_t)v12, a4);
  v14 = (_QWORD **)v12;
  v15 = a5;
  v16 = v12;
  v17 = a5;
  v18 = a5;
  if (v13 == -1)
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(_QWORD **, _DWORD *))off_24C418728[v13])(&v19, v12);
  if (v13 == -1)
    sub_20AECFAB8();
  v14 = &v19;
  result = ((uint64_t (*)(_QWORD ***, _DWORD *))off_24C4186C8[v13])(&v14, v12);
  if (v13 != -1)
    return ((uint64_t (*)(_QWORD ***, _DWORD *))off_24C4186B0[v13])(&v14, v12);
  return result;
}

void sub_20B2CE160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2CE174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2CE188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2CE19C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2CE1B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2CE1C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2CE1D8(unsigned int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  void *v4[2];
  uint64_t v5;
  void *__p[2];
  uint64_t v7;
  char v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  char v13;
  char v14;
  int v15;
  unsigned int v16;

  v15 = a2;
  v16 = a1;
  sub_20B2CE31C("Requested to load format ", &v16, (uint64_t)", but is not supported by ", &v15, (uint64_t)".");
  if (SHIBYTE(v5) < 0)
  {
    sub_20AEC60F4(__p, v4[0], (unint64_t)v4[1]);
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)v4;
    v7 = v5;
  }
  v8 = 1;
  LOBYTE(v9) = 0;
  v13 = 0;
  v14 = 1;
  sub_20B2CC5A8(3u, (__int128 *)__p, a3);
  if (!v14)
    goto LABEL_11;
  if (v13)
  {
    if ((v12 & 0x80000000) == 0)
    {
      if ((v10 & 0x80000000) == 0)
        goto LABEL_8;
LABEL_14:
      operator delete(v9);
      if (!v8)
        goto LABEL_11;
      goto LABEL_9;
    }
    operator delete(v11);
    if (v10 < 0)
      goto LABEL_14;
  }
LABEL_8:
  if (!v8)
    goto LABEL_11;
LABEL_9:
  if (SHIBYTE(v7) < 0)
    operator delete(__p[0]);
LABEL_11:
  if (SHIBYTE(v5) < 0)
    operator delete(v4[0]);
}

void sub_20B2CE2F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B2CE31C(char *__s, unsigned int *a2, uint64_t a3, int *a4, uint64_t a5)
{
  uint64_t result;
  char v10;
  char v11;
  _DWORD v12[6];
  int v13;
  _QWORD **v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v13 = 0;
  sub_20AF60428(v12, __s);
  sub_20AF86710((uint64_t)&v11, (uint64_t)v12, a2);
  v14 = (_QWORD **)v12;
  v15 = a3;
  v16 = v12;
  v17 = a3;
  v18 = a3;
  if (v13 == -1)
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(_QWORD **, _DWORD *))off_24C418740[v13])(&v19, v12);
  sub_20B2CC8CC((uint64_t)&v10, (uint64_t)v12, a4);
  v14 = (_QWORD **)v12;
  v15 = a5;
  v16 = v12;
  v17 = a5;
  v18 = a5;
  if (v13 == -1)
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(_QWORD **, _DWORD *))off_24C418728[v13])(&v19, v12);
  if (v13 == -1)
    sub_20AECFAB8();
  v14 = &v19;
  result = ((uint64_t (*)(_QWORD ***, _DWORD *))off_24C4186C8[v13])(&v14, v12);
  if (v13 != -1)
    return ((uint64_t (*)(_QWORD ***, _DWORD *))off_24C4186B0[v13])(&v14, v12);
  return result;
}

void sub_20B2CE478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2CE48C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2CE4A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2CE4B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2CE4C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2CE4DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2CE4F0(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v4;
  size_t v5;
  void *v6;
  unint64_t v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  void *v18;
  void *v19;
  int64_t v20;
  std::string v21;
  std::string __dst;
  char v23;
  void *v24;
  char v25;
  void *v26;
  char v27;
  char v28;
  char v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  unsigned __int8 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  char v40;
  __int128 v41;
  void *v42[2];
  const char *v43;
  uint64_t v44;
  __int128 v45;
  const void *v46;
  unint64_t v47;
  void *__p[2];
  uint64_t v49;
  char v50;
  char v51;
  unint64_t v52;
  int v53;
  _QWORD v54[20];

  v54[19] = *MEMORY[0x24BDAC8D0];
  if (a2 != 255)
  {
    if (a2 == 137)
    {
      if (a1 == 3 || !a1)
      {
        v4 = 3;
LABEL_16:
        *(_DWORD *)a3 = v4;
        *(_BYTE *)(a3 + 120) = 1;
        return;
      }
      sub_20B2CDBF8((uint64_t)&v41, a1, 3);
      goto LABEL_59;
    }
    if ((a2 & 0xFFFFFFFB) == 0x49)
    {
      if (a1 == 5 || !a1)
      {
        v4 = 5;
        goto LABEL_16;
      }
      sub_20B2CDBF8((uint64_t)&v41, a1, 5);
      goto LABEL_59;
    }
    sub_20AEC0BD8((uint64_t)&v41);
    *(_DWORD *)((char *)&v42[1] + *((_QWORD *)v42[0] - 3)) = *(_DWORD *)((_BYTE *)&v42[1] + *((_QWORD *)v42[0] - 3)) & 0xFFFFFFB5 | 8;
    std::ostream::operator<<();
    if ((v53 & 0x10) != 0)
    {
      v7 = v52;
      if (v52 < v47)
      {
        v52 = v47;
        v7 = v47;
      }
      v8 = v46;
      v5 = v7 - (_QWORD)v46;
      if (v7 - (unint64_t)v46 >= 0x7FFFFFFFFFFFFFF8)
        goto LABEL_70;
    }
    else
    {
      if ((v53 & 8) == 0)
      {
        v5 = 0;
        HIBYTE(v20) = 0;
        v6 = &v18;
        goto LABEL_28;
      }
      v8 = (const void *)v44;
      v5 = *((_QWORD *)&v45 + 1) - v44;
      if ((unint64_t)(*((_QWORD *)&v45 + 1) - v44) >= 0x7FFFFFFFFFFFFFF8)
LABEL_70:
        sub_20AEC0138();
    }
    if (v5 >= 0x17)
    {
      v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17)
        v9 = v5 | 7;
      v10 = v9 + 1;
      v6 = operator new(v9 + 1);
      v19 = (void *)v5;
      v20 = v10 | 0x8000000000000000;
      v18 = v6;
    }
    else
    {
      HIBYTE(v20) = v5;
      v6 = &v18;
      if (!v5)
      {
LABEL_28:
        *((_BYTE *)v6 + v5) = 0;
        *(_QWORD *)&v41 = *MEMORY[0x24BEDB7F0];
        v11 = *(void **)(MEMORY[0x24BEDB7F0] + 72);
        *(void **)((char *)&v42[-2] + *(_QWORD *)(v41 - 24)) = *(void **)(MEMORY[0x24BEDB7F0] + 64);
        v42[0] = v11;
        v42[1] = (void *)(MEMORY[0x24BEDB848] + 16);
        if (v51 < 0)
          operator delete(__p[1]);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x20BD35758](v54);
        *(_QWORD *)&v41 = "Found file format of unsupported format signature byte '0x";
        *((_QWORD *)&v41 + 1) = 58;
        v12 = (void *)HIBYTE(v20);
        v13 = &v18;
        if (v20 < 0)
        {
          v13 = v18;
          v12 = v19;
        }
        v42[0] = v13;
        v42[1] = v12;
        v43 = "'.";
        v44 = 2;
        sub_20AECFDF8((uint64_t)&v41, (uint64_t)&v45, 0, 0, &v21);
        if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
          sub_20AEC60F4(&__dst, v21.__r_.__value_.__l.__data_, v21.__r_.__value_.__l.__size_);
        else
          __dst = v21;
        v23 = 1;
        LOBYTE(v24) = 0;
        v28 = 0;
        v29 = 1;
        sub_20B2CC5A8(1u, (__int128 *)&__dst, (uint64_t)&v30);
        *(_OWORD *)a3 = v30;
        *(_BYTE *)(a3 + 16) = 0;
        *(_BYTE *)(a3 + 112) = 0;
        if (v40)
        {
          *(_BYTE *)(a3 + 40) = 0;
          v14 = v33;
          if (v33)
          {
            *(_OWORD *)(a3 + 16) = v31;
            *(_QWORD *)(a3 + 32) = v32;
            v32 = 0;
            v31 = 0uLL;
            *(_BYTE *)(a3 + 40) = 1;
          }
          *(_BYTE *)(a3 + 48) = 0;
          *(_BYTE *)(a3 + 104) = 0;
          if (v39)
          {
            v15 = v36;
            *(_QWORD *)(a3 + 64) = v35;
            *(_OWORD *)(a3 + 48) = v34;
            v34 = 0uLL;
            *(_QWORD *)(a3 + 72) = v15;
            *(_OWORD *)(a3 + 80) = v37;
            *(_QWORD *)(a3 + 96) = v38;
            v35 = 0;
            v37 = 0uLL;
            v38 = 0;
            *(_BYTE *)(a3 + 104) = 1;
          }
          *(_BYTE *)(a3 + 112) = 1;
          *(_BYTE *)(a3 + 120) = 0;
          if (v14 && SHIBYTE(v32) < 0)
            operator delete((void *)v31);
        }
        else
        {
          *(_BYTE *)(a3 + 120) = 0;
        }
        if (v29)
        {
          if (v28)
          {
            if (v27 < 0)
              operator delete(v26);
            if (v25 < 0)
              operator delete(v24);
          }
          if (v23 && SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__dst.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v21.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v20) & 0x80000000) == 0)
            return;
        }
        else if ((SHIBYTE(v20) & 0x80000000) == 0)
        {
          return;
        }
        operator delete(v18);
        return;
      }
    }
    memmove(v6, v8, v5);
    goto LABEL_28;
  }
  if ((a1 & 0xFFFFFFFB) == 0)
  {
    v4 = 4;
    goto LABEL_16;
  }
  sub_20B2CDBF8((uint64_t)&v41, a1, 4);
LABEL_59:
  *(_OWORD *)a3 = v41;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if ((_BYTE)v52)
  {
    *(_BYTE *)(a3 + 40) = 0;
    v16 = v44;
    if ((_BYTE)v44)
    {
      *(_OWORD *)(a3 + 16) = *(_OWORD *)v42;
      *(_QWORD *)(a3 + 32) = v43;
      v42[1] = 0;
      v43 = 0;
      v42[0] = 0;
      *(_BYTE *)(a3 + 40) = 1;
    }
    *(_BYTE *)(a3 + 48) = 0;
    *(_BYTE *)(a3 + 104) = 0;
    if (v50)
    {
      v17 = v47;
      *(_QWORD *)(a3 + 64) = v46;
      *(_OWORD *)(a3 + 48) = v45;
      v45 = 0uLL;
      *(_QWORD *)(a3 + 72) = v17;
      *(_OWORD *)(a3 + 80) = *(_OWORD *)__p;
      *(_QWORD *)(a3 + 96) = v49;
      v46 = 0;
      __p[0] = 0;
      __p[1] = 0;
      v49 = 0;
      *(_BYTE *)(a3 + 104) = 1;
    }
    *(_BYTE *)(a3 + 112) = 1;
    *(_BYTE *)(a3 + 120) = 0;
    if (v16)
    {
      if (SHIBYTE(v43) < 0)
        operator delete(v42[0]);
    }
  }
  else
  {
    *(_BYTE *)(a3 + 120) = 0;
  }
}

void sub_20B2CEA4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  if (a20 < 0)
    operator delete(__p);
  if (a14 < 0)
  {
    operator delete(a9);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20B2CEAB0(std::error_category *a1)
{
  std::error_category::~error_category(a1);
  JUMPOUT(0x20BD3583CLL);
}

_DWORD *sub_20B2CEAD4(_DWORD ***a1)
{
  return sub_20B07E63C(**a1, (char *)(*a1)[1]);
}

void sub_20B2CEAE0(uint64_t a1, uint64_t a2)
{
  sub_20B2CEAF0((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

void sub_20B2CEAF0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24C4186B0[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_20AEC7620((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_20B2CECA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_20B2CECE8(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_20B2CEDE0((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_20B2CEDD8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_20B2CEDE0(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20AEC60B8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60CC();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_20B2CEFDC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC65A4((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_20B2CEFF0(_DWORD ***a1)
{
  return sub_20B2CF00C(**a1, (char *)(*a1)[1]);
}

void sub_20B2CEFFC(uint64_t a1, uint64_t a2)
{
  sub_20B2CF0FC((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

_DWORD *sub_20B2CF00C(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C4186B0[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_20B2CF0FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24C4186B0[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_20AEC7620((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_20B2CF2B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_20B2CF2F4(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_20B2CF3EC((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_20B2CF3E4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_20B2CF3EC(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20AEC60B8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60CC();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_20B2CF5E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC65A4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2CF5FC(const void *a1, size_t a2)
{
  void **p_dst;
  uint64_t v5;
  uint64_t v6;
  int v7;
  void **v8;
  std::string::size_type v9;
  std::string::value_type v10;
  std::string *v11;
  std::string::size_type size;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint8x8_t v16;
  unint64_t v17;
  uint64_t **v18;
  uint64_t *v19;
  std::string::size_type v20;
  std::string *v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void **v34;
  void *v35;
  void **v37;
  void **__dst;
  size_t v39;
  int64_t v40;
  void *v41[2];
  void *v42[2];
  int v43;
  std::string v44;
  int v45;
  void *v46[2];
  char v47;
  int v48;
  void *v49[2];
  char v50;
  int v51;
  void *v52[2];
  char v53;
  int v54;
  void *v55[2];
  char v56;
  int v57;
  void *v58[2];
  char v59;
  int v60;
  void *__p[2];
  char v62;
  int v63;
  uint64_t v64;

  v64 = *MEMORY[0x24BDAC8D0];
  *((_BYTE *)&v44.__r_.__value_.__s + 23) = 4;
  strcpy((char *)&v44, ".pgm");
  v47 = 4;
  v45 = 1;
  strcpy((char *)v46, ".ppm");
  v50 = 4;
  v48 = 2;
  strcpy((char *)v49, ".jpg");
  v53 = 5;
  v51 = 4;
  strcpy((char *)v52, ".jpeg");
  v56 = 4;
  v54 = 4;
  strcpy((char *)v55, ".png");
  v59 = 5;
  v57 = 3;
  strcpy((char *)v58, ".tiff");
  v62 = 4;
  v60 = 5;
  strcpy((char *)__p, ".tif");
  v63 = 5;
  *(_OWORD *)v41 = 0u;
  *(_OWORD *)v42 = 0u;
  v43 = 1065353216;
  sub_20B2CFD40((uint64_t)v41, (uint64_t)&v44, (uint64_t)&v44);
  sub_20B2CFD40((uint64_t)v41, (uint64_t)v46, (uint64_t)v46);
  sub_20B2CFD40((uint64_t)v41, (uint64_t)v49, (uint64_t)v49);
  sub_20B2CFD40((uint64_t)v41, (uint64_t)v52, (uint64_t)v52);
  sub_20B2CFD40((uint64_t)v41, (uint64_t)v55, (uint64_t)v55);
  sub_20B2CFD40((uint64_t)v41, (uint64_t)v58, (uint64_t)v58);
  sub_20B2CFD40((uint64_t)v41, (uint64_t)__p, (uint64_t)__p);
  if (v62 < 0)
  {
    operator delete(__p[0]);
    if ((v59 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v56 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_36;
    }
  }
  else if ((v59 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(v58[0]);
  if ((v56 & 0x80000000) == 0)
  {
LABEL_4:
    if ((v53 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_37;
  }
LABEL_36:
  operator delete(v55[0]);
  if ((v53 & 0x80000000) == 0)
  {
LABEL_5:
    if ((v50 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_38;
  }
LABEL_37:
  operator delete(v52[0]);
  if ((v50 & 0x80000000) == 0)
  {
LABEL_6:
    if ((v47 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v49[0]);
  if ((v47 & 0x80000000) == 0)
  {
LABEL_7:
    if ((SHIBYTE(v44.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_8;
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v46[0]);
  if ((SHIBYTE(v44.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_8:
    if (a2 < 0x7FFFFFFFFFFFFFF8)
      goto LABEL_9;
LABEL_41:
    sub_20AEC0138();
  }
LABEL_40:
  operator delete(v44.__r_.__value_.__l.__data_);
  if (a2 >= 0x7FFFFFFFFFFFFFF8)
    goto LABEL_41;
LABEL_9:
  if (a2 >= 0x17)
  {
    v5 = (a2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a2 | 7) != 0x17)
      v5 = a2 | 7;
    v6 = v5 + 1;
    p_dst = (void **)operator new(v5 + 1);
    v39 = a2;
    v40 = v6 | 0x8000000000000000;
    __dst = p_dst;
  }
  else
  {
    HIBYTE(v40) = a2;
    p_dst = (void **)&__dst;
    if (!a2)
      goto LABEL_16;
  }
  memmove(p_dst, a1, a2);
LABEL_16:
  *((_BYTE *)p_dst + a2) = 0;
  v7 = SHIBYTE(v40);
  v8 = __dst;
  if (v40 >= 0)
    v9 = HIBYTE(v40);
  else
    v9 = v39;
  memset(&v44, 0, sizeof(v44));
  std::string::reserve(&v44, v9);
  if (v7 >= 0)
    v8 = (void **)&__dst;
  for (; v9; --v9)
  {
    v10 = __tolower(*(unsigned __int8 *)v8);
    std::string::push_back(&v44, v10);
    v8 = (void **)((char *)v8 + 1);
  }
  if (SHIBYTE(v40) < 0)
    operator delete(__dst);
  if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v11 = &v44;
  else
    v11 = (std::string *)v44.__r_.__value_.__r.__words[0];
  if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v44.__r_.__value_.__r.__words[2]);
  else
    size = v44.__r_.__value_.__l.__size_;
  v13 = sub_20AEC7B80((uint64_t)&__dst, (uint64_t *)v11, size);
  v14 = (unint64_t)v41[1];
  if (!v41[1])
    goto LABEL_91;
  v15 = v13;
  v16 = (uint8x8_t)vcnt_s8((int8x8_t)v41[1]);
  v16.i16[0] = vaddlv_u8(v16);
  if (v16.u32[0] > 1uLL)
  {
    v17 = v13;
    if ((void *)v13 >= v41[1])
      v17 = v13 % (unint64_t)v41[1];
  }
  else
  {
    v17 = ((unint64_t)v41[1] - 1) & v13;
  }
  v18 = (uint64_t **)*((_QWORD *)v41[0] + v17);
  if (!v18 || (v19 = *v18) == 0)
  {
LABEL_91:
    v23 = 0;
    v24 = 0;
    v25 = 0;
    if ((SHIBYTE(v44.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_89;
    goto LABEL_92;
  }
  if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v20 = HIBYTE(v44.__r_.__value_.__r.__words[2]);
  else
    v20 = v44.__r_.__value_.__l.__size_;
  if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v21 = &v44;
  else
    v21 = (std::string *)v44.__r_.__value_.__r.__words[0];
  if (v16.u32[0] < 2uLL)
  {
    v22 = (unint64_t)v41[1] - 1;
    while (1)
    {
      v30 = v19[1];
      if (v15 == v30)
      {
        v31 = *((unsigned __int8 *)v19 + 39);
        if ((v31 & 0x80u) == 0)
          v32 = *((unsigned __int8 *)v19 + 39);
        else
          v32 = v19[3];
        if (v32 == v20)
        {
          if ((v31 & 0x80) != 0)
          {
            if (!memcmp((const void *)v19[2], v21, v19[3]))
              goto LABEL_87;
          }
          else
          {
            if (!*((_BYTE *)v19 + 39))
              goto LABEL_87;
            v33 = 0;
            while (*((unsigned __int8 *)v19 + v33 + 16) == v21->__r_.__value_.__s.__data_[v33])
            {
              if (v31 == ++v33)
                goto LABEL_86;
            }
          }
        }
      }
      else if ((v30 & v22) != v17)
      {
        goto LABEL_91;
      }
      v23 = 0;
      v24 = 0;
      v25 = 0;
      v19 = (uint64_t *)*v19;
      if (!v19)
        goto LABEL_88;
    }
  }
  while (1)
  {
    v26 = v19[1];
    if (v15 != v26)
    {
      if (v26 >= v14)
        v26 %= v14;
      if (v26 != v17)
        goto LABEL_91;
      goto LABEL_55;
    }
    v27 = *((unsigned __int8 *)v19 + 39);
    v28 = (v27 & 0x80u) == 0 ? *((unsigned __int8 *)v19 + 39) : v19[3];
    if (v28 == v20)
      break;
LABEL_55:
    v23 = 0;
    v24 = 0;
    v25 = 0;
    v19 = (uint64_t *)*v19;
    if (!v19)
      goto LABEL_88;
  }
  if ((v27 & 0x80) == 0)
  {
    if (!*((_BYTE *)v19 + 39))
      goto LABEL_87;
    v29 = 0;
    while (*((unsigned __int8 *)v19 + v29 + 16) == v21->__r_.__value_.__s.__data_[v29])
    {
      if (v27 == ++v29)
      {
LABEL_86:
        if (!v19)
          goto LABEL_91;
        goto LABEL_87;
      }
    }
    goto LABEL_55;
  }
  if (memcmp((const void *)v19[2], v21, v19[3]))
    goto LABEL_55;
LABEL_87:
  v25 = v19[5] & 0xFFFFFF00;
  v24 = *((_DWORD *)v19 + 10);
  v23 = 0x100000000;
LABEL_88:
  if ((SHIBYTE(v44.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_89:
    v34 = (void **)v42[0];
    if (!v42[0])
      goto LABEL_93;
    goto LABEL_97;
  }
LABEL_92:
  operator delete(v44.__r_.__value_.__l.__data_);
  v34 = (void **)v42[0];
  if (!v42[0])
    goto LABEL_93;
  do
  {
LABEL_97:
    v37 = (void **)*v34;
    if (*((char *)v34 + 39) < 0)
      operator delete(v34[2]);
    operator delete(v34);
    v34 = v37;
  }
  while (v37);
LABEL_93:
  v35 = v41[0];
  v41[0] = 0;
  if (v35)
    operator delete(v35);
  return v23 | v25 | v24;
}

void sub_20B2CFB90(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2CFCD8(uint64_t a1)
{
  void **v2;
  void *v3;
  void **v5;

  v2 = *(void ***)(a1 + 16);
  if (v2)
  {
    do
    {
      v5 = (void **)*v2;
      if (*((char *)v2 + 39) < 0)
        operator delete(v2[2]);
      operator delete(v2);
      v2 = v5;
    }
    while (v5);
  }
  v3 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v3)
    operator delete(v3);
  return a1;
}

void sub_20B2CFD40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  _BYTE *v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  uint64_t **v13;
  uint64_t *v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const void **v20;
  unsigned __int8 *j;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const void **v25;
  unsigned __int8 *i;
  _QWORD *v27;
  char *v28;
  _BYTE *v29;
  float v30;
  float v31;
  _QWORD *v32;
  _QWORD *v33;
  _BOOL8 v34;
  unint64_t v35;
  unint64_t v36;
  size_t prime;
  void *v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  size_t v42;
  size_t v43;
  size_t v44;
  _QWORD *k;
  size_t v46;
  uint64_t v47;
  unint64_t v48;
  uint8x8_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  size_t v53;
  uint64_t v54;
  void *v55;
  unint64_t v56;
  _QWORD v57[2];
  char v58;

  v5 = (_BYTE *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v8 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v8 = v7;
  }
  v9 = sub_20AEC7B80((uint64_t)v57, (uint64_t *)a2, v8);
  v10 = v9;
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      v3 = v9;
      if (v9 >= v11)
        v3 = v9 % v11;
    }
    else
    {
      v3 = (v11 - 1) & v9;
    }
    v13 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v3);
    if (v13)
    {
      v14 = *v13;
      if (*v13)
      {
        v15 = v5[23];
        if (v15 >= 0)
          v16 = v5[23];
        else
          v16 = *((_QWORD *)v5 + 1);
        if (v15 < 0)
          v5 = *(_BYTE **)v5;
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            v22 = v14[1];
            if (v22 == v10)
            {
              v23 = *((unsigned __int8 *)v14 + 39);
              if ((v23 & 0x80u) == 0)
                v24 = *((unsigned __int8 *)v14 + 39);
              else
                v24 = v14[3];
              if (v24 == v16)
              {
                v25 = (const void **)(v14 + 2);
                if ((v23 & 0x80) != 0)
                {
                  if (!memcmp(*v25, v5, v14[3]))
                    return;
                }
                else
                {
                  if (!*((_BYTE *)v14 + 39))
                    return;
                  for (i = v5; *(unsigned __int8 *)v25 == *i; ++i)
                  {
                    v25 = (const void **)((char *)v25 + 1);
                    if (!--v23)
                      return;
                  }
                }
              }
            }
            else if ((v22 & (v11 - 1)) != v3)
            {
              goto LABEL_51;
            }
            v14 = (uint64_t *)*v14;
            if (!v14)
              goto LABEL_51;
          }
        }
        do
        {
          v17 = v14[1];
          if (v17 == v10)
          {
            v18 = *((unsigned __int8 *)v14 + 39);
            if ((v18 & 0x80u) == 0)
              v19 = *((unsigned __int8 *)v14 + 39);
            else
              v19 = v14[3];
            if (v19 == v16)
            {
              v20 = (const void **)(v14 + 2);
              if ((v18 & 0x80) != 0)
              {
                if (!memcmp(*v20, v5, v14[3]))
                  return;
              }
              else
              {
                if (!*((_BYTE *)v14 + 39))
                  return;
                for (j = v5; *(unsigned __int8 *)v20 == *j; ++j)
                {
                  v20 = (const void **)((char *)v20 + 1);
                  if (!--v18)
                    return;
                }
              }
            }
          }
          else
          {
            if (v17 >= v11)
              v17 %= v11;
            if (v17 != v3)
              break;
          }
          v14 = (uint64_t *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_51:
  v27 = (_QWORD *)(a1 + 16);
  v28 = (char *)operator new(0x30uLL);
  v57[0] = v28;
  v57[1] = a1 + 16;
  v58 = 0;
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = v10;
  v29 = v28 + 16;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_20AEC60F4(v29, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)v29 = *(_OWORD *)a3;
    *((_QWORD *)v28 + 4) = *(_QWORD *)(a3 + 16);
  }
  *((_DWORD *)v28 + 10) = *(_DWORD *)(a3 + 24);
  v58 = 1;
  v30 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v31 = *(float *)(a1 + 32);
  if (!v11 || (float)(v31 * (float)v11) < v30)
  {
    v34 = 1;
    if (v11 >= 3)
      v34 = (v11 & (v11 - 1)) != 0;
    v35 = v34 | (2 * v11);
    v36 = vcvtps_u32_f32(v30 / v31);
    if (v35 <= v36)
      prime = v36;
    else
      prime = v35;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v11 = *(_QWORD *)(a1 + 8);
    if (prime > v11)
    {
LABEL_68:
      if (prime >> 61)
        sub_20AEC60CC();
      v38 = operator new(8 * prime);
      v39 = *(void **)a1;
      *(_QWORD *)a1 = v38;
      if (v39)
        operator delete(v39);
      v40 = 0;
      *(_QWORD *)(a1 + 8) = prime;
      do
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v40++) = 0;
      while (prime != v40);
      v41 = (_QWORD *)*v27;
      if (!*v27)
        goto LABEL_100;
      v42 = v41[1];
      v43 = prime - 1;
      if ((prime & (prime - 1)) == 0)
      {
        v44 = v42 & v43;
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v44) = v27;
        for (k = (_QWORD *)*v41; *v41; k = (_QWORD *)*v41)
        {
          v46 = k[1] & v43;
          if (v46 == v44)
          {
            v41 = k;
          }
          else if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v46))
          {
            *v41 = *k;
            v47 = 8 * v46;
            *k = **(_QWORD **)(*(_QWORD *)a1 + v47);
            **(_QWORD **)(*(_QWORD *)a1 + v47) = k;
          }
          else
          {
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v46) = v41;
            v41 = k;
            v44 = v46;
          }
        }
        goto LABEL_100;
      }
      if (v42 >= prime)
        v42 %= prime;
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v42) = v27;
      v51 = (_QWORD *)*v41;
      if (!*v41)
      {
LABEL_100:
        v11 = prime;
        v54 = prime - 1;
        if ((prime & (prime - 1)) != 0)
          goto LABEL_101;
        goto LABEL_116;
      }
      while (1)
      {
        v53 = v51[1];
        if (v53 >= prime)
          v53 %= prime;
        if (v53 == v42)
          goto LABEL_94;
        if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v53))
        {
          *v41 = *v51;
          v52 = 8 * v53;
          *v51 = **(_QWORD **)(*(_QWORD *)a1 + v52);
          **(_QWORD **)(*(_QWORD *)a1 + v52) = v51;
          v51 = v41;
LABEL_94:
          v41 = v51;
          v51 = (_QWORD *)*v51;
          if (!v51)
            goto LABEL_100;
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v53) = v41;
          v41 = v51;
          v51 = (_QWORD *)*v51;
          v42 = v53;
          if (!v51)
            goto LABEL_100;
        }
      }
    }
    if (prime < v11)
    {
      v48 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v11 < 3 || (v49 = (uint8x8_t)vcnt_s8((int8x8_t)v11), v49.i16[0] = vaddlv_u8(v49), v49.u32[0] > 1uLL))
      {
        v48 = std::__next_prime(v48);
      }
      else
      {
        v50 = 1 << -(char)__clz(v48 - 1);
        if (v48 >= 2)
          v48 = v50;
      }
      if (prime <= v48)
        prime = v48;
      if (prime < v11)
      {
        if (!prime)
        {
          v55 = *(void **)a1;
          *(_QWORD *)a1 = 0;
          if (v55)
            operator delete(v55);
          v11 = 0;
          *(_QWORD *)(a1 + 8) = 0;
          v54 = -1;
          goto LABEL_116;
        }
        goto LABEL_68;
      }
      v11 = *(_QWORD *)(a1 + 8);
    }
    v54 = v11 - 1;
    if ((v11 & (v11 - 1)) != 0)
    {
LABEL_101:
      if (v10 >= v11)
      {
        v3 = v10 % v11;
        v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v10 % v11));
        v33 = (_QWORD *)v57[0];
        if (v32)
          goto LABEL_57;
      }
      else
      {
        v3 = v10;
        v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v10);
        v33 = (_QWORD *)v57[0];
        if (v32)
          goto LABEL_57;
      }
LABEL_117:
      *v33 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v57[0];
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = v27;
      if (*(_QWORD *)v57[0])
      {
        v56 = *(_QWORD *)(*(_QWORD *)v57[0] + 8);
        if ((v11 & (v11 - 1)) != 0)
        {
          if (v56 >= v11)
            v56 %= v11;
        }
        else
        {
          v56 &= v11 - 1;
        }
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v56) = v57[0];
      }
      goto LABEL_123;
    }
LABEL_116:
    v3 = v54 & v10;
    v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v54 & v10));
    v33 = (_QWORD *)v57[0];
    if (v32)
      goto LABEL_57;
    goto LABEL_117;
  }
  v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  v33 = (_QWORD *)v57[0];
  if (!v32)
    goto LABEL_117;
LABEL_57:
  *v33 = *v32;
  *v32 = v57[0];
LABEL_123:
  ++*(_QWORD *)(a1 + 24);
}

void sub_20B2D0320(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B2D034C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B2D0334(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B2D034C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_20B2D034C(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((_BYTE *)a1 + 16) && *(char *)(v2 + 39) < 0)
      operator delete(*(void **)(v2 + 16));
    operator delete((void *)v2);
  }
  return a1;
}

void sub_20B2D0398(char *info@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  std::__shared_weak_count_vtbl *v5;
  CGImageDestinationRef v6;
  std::__shared_weak_count *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  void *v20[2];
  uint64_t v21;
  void *__dst[2];
  uint64_t v23;
  char v24;
  void *v25;
  char v26;
  void *v27;
  char v28;
  char v29;
  char v30;
  CGDataConsumerCallbacks cbks;
  __int128 __p;
  uint64_t v33;
  unsigned __int8 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  char v41;
  CFStringRef v42;
  std::__shared_weak_count *v43;
  char v44;
  std::__shared_weak_count_vtbl *v45;
  std::__shared_weak_count *v46;
  int v47;
  _DWORD v48[6];
  int v49;
  char v50;
  char *v51;

  v47 = a2;
  if (*(_DWORD *)&info[*(_QWORD *)(*(_QWORD *)info - 24) + 32]
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/ImageIO/src/ImageDestinationRef.cpp", 71, (uint64_t)"file.good()", 11, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  cbks = (CGDataConsumerCallbacks)xmmword_24C41A618;
  v5 = (std::__shared_weak_count_vtbl *)CGDataConsumerCreate(info, &cbks);
  sub_20B3EDFD4(&v45, v5, 0);
  sub_20B2D0804((uint64_t)&v42, v47);
  if (v44)
  {
    v6 = CGImageDestinationCreateWithDataConsumer((CGDataConsumerRef)v45, v42, 1uLL, 0);
    v7 = (std::__shared_weak_count *)operator new();
    v8 = v7;
    v7->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24C4185F8;
    v7->__shared_weak_owners_ = 0;
    v7[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v8);
    }
    *(_QWORD *)a3 = v6;
    *(_QWORD *)(a3 + 8) = v8;
    *(_BYTE *)(a3 + 120) = 1;
    v12 = v43;
    if (v43)
    {
      v13 = (unint64_t *)&v43->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    goto LABEL_41;
  }
  v49 = 0;
  sub_20B003710(v48, "ImageDestinationRef does not (yet) support format ");
  sub_20B2CC8CC((uint64_t)&v51, (uint64_t)v48, &v47);
  if (v49 == -1)
    sub_20AECFAB8();
  v51 = &v50;
  ((void (*)(void **__return_ptr, char **, _DWORD *))off_24C418810[v49])(v20, &v51, v48);
  if (v49 != -1)
    ((void (*)(char **, _DWORD *))off_24C4187F8[v49])(&v51, v48);
  if (SHIBYTE(v21) < 0)
  {
    sub_20AEC60F4(__dst, v20[0], (unint64_t)v20[1]);
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)v20;
    v23 = v21;
  }
  v24 = 1;
  LOBYTE(v25) = 0;
  v29 = 0;
  v30 = 1;
  sub_20B522940((uint64_t)__dst, (uint64_t)&cbks);
  *(CGDataConsumerCallbacks *)a3 = cbks;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (v41)
  {
    *(_BYTE *)(a3 + 40) = 0;
    v15 = v34;
    if (v34)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(_QWORD *)(a3 + 32) = v33;
      v33 = 0;
      __p = 0uLL;
      *(_BYTE *)(a3 + 40) = 1;
    }
    *(_BYTE *)(a3 + 48) = 0;
    *(_BYTE *)(a3 + 104) = 0;
    if (v40)
    {
      v16 = v37;
      *(_QWORD *)(a3 + 64) = v36;
      *(_OWORD *)(a3 + 48) = v35;
      v35 = 0uLL;
      *(_QWORD *)(a3 + 72) = v16;
      *(_OWORD *)(a3 + 80) = v38;
      *(_QWORD *)(a3 + 96) = v39;
      v36 = 0;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(a3 + 104) = 1;
    }
    *(_BYTE *)(a3 + 112) = 1;
    *(_BYTE *)(a3 + 120) = 0;
    if (v15 && SHIBYTE(v33) < 0)
      operator delete((void *)__p);
    if (!v30)
      goto LABEL_39;
    goto LABEL_31;
  }
  *(_BYTE *)(a3 + 120) = 0;
  if (v30)
  {
LABEL_31:
    if (v29)
    {
      if (v28 < 0)
        operator delete(v27);
      if (v26 < 0)
        operator delete(v25);
    }
    if (v24 && SHIBYTE(v23) < 0)
      operator delete(__dst[0]);
  }
LABEL_39:
  if (SHIBYTE(v21) < 0)
    operator delete(v20[0]);
LABEL_41:
  v17 = v46;
  if (v46)
  {
    v18 = (unint64_t *)&v46->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
}

void sub_20B2D0764(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  __break(1u);
}

void sub_20B2D07B4()
{
  __cxa_end_catch();
  JUMPOUT(0x20B2D07D8);
}

void sub_20B2D07C4()
{
  JUMPOUT(0x20B2D07D8);
}

void sub_20B2D07F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1 - 104);
  _Unwind_Resume(a1);
}

void sub_20B2D0804(uint64_t a1, int a2)
{
  std::__shared_weak_count *v3;
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  switch(a2)
  {
    case 5:
      v3 = (std::__shared_weak_count *)operator new();
      v3->__shared_owners_ = 0;
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      v3->__vftable = (std::__shared_weak_count_vtbl *)&off_24C418888;
      v3->__shared_weak_owners_ = 0;
      v3[1].__vftable = (std::__shared_weak_count_vtbl *)CFSTR("public.tiff");
      *(_QWORD *)a1 = CFSTR("public.tiff");
      *(_QWORD *)(a1 + 8) = v3;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      *(_BYTE *)(a1 + 16) = 1;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      break;
    case 4:
      v3 = (std::__shared_weak_count *)operator new();
      v3->__shared_owners_ = 0;
      v7 = (unint64_t *)&v3->__shared_owners_;
      v3->__vftable = (std::__shared_weak_count_vtbl *)&off_24C418888;
      v3->__shared_weak_owners_ = 0;
      v3[1].__vftable = (std::__shared_weak_count_vtbl *)CFSTR("public.jpeg");
      *(_QWORD *)a1 = CFSTR("public.jpeg");
      *(_QWORD *)(a1 + 8) = v3;
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 1, v7));
      *(_BYTE *)(a1 + 16) = 1;
      do
        v6 = __ldaxr(v7);
      while (__stlxr(v6 - 1, v7));
      break;
    case 3:
      v3 = (std::__shared_weak_count *)operator new();
      v3->__shared_owners_ = 0;
      v4 = (unint64_t *)&v3->__shared_owners_;
      v3->__vftable = (std::__shared_weak_count_vtbl *)&off_24C418888;
      v3->__shared_weak_owners_ = 0;
      v3[1].__vftable = (std::__shared_weak_count_vtbl *)CFSTR("public.png");
      *(_QWORD *)a1 = CFSTR("public.png");
      *(_QWORD *)(a1 + 8) = v3;
      do
        v5 = __ldxr(v4);
      while (__stxr(v5 + 1, v4));
      *(_BYTE *)(a1 + 16) = 1;
      do
        v6 = __ldaxr(v4);
      while (__stlxr(v6 - 1, v4));
      break;
    default:
      *(_BYTE *)a1 = 0;
      *(_BYTE *)(a1 + 16) = 0;
      return;
  }
  if (!v6)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_20B2D09B0(void *a1)
{
  __cxa_begin_catch(a1);
  CFRelease(CFSTR("public.png"));
  __cxa_rethrow();
}

void sub_20B2D09C4()
{
  __break(1u);
}

void sub_20B2D0A18()
{
  __cxa_end_catch();
  JUMPOUT(0x20B2D0A20);
}

std::__shared_weak_count_vtbl **sub_20B2D0A2C(std::__shared_weak_count_vtbl **a1, std::__shared_weak_count_vtbl *cf, int a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  if (a3)
  {
    sub_20B2D0BEC(&v12, cf);
    v5 = v13;
    *a1 = v12;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
    if (!v5)
      return a1;
  }
  else
  {
    v12 = cf;
    v5 = (std::__shared_weak_count *)operator new();
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_24C418838;
    v5->__shared_owners_ = 0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = cf;
    v13 = v5;
    *a1 = cf;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  v9 = v13;
  if (!v13)
    return a1;
  v10 = (unint64_t *)&v13->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_20B2D0B08(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B2D0B20(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_20B2D0B38(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B2D0B5C(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_20B2D0B7C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIPK10__CFStringEC1ES5_EUlS5_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIPK10__CFStringEC1ES5_EUlS5_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIPK10__CFStringEC1ES5_EUlS5_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIPK10__CFStringEC1ES5_EUlS5_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_20B2D0BEC(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_24C418838;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_20B2D0C4C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B2D0C64(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_20B2D0C7C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B2D0CA0(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_20B2D0CC0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIPK7__CFURLEC1ES5_EUlS5_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIPK7__CFURLEC1ES5_EUlS5_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIPK7__CFURLEC1ES5_EUlS5_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIPK7__CFURLEC1ES5_EUlS5_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_20B2D0D30(_QWORD *a1@<X0>, unsigned int a2@<W1>, _QWORD *a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  void *size;
  void *v19;
  int v20;
  _QWORD *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  __int128 *v27;
  uint64_t v28;
  __int128 *v29;
  uint64_t v30;
  std::string v31;
  std::string v32;
  _DWORD v33[2];
  void *__dst[2];
  _BYTE v35[7];
  char v36;
  char v37;
  void *v38;
  char v39;
  void *v40;
  char v41;
  char v42;
  char v43;
  int v44;
  _BYTE v45[24];
  int v46;
  char v47;
  char *v48;
  __int128 v49;
  __int128 __p;
  uint64_t v51;
  unsigned __int8 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  char v58;
  char v59;
  _QWORD v60[3];
  _QWORD *v61;
  _QWORD v62[3];
  _QWORD *v63;
  _QWORD v64[3];
  _QWORD *v65;
  _BYTE v66[24];
  _BYTE *v67;
  uint64_t v68;

  v68 = *MEMORY[0x24BDAC8D0];
  v44 = a4;
  switch(a4)
  {
    case 1:
    case 2:
      v8 = (_QWORD *)a1[3];
      if (v8)
      {
        if (v8 == a1)
        {
          v67 = v66;
          (*(void (**)(_QWORD *, _BYTE *))(*a1 + 24))(a1, v66);
        }
        else
        {
          v67 = (_BYTE *)(*(uint64_t (**)(_QWORD))(*v8 + 16))(a1[3]);
        }
      }
      else
      {
        v67 = 0;
      }
      sub_20B2D2068((uint64_t)v66, a3, a2, a5);
      v21 = v67;
      if (v67 != v66)
        goto LABEL_87;
      v22 = 4;
      v21 = v66;
      goto LABEL_89;
    case 3:
      v11 = (_QWORD *)a1[3];
      if (v11)
      {
        if (v11 != a1)
        {
          v12 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*v11 + 16))(a1[3]);
          v65 = v12;
          if (!v12)
            goto LABEL_69;
LABEL_67:
          if (v12 != v64)
          {
            v12 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v12 + 16))(v12);
            goto LABEL_69;
          }
          *((_QWORD *)&__p + 1) = &v49;
          (*(void (**)(_QWORD *, __int128 *))(v64[0] + 24))(v64, &v49);
LABEL_70:
          sub_20B2CB174(&v49, a3, a2, 3, a5);
          v27 = (__int128 *)*((_QWORD *)&__p + 1);
          if (*((__int128 **)&__p + 1) == &v49)
          {
            v28 = 4;
            v27 = &v49;
          }
          else
          {
            if (!*((_QWORD *)&__p + 1))
              goto LABEL_75;
            v28 = 5;
          }
          (*(void (**)(void))(*(_QWORD *)v27 + 8 * v28))();
LABEL_75:
          v21 = v65;
          if (v65 == v64)
          {
            v22 = 4;
            v21 = v64;
            goto LABEL_89;
          }
          goto LABEL_87;
        }
        v65 = v64;
        (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v64);
        v12 = v65;
        if (v65)
          goto LABEL_67;
      }
      else
      {
        v12 = 0;
        v65 = 0;
      }
LABEL_69:
      *((_QWORD *)&__p + 1) = v12;
      goto LABEL_70;
    case 4:
      v13 = (_QWORD *)a1[3];
      if (v13)
      {
        if (v13 != a1)
        {
          v14 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*v13 + 16))(a1[3]);
          v63 = v14;
          if (!v14)
            goto LABEL_80;
LABEL_78:
          if (v14 != v62)
          {
            v14 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v14 + 16))(v14);
            goto LABEL_80;
          }
          *((_QWORD *)&__p + 1) = &v49;
          (*(void (**)(_QWORD *, __int128 *))(v62[0] + 24))(v62, &v49);
LABEL_81:
          sub_20B2CB174(&v49, a3, a2, 4, a5);
          v29 = (__int128 *)*((_QWORD *)&__p + 1);
          if (*((__int128 **)&__p + 1) == &v49)
          {
            v30 = 4;
            v29 = &v49;
          }
          else
          {
            if (!*((_QWORD *)&__p + 1))
              goto LABEL_86;
            v30 = 5;
          }
          (*(void (**)(void))(*(_QWORD *)v29 + 8 * v30))();
LABEL_86:
          v21 = v63;
          if (v63 == v62)
          {
            v22 = 4;
            v21 = v62;
            goto LABEL_89;
          }
          goto LABEL_87;
        }
        v63 = v62;
        (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v62);
        v14 = v63;
        if (v63)
          goto LABEL_78;
      }
      else
      {
        v14 = 0;
        v63 = 0;
      }
LABEL_80:
      *((_QWORD *)&__p + 1) = v14;
      goto LABEL_81;
    case 5:
      v9 = (_QWORD *)a1[3];
      if (v9)
      {
        if (v9 != a1)
        {
          v10 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*v9 + 16))(a1[3]);
          v61 = v10;
          if (!v10)
            goto LABEL_58;
LABEL_56:
          if (v10 != v60)
          {
            v10 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v10 + 16))(v10);
            goto LABEL_58;
          }
          *((_QWORD *)&__p + 1) = &v49;
          (*(void (**)(_QWORD *, __int128 *))(v60[0] + 24))(v60, &v49);
LABEL_59:
          sub_20B2CB174(&v49, a3, a2, 5, a5);
          v25 = (__int128 *)*((_QWORD *)&__p + 1);
          if (*((__int128 **)&__p + 1) == &v49)
          {
            v26 = 4;
            v25 = &v49;
          }
          else
          {
            if (!*((_QWORD *)&__p + 1))
              goto LABEL_64;
            v26 = 5;
          }
          (*(void (**)(void))(*(_QWORD *)v25 + 8 * v26))();
LABEL_64:
          v21 = v61;
          if (v61 == v60)
          {
            v22 = 4;
            v21 = v60;
LABEL_89:
            (*(void (**)(void))(*v21 + 8 * v22))();
            return;
          }
LABEL_87:
          if (!v21)
            return;
          v22 = 5;
          goto LABEL_89;
        }
        v61 = v60;
        (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v60);
        v10 = v61;
        if (v61)
          goto LABEL_56;
      }
      else
      {
        v10 = 0;
        v61 = 0;
      }
LABEL_58:
      *((_QWORD *)&__p + 1) = v10;
      goto LABEL_59;
    default:
      v46 = 0;
      sub_20B2CC8CC((uint64_t)&v48, (uint64_t)v45, &v44);
      if (v46 == -1)
        sub_20AECFAB8();
      v48 = &v47;
      ((void (*)(std::string *__return_ptr, char **, _BYTE *))off_24C4188E0[v46])(&v31, &v48, v45);
      if (v46 != -1)
        ((void (*)(char **, _BYTE *))off_24C4188C8[v46])(&v48, v45);
      v15 = std::string::insert(&v31, 0, "No known method to load file of ", 0x20uLL);
      v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
      v32.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v16;
      v15->__r_.__value_.__l.__size_ = 0;
      v15->__r_.__value_.__r.__words[2] = 0;
      v15->__r_.__value_.__r.__words[0] = 0;
      v17 = std::string::append(&v32, " format.", 8uLL);
      v19 = (void *)v17->__r_.__value_.__r.__words[0];
      size = (void *)v17->__r_.__value_.__l.__size_;
      v33[0] = v17->__r_.__value_.__r.__words[2];
      *(_DWORD *)((char *)v33 + 3) = *(_DWORD *)((char *)&v17->__r_.__value_.__r.__words[2] + 3);
      v20 = SHIBYTE(v17->__r_.__value_.__r.__words[2]);
      v17->__r_.__value_.__l.__size_ = 0;
      v17->__r_.__value_.__r.__words[2] = 0;
      v17->__r_.__value_.__r.__words[0] = 0;
      if (v20 < 0)
      {
        sub_20AEC60F4(__dst, v19, (unint64_t)size);
      }
      else
      {
        __dst[0] = v19;
        __dst[1] = size;
        *(_DWORD *)v35 = v33[0];
        *(_DWORD *)&v35[3] = *(_DWORD *)((char *)v33 + 3);
        v36 = v20;
      }
      v37 = 1;
      LOBYTE(v38) = 0;
      v42 = 0;
      v43 = 1;
      sub_20B522940((uint64_t)__dst, (uint64_t)&v49);
      *(_OWORD *)a5 = v49;
      *(_BYTE *)(a5 + 16) = 0;
      *(_BYTE *)(a5 + 112) = 0;
      if (v59)
      {
        *(_BYTE *)(a5 + 40) = 0;
        v23 = v52;
        if (v52)
        {
          *(_OWORD *)(a5 + 16) = __p;
          *(_QWORD *)(a5 + 32) = v51;
          v51 = 0;
          __p = 0uLL;
          *(_BYTE *)(a5 + 40) = 1;
        }
        *(_BYTE *)(a5 + 48) = 0;
        *(_BYTE *)(a5 + 104) = 0;
        if (v58)
        {
          v24 = v55;
          *(_QWORD *)(a5 + 64) = v54;
          *(_OWORD *)(a5 + 48) = v53;
          v53 = 0uLL;
          *(_QWORD *)(a5 + 72) = v24;
          *(_OWORD *)(a5 + 80) = v56;
          *(_QWORD *)(a5 + 96) = v57;
          v54 = 0;
          v56 = 0uLL;
          v57 = 0;
          *(_BYTE *)(a5 + 104) = 1;
        }
        *(_BYTE *)(a5 + 112) = 1;
        *(_BYTE *)(a5 + 120) = 0;
        if (v23 && SHIBYTE(v51) < 0)
          operator delete((void *)__p);
      }
      else
      {
        *(_BYTE *)(a5 + 120) = 0;
      }
      if (v43)
      {
        if (v42)
        {
          if (v41 < 0)
            operator delete(v40);
          if (v39 < 0)
            operator delete(v38);
        }
        if (v37 && v36 < 0)
          operator delete(__dst[0]);
      }
      if (v20 < 0)
      {
        operator delete(v19);
        if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_50:
          if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            return;
          goto LABEL_54;
        }
      }
      else if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_50;
      }
      operator delete(v32.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        return;
LABEL_54:
      operator delete(v31.__r_.__value_.__l.__data_);
      return;
  }
}

void sub_20B2D13B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  void *v46;

  operator delete(v46);
  if (a21 < 0)
  {
    operator delete(__p);
    if (a15 < 0)
    {
LABEL_5:
      operator delete(a10);
      _Unwind_Resume(a1);
    }
  }
  else if (a15 < 0)
  {
    goto LABEL_5;
  }
  _Unwind_Resume(a1);
}

uint64_t sub_20B2D15EC(char *__s, uint64_t a2, uint64_t a3, int *a4, uint64_t a5)
{
  uint64_t result;
  char v10;
  char v11;
  _DWORD v12[6];
  int v13;
  _QWORD **v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v13 = 0;
  sub_20AFB1764(v12, __s);
  sub_20B210214((uint64_t)&v11, (uint64_t)v12, a2);
  v14 = (_QWORD **)v12;
  v15 = a3;
  v16 = v12;
  v17 = a3;
  v18 = a3;
  if (v13 == -1)
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(_QWORD **, _DWORD *))off_24C4188F8[v13])(&v19, v12);
  sub_20B2CC8CC((uint64_t)&v10, (uint64_t)v12, a4);
  v14 = (_QWORD **)v12;
  v15 = a5;
  v16 = v12;
  v17 = a5;
  v18 = a5;
  if (v13 == -1)
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(_QWORD **, _DWORD *))off_24C418910[v13])(&v19, v12);
  if (v13 == -1)
    sub_20AECFAB8();
  v14 = &v19;
  result = ((uint64_t (*)(_QWORD ***, _DWORD *))off_24C4188E0[v13])(&v14, v12);
  if (v13 != -1)
    return ((uint64_t (*)(_QWORD ***, _DWORD *))off_24C4188C8[v13])(&v14, v12);
  return result;
}

void sub_20B2D1748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2D175C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2D1770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2D1784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2D1798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2D17AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2D17C0(_DWORD *a1@<X0>, char *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  void *v9[2];
  uint64_t v10;
  void *__dst[2];
  uint64_t v12;
  char v13;
  void *v14;
  char v15;
  void *__p;
  char v17;
  char v18;
  char v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  unsigned __int8 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  _DWORD v32[6];
  int v33;
  _QWORD **v34;
  const char *v35;
  _DWORD *v36;
  const char *v37;
  const char *v38;
  _QWORD *v39;

  switch(a3)
  {
    case 0:
      v8 = 0;
      v33 = 0;
      sub_20AED0170(v32, "Format ");
      sub_20B2CC8CC((uint64_t)&v31, (uint64_t)v32, &v8);
      v34 = (_QWORD **)v32;
      v35 = " invalid. ";
      v36 = v32;
      v37 = " invalid. ";
      v38 = " invalid. ";
      if (v33 == -1)
        sub_20AECFAB8();
      v39 = &v34;
      ((void (*)(_QWORD **, _DWORD *))off_24C418928[v33])(&v39, v32);
      v34 = (_QWORD **)v32;
      v35 = "Must choose format to save.";
      v36 = v32;
      v37 = "Must choose format to save.";
      v38 = "Must choose format to save.";
      if (v33 == -1)
        sub_20AECFAB8();
      v39 = &v34;
      ((void (*)(_QWORD **, _DWORD *))off_24C418940[v33])(&v39, v32);
      if (v33 == -1)
        sub_20AECFAB8();
      v34 = &v39;
      ((void (*)(void **__return_ptr, _QWORD ***, _DWORD *))off_24C4188E0[v33])(v9, &v34, v32);
      if (v33 != -1)
        ((void (*)(_QWORD ***, _DWORD *))off_24C4188C8[v33])(&v34, v32);
      if (SHIBYTE(v10) < 0)
      {
        sub_20AEC60F4(__dst, v9[0], (unint64_t)v9[1]);
      }
      else
      {
        *(_OWORD *)__dst = *(_OWORD *)v9;
        v12 = v10;
      }
      v13 = 1;
      LOBYTE(v14) = 0;
      v18 = 0;
      v19 = 1;
      sub_20B52280C((uint64_t)__dst, (uint64_t)&v20);
      *(_OWORD *)a4 = v20;
      *(_BYTE *)(a4 + 16) = 0;
      *(_BYTE *)(a4 + 112) = 0;
      if (v30)
      {
        *(_BYTE *)(a4 + 40) = 0;
        v6 = v23;
        if (v23)
        {
          *(_OWORD *)(a4 + 16) = v21;
          *(_QWORD *)(a4 + 32) = v22;
          v22 = 0;
          v21 = 0uLL;
          *(_BYTE *)(a4 + 40) = 1;
        }
        *(_BYTE *)(a4 + 48) = 0;
        *(_BYTE *)(a4 + 104) = 0;
        if (v29)
        {
          v7 = v26;
          *(_QWORD *)(a4 + 64) = v25;
          *(_OWORD *)(a4 + 48) = v24;
          v25 = 0;
          v24 = 0uLL;
          *(_QWORD *)(a4 + 72) = v7;
          *(_OWORD *)(a4 + 80) = v27;
          *(_QWORD *)(a4 + 96) = v28;
          v27 = 0uLL;
          v28 = 0;
          *(_BYTE *)(a4 + 104) = 1;
        }
        *(_BYTE *)(a4 + 112) = 1;
        *(_BYTE *)(a4 + 120) = 0;
        if (v6 && SHIBYTE(v22) < 0)
          operator delete((void *)v21);
      }
      else
      {
        *(_BYTE *)(a4 + 120) = 0;
      }
      if (v19)
      {
        if (v18)
        {
          if (v17 < 0)
            operator delete(__p);
          if (v15 < 0)
            operator delete(v14);
        }
        if (v13 && SHIBYTE(v12) < 0)
          operator delete(__dst[0]);
      }
      if (SHIBYTE(v10) < 0)
        operator delete(v9[0]);
      return;
    case 1:
    case 2:
      sub_20B2D4A5C(a1, a2, 1, a3, a4);
      return;
    case 3:
      v5 = 3;
      goto LABEL_4;
    case 4:
      v5 = 4;
      goto LABEL_4;
    case 5:
      v5 = 5;
LABEL_4:
      sub_20B2CBF2C(a2, (uint64_t)a1, v5, a4);
      return;
    default:
      sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/ImageIO/src/ImageIO.cpp", 204, (uint64_t)"", 0, (uint64_t)"should not be reached", 21, (void (*)(void **))sub_20B532360);
      abort();
  }
}

void sub_20B2D1B50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B2D1B80(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20B2D1B94(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20B2D1BA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20B2D1BBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20B2D1BD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20B2D1BE4(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  __int16 v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD v13[3];
  uint64_t v14;
  __int128 v15;
  uint64_t (**v16)();

  v16 = &off_24C403FD8;
  sub_20B4B2BA0(a1, (uint64_t)&v12);
  v3 = operator new();
  *(_QWORD *)v3 = &off_24C3FCC50;
  *(_OWORD *)(v3 + 8) = v13[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v13 + 12);
  *(_OWORD *)(v3 + 40) = v13[2];
  *(_QWORD *)(v3 + 56) = v14;
  *(_OWORD *)(v3 + 64) = v15;
  v4 = (std::__shared_weak_count *)operator new();
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C405180;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)v3;
  *a2 = v3;
  a2[1] = (uint64_t)v4;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v12, v3, 1);
  v7 = *(_QWORD *)(v12 + 16);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v12;
  a2[5] = v7;
  v12 = 0;
  MEMORY[0x20BD3583C]();
  a2[6] = a2[3];
  *(_OWORD *)(a2 + 7) = *((_OWORD *)a2 + 2);
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v9 = v8;
  if ((v8 & 0xFFFFFF) <= 0x10000)
    v9 = 0;
  v10 = v8 & 0xFF00;
  if ((v8 & 0xFF0000) == 0)
    v10 = 0;
  *((_WORD *)a2 + 36) = v10 & 0xFF00 | v9;
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_20B2D1DB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  sub_20AEC147C(v10);
  sub_20AEC147C((uint64_t)&a10);
  sub_20B037888(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2D1DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B037888(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2D1DFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  if (a18)
    free(a18);
  _Unwind_Resume(exception_object);
}

void sub_20B2D1E14(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unsigned __int8 v11;
  __int16 v12;
  unint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t (**v23)();

  v23 = &off_24C408270;
  sub_20B4B72DC(a1, (uint64_t)&v14);
  v3 = operator new();
  *(_QWORD *)v3 = &off_24C3FD650;
  *(_OWORD *)(v3 + 8) = v15;
  *(_OWORD *)(v3 + 24) = v16;
  *(_OWORD *)(v3 + 40) = v17;
  *(_QWORD *)(v3 + 56) = v18;
  *(_OWORD *)(v3 + 64) = v19;
  *(_QWORD *)(v3 + 80) = v20;
  *(_QWORD *)(v3 + 104) = v22;
  *(_OWORD *)(v3 + 88) = v21;
  v4 = (std::__shared_weak_count *)operator new();
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C4082A8;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)v3;
  *a2 = v3;
  a2[1] = (uint64_t)v4;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v14, v3, 21);
  v8 = v14[1];
  v7 = v14[2];
  *(_OWORD *)(a2 + 3) = *v14;
  *(_OWORD *)(a2 + 5) = v8;
  *(_OWORD *)(a2 + 7) = v7;
  v14 = 0;
  MEMORY[0x20BD3583C]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v9 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v9;
  v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v11 = v10;
  if ((v10 & 0xFFFFFF) <= 0x10000)
    v11 = 0;
  v12 = v10 & 0xFF00;
  if ((v10 & 0xFF0000) == 0)
    v12 = 0;
  *((_WORD *)a2 + 60) = v12 & 0xFF00 | v11;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_20B2D2008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  sub_20AEC147C(v10);
  sub_20AEC147C((uint64_t)&a10);
  sub_20B03B030(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2D203C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B03B030(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2D2050(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  if (a21)
    free(a21);
  _Unwind_Resume(exception_object);
}

void sub_20B2D2068(uint64_t a1@<X0>, _QWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  unsigned int v4;
  __int128 *v7;
  uint64_t v8;
  _BYTE *v9;
  int v10;
  uint64_t v11;
  void *v12;
  std::string *v13;
  __int128 v14;
  std::string *v15;
  void *v16;
  void *v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  std::string::size_type v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  void **v35;
  std::string::size_type v36;
  std::string *v37;
  __int128 v38;
  std::string *v39;
  void *v40;
  void *v41;
  int v42;
  _BYTE *v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  std::string::size_type v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  int v58;
  std::string::size_type size;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  int8x16_t *v72;
  __int128 v73;
  unint64_t *v74;
  unint64_t v75;
  unint64_t v76;
  int v77;
  int v78;
  unint64_t v79;
  unint64_t v80;
  int8x16_t *v81;
  int8x16_t *v82;
  unint64_t v83;
  int8x16_t *v84;
  int8x16_t v85;
  unsigned int v86;
  uint64_t v87;
  int8x16_t *v88;
  __int128 v89;
  unint64_t *v90;
  unint64_t v91;
  unint64_t v92;
  unsigned int v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  int8x16_t *v97;
  __int128 v98;
  unint64_t *v99;
  unint64_t v100;
  unint64_t v101;
  int v102;
  uint64_t v103;
  std::string::size_type v104;
  std::__shared_weak_count *v105;
  unint64_t *v106;
  unint64_t v107;
  unint64_t v108;
  std::__shared_weak_count *v109;
  unint64_t *v110;
  unint64_t v111;
  unint64_t v112;
  std::string::size_type v113;
  std::__shared_weak_count *v114;
  unint64_t *v115;
  unint64_t v116;
  unint64_t v117;
  std::__shared_weak_count *v118;
  unint64_t *v119;
  unint64_t v120;
  unint64_t v121;
  std::string::size_type v122;
  std::__shared_weak_count *v123;
  unint64_t *v124;
  unint64_t v125;
  unint64_t v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  int8x16_t *v132;
  __int128 v133;
  unint64_t *v134;
  unint64_t v135;
  unint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  unsigned __int8 *v139;
  unsigned __int8 v140;
  unsigned __int8 v141;
  uint64_t v142;
  int v143;
  unint64_t v145;
  unint64_t v146;
  int64_t v147;
  std::string::size_type v148;
  size_t v149;
  std::string::size_type v150;
  std::string::size_type v151;
  std::string::size_type v152;
  unsigned __int8 *v153;
  _BYTE *v154;
  char v155;
  unint64_t v156;
  _OWORD *v157;
  __int128 *v158;
  unint64_t v159;
  __int128 v160;
  unsigned __int8 *v161;
  uint64_t *v162;
  unint64_t v163;
  uint64_t v164;
  std::string::size_type v165;
  unint64_t v166;
  int64_t v167;
  std::string::size_type v168;
  size_t v169;
  int64_t v170;
  std::string::size_type v171;
  unsigned __int8 *v172;
  _BYTE *v173;
  char v174;
  unsigned int v175;
  unint64_t v176;
  _OWORD *v177;
  __int128 *v178;
  unint64_t v179;
  __int128 v180;
  unsigned __int8 *v181;
  uint64_t *v182;
  unint64_t v183;
  uint64_t v184;
  void *v185;
  uint64_t v186;
  uint64_t v187;
  int8x16_t *v188;
  __int128 v189;
  unint64_t *v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  int8x16_t *v195;
  _QWORD *v196;
  uint64_t v197;
  int8x16_t *v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  void *v202;
  std::__shared_weak_count *v203;
  uint64_t v204;
  unint64_t *v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  int8x16_t *v209;
  __int128 v210;
  unint64_t *v211;
  unint64_t v212;
  unint64_t v213;
  uint64_t v214;
  uint64_t v215;
  int8x16_t *v216;
  uint64_t v217;
  int8x16_t *v218;
  unsigned int v219;
  void *v220;
  unint64_t *v221;
  unint64_t v222;
  int8x16_t *v223;
  unint64_t v224;
  int8x16_t *v225;
  unint64_t v226;
  int8x16_t v227;
  uint64_t v228;
  unint64_t *v229;
  std::__shared_weak_count *v230;
  unint64_t *v231;
  unint64_t v232;
  std::__shared_weak_count *v233;
  unint64_t *v234;
  unint64_t v235;
  _QWORD *v236;
  _QWORD *v237;
  _QWORD *exception;
  int8x16_t *v239;
  uint64_t v240;
  int8x16_t *v241;
  uint64_t v243;
  int8x16_t *v244;
  std::string v245;
  _BYTE v246[30];
  std::string v247;
  _BYTE v248[32];
  char v249;
  void *v250;
  char v251;
  char v252;
  char v253;
  char v254;
  void *v255[2];
  unsigned __int8 v256;
  _DWORD v257[2];
  void *v258[2];
  _BYTE v259[7];
  char v260;
  char v261;
  void *v262;
  char v263;
  void *v264;
  char v265;
  char v266;
  char v267;
  void *__dst[2];
  _BYTE v269[7];
  char v270;
  char v271;
  void *v272;
  char v273;
  void *__p;
  char v275;
  char v276;
  char v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  char v281;
  char v282;
  void *v283;
  char v284;
  void *v285;
  char v286;
  char v287;
  char v288;
  char v289;
  unsigned int v290;
  char v291;
  char *v292;
  std::string v293;
  int8x16_t *v294;
  uint64_t v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  uint64_t v300;
  char v301;
  char v302;
  std::string v303;
  _BYTE v304[24];
  unsigned int v305;
  __int128 v306;
  __int128 v307;
  uint64_t v308;
  unsigned __int8 v309;
  __int128 v310;
  uint64_t v311;
  uint64_t v312;
  __int128 v313;
  uint64_t v314;
  char v315;
  char v316;
  uint64_t v317;

  v4 = a3;
  v317 = *MEMORY[0x24BDAC8D0];
  v290 = a3;
  sub_20B2D4318((uint64_t)&v279, a2);
  if (!v289)
  {
    v306 = v279;
    v9 = sub_20AECEBD0(&v307, &v280);
    *(_OWORD *)a4 = v306;
    *(_BYTE *)(a4 + 16) = 0;
    *(_BYTE *)(a4 + 112) = 0;
    if (v316)
    {
      *(_BYTE *)(a4 + 40) = 0;
      v10 = v309;
      if (v309)
      {
        *(_OWORD *)(a4 + 16) = *(_OWORD *)v9;
        *(_QWORD *)(a4 + 32) = *((_QWORD *)v9 + 2);
        *((_QWORD *)v9 + 1) = 0;
        *((_QWORD *)v9 + 2) = 0;
        *(_QWORD *)v9 = 0;
        *(_BYTE *)(a4 + 40) = 1;
      }
      *(_BYTE *)(a4 + 48) = 0;
      *(_BYTE *)(a4 + 104) = 0;
      if (v315)
      {
        v11 = v312;
        *(_QWORD *)(a4 + 64) = v311;
        *(_OWORD *)(a4 + 48) = v310;
        v310 = 0uLL;
        *(_QWORD *)(a4 + 72) = v11;
        *(_OWORD *)(a4 + 80) = v313;
        *(_QWORD *)(a4 + 96) = v314;
        v311 = 0;
        v313 = 0uLL;
        v314 = 0;
        *(_BYTE *)(a4 + 104) = 1;
      }
      *(_BYTE *)(a4 + 112) = 1;
      *(_BYTE *)(a4 + 120) = 0;
      if (v10 && SHIBYTE(v308) < 0)
      {
        v12 = (void *)v307;
LABEL_487:
        operator delete(v12);
        goto LABEL_488;
      }
    }
    else
    {
      *(_BYTE *)(a4 + 120) = 0;
    }
    goto LABEL_488;
  }
  v278 = v279;
  v7 = &xmmword_20B5F3A80;
  v8 = 0;
  switch(v4)
  {
    case 0u:
      v4 = DWORD1(v278);
      goto LABEL_23;
    case 1u:
      goto LABEL_15;
    case 2u:
      v8 = 1;
      goto LABEL_15;
    case 0x15u:
      v8 = 2;
LABEL_15:
      v7 = (__int128 *)((char *)&unk_20B5F3A74 + 4 * v8);
      break;
    default:
      break;
  }
  if ((char *)v7 - (char *)&unk_20B5F3A74 != 12)
  {
    if (DWORD1(v278) == v4)
    {
LABEL_23:
      LODWORD(v306) = v4;
      v19 = *(_QWORD *)(a1 + 24);
      if (!v19)
        sub_20AECABA4();
      (*(void (**)(std::string *__return_ptr, uint64_t, char *, __int128 *))(*(_QWORD *)v19 + 48))(&v247, v19, (char *)&v278 + 8, &v306);
      if (!v254)
      {
        v306 = *(_OWORD *)&v247.__r_.__value_.__l.__data_;
        v43 = sub_20AECEBD0(&v307, (__int128 *)&v247.__r_.__value_.__r.__words[2]);
        *(_OWORD *)a4 = v306;
        *(_BYTE *)(a4 + 16) = 0;
        *(_BYTE *)(a4 + 112) = 0;
        if (v316)
        {
          *(_BYTE *)(a4 + 40) = 0;
          v44 = v309;
          if (v309)
          {
            *(_OWORD *)(a4 + 16) = *(_OWORD *)v43;
            *(_QWORD *)(a4 + 32) = *((_QWORD *)v43 + 2);
            *((_QWORD *)v43 + 1) = 0;
            *((_QWORD *)v43 + 2) = 0;
            *(_QWORD *)v43 = 0;
            *(_BYTE *)(a4 + 40) = 1;
          }
          *(_BYTE *)(a4 + 48) = 0;
          *(_BYTE *)(a4 + 104) = 0;
          if (v315)
          {
            v45 = v312;
            *(_QWORD *)(a4 + 64) = v311;
            *(_OWORD *)(a4 + 48) = v310;
            v310 = 0uLL;
            *(_QWORD *)(a4 + 72) = v45;
            *(_OWORD *)(a4 + 80) = v313;
            *(_QWORD *)(a4 + 96) = v314;
            v311 = 0;
            v313 = 0uLL;
            v314 = 0;
            *(_BYTE *)(a4 + 104) = 1;
          }
          *(_BYTE *)(a4 + 112) = 1;
          *(_BYTE *)(a4 + 120) = 0;
          if (v44 && SHIBYTE(v308) < 0)
            operator delete((void *)v307);
        }
        else
        {
          *(_BYTE *)(a4 + 120) = 0;
        }
LABEL_472:
        if (v254)
        {
          v233 = (std::__shared_weak_count *)v247.__r_.__value_.__r.__words[2];
          if (v247.__r_.__value_.__r.__words[2])
          {
            v234 = (unint64_t *)(v247.__r_.__value_.__r.__words[2] + 8);
            do
              v235 = __ldaxr(v234);
            while (__stlxr(v235 - 1, v234));
            if (!v235)
            {
              ((void (*)(std::__shared_weak_count *))v233->__on_zero_shared)(v233);
              std::__shared_weak_count::__release_weak(v233);
            }
          }
        }
        else if (v253)
        {
          if (v252)
          {
            if (v251 < 0)
              operator delete(v250);
            if (v249 < 0)
              operator delete(*(void **)&v248[24]);
          }
          if (v248[16] && (v248[15] & 0x80000000) != 0)
          {
            v12 = (void *)v247.__r_.__value_.__r.__words[2];
            goto LABEL_487;
          }
        }
        goto LABEL_488;
      }
      v245.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_24C400938;
      *(_OWORD *)&v245.__r_.__value_.__r.__words[1] = *(_OWORD *)&v247.__r_.__value_.__r.__words[1];
      *(_OWORD *)&v247.__r_.__value_.__r.__words[1] = 0uLL;
      *(_OWORD *)&v246[14] = *(_OWORD *)&v248[14];
      *(_OWORD *)v246 = *(_OWORD *)v248;
      v20 = *(_QWORD *)&v248[22] >> 16;
      if (v20 != DWORD1(v278))
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/ImageIO/src/Pnm.cpp", 274, (uint64_t)"image_dynamic.RuntimeFormat() == color_format", 45, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_505;
        }
        v20 = DWORD1(v278);
      }
      if (v20 == 21)
      {
        v58 = v278;
        v293.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_24C416218;
        sub_20B2D939C((uint64_t)&v245, (uint64_t)&v293.__r_.__value_.__l.__size_);
        if (v58)
        {
          if (((v300 * (unint64_t)v298) & 0x8000000000000000) != 0)
          {
            exception = __cxa_allocate_exception(8uLL);
            *exception = &off_24C41FEF0;
            __cxa_throw(exception, (struct type_info *)&unk_24C41FF08, (void (*)(void *))std::exception::~exception);
          }
          size = v293.__r_.__value_.__l.__size_;
          if (!v293.__r_.__value_.__l.__size_)
            goto LABEL_187;
          v60 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
          if (v293.__r_.__value_.__r.__words[2])
          {
            v61 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
            do
              v62 = __ldxr(v61);
            while (__stxr(v62 + 1, v61));
            do
              v63 = __ldaxr(v61);
            while (__stlxr(v63 - 1, v61));
            if (!v63)
            {
              ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
              std::__shared_weak_count::__release_weak(v60);
            }
            v64 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
            size = v293.__r_.__value_.__l.__size_;
            if (v293.__r_.__value_.__r.__words[2])
            {
              v65 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
              do
                v66 = __ldxr(v65);
              while (__stxr(v66 + 1, v65));
              do
                v67 = __ldaxr(v65);
              while (__stlxr(v67 - 1, v65));
              if (!v67)
              {
                ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
                std::__shared_weak_count::__release_weak(v64);
              }
            }
          }
          if (v302)
            (*(void (**)(__int128 *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)size + 96))(&v306, size, 1);
          else
LABEL_187:
            *(_QWORD *)&v306 = 0;
          if ((_DWORD)v295)
          {
            if (HIDWORD(v295))
            {
              v86 = v296;
              if (v296)
              {
                v87 = v299;
                v88 = v294;
                if (v301 && v294)
                {
                  v89 = *(_OWORD *)&v293.__r_.__value_.__r.__words[1];
                  if (v293.__r_.__value_.__r.__words[2])
                  {
                    v90 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
                    do
                      v91 = __ldxr(v90);
                    while (__stxr(v91 + 1, v90));
                    do
                      v92 = __ldaxr(v90);
                    while (__stlxr(v92 - 1, v90));
                    if (!v92)
                    {
                      (*(void (**)(_QWORD))(**((_QWORD **)&v89 + 1) + 16))(*((_QWORD *)&v89 + 1));
                      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v89 + 1));
                    }
                  }
                  (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v89 + 88))(v89, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                  v88 = v294;
                }
                v93 = v86 - 1;
                if (v86 != 1)
                {
                  do
                  {
                    std::istream::read();
                    v88 = (int8x16_t *)((char *)v88 + v87);
                    --v93;
                  }
                  while (v93);
                }
                std::istream::read();
              }
            }
          }
          v94 = v306;
          *(_QWORD *)&v306 = 0;
          if (v94)
            (*(void (**)(uint64_t))(*(_QWORD *)v94 + 8))(v94);
        }
        else
        {
          memset(&v303, 0, sizeof(v303));
          v113 = v293.__r_.__value_.__l.__size_;
          if (!v293.__r_.__value_.__l.__size_)
            goto LABEL_373;
          v114 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
          if (v293.__r_.__value_.__r.__words[2])
          {
            v115 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
            do
              v116 = __ldxr(v115);
            while (__stxr(v116 + 1, v115));
            do
              v117 = __ldaxr(v115);
            while (__stlxr(v117 - 1, v115));
            if (!v117)
            {
              ((void (*)(std::__shared_weak_count *))v114->__on_zero_shared)(v114);
              std::__shared_weak_count::__release_weak(v114);
            }
            v118 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
            v113 = v293.__r_.__value_.__l.__size_;
            if (v293.__r_.__value_.__r.__words[2])
            {
              v119 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
              do
                v120 = __ldxr(v119);
              while (__stxr(v120 + 1, v119));
              do
                v121 = __ldaxr(v119);
              while (__stlxr(v121 - 1, v119));
              if (!v121)
              {
                ((void (*)(std::__shared_weak_count *))v118->__on_zero_shared)(v118);
                std::__shared_weak_count::__release_weak(v118);
              }
            }
          }
          if (v302)
            (*(void (**)(void **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v113 + 96))(v255, v113, 1);
          else
LABEL_373:
            v255[0] = 0;
          v186 = v299;
          v187 = v300;
          v188 = v294;
          if (v301 && v294)
          {
            v189 = *(_OWORD *)&v293.__r_.__value_.__r.__words[1];
            if (v293.__r_.__value_.__r.__words[2])
            {
              v190 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
              do
                v191 = __ldxr(v190);
              while (__stxr(v191 + 1, v190));
              do
                v192 = __ldaxr(v190);
              while (__stlxr(v192 - 1, v190));
              if (!v192)
              {
                (*(void (**)(_QWORD))(**((_QWORD **)&v189 + 1) + 16))(*((_QWORD *)&v189 + 1));
                std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v189 + 1));
              }
            }
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v189 + 88))(v189, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v188 = v294;
          }
          v193 = (v186 * HIDWORD(v187));
          if ((_DWORD)v193)
          {
            v194 = (3 * v187);
            if (3 * (_DWORD)v187)
            {
              v195 = (int8x16_t *)((char *)v188 + v193);
              v196 = a2 + 4;
              v197 = MEMORY[0x24BDAC740];
              do
              {
                v198 = v188;
                do
                {
                  v198->i8[0] = sub_20B2D89E4((uint64_t)&v303, a2);
                  std::istream::tellg();
                  while ((*((_BYTE *)v196 + *(_QWORD *)(*a2 - 24)) & 2) == 0)
                  {
                    v199 = std::istream::peek();
                    if (v199 <= 0x7F)
                    {
                      if ((*(_DWORD *)(v197 + 4 * v199 + 60) & 0x4000) == 0)
                        break;
                    }
                    else if (!__maskrune(v199, 0x4000uLL))
                    {
                      break;
                    }
                    std::istream::seekg();
                  }
                  std::istream::tellg();
                  v198->i8[1] = sub_20B2D89E4((uint64_t)&v303, a2);
                  std::istream::tellg();
                  while ((*((_BYTE *)v196 + *(_QWORD *)(*a2 - 24)) & 2) == 0)
                  {
                    v200 = std::istream::peek();
                    if (v200 <= 0x7F)
                    {
                      if ((*(_DWORD *)(v197 + 4 * v200 + 60) & 0x4000) == 0)
                        break;
                    }
                    else if (!__maskrune(v200, 0x4000uLL))
                    {
                      break;
                    }
                    std::istream::seekg();
                  }
                  std::istream::tellg();
                  v198->i8[2] = sub_20B2D89E4((uint64_t)&v303, a2);
                  std::istream::tellg();
                  while ((*((_BYTE *)v196 + *(_QWORD *)(*a2 - 24)) & 2) == 0)
                  {
                    v201 = std::istream::peek();
                    if (v201 <= 0x7F)
                    {
                      if ((*(_DWORD *)(v197 + 4 * v201 + 60) & 0x4000) == 0)
                        break;
                    }
                    else if (!__maskrune(v201, 0x4000uLL))
                    {
                      break;
                    }
                    std::istream::seekg();
                  }
                  std::istream::tellg();
                  v198 = (int8x16_t *)((char *)v198 + 3);
                }
                while (v198 != (int8x16_t *)&v188->i8[v194]);
                v188 = (int8x16_t *)((char *)v188 + v186);
              }
              while (v188 != v195);
            }
          }
          v202 = v255[0];
          v255[0] = 0;
          if (v202)
            (*(void (**)(void *))(*(_QWORD *)v202 + 8))(v202);
          if (v303.__r_.__value_.__r.__words[0])
          {
            v303.__r_.__value_.__l.__size_ = v303.__r_.__value_.__r.__words[0];
            operator delete(v303.__r_.__value_.__l.__data_);
          }
        }
        v203 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
        v204 = a4;
        if (!v293.__r_.__value_.__r.__words[2])
          goto LABEL_467;
        v205 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
        do
          v206 = __ldaxr(v205);
        while (__stlxr(v206 - 1, v205));
        goto LABEL_465;
      }
      if (v20 != 2)
      {
        if (v20 == 1)
        {
          v21 = v278;
          v293.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_24C415B50;
          sub_20B2D8178((uint64_t)&v245, (uint64_t)&v293.__r_.__value_.__l.__size_);
          if (v21)
          {
            if (((v295 * (unint64_t)v296) & 0x8000000000000000) != 0)
            {
              v236 = __cxa_allocate_exception(8uLL);
              *v236 = &off_24C41FEF0;
              __cxa_throw(v236, (struct type_info *)&unk_24C41FF08, (void (*)(void *))std::exception::~exception);
            }
            v22 = v293.__r_.__value_.__l.__size_;
            if (!v293.__r_.__value_.__l.__size_)
              goto LABEL_205;
            v23 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
            if (v293.__r_.__value_.__r.__words[2])
            {
              v24 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
              do
                v25 = __ldxr(v24);
              while (__stxr(v25 + 1, v24));
              do
                v26 = __ldaxr(v24);
              while (__stlxr(v26 - 1, v24));
              if (!v26)
              {
                ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
                std::__shared_weak_count::__release_weak(v23);
              }
              v27 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
              v22 = v293.__r_.__value_.__l.__size_;
              if (v293.__r_.__value_.__r.__words[2])
              {
                v28 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
                do
                  v29 = __ldxr(v28);
                while (__stxr(v29 + 1, v28));
                do
                  v30 = __ldaxr(v28);
                while (__stlxr(v30 - 1, v28));
                if (!v30)
                {
                  ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
                  std::__shared_weak_count::__release_weak(v27);
                }
              }
            }
            if (BYTE1(v298))
              (*(void (**)(__int128 *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v22 + 96))(&v306, v22, 1);
            else
LABEL_205:
              *(_QWORD *)&v306 = 0;
            if ((_DWORD)v295)
            {
              v95 = HIDWORD(v295);
              if (HIDWORD(v295))
              {
                v96 = v297;
                v97 = v294;
                if ((_BYTE)v298 && v294)
                {
                  v98 = *(_OWORD *)&v293.__r_.__value_.__r.__words[1];
                  if (v293.__r_.__value_.__r.__words[2])
                  {
                    v99 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
                    do
                      v100 = __ldxr(v99);
                    while (__stxr(v100 + 1, v99));
                    do
                      v101 = __ldaxr(v99);
                    while (__stlxr(v101 - 1, v99));
                    if (!v101)
                    {
                      (*(void (**)(_QWORD))(**((_QWORD **)&v98 + 1) + 16))(*((_QWORD *)&v98 + 1));
                      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v98 + 1));
                    }
                  }
                  (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v98 + 88))(v98, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                  v97 = v294;
                }
                v102 = v95 - 1;
                if (v95 != 1)
                {
                  do
                  {
                    std::istream::read();
                    v97 = (int8x16_t *)((char *)v97 + v96);
                    --v102;
                  }
                  while (v102);
                }
                std::istream::read();
              }
            }
            v103 = v306;
            *(_QWORD *)&v306 = 0;
            if (v103)
              (*(void (**)(uint64_t))(*(_QWORD *)v103 + 8))(v103);
          }
          else
          {
            memset(&v303, 0, sizeof(v303));
            v122 = v293.__r_.__value_.__l.__size_;
            if (!v293.__r_.__value_.__l.__size_)
              goto LABEL_418;
            v123 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
            if (v293.__r_.__value_.__r.__words[2])
            {
              v124 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
              do
                v125 = __ldxr(v124);
              while (__stxr(v125 + 1, v124));
              do
                v126 = __ldaxr(v124);
              while (__stlxr(v126 - 1, v124));
              if (!v126)
              {
                ((void (*)(std::__shared_weak_count *))v123->__on_zero_shared)(v123);
                std::__shared_weak_count::__release_weak(v123);
              }
              v127 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
              v122 = v293.__r_.__value_.__l.__size_;
              if (v293.__r_.__value_.__r.__words[2])
              {
                v128 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
                do
                  v129 = __ldxr(v128);
                while (__stxr(v129 + 1, v128));
                do
                  v130 = __ldaxr(v128);
                while (__stlxr(v130 - 1, v128));
                if (!v130)
                {
                  ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
                  std::__shared_weak_count::__release_weak(v127);
                }
              }
            }
            if (BYTE1(v298))
              (*(void (**)(void **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v122 + 96))(v255, v122, 1);
            else
LABEL_418:
              v255[0] = 0;
            v207 = v297;
            v208 = v295;
            v209 = v294;
            if ((_BYTE)v298 && v294)
            {
              v210 = *(_OWORD *)&v293.__r_.__value_.__r.__words[1];
              if (v293.__r_.__value_.__r.__words[2])
              {
                v211 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
                do
                  v212 = __ldxr(v211);
                while (__stxr(v212 + 1, v211));
                do
                  v213 = __ldaxr(v211);
                while (__stlxr(v213 - 1, v211));
                if (!v213)
                {
                  (*(void (**)(_QWORD))(**((_QWORD **)&v210 + 1) + 16))(*((_QWORD *)&v210 + 1));
                  std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v210 + 1));
                }
              }
              (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v210 + 88))(v210, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v209 = v294;
            }
            v214 = (v207 * HIDWORD(v208));
            if ((_DWORD)v214)
            {
              v215 = v208;
              if ((_DWORD)v208)
              {
                v216 = (int8x16_t *)((char *)v209 + v214);
                v217 = MEMORY[0x24BDAC740];
                do
                {
                  v218 = v209;
                  do
                  {
                    v218->i8[0] = sub_20B2D89E4((uint64_t)&v303, a2);
                    std::istream::tellg();
                    while ((*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 2) == 0)
                    {
                      v219 = std::istream::peek();
                      if (v219 <= 0x7F)
                      {
                        if ((*(_DWORD *)(v217 + 4 * v219 + 60) & 0x4000) == 0)
                          break;
                      }
                      else if (!__maskrune(v219, 0x4000uLL))
                      {
                        break;
                      }
                      std::istream::seekg();
                    }
                    std::istream::tellg();
                    v218 = (int8x16_t *)((char *)v218 + 1);
                  }
                  while (v218 != (int8x16_t *)&v209->i8[v215]);
                  v209 = (int8x16_t *)((char *)v209 + v207);
                }
                while (v209 != v216);
              }
            }
            v220 = v255[0];
            v255[0] = 0;
            if (v220)
              (*(void (**)(void *))(*(_QWORD *)v220 + 8))(v220);
            if (v303.__r_.__value_.__r.__words[0])
            {
              v303.__r_.__value_.__l.__size_ = v303.__r_.__value_.__r.__words[0];
              operator delete(v303.__r_.__value_.__l.__data_);
            }
          }
          v203 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
          v204 = a4;
          if (!v293.__r_.__value_.__r.__words[2])
            goto LABEL_467;
          v221 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
          do
            v206 = __ldaxr(v221);
          while (__stlxr(v206 - 1, v221));
          goto LABEL_465;
        }
        sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/ImageIO/src/Pnm.cpp", 283, (uint64_t)"", 0, (uint64_t)"Not implemented", 15, (void (*)(void **))sub_20B532360);
LABEL_505:
        abort();
      }
      v48 = v278;
      v293.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_24C415C48;
      sub_20B2D8DE8((uint64_t)&v245, (uint64_t)&v293.__r_.__value_.__l.__size_);
      if (v48)
      {
        v243 = v295;
        if (((2 * v296 * (unint64_t)v295) & 0x8000000000000000) != 0)
        {
          v237 = __cxa_allocate_exception(8uLL);
          *v237 = &off_24C41FEF0;
          __cxa_throw(v237, (struct type_info *)&unk_24C41FF08, (void (*)(void *))std::exception::~exception);
        }
        v49 = v293.__r_.__value_.__l.__size_;
        if (!v293.__r_.__value_.__l.__size_)
          goto LABEL_163;
        v50 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
        if (v293.__r_.__value_.__r.__words[2])
        {
          v51 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
          do
            v52 = __ldxr(v51);
          while (__stxr(v52 + 1, v51));
          do
            v53 = __ldaxr(v51);
          while (__stlxr(v53 - 1, v51));
          if (!v53)
          {
            ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
            std::__shared_weak_count::__release_weak(v50);
          }
          v54 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
          v49 = v293.__r_.__value_.__l.__size_;
          if (v293.__r_.__value_.__r.__words[2])
          {
            v55 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
            do
              v56 = __ldxr(v55);
            while (__stxr(v56 + 1, v55));
            do
              v57 = __ldaxr(v55);
            while (__stlxr(v57 - 1, v55));
            if (!v57)
            {
              ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
              std::__shared_weak_count::__release_weak(v54);
            }
          }
        }
        if (BYTE1(v298))
          (*(void (**)(__int128 *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v49 + 96))(&v306, v49, 1);
        else
LABEL_163:
          *(_QWORD *)&v306 = 0;
        if (!(_DWORD)v295)
          goto LABEL_460;
        v70 = HIDWORD(v295);
        if (!HIDWORD(v295))
          goto LABEL_460;
        v71 = v297;
        v72 = v294;
        if ((_BYTE)v298 && v294)
        {
          v73 = *(_OWORD *)&v293.__r_.__value_.__r.__words[1];
          if (v293.__r_.__value_.__r.__words[2])
          {
            v74 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
            do
              v75 = __ldxr(v74);
            while (__stxr(v75 + 1, v74));
            do
              v76 = __ldaxr(v74);
            while (__stlxr(v76 - 1, v74));
            if (!v76)
            {
              (*(void (**)(_QWORD))(**((_QWORD **)&v73 + 1) + 16))(*((_QWORD *)&v73 + 1));
              std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v73 + 1));
            }
          }
          (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v73 + 88))(v73, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v72 = v294;
        }
        v77 = v70 - 1;
        if (v70 != 1)
        {
          if ((_DWORD)v243)
          {
            v78 = 0;
            v79 = (v243 - 1) & 0x7FFFFFFFFFFFFFFFLL;
            v80 = (v79 + 1) & 0xFFFFFFFFFFFFFFF0;
            v81 = v72 + 1;
            while (1)
            {
              std::istream::read();
              if (!v72
                && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
              {
                break;
              }
              v82 = v72;
              if (v79 < 0xF)
                goto LABEL_511;
              v82 = (int8x16_t *)((char *)v72 + 2 * v80);
              v83 = (v79 + 1) & 0xFFFFFFFFFFFFFFF0;
              v84 = v81;
              do
              {
                v85 = vrev16q_s8(*v84);
                v84[-1] = vrev16q_s8(v84[-1]);
                *v84 = v85;
                v84 += 2;
                v83 -= 16;
              }
              while (v83);
              if (v79 + 1 != v80)
              {
LABEL_511:
                do
                {
                  v82->i16[0] = bswap32(v82->u16[0]) >> 16;
                  v82 = (int8x16_t *)((char *)v82 + 2);
                }
                while (v82 != (int8x16_t *)((char *)v72 + 2 * v243));
              }
              v72 = (int8x16_t *)((char *)v72 + 2 * v71);
              ++v78;
              v81 = (int8x16_t *)((char *)v81 + 2 * v71);
              if (v78 == v77)
                goto LABEL_450;
            }
LABEL_453:
            abort();
          }
          do
          {
            std::istream::read();
            v72 = (int8x16_t *)((char *)v72 + 2 * v71);
            --v77;
          }
          while (v77);
        }
LABEL_450:
        std::istream::read();
        if (!(_DWORD)v243 || v72)
        {
          if (!(_DWORD)v243)
          {
LABEL_460:
            v228 = v306;
            *(_QWORD *)&v306 = 0;
            if (v228)
              (*(void (**)(uint64_t))(*(_QWORD *)v228 + 8))(v228);
LABEL_462:
            v203 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
            v204 = a4;
            if (!v293.__r_.__value_.__r.__words[2])
            {
LABEL_467:
              *(_BYTE *)(v204 + 120) = 1;
              v230 = (std::__shared_weak_count *)v245.__r_.__value_.__r.__words[2];
              if (v245.__r_.__value_.__r.__words[2])
              {
                v231 = (unint64_t *)(v245.__r_.__value_.__r.__words[2] + 8);
                do
                  v232 = __ldaxr(v231);
                while (__stlxr(v232 - 1, v231));
                if (!v232)
                {
                  ((void (*)(std::__shared_weak_count *))v230->__on_zero_shared)(v230);
                  std::__shared_weak_count::__release_weak(v230);
                }
              }
              goto LABEL_472;
            }
            v229 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
            do
              v206 = __ldaxr(v229);
            while (__stlxr(v206 - 1, v229));
LABEL_465:
            if (!v206)
            {
              ((void (*)(std::__shared_weak_count *))v203->__on_zero_shared)(v203);
              std::__shared_weak_count::__release_weak(v203);
              v204 = a4;
            }
            goto LABEL_467;
          }
        }
        else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_453;
        }
        v222 = (v243 - 1) & 0x7FFFFFFFFFFFFFFFLL;
        v223 = v72;
        if (v222 < 0xF)
          goto LABEL_512;
        v224 = v222 + 1;
        v223 = (int8x16_t *)((char *)v72 + 2 * (v224 & 0xFFFFFFFFFFFFFFF0));
        v225 = v72 + 1;
        v226 = v224 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v227 = vrev16q_s8(*v225);
          v225[-1] = vrev16q_s8(v225[-1]);
          *v225 = v227;
          v225 += 2;
          v226 -= 16;
        }
        while (v226);
        if (v224 != (v224 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_512:
          do
          {
            v223->i16[0] = bswap32(v223->u16[0]) >> 16;
            v223 = (int8x16_t *)((char *)v223 + 2);
          }
          while (v223 != (int8x16_t *)((char *)v72 + 2 * v243));
        }
        goto LABEL_460;
      }
      memset(&v303, 0, sizeof(v303));
      v104 = v293.__r_.__value_.__l.__size_;
      if (!v293.__r_.__value_.__l.__size_)
        goto LABEL_267;
      v105 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
      if (v293.__r_.__value_.__r.__words[2])
      {
        v106 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
        do
          v107 = __ldxr(v106);
        while (__stxr(v107 + 1, v106));
        do
          v108 = __ldaxr(v106);
        while (__stlxr(v108 - 1, v106));
        if (!v108)
        {
          ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
          std::__shared_weak_count::__release_weak(v105);
        }
        v109 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
        v104 = v293.__r_.__value_.__l.__size_;
        if (v293.__r_.__value_.__r.__words[2])
        {
          v110 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
          do
            v111 = __ldxr(v110);
          while (__stxr(v111 + 1, v110));
          do
            v112 = __ldaxr(v110);
          while (__stlxr(v112 - 1, v110));
          if (!v112)
          {
            ((void (*)(std::__shared_weak_count *))v109->__on_zero_shared)(v109);
            std::__shared_weak_count::__release_weak(v109);
          }
        }
      }
      if (BYTE1(v298))
        (*(void (**)(void **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v104 + 96))(v255, v104, 1);
      else
LABEL_267:
        v255[0] = 0;
      v240 = v297;
      v131 = v295;
      v132 = v294;
      if ((_BYTE)v298 && v294)
      {
        v133 = *(_OWORD *)&v293.__r_.__value_.__r.__words[1];
        if (v293.__r_.__value_.__r.__words[2])
        {
          v134 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
          do
            v135 = __ldxr(v134);
          while (__stxr(v135 + 1, v134));
          do
            v136 = __ldaxr(v134);
          while (__stlxr(v136 - 1, v134));
          if (!v136)
          {
            (*(void (**)(_QWORD))(**((_QWORD **)&v133 + 1) + 16))(*((_QWORD *)&v133 + 1));
            std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v133 + 1));
          }
        }
        (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v133 + 88))(v133, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v132 = v294;
      }
      if (!((_DWORD)v240 * HIDWORD(v131)) || !(_DWORD)v131)
      {
LABEL_369:
        v185 = v255[0];
        v255[0] = 0;
        if (v185)
          (*(void (**)(void *))(*(_QWORD *)v185 + 8))(v185);
        if (v303.__r_.__value_.__r.__words[0])
          operator delete(v303.__r_.__value_.__l.__data_);
        goto LABEL_462;
      }
      v137 = a2 + 4;
      v138 = v303.__r_.__value_.__l.__size_;
      v139 = (unsigned __int8 *)v303.__r_.__value_.__r.__words[0];
      v239 = (int8x16_t *)((char *)v132 + 2 * (v240 * HIDWORD(v131)));
LABEL_281:
      v244 = (int8x16_t *)((char *)v132 + 2 * v131);
      v241 = v132;
      while (1)
      {
        if ((unsigned __int8 *)v138 != v139)
          v303.__r_.__value_.__l.__size_ = (std::string::size_type)v139;
        v140 = std::istream::peek();
        if ((*((_BYTE *)v137 + *(_QWORD *)(*a2 - 24)) & 2) == 0)
        {
          v141 = v140;
          while (1)
          {
            v142 = 0;
            strcpy((char *)&v306, "0123456789");
            BYTE7(v307) = 10;
            do
              v143 = *((unsigned __int8 *)&v306 + v142);
            while (v143 != v141 && v142++ != 9);
            if (v143 != v141)
              goto LABEL_329;
            if ((unint64_t)v139 >= v303.__r_.__value_.__r.__words[2])
              break;
            *v139++ = v141;
LABEL_313:
            v303.__r_.__value_.__l.__size_ = (std::string::size_type)v139;
            std::istream::seekg();
            v141 = std::istream::peek();
            if ((*((_BYTE *)v137 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
              goto LABEL_329;
          }
          v145 = v303.__r_.__value_.__r.__words[0];
          v146 = (unint64_t)&v139[-v303.__r_.__value_.__r.__words[0]];
          v147 = (int64_t)&v139[-v303.__r_.__value_.__r.__words[0] + 1];
          if (v147 < 0)
            goto LABEL_499;
          v148 = v303.__r_.__value_.__r.__words[2] - v303.__r_.__value_.__r.__words[0];
          if (2 * (v303.__r_.__value_.__r.__words[2] - v303.__r_.__value_.__r.__words[0]) > v147)
            v147 = 2 * v148;
          if (v148 >= 0x3FFFFFFFFFFFFFFFLL)
            v149 = 0x7FFFFFFFFFFFFFFFLL;
          else
            v149 = v147;
          if (v149)
          {
            v150 = (std::string::size_type)operator new(v149);
            v151 = v150 + v146;
            *(_BYTE *)(v150 + v146) = v141;
            v152 = v150 + v146 + 1;
            if (v139 != (unsigned __int8 *)v145)
            {
LABEL_303:
              if (v146 < 8
                || v150 + v146 - 1 - (unint64_t)&v139[~v145] > v150 + v146 - 1
                || v145 > (unint64_t)(v139 - 1)
                || v145 - v150 < 0x20)
              {
                v153 = v139;
              }
              else if (v146 >= 0x20)
              {
                v156 = v146 & 0xFFFFFFFFFFFFFFE0;
                v157 = (_OWORD *)(v150 + v146 - 16);
                v158 = (__int128 *)(v139 - 16);
                v159 = v146 & 0xFFFFFFFFFFFFFFE0;
                do
                {
                  v160 = *v158;
                  *(v157 - 1) = *(v158 - 1);
                  *v157 = v160;
                  v157 -= 2;
                  v158 -= 2;
                  v159 -= 32;
                }
                while (v159);
                if (v146 == v156)
                  goto LABEL_307;
                if ((v146 & 0x18) != 0)
                  goto LABEL_324;
                v151 -= v156;
                v153 = &v139[-v156];
              }
              else
              {
                v156 = 0;
LABEL_324:
                v153 = &v139[-(v146 & 0xFFFFFFFFFFFFFFF8)];
                v151 -= v146 & 0xFFFFFFFFFFFFFFF8;
                v161 = &v139[-v156 - v145 - 8 + v150];
                v162 = (uint64_t *)&v139[-v156 - 8];
                v163 = v156 - (v146 & 0xFFFFFFFFFFFFFFF8);
                do
                {
                  v164 = *v162--;
                  *(_QWORD *)v161 = v164;
                  v161 -= 8;
                  v163 += 8;
                }
                while (v163);
                if (v146 == (v146 & 0xFFFFFFFFFFFFFFF8))
                {
LABEL_307:
                  v139 = (unsigned __int8 *)v303.__r_.__value_.__r.__words[0];
                  v303.__r_.__value_.__r.__words[0] = v150;
                  v303.__r_.__value_.__l.__size_ = v152;
                  v303.__r_.__value_.__r.__words[2] = v150 + v149;
                  if (!v139)
                    goto LABEL_312;
LABEL_311:
                  operator delete(v139);
LABEL_312:
                  v139 = (unsigned __int8 *)v152;
                  goto LABEL_313;
                }
              }
              v154 = (_BYTE *)(v151 - 1);
              do
              {
                v155 = *--v153;
                *v154-- = v155;
              }
              while (v153 != (unsigned __int8 *)v145);
              goto LABEL_307;
            }
          }
          else
          {
            v150 = 0;
            v151 = (std::string::size_type)&v139[-v303.__r_.__value_.__r.__words[0]];
            *(_BYTE *)v146 = v141;
            v152 = v146 + 1;
            if (v139 != (unsigned __int8 *)v145)
              goto LABEL_303;
          }
          v303.__r_.__value_.__r.__words[0] = v151;
          v303.__r_.__value_.__l.__size_ = v152;
          v303.__r_.__value_.__r.__words[2] = v150 + v149;
          if (v139)
            goto LABEL_311;
          goto LABEL_312;
        }
LABEL_329:
        if ((unint64_t)v139 < v303.__r_.__value_.__r.__words[2])
        {
          *v139 = 10;
          v138 = (uint64_t)(v139 + 1);
          goto LABEL_349;
        }
        v165 = v303.__r_.__value_.__r.__words[0];
        v166 = (unint64_t)&v139[-v303.__r_.__value_.__r.__words[0]];
        v167 = (int64_t)&v139[-v303.__r_.__value_.__r.__words[0] + 1];
        if (v167 < 0)
LABEL_499:
          sub_20AEC60B8();
        v168 = v303.__r_.__value_.__r.__words[2] - v303.__r_.__value_.__r.__words[0];
        if (2 * (v303.__r_.__value_.__r.__words[2] - v303.__r_.__value_.__r.__words[0]) > v167)
          v167 = 2 * v168;
        if (v168 >= 0x3FFFFFFFFFFFFFFFLL)
          v169 = 0x7FFFFFFFFFFFFFFFLL;
        else
          v169 = v167;
        if (v169)
        {
          v170 = (int64_t)operator new(v169);
          v171 = v170 + v166;
          *(_BYTE *)(v170 + v166) = 10;
          v138 = v170 + v166 + 1;
          if (v139 == (unsigned __int8 *)v165)
            goto LABEL_347;
        }
        else
        {
          v170 = 0;
          v171 = (std::string::size_type)&v139[-v303.__r_.__value_.__r.__words[0]];
          *(_BYTE *)v166 = 10;
          v138 = v166 + 1;
          if (v139 == (unsigned __int8 *)v165)
          {
LABEL_347:
            v303.__r_.__value_.__r.__words[0] = v171;
            v303.__r_.__value_.__l.__size_ = v138;
            v303.__r_.__value_.__r.__words[2] = v170 + v169;
            if (!v139)
              goto LABEL_349;
LABEL_348:
            operator delete(v139);
            goto LABEL_349;
          }
        }
        if (v166 < 8 || v165 - v170 < 0x20)
        {
          v172 = v139;
          goto LABEL_342;
        }
        if (v166 >= 0x20)
        {
          v176 = v166 & 0xFFFFFFFFFFFFFFE0;
          v177 = (_OWORD *)(v170 + v166 - 16);
          v178 = (__int128 *)(v139 - 16);
          v179 = v166 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v180 = *v178;
            *(v177 - 1) = *(v178 - 1);
            *v177 = v180;
            v177 -= 2;
            v178 -= 2;
            v179 -= 32;
          }
          while (v179);
          if (v166 == v176)
            goto LABEL_344;
          if ((v166 & 0x18) == 0)
          {
            v171 -= v176;
            v172 = &v139[-v176];
LABEL_342:
            v173 = (_BYTE *)(v171 - 1);
            do
            {
              v174 = *--v172;
              *v173-- = v174;
            }
            while (v172 != (unsigned __int8 *)v165);
            goto LABEL_344;
          }
        }
        else
        {
          v176 = 0;
        }
        v172 = &v139[-(v166 & 0xFFFFFFFFFFFFFFF8)];
        v171 -= v166 & 0xFFFFFFFFFFFFFFF8;
        v181 = &v139[-v176 - v165 - 8 + v170];
        v182 = (uint64_t *)&v139[-v176 - 8];
        v183 = v176 - (v166 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          v184 = *v182--;
          *(_QWORD *)v181 = v184;
          v181 -= 8;
          v183 += 8;
        }
        while (v183);
        if (v166 != (v166 & 0xFFFFFFFFFFFFFFF8))
          goto LABEL_342;
LABEL_344:
        v139 = (unsigned __int8 *)v303.__r_.__value_.__r.__words[0];
        v303.__r_.__value_.__r.__words[0] = v170;
        v303.__r_.__value_.__l.__size_ = v138;
        v303.__r_.__value_.__r.__words[2] = v170 + v169;
        if (v139)
          goto LABEL_348;
LABEL_349:
        v303.__r_.__value_.__l.__size_ = v138;
        v139 = (unsigned __int8 *)v303.__r_.__value_.__r.__words[0];
        v132->i16[0] = atoi(v303.__r_.__value_.__l.__data_);
        std::istream::tellg();
        while ((*((_BYTE *)v137 + *(_QWORD *)(*a2 - 24)) & 2) == 0)
        {
          v175 = std::istream::peek();
          if (v175 <= 0x7F)
          {
            if ((*(_DWORD *)(MEMORY[0x24BDAC740] + 4 * v175 + 60) & 0x4000) == 0)
              break;
          }
          else if (!__maskrune(v175, 0x4000uLL))
          {
            break;
          }
          std::istream::seekg();
        }
        std::istream::tellg();
        v132 = (int8x16_t *)((char *)v132 + 2);
        if (v132 == v244)
        {
          v132 = (int8x16_t *)((char *)v241 + 2 * v240);
          if (v132 == v239)
            goto LABEL_369;
          goto LABEL_281;
        }
      }
    }
    v305 = 0;
    sub_20AF86710((uint64_t)v255, (uint64_t)v304, &v290);
    if (v305 == -1)
      sub_20AECFAB8();
    v255[0] = &v292;
    ((void (*)(std::string *__return_ptr, void **, _BYTE *))*(&off_24C4189B8 + v305))(&v303, v255, v304);
    if (v305 != -1)
      ((void (*)(void **, _BYTE *))off_24C418958[v305])(v255, v304);
    v31 = std::string::insert(&v303, 0, "Requested format ", 0x11uLL);
    v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
    v245.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v245.__r_.__value_.__l.__data_ = v32;
    v31->__r_.__value_.__l.__size_ = 0;
    v31->__r_.__value_.__r.__words[2] = 0;
    v31->__r_.__value_.__r.__words[0] = 0;
    v33 = std::string::append(&v245, " but pnm file contains ", 0x17uLL);
    v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
    v293.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v293.__r_.__value_.__l.__data_ = v34;
    v33->__r_.__value_.__l.__size_ = 0;
    v33->__r_.__value_.__r.__words[2] = 0;
    v33->__r_.__value_.__r.__words[0] = 0;
    v305 = 0;
    sub_20AF86710((uint64_t)&v292, (uint64_t)v304, (unsigned int *)&v278 + 1);
    if (v305 == -1)
      sub_20AECFAB8();
    v292 = &v291;
    ((void (*)(void **__return_ptr, char **, _BYTE *))*(&off_24C4189B8 + v305))(v255, &v292, v304);
    if (v305 != -1)
      ((void (*)(char **, _BYTE *))off_24C418958[v305])(&v292, v304);
    if ((v256 & 0x80u) == 0)
      v35 = v255;
    else
      v35 = (void **)v255[0];
    if ((v256 & 0x80u) == 0)
      v36 = v256;
    else
      v36 = (std::string::size_type)v255[1];
    v37 = std::string::append(&v293, (const std::string::value_type *)v35, v36);
    v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
    v247.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v247.__r_.__value_.__l.__data_ = v38;
    v37->__r_.__value_.__l.__size_ = 0;
    v37->__r_.__value_.__r.__words[2] = 0;
    v37->__r_.__value_.__r.__words[0] = 0;
    v39 = std::string::append(&v247, ".", 1uLL);
    v41 = (void *)v39->__r_.__value_.__r.__words[0];
    v40 = (void *)v39->__r_.__value_.__l.__size_;
    v257[0] = v39->__r_.__value_.__r.__words[2];
    *(_DWORD *)((char *)v257 + 3) = *(_DWORD *)((char *)&v39->__r_.__value_.__r.__words[2] + 3);
    v42 = SHIBYTE(v39->__r_.__value_.__r.__words[2]);
    v39->__r_.__value_.__l.__size_ = 0;
    v39->__r_.__value_.__r.__words[2] = 0;
    v39->__r_.__value_.__r.__words[0] = 0;
    if (v42 < 0)
    {
      sub_20AEC60F4(v258, v41, (unint64_t)v40);
    }
    else
    {
      v258[0] = v41;
      v258[1] = v40;
      *(_DWORD *)v259 = v257[0];
      *(_DWORD *)&v259[3] = *(_DWORD *)((char *)v257 + 3);
      v260 = v42;
    }
    v261 = 1;
    LOBYTE(v262) = 0;
    v266 = 0;
    v267 = 1;
    sub_20B52280C((uint64_t)v258, (uint64_t)&v306);
    *(_OWORD *)a4 = v306;
    *(_BYTE *)(a4 + 16) = 0;
    *(_BYTE *)(a4 + 112) = 0;
    if (v316)
    {
      *(_BYTE *)(a4 + 40) = 0;
      v68 = v309;
      if (v309)
      {
        *(_OWORD *)(a4 + 16) = v307;
        *(_QWORD *)(a4 + 32) = v308;
        v308 = 0;
        v307 = 0uLL;
        *(_BYTE *)(a4 + 40) = 1;
      }
      *(_BYTE *)(a4 + 48) = 0;
      *(_BYTE *)(a4 + 104) = 0;
      if (v315)
      {
        v69 = v312;
        *(_QWORD *)(a4 + 64) = v311;
        *(_OWORD *)(a4 + 48) = v310;
        v310 = 0uLL;
        *(_QWORD *)(a4 + 72) = v69;
        *(_OWORD *)(a4 + 80) = v313;
        *(_QWORD *)(a4 + 96) = v314;
        v311 = 0;
        v313 = 0uLL;
        v314 = 0;
        *(_BYTE *)(a4 + 104) = 1;
      }
      *(_BYTE *)(a4 + 112) = 1;
      *(_BYTE *)(a4 + 120) = 0;
      if (v68 && SHIBYTE(v308) < 0)
        operator delete((void *)v307);
    }
    else
    {
      *(_BYTE *)(a4 + 120) = 0;
    }
    if (v267)
    {
      if (v266)
      {
        if (v265 < 0)
          operator delete(v264);
        if (v263 < 0)
          operator delete(v262);
      }
      if (v261 && v260 < 0)
        operator delete(v258[0]);
    }
    if (v42 < 0)
    {
      operator delete(v41);
      if ((SHIBYTE(v247.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_151:
        if (((char)v256 & 0x80000000) == 0)
          goto LABEL_152;
        goto LABEL_158;
      }
    }
    else if ((SHIBYTE(v247.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_151;
    }
    operator delete(v247.__r_.__value_.__l.__data_);
    if (((char)v256 & 0x80000000) == 0)
    {
LABEL_152:
      if ((SHIBYTE(v293.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_153;
      goto LABEL_159;
    }
LABEL_158:
    operator delete(v255[0]);
    if ((SHIBYTE(v293.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_153:
      if ((SHIBYTE(v245.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_154;
      goto LABEL_160;
    }
LABEL_159:
    operator delete(v293.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v245.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_154:
      if ((SHIBYTE(v303.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_488;
LABEL_161:
      v12 = (void *)v303.__r_.__value_.__r.__words[0];
      goto LABEL_487;
    }
LABEL_160:
    operator delete(v245.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v303.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_488;
    goto LABEL_161;
  }
  v305 = 0;
  sub_20AF86710((uint64_t)&v245, (uint64_t)v304, &v290);
  if (v305 == -1)
    sub_20AECFAB8();
  v245.__r_.__value_.__r.__words[0] = (std::string::size_type)v255;
  ((void (*)(std::string *__return_ptr, std::string *, _BYTE *))*(&off_24C4189B8 + v305))(&v293, &v245, v304);
  if (v305 != -1)
    ((void (*)(std::string *, _BYTE *))off_24C418958[v305])(&v245, v304);
  v13 = std::string::insert(&v293, 0, "Format ", 7uLL);
  v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v247.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v247.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  v15 = std::string::append(&v247, " is not a valid pnm format.", 0x1BuLL);
  v17 = (void *)v15->__r_.__value_.__r.__words[0];
  v16 = (void *)v15->__r_.__value_.__l.__size_;
  LODWORD(v303.__r_.__value_.__l.__data_) = v15->__r_.__value_.__r.__words[2];
  *(_DWORD *)((char *)v303.__r_.__value_.__r.__words + 3) = *(_DWORD *)((char *)&v15->__r_.__value_.__r.__words[2] + 3);
  v18 = SHIBYTE(v15->__r_.__value_.__r.__words[2]);
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (v18 < 0)
  {
    sub_20AEC60F4(__dst, v17, (unint64_t)v16);
  }
  else
  {
    __dst[0] = v17;
    __dst[1] = v16;
    *(_DWORD *)v269 = v303.__r_.__value_.__l.__data_;
    *(_DWORD *)&v269[3] = *(_DWORD *)((char *)v303.__r_.__value_.__r.__words + 3);
    v270 = v18;
  }
  v271 = 1;
  LOBYTE(v272) = 0;
  v276 = 0;
  v277 = 1;
  sub_20B52280C((uint64_t)__dst, (uint64_t)&v306);
  *(_OWORD *)a4 = v306;
  *(_BYTE *)(a4 + 16) = 0;
  *(_BYTE *)(a4 + 112) = 0;
  if (v316)
  {
    *(_BYTE *)(a4 + 40) = 0;
    v46 = v309;
    if (v309)
    {
      *(_OWORD *)(a4 + 16) = v307;
      *(_QWORD *)(a4 + 32) = v308;
      v308 = 0;
      v307 = 0uLL;
      *(_BYTE *)(a4 + 40) = 1;
    }
    *(_BYTE *)(a4 + 48) = 0;
    *(_BYTE *)(a4 + 104) = 0;
    if (v315)
    {
      v47 = v312;
      *(_QWORD *)(a4 + 64) = v311;
      *(_OWORD *)(a4 + 48) = v310;
      v310 = 0uLL;
      *(_QWORD *)(a4 + 72) = v47;
      *(_OWORD *)(a4 + 80) = v313;
      *(_QWORD *)(a4 + 96) = v314;
      v311 = 0;
      v313 = 0uLL;
      v314 = 0;
      *(_BYTE *)(a4 + 104) = 1;
    }
    *(_BYTE *)(a4 + 112) = 1;
    *(_BYTE *)(a4 + 120) = 0;
    if (v46 && SHIBYTE(v308) < 0)
      operator delete((void *)v307);
  }
  else
  {
    *(_BYTE *)(a4 + 120) = 0;
  }
  if (v277)
  {
    if (v276)
    {
      if (v275 < 0)
        operator delete(__p);
      if (v273 < 0)
        operator delete(v272);
    }
    if (v271 && v270 < 0)
      operator delete(__dst[0]);
  }
  if (v18 < 0)
  {
    operator delete(v17);
    if ((SHIBYTE(v247.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_91:
      if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_95;
      goto LABEL_488;
    }
  }
  else if ((SHIBYTE(v247.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_91;
  }
  operator delete(v247.__r_.__value_.__l.__data_);
  if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
  {
LABEL_95:
    v12 = (void *)v293.__r_.__value_.__r.__words[0];
    goto LABEL_487;
  }
LABEL_488:
  if (!v289 && v288)
  {
    if (v287)
    {
      if (v286 < 0)
        operator delete(v285);
      if (v284 < 0)
        operator delete(v283);
    }
    if (v282)
    {
      if (v281 < 0)
        operator delete((void *)v280);
    }
  }
}

void sub_20B2D3F74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a71;
  void *v72;

  v72 = (void *)STACK[0x2D0];
  if (STACK[0x2D0])
  {
    STACK[0x2D8] = (unint64_t)v72;
    operator delete(v72);
  }
  sub_20B27CBB8((uint64_t)&STACK[0x280]);
  sub_20B0075D8((uint64_t)&a15);
  sub_20AFAB33C((uint64_t)&a23);
  sub_20AECD704((uint64_t)&a71);
  _Unwind_Resume(a1);
}

void sub_20B2D4318(uint64_t a1, _QWORD *a2)
{
  size_t v4;
  size_t v5;
  const void **p_dst;
  int v7;
  uint64_t v8;
  const void **v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  size_t v16;
  const void **v17;
  int v18;
  int v19;
  uint64_t v20;
  size_t v21;
  const void **v22;
  __int128 *v23;
  int v24;
  __int128 v25[6];
  char v26;
  __int128 v27[6];
  char v28;
  const void **__dst;
  size_t v30;
  int64_t v31;
  __int128 __s;
  __int128 __p;
  uint64_t v34;
  unsigned __int8 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  char v42;
  _QWORD *v43;
  __int128 v44;
  char v45;
  char v46;
  void *v47;
  char v48;
  void *v49;
  char v50;
  char v51;
  char v52;

  v43 = a2;
  if (sub_20B2D622C(&v43))
  {
    BYTE2(__s) = 0;
    LOWORD(__s) = 0;
    std::istream::read();
    v4 = strlen((const char *)&__s);
    if (v4 >= 0x7FFFFFFFFFFFFFF8)
      sub_20AEC0138();
    v5 = v4;
    if (v4 >= 0x17)
    {
      v10 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17)
        v10 = v4 | 7;
      v11 = v10 + 1;
      p_dst = (const void **)operator new(v10 + 1);
      v30 = v5;
      v31 = v11 | 0x8000000000000000;
      __dst = p_dst;
    }
    else
    {
      HIBYTE(v31) = v4;
      p_dst = (const void **)&__dst;
      if (!v4)
        goto LABEL_25;
    }
    memcpy(p_dst, &__s, v5);
LABEL_25:
    *((_BYTE *)p_dst + v5) = 0;
    if (sub_20B2D622C(&v43))
    {
      v12 = sub_20B2D63EC(a2);
      if (sub_20B2D622C(&v43))
      {
        v13 = sub_20B2D63EC(a2);
        if (sub_20B2D622C(&v43))
        {
          v14 = sub_20B2D63EC(a2);
          if ((*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 2) == 0)
          {
            v15 = v14;
            v16 = HIBYTE(v31);
            if (v31 < 0)
              v16 = v30;
            if (v16 != 2)
              goto LABEL_37;
            v17 = (const void **)&__dst;
            if (v31 < 0)
              v17 = __dst;
            if (*(_WORD *)v17 == 12880 || *(_WORD *)v17 == 13136)
            {
              v18 = 0;
            }
            else
            {
LABEL_37:
              if (!sub_20B1FC804((const void **)&__dst, "P5") && !sub_20B1FC804((const void **)&__dst, "P6"))
              {
                sub_20AF55B94((uint64_t)v27, "Invalid pnm file. Format magic number not recognized.");
                v28 = 1;
                sub_20B2CC5A8(5u, v27, (uint64_t)&__s);
                sub_20AFEDBD0(a1, (uint64_t)&__s);
                sub_20AECCE40((uint64_t)&__s);
                v23 = v27;
                goto LABEL_85;
              }
              v18 = 1;
            }
            v21 = HIBYTE(v31);
            if (v31 < 0)
              v21 = v30;
            if (v21 != 2)
              goto LABEL_97;
            v22 = (const void **)&__dst;
            if (v31 < 0)
              v22 = __dst;
            if (*(_WORD *)v22 == 12880 || *(_WORD *)v22 == 13648)
            {
              if (v15 == 255)
              {
                v24 = 1;
              }
              else
              {
                if (v15 != 0xFFFF)
                  goto LABEL_93;
                v24 = 2;
              }
            }
            else
            {
LABEL_97:
              if (sub_20B1FC804((const void **)&__dst, "P3") || sub_20B1FC804((const void **)&__dst, "P6"))
              {
                if (v15 != 255)
                {
                  if (v15 == 0xFFFF)
                  {
                    sub_20AF55B94((uint64_t)v25, "Unsupported pnm format. Loader does not support Rgb16u (.pbm) loading yet.");
                    v26 = 1;
                    sub_20B2CC5A8(5u, v25, (uint64_t)&__s);
                    sub_20AFEDBD0(a1, (uint64_t)&__s);
                    sub_20AECCE40((uint64_t)&__s);
                    v23 = v25;
LABEL_85:
                    sub_20AECCDB4((uint64_t)v23);
LABEL_61:
                    if ((SHIBYTE(v31) & 0x80000000) == 0)
                      return;
                    v9 = __dst;
                    goto LABEL_63;
                  }
LABEL_93:
                  sub_20B2D6874((uint64_t)&__s, v15);
                  sub_20AFEDBD0(a1, (uint64_t)&__s);
                  sub_20AECCE40((uint64_t)&__s);
                  goto LABEL_61;
                }
                v24 = 21;
              }
              else
              {
                v24 = 0;
              }
            }
            LOBYTE(__s) = 0;
            std::istream::read();
            if (__s == 13)
            {
              LOBYTE(__s) = 0;
              std::istream::read();
            }
            *(_DWORD *)a1 = v18;
            *(_DWORD *)(a1 + 4) = v24;
            *(_DWORD *)(a1 + 8) = v12;
            *(_DWORD *)(a1 + 12) = v13;
            *(_BYTE *)(a1 + 120) = 1;
            goto LABEL_61;
          }
        }
      }
    }
    sub_20AF55B94((uint64_t)&v44, "Invalid pnm file. Unexpected end of file in header.");
    v52 = 1;
    sub_20AF558C0(5u, &v44, (uint64_t)&__s);
    if (!v52)
      goto LABEL_52;
    if (!v51)
      goto LABEL_49;
    if (v50 < 0)
    {
      operator delete(v49);
      if ((v48 & 0x80000000) == 0)
      {
LABEL_49:
        if (v46)
          goto LABEL_50;
        goto LABEL_52;
      }
    }
    else if ((v48 & 0x80000000) == 0)
    {
      goto LABEL_49;
    }
    operator delete(v47);
    if (v46)
    {
LABEL_50:
      if (v45 < 0)
        operator delete((void *)v44);
    }
LABEL_52:
    *(_OWORD *)a1 = __s;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (v42)
    {
      *(_BYTE *)(a1 + 40) = 0;
      v19 = v35;
      if (v35)
      {
        *(_OWORD *)(a1 + 16) = __p;
        *(_QWORD *)(a1 + 32) = v34;
        v34 = 0;
        __p = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if (v41)
      {
        v20 = v38;
        *(_QWORD *)(a1 + 64) = v37;
        *(_OWORD *)(a1 + 48) = v36;
        v36 = 0uLL;
        *(_QWORD *)(a1 + 72) = v20;
        *(_OWORD *)(a1 + 80) = v39;
        *(_QWORD *)(a1 + 96) = v40;
        v37 = 0;
        v39 = 0uLL;
        v40 = 0;
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (v19 && SHIBYTE(v34) < 0)
        operator delete((void *)__p);
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 0;
    }
    goto LABEL_61;
  }
  sub_20AF55B94((uint64_t)&v44, "Invalid pnm file. Unexpected end of file in header.");
  v52 = 1;
  sub_20AF558C0(5u, &v44, (uint64_t)&__s);
  if (v52)
  {
    if (!v51)
      goto LABEL_10;
    if (v50 < 0)
    {
      operator delete(v49);
      if ((v48 & 0x80000000) == 0)
      {
LABEL_10:
        if (!v46)
          goto LABEL_13;
LABEL_11:
        if (v45 < 0)
          operator delete((void *)v44);
        goto LABEL_13;
      }
    }
    else if ((v48 & 0x80000000) == 0)
    {
      goto LABEL_10;
    }
    operator delete(v47);
    if (!v46)
      goto LABEL_13;
    goto LABEL_11;
  }
LABEL_13:
  *(_OWORD *)a1 = __s;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (!v42)
  {
    *(_BYTE *)(a1 + 120) = 0;
    return;
  }
  *(_BYTE *)(a1 + 40) = 0;
  v7 = v35;
  if (v35)
  {
    *(_OWORD *)(a1 + 16) = __p;
    *(_QWORD *)(a1 + 32) = v34;
    v34 = 0;
    __p = 0uLL;
    *(_BYTE *)(a1 + 40) = 1;
  }
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 104) = 0;
  if (v41)
  {
    v8 = v38;
    *(_QWORD *)(a1 + 64) = v37;
    *(_OWORD *)(a1 + 48) = v36;
    v36 = 0uLL;
    *(_QWORD *)(a1 + 72) = v8;
    *(_OWORD *)(a1 + 80) = v39;
    *(_QWORD *)(a1 + 96) = v40;
    v37 = 0;
    v39 = 0uLL;
    v40 = 0;
    *(_BYTE *)(a1 + 104) = 1;
  }
  *(_BYTE *)(a1 + 112) = 1;
  *(_BYTE *)(a1 + 120) = 0;
  if (v7 && SHIBYTE(v34) < 0)
  {
    v9 = (const void **)__p;
LABEL_63:
    operator delete(v9);
  }
}

void sub_20B2D49C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a40 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20B2D4A5C(_DWORD *a1@<X0>, _QWORD *a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  unsigned int v9;
  unsigned int v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  void *size;
  void *v15;
  int v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  void **v21;
  std::string::size_type v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  void *v26;
  void *v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  const char *v31;
  const char *v32;
  int v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  int v38;
  _BYTE *v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  int v54;
  uint64_t v55;
  std::string *v56;
  __int128 v57;
  std::string *v58;
  unint64_t v59;
  void *v60;
  int v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  _BYTE *v81;
  int v82;
  int v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  unint64_t *v90;
  unint64_t v91;
  unint64_t v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  std::string::size_type v98;
  std::__shared_weak_count *v99;
  unint64_t *v100;
  unint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  unint64_t *v106;
  unint64_t v107;
  unint64_t v108;
  int v109;
  std::string::size_type v110;
  unint64_t *v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  unint64_t *v116;
  unint64_t v117;
  unint64_t v118;
  int v119;
  std::string::size_type v120;
  unint64_t *v121;
  __int128 v122;
  __int128 __p;
  uint64_t v124;
  unsigned __int8 v125;
  void *v126[2];
  uint64_t v127;
  uint64_t v128;
  void *v129[2];
  uint64_t v130;
  char v131;
  unsigned __int8 v132;
  char v133;
  void *v134[2];
  unsigned __int8 v135;
  unsigned int v136[2];
  void *v137[2];
  _BYTE v138[7];
  char v139;
  char v140;
  void *v141;
  char v142;
  void *v143;
  char v144;
  char v145;
  char v146;
  void *__dst[2];
  _BYTE v148[7];
  char v149;
  char v150;
  void *v151;
  char v152;
  void *v153;
  char v154;
  char v155;
  char v156;
  unsigned int v157;
  int v158;
  char *v159;
  std::string v160;
  std::string v161;
  std::string v162;
  char v163;
  void *v164;
  char v165;
  void *v166;
  char v167;
  char v168;
  char v169;
  _BYTE v170[32];
  uint64_t v171;
  int v172;
  unsigned int v173;
  __int128 v174;
  uint64_t v175;
  _BYTE *v176;
  __int128 v177;
  uint64_t v178;
  char v179;
  unsigned __int8 v180;
  std::string v181;
  unsigned int v182;
  char v183;

  v158 = a4;
  v9 = a1[12];
  v157 = v9;
  v10 = v9 - 1;
  if (v9 != 1 && v9 != 21 && v9 != 2 && (char *)&xmmword_20B5F3A80 - (char *)&unk_20B5F3A74 == 12)
  {
    *(_DWORD *)&v170[24] = 0;
    sub_20AF86710((uint64_t)&v161, (uint64_t)v170, &v157);
    if (*(_DWORD *)&v170[24] == -1)
      sub_20AECFAB8();
    v161.__r_.__value_.__r.__words[0] = (std::string::size_type)v134;
    ((void (*)(std::string *__return_ptr, std::string *, _BYTE *))*(&off_24C4189B8
                                                                             + *(unsigned int *)&v170[24]))(&v181, &v161, v170);
    if (*(_DWORD *)&v170[24] != -1)
      ((void (*)(std::string *, _BYTE *))off_24C418958[*(unsigned int *)&v170[24]])(&v161, v170);
    v11 = std::string::insert(&v181, 0, "Image is of format ", 0x13uLL);
    v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v162.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v162.__r_.__value_.__l.__data_ = v12;
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    v13 = std::string::append(&v162, " but must be 8-bit Gray or Rgb to save as pnm.", 0x2EuLL);
    v15 = (void *)v13->__r_.__value_.__r.__words[0];
    size = (void *)v13->__r_.__value_.__l.__size_;
    LODWORD(v160.__r_.__value_.__l.__data_) = v13->__r_.__value_.__r.__words[2];
    *(_DWORD *)((char *)v160.__r_.__value_.__r.__words + 3) = *(_DWORD *)((char *)&v13->__r_.__value_.__r.__words[2] + 3);
    v16 = SHIBYTE(v13->__r_.__value_.__r.__words[2]);
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    if (v16 < 0)
    {
      sub_20AEC60F4(__dst, v15, (unint64_t)size);
    }
    else
    {
      __dst[0] = v15;
      __dst[1] = size;
      *(_DWORD *)v148 = v160.__r_.__value_.__l.__data_;
      *(_DWORD *)&v148[3] = *(_DWORD *)((char *)v160.__r_.__value_.__r.__words + 3);
      v149 = v16;
    }
    v150 = 1;
    LOBYTE(v151) = 0;
    v155 = 0;
    v156 = 1;
    sub_20B52280C((uint64_t)__dst, (uint64_t)&v122);
    *(_OWORD *)a5 = v122;
    *(_BYTE *)(a5 + 16) = 0;
    *(_BYTE *)(a5 + 112) = 0;
    if (v132)
    {
      *(_BYTE *)(a5 + 40) = 0;
      v33 = v125;
      if (v125)
      {
        *(_OWORD *)(a5 + 16) = __p;
        *(_QWORD *)(a5 + 32) = v124;
        v124 = 0;
        __p = 0uLL;
        *(_BYTE *)(a5 + 40) = 1;
      }
      *(_BYTE *)(a5 + 48) = 0;
      *(_BYTE *)(a5 + 104) = 0;
      if (v131)
      {
        v34 = v128;
        *(_QWORD *)(a5 + 64) = v127;
        *(_OWORD *)(a5 + 48) = *(_OWORD *)v126;
        v126[0] = 0;
        v126[1] = 0;
        *(_QWORD *)(a5 + 72) = v34;
        *(_OWORD *)(a5 + 80) = *(_OWORD *)v129;
        *(_QWORD *)(a5 + 96) = v130;
        v127 = 0;
        v129[0] = 0;
        v129[1] = 0;
        v130 = 0;
        *(_BYTE *)(a5 + 104) = 1;
      }
      *(_BYTE *)(a5 + 112) = 1;
      *(_BYTE *)(a5 + 120) = 0;
      if (v33 && SHIBYTE(v124) < 0)
        operator delete((void *)__p);
      if (!v156)
      {
LABEL_52:
        if (v16 < 0)
        {
          operator delete(v15);
          if ((SHIBYTE(v162.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_54:
            if ((SHIBYTE(v181.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              return;
LABEL_58:
            v35 = (void *)v181.__r_.__value_.__r.__words[0];
LABEL_309:
            operator delete(v35);
            return;
          }
        }
        else if ((SHIBYTE(v162.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
          goto LABEL_54;
        }
        operator delete(v162.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v181.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          return;
        goto LABEL_58;
      }
    }
    else
    {
      *(_BYTE *)(a5 + 120) = 0;
      if (!v156)
        goto LABEL_52;
    }
    if (!v155)
      goto LABEL_49;
    if (v154 < 0)
    {
      operator delete(v153);
      if ((v152 & 0x80000000) == 0)
      {
LABEL_49:
        if (!v150)
          goto LABEL_52;
LABEL_50:
        if (v149 < 0)
          operator delete(__dst[0]);
        goto LABEL_52;
      }
    }
    else if ((v152 & 0x80000000) == 0)
    {
      goto LABEL_49;
    }
    operator delete(v151);
    if (!v150)
      goto LABEL_52;
    goto LABEL_50;
  }
  if (a4 && (a4 == 1 && v10 > 1 || a4 == 2 && v9 != 21))
  {
    *(_DWORD *)&v170[24] = 0;
    sub_20B2CC8CC((uint64_t)v134, (uint64_t)v170, &v158);
    if (*(_DWORD *)&v170[24] == -1)
      sub_20AECFAB8();
    v134[0] = &v159;
    ((void (*)(std::string *__return_ptr, void **, _BYTE *))*(&off_24C4189B8 + *(unsigned int *)&v170[24]))(&v160, v134, v170);
    if (*(_DWORD *)&v170[24] != -1)
      ((void (*)(void **, _BYTE *))off_24C418958[*(unsigned int *)&v170[24]])(v134, v170);
    v17 = std::string::insert(&v160, 0, "Requested io-format ", 0x14uLL);
    v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v161.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v161.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    v19 = std::string::append(&v161, " but image is of color format ", 0x1EuLL);
    v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v181.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v181.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    *(_DWORD *)&v170[24] = 0;
    sub_20AF86710((uint64_t)&v159, (uint64_t)v170, &v157);
    if (*(_DWORD *)&v170[24] == -1)
      sub_20AECFAB8();
    v159 = &v183;
    ((void (*)(void **__return_ptr, char **, _BYTE *))*(&off_24C4189B8 + *(unsigned int *)&v170[24]))(v134, &v159, v170);
    if (*(_DWORD *)&v170[24] != -1)
      ((void (*)(char **, _BYTE *))off_24C418958[*(unsigned int *)&v170[24]])(&v159, v170);
    if ((v135 & 0x80u) == 0)
      v21 = v134;
    else
      v21 = (void **)v134[0];
    if ((v135 & 0x80u) == 0)
      v22 = v135;
    else
      v22 = (std::string::size_type)v134[1];
    v23 = std::string::append(&v181, (const std::string::value_type *)v21, v22);
    v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v162.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v162.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    v25 = std::string::append(&v162, " incompatible with pnm.", 0x17uLL);
    v27 = (void *)v25->__r_.__value_.__r.__words[0];
    v26 = (void *)v25->__r_.__value_.__l.__size_;
    v136[0] = v25->__r_.__value_.__r.__words[2];
    *(unsigned int *)((char *)v136 + 3) = *(_DWORD *)((char *)&v25->__r_.__value_.__r.__words[2] + 3);
    v28 = SHIBYTE(v25->__r_.__value_.__r.__words[2]);
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    if (v28 < 0)
    {
      sub_20AEC60F4(v137, v27, (unint64_t)v26);
    }
    else
    {
      v137[0] = v27;
      v137[1] = v26;
      *(_DWORD *)v138 = v136[0];
      *(_DWORD *)&v138[3] = *(unsigned int *)((char *)v136 + 3);
      v139 = v28;
    }
    v140 = 1;
    LOBYTE(v141) = 0;
    v145 = 0;
    v146 = 1;
    sub_20B52280C((uint64_t)v137, (uint64_t)&v122);
    *(_OWORD *)a5 = v122;
    *(_BYTE *)(a5 + 16) = 0;
    *(_BYTE *)(a5 + 112) = 0;
    if (v132)
    {
      *(_BYTE *)(a5 + 40) = 0;
      v54 = v125;
      if (v125)
      {
        *(_OWORD *)(a5 + 16) = __p;
        *(_QWORD *)(a5 + 32) = v124;
        v124 = 0;
        __p = 0uLL;
        *(_BYTE *)(a5 + 40) = 1;
      }
      *(_BYTE *)(a5 + 48) = 0;
      *(_BYTE *)(a5 + 104) = 0;
      if (v131)
      {
        v55 = v128;
        *(_QWORD *)(a5 + 64) = v127;
        *(_OWORD *)(a5 + 48) = *(_OWORD *)v126;
        v126[0] = 0;
        v126[1] = 0;
        *(_QWORD *)(a5 + 72) = v55;
        *(_OWORD *)(a5 + 80) = *(_OWORD *)v129;
        *(_QWORD *)(a5 + 96) = v130;
        v127 = 0;
        v129[0] = 0;
        v129[1] = 0;
        v130 = 0;
        *(_BYTE *)(a5 + 104) = 1;
      }
      *(_BYTE *)(a5 + 112) = 1;
      *(_BYTE *)(a5 + 120) = 0;
      if (v54 && SHIBYTE(v124) < 0)
        operator delete((void *)__p);
    }
    else
    {
      *(_BYTE *)(a5 + 120) = 0;
    }
    if (v146)
    {
      if (v145)
      {
        if (v144 < 0)
          operator delete(v143);
        if (v142 < 0)
          operator delete(v141);
      }
      if (v140)
      {
        if (v139 < 0)
          operator delete(v137[0]);
      }
    }
    if (v28 < 0)
    {
      operator delete(v27);
      if ((SHIBYTE(v162.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_134:
        if (((char)v135 & 0x80000000) == 0)
          goto LABEL_135;
        goto LABEL_141;
      }
    }
    else if ((SHIBYTE(v162.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_134;
    }
    operator delete(v162.__r_.__value_.__l.__data_);
    if (((char)v135 & 0x80000000) == 0)
    {
LABEL_135:
      if ((SHIBYTE(v181.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_136;
      goto LABEL_142;
    }
LABEL_141:
    operator delete(v134[0]);
    if ((SHIBYTE(v181.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_136:
      if ((SHIBYTE(v161.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_137;
      goto LABEL_143;
    }
LABEL_142:
    operator delete(v181.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v161.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_137:
      if ((SHIBYTE(v160.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        return;
LABEL_144:
      v35 = (void *)v160.__r_.__value_.__r.__words[0];
      goto LABEL_309;
    }
LABEL_143:
    operator delete(v161.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v160.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
    goto LABEL_144;
  }
  v30 = a1[6];
  v29 = a1[7];
  v136[0] = v9;
  if (v10 <= 1)
  {
    v31 = "P2\n";
    v32 = "P5\n";
    goto LABEL_61;
  }
  if (v9 != 21)
  {
    v182 = 0;
    sub_20AF86710((uint64_t)v134, (uint64_t)&v181, v136);
    if (v182 == -1)
      sub_20AECFAB8();
    v134[0] = &v183;
    ((void (*)(std::string *__return_ptr, void **, std::string *))*(&off_24C4189B8 + v182))(&v160, v134, &v181);
    if (v182 != -1)
      ((void (*)(void **, std::string *))off_24C418958[v182])(v134, &v181);
    v56 = std::string::insert(&v160, 0, "Image is of format ", 0x13uLL);
    v57 = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
    v161.__r_.__value_.__r.__words[2] = v56->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v161.__r_.__value_.__l.__data_ = v57;
    v56->__r_.__value_.__l.__size_ = 0;
    v56->__r_.__value_.__r.__words[2] = 0;
    v56->__r_.__value_.__r.__words[0] = 0;
    v58 = std::string::append(&v161, " but must be 8-bit Gray or Rgb to save as pnm.", 0x2EuLL);
    v60 = (void *)v58->__r_.__value_.__r.__words[0];
    v59 = v58->__r_.__value_.__l.__size_;
    LODWORD(v159) = v58->__r_.__value_.__r.__words[2];
    *(_DWORD *)((char *)&v159 + 3) = *(_DWORD *)((char *)&v58->__r_.__value_.__r.__words[2] + 3);
    v61 = SHIBYTE(v58->__r_.__value_.__r.__words[2]);
    v58->__r_.__value_.__l.__size_ = 0;
    v58->__r_.__value_.__r.__words[2] = 0;
    v58->__r_.__value_.__r.__words[0] = 0;
    if (v61 < 0)
    {
      sub_20AEC60F4(&v162, v60, v59);
    }
    else
    {
      v162.__r_.__value_.__r.__words[0] = (std::string::size_type)v60;
      v162.__r_.__value_.__l.__size_ = v59;
      LODWORD(v162.__r_.__value_.__r.__words[2]) = (_DWORD)v159;
      *(_DWORD *)((char *)&v162.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)&v159 + 3);
      *((_BYTE *)&v162.__r_.__value_.__s + 23) = v61;
    }
    v163 = 1;
    LOBYTE(v164) = 0;
    v168 = 0;
    v169 = 1;
    v81 = v170;
    sub_20B52280C((uint64_t)&v162, (uint64_t)v170);
    v122 = *(_OWORD *)v170;
    LOBYTE(__p) = 0;
    v82 = v180;
    if (!v180)
    {
      v85 = 0;
      v84 = 0;
      v83 = 0;
      goto LABEL_282;
    }
    v125 = 0;
    if ((_BYTE)v172)
    {
      __p = *(_OWORD *)&v170[16];
      v124 = v171;
      *(_QWORD *)&v170[24] = 0;
      v171 = 0;
      *(_QWORD *)&v170[16] = 0;
      v83 = 1;
      v125 = 1;
      LOBYTE(v126[0]) = 0;
      v131 = 0;
      if (v179)
      {
LABEL_207:
        v81 = v176;
        v127 = v175;
        *(_OWORD *)v126 = v174;
        v174 = 0uLL;
        *(_OWORD *)v129 = v177;
        v130 = v178;
        v175 = 0;
        v177 = 0uLL;
        v178 = 0;
        v84 = 1;
        v131 = 1;
LABEL_279:
        v85 = 1;
        if ((_BYTE)v172 && SHIBYTE(v171) < 0)
          operator delete(*(void **)&v170[16]);
LABEL_282:
        if (v169)
        {
          if (v168)
          {
            if (v167 < 0)
              operator delete(v166);
            if (v165 < 0)
              operator delete(v164);
          }
          if (v163 && SHIBYTE(v162.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v162.__r_.__value_.__l.__data_);
        }
        if (v61 < 0)
        {
          operator delete(v60);
          if ((SHIBYTE(v161.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_293:
            if ((SHIBYTE(v160.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_294;
LABEL_313:
            operator delete(v160.__r_.__value_.__l.__data_);
LABEL_294:
            *(_BYTE *)(a5 + 120) = 0;
            *(_OWORD *)a5 = v122;
            *(_BYTE *)(a5 + 16) = 0;
            *(_BYTE *)(a5 + 112) = 0;
            if (v82)
            {
              *(_BYTE *)(a5 + 40) = 0;
              if (v83)
              {
                *(_OWORD *)(a5 + 16) = __p;
                *(_QWORD *)(a5 + 32) = v124;
                v124 = 0;
                __p = 0uLL;
                *(_BYTE *)(a5 + 40) = 1;
              }
              *(_BYTE *)(a5 + 48) = 0;
              *(_BYTE *)(a5 + 104) = 0;
              if (v84)
              {
                *(_OWORD *)(a5 + 48) = *(_OWORD *)v126;
                *(_QWORD *)(a5 + 64) = v127;
                v126[0] = 0;
                v126[1] = 0;
                *(_QWORD *)(a5 + 72) = v81;
                *(_OWORD *)(a5 + 80) = *(_OWORD *)v129;
                *(_QWORD *)(a5 + 96) = v130;
                v127 = 0;
                v129[0] = 0;
                v129[1] = 0;
                v130 = 0;
                *(_BYTE *)(a5 + 104) = 1;
              }
              *(_BYTE *)(a5 + 112) = 1;
            }
            goto LABEL_300;
          }
        }
        else if ((SHIBYTE(v161.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
          goto LABEL_293;
        }
        operator delete(v161.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v160.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_294;
        goto LABEL_313;
      }
    }
    else
    {
      v83 = 0;
      LOBYTE(v126[0]) = 0;
      v131 = 0;
      if (v179)
        goto LABEL_207;
    }
    v84 = 0;
    goto LABEL_279;
  }
  v31 = "P3\n";
  v32 = "P6\n";
LABEL_61:
  if (a3 == 1)
    v36 = (uint64_t)v32;
  else
    v36 = (uint64_t)v31;
  sub_20AEC01D0(a2, v36, 3);
  if (v9 == 21 || v9 == 1)
    v38 = 255;
  else
    v38 = 0xFFFF;
  std::to_string((std::string *)v170, v30);
  if (v170[23] >= 0)
    v39 = v170;
  else
    v39 = *(_BYTE **)v170;
  if (v170[23] >= 0)
    v40 = v170[23];
  else
    v40 = *(_QWORD *)&v170[8];
  sub_20AEC01D0(a2, (uint64_t)v39, v40);
  if ((v170[23] & 0x80000000) != 0)
    operator delete(*(void **)v170);
  sub_20AEC01D0(a2, (uint64_t)" ", 1);
  std::to_string((std::string *)v170, v29);
  if (v170[23] >= 0)
    v41 = v170;
  else
    v41 = *(_BYTE **)v170;
  if (v170[23] >= 0)
    v42 = v170[23];
  else
    v42 = *(_QWORD *)&v170[8];
  sub_20AEC01D0(a2, (uint64_t)v41, v42);
  if ((v170[23] & 0x80000000) != 0)
    operator delete(*(void **)v170);
  sub_20AEC01D0(a2, (uint64_t)"\n", 1);
  std::to_string((std::string *)v170, v38);
  if (v170[23] >= 0)
    v43 = v170;
  else
    v43 = *(_BYTE **)v170;
  if (v170[23] >= 0)
    v44 = v170[23];
  else
    v44 = *(_QWORD *)&v170[8];
  sub_20AEC01D0(a2, (uint64_t)v43, v44);
  if ((v170[23] & 0x80000000) != 0)
    operator delete(*(void **)v170);
  sub_20AEC01D0(a2, (uint64_t)"\n", 1);
  v133 = 1;
  switch(v157)
  {
    case 0x15u:
      *(_QWORD *)v170 = &off_24C4082F8;
      sub_20B2D7B44((uint64_t)a1, (uint64_t)&v170[8]);
      if (a3 == 1)
      {
        v71 = *(_QWORD *)&v170[8];
        if (!*(_QWORD *)&v170[8])
          goto LABEL_231;
        v72 = *(std::__shared_weak_count **)&v170[16];
        if (*(_QWORD *)&v170[16])
        {
          v73 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
          do
            v74 = __ldxr(v73);
          while (__stxr(v74 + 1, v73));
          do
            v75 = __ldaxr(v73);
          while (__stlxr(v75 - 1, v73));
          if (!v75)
          {
            ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
            std::__shared_weak_count::__release_weak(v72);
          }
          v76 = *(std::__shared_weak_count **)&v170[16];
          v71 = *(_QWORD *)&v170[8];
          if (*(_QWORD *)&v170[16])
          {
            v77 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
            do
              v78 = __ldxr(v77);
            while (__stxr(v78 + 1, v77));
            do
              v79 = __ldaxr(v77);
            while (__stlxr(v79 - 1, v77));
            if (!v79)
            {
              ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
              std::__shared_weak_count::__release_weak(v76);
            }
          }
        }
        if (BYTE1(v176))
          (*(void (**)(std::string *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v71 + 96))(&v162, v71, 0);
        else
LABEL_231:
          v162.__r_.__value_.__r.__words[0] = 0;
        if ((_DWORD)v171)
        {
          if (HIDWORD(v171))
          {
            v102 = v172;
            if (v172)
            {
              v103 = DWORD1(v174);
              v104 = *(_QWORD *)&v170[24];
              if ((_BYTE)v176 && *(_QWORD *)&v170[24])
              {
                v105 = *(_OWORD *)&v170[8];
                if (*(_QWORD *)&v170[16])
                {
                  v106 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
                  do
                    v107 = __ldxr(v106);
                  while (__stxr(v107 + 1, v106));
                  do
                    v108 = __ldaxr(v106);
                  while (__stlxr(v108 - 1, v106));
                  if (!v108)
                  {
                    (*(void (**)(_QWORD))(**((_QWORD **)&v105 + 1) + 16))(*((_QWORD *)&v105 + 1));
                    std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v105 + 1));
                  }
                }
                (*(void (**)(_QWORD, _QWORD, const char *))(*(_QWORD *)v105 + 88))(v105, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v104 = *(_QWORD *)&v170[24];
              }
              v109 = v102 - 1;
              if (v102 != 1)
              {
                do
                {
                  std::ostream::write();
                  v104 += v103;
                  --v109;
                }
                while (v109);
              }
              std::ostream::write();
            }
          }
        }
        v110 = v162.__r_.__value_.__r.__words[0];
        v162.__r_.__value_.__r.__words[0] = 0;
        if (v110)
          (*(void (**)(std::string::size_type))(*(_QWORD *)v110 + 8))(v110);
      }
      else
      {
        v181.__r_.__value_.__r.__words[0] = 16;
        v181.__r_.__value_.__l.__size_ = 0x1000000008;
        v181.__r_.__value_.__r.__words[2] = 14;
        v80 = operator new(0x18uLL);
        *(_OWORD *)v80 = xmmword_24C4189D0;
        v80[2] = "\n";
        v162.__r_.__value_.__r.__words[0] = (std::string::size_type)v80;
        v162.__r_.__value_.__l.__size_ = (std::string::size_type)(v80 + 3);
        v162.__r_.__value_.__r.__words[2] = (std::string::size_type)(v80 + 3);
        v163 = 1;
        sub_20B2DB8EC((uint64_t)&v181, a2, (uint64_t)v170, (uint64_t)&v162);
        if (v163 && v162.__r_.__value_.__r.__words[0])
        {
          v162.__r_.__value_.__l.__size_ = v162.__r_.__value_.__r.__words[0];
          operator delete(v162.__r_.__value_.__l.__data_);
        }
        if (DWORD2(v174) && HIDWORD(v174))
          sub_20AEC01D0(a2, (uint64_t)"\n", 1);
      }
      v99 = *(std::__shared_weak_count **)&v170[16];
      if (!*(_QWORD *)&v170[16])
        goto LABEL_275;
      v111 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
      do
        v101 = __ldaxr(v111);
      while (__stlxr(v101 - 1, v111));
      break;
    case 2u:
      *(_QWORD *)v170 = &off_24C405448;
      sub_20B2D7590((uint64_t)a1, (uint64_t)&v170[8]);
      if (a3 == 1)
      {
        v62 = *(_QWORD *)&v170[8];
        if (!*(_QWORD *)&v170[8])
          goto LABEL_209;
        v63 = *(std::__shared_weak_count **)&v170[16];
        if (*(_QWORD *)&v170[16])
        {
          v64 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
          do
            v65 = __ldxr(v64);
          while (__stxr(v65 + 1, v64));
          do
            v66 = __ldaxr(v64);
          while (__stlxr(v66 - 1, v64));
          if (!v66)
          {
            ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
            std::__shared_weak_count::__release_weak(v63);
          }
          v67 = *(std::__shared_weak_count **)&v170[16];
          v62 = *(_QWORD *)&v170[8];
          if (*(_QWORD *)&v170[16])
          {
            v68 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
            do
              v69 = __ldxr(v68);
            while (__stxr(v69 + 1, v68));
            do
              v70 = __ldaxr(v68);
            while (__stlxr(v70 - 1, v68));
            if (!v70)
            {
              ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
              std::__shared_weak_count::__release_weak(v67);
            }
          }
        }
        if (BYTE1(v174))
          (*(void (**)(std::string *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v62 + 96))(&v162, v62, 0);
        else
LABEL_209:
          v162.__r_.__value_.__r.__words[0] = 0;
        v86 = v173;
        v87 = *(_QWORD *)&v170[24];
        v88 = v171;
        if ((_BYTE)v174 && *(_QWORD *)&v170[24])
        {
          v89 = *(_OWORD *)&v170[8];
          if (*(_QWORD *)&v170[16])
          {
            v90 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
            do
              v91 = __ldxr(v90);
            while (__stxr(v91 + 1, v90));
            do
              v92 = __ldaxr(v90);
            while (__stlxr(v92 - 1, v90));
            if (!v92)
            {
              (*(void (**)(_QWORD))(**((_QWORD **)&v89 + 1) + 16))(*((_QWORD *)&v89 + 1));
              std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v89 + 1));
            }
          }
          (*(void (**)(_QWORD, _QWORD, const char *))(*(_QWORD *)v89 + 88))(v89, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v87 = *(_QWORD *)&v170[24];
        }
        v93 = v86 * HIDWORD(v88);
        if ((_DWORD)v86 * HIDWORD(v88) && (_DWORD)v88)
        {
          v94 = 2 * v88;
          v95 = 2 * v86;
          v96 = v87 + 2 * v93;
          do
          {
            v97 = 0;
            do
            {
              LOWORD(v181.__r_.__value_.__l.__data_) = bswap32(*(unsigned __int16 *)(v87 + v97)) >> 16;
              std::ostream::write();
              v97 += 2;
            }
            while (v94 != v97);
            v87 += v95;
          }
          while (v87 != v96);
        }
        v98 = v162.__r_.__value_.__r.__words[0];
        v162.__r_.__value_.__r.__words[0] = 0;
        if (v98)
          (*(void (**)(std::string::size_type))(*(_QWORD *)v98 + 8))(v98);
      }
      else
      {
        v181.__r_.__value_.__r.__words[0] = 16;
        v181.__r_.__value_.__l.__size_ = 0x1000000008;
        v181.__r_.__value_.__r.__words[2] = 14;
        v162.__r_.__value_.__s.__data_[0] = 0;
        v163 = 0;
        sub_20B2DAA64((uint64_t)&v181, a2, (uint64_t)v170, (uint64_t)&v162);
        if (v163 && v162.__r_.__value_.__r.__words[0])
        {
          v162.__r_.__value_.__l.__size_ = v162.__r_.__value_.__r.__words[0];
          operator delete(v162.__r_.__value_.__l.__data_);
        }
        if ((_DWORD)v171 && HIDWORD(v171))
          sub_20AEC01D0(a2, (uint64_t)"\n", 1);
      }
      v99 = *(std::__shared_weak_count **)&v170[16];
      if (!*(_QWORD *)&v170[16])
        goto LABEL_275;
      v100 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
      do
        v101 = __ldaxr(v100);
      while (__stlxr(v101 - 1, v100));
      break;
    case 1u:
      *(_QWORD *)v170 = &off_24C4051D0;
      sub_20B2D6D24((uint64_t)a1, (uint64_t)&v170[8]);
      if (a3 == 1)
      {
        v45 = *(_QWORD *)&v170[8];
        if (!*(_QWORD *)&v170[8])
          goto LABEL_253;
        v46 = *(std::__shared_weak_count **)&v170[16];
        if (*(_QWORD *)&v170[16])
        {
          v47 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
          do
            v48 = __ldxr(v47);
          while (__stxr(v48 + 1, v47));
          do
            v49 = __ldaxr(v47);
          while (__stlxr(v49 - 1, v47));
          if (!v49)
          {
            ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
            std::__shared_weak_count::__release_weak(v46);
          }
          v50 = *(std::__shared_weak_count **)&v170[16];
          v45 = *(_QWORD *)&v170[8];
          if (*(_QWORD *)&v170[16])
          {
            v51 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
            do
              v52 = __ldxr(v51);
            while (__stxr(v52 + 1, v51));
            do
              v53 = __ldaxr(v51);
            while (__stlxr(v53 - 1, v51));
            if (!v53)
            {
              ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
              std::__shared_weak_count::__release_weak(v50);
            }
          }
        }
        if (BYTE1(v174))
          (*(void (**)(std::string *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v45 + 96))(&v162, v45, 0);
        else
LABEL_253:
          v162.__r_.__value_.__r.__words[0] = 0;
        if ((_DWORD)v171)
        {
          v112 = HIDWORD(v171);
          if (HIDWORD(v171))
          {
            v113 = v173;
            v114 = *(_QWORD *)&v170[24];
            if ((_BYTE)v174 && *(_QWORD *)&v170[24])
            {
              v115 = *(_OWORD *)&v170[8];
              if (*(_QWORD *)&v170[16])
              {
                v116 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
                do
                  v117 = __ldxr(v116);
                while (__stxr(v117 + 1, v116));
                do
                  v118 = __ldaxr(v116);
                while (__stlxr(v118 - 1, v116));
                if (!v118)
                {
                  (*(void (**)(_QWORD))(**((_QWORD **)&v115 + 1) + 16))(*((_QWORD *)&v115 + 1));
                  std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v115 + 1));
                }
              }
              (*(void (**)(_QWORD, _QWORD, const char *))(*(_QWORD *)v115 + 88))(v115, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v114 = *(_QWORD *)&v170[24];
            }
            v119 = v112 - 1;
            if (v112 != 1)
            {
              do
              {
                std::ostream::write();
                v114 += v113;
                --v119;
              }
              while (v119);
            }
            std::ostream::write();
          }
        }
        v120 = v162.__r_.__value_.__r.__words[0];
        v162.__r_.__value_.__r.__words[0] = 0;
        if (v120)
          (*(void (**)(std::string::size_type))(*(_QWORD *)v120 + 8))(v120);
      }
      else
      {
        v181.__r_.__value_.__r.__words[0] = 16;
        v181.__r_.__value_.__l.__size_ = 0x1000000008;
        v181.__r_.__value_.__r.__words[2] = 14;
        v162.__r_.__value_.__s.__data_[0] = 0;
        v163 = 0;
        sub_20B2D9C00((uint64_t)&v181, a2, (uint64_t)v170, (uint64_t)&v162);
        if (v163 && v162.__r_.__value_.__r.__words[0])
        {
          v162.__r_.__value_.__l.__size_ = v162.__r_.__value_.__r.__words[0];
          operator delete(v162.__r_.__value_.__l.__data_);
        }
        if ((_DWORD)v171 && HIDWORD(v171))
          sub_20AEC01D0(a2, (uint64_t)"\n", 1);
      }
      v99 = *(std::__shared_weak_count **)&v170[16];
      if (!*(_QWORD *)&v170[16])
        goto LABEL_275;
      v121 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
      do
        v101 = __ldaxr(v121);
      while (__stlxr(v101 - 1, v121));
      break;
    default:
      sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/ImageIO/src/Pnm.cpp", 440, (uint64_t)"", 0, (uint64_t)"not implemented", 15, (void (*)(void **))sub_20B532360);
      abort();
  }
  if (!v101)
  {
    ((void (*)(std::__shared_weak_count *))v99->__on_zero_shared)(v99);
    std::__shared_weak_count::__release_weak(v99);
  }
LABEL_275:
  *(_BYTE *)(a5 + 120) = 1;
  if (v133)
    return;
  v85 = v132;
LABEL_300:
  if (v85)
  {
    if (v131)
    {
      if (SHIBYTE(v130) < 0)
        operator delete(v129[0]);
      if (SHIBYTE(v127) < 0)
        operator delete(v126[0]);
    }
    if (v125 && SHIBYTE(v124) < 0)
    {
      v35 = (void *)__p;
      goto LABEL_309;
    }
  }
}

void sub_20B2D5E1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,void *a58,uint64_t a59,uint64_t a60,void *__p,uint64_t a62,uint64_t a63)
{
  void *a65;
  uint64_t v65;
  void *v67;

  v67 = a65;
  a65 = 0;
  if (v67)
    (*(void (**)(void *))(*(_QWORD *)v67 + 8))(v67);
  sub_20B037C40(v65 - 248);
  sub_20AECD704((uint64_t)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_20B2D622C(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  unsigned int v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;

  v2 = MEMORY[0x24BDAC740];
  while (1)
  {
    v3 = *a1;
    std::istream::tellg();
    while ((*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 2) == 0)
    {
      v4 = std::istream::peek();
      if (v4 <= 0x7F)
      {
        if ((*(_DWORD *)(v2 + 4 * v4 + 60) & 0x4000) == 0)
          break;
      }
      else if (!__maskrune(v4, 0x4000uLL))
      {
        break;
      }
      std::istream::seekg();
    }
    std::istream::tellg();
    if (v9 == v8)
    {
      v5 = *a1;
      std::istream::tellg();
      v6 = v5 + 4;
      while ((*((_BYTE *)v6 + *(_QWORD *)(*v5 - 24)) & 2) == 0)
      {
        if (std::istream::peek() != 35 || (*((_BYTE *)v6 + *(_QWORD *)(*v5 - 24)) & 2) != 0)
          break;
        while (std::istream::peek() != 10)
        {
          std::istream::seekg();
          if ((*((_BYTE *)v6 + *(_QWORD *)(*v5 - 24)) & 2) != 0)
            goto LABEL_2;
        }
      }
LABEL_2:
      std::istream::tellg();
      if (v9 == v8)
        return (*((_BYTE *)*a1 + *(_QWORD *)(**a1 - 24) + 32) & 2) == 0;
    }
  }
}

uint64_t sub_20B2D63EC(_QWORD *a1)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  char *v4;
  unint64_t v5;
  void **v6;
  char *v7;
  int v8;
  BOOL v9;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  size_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char v21;
  unint64_t v22;
  char *v23;
  __int128 *v24;
  unint64_t v25;
  __int128 v26;
  char *v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  size_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  char v39;
  uint64_t v40;
  unint64_t v42;
  __int128 *v43;
  char *v44;
  unint64_t v45;
  __int128 v46;
  char *v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  char *__p;
  char *v52;
  void *v53[2];
  unsigned __int8 v54;

  __p = 0;
  v52 = 0;
  v2 = std::istream::peek();
  if ((*((_BYTE *)a1 + *(_QWORD *)(*a1 - 24) + 32) & 2) != 0)
  {
    v4 = 0;
    v11 = 0;
    goto LABEL_59;
  }
  v3 = v2;
  v4 = 0;
  do
  {
    sub_20B2D6C14("0123456789", (uint64_t)v53);
    v5 = v54;
    if ((v54 & 0x80u) == 0)
      v6 = v53;
    else
      v6 = (void **)v53[0];
    if ((v54 & 0x80u) != 0)
      v5 = (unint64_t)v53[1];
    if (v5)
    {
      v7 = (char *)(v5 - 1);
      do
      {
        v8 = *(unsigned __int8 *)v6;
        v6 = (void **)((char *)v6 + 1);
        v9 = v8 == v3;
      }
      while (v8 != v3 && v7-- != 0);
      if (((char)v54 & 0x80000000) == 0)
      {
LABEL_16:
        v11 = (unint64_t)v52;
        if (!v9)
          goto LABEL_57;
        goto LABEL_20;
      }
    }
    else
    {
      v9 = 0;
      if (((char)v54 & 0x80000000) == 0)
        goto LABEL_16;
    }
    operator delete(v53[0]);
    v11 = (unint64_t)v52;
    if (!v9)
      goto LABEL_57;
LABEL_20:
    if ((unint64_t)v4 < v11)
    {
      *v4++ = v3;
      goto LABEL_40;
    }
    v12 = v4 - __p;
    v13 = v4 - __p + 1;
    if (v13 < 0)
      goto LABEL_93;
    v14 = v11 - (_QWORD)__p;
    if (2 * v14 > v13)
      v13 = 2 * v14;
    if (v14 >= 0x3FFFFFFFFFFFFFFFLL)
      v15 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v15 = v13;
    if (!v15)
    {
      v16 = 0;
      v17 = (char *)(v4 - __p);
      *(_BYTE *)v12 = v3;
      v18 = v12 + 1;
      if (v4 == __p)
        goto LABEL_37;
LABEL_30:
      if (v12 < 8 || v16 > &v16[v4 - __p - 1] || __p > v4 - 1 || (unint64_t)(__p - v16) < 0x20)
      {
        v19 = v4;
        goto LABEL_32;
      }
      if (v12 >= 0x20)
      {
        v22 = v12 & 0xFFFFFFFFFFFFFFE0;
        v23 = &v16[v12 - 16];
        v24 = (__int128 *)(v4 - 16);
        v25 = v12 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v26 = *v24;
          *((_OWORD *)v23 - 1) = *(v24 - 1);
          *(_OWORD *)v23 = v26;
          v23 -= 32;
          v24 -= 2;
          v25 -= 32;
        }
        while (v25);
        if (v12 == v22)
        {
LABEL_34:
          v4 = __p;
          __p = v16;
          v52 = &v16[v15];
          if (!v4)
            goto LABEL_39;
LABEL_38:
          operator delete(v4);
          goto LABEL_39;
        }
        if ((v12 & 0x18) == 0)
        {
          v17 -= v22;
          v19 = &v4[-v22];
          goto LABEL_32;
        }
      }
      else
      {
        v22 = 0;
      }
      v19 = &v4[-(v12 & 0xFFFFFFFFFFFFFFF8)];
      v17 -= v12 & 0xFFFFFFFFFFFFFFF8;
      v27 = &v16[&v4[-v22] - __p - 8];
      v28 = (uint64_t *)&v4[-v22 - 8];
      v29 = v22 - (v12 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        v30 = *v28--;
        *(_QWORD *)v27 = v30;
        v27 -= 8;
        v29 += 8;
      }
      while (v29);
      if (v12 == (v12 & 0xFFFFFFFFFFFFFFF8))
        goto LABEL_34;
LABEL_32:
      v20 = v17 - 1;
      do
      {
        v21 = *--v19;
        *v20-- = v21;
      }
      while (v19 != __p);
      goto LABEL_34;
    }
    v16 = (char *)operator new(v15);
    v17 = &v16[v12];
    v16[v12] = v3;
    v18 = (uint64_t)&v16[v12 + 1];
    if (v4 != __p)
      goto LABEL_30;
LABEL_37:
    __p = v17;
    v52 = &v16[v15];
    if (v4)
      goto LABEL_38;
LABEL_39:
    v4 = (char *)v18;
LABEL_40:
    std::istream::seekg();
    v3 = std::istream::peek();
  }
  while ((*((_BYTE *)a1 + *(_QWORD *)(*a1 - 24) + 32) & 2) == 0);
  v11 = (unint64_t)v52;
LABEL_57:
  if ((unint64_t)v4 < v11)
  {
    *v4 = 10;
    goto LABEL_78;
  }
LABEL_59:
  v31 = v4 - __p;
  v32 = v4 - __p + 1;
  if (v32 < 0)
LABEL_93:
    sub_20AEC60B8();
  v33 = v11 - (_QWORD)__p;
  if (2 * v33 > v32)
    v32 = 2 * v33;
  if (v33 >= 0x3FFFFFFFFFFFFFFFLL)
    v34 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v34 = v32;
  if (v34)
    v35 = (char *)operator new(v34);
  else
    v35 = 0;
  v36 = &v35[v31];
  v35[v31] = 10;
  if (v4 == __p)
  {
    v35 += v31;
    __p = v36;
    if (!v4)
      goto LABEL_79;
    goto LABEL_77;
  }
  if (v31 < 8 || (unint64_t)(__p - v35) < 0x20)
  {
    v37 = v4;
    goto LABEL_72;
  }
  if (v31 >= 0x20)
  {
    v42 = v31 & 0xFFFFFFFFFFFFFFE0;
    v43 = (__int128 *)(v4 - 16);
    v44 = &v35[v4 - 16 - __p];
    v45 = v31 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      v46 = *v43;
      *((_OWORD *)v44 - 1) = *(v43 - 1);
      *(_OWORD *)v44 = v46;
      v44 -= 32;
      v43 -= 2;
      v45 -= 32;
    }
    while (v45);
    if (v31 != v42)
    {
      if ((v31 & 0x18) == 0)
      {
        v36 -= v42;
        v37 = &v4[-v42];
        goto LABEL_72;
      }
      goto LABEL_88;
    }
  }
  else
  {
    v42 = 0;
LABEL_88:
    v37 = &v4[-(v31 & 0xFFFFFFFFFFFFFFF8)];
    v36 -= v31 & 0xFFFFFFFFFFFFFFF8;
    v47 = &v4[-v42 - 8];
    v48 = &v35[v47 - __p];
    v49 = v42 - (v31 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      v50 = *(_QWORD *)v47;
      v47 -= 8;
      *(_QWORD *)v48 = v50;
      v48 -= 8;
      v49 += 8;
    }
    while (v49);
    if (v31 != (v31 & 0xFFFFFFFFFFFFFFF8))
    {
LABEL_72:
      v38 = v36 - 1;
      do
      {
        v39 = *--v37;
        *v38-- = v39;
      }
      while (v37 != __p);
    }
  }
  v4 = __p;
  __p = v35;
  if (v4)
  {
LABEL_77:
    operator delete(v4);
LABEL_78:
    v35 = __p;
  }
LABEL_79:
  v40 = atoi(v35);
  if (v35)
    operator delete(v35);
  return v40;
}

void sub_20B2D6854(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B2D6874(uint64_t a1, int a2)
{
  int v4;
  void *v5[2];
  uint64_t v6;
  void *__p[2];
  uint64_t v8;
  char v9;
  void *v10;
  char v11;
  void *v12;
  char v13;
  char v14;
  char v15;
  char *v16;
  __int128 v17;
  unsigned int v18;
  std::string v19;
  std::string **v20;
  std::string *v21;
  std::string *v22;
  char **v23;
  std::string *v24;
  std::string *v25;

  if (a2 >= 255)
    v4 = 0xFFFF;
  else
    v4 = 255;
  v16 = (char *)operator new(0x68uLL);
  v17 = xmmword_20B5F3A80;
  strcpy(v16, "Unsupported pnm format. Loader does not support intensity scaling. File specifies maximum intensity ");
  v18 = 1;
  std::to_string(&v19, a2);
  v21 = (std::string *)&v16;
  v22 = &v19;
  v23 = &v16;
  v24 = &v19;
  v25 = &v19;
  v20 = &v21;
  sub_20AED6660((uint64_t)&v20, (uint64_t)&v16);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v19.__r_.__value_.__l.__data_);
  v21 = (std::string *)&v16;
  v22 = (std::string *)" but should be ";
  v23 = &v16;
  v24 = (std::string *)" but should be ";
  v25 = (std::string *)" but should be ";
  if (v18 == -1)
    sub_20AECFAB8();
  v19.__r_.__value_.__r.__words[0] = (std::string::size_type)&v21;
  ((void (*)(std::string *, char **))off_24C418988[v18])(&v19, &v16);
  std::to_string(&v19, v4);
  v21 = (std::string *)&v16;
  v22 = &v19;
  v23 = &v16;
  v24 = &v19;
  v25 = &v19;
  if (v18 == -1)
    sub_20AECFAB8();
  v20 = &v21;
  ((void (*)(std::string ***, char **))off_24C418970[v18])(&v20, &v16);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v19.__r_.__value_.__l.__data_);
  v21 = (std::string *)&v16;
  v22 = (std::string *)".";
  v23 = &v16;
  v24 = (std::string *)".";
  v25 = (std::string *)".";
  if (v18 == -1)
    sub_20AECFAB8();
  v19.__r_.__value_.__r.__words[0] = (std::string::size_type)&v21;
  ((void (*)(std::string *, char **))off_24C4189A0[v18])(&v19, &v16);
  if (v18 == -1)
    sub_20AECFAB8();
  v21 = &v19;
  ((void (*)(void **__return_ptr, std::string **, char **))*(&off_24C4189B8 + v18))(v5, &v21, &v16);
  if (v18 != -1)
    ((void (*)(std::string **, char **))off_24C418958[v18])(&v21, &v16);
  if (SHIBYTE(v6) < 0)
  {
    sub_20AEC60F4(__p, v5[0], (unint64_t)v5[1]);
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)v5;
    v8 = v6;
  }
  v9 = 1;
  LOBYTE(v10) = 0;
  v14 = 0;
  v15 = 1;
  sub_20B2CC5A8(5u, (__int128 *)__p, a1);
  if (v15)
  {
    if (!v14)
      goto LABEL_21;
    if (v13 < 0)
    {
      operator delete(v12);
      if ((v11 & 0x80000000) == 0)
      {
LABEL_21:
        if (!v9)
          goto LABEL_24;
LABEL_22:
        if (SHIBYTE(v8) < 0)
          operator delete(__p[0]);
        goto LABEL_24;
      }
    }
    else if ((v11 & 0x80000000) == 0)
    {
      goto LABEL_21;
    }
    operator delete(v10);
    if (!v9)
      goto LABEL_24;
    goto LABEL_22;
  }
LABEL_24:
  if (SHIBYTE(v6) < 0)
    operator delete(v5[0]);
}

void sub_20B2D6B94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B2D6BC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_20AECFA60((uint64_t)&a26);
  _Unwind_Resume(a1);
}

void sub_20B2D6C14(const char *a1@<X0>, uint64_t a2@<X8>)
{
  size_t v4;
  size_t v5;
  __int128 *p_dst;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  __int128 __dst;
  unint64_t v11;

  v4 = strlen(a1);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    p_dst = (__int128 *)operator new(v7 + 1);
    *((_QWORD *)&__dst + 1) = v5;
    v11 = v8 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
LABEL_9:
    memcpy(p_dst, a1, v5);
    *((_BYTE *)p_dst + v5) = 0;
    if ((SHIBYTE(v11) & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
  HIBYTE(v11) = v4;
  p_dst = &__dst;
  if (v4)
    goto LABEL_9;
  LOBYTE(__dst) = 0;
  if ((SHIBYTE(v11) & 0x80000000) == 0)
  {
LABEL_5:
    *(_OWORD *)a2 = __dst;
    *(_QWORD *)(a2 + 16) = v11;
    return;
  }
LABEL_10:
  v9 = (void *)__dst;
  sub_20AEC60F4((_BYTE *)a2, (void *)__dst, *((unint64_t *)&__dst + 1));
  operator delete(v9);
}

void sub_20B2D6D10(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20B2D6D24(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  _BOOL4 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int16 v17;
  std::__shared_weak_count *size;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::logic_error *exception;
  std::string v23;

  if (*(_DWORD *)(a1 + 48) != 1)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B2D6FA0(a1);
    std::logic_error::logic_error(exception, &v23);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v23.__r_.__value_.__r.__words[0] = v4;
      v23.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v4;
    }
  }
  else
  {
    *(_OWORD *)&v23.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v12 = v11 != 0;
  v13 = v11 == 0;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  if (v13)
    v14 = 0;
  else
    v14 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  if (v13)
    v15 = 0;
  else
    v15 = *(_QWORD *)(a1 + 24);
  if (HIDWORD(v15) * HIDWORD(v14) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v16 = v14 | v12;
  v17 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v23.__r_.__value_.__l.__size_;
  if (v23.__r_.__value_.__l.__size_)
  {
    v19 = (unint64_t *)(v23.__r_.__value_.__l.__size_ + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    *(_QWORD *)a2 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 8) = size;
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v16;
    *(_WORD *)(a2 + 40) = v17;
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  else
  {
    *(_OWORD *)a2 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v16;
    *(_WORD *)(a2 + 40) = v17;
  }
}

void sub_20B2D6F54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2D6FA0(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2D7018();
  v3 = sub_20B2D72D4();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20B2D7018()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254636638);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254636638))
  {
    sub_20AEC0D64(v7, "ConstImageView");
    v2 = sub_20AF8595C();
    sub_20B2D721C((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20AF85EB4();
    sub_20B2D721C((uint64_t)v3, (uint64_t)&__p);
    sub_20AEC7620(v6, (uint64_t)v9, 2uLL);
    sub_20B53170C((char *)v7, (uint64_t *)v6, &stru_254636620, v4, v5);
    sub_20AEC2E90(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254636620, &dword_20AEBB000);
          __cxa_guard_release(&qword_254636638);
          return &stru_254636620;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254636620;
}

void sub_20B2D7168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254636638);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254636638);
  _Unwind_Resume(a1);
}

void sub_20B2D721C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20B2D72B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20B2D72D4()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254636658);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254636658))
  {
    sub_20AEC0D64(v7, "ConstImageView");
    v2 = sub_20AF872C0();
    sub_20B2D74D8((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20AF85EB4();
    sub_20B2D74D8((uint64_t)v3, (uint64_t)&__p);
    sub_20AEC7620(v6, (uint64_t)v9, 2uLL);
    sub_20B53170C((char *)v7, (uint64_t *)v6, &stru_254636640, v4, v5);
    sub_20AEC2E90(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254636640, &dword_20AEBB000);
          __cxa_guard_release(&qword_254636658);
          return &stru_254636640;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254636640;
}

void sub_20B2D7424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254636658);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254636658);
  _Unwind_Resume(a1);
}

void sub_20B2D74D8(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20B2D7574(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B2D7590(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  _BOOL4 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int16 v17;
  std::__shared_weak_count *size;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::logic_error *exception;
  std::string v23;

  if (*(_DWORD *)(a1 + 48) != 2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B2D7810(a1);
    std::logic_error::logic_error(exception, &v23);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v23.__r_.__value_.__r.__words[0] = v4;
      v23.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v4;
    }
  }
  else
  {
    *(_OWORD *)&v23.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v12 = v11 != 0;
  v13 = v11 == 0;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  if (v13)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  if (v13)
    v15 = 0;
  else
    v15 = *(_QWORD *)(a1 + 24);
  if (HIDWORD(v15) * HIDWORD(v14) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v16 = v14 | v12;
  v17 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v23.__r_.__value_.__l.__size_;
  if (v23.__r_.__value_.__l.__size_)
  {
    v19 = (unint64_t *)(v23.__r_.__value_.__l.__size_ + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    *(_QWORD *)a2 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 8) = size;
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v16;
    *(_WORD *)(a2 + 40) = v17;
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  else
  {
    *(_OWORD *)a2 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v16;
    *(_WORD *)(a2 + 40) = v17;
  }
}

void sub_20B2D77C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2D7810(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2D7888();
  v3 = sub_20B2D72D4();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20B2D7888()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254636678);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254636678))
  {
    sub_20AEC0D64(v7, "ConstImageView");
    v2 = sub_20AF87E08();
    sub_20B2D7A8C((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20AF85EB4();
    sub_20B2D7A8C((uint64_t)v3, (uint64_t)&__p);
    sub_20AEC7620(v6, (uint64_t)v9, 2uLL);
    sub_20B53170C((char *)v7, (uint64_t *)v6, &stru_254636660, v4, v5);
    sub_20AEC2E90(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254636660, &dword_20AEBB000);
          __cxa_guard_release(&qword_254636678);
          return &stru_254636660;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254636660;
}

void sub_20B2D79D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254636678);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254636678);
  _Unwind_Resume(a1);
}

void sub_20B2D7A8C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20B2D7B28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B2D7B44(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 21)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B2D7E44(a1);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v15;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v22 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a2 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v21;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20B2D7DF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2D7E44(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2D7EBC();
  v3 = sub_20B2D72D4();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20B2D7EBC()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254636698);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254636698))
  {
    sub_20AEC0D64(v7, "ConstImageView");
    v2 = sub_20AF8EB6C();
    sub_20B2D80C0((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20AF85EB4();
    sub_20B2D80C0((uint64_t)v3, (uint64_t)&__p);
    sub_20AEC7620(v6, (uint64_t)v9, 2uLL);
    sub_20B53170C((char *)v7, (uint64_t *)v6, &stru_254636680, v4, v5);
    sub_20AEC2E90(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254636680, &dword_20AEBB000);
          __cxa_guard_release(&qword_254636698);
          return &stru_254636680;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254636680;
}

void sub_20B2D800C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254636698);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254636698);
  _Unwind_Resume(a1);
}

void sub_20B2D80C0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20B2D815C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B2D8178(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  _BOOL4 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int16 v17;
  std::__shared_weak_count *size;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::logic_error *exception;
  std::string v23;

  if (*(_DWORD *)(a1 + 48) != 1)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B2D83F4(a1);
    std::logic_error::logic_error(exception, &v23);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v23.__r_.__value_.__r.__words[0] = v4;
      v23.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v4;
    }
  }
  else
  {
    *(_OWORD *)&v23.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v12 = v11 != 0;
  v13 = v11 == 0;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  if (v13)
    v14 = 0;
  else
    v14 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  if (v13)
    v15 = 0;
  else
    v15 = *(_QWORD *)(a1 + 24);
  if (HIDWORD(v15) * HIDWORD(v14) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v16 = v14 | v12;
  v17 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v23.__r_.__value_.__l.__size_;
  if (v23.__r_.__value_.__l.__size_)
  {
    v19 = (unint64_t *)(v23.__r_.__value_.__l.__size_ + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    *(_QWORD *)a2 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 8) = size;
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v16;
    *(_WORD *)(a2 + 40) = v17;
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  else
  {
    *(_OWORD *)a2 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v16;
    *(_WORD *)(a2 + 40) = v17;
  }
}

void sub_20B2D83A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2D83F4(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2D846C();
  v3 = sub_20B2D8728();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20B2D846C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2546365B8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546365B8))
  {
    sub_20AEC0D64(v7, "ImageView");
    v2 = sub_20AF8595C();
    sub_20B2D8670((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20AF85EB4();
    sub_20B2D8670((uint64_t)v3, (uint64_t)&__p);
    sub_20AEC7620(v6, (uint64_t)v9, 2uLL);
    sub_20B53170C((char *)v7, (uint64_t *)v6, &stru_2546365A0, v4, v5);
    sub_20AEC2E90(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2546365A0, &dword_20AEBB000);
          __cxa_guard_release(&qword_2546365B8);
          return &stru_2546365A0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2546365A0;
}

void sub_20B2D85BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2546365B8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2546365B8);
  _Unwind_Resume(a1);
}

void sub_20B2D8670(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20B2D870C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20B2D8728()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2546365D8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546365D8))
  {
    sub_20AEC0D64(v7, "ImageView");
    v2 = sub_20AF872C0();
    sub_20B2D892C((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20AF85EB4();
    sub_20B2D892C((uint64_t)v3, (uint64_t)&__p);
    sub_20AEC7620(v6, (uint64_t)v9, 2uLL);
    sub_20B53170C((char *)v7, (uint64_t *)v6, &stru_2546365C0, v4, v5);
    sub_20AEC2E90(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2546365C0, &dword_20AEBB000);
          __cxa_guard_release(&qword_2546365D8);
          return &stru_2546365C0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2546365C0;
}

void sub_20B2D8878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2546365D8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2546365D8);
  _Unwind_Resume(a1);
}

void sub_20B2D892C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20B2D89C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B2D89E4(uint64_t a1, _QWORD *a2)
{
  unsigned __int8 v4;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t v7;
  void **v8;
  char *v9;
  int v10;
  BOOL v11;
  unint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  char *v23;
  __int128 *v24;
  unint64_t v25;
  __int128 v26;
  char *v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  char v32;
  unint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unsigned __int8 *v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  size_t v40;
  _BYTE *v41;
  char *v42;
  char *v43;
  unint64_t v44;
  __int128 *v45;
  _OWORD *v46;
  unint64_t v47;
  __int128 v48;
  char *v49;
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  char v54;
  void *v56[2];
  unsigned __int8 v57;

  if (*(_QWORD *)(a1 + 8) != *(_QWORD *)a1)
    *(_QWORD *)(a1 + 8) = *(_QWORD *)a1;
  v4 = std::istream::peek();
  if ((*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 2) == 0)
  {
    v5 = v4;
    do
    {
      sub_20B2D6C14("0123456789", (uint64_t)v56);
      v7 = v57;
      if ((v57 & 0x80u) == 0)
        v8 = v56;
      else
        v8 = (void **)v56[0];
      if ((v57 & 0x80u) != 0)
        v7 = (unint64_t)v56[1];
      if (v7)
      {
        v9 = (char *)(v7 - 1);
        do
        {
          v10 = *(unsigned __int8 *)v8;
          v8 = (void **)((char *)v8 + 1);
          v11 = v10 == v5;
        }
        while (v10 != v5 && v9-- != 0);
        if (((char)v57 & 0x80000000) == 0)
        {
LABEL_20:
          if (!v11)
            break;
          goto LABEL_24;
        }
      }
      else
      {
        v11 = 0;
        if (((char)v57 & 0x80000000) == 0)
          goto LABEL_20;
      }
      operator delete(v56[0]);
      if (!v11)
        break;
LABEL_24:
      v14 = *(unsigned __int8 **)(a1 + 8);
      v13 = *(_QWORD *)(a1 + 16);
      if ((unint64_t)v14 >= v13)
      {
        v15 = *(unsigned __int8 **)a1;
        v16 = (unint64_t)&v14[-*(_QWORD *)a1];
        v17 = v16 + 1;
        if ((uint64_t)(v16 + 1) < 0)
          goto LABEL_85;
        v18 = v13 - (_QWORD)v15;
        if (2 * v18 > v17)
          v17 = 2 * v18;
        if (v18 >= 0x3FFFFFFFFFFFFFFFLL)
          v19 = 0x7FFFFFFFFFFFFFFFLL;
        else
          v19 = v17;
        if (v19)
        {
          v20 = (char *)operator new(v19);
          v21 = &v20[v16];
          v20[v16] = v5;
          v6 = (uint64_t)&v20[v16 + 1];
          if (v14 == v15)
          {
LABEL_51:
            *(_QWORD *)a1 = v21;
            *(_QWORD *)(a1 + 8) = v6;
            *(_QWORD *)(a1 + 16) = &v20[v19];
            if (v14)
              operator delete(v14);
            goto LABEL_6;
          }
        }
        else
        {
          v20 = 0;
          v21 = (char *)&v14[-*(_QWORD *)a1];
          *(_BYTE *)v16 = v5;
          v6 = v16 + 1;
          if (v14 == v15)
            goto LABEL_51;
        }
        if (v16 >= 8 && (unint64_t)(v15 - (unsigned __int8 *)v20) >= 0x20)
        {
          if (v16 >= 0x20)
          {
            v22 = v16 & 0xFFFFFFFFFFFFFFE0;
            v23 = &v20[v16 - 16];
            v24 = (__int128 *)(v14 - 16);
            v25 = v16 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              v26 = *v24;
              *((_OWORD *)v23 - 1) = *(v24 - 1);
              *(_OWORD *)v23 = v26;
              v23 -= 32;
              v24 -= 2;
              v25 -= 32;
            }
            while (v25);
            if (v16 == v22)
              goto LABEL_50;
            if ((v16 & 0x18) != 0)
              goto LABEL_43;
            v21 -= v22;
            v14 -= v22;
          }
          else
          {
            v22 = 0;
LABEL_43:
            v21 -= v16 & 0xFFFFFFFFFFFFFFF8;
            v27 = &v20[&v14[-v22] - v15 - 8];
            v28 = (uint64_t *)&v14[-v22 - 8];
            v29 = v22 - (v16 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              v30 = *v28--;
              *(_QWORD *)v27 = v30;
              v27 -= 8;
              v29 += 8;
            }
            while (v29);
            v14 -= v16 & 0xFFFFFFFFFFFFFFF8;
            if (v16 == (v16 & 0xFFFFFFFFFFFFFFF8))
            {
LABEL_50:
              v14 = *(unsigned __int8 **)a1;
              v21 = v20;
              goto LABEL_51;
            }
          }
        }
        v31 = v21 - 1;
        do
        {
          v32 = *--v14;
          *v31-- = v32;
        }
        while (v14 != v15);
        goto LABEL_50;
      }
      *v14 = v5;
      v6 = (uint64_t)(v14 + 1);
LABEL_6:
      *(_QWORD *)(a1 + 8) = v6;
      std::istream::seekg();
      v5 = std::istream::peek();
    }
    while ((*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 2) == 0);
  }
  v34 = *(unsigned __int8 **)(a1 + 8);
  v33 = *(_QWORD *)(a1 + 16);
  if ((unint64_t)v34 >= v33)
  {
    v36 = *(unsigned __int8 **)a1;
    v37 = (unint64_t)&v34[-*(_QWORD *)a1];
    v38 = v37 + 1;
    if ((uint64_t)(v37 + 1) < 0)
LABEL_85:
      sub_20AEC60B8();
    v39 = v33 - (_QWORD)v36;
    if (2 * v39 > v38)
      v38 = 2 * v39;
    if (v39 >= 0x3FFFFFFFFFFFFFFFLL)
      v40 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v40 = v38;
    if (v40)
      v41 = operator new(v40);
    else
      v41 = 0;
    v42 = &v41[v37];
    v43 = &v41[v40];
    v41[v37] = 10;
    v35 = (uint64_t)&v41[v37 + 1];
    if (v34 == v36)
    {
      *(_QWORD *)a1 = v42;
      *(_QWORD *)(a1 + 8) = v35;
      *(_QWORD *)(a1 + 16) = v43;
      if (!v34)
        goto LABEL_84;
      goto LABEL_83;
    }
    if (v37 < 8 || (unint64_t)(v36 - v41) < 0x20)
      goto LABEL_80;
    if (v37 >= 0x20)
    {
      v44 = v37 & 0xFFFFFFFFFFFFFFE0;
      v45 = (__int128 *)(v34 - 16);
      v46 = &v41[v34 - 16 - v36];
      v47 = v37 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        v48 = *v45;
        *(v46 - 1) = *(v45 - 1);
        *v46 = v48;
        v46 -= 2;
        v45 -= 2;
        v47 -= 32;
      }
      while (v47);
      if (v37 == v44)
      {
LABEL_82:
        v34 = *(unsigned __int8 **)a1;
        *(_QWORD *)a1 = v41;
        *(_QWORD *)(a1 + 8) = v35;
        *(_QWORD *)(a1 + 16) = v43;
        if (!v34)
          goto LABEL_84;
LABEL_83:
        operator delete(v34);
        goto LABEL_84;
      }
      if ((v37 & 0x18) == 0)
      {
        v42 -= v44;
        v34 -= v44;
        goto LABEL_80;
      }
    }
    else
    {
      v44 = 0;
    }
    v42 -= v37 & 0xFFFFFFFFFFFFFFF8;
    v49 = (char *)&v34[-v44 - 8];
    v50 = &v41[v49 - (char *)v36];
    v51 = v44 - (v37 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      v52 = *(_QWORD *)v49;
      v49 -= 8;
      *v50-- = v52;
      v51 += 8;
    }
    while (v51);
    v34 -= v37 & 0xFFFFFFFFFFFFFFF8;
    if (v37 == (v37 & 0xFFFFFFFFFFFFFFF8))
      goto LABEL_82;
LABEL_80:
    v53 = v42 - 1;
    do
    {
      v54 = *--v34;
      *v53-- = v54;
    }
    while (v34 != v36);
    goto LABEL_82;
  }
  *v34 = 10;
  v35 = (uint64_t)(v34 + 1);
LABEL_84:
  *(_QWORD *)(a1 + 8) = v35;
  return atoi(*(const char **)a1);
}

void sub_20B2D8DE8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  _BOOL4 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int16 v17;
  std::__shared_weak_count *size;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::logic_error *exception;
  std::string v23;

  if (*(_DWORD *)(a1 + 48) != 2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B2D9068(a1);
    std::logic_error::logic_error(exception, &v23);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v23.__r_.__value_.__r.__words[0] = v4;
      v23.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v4;
    }
  }
  else
  {
    *(_OWORD *)&v23.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v12 = v11 != 0;
  v13 = v11 == 0;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  if (v13)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  if (v13)
    v15 = 0;
  else
    v15 = *(_QWORD *)(a1 + 24);
  if (HIDWORD(v15) * HIDWORD(v14) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v16 = v14 | v12;
  v17 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v23.__r_.__value_.__l.__size_;
  if (v23.__r_.__value_.__l.__size_)
  {
    v19 = (unint64_t *)(v23.__r_.__value_.__l.__size_ + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    *(_QWORD *)a2 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 8) = size;
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v16;
    *(_WORD *)(a2 + 40) = v17;
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  else
  {
    *(_OWORD *)a2 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v16;
    *(_WORD *)(a2 + 40) = v17;
  }
}

void sub_20B2D901C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2D9068(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2D90E0();
  v3 = sub_20B2D8728();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20B2D90E0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2546365F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2546365F8))
  {
    sub_20AEC0D64(v7, "ImageView");
    v2 = sub_20AF87E08();
    sub_20B2D92E4((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20AF85EB4();
    sub_20B2D92E4((uint64_t)v3, (uint64_t)&__p);
    sub_20AEC7620(v6, (uint64_t)v9, 2uLL);
    sub_20B53170C((char *)v7, (uint64_t *)v6, &stru_2546365E0, v4, v5);
    sub_20AEC2E90(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2546365E0, &dword_20AEBB000);
          __cxa_guard_release(&qword_2546365F8);
          return &stru_2546365E0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2546365E0;
}

void sub_20B2D9230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2546365F8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2546365F8);
  _Unwind_Resume(a1);
}

void sub_20B2D92E4(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20B2D9380(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B2D939C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 21)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B2D969C(a1);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v15;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v22 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a2 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v21;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20B2D9650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2D969C(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2D9714();
  v3 = sub_20B2D8728();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20B2D9714()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254636618);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254636618))
  {
    sub_20AEC0D64(v7, "ImageView");
    v2 = sub_20AF8EB6C();
    sub_20B2D9918((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20AF85EB4();
    sub_20B2D9918((uint64_t)v3, (uint64_t)&__p);
    sub_20AEC7620(v6, (uint64_t)v9, 2uLL);
    sub_20B53170C((char *)v7, (uint64_t *)v6, &stru_254636600, v4, v5);
    sub_20AEC2E90(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254636600, &dword_20AEBB000);
          __cxa_guard_release(&qword_254636618);
          return &stru_254636600;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254636600;
}

void sub_20B2D9864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254636618);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254636618);
  _Unwind_Resume(a1);
}

void sub_20B2D9918(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20B2D99B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B2D99D0(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  __int16 v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD v13[3];
  uint64_t v14;
  __int128 v15;
  uint64_t (**v16)();

  v16 = &off_24C4053C0;
  sub_20B4B2DC0(a1, (uint64_t)&v12);
  v3 = operator new();
  *(_QWORD *)v3 = &off_24C3FCCD0;
  *(_OWORD *)(v3 + 8) = v13[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v13 + 12);
  *(_OWORD *)(v3 + 40) = v13[2];
  *(_QWORD *)(v3 + 56) = v14;
  *(_OWORD *)(v3 + 64) = v15;
  v4 = (std::__shared_weak_count *)operator new();
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C4053F8;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)v3;
  *a2 = v3;
  a2[1] = (uint64_t)v4;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v12, v3, 2);
  v7 = *(_QWORD *)(v12 + 16);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v12;
  a2[5] = v7;
  v12 = 0;
  MEMORY[0x20BD3583C]();
  a2[6] = a2[3];
  *(_OWORD *)(a2 + 7) = *((_OWORD *)a2 + 2);
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v9 = v8;
  if ((v8 & 0xFFFFFF) <= 0x10000)
    v9 = 0;
  v10 = v8 & 0xFF00;
  if ((v8 & 0xFF0000) == 0)
    v10 = 0;
  *((_WORD *)a2 + 36) = v10 & 0xFF00 | v9;
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_20B2D9BA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  sub_20AEC147C(v10);
  sub_20AEC147C((uint64_t)&a10);
  sub_20B037888(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2D9BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B037888(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2D9BE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  if (a18)
    free(a18);
  _Unwind_Resume(exception_object);
}

void sub_20B2D9C00(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  char *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  __int128 *v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  unint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  unsigned int v49;
  _QWORD *v50;
  uint64_t v51;
  unsigned int v52;
  unsigned __int8 v53;
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[5];
  uint64_t v60;
  uint64_t v61;
  void *__p;
  void *v63;
  char *v64;
  uint64_t v65;
  unsigned __int8 v66;
  _QWORD *v67;
  unsigned __int8 *v68;
  _QWORD *v69;

  if (!*(_DWORD *)(a3 + 32) || !*(_DWORD *)(a3 + 36))
    return;
  v65 = *(_QWORD *)(a3 + 32);
  __p = 0;
  v63 = 0;
  v64 = 0;
  if (!*(_BYTE *)(a4 + 24))
  {
    v8 = operator new(0x10uLL);
    *v8 = " ";
    v8[1] = "\n";
    __p = v8;
    v63 = v8 + 2;
    v64 = (char *)(v8 + 2);
    v61 = 1;
    goto LABEL_70;
  }
  v5 = *(_QWORD **)(a4 + 8);
  v4 = *(char **)(a4 + 16);
  __p = *(void **)a4;
  v6 = __p;
  v63 = v5;
  v64 = v4;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  if (v6 == v5)
  {
    if (v5 >= (_QWORD *)v4)
    {
      v10 = (v4 - (char *)v5) >> 2;
      if (v10 <= 1)
        v10 = 1;
      if ((unint64_t)(v4 - (char *)v5) >= 0x7FFFFFFFFFFFFFF8)
        v11 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v11 = v10;
      if (v11 >> 61)
        sub_20AEC60CC();
      v6 = operator new(8 * v11);
      *v6 = " ";
      v4 = (char *)&v6[v11];
      __p = v6;
      v64 = v4;
      if (v5)
        operator delete(v5);
      v63 = v6 + 1;
      v5 = v6 + 1;
      v7 = 8;
    }
    else
    {
      *v5 = " ";
      v6 = v5++;
      v63 = v5;
      v7 = (char *)v5 - (char *)v6;
      if ((char *)v5 - (char *)v6 != 8)
        goto LABEL_10;
    }
  }
  else
  {
    v7 = (char *)v5 - (char *)v6;
    if ((char *)v5 - (char *)v6 != 8)
    {
LABEL_10:
      v9 = (char *)v5 - (char *)v6;
      v61 = v5 - v6 - 1;
      if ((unint64_t)((char *)v5 - (char *)v6) <= 0xF)
        goto LABEL_42;
      goto LABEL_70;
    }
  }
  if (v5 < (_QWORD *)v4)
  {
    *v5 = "\n";
    v12 = __p;
    v13 = v5 + 1;
    goto LABEL_41;
  }
  v14 = v7 >> 3;
  if ((v4 - (char *)v6) >> 2 <= (unint64_t)((v7 >> 3) + 1))
    v15 = v14 + 1;
  else
    v15 = (v4 - (char *)v6) >> 2;
  if ((unint64_t)(v4 - (char *)v6) >= 0x7FFFFFFFFFFFFFF8)
    v16 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v16 = v15;
  if (v16 >> 61)
    sub_20AEC60CC();
  v17 = operator new(8 * v16);
  v12 = &v17[8 * v14];
  v18 = &v17[8 * v16];
  *v12 = "\n";
  v13 = v12 + 1;
  if (v5 != v6)
  {
    v19 = (char *)v5 - (char *)v6 - 8;
    if (v19 < 0x58)
    {
      v20 = v5;
      goto LABEL_38;
    }
    if ((unint64_t)((char *)v5 - (v7 & 0xFFFFFFFFFFFFFFF8) - v17) < 0x20)
    {
      v20 = v5;
      do
      {
LABEL_38:
        v27 = *--v20;
        *--v12 = v27;
      }
      while (v20 != v6);
      goto LABEL_39;
    }
    v21 = (v19 >> 3) + 1;
    v22 = 8 * (v21 & 0x3FFFFFFFFFFFFFFCLL);
    v20 = &v5[v22 / 0xFFFFFFFFFFFFFFF8];
    v12 = (_QWORD *)((char *)v12 - v22);
    v23 = &v17[8 * v14 - 16];
    v24 = (__int128 *)(v5 - 2);
    v25 = v21 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v26 = *v24;
      *(v23 - 1) = *(v24 - 1);
      *v23 = v26;
      v23 -= 2;
      v24 -= 2;
      v25 -= 4;
    }
    while (v25);
    if (v21 != (v21 & 0x3FFFFFFFFFFFFFFCLL))
      goto LABEL_38;
  }
LABEL_39:
  __p = v12;
  v64 = v18;
  if (v6)
    operator delete(v6);
LABEL_41:
  v63 = v13;
  v6 = v12;
  v5 = v13;
  v9 = (char *)v13 - (char *)v12;
  v61 = v13 - v12 - 1;
  if ((unint64_t)((char *)v13 - (char *)v12) <= 0xF)
  {
LABEL_42:
    v28 = v6;
    while (v5 < (_QWORD *)v64)
    {
      *v5 = "\n";
      v28 = __p;
      v29 = v5 + 1;
LABEL_44:
      v63 = v29;
      v9 = (char *)v29 - (char *)v28;
      v6 = v28;
      v5 = v29;
      if ((unint64_t)((char *)v29 - (char *)v28) >= 0x10)
        goto LABEL_70;
    }
    v30 = v9 >> 3;
    v31 = v64 - (char *)v28;
    if ((v64 - (char *)v28) >> 2 <= (v9 >> 3) + 1)
      v32 = v30 + 1;
    else
      v32 = v31 >> 2;
    if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFF8)
      v33 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v33 = v32;
    if (v33 >> 61)
      sub_20AEC60CC();
    v34 = operator new(8 * v33);
    v28 = &v34[8 * v30];
    *v28 = "\n";
    v29 = v28 + 1;
    if (v5 != v6)
    {
      v35 = (char *)v5 - (char *)v6 - 8;
      if (v35 < 0x168)
      {
        v36 = v5;
        goto LABEL_67;
      }
      v37 = ((char *)(v5 - 1) - (char *)v6) & 0xFFFFFFFFFFFFFFF8;
      v38 = (unint64_t)&v34[(v9 & 8) - 8];
      v39 = v38 - v37;
      v40 = (unint64_t)v5 - v37 - 8;
      v41 = v39 > v38 || v40 > (unint64_t)(v5 - 1);
      if (v41)
      {
        v36 = v5;
        goto LABEL_67;
      }
      if ((unint64_t)((char *)v5 - (v9 & 8) - v34) < 0x20)
      {
        v36 = v5;
        do
        {
LABEL_67:
          v48 = *--v36;
          *--v28 = v48;
        }
        while (v36 != v6);
        goto LABEL_68;
      }
      v42 = (v35 >> 3) + 1;
      v43 = 8 * (v42 & 0x3FFFFFFFFFFFFFFCLL);
      v36 = &v5[v43 / 0xFFFFFFFFFFFFFFF8];
      v28 = (_QWORD *)((char *)v28 - v43);
      v44 = &v34[8 * v30 - 16];
      v45 = (__int128 *)(v5 - 2);
      v46 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v47 = *v45;
        *(v44 - 1) = *(v45 - 1);
        *v44 = v47;
        v44 -= 2;
        v45 -= 2;
        v46 -= 4;
      }
      while (v46);
      if (v42 != (v42 & 0x3FFFFFFFFFFFFFFCLL))
        goto LABEL_67;
    }
LABEL_68:
    __p = v28;
    v64 = &v34[8 * v33];
    if (v6)
      operator delete(v6);
    goto LABEL_44;
  }
LABEL_70:
  v59[0] = &v60;
  v59[1] = &v65;
  v59[2] = &__p;
  v59[3] = &v61;
  v59[4] = a1;
  v60 = 0;
  LOBYTE(v57[0]) = 0;
  v66 = -1;
  v67 = v57;
  v68 = &v66;
  if (*(_DWORD *)(a3 + 32) && *(_DWORD *)(a3 + 36))
  {
    sub_20B2DA1E8((uint64_t)&v67, a3);
    v49 = v66;
    v50 = a2;
    if (!v66)
    {
      LOBYTE(v51) = 0;
      goto LABEL_77;
    }
  }
  else
  {
    v49 = 255;
    v50 = a2;
  }
  LOBYTE(v51) = 0;
  do
  {
    LOBYTE(v51) = v51 + 1;
    v41 = v49 > 9;
    v49 /= 0xAu;
  }
  while (v41);
LABEL_77:
  v52 = LOBYTE(v57[0]);
  if (LOBYTE(v57[0]))
  {
    v53 = 0;
    do
    {
      ++v53;
      v41 = v52 > 9;
      v52 /= 0xAu;
    }
    while (v41);
  }
  else
  {
    v53 = 0;
  }
  LODWORD(v51) = v51;
  if (v53 > v51)
    LODWORD(v51) = v53;
  if (v51 <= 1)
    v51 = 1;
  else
    v51 = v51;
  v58[0] = v51;
  v58[1] = 0;
  v57[0] = v50;
  v57[1] = v58;
  v67 = 0;
  sub_20B086C04(a1, v50, (unsigned int *)&v67, 1u, v61);
  v67 = v57;
  v68 = (unsigned __int8 *)v59;
  v69 = v50;
  if (*(_DWORD *)(a3 + 32) && *(_DWORD *)(a3 + 36))
    sub_20B2DA3F8((uint64_t)&v67, a3);
  if (__p)
  {
    v63 = __p;
    operator delete(__p);
  }
}

void sub_20B2DA1A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  void *v25;

  if (v25)
    operator delete(v25);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B2DA1E8(uint64_t result, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  unsigned __int8 **v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  BOOL v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  int v17;
  int i;
  int v19;
  _BYTE *v20;
  unsigned int v21;
  unsigned __int8 *v22;
  unsigned int v23;
  unsigned int v24;
  unsigned __int8 *v25;
  unsigned int v26;
  unsigned int v27;
  unsigned __int8 *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned __int8 *v31;
  unsigned int v32;
  unsigned int v33;
  unsigned __int8 *v34;
  unsigned int v35;

  v3 = *(_DWORD *)(a2 + 32);
  v2 = *(_DWORD *)(a2 + 36);
  if (v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v6 = (unsigned __int8 **)result;
    v7 = v2 - 1;
    v8 = *(unsigned int *)(a2 + 40);
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48))
      v11 = v10 == 0;
    else
      v11 = 1;
    if (!v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v10 = *(_BYTE **)(a2 + 24);
    }
    v17 = v3 - 1;
    if (v7)
    {
      if (v3 == 1)
      {
        do
        {
          v27 = **v6;
          if (v27 <= *v10)
            LOBYTE(v27) = *v10;
          **v6 = v27;
          v28 = v6[1];
          v29 = *v10;
          if (v29 >= *v28)
            LOBYTE(v29) = *v28;
          *v28 = v29;
          v10 += v9;
          --v7;
        }
        while (v7);
      }
      else
      {
        for (i = 0; i != v7; ++i)
        {
          v19 = v3 - 1;
          v20 = v10;
          do
          {
            v21 = **v6;
            if (v21 <= *v20)
              LOBYTE(v21) = *v20;
            **v6 = v21;
            v22 = v6[1];
            v23 = *v20;
            if (v23 >= *v22)
              LOBYTE(v23) = *v22;
            *v22 = v23;
            v20 += v8;
            --v19;
          }
          while (v19);
          v24 = **v6;
          if (v24 <= *v20)
            LOBYTE(v24) = *v20;
          **v6 = v24;
          v25 = v6[1];
          v26 = *v20;
          if (v26 >= *v25)
            LOBYTE(v26) = *v25;
          *v25 = v26;
          v10 += v9;
        }
      }
    }
    if (v3 != 1)
    {
      do
      {
        v30 = **v6;
        if (v30 <= *v10)
          LOBYTE(v30) = *v10;
        **v6 = v30;
        v31 = v6[1];
        v32 = *v10;
        if (v32 >= *v31)
          LOBYTE(v32) = *v31;
        *v31 = v32;
        v10 += v8;
        --v17;
      }
      while (v17);
    }
    v33 = **v6;
    if (v33 <= *v10)
      LOBYTE(v33) = *v10;
    **v6 = v33;
    v34 = v6[1];
    v35 = *v10;
    if (v35 >= *v34)
      LOBYTE(v35) = *v34;
    *v34 = v35;
  }
  return result;
}

void sub_20B2DA3F8(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  int v7;
  unsigned __int8 *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  _DWORD v14[5];
  char v15;

  v3 = *(_DWORD *)(a2 + 32);
  v2 = *(_DWORD *)(a2 + 36);
  if (v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v14[0] = 0;
    v14[1] = v3 - 1;
    v7 = *(_DWORD *)(a2 + 44);
    v14[2] = *(_DWORD *)(a2 + 40);
    v14[3] = v2 - 1;
    v14[4] = v7;
    v8 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v8)
    {
      v9 = *(_QWORD *)(a2 + 8);
      v10 = *(std::__shared_weak_count **)(a2 + 16);
      if (v10)
      {
        p_shared_owners = (unint64_t *)&v10->__shared_owners_;
        do
          v12 = __ldxr(p_shared_owners);
        while (__stxr(v12 + 1, p_shared_owners));
        do
          v13 = __ldaxr(p_shared_owners);
        while (__stlxr(v13 - 1, p_shared_owners));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v9 + 88))(v9, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v8 = *(unsigned __int8 **)(a2 + 24);
    }
    v15 = 0;
    sub_20B2DA4DC(v14, (uint64_t)&v15, a1, v8);
  }
}

void sub_20B2DA4DC(_DWORD *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  int v7;
  int v8;
  uint64_t v9;
  size_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int *v19;
  _DWORD *v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned __int8 *v25;
  void *__p[2];
  unsigned __int8 v27;
  _BYTE v28[24];
  unsigned int v29;
  std::string v30;
  _QWORD v31[5];
  _QWORD *v32;

  if (a1[3])
  {
    v7 = 0;
    while (1)
    {
      v24 = v7;
      v25 = a4;
      if (a1[1])
        break;
LABEL_3:
      sub_20B2DA7F0(a3, a4);
      a4 = &v25[a1[4]];
      v7 = v24 + 1;
      if ((v24 + 1) >= a1[3])
        goto LABEL_26;
    }
    v8 = 0;
    while (1)
    {
      v11 = **(uint64_t ***)a3;
      v12 = **(unsigned __int8 **)(*(_QWORD *)a3 + 8);
      v29 = 0;
      std::to_string(&v30, *a4);
      v31[0] = v28;
      v31[1] = &v30;
      v31[2] = v28;
      v31[3] = &v30;
      v31[4] = &v30;
      if (v29 == -1)
        sub_20AECFAB8();
      v32 = v31;
      ((void (*)(_QWORD **, _BYTE *))off_24C418970[v29])(&v32, v28);
      if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v30.__r_.__value_.__l.__data_);
      if (v29 == -1)
        sub_20AECFAB8();
      v31[0] = &v30;
      ((void (*)(void **__return_ptr, _QWORD *, _BYTE *))*(&off_24C4189B8 + v29))(__p, v31, v28);
      if (v29 != -1)
        ((void (*)(_QWORD *, _BYTE *))off_24C418958[v29])(v31, v28);
      v13 = *v11;
      *(uint64_t *)((char *)v11 + *(_QWORD *)(*v11 - 24) + 24) = v12;
      *(_DWORD *)((char *)v11 + *(_QWORD *)(v13 - 24) + 8) = *(_DWORD *)((_BYTE *)v11 + *(_QWORD *)(v13 - 24) + 8) & 0xFFFFFF4F | 0x80;
      if ((v27 & 0x80u) == 0)
        v14 = __p;
      else
        v14 = (void **)__p[0];
      if ((v27 & 0x80u) == 0)
        v15 = v27;
      else
        v15 = (uint64_t)__p[1];
      sub_20AEC01D0(v11, (uint64_t)v14, v15);
      if ((char)v27 < 0)
        operator delete(__p[0]);
      v17 = *(_QWORD *)(a3 + 8);
      v16 = *(_QWORD **)(a3 + 16);
      v18 = *(_QWORD *)(v17 + 32);
      v19 = *(unsigned int **)v17;
      v20 = *(_DWORD **)(v17 + 8);
      v21 = **(_DWORD **)v17 + 1;
      **(_DWORD **)v17 = v21;
      if (v21 == *v20)
      {
        v22 = v19[1] + 1;
        *v19 = 0;
        v19[1] = v22;
        if (v22 == v20[1])
          goto LABEL_8;
        v9 = 1;
      }
      else
      {
        v9 = 0;
      }
      v10 = strlen(*(const char **)(**(_QWORD **)(v17 + 16) + 8 * v9));
      sub_20AEC01D0(v16, *(_QWORD *)(**(_QWORD **)(v17 + 16) + 8 * v9), v10);
      sub_20B086C04(v18, v16, *(unsigned int **)v17, v9, **(_DWORD **)(v17 + 24));
LABEL_8:
      a4 += a1[2];
      if (++v8 >= a1[1])
        goto LABEL_3;
    }
  }
LABEL_26:
  if (a1[1])
  {
    v23 = 0;
    do
    {
      sub_20B2DA7F0(a3, a4);
      a4 += a1[2];
      ++v23;
    }
    while (v23 < a1[1]);
  }
  sub_20B2DA7F0(a3, a4);
}

void sub_20B2DA77C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20B2DA7F0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  _DWORD *v12;
  int v13;
  int v14;
  uint64_t v15;
  size_t v16;
  void *__p[2];
  unsigned __int8 v18;

  v3 = **(uint64_t ***)a1;
  v4 = **(unsigned __int8 **)(*(_QWORD *)a1 + 8);
  sub_20B2DA93C(a2);
  v5 = *v3;
  *(uint64_t *)((char *)v3 + *(_QWORD *)(*v3 - 24) + 24) = v4;
  *(_DWORD *)((char *)v3 + *(_QWORD *)(v5 - 24) + 8) = *(_DWORD *)((_BYTE *)v3 + *(_QWORD *)(v5 - 24) + 8) & 0xFFFFFF4F | 0x80;
  if ((v18 & 0x80u) == 0)
    v6 = __p;
  else
    v6 = (void **)__p[0];
  if ((v18 & 0x80u) == 0)
    v7 = v18;
  else
    v7 = (uint64_t)__p[1];
  sub_20AEC01D0(v3, (uint64_t)v6, v7);
  if ((char)v18 < 0)
    operator delete(__p[0]);
  v9 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD **)(a1 + 16);
  v10 = *(_QWORD *)(v9 + 32);
  v11 = *(unsigned int **)v9;
  v12 = *(_DWORD **)(v9 + 8);
  v13 = **(_DWORD **)v9 + 1;
  **(_DWORD **)v9 = v13;
  if (v13 == *v12)
  {
    v14 = v11[1] + 1;
    *v11 = 0;
    v11[1] = v14;
    if (v14 == v12[1])
      return;
    v15 = 1;
  }
  else
  {
    v15 = 0;
  }
  v16 = strlen(*(const char **)(**(_QWORD **)(v9 + 16) + 8 * v15));
  sub_20AEC01D0(v8, *(_QWORD *)(**(_QWORD **)(v9 + 16) + 8 * v15), v16);
  sub_20B086C04(v10, v8, *(unsigned int **)v9, v15, **(_DWORD **)(v9 + 24));
}

void sub_20B2DA920(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B2DA93C(unsigned __int8 *a1)
{
  uint64_t result;
  _BYTE v2[24];
  unsigned int v3;
  std::string v4;
  _QWORD v5[5];
  _QWORD *v6;

  v3 = 0;
  std::to_string(&v4, *a1);
  v5[0] = v2;
  v5[1] = &v4;
  v5[2] = v2;
  v5[3] = &v4;
  v5[4] = &v4;
  v6 = v5;
  ((void (*)(_QWORD **, _BYTE *))sub_20AED65E8)(&v6, v2);
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v4.__r_.__value_.__l.__data_);
  if (v3 == -1)
    sub_20AECFAB8();
  v5[0] = &v4;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))*(&off_24C4189B8 + v3))(v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24C418958[v3])(v5, v2);
  return result;
}

void sub_20B2DAA28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2DAA40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  sub_20AECFA60((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_20B2DAA64(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  char *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  __int128 *v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  unint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  unsigned int v49;
  _QWORD *v50;
  uint64_t v51;
  unsigned int v52;
  unsigned __int8 v53;
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[5];
  uint64_t v60;
  uint64_t v61;
  void *__p;
  void *v63;
  char *v64;
  uint64_t v65;
  unsigned __int16 v66;
  _QWORD *v67;
  unsigned __int16 *v68;
  _QWORD *v69;

  if (!*(_DWORD *)(a3 + 32) || !*(_DWORD *)(a3 + 36))
    return;
  v65 = *(_QWORD *)(a3 + 32);
  __p = 0;
  v63 = 0;
  v64 = 0;
  if (!*(_BYTE *)(a4 + 24))
  {
    v8 = operator new(0x10uLL);
    *v8 = " ";
    v8[1] = "\n";
    __p = v8;
    v63 = v8 + 2;
    v64 = (char *)(v8 + 2);
    v61 = 1;
    goto LABEL_70;
  }
  v5 = *(_QWORD **)(a4 + 8);
  v4 = *(char **)(a4 + 16);
  __p = *(void **)a4;
  v6 = __p;
  v63 = v5;
  v64 = v4;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  if (v6 == v5)
  {
    if (v5 >= (_QWORD *)v4)
    {
      v10 = (v4 - (char *)v5) >> 2;
      if (v10 <= 1)
        v10 = 1;
      if ((unint64_t)(v4 - (char *)v5) >= 0x7FFFFFFFFFFFFFF8)
        v11 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v11 = v10;
      if (v11 >> 61)
        sub_20AEC60CC();
      v6 = operator new(8 * v11);
      *v6 = " ";
      v4 = (char *)&v6[v11];
      __p = v6;
      v64 = v4;
      if (v5)
        operator delete(v5);
      v63 = v6 + 1;
      v5 = v6 + 1;
      v7 = 8;
    }
    else
    {
      *v5 = " ";
      v6 = v5++;
      v63 = v5;
      v7 = (char *)v5 - (char *)v6;
      if ((char *)v5 - (char *)v6 != 8)
        goto LABEL_10;
    }
  }
  else
  {
    v7 = (char *)v5 - (char *)v6;
    if ((char *)v5 - (char *)v6 != 8)
    {
LABEL_10:
      v9 = (char *)v5 - (char *)v6;
      v61 = v5 - v6 - 1;
      if ((unint64_t)((char *)v5 - (char *)v6) <= 0xF)
        goto LABEL_42;
      goto LABEL_70;
    }
  }
  if (v5 < (_QWORD *)v4)
  {
    *v5 = "\n";
    v12 = __p;
    v13 = v5 + 1;
    goto LABEL_41;
  }
  v14 = v7 >> 3;
  if ((v4 - (char *)v6) >> 2 <= (unint64_t)((v7 >> 3) + 1))
    v15 = v14 + 1;
  else
    v15 = (v4 - (char *)v6) >> 2;
  if ((unint64_t)(v4 - (char *)v6) >= 0x7FFFFFFFFFFFFFF8)
    v16 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v16 = v15;
  if (v16 >> 61)
    sub_20AEC60CC();
  v17 = operator new(8 * v16);
  v12 = &v17[8 * v14];
  v18 = &v17[8 * v16];
  *v12 = "\n";
  v13 = v12 + 1;
  if (v5 != v6)
  {
    v19 = (char *)v5 - (char *)v6 - 8;
    if (v19 < 0x58)
    {
      v20 = v5;
      goto LABEL_38;
    }
    if ((unint64_t)((char *)v5 - (v7 & 0xFFFFFFFFFFFFFFF8) - v17) < 0x20)
    {
      v20 = v5;
      do
      {
LABEL_38:
        v27 = *--v20;
        *--v12 = v27;
      }
      while (v20 != v6);
      goto LABEL_39;
    }
    v21 = (v19 >> 3) + 1;
    v22 = 8 * (v21 & 0x3FFFFFFFFFFFFFFCLL);
    v20 = &v5[v22 / 0xFFFFFFFFFFFFFFF8];
    v12 = (_QWORD *)((char *)v12 - v22);
    v23 = &v17[8 * v14 - 16];
    v24 = (__int128 *)(v5 - 2);
    v25 = v21 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v26 = *v24;
      *(v23 - 1) = *(v24 - 1);
      *v23 = v26;
      v23 -= 2;
      v24 -= 2;
      v25 -= 4;
    }
    while (v25);
    if (v21 != (v21 & 0x3FFFFFFFFFFFFFFCLL))
      goto LABEL_38;
  }
LABEL_39:
  __p = v12;
  v64 = v18;
  if (v6)
    operator delete(v6);
LABEL_41:
  v63 = v13;
  v6 = v12;
  v5 = v13;
  v9 = (char *)v13 - (char *)v12;
  v61 = v13 - v12 - 1;
  if ((unint64_t)((char *)v13 - (char *)v12) <= 0xF)
  {
LABEL_42:
    v28 = v6;
    while (v5 < (_QWORD *)v64)
    {
      *v5 = "\n";
      v28 = __p;
      v29 = v5 + 1;
LABEL_44:
      v63 = v29;
      v9 = (char *)v29 - (char *)v28;
      v6 = v28;
      v5 = v29;
      if ((unint64_t)((char *)v29 - (char *)v28) >= 0x10)
        goto LABEL_70;
    }
    v30 = v9 >> 3;
    v31 = v64 - (char *)v28;
    if ((v64 - (char *)v28) >> 2 <= (v9 >> 3) + 1)
      v32 = v30 + 1;
    else
      v32 = v31 >> 2;
    if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFF8)
      v33 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v33 = v32;
    if (v33 >> 61)
      sub_20AEC60CC();
    v34 = operator new(8 * v33);
    v28 = &v34[8 * v30];
    *v28 = "\n";
    v29 = v28 + 1;
    if (v5 != v6)
    {
      v35 = (char *)v5 - (char *)v6 - 8;
      if (v35 < 0x168)
      {
        v36 = v5;
        goto LABEL_67;
      }
      v37 = ((char *)(v5 - 1) - (char *)v6) & 0xFFFFFFFFFFFFFFF8;
      v38 = (unint64_t)&v34[(v9 & 8) - 8];
      v39 = v38 - v37;
      v40 = (unint64_t)v5 - v37 - 8;
      v41 = v39 > v38 || v40 > (unint64_t)(v5 - 1);
      if (v41)
      {
        v36 = v5;
        goto LABEL_67;
      }
      if ((unint64_t)((char *)v5 - (v9 & 8) - v34) < 0x20)
      {
        v36 = v5;
        do
        {
LABEL_67:
          v48 = *--v36;
          *--v28 = v48;
        }
        while (v36 != v6);
        goto LABEL_68;
      }
      v42 = (v35 >> 3) + 1;
      v43 = 8 * (v42 & 0x3FFFFFFFFFFFFFFCLL);
      v36 = &v5[v43 / 0xFFFFFFFFFFFFFFF8];
      v28 = (_QWORD *)((char *)v28 - v43);
      v44 = &v34[8 * v30 - 16];
      v45 = (__int128 *)(v5 - 2);
      v46 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v47 = *v45;
        *(v44 - 1) = *(v45 - 1);
        *v44 = v47;
        v44 -= 2;
        v45 -= 2;
        v46 -= 4;
      }
      while (v46);
      if (v42 != (v42 & 0x3FFFFFFFFFFFFFFCLL))
        goto LABEL_67;
    }
LABEL_68:
    __p = v28;
    v64 = &v34[8 * v33];
    if (v6)
      operator delete(v6);
    goto LABEL_44;
  }
LABEL_70:
  v59[0] = &v60;
  v59[1] = &v65;
  v59[2] = &__p;
  v59[3] = &v61;
  v59[4] = a1;
  v60 = 0;
  LOWORD(v57[0]) = 0;
  v66 = -1;
  v67 = v57;
  v68 = &v66;
  if (*(_DWORD *)(a3 + 32) && *(_DWORD *)(a3 + 36))
  {
    sub_20B2DB04C(&v67, a3);
    v49 = v66;
    v50 = a2;
    if (!v66)
    {
      LOBYTE(v51) = 0;
      goto LABEL_77;
    }
  }
  else
  {
    v49 = 0xFFFF;
    v50 = a2;
  }
  LOBYTE(v51) = 0;
  do
  {
    LOBYTE(v51) = v51 + 1;
    v41 = v49 > 9;
    v49 /= 0xAu;
  }
  while (v41);
LABEL_77:
  v52 = LOWORD(v57[0]);
  if (LOWORD(v57[0]))
  {
    v53 = 0;
    do
    {
      ++v53;
      v41 = v52 > 9;
      v52 /= 0xAu;
    }
    while (v41);
  }
  else
  {
    v53 = 0;
  }
  LODWORD(v51) = v51;
  if (v53 > v51)
    LODWORD(v51) = v53;
  if (v51 <= 1)
    v51 = 1;
  else
    v51 = v51;
  v58[0] = v51;
  v58[1] = 0;
  v57[0] = v50;
  v57[1] = v58;
  v67 = 0;
  sub_20B086C04(a1, v50, (unsigned int *)&v67, 1u, v61);
  v67 = v57;
  v68 = (unsigned __int16 *)v59;
  v69 = v50;
  if (*(_DWORD *)(a3 + 32) && *(_DWORD *)(a3 + 36))
    sub_20B2DB280((uint64_t)&v67, a3);
  if (__p)
  {
    v63 = __p;
    operator delete(__p);
  }
}

void sub_20B2DB00C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  void *v25;

  if (v25)
    operator delete(v25);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_20B2DB04C(_DWORD *result, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  uint64_t v6;
  int v7;
  _WORD *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  _DWORD v14[5];
  char v15;

  v3 = *(_DWORD *)(a2 + 32);
  v2 = *(_DWORD *)(a2 + 36);
  if (v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v6 = (uint64_t)result;
    v14[0] = 0;
    v14[1] = v3 - 1;
    v7 = *(_DWORD *)(a2 + 44);
    v14[2] = *(_DWORD *)(a2 + 40);
    v14[3] = v2 - 1;
    v14[4] = v7;
    v8 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v8)
    {
      v9 = *(_QWORD *)(a2 + 8);
      v10 = *(std::__shared_weak_count **)(a2 + 16);
      if (v10)
      {
        p_shared_owners = (unint64_t *)&v10->__shared_owners_;
        do
          v12 = __ldxr(p_shared_owners);
        while (__stxr(v12 + 1, p_shared_owners));
        do
          v13 = __ldaxr(p_shared_owners);
        while (__stlxr(v13 - 1, p_shared_owners));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v9 + 88))(v9, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v8 = *(_WORD **)(a2 + 24);
    }
    v15 = 0;
    return sub_20B2DB130(v14, (uint64_t)&v15, v6, v8);
  }
  return result;
}

_DWORD *sub_20B2DB130(_DWORD *result, uint64_t a2, uint64_t a3, _WORD *a4)
{
  int v4;
  int v5;
  _WORD *v6;
  _WORD *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _WORD *v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;

  v4 = result[3];
  v5 = result[1];
  if (!v4)
  {
    v7 = *(_WORD **)a3;
    v6 = *(_WORD **)(a3 + 8);
    if (!v5)
      goto LABEL_29;
    goto LABEL_17;
  }
  v7 = *(_WORD **)a3;
  v6 = *(_WORD **)(a3 + 8);
  v8 = result[4];
  if (v5)
  {
    v9 = 0;
    v10 = 2 * v8;
    v11 = 2 * result[2];
    do
    {
      v12 = a4;
      v13 = v5;
      do
      {
        v14 = (unsigned __int16)*v7;
        if (v14 <= (unsigned __int16)*v12)
          LOWORD(v14) = *v12;
        *v7 = v14;
        v15 = (unsigned __int16)*v12;
        if (v15 >= (unsigned __int16)*v6)
          LOWORD(v15) = *v6;
        *v6 = v15;
        v12 = (_WORD *)((char *)v12 + v11);
        --v13;
      }
      while (v13);
      v16 = (unsigned __int16)*v7;
      if (v16 <= (unsigned __int16)*v12)
        LOWORD(v16) = *v12;
      *v7 = v16;
      v17 = (unsigned __int16)*v12;
      if (v17 >= (unsigned __int16)*v6)
        LOWORD(v17) = *v6;
      *v6 = v17;
      a4 = (_WORD *)((char *)a4 + v10);
      ++v9;
    }
    while (v9 != v4);
LABEL_17:
    v18 = 2 * result[2];
    do
    {
      v19 = (unsigned __int16)*v7;
      if (v19 <= (unsigned __int16)*a4)
        LOWORD(v19) = *a4;
      *v7 = v19;
      v20 = (unsigned __int16)*a4;
      if (v20 >= (unsigned __int16)*v6)
        LOWORD(v20) = *v6;
      *v6 = v20;
      a4 = (_WORD *)((char *)a4 + v18);
      --v5;
    }
    while (v5);
    goto LABEL_29;
  }
  do
  {
    v21 = (unsigned __int16)*v7;
    if (v21 <= (unsigned __int16)*a4)
      LOWORD(v21) = *a4;
    *v7 = v21;
    v22 = (unsigned __int16)*a4;
    if (v22 >= (unsigned __int16)*v6)
      LOWORD(v22) = *v6;
    *v6 = v22;
    a4 += v8;
    --v4;
  }
  while (v4);
LABEL_29:
  v23 = (unsigned __int16)*v7;
  if (v23 <= (unsigned __int16)*a4)
    LOWORD(v23) = *a4;
  *v7 = v23;
  v24 = (unsigned __int16)*a4;
  if (v24 >= (unsigned __int16)*v6)
    LOWORD(v24) = *v6;
  *v6 = v24;
  return result;
}

void sub_20B2DB280(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  int v7;
  unsigned __int16 *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  _DWORD v14[5];
  char v15;

  v3 = *(_DWORD *)(a2 + 32);
  v2 = *(_DWORD *)(a2 + 36);
  if (v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v14[0] = 0;
    v14[1] = v3 - 1;
    v7 = *(_DWORD *)(a2 + 44);
    v14[2] = *(_DWORD *)(a2 + 40);
    v14[3] = v2 - 1;
    v14[4] = v7;
    v8 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v8)
    {
      v9 = *(_QWORD *)(a2 + 8);
      v10 = *(std::__shared_weak_count **)(a2 + 16);
      if (v10)
      {
        p_shared_owners = (unint64_t *)&v10->__shared_owners_;
        do
          v12 = __ldxr(p_shared_owners);
        while (__stxr(v12 + 1, p_shared_owners));
        do
          v13 = __ldaxr(p_shared_owners);
        while (__stlxr(v13 - 1, p_shared_owners));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v9 + 88))(v9, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v8 = *(unsigned __int16 **)(a2 + 24);
    }
    v15 = 0;
    sub_20B2DB364(v14, (uint64_t)&v15, a1, v8);
  }
}

void sub_20B2DB364(_DWORD *a1, uint64_t a2, uint64_t a3, unsigned __int16 *a4)
{
  int v7;
  int v8;
  uint64_t v9;
  size_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int *v19;
  _DWORD *v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned __int16 *v25;
  void *__p[2];
  unsigned __int8 v27;
  _BYTE v28[24];
  unsigned int v29;
  std::string v30;
  _QWORD v31[5];
  _QWORD *v32;

  if (a1[3])
  {
    v7 = 0;
    while (1)
    {
      v24 = v7;
      v25 = a4;
      if (a1[1])
        break;
LABEL_3:
      sub_20B2DB678(a3, a4);
      a4 = &v25[a1[4]];
      v7 = v24 + 1;
      if ((v24 + 1) >= a1[3])
        goto LABEL_26;
    }
    v8 = 0;
    while (1)
    {
      v11 = **(uint64_t ***)a3;
      v12 = **(unsigned __int8 **)(*(_QWORD *)a3 + 8);
      v29 = 0;
      std::to_string(&v30, *a4);
      v31[0] = v28;
      v31[1] = &v30;
      v31[2] = v28;
      v31[3] = &v30;
      v31[4] = &v30;
      if (v29 == -1)
        sub_20AECFAB8();
      v32 = v31;
      ((void (*)(_QWORD **, _BYTE *))off_24C418970[v29])(&v32, v28);
      if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v30.__r_.__value_.__l.__data_);
      if (v29 == -1)
        sub_20AECFAB8();
      v31[0] = &v30;
      ((void (*)(void **__return_ptr, _QWORD *, _BYTE *))*(&off_24C4189B8 + v29))(__p, v31, v28);
      if (v29 != -1)
        ((void (*)(_QWORD *, _BYTE *))off_24C418958[v29])(v31, v28);
      v13 = *v11;
      *(uint64_t *)((char *)v11 + *(_QWORD *)(*v11 - 24) + 24) = v12;
      *(_DWORD *)((char *)v11 + *(_QWORD *)(v13 - 24) + 8) = *(_DWORD *)((_BYTE *)v11 + *(_QWORD *)(v13 - 24) + 8) & 0xFFFFFF4F | 0x80;
      if ((v27 & 0x80u) == 0)
        v14 = __p;
      else
        v14 = (void **)__p[0];
      if ((v27 & 0x80u) == 0)
        v15 = v27;
      else
        v15 = (uint64_t)__p[1];
      sub_20AEC01D0(v11, (uint64_t)v14, v15);
      if ((char)v27 < 0)
        operator delete(__p[0]);
      v17 = *(_QWORD *)(a3 + 8);
      v16 = *(_QWORD **)(a3 + 16);
      v18 = *(_QWORD *)(v17 + 32);
      v19 = *(unsigned int **)v17;
      v20 = *(_DWORD **)(v17 + 8);
      v21 = **(_DWORD **)v17 + 1;
      **(_DWORD **)v17 = v21;
      if (v21 == *v20)
      {
        v22 = v19[1] + 1;
        *v19 = 0;
        v19[1] = v22;
        if (v22 == v20[1])
          goto LABEL_8;
        v9 = 1;
      }
      else
      {
        v9 = 0;
      }
      v10 = strlen(*(const char **)(**(_QWORD **)(v17 + 16) + 8 * v9));
      sub_20AEC01D0(v16, *(_QWORD *)(**(_QWORD **)(v17 + 16) + 8 * v9), v10);
      sub_20B086C04(v18, v16, *(unsigned int **)v17, v9, **(_DWORD **)(v17 + 24));
LABEL_8:
      a4 += a1[2];
      if (++v8 >= a1[1])
        goto LABEL_3;
    }
  }
LABEL_26:
  if (a1[1])
  {
    v23 = 0;
    do
    {
      sub_20B2DB678(a3, a4);
      a4 += a1[2];
      ++v23;
    }
    while (v23 < a1[1]);
  }
  sub_20B2DB678(a3, a4);
}

void sub_20B2DB604(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20B2DB678(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  _DWORD *v12;
  int v13;
  int v14;
  uint64_t v15;
  size_t v16;
  void *__p[2];
  unsigned __int8 v18;

  v3 = **(uint64_t ***)a1;
  v4 = **(unsigned __int8 **)(*(_QWORD *)a1 + 8);
  sub_20B2DB7C4(a2);
  v5 = *v3;
  *(uint64_t *)((char *)v3 + *(_QWORD *)(*v3 - 24) + 24) = v4;
  *(_DWORD *)((char *)v3 + *(_QWORD *)(v5 - 24) + 8) = *(_DWORD *)((_BYTE *)v3 + *(_QWORD *)(v5 - 24) + 8) & 0xFFFFFF4F | 0x80;
  if ((v18 & 0x80u) == 0)
    v6 = __p;
  else
    v6 = (void **)__p[0];
  if ((v18 & 0x80u) == 0)
    v7 = v18;
  else
    v7 = (uint64_t)__p[1];
  sub_20AEC01D0(v3, (uint64_t)v6, v7);
  if ((char)v18 < 0)
    operator delete(__p[0]);
  v9 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD **)(a1 + 16);
  v10 = *(_QWORD *)(v9 + 32);
  v11 = *(unsigned int **)v9;
  v12 = *(_DWORD **)(v9 + 8);
  v13 = **(_DWORD **)v9 + 1;
  **(_DWORD **)v9 = v13;
  if (v13 == *v12)
  {
    v14 = v11[1] + 1;
    *v11 = 0;
    v11[1] = v14;
    if (v14 == v12[1])
      return;
    v15 = 1;
  }
  else
  {
    v15 = 0;
  }
  v16 = strlen(*(const char **)(**(_QWORD **)(v9 + 16) + 8 * v15));
  sub_20AEC01D0(v8, *(_QWORD *)(**(_QWORD **)(v9 + 16) + 8 * v15), v16);
  sub_20B086C04(v10, v8, *(unsigned int **)v9, v15, **(_DWORD **)(v9 + 24));
}

void sub_20B2DB7A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B2DB7C4(unsigned __int16 *a1)
{
  uint64_t result;
  _BYTE v2[24];
  unsigned int v3;
  std::string v4;
  _QWORD v5[5];
  _QWORD *v6;

  v3 = 0;
  std::to_string(&v4, *a1);
  v5[0] = v2;
  v5[1] = &v4;
  v5[2] = v2;
  v5[3] = &v4;
  v5[4] = &v4;
  v6 = v5;
  ((void (*)(_QWORD **, _BYTE *))sub_20AED65E8)(&v6, v2);
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v4.__r_.__value_.__l.__data_);
  if (v3 == -1)
    sub_20AECFAB8();
  v5[0] = &v4;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))*(&off_24C4189B8 + v3))(v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24C418958[v3])(v5, v2);
  return result;
}

void sub_20B2DB8B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2DB8C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  sub_20AECFA60((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_20B2DB8EC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _BYTE *v20;
  char *v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  __int128 *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _BYTE *v37;
  unint64_t v38;
  char *v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  __int128 *v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  _QWORD *v53;
  unsigned int v54;
  uint64_t v55;
  unsigned int v56;
  unsigned __int8 v57;
  _QWORD v60[2];
  _QWORD v61[2];
  _QWORD v62[5];
  uint64_t v63;
  int v64;
  uint64_t v65;
  void *__p;
  void *v67;
  char *v68;
  uint64_t v69;
  int v70;
  unsigned __int8 v71;
  uint64_t *v72;
  unsigned __int8 *v73;
  _QWORD *v74;
  uint64_t v75[2];

  if (!*(_DWORD *)(a3 + 56) || !*(_DWORD *)(a3 + 60))
    return;
  v5 = *(_QWORD *)(a3 + 32);
  v68 = 0;
  v69 = v5;
  v70 = *(_DWORD *)(a3 + 40);
  __p = 0;
  v67 = 0;
  if (!*(_BYTE *)(a4 + 24))
  {
    v10 = *(_DWORD *)(a1 + 8);
    if (v69 > v10
      || (v11 = *(_DWORD *)(a1 + 12), v69 > v11)
      || HIDWORD(v69) > v10
      || HIDWORD(v69) * (int)v69 > v11)
    {
      v8 = (char *)operator new(0x10uLL);
      v7 = v8 + 16;
      *(_QWORD *)v8 = " ";
      *((_QWORD *)v8 + 1) = "\n";
    }
    else
    {
      v8 = (char *)operator new(0x18uLL);
      v7 = v8 + 24;
      *(_OWORD *)v8 = xmmword_24C41FC20;
      *((_QWORD *)v8 + 2) = "\n";
    }
    __p = v8;
    v67 = v7;
    v68 = v7;
    v12 = v7 - v8;
    v65 = ((v7 - v8) >> 3) - 1;
    if ((unint64_t)(v7 - v8) <= 0x17)
      goto LABEL_49;
    goto LABEL_77;
  }
  v7 = *(char **)(a4 + 8);
  v6 = *(char **)(a4 + 16);
  __p = *(void **)a4;
  v8 = (char *)__p;
  v67 = v7;
  v68 = v6;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  if (v8 == v7)
  {
    if (v7 >= v6)
    {
      v13 = (v6 - v7) >> 2;
      if (v13 <= 1)
        v13 = 1;
      if ((unint64_t)(v6 - v7) >= 0x7FFFFFFFFFFFFFF8)
        v14 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v14 = v13;
      if (v14 >> 61)
        sub_20AEC60CC();
      v8 = (char *)operator new(8 * v14);
      *(_QWORD *)v8 = " ";
      v6 = &v8[8 * v14];
      __p = v8;
      v68 = v6;
      if (v7)
        operator delete(v7);
      v67 = v8 + 8;
      v7 = v8 + 8;
      v9 = 8;
    }
    else
    {
      *(_QWORD *)v7 = " ";
      v8 = v7;
      v7 += 8;
      v67 = v7;
      v9 = v7 - v8;
      if (v7 - v8 != 8)
        goto LABEL_17;
    }
  }
  else
  {
    v9 = v7 - v8;
    if (v7 - v8 != 8)
    {
LABEL_17:
      v12 = v7 - v8;
      v65 = ((v7 - v8) >> 3) - 1;
      if ((unint64_t)(v7 - v8) <= 0x17)
        goto LABEL_49;
      goto LABEL_77;
    }
  }
  if (v7 < v6)
  {
    *(_QWORD *)v7 = "\n";
    v15 = __p;
    v16 = v7 + 8;
    goto LABEL_48;
  }
  v17 = v9 >> 3;
  if ((v6 - v8) >> 2 <= (unint64_t)((v9 >> 3) + 1))
    v18 = v17 + 1;
  else
    v18 = (v6 - v8) >> 2;
  if ((unint64_t)(v6 - v8) >= 0x7FFFFFFFFFFFFFF8)
    v19 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v19 = v18;
  if (v19 >> 61)
    sub_20AEC60CC();
  v20 = operator new(8 * v19);
  v15 = &v20[8 * v17];
  v21 = &v20[8 * v19];
  *v15 = "\n";
  v16 = v15 + 1;
  if (v7 != v8)
  {
    v22 = v7 - v8 - 8;
    if (v22 < 0x58)
    {
      v23 = v7;
      goto LABEL_45;
    }
    if ((unint64_t)(&v7[-(v9 & 0xFFFFFFFFFFFFFFF8)] - v20) < 0x20)
    {
      v23 = v7;
      do
      {
LABEL_45:
        v30 = *((_QWORD *)v23 - 1);
        v23 -= 8;
        *--v15 = v30;
      }
      while (v23 != v8);
      goto LABEL_46;
    }
    v24 = (v22 >> 3) + 1;
    v25 = 8 * (v24 & 0x3FFFFFFFFFFFFFFCLL);
    v23 = &v7[-v25];
    v15 = (_QWORD *)((char *)v15 - v25);
    v26 = &v20[8 * v17 - 16];
    v27 = (__int128 *)(v7 - 16);
    v28 = v24 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v29 = *v27;
      *(v26 - 1) = *(v27 - 1);
      *v26 = v29;
      v26 -= 2;
      v27 -= 2;
      v28 -= 4;
    }
    while (v28);
    if (v24 != (v24 & 0x3FFFFFFFFFFFFFFCLL))
      goto LABEL_45;
  }
LABEL_46:
  __p = v15;
  v68 = v21;
  if (v8)
    operator delete(v8);
LABEL_48:
  v67 = v16;
  v8 = (char *)v15;
  v7 = (char *)v16;
  v12 = (char *)v16 - (char *)v15;
  v65 = v16 - v15 - 1;
  if ((unint64_t)((char *)v16 - (char *)v15) <= 0x17)
  {
LABEL_49:
    v31 = v8;
    while (v7 < v68)
    {
      *(_QWORD *)v7 = "\n";
      v31 = __p;
      v32 = v7 + 8;
LABEL_51:
      v67 = v32;
      v12 = (char *)v32 - (char *)v31;
      v8 = (char *)v31;
      v7 = (char *)v32;
      if ((unint64_t)((char *)v32 - (char *)v31) >= 0x18)
        goto LABEL_77;
    }
    v33 = v12 >> 3;
    v34 = v68 - (char *)v31;
    if ((v68 - (char *)v31) >> 2 <= (v12 >> 3) + 1)
      v35 = v33 + 1;
    else
      v35 = v34 >> 2;
    if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8)
      v36 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v36 = v35;
    if (v36 >> 61)
      sub_20AEC60CC();
    v37 = operator new(8 * v36);
    v31 = &v37[8 * v33];
    *v31 = "\n";
    v32 = v31 + 1;
    if (v7 != v8)
    {
      v38 = v7 - v8 - 8;
      if (v38 < 0x168)
      {
        v39 = v7;
        goto LABEL_74;
      }
      v40 = (v7 - 8 - v8) & 0xFFFFFFFFFFFFFFF8;
      v41 = v12 & 0xFFFFFFFFFFFFFFF8;
      v42 = (unint64_t)&v37[(v12 & 0xFFFFFFFFFFFFFFF8) - 8];
      v43 = v42 - v40;
      v44 = (unint64_t)&v7[-v40 - 8];
      v45 = v43 > v42 || v44 > (unint64_t)(v7 - 8);
      if (v45)
      {
        v39 = v7;
        goto LABEL_74;
      }
      if ((unint64_t)(&v7[-v41] - v37) < 0x20)
      {
        v39 = v7;
        do
        {
LABEL_74:
          v52 = *((_QWORD *)v39 - 1);
          v39 -= 8;
          *--v31 = v52;
        }
        while (v39 != v8);
        goto LABEL_75;
      }
      v46 = (v38 >> 3) + 1;
      v47 = 8 * (v46 & 0x3FFFFFFFFFFFFFFCLL);
      v39 = &v7[-v47];
      v31 = (_QWORD *)((char *)v31 - v47);
      v48 = &v37[v41 - 16];
      v49 = (__int128 *)(v7 - 16);
      v50 = v46 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v51 = *v49;
        *(v48 - 1) = *(v49 - 1);
        *v48 = v51;
        v48 -= 2;
        v49 -= 2;
        v50 -= 4;
      }
      while (v50);
      if (v46 != (v46 & 0x3FFFFFFFFFFFFFFCLL))
        goto LABEL_74;
    }
LABEL_75:
    __p = v31;
    v68 = &v37[8 * v36];
    if (v8)
      operator delete(v8);
    goto LABEL_51;
  }
LABEL_77:
  v64 = 0;
  v62[0] = &v63;
  v62[1] = &v69;
  v62[2] = &__p;
  v62[3] = &v65;
  v62[4] = a1;
  v63 = 0;
  LOBYTE(v75[0]) = 0;
  v71 = -1;
  v72 = v75;
  v73 = &v71;
  if (*(_DWORD *)(a3 + 32) && *(_DWORD *)(a3 + 36) && *(_DWORD *)(a3 + 40))
  {
    v60[0] = &v72;
    sub_20B2DBF5C((uint64_t)v60, a3);
    v53 = a2;
    v54 = v71;
    if (!v71)
    {
      LOBYTE(v55) = 0;
      goto LABEL_85;
    }
  }
  else
  {
    v54 = 255;
    v53 = a2;
  }
  LOBYTE(v55) = 0;
  do
  {
    LOBYTE(v55) = v55 + 1;
    v45 = v54 > 9;
    v54 /= 0xAu;
  }
  while (v45);
LABEL_85:
  v56 = LOBYTE(v75[0]);
  if (LOBYTE(v75[0]))
  {
    v57 = 0;
    do
    {
      ++v57;
      v45 = v56 > 9;
      v56 /= 0xAu;
    }
    while (v45);
  }
  else
  {
    v57 = 0;
  }
  LODWORD(v55) = v55;
  if (v57 > v55)
    LODWORD(v55) = v57;
  if (v55 <= 1)
    v55 = 1;
  else
    v55 = v55;
  v61[0] = v55;
  v61[1] = 0;
  v60[0] = v53;
  v60[1] = v61;
  LODWORD(v73) = 0;
  v72 = 0;
  sub_20B2DC204(a1, v53, (unsigned int *)&v72, 2u, v65);
  v72 = v60;
  v73 = (unsigned __int8 *)v62;
  v74 = v53;
  if (*(_DWORD *)(a3 + 32) && *(_DWORD *)(a3 + 36) && *(_DWORD *)(a3 + 40))
  {
    v75[0] = (uint64_t)&v72;
    sub_20B2DC4E8(v75, a3);
  }
  if (__p)
  {
    v67 = __p;
    operator delete(__p);
  }
}

void sub_20B2DBF1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  void *v24;

  if (v24)
    operator delete(v24);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B2DBF5C(uint64_t result, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  BOOL v5;
  _QWORD **v8;
  int v9;
  unsigned int v10;
  _BYTE *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  unsigned int v17;
  _DWORD v18[5];
  unsigned int v19;
  unsigned int v20;
  uint64_t v21[2];

  v3 = *(_DWORD *)(a2 + 32);
  v2 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (v3)
    v5 = v2 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v8 = (_QWORD **)result;
    v18[0] = 0;
    v18[1] = v3 - 1;
    v9 = *(_DWORD *)(a2 + 48);
    v18[2] = *(_DWORD *)(a2 + 44);
    v18[3] = v2 - 1;
    v10 = v4 - 1;
    v18[4] = v9;
    v19 = v10;
    v20 = *(_DWORD *)(a2 + 52);
    v11 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(_BYTE **)(a2 + 24);
      v10 = v19;
    }
    v21[0] = 0;
    v21[1] = 0;
    if (v10)
    {
      v17 = 0;
      do
      {
        sub_20B2DC08C((uint64_t)v18, v21, v8, v11);
        v11 += v20;
        ++v17;
      }
      while (v17 < v19);
    }
    return sub_20B2DC08C((uint64_t)v18, v21, v8, v11);
  }
  return result;
}

uint64_t sub_20B2DC08C(uint64_t result, uint64_t *a2, _QWORD **a3, _BYTE *a4)
{
  unsigned int v4;
  _BYTE **v5;
  _BYTE *v6;
  unsigned int v7;
  _BYTE *v8;
  unsigned int v9;
  _BYTE **v10;
  uint64_t v11;
  _BYTE *v12;
  unsigned int v13;
  _BYTE *v14;
  unsigned int v15;
  _BYTE **v16;
  uint64_t v17;
  _BYTE *v18;
  unsigned int v19;
  _BYTE *v20;
  unsigned int v21;
  _BYTE **v22;
  _BYTE *v23;
  unsigned int v24;
  _BYTE *v25;
  unsigned int v26;
  _BYTE **v27;
  uint64_t v28;
  _BYTE *v29;
  unsigned int v30;
  _BYTE *v31;
  unsigned int v32;
  _BYTE **v33;
  uint64_t v34;
  _BYTE *v35;
  unsigned int v36;
  _BYTE *v37;
  unsigned int v38;

  *a2 = (uint64_t)a4;
  if (*(_DWORD *)(result + 12))
  {
    v4 = 0;
    do
    {
      *a2 = (uint64_t)a4;
      v5 = (_BYTE **)*a3;
      v6 = (_BYTE *)**a3;
      v7 = *v6;
      if (v7 <= *a4)
        LOBYTE(v7) = *a4;
      *v6 = v7;
      v8 = v5[1];
      v9 = *a4;
      if (v9 >= *v8)
        LOBYTE(v9) = *v8;
      *v8 = v9;
      v10 = (_BYTE **)*a3;
      v11 = *a2;
      v12 = (_BYTE *)**a3;
      v13 = *v12;
      if (v13 <= *(unsigned __int8 *)(*a2 + 1))
        LOBYTE(v13) = *(_BYTE *)(*a2 + 1);
      *v12 = v13;
      v14 = v10[1];
      v15 = *(unsigned __int8 *)(v11 + 1);
      if (v15 >= *v14)
        LOBYTE(v15) = *v14;
      *v14 = v15;
      v16 = (_BYTE **)*a3;
      v17 = *a2;
      v18 = (_BYTE *)**a3;
      v19 = *v18;
      if (v19 <= *(unsigned __int8 *)(*a2 + 2))
        LOBYTE(v19) = *(_BYTE *)(*a2 + 2);
      *v18 = v19;
      v20 = v16[1];
      v21 = *(unsigned __int8 *)(v17 + 2);
      if (v21 >= *v20)
        LOBYTE(v21) = *v20;
      *v20 = v21;
      a4 += *(unsigned int *)(result + 16);
      ++v4;
    }
    while (v4 < *(_DWORD *)(result + 12));
  }
  *a2 = (uint64_t)a4;
  v22 = (_BYTE **)*a3;
  v23 = (_BYTE *)**a3;
  v24 = *v23;
  if (v24 <= *a4)
    LOBYTE(v24) = *a4;
  *v23 = v24;
  v25 = v22[1];
  v26 = *a4;
  if (v26 >= *v25)
    LOBYTE(v26) = *v25;
  *v25 = v26;
  v27 = (_BYTE **)*a3;
  v28 = *a2;
  v29 = (_BYTE *)**a3;
  v30 = *v29;
  if (v30 <= *(unsigned __int8 *)(*a2 + 1))
    LOBYTE(v30) = *(_BYTE *)(*a2 + 1);
  *v29 = v30;
  v31 = v27[1];
  v32 = *(unsigned __int8 *)(v28 + 1);
  if (v32 >= *v31)
    LOBYTE(v32) = *v31;
  *v31 = v32;
  v33 = (_BYTE **)*a3;
  v34 = *a2;
  v35 = (_BYTE *)**a3;
  v36 = *v35;
  if (v36 <= *(unsigned __int8 *)(*a2 + 2))
    LOBYTE(v36) = *(_BYTE *)(*a2 + 2);
  *v35 = v36;
  v37 = v33[1];
  v38 = *(unsigned __int8 *)(v34 + 2);
  if (v38 >= *v37)
    LOBYTE(v38) = *v37;
  *v37 = v38;
  return result;
}

_QWORD *sub_20B2DC204(uint64_t a1, _QWORD *a2, unsigned int *a3, unsigned int a4, unsigned int a5)
{
  unsigned int v6;
  uint64_t v9;
  _QWORD *result;
  std::string *v11;
  std::string::size_type size;
  std::string *v13;
  std::string::size_type v14;
  uint64_t v15;
  unsigned int v16;
  std::string v17;

  if (a4 > a5)
  {
    v6 = a4;
    v9 = a4;
    do
    {
      v15 = *(_QWORD *)a3;
      v16 = a3[2];
      ++*(_DWORD *)((char *)&v15 + v9 * 4);
      sub_20AEC01D0(a2, (uint64_t)"[", 1);
      std::to_string(&v17, v6);
      if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v11 = &v17;
      else
        v11 = (std::string *)v17.__r_.__value_.__r.__words[0];
      if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v17.__r_.__value_.__r.__words[2]);
      else
        size = v17.__r_.__value_.__l.__size_;
      sub_20AEC01D0(a2, (uint64_t)v11, size);
      if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v17.__r_.__value_.__l.__data_);
      sub_20AEC01D0(a2, (uint64_t)"d-slice #", 9);
      std::to_string(&v17, a3[v9]);
      if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v13 = &v17;
      else
        v13 = (std::string *)v17.__r_.__value_.__r.__words[0];
      if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v14 = HIBYTE(v17.__r_.__value_.__r.__words[2]);
      else
        v14 = v17.__r_.__value_.__l.__size_;
      sub_20AEC01D0(a2, (uint64_t)v13, v14);
      if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v17.__r_.__value_.__l.__data_);
      sub_20AEC01D0(a2, (uint64_t)": ", 2);
      sub_20B2DC3BC(a2, a3);
      sub_20AEC01D0(a2, (uint64_t)" to ", 4);
      sub_20B2DC3BC(a2, (unsigned int *)&v15);
      result = sub_20AEC01D0(a2, (uint64_t)"]\n", 2);
      --v6;
      --v9;
    }
    while (v6 > a5);
  }
  return result;
}

void sub_20B2DC39C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B2DC3BC(_QWORD *a1, unsigned int *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  unsigned int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B0F9814((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))*(&off_24C4189B8 + v10))(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C418958[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B2DC4A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B2DC4C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2DC4D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2DC4E8(uint64_t *a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  int v19;
  unsigned __int8 *v20;
  int v21;
  uint64_t v22;
  size_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  void *p_p;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int *v34;
  _DWORD *v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  size_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int *v51;
  _DWORD *v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  size_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int *v68;
  _DWORD *v69;
  int v70;
  int v71;
  int v72;
  int v73;
  uint64_t v74;
  unsigned __int8 *v75;
  int v76;
  unsigned __int8 *v77;
  uint64_t v78;
  void *__p;
  uint64_t v80;
  unsigned __int8 v81;
  _BYTE v82[24];
  unsigned int v83;
  std::string v84;
  std::string *v85;
  std::string *v86;
  _BYTE *v87;
  std::string *v88;
  std::string *v89;
  _QWORD v90[3];

  v2 = *(_DWORD *)(a2 + 36);
  v3 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v11 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72))
      v12 = v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(p_shared_owners);
        while (__stxr(v16 + 1, p_shared_owners));
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v13 + 88))(v13, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(unsigned __int8 **)(a2 + 24);
    }
    v18 = v2 - 1;
    if (v8)
    {
      if (v18)
      {
        v19 = 0;
        v20 = v11 + 2;
        v78 = v9;
        v74 = v10;
        v73 = v18;
        while (1)
        {
          v76 = v19;
          v77 = v11;
          v75 = v20;
          v21 = v18;
          do
          {
            v24 = (_QWORD *)*a1;
            v25 = *(_QWORD *)*a1;
            v26 = *(uint64_t **)v25;
            v27 = **(unsigned __int8 **)(v25 + 8);
            v83 = 0;
            std::to_string(&v84, *(v20 - 2));
            v85 = (std::string *)v82;
            v86 = &v84;
            v87 = v82;
            v88 = &v84;
            v89 = &v84;
            if (v83 == -1)
              sub_20AECFAB8();
            v90[0] = &v85;
            ((void (*)(_QWORD *, _BYTE *))off_24C418970[v83])(v90, v82);
            if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v84.__r_.__value_.__l.__data_);
            if (v83 == -1)
              sub_20AECFAB8();
            v85 = &v84;
            ((void (*)(void **__return_ptr, std::string **, _BYTE *))*(&off_24C4189B8 + v83))(&__p, &v85, v82);
            if (v83 != -1)
              ((void (*)(std::string **, _BYTE *))off_24C418958[v83])(&v85, v82);
            v28 = *v26;
            *(uint64_t *)((char *)v26 + *(_QWORD *)(*v26 - 24) + 24) = v27;
            *(_DWORD *)((char *)v26 + *(_QWORD *)(v28 - 24) + 8) = *(_DWORD *)((_BYTE *)v26 + *(_QWORD *)(v28 - 24) + 8) & 0xFFFFFF4F | 0x80;
            if ((v81 & 0x80u) == 0)
              p_p = &__p;
            else
              p_p = __p;
            if ((v81 & 0x80u) == 0)
              v30 = v81;
            else
              v30 = v80;
            sub_20AEC01D0(v26, (uint64_t)p_p, v30);
            if ((char)v81 < 0)
              operator delete(__p);
            v32 = v24[1];
            v31 = (_QWORD *)v24[2];
            v33 = *(_QWORD *)(v32 + 32);
            v34 = *(unsigned int **)v32;
            v35 = *(_DWORD **)(v32 + 8);
            v36 = **(_DWORD **)v32 + 1;
            **(_DWORD **)v32 = v36;
            if (v36 == *v35)
            {
              v37 = v34[1] + 1;
              *v34 = 0;
              v34[1] = v37;
              if (v37 == v35[1])
              {
                v38 = v34[2] + 1;
                v34[1] = 0;
                v34[2] = v38;
                if (v38 == v35[2])
                  goto LABEL_48;
                v39 = 2;
              }
              else
              {
                v39 = 1;
              }
            }
            else
            {
              v39 = 0;
            }
            v40 = strlen(*(const char **)(**(_QWORD **)(v32 + 16) + 8 * v39));
            sub_20AEC01D0(v31, *(_QWORD *)(**(_QWORD **)(v32 + 16) + 8 * v39), v40);
            sub_20B2DC204(v33, v31, *(unsigned int **)v32, v39, **(_DWORD **)(v32 + 24));
LABEL_48:
            v41 = (_QWORD *)*a1;
            v42 = *(_QWORD *)*a1;
            v43 = *(uint64_t **)v42;
            v44 = **(unsigned __int8 **)(v42 + 8);
            v83 = 0;
            std::to_string(&v84, *(v20 - 1));
            v85 = (std::string *)v82;
            v86 = &v84;
            v87 = v82;
            v88 = &v84;
            v89 = &v84;
            if (v83 == -1)
              sub_20AECFAB8();
            v90[0] = &v85;
            ((void (*)(_QWORD *, _BYTE *))off_24C418970[v83])(v90, v82);
            if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v84.__r_.__value_.__l.__data_);
            if (v83 == -1)
              sub_20AECFAB8();
            v85 = &v84;
            ((void (*)(void **__return_ptr, std::string **, _BYTE *))*(&off_24C4189B8 + v83))(&__p, &v85, v82);
            if (v83 != -1)
              ((void (*)(std::string **, _BYTE *))off_24C418958[v83])(&v85, v82);
            v45 = *v43;
            *(uint64_t *)((char *)v43 + *(_QWORD *)(*v43 - 24) + 24) = v44;
            *(_DWORD *)((char *)v43 + *(_QWORD *)(v45 - 24) + 8) = *(_DWORD *)((_BYTE *)v43 + *(_QWORD *)(v45 - 24) + 8) & 0xFFFFFF4F | 0x80;
            if ((v81 & 0x80u) == 0)
              v46 = &__p;
            else
              v46 = __p;
            if ((v81 & 0x80u) == 0)
              v47 = v81;
            else
              v47 = v80;
            sub_20AEC01D0(v43, (uint64_t)v46, v47);
            if ((char)v81 < 0)
              operator delete(__p);
            v49 = v41[1];
            v48 = (_QWORD *)v41[2];
            v50 = *(_QWORD *)(v49 + 32);
            v51 = *(unsigned int **)v49;
            v52 = *(_DWORD **)(v49 + 8);
            v53 = **(_DWORD **)v49 + 1;
            **(_DWORD **)v49 = v53;
            if (v53 == *v52)
            {
              v54 = v51[1] + 1;
              *v51 = 0;
              v51[1] = v54;
              if (v54 == v52[1])
              {
                v55 = v51[2] + 1;
                v51[1] = 0;
                v51[2] = v55;
                if (v55 == v52[2])
                  goto LABEL_69;
                v56 = 2;
              }
              else
              {
                v56 = 1;
              }
            }
            else
            {
              v56 = 0;
            }
            v57 = strlen(*(const char **)(**(_QWORD **)(v49 + 16) + 8 * v56));
            sub_20AEC01D0(v48, *(_QWORD *)(**(_QWORD **)(v49 + 16) + 8 * v56), v57);
            sub_20B2DC204(v50, v48, *(unsigned int **)v49, v56, **(_DWORD **)(v49 + 24));
LABEL_69:
            v58 = (_QWORD *)*a1;
            v59 = *(_QWORD *)*a1;
            v60 = *(uint64_t **)v59;
            v61 = **(unsigned __int8 **)(v59 + 8);
            v83 = 0;
            std::to_string(&v84, *v20);
            v85 = (std::string *)v82;
            v86 = &v84;
            v87 = v82;
            v88 = &v84;
            v89 = &v84;
            if (v83 == -1)
              sub_20AECFAB8();
            v90[0] = &v85;
            ((void (*)(_QWORD *, _BYTE *))off_24C418970[v83])(v90, v82);
            if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v84.__r_.__value_.__l.__data_);
            if (v83 == -1)
              sub_20AECFAB8();
            v85 = &v84;
            ((void (*)(void **__return_ptr, std::string **, _BYTE *))*(&off_24C4189B8 + v83))(&__p, &v85, v82);
            if (v83 != -1)
              ((void (*)(std::string **, _BYTE *))off_24C418958[v83])(&v85, v82);
            v62 = *v60;
            *(uint64_t *)((char *)v60 + *(_QWORD *)(*v60 - 24) + 24) = v61;
            *(_DWORD *)((char *)v60 + *(_QWORD *)(v62 - 24) + 8) = *(_DWORD *)((_BYTE *)v60 + *(_QWORD *)(v62 - 24) + 8) & 0xFFFFFF4F | 0x80;
            if ((v81 & 0x80u) == 0)
              v63 = &__p;
            else
              v63 = __p;
            if ((v81 & 0x80u) == 0)
              v64 = v81;
            else
              v64 = v80;
            sub_20AEC01D0(v60, (uint64_t)v63, v64);
            if ((char)v81 < 0)
              operator delete(__p);
            v66 = v58[1];
            v65 = (_QWORD *)v58[2];
            v67 = *(_QWORD *)(v66 + 32);
            v68 = *(unsigned int **)v66;
            v69 = *(_DWORD **)(v66 + 8);
            v70 = **(_DWORD **)v66 + 1;
            **(_DWORD **)v66 = v70;
            if (v70 != *v69)
            {
              v22 = 0;
LABEL_25:
              v23 = strlen(*(const char **)(**(_QWORD **)(v66 + 16) + 8 * v22));
              sub_20AEC01D0(v65, *(_QWORD *)(**(_QWORD **)(v66 + 16) + 8 * v22), v23);
              sub_20B2DC204(v67, v65, *(unsigned int **)v66, v22, **(_DWORD **)(v66 + 24));
              goto LABEL_26;
            }
            v71 = v68[1] + 1;
            *v68 = 0;
            v68[1] = v71;
            if (v71 != v69[1])
            {
              v22 = 1;
              goto LABEL_25;
            }
            v72 = v68[2] + 1;
            v68[1] = 0;
            v68[2] = v72;
            if (v72 != v69[2])
            {
              v22 = 2;
              goto LABEL_25;
            }
LABEL_26:
            v9 = v78;
            v20 += v78;
            --v21;
          }
          while (v21);
          sub_20B2DCD8C(*a1, v20 - 2);
          sub_20B2DCD8C(*a1, v20 - 1);
          sub_20B2DCD8C(*a1, v20);
          v11 = &v77[v74];
          v19 = v76 + 1;
          v20 = &v75[v74];
          v18 = v73;
          if (v76 + 1 == v8)
            goto LABEL_89;
        }
      }
      do
      {
        sub_20B2DCD8C(*a1, v11);
        sub_20B2DCD8C(*a1, v11 + 1);
        sub_20B2DCD8C(*a1, v11 + 2);
        v11 += v10;
        --v8;
      }
      while (v8);
    }
LABEL_89:
    while (v18)
    {
      sub_20B2DCD8C(*a1, v11);
      sub_20B2DCD8C(*a1, v11 + 1);
      sub_20B2DCD8C(*a1, v11 + 2);
      v11 += v9;
      --v18;
    }
    sub_20B2DCD8C(*a1, v11);
    sub_20B2DCD8C(*a1, v11 + 1);
    sub_20B2DCD8C(*a1, v11 + 2);
  }
}

void sub_20B2DCC68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,uint64_t a24,uint64_t a25,int a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a22 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20B2DCD8C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  _DWORD *v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  size_t v17;
  void *__p[2];
  unsigned __int8 v19;

  v3 = **(uint64_t ***)a1;
  v4 = **(unsigned __int8 **)(*(_QWORD *)a1 + 8);
  sub_20B2DA93C(a2);
  v5 = *v3;
  *(uint64_t *)((char *)v3 + *(_QWORD *)(*v3 - 24) + 24) = v4;
  *(_DWORD *)((char *)v3 + *(_QWORD *)(v5 - 24) + 8) = *(_DWORD *)((_BYTE *)v3 + *(_QWORD *)(v5 - 24) + 8) & 0xFFFFFF4F | 0x80;
  if ((v19 & 0x80u) == 0)
    v6 = __p;
  else
    v6 = (void **)__p[0];
  if ((v19 & 0x80u) == 0)
    v7 = v19;
  else
    v7 = (uint64_t)__p[1];
  sub_20AEC01D0(v3, (uint64_t)v6, v7);
  if ((char)v19 < 0)
    operator delete(__p[0]);
  v9 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD **)(a1 + 16);
  v10 = *(_QWORD *)(v9 + 32);
  v11 = *(unsigned int **)v9;
  v12 = *(_DWORD **)(v9 + 8);
  v13 = **(_DWORD **)v9 + 1;
  **(_DWORD **)v9 = v13;
  if (v13 == *v12)
  {
    v14 = v11[1] + 1;
    *v11 = 0;
    v11[1] = v14;
    if (v14 == v12[1])
    {
      v15 = v11[2] + 1;
      v11[1] = 0;
      v11[2] = v15;
      if (v15 == v12[2])
        return;
      v16 = 2;
    }
    else
    {
      v16 = 1;
    }
  }
  else
  {
    v16 = 0;
  }
  v17 = strlen(*(const char **)(**(_QWORD **)(v9 + 16) + 8 * v16));
  sub_20AEC01D0(v8, *(_QWORD *)(**(_QWORD **)(v9 + 16) + 8 * v16), v17);
  sub_20B2DC204(v10, v8, *(unsigned int **)v9, v16, **(_DWORD **)(v9 + 24));
}

void sub_20B2DCEDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B2DCEF8(uint64_t *a1, int a2)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD __dst[20];
  _QWORD *v9;

  v9 = (_QWORD *)*a1;
  memcpy(__dst, &unk_20B5F4668, sizeof(__dst));
  v4 = *(_DWORD *)((char *)&xmmword_20B5F45C8 + (((char *)sub_20B2DE4E8(__dst, (uint64_t *)&v9) - (char *)__dst) >> 1));
  __dst[0] = xmmword_20B5F4418;
  __dst[1] = unk_20B5F4428;
  __dst[2] = xmmword_20B5F4438;
  *(_QWORD *)&__dst[3] = 0x2600000025;
  if (a2 != 1)
    goto LABEL_18;
  v5 = (char *)&__dst[3] + 8;
  v6 = 0;
  switch(v4)
  {
    case 1:
      goto LABEL_16;
    case 2:
      v6 = 1;
      goto LABEL_16;
    case 3:
      v6 = 2;
      goto LABEL_16;
    case 4:
      v6 = 3;
      goto LABEL_16;
    case 5:
      v6 = 4;
      goto LABEL_16;
    case 7:
      v6 = 5;
      goto LABEL_16;
    case 8:
      v6 = 6;
      goto LABEL_16;
    case 21:
      v6 = 7;
      goto LABEL_16;
    case 22:
      v6 = 8;
      goto LABEL_16;
    case 25:
      v6 = 9;
      goto LABEL_16;
    case 31:
      v6 = 10;
      goto LABEL_16;
    case 32:
      v6 = 11;
      goto LABEL_16;
    case 37:
      v6 = 12;
      goto LABEL_16;
    case 38:
      v6 = 13;
LABEL_16:
      v5 = (char *)__dst + 4 * v6;
      break;
    default:
      break;
  }
  if (v5 - (char *)__dst != 56)
  {
    v9 = a1;
    sub_20B2E01DC(v4);
  }
  else
  {
LABEL_18:
    v7 = a1[1];
    v9 = &v7;
    sub_20B49D13C(v4);
  }
}

void sub_20B2DD08C(uint64_t *a1, int a2)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD __dst[20];
  _QWORD *v9;

  v9 = (_QWORD *)*a1;
  memcpy(__dst, &unk_20B5F4668, sizeof(__dst));
  v4 = *(_DWORD *)((char *)&xmmword_20B5F45C8 + (((char *)sub_20B2DE4E8(__dst, (uint64_t *)&v9) - (char *)__dst) >> 1));
  __dst[0] = xmmword_20B5F4450;
  __dst[1] = unk_20B5F4460;
  __dst[2] = xmmword_20B5F4470;
  *(_QWORD *)&__dst[3] = 0x2600000025;
  if (a2 != 1)
    goto LABEL_18;
  v5 = (char *)&__dst[3] + 8;
  v6 = 0;
  switch(v4)
  {
    case 1:
      goto LABEL_16;
    case 2:
      v6 = 1;
      goto LABEL_16;
    case 3:
      v6 = 2;
      goto LABEL_16;
    case 4:
      v6 = 3;
      goto LABEL_16;
    case 5:
      v6 = 4;
      goto LABEL_16;
    case 7:
      v6 = 5;
      goto LABEL_16;
    case 8:
      v6 = 6;
      goto LABEL_16;
    case 21:
      v6 = 7;
      goto LABEL_16;
    case 22:
      v6 = 8;
      goto LABEL_16;
    case 25:
      v6 = 9;
      goto LABEL_16;
    case 31:
      v6 = 10;
      goto LABEL_16;
    case 32:
      v6 = 11;
      goto LABEL_16;
    case 37:
      v6 = 12;
      goto LABEL_16;
    case 38:
      v6 = 13;
LABEL_16:
      v5 = (char *)__dst + 4 * v6;
      break;
    default:
      break;
  }
  if (v5 - (char *)__dst != 56)
  {
    v9 = a1;
    sub_20B2E2D00(v4);
  }
  else
  {
LABEL_18:
    v7 = a1[1];
    v9 = &v7;
    sub_20B49D13C(v4);
  }
}

uint64_t sub_20B2DD220(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  int v27;
  uint64_t (**v28)();
  uint64_t v29;
  std::__shared_weak_count *v30;
  int v31;
  _OWORD v32[10];
  uint64_t v33;

  v28 = &off_24C3FA3D0;
  sub_20B2E3F7C(a2, (uint64_t)&v29);
  if ((*(_QWORD *)&a3 & 0xFF0000) == 0)
  {
    LOWORD(a3) = 1;
    v12 = v30;
    if (!v30)
      goto LABEL_11;
    goto LABEL_7;
  }
  if (!sub_20B2DE318(v31, (unsigned __int16)a3, v6, v7, v8, v9, v10, v11, v23)
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/ImageIO/src/Serialization.cpp", 218, (uint64_t)"CanSerialize(to_serialize.RuntimeFormat(), *op_format)", 54, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v12 = v30;
  if (v30)
  {
LABEL_7:
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
LABEL_11:
  *(_WORD *)a1 = a3;
  sub_20B2E3F7C(a2, (uint64_t)&v24);
  v15 = v26;
  v32[6] = xmmword_20B5F4628;
  v32[7] = unk_20B5F4638;
  v32[8] = xmmword_20B5F4648;
  v32[9] = unk_20B5F4658;
  v32[2] = xmmword_20B5F45E8;
  v32[3] = unk_20B5F45F8;
  v32[4] = xmmword_20B5F4608;
  v32[5] = unk_20B5F4618;
  v32[0] = xmmword_20B5F45C8;
  v32[1] = unk_20B5F45D8;
  v16 = (char *)sub_20B2DE8B0(v32, v27);
  if (v16 != (char *)&v33)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)((char *)&unk_20B5F4668 + 2 * (v16 - (char *)v32));
    *(_QWORD *)(a1 + 16) = v15;
    v17 = v25;
    if (!v25)
      goto LABEL_20;
    goto LABEL_16;
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/ImageIO/src/Serialization.cpp", 166, (uint64_t)"maybe_format", 12, (uint64_t)"Format is not serializable. Must be a non-dynamic format.", 57, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = v15;
  v17 = v25;
  if (v25)
  {
LABEL_16:
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
LABEL_20:
  *(_DWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = &off_24C3FF020;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v20 = *(_OWORD *)(a2 + 24);
  v21 = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 86) = *(_QWORD *)(a2 + 54);
  *(_OWORD *)(a1 + 72) = v21;
  *(_OWORD *)(a1 + 56) = v20;
  *(_DWORD *)(a1 + 96) = 1;
  return a1;
}

void sub_20B2DD45C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20AF9E0BC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2DD470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AF9E0BC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2DD484(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  int v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 53))
      goto LABEL_15;
LABEL_18:
    v33 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 53))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v33, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v32 = 0;
    v22 = *(_DWORD *)(a1 + 48);
    if (v22 != *(_DWORD *)(a2 + 48))
      goto LABEL_51;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 53))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 53))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v32, v13, 0);
  v22 = *(_DWORD *)(a1 + 48);
  if (v22 != *(_DWORD *)(a2 + 48))
    goto LABEL_51;
LABEL_36:
  if (*(_DWORD *)(a1 + 24))
    v23 = *(_DWORD *)(a1 + 28) == 0;
  else
    v23 = 1;
  v24 = v23;
  if (*(_DWORD *)(a2 + 24))
  {
    v25 = *(_DWORD *)(a2 + 28) == 0;
    if (((v24 ^ v25) & 1) == 0)
    {
      if ((v24 & v25) == 1)
        goto LABEL_45;
LABEL_50:
      v28 = sub_20B460894(v22, a1, a2);
      goto LABEL_52;
    }
LABEL_51:
    v28 = 0;
    goto LABEL_52;
  }
  if ((v24 & 1) == 0)
    goto LABEL_51;
  if ((v24 & 1) != 1)
    goto LABEL_50;
LABEL_45:
  v26 = *(_QWORD *)(a1 + 24);
  v27 = *(_QWORD *)(a2 + 24);
  v28 = (_DWORD)v26 == (_DWORD)v27 && HIDWORD(v26) == HIDWORD(v27);
LABEL_52:
  v29 = v32;
  v32 = 0;
  if (v29)
    (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
  v30 = v33;
  v33 = 0;
  if (v30)
    (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
  return v28;
}

void sub_20B2DD740(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B2DD7A4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  int v27;
  uint64_t (**v28)();
  uint64_t v29;
  std::__shared_weak_count *v30;
  int v31;
  _OWORD v32[10];
  uint64_t v33;

  v28 = &off_24C3FA3D0;
  sub_20B2E3F7C(a2, (uint64_t)&v29);
  if ((*(_QWORD *)&a3 & 0xFF0000) == 0)
  {
    LOWORD(a3) = 1;
    v12 = v30;
    if (!v30)
      goto LABEL_11;
    goto LABEL_7;
  }
  if (!sub_20B2DE318(v31, (unsigned __int16)a3, v6, v7, v8, v9, v10, v11, v23)
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/ImageIO/src/Serialization.cpp", 218, (uint64_t)"CanSerialize(to_serialize.RuntimeFormat(), *op_format)", 54, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v12 = v30;
  if (v30)
  {
LABEL_7:
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
LABEL_11:
  *(_WORD *)a1 = a3;
  sub_20B2E3F7C(a2, (uint64_t)&v24);
  v15 = v26;
  v32[6] = xmmword_20B5F4628;
  v32[7] = unk_20B5F4638;
  v32[8] = xmmword_20B5F4648;
  v32[9] = unk_20B5F4658;
  v32[2] = xmmword_20B5F45E8;
  v32[3] = unk_20B5F45F8;
  v32[4] = xmmword_20B5F4608;
  v32[5] = unk_20B5F4618;
  v32[0] = xmmword_20B5F45C8;
  v32[1] = unk_20B5F45D8;
  v16 = (char *)sub_20B2DE8B0(v32, v27);
  if (v16 != (char *)&v33)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)((char *)&unk_20B5F4668 + 2 * (v16 - (char *)v32));
    *(_QWORD *)(a1 + 16) = v15;
    v17 = v25;
    if (!v25)
      goto LABEL_20;
    goto LABEL_16;
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/ImageIO/src/Serialization.cpp", 166, (uint64_t)"maybe_format", 12, (uint64_t)"Format is not serializable. Must be a non-dynamic format.", 57, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = v15;
  v17 = v25;
  if (v25)
  {
LABEL_16:
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
LABEL_20:
  *(_DWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = &off_24C3FF020;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v20 = *(_OWORD *)(a2 + 24);
  v21 = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 86) = *(_QWORD *)(a2 + 54);
  *(_OWORD *)(a1 + 72) = v21;
  *(_OWORD *)(a1 + 56) = v20;
  *(_DWORD *)(a1 + 96) = 1;
  return a1;
}

void sub_20B2DD9E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20AF9E0BC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2DD9F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AF9E0BC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2DDA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  int v14;
  unint64_t v15;
  uint64_t *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  __int16 v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v36;
  int v37;
  _OWORD v38[10];
  uint64_t v39;

  v8 = a3;
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    v14 = *(_DWORD *)(a2 + 48);
    do
      v15 = __ldxr(p_shared_owners);
    while (__stxr(v15 + 1, p_shared_owners));
  }
  else
  {
    v14 = *(_DWORD *)(a2 + 48);
  }
  v16 = (uint64_t *)(a2 + 24);
  v37 = v14;
  if (v11)
  {
    v17 = (unint64_t *)&v11->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
      if ((*(_QWORD *)&v8 & 0xFF0000) != 0)
        goto LABEL_13;
LABEL_18:
      LOWORD(v8) = 1;
      if (!v11)
        goto LABEL_23;
      goto LABEL_19;
    }
  }
  if ((a3 & 0xFF0000) == 0)
    goto LABEL_18;
LABEL_13:
  if (!sub_20B2DE318(v37, (unsigned __int16)v8, a3, a4, a5, a6, a7, a8, v36)
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/ImageIO/src/Serialization.cpp", 218, (uint64_t)"CanSerialize(to_serialize.RuntimeFormat(), *op_format)", 54, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  if (v11)
  {
LABEL_19:
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
LABEL_23:
  v38[7] = unk_20B5F4638;
  v38[8] = xmmword_20B5F4648;
  v38[9] = unk_20B5F4658;
  v38[2] = xmmword_20B5F45E8;
  v38[3] = unk_20B5F45F8;
  v38[4] = xmmword_20B5F4608;
  *(_WORD *)a1 = v8;
  v21 = *(_DWORD *)(a2 + 48);
  v22 = *(_QWORD *)(a2 + 24);
  v38[5] = unk_20B5F4618;
  v38[6] = xmmword_20B5F4628;
  v38[0] = xmmword_20B5F45C8;
  v38[1] = unk_20B5F45D8;
  v23 = (char *)sub_20B2DE8B0(v38, v21);
  if (v23 == (char *)&v39)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/ImageIO/src/Serialization.cpp", 166, (uint64_t)"maybe_format", 12, (uint64_t)"Format is not serializable. Must be a non-dynamic format.", 57, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = v22;
    *(_DWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = &off_24C3FA3D0;
    v24 = *(_QWORD *)(a2 + 8);
    v25 = *(std::__shared_weak_count **)(a2 + 16);
    if (v25)
      goto LABEL_25;
LABEL_32:
    v28 = *(_QWORD *)(a2 + 40);
    v29 = *(_DWORD *)(a2 + 48);
    v30 = *(_WORD *)(a2 + 52);
    goto LABEL_33;
  }
  *(_QWORD *)(a1 + 8) = *(_QWORD *)((char *)&unk_20B5F4668 + 2 * (v23 - (char *)v38));
  *(_QWORD *)(a1 + 16) = v22;
  *(_DWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = &off_24C3FA3D0;
  v24 = *(_QWORD *)(a2 + 8);
  v25 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v25)
    goto LABEL_32;
LABEL_25:
  v26 = (unint64_t *)&v25->__shared_owners_;
  do
    v27 = __ldxr(v26);
  while (__stxr(v27 + 1, v26));
  v28 = *(_QWORD *)(a2 + 40);
  v29 = *(_DWORD *)(a2 + 48);
  v30 = *(_WORD *)(a2 + 52);
  do
    v31 = __ldxr(v26);
  while (__stxr(v31 + 1, v26));
LABEL_33:
  *(_QWORD *)(a1 + 40) = v24;
  *(_QWORD *)(a1 + 48) = v25;
  v32 = *v16;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 56) = v32;
  *(_QWORD *)(a1 + 72) = v28;
  *(_DWORD *)(a1 + 80) = v29;
  *(_WORD *)(a1 + 84) = v30;
  if (v25)
  {
    v33 = (unint64_t *)&v25->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  *(_DWORD *)(a1 + 96) = 0;
  return a1;
}

void sub_20B2DDD10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AF9E0BC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2DDD24(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  int v9;
  __int16 v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  int v26;
  __int16 v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  uint64_t (**v31)();
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  __int16 v38;
  _QWORD v39[2];
  char v40;

  v3 = *(_DWORD *)(a1 + 96);
  if (v3 == 1)
  {
    *(_QWORD *)a2 = &off_24C3FF020;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 40) = 0;
    *(_QWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 56);
    *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 72);
    *(_QWORD *)(a2 + 54) = *(_QWORD *)(a1 + 86);
    return;
  }
  if (v3)
    sub_20AECFAB8();
  v31 = &off_24C3FA3D0;
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(std::__shared_weak_count **)(a1 + 48);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_QWORD *)(a1 + 72);
    v9 = *(_DWORD *)(a1 + 80);
    v10 = *(_WORD *)(a1 + 84);
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  else
  {
    v8 = *(_QWORD *)(a1 + 72);
    v9 = *(_DWORD *)(a1 + 80);
    v10 = *(_WORD *)(a1 + 84);
  }
  v32 = v4;
  v33 = v5;
  v34 = *(_QWORD *)(a1 + 56);
  v35 = *(_DWORD *)(a1 + 64);
  v36 = v8;
  v37 = v9;
  v38 = v10;
  if (!v5)
    goto LABEL_16;
  v12 = (unint64_t *)&v5->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (v13)
  {
LABEL_16:
    *(_QWORD *)a2 = &off_24C3FF020;
    v14 = v32;
    if (v32)
      goto LABEL_17;
LABEL_31:
    v39[0] = &v40;
    v39[1] = &v31;
    sub_20B4BBFBC(v37);
    v25 = v33;
    if (!v33)
      return;
    goto LABEL_35;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  *(_QWORD *)a2 = &off_24C3FF020;
  v14 = v32;
  if (!v32)
    goto LABEL_31;
LABEL_17:
  if (v33)
  {
    v15 = &v33->__shared_owners_;
    do
      v16 = __ldxr((unint64_t *)v15);
    while (__stxr(v16 + 1, (unint64_t *)v15));
    do
      v17 = __ldaxr((unint64_t *)v15);
    while (__stlxr(v17 - 1, (unint64_t *)v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
    v14 = v32;
    v18 = &v33->__shared_owners_;
    do
      v19 = __ldxr((unint64_t *)v18);
    while (__stxr(v19 + 1, (unint64_t *)v18));
    do
      v20 = __ldaxr((unint64_t *)v18);
    while (__stlxr(v20 - 1, (unint64_t *)v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)v14 + 32))(v39, v14);
  v21 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v39[0] + 48))(v39[0]);
  v22 = v39[0];
  if (v39[0])
  {
    v23 = (_QWORD *)operator new();
    v24 = v39[0];
    *v23 = &off_24C403F88;
    v23[1] = 0;
    v23[2] = 0;
    v23[3] = v24;
  }
  else
  {
    v23 = 0;
  }
  v26 = v37;
  v27 = v38;
  *(_QWORD *)(a2 + 8) = v22;
  *(_QWORD *)(a2 + 16) = v23;
  v28 = v34;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = v28;
  *(_DWORD *)(a2 + 40) = v35;
  *(_QWORD *)(a2 + 48) = v21;
  *(_DWORD *)(a2 + 56) = v26;
  *(_WORD *)(a2 + 60) = v27;
  v25 = v33;
  if (v33)
  {
LABEL_35:
    v29 = (unint64_t *)&v25->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
}

void sub_20B2DDFFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AF9E0BC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B2DE010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v17;

  v17 = a16;
  a16 = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  sub_20AF9E0BC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2DE03C(unsigned __int16 *a1, unsigned __int16 *a2)
{
  uint64_t v3;
  int v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  int v11;
  unsigned __int16 v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  unsigned __int16 v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  uint64_t (**v33)();
  uint64_t v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  unsigned __int16 v40;
  uint64_t (**v41)();
  uint64_t v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  unsigned __int16 v48;

  if (*a1 != *a2 || *((_QWORD *)a1 + 1) != *((_QWORD *)a2 + 1) || *((_QWORD *)a1 + 2) != *((_QWORD *)a2 + 2))
    return 0;
  v5 = *((_DWORD *)a1 + 24);
  if (v5)
  {
    if (v5 != 1)
      sub_20AECFAB8();
    v41 = &off_24C3FA3D0;
    sub_20B2E41AC((uint64_t)(a1 + 16), (uint64_t)&v42);
  }
  else
  {
    v41 = &off_24C3FA3D0;
    v6 = *((_QWORD *)a1 + 5);
    v7 = (std::__shared_weak_count *)*((_QWORD *)a1 + 6);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v9 = __ldxr(p_shared_owners);
      while (__stxr(v9 + 1, p_shared_owners));
      v10 = *((_QWORD *)a1 + 9);
      v11 = *((_DWORD *)a1 + 20);
      v12 = a1[42];
      do
        v13 = __ldxr(p_shared_owners);
      while (__stxr(v13 + 1, p_shared_owners));
    }
    else
    {
      v10 = *((_QWORD *)a1 + 9);
      v11 = *((_DWORD *)a1 + 20);
      v12 = a1[42];
    }
    v42 = v6;
    v43 = v7;
    v44 = *((_QWORD *)a1 + 7);
    v45 = *((_DWORD *)a1 + 16);
    v46 = v10;
    v47 = v11;
    v48 = v12;
    if (v7)
    {
      v14 = (unint64_t *)&v7->__shared_owners_;
      do
        v15 = __ldaxr(v14);
      while (__stlxr(v15 - 1, v14));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  v16 = *((_DWORD *)a2 + 24);
  if (v16)
  {
    if (v16 != 1)
      sub_20AECFAB8();
    v33 = &off_24C3FA3D0;
    sub_20B2E41AC((uint64_t)(a2 + 16), (uint64_t)&v34);
  }
  else
  {
    v33 = &off_24C3FA3D0;
    v17 = *((_QWORD *)a2 + 5);
    v18 = (std::__shared_weak_count *)*((_QWORD *)a2 + 6);
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      v21 = *((_QWORD *)a2 + 9);
      v22 = *((_DWORD *)a2 + 20);
      v23 = a2[42];
      do
        v24 = __ldxr(v19);
      while (__stxr(v24 + 1, v19));
    }
    else
    {
      v21 = *((_QWORD *)a2 + 9);
      v22 = *((_DWORD *)a2 + 20);
      v23 = a2[42];
    }
    v34 = v17;
    v35 = v18;
    v36 = *((_QWORD *)a2 + 7);
    v37 = *((_DWORD *)a2 + 16);
    v38 = v21;
    v39 = v22;
    v40 = v23;
    if (v18)
    {
      v25 = (unint64_t *)&v18->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
  }
  v3 = sub_20B2DD484((uint64_t)&v41, (uint64_t)&v33);
  v27 = v35;
  if (v35)
  {
    v28 = (unint64_t *)&v35->__shared_owners_;
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
  v30 = v43;
  if (!v43)
    return v3;
  v31 = (unint64_t *)&v43->__shared_owners_;
  do
    v32 = __ldaxr(v31);
  while (__stlxr(v32 - 1, v31));
  if (v32)
    return v3;
  ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
  std::__shared_weak_count::__release_weak(v30);
  return v3;
}

void sub_20B2DE2E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  sub_20AF9E0BC((uint64_t)&a9);
  sub_20AF9E0BC((uint64_t)&a16);
  _Unwind_Resume(a1);
}

void sub_20B2DE304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20AF9E0BC((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_20B2DE318(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _DWORD v15[6];
  uint64_t v16;

  switch(a2)
  {
    case 1:
      return a1 != 0;
    case 2:
      if (a1 == 1)
        goto LABEL_11;
      if (a1 != 2)
        return 0;
      goto LABEL_6;
    case 3:
      return a1 == 21;
    case 4:
      v11 = (char *)&v16;
      v12 = 0;
      switch(a1)
      {
        case 1:
          goto LABEL_21;
        case 2:
          v12 = 1;
          goto LABEL_21;
        case 21:
          v12 = 2;
          goto LABEL_21;
        case 22:
          v12 = 3;
          goto LABEL_21;
        case 29:
          v12 = 4;
          goto LABEL_21;
        case 30:
          v12 = 5;
LABEL_21:
          v11 = (char *)&v15[v12];
          break;
        default:
          return v11 - (char *)v15 != 24;
      }
      return v11 - (char *)v15 != 24;
    case 5:
      if (a1 == 1)
      {
LABEL_11:
        v10 = 0;
        return ((unint64_t)v15 | (4 * v10)) - (_QWORD)v15 != 8;
      }
      if (a1 == 21)
      {
LABEL_6:
        v10 = 1;
        return ((unint64_t)v15 | (4 * v10)) - (_QWORD)v15 != 8;
      }
      return 0;
    case 6:
      v13 = (char *)&a9;
      v14 = 0;
      switch(a1)
      {
        case 1:
          goto LABEL_33;
        case 2:
          v14 = 1;
          goto LABEL_33;
        case 3:
          v14 = 2;
          goto LABEL_33;
        case 4:
          v14 = 3;
          goto LABEL_33;
        case 21:
          v14 = 4;
          goto LABEL_33;
        case 22:
          v14 = 5;
          goto LABEL_33;
        case 23:
          v14 = 6;
          goto LABEL_33;
        case 24:
          v14 = 7;
          goto LABEL_33;
        case 29:
          v14 = 8;
          goto LABEL_33;
        case 30:
          v14 = 9;
          goto LABEL_33;
        case 31:
          v14 = 10;
          goto LABEL_33;
        case 32:
          v14 = 11;
LABEL_33:
          v13 = (char *)&v15[v14];
          break;
        default:
          return v13 - (char *)v15 != 48;
      }
      return v13 - (char *)v15 != 48;
    default:
      return 0;
  }
}

_QWORD *sub_20B2DE4E8(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  if (*result != *a2)
  {
    if (result[1] == v2)
    {
      ++result;
    }
    else if (result[2] == v2)
    {
      result += 2;
    }
    else if (result[3] == v2)
    {
      result += 3;
    }
    else if (result[4] == v2)
    {
      result += 4;
    }
    else if (result[5] == v2)
    {
      result += 5;
    }
    else if (result[6] == v2)
    {
      result += 6;
    }
    else if (result[7] == v2)
    {
      result += 7;
    }
    else if (result[8] == v2)
    {
      result += 8;
    }
    else if (result[9] == v2)
    {
      result += 9;
    }
    else if (result[10] == v2)
    {
      result += 10;
    }
    else if (result[11] == v2)
    {
      result += 11;
    }
    else if (result[12] == v2)
    {
      result += 12;
    }
    else if (result[13] == v2)
    {
      result += 13;
    }
    else if (result[14] == v2)
    {
      result += 14;
    }
    else if (result[15] == v2)
    {
      result += 15;
    }
    else if (result[16] == v2)
    {
      result += 16;
    }
    else if (result[17] == v2)
    {
      result += 17;
    }
    else if (result[18] == v2)
    {
      result += 18;
    }
    else if (result[19] == v2)
    {
      result += 19;
    }
    else if (result[20] == v2)
    {
      result += 20;
    }
    else if (result[21] == v2)
    {
      result += 21;
    }
    else if (result[22] == v2)
    {
      result += 22;
    }
    else if (result[23] == v2)
    {
      result += 23;
    }
    else if (result[24] == v2)
    {
      result += 24;
    }
    else if (result[25] == v2)
    {
      result += 25;
    }
    else if (result[26] == v2)
    {
      result += 26;
    }
    else if (result[27] == v2)
    {
      result += 27;
    }
    else if (result[28] == v2)
    {
      result += 28;
    }
    else if (result[29] == v2)
    {
      result += 29;
    }
    else if (result[30] == v2)
    {
      result += 30;
    }
    else if (result[31] == v2)
    {
      result += 31;
    }
    else if (result[32] == v2)
    {
      result += 32;
    }
    else if (result[33] == v2)
    {
      result += 33;
    }
    else if (result[34] == v2)
    {
      result += 34;
    }
    else if (result[35] == v2)
    {
      result += 35;
    }
    else if (result[36] == v2)
    {
      result += 36;
    }
    else if (result[37] == v2)
    {
      result += 37;
    }
    else if (result[38] == v2)
    {
      result += 38;
    }
    else if (result[39] == v2)
    {
      result += 39;
    }
    else
    {
      result += 40;
    }
  }
  return result;
}

_DWORD *sub_20B2DE8B0(_DWORD *a1, int a2)
{
  _DWORD *v2;
  uint64_t v3;

  v2 = a1 + 40;
  if (*a1 == a2)
  {
    v3 = 0;
    return &a1[v3];
  }
  if (a1[1] == a2)
  {
    v3 = 1;
    return &a1[v3];
  }
  if (a1[2] == a2)
  {
    v3 = 2;
    return &a1[v3];
  }
  if (a1[3] == a2)
  {
    v3 = 3;
    return &a1[v3];
  }
  if (a1[4] == a2)
  {
    v3 = 4;
    return &a1[v3];
  }
  if (a1[5] == a2)
  {
    v3 = 5;
    return &a1[v3];
  }
  if (a1[6] == a2)
  {
    v3 = 6;
    return &a1[v3];
  }
  if (a1[7] == a2)
  {
    v3 = 7;
    return &a1[v3];
  }
  if (a1[8] == a2)
  {
    v3 = 8;
    return &a1[v3];
  }
  if (a1[9] == a2)
  {
    v3 = 9;
    return &a1[v3];
  }
  if (a1[10] == a2)
  {
    v3 = 10;
    return &a1[v3];
  }
  if (a1[11] == a2)
  {
    v3 = 11;
    return &a1[v3];
  }
  if (a1[12] == a2)
  {
    v3 = 12;
    return &a1[v3];
  }
  if (a1[13] == a2)
  {
    v3 = 13;
    return &a1[v3];
  }
  if (a1[14] == a2)
  {
    v3 = 14;
    return &a1[v3];
  }
  if (a1[15] == a2)
  {
    v3 = 15;
    return &a1[v3];
  }
  if (a1[16] == a2)
  {
    v3 = 16;
    return &a1[v3];
  }
  if (a1[17] == a2)
  {
    v3 = 17;
    return &a1[v3];
  }
  if (a1[18] == a2)
  {
    v3 = 18;
    return &a1[v3];
  }
  if (a1[19] == a2)
  {
    v3 = 19;
    return &a1[v3];
  }
  if (a1[20] == a2)
  {
    v3 = 20;
    return &a1[v3];
  }
  if (a1[21] == a2)
  {
    v3 = 21;
    return &a1[v3];
  }
  if (a1[22] == a2)
  {
    v3 = 22;
    return &a1[v3];
  }
  if (a1[23] == a2)
  {
    v3 = 23;
    return &a1[v3];
  }
  if (a1[24] == a2)
  {
    v3 = 24;
    return &a1[v3];
  }
  if (a1[25] == a2)
  {
    v3 = 25;
    return &a1[v3];
  }
  if (a1[26] == a2)
  {
    v3 = 26;
    return &a1[v3];
  }
  if (a1[27] == a2)
  {
    v3 = 27;
    return &a1[v3];
  }
  if (a1[28] == a2)
  {
    v3 = 28;
    return &a1[v3];
  }
  if (a1[29] == a2)
  {
    v3 = 29;
    return &a1[v3];
  }
  if (a1[30] == a2)
  {
    v3 = 30;
    return &a1[v3];
  }
  if (a1[31] == a2)
  {
    v3 = 31;
    return &a1[v3];
  }
  if (a1[32] == a2)
  {
    v3 = 32;
    return &a1[v3];
  }
  if (a1[33] == a2)
  {
    v3 = 33;
    return &a1[v3];
  }
  if (a1[34] == a2)
  {
    v3 = 34;
    return &a1[v3];
  }
  if (a1[35] == a2)
  {
    v3 = 35;
    return &a1[v3];
  }
  if (a1[36] == a2)
  {
    v3 = 36;
    return &a1[v3];
  }
  if (a1[37] == a2)
  {
    v3 = 37;
    return &a1[v3];
  }
  if (a1[38] == a2)
  {
    v3 = 38;
    return &a1[v3];
  }
  if (a1[39] == a2)
  {
    v3 = 39;
    return &a1[v3];
  }
  return v2;
}

_QWORD *sub_20B2DEBDC(_QWORD *a1, uint64_t *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  unsigned int v7;
  void *__p[2];
  unsigned __int8 v9;
  _QWORD __dst[40];
  char v11;
  char *v12;

  v12 = (char *)*a2;
  memcpy(__dst, &unk_20B5F4668, sizeof(__dst));
  v7 = *(_DWORD *)((char *)&xmmword_20B5F45C8 + (((char *)sub_20B2DE4E8(__dst, (uint64_t *)&v12) - (char *)__dst) >> 1));
  LODWORD(__dst[3]) = 0;
  sub_20AF86710((uint64_t)&v12, (uint64_t)__dst, &v7);
  if (LODWORD(__dst[3]) == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _QWORD *))off_24C418A80[LODWORD(__dst[3])])(__p, &v12, __dst);
  if (LODWORD(__dst[3]) != -1)
    ((void (*)(char **, _QWORD *))off_24C418A68[LODWORD(__dst[3])])(&v12, __dst);
  if ((v9 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v9 & 0x80u) == 0)
    v4 = v9;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v9 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B2DED18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B2DED34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B2DED48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_20B2DED5C(uint64_t *a1, _WORD *a2)
{
  unsigned __int8 v4;
  uint64_t *v5;
  std::logic_error *exception;
  uint64_t v8;
  int v9;
  __int16 v10;
  std::string v11;
  void *__p[2];
  uint64_t v13;

  v4 = atomic_load((unsigned __int8 *)&qword_25463CF80);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463CF80))
  {
    sub_20B2DEF40();
    __cxa_atexit((void (*)(void *))sub_20B2DEFCC, &qword_25463CF68, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463CF80);
  }
  __p[0] = 0;
  __p[1] = 0;
  v13 = 0;
  sub_20B1C68C0(a1, (uint64_t)__p);
  v5 = sub_20AFB10A4((uint64_t)&qword_25463CF68, (const void **)__p);
  if (v5 == &qword_25463CF70)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v8 = 0x3000200010000;
    v10 = 6;
    v9 = 327684;
    sub_20B2DEFF4("invalid serialization format type string ", (const char *)__p, ", expected one of ", (unsigned __int16 *)&v8);
    std::logic_error::logic_error(exception, &v11);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  *a2 = *((_WORD *)v5 + 28);
  if (SHIBYTE(v13) < 0)
    operator delete(__p[0]);
  return a1;
}

void sub_20B2DEED4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463CF80);
  _Unwind_Resume(a1);
}

void sub_20B2DEEEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;
  int v23;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v23 & 1) == 0)
    {
LABEL_6:
      if (a22 < 0)
        operator delete(a17);
      _Unwind_Resume(a1);
    }
  }
  else if (!v23)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v22);
  goto LABEL_6;
}

void sub_20B2DEF40()
{
  _BYTE v0[14];
  _BYTE v1[2];
  unsigned __int16 *v2[3];
  _QWORD v3[3];

  *(_QWORD *)v0 = 0x3000200010000;
  *(_QWORD *)&v0[6] = 0x6000500040003;
  v2[2] = (unsigned __int16 *)v1;
  v3[0] = v0;
  v3[2] = v0;
  v2[0] = (unsigned __int16 *)v1;
  qword_25463CF78 = 0;
  qword_25463CF70 = 0;
  qword_25463CF68 = (uint64_t)&qword_25463CF70;
  sub_20B2E37F4((_QWORD **)&qword_25463CF68, (uint64_t)v3, v2);
}

void sub_20B2DEFB4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC833C(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_20B2DEFCC(uint64_t a1)
{
  sub_20AEC833C(a1, *(char **)(a1 + 8));
  return a1;
}

uint64_t sub_20B2DEFF4(char *__s, const char *a2, const char *a3, unsigned __int16 *a4)
{
  uint64_t result;
  _DWORD v8[6];
  int v9;
  _QWORD **v10;
  const char *v11;
  _DWORD *v12;
  const char *v13;
  const char *v14;
  _QWORD *v15;

  v9 = 0;
  sub_20AF86A14(v8, __s);
  v10 = (_QWORD **)v8;
  v11 = a2;
  v12 = v8;
  v13 = a2;
  v14 = a2;
  if (v9 == -1)
    sub_20AECFAB8();
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24C418A98[v9])(&v15, v8);
  v10 = (_QWORD **)v8;
  v11 = a3;
  v12 = v8;
  v13 = a3;
  v14 = a3;
  if (v9 == -1)
    sub_20AECFAB8();
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24C418AB0[v9])(&v15, v8);
  v10 = (_QWORD **)v8;
  v11 = "{";
  v12 = v8;
  v13 = "{";
  v14 = "{";
  if (v9 == -1)
    goto LABEL_15;
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24C418AE0[v9])(&v15, v8);
  sub_20B0D3044((uint64_t)&v10, (uint64_t)v8, a4);
  v10 = (_QWORD **)v8;
  v11 = ",";
  v12 = v8;
  v13 = ",";
  v14 = ",";
  if (v9 == -1)
    goto LABEL_15;
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24C418AE0[v9])(&v15, v8);
  sub_20B0D3044((uint64_t)&v10, (uint64_t)v8, a4 + 1);
  v10 = (_QWORD **)v8;
  v11 = ",";
  v12 = v8;
  v13 = ",";
  v14 = ",";
  if (v9 == -1)
    goto LABEL_15;
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24C418AE0[v9])(&v15, v8);
  sub_20B0D3044((uint64_t)&v10, (uint64_t)v8, a4 + 2);
  v10 = (_QWORD **)v8;
  v11 = ",";
  v12 = v8;
  v13 = ",";
  v14 = ",";
  if (v9 == -1)
    goto LABEL_15;
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24C418AE0[v9])(&v15, v8);
  sub_20B0D3044((uint64_t)&v10, (uint64_t)v8, a4 + 3);
  v10 = (_QWORD **)v8;
  v11 = ",";
  v12 = v8;
  v13 = ",";
  v14 = ",";
  if (v9 == -1)
    goto LABEL_15;
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24C418AE0[v9])(&v15, v8);
  sub_20B0D3044((uint64_t)&v10, (uint64_t)v8, a4 + 4);
  v10 = (_QWORD **)v8;
  v11 = ",";
  v12 = v8;
  v13 = ",";
  v14 = ",";
  if (v9 == -1)
    goto LABEL_15;
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24C418AE0[v9])(&v15, v8);
  sub_20B0D3044((uint64_t)&v10, (uint64_t)v8, a4 + 5);
  v10 = (_QWORD **)v8;
  v11 = ",";
  v12 = v8;
  v13 = ",";
  v14 = ",";
  if (v9 == -1)
    goto LABEL_15;
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24C418AE0[v9])(&v15, v8);
  sub_20B0D3044((uint64_t)&v10, (uint64_t)v8, a4 + 6);
  v10 = (_QWORD **)v8;
  v11 = "}";
  v12 = v8;
  v13 = "}";
  v14 = "}";
  if (v9 == -1)
LABEL_15:
    sub_20AECFAB8();
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24C418AE0[v9])(&v15, v8);
  if (v9 == -1)
    sub_20AECFAB8();
  v10 = &v15;
  result = ((uint64_t (*)(_QWORD ***, _DWORD *))off_24C418A80[v9])(&v10, v8);
  if (v9 != -1)
    return ((uint64_t (*)(_QWORD ***, _DWORD *))off_24C418A68[v9])(&v10, v8);
  return result;
}

void sub_20B2DF364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B2DF378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B2DF38C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B2DF3A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B2DF3B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_20B2DF3C8(uint64_t *a1, _QWORD *a2)
{
  unsigned __int8 v4;
  uint64_t *v5;
  std::logic_error *exception;
  uint64_t v8[2];
  std::string v9;
  void *__p[2];
  uint64_t v11;

  v4 = atomic_load((unsigned __int8 *)&qword_25463CFA0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463CFA0))
  {
    sub_20B2DF598();
    __cxa_atexit((void (*)(void *))sub_20B2DF614, &qword_25463CF88, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463CFA0);
  }
  __p[0] = 0;
  __p[1] = 0;
  v11 = 0;
  sub_20B1C68C0(a1, (uint64_t)__p);
  v5 = sub_20AFB10A4((uint64_t)&qword_25463CF88, (const void **)__p);
  if (v5 == &qword_25463CF90)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v8[0] = 40;
    v8[1] = (uint64_t)&unk_20B5F4488;
    sub_20B2DF63C("invalid image format type string ", (const char *)__p, ", expected one of ", v8);
    std::logic_error::logic_error(exception, &v9);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  *a2 = v5[7];
  if (SHIBYTE(v11) < 0)
    operator delete(__p[0]);
  return a1;
}

void sub_20B2DF52C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463CFA0);
  _Unwind_Resume(a1);
}

void sub_20B2DF544(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;
  int v23;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v23 & 1) == 0)
    {
LABEL_6:
      if (a22 < 0)
        operator delete(a17);
      _Unwind_Resume(a1);
    }
  }
  else if (!v23)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v22);
  goto LABEL_6;
}

void sub_20B2DF598()
{
  uint64_t *v0[3];
  _QWORD v1[3];

  v1[0] = &unk_20B5F4488;
  v1[2] = &unk_20B5F4488;
  v0[0] = (uint64_t *)&xmmword_20B5F45C8;
  v0[2] = (uint64_t *)&xmmword_20B5F45C8;
  qword_25463CF98 = 0;
  qword_25463CF90 = 0;
  qword_25463CF88 = (uint64_t)&qword_25463CF90;
  sub_20B2E3BB8((_QWORD **)&qword_25463CF88, (uint64_t)v1, v0);
}

void sub_20B2DF5FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC833C(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_20B2DF614(uint64_t a1)
{
  sub_20AEC833C(a1, *(char **)(a1 + 8));
  return a1;
}

uint64_t sub_20B2DF63C(char *__s, const char *a2, const char *a3, uint64_t *a4)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t result;
  _DWORD v11[6];
  int v12;
  _QWORD **v13;
  const char *v14;
  _DWORD *v15;
  const char *v16;
  const char *v17;
  _QWORD *v18;

  v12 = 0;
  sub_20B088A58(v11, __s);
  v13 = (_QWORD **)v11;
  v14 = a2;
  v15 = v11;
  v16 = a2;
  v17 = a2;
  if (v12 == -1)
    sub_20AECFAB8();
  v18 = &v13;
  ((void (*)(_QWORD **, _DWORD *))off_24C418A98[v12])(&v18, v11);
  v13 = (_QWORD **)v11;
  v14 = a3;
  v15 = v11;
  v16 = a3;
  v17 = a3;
  if (v12 == -1)
    sub_20AECFAB8();
  v18 = &v13;
  ((void (*)(_QWORD **, _DWORD *))off_24C418AB0[v12])(&v18, v11);
  if (*a4 <= 0)
  {
    v13 = (_QWORD **)v11;
    v14 = "{}";
    v15 = v11;
    v16 = "{}";
    v17 = "{}";
    if (v12 == -1)
      goto LABEL_16;
    v18 = &v13;
    ((void (*)(_QWORD **, _DWORD *))off_24C418AC8[v12])(&v18, v11);
  }
  else
  {
    v13 = (_QWORD **)v11;
    v14 = "{";
    v15 = v11;
    v16 = "{";
    v17 = "{";
    if (v12 == -1)
      goto LABEL_16;
    v18 = &v13;
    ((void (*)(_QWORD **, _DWORD *))off_24C418AE0[v12])(&v18, v11);
    v7 = (uint64_t *)a4[1];
    sub_20B0D32F8((uint64_t)&v13, (uint64_t)v11, v7);
    v8 = a4[1] + 8 * *a4;
    v9 = v7 + 1;
    if (v7 + 1 != (uint64_t *)v8)
    {
      while (1)
      {
        v13 = (_QWORD **)v11;
        v14 = ",";
        v15 = v11;
        v16 = ",";
        v17 = ",";
        if (v12 == -1)
          break;
        v18 = &v13;
        ((void (*)(_QWORD **, _DWORD *))off_24C418AE0[v12])(&v18, v11);
        sub_20B0D32F8((uint64_t)&v13, (uint64_t)v11, v9++);
        if (v9 == (uint64_t *)v8)
          goto LABEL_8;
      }
LABEL_16:
      sub_20AECFAB8();
    }
LABEL_8:
    v13 = (_QWORD **)v11;
    v14 = "}";
    v15 = v11;
    v16 = "}";
    v17 = "}";
    if (v12 == -1)
      goto LABEL_16;
    v18 = &v13;
    ((void (*)(_QWORD **, _DWORD *))off_24C418AE0[v12])(&v18, v11);
  }
  if (v12 == -1)
    sub_20AECFAB8();
  v13 = &v18;
  result = ((uint64_t (*)(_QWORD ***, _DWORD *))off_24C418A80[v12])(&v13, v11);
  if (v12 != -1)
    return ((uint64_t (*)(_QWORD ***, _DWORD *))off_24C418A68[v12])(&v13, v11);
  return result;
}

void sub_20B2DF8D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B2DF8EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B2DF900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B2DF914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B2DF928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B2DF93C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B2DF950(int a1)
{
  std::logic_error *exception;
  std::string v3;
  unsigned __int16 v4;

  v4 = a1;
  if ((a1 - 2) >= 5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B2DFA28("Invalid serialization format type: ", &v4);
    std::logic_error::logic_error(exception, &v3);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  return (unsigned __int16)(a1 - 2) + 1;
}

void sub_20B2DF9F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

uint64_t sub_20B2DFA28(char *__s, unsigned __int16 *a2)
{
  uint64_t result;
  _DWORD v4[6];
  int v5;
  char v6;
  char *v7;

  v5 = 0;
  sub_20B2CF00C(v4, __s);
  sub_20B0D3044((uint64_t)&v7, (uint64_t)v4, a2);
  if (v5 == -1)
    sub_20AECFAB8();
  v7 = &v6;
  result = ((uint64_t (*)(char **, _DWORD *))off_24C418A80[v5])(&v7, v4);
  if (v5 != -1)
    return ((uint64_t (*)(char **, _DWORD *))off_24C418A68[v5])(&v7, v4);
  return result;
}

void sub_20B2DFAD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B2DFAE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B2DFAF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B2DFB0C(const void *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;

  v4 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA28, (const struct __class_type_info *)&unk_24C418B08, 0);
  if (v4)
  {
    v16 = v4;
    sub_20B2E4684(*(_DWORD *)(a2 + 56), (uint64_t *)&v16, a2);
  }
  else
  {
    v5 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA28, (const struct __class_type_info *)&unk_24C40ED58, 0);
    if (v5)
    {
      v16 = v5;
      sub_20B2FCD88(*(_DWORD *)(a2 + 56), (uint64_t *)&v16, a2);
    }
    else
    {
      v6 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA28, (const struct __class_type_info *)&unk_24C418B50, 0);
      if (v6)
      {
        v16 = v6;
        sub_20B3046E4(*(_DWORD *)(a2 + 56), (uint64_t *)&v16, a2);
      }
      else
      {
        v7 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA28, (const struct __class_type_info *)&unk_24C418B98, 0);
        if (v7)
        {
          v16 = v7;
          sub_20B30C040(*(_DWORD *)(a2 + 56), &v16, a2);
        }
        else
        {
          v8 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA28, (const struct __class_type_info *)&unk_24C40EDE0, 0);
          if (v8)
          {
            v16 = v8;
            sub_20B316938(*(_DWORD *)(a2 + 56), &v16, a2);
          }
          else
          {
            v9 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA28, (const struct __class_type_info *)&unk_24C418BE0, 0);
            if (v9)
            {
              v16 = v9;
              sub_20B321230(*(_DWORD *)(a2 + 56), &v16, a2);
            }
            else
            {
              v10 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA28, (const struct __class_type_info *)&unk_24C418C18, 0);
              if (v10)
              {
                v16 = v10;
                sub_20B32BB28(*(_DWORD *)(a2 + 56), &v16, a2);
              }
              else
              {
                v11 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA28, (const struct __class_type_info *)&unk_24C40ED20, 0);
                if (v11)
                {
                  v16 = v11;
                  sub_20B336420(*(_DWORD *)(a2 + 56), &v16, a2);
                }
                else
                {
                  v12 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA28, (const struct __class_type_info *)&unk_24C418C50, 0);
                  if (v12)
                  {
                    v16 = v12;
                    sub_20B340D18(*(_DWORD *)(a2 + 56), &v16, a2);
                  }
                  else
                  {
                    v13 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA28, (const struct __class_type_info *)&unk_24C418C98, 0);
                    if (v13)
                    {
                      v16 = v13;
                      sub_20B34B610(*(_DWORD *)(a2 + 56), (uint64_t *)&v16, a2);
                    }
                    else
                    {
                      v14 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA28, (const struct __class_type_info *)&unk_24C40EE18, 0);
                      if (v14)
                      {
                        v16 = v14;
                        sub_20B352DCC(*(_DWORD *)(a2 + 56), (uint64_t *)&v16, a2);
                      }
                      else
                      {
                        v15 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA28, (const struct __class_type_info *)&unk_24C418CE0, 0);
                        if (v15)
                        {
                          v16 = v15;
                          sub_20B35A588(*(_DWORD *)(a2 + 56), (uint64_t *)&v16, a2);
                        }
                        else
                        {
                          v16 = (uint64_t *)a1;
                          sub_20B361D44(*(_DWORD *)(a2 + 56), (uint64_t *)&v16, a2);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_20B2DFE74(const void *a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA40, (const struct __class_type_info *)&unk_24C418D18, 0);
  if (v4)
  {
    v16 = v4;
    sub_20B36989C(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
  }
  else
  {
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA40, (const struct __class_type_info *)&unk_24C40EBC8, 0);
    if (v5)
    {
      v16 = v5;
      sub_20B380618(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
    }
    else
    {
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA40, (const struct __class_type_info *)&unk_24C418D50, 0);
      if (v6)
      {
        v16 = v6;
        sub_20B388EA4(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
      }
      else
      {
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA40, (const struct __class_type_info *)&unk_24C418D88, 0);
        if (v7)
        {
          v16 = v7;
          sub_20B391730(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
        }
        else
        {
          v8 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA40, (const struct __class_type_info *)&unk_24C40EC50, 0);
          if (v8)
          {
            v16 = v8;
            sub_20B39B7D8(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
          }
          else
          {
            v9 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA40, (const struct __class_type_info *)&unk_24C418DC0, 0);
            if (v9)
            {
              v16 = v9;
              sub_20B3A5880(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
            }
            else
            {
              v10 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA40, (const struct __class_type_info *)&unk_24C418DF8, 0);
              if (v10)
              {
                v16 = v10;
                sub_20B3AF928(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
              }
              else
              {
                v11 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA40, (const struct __class_type_info *)&unk_24C40EB80, 0);
                if (v11)
                {
                  v16 = v11;
                  sub_20B3B99D0(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
                }
                else
                {
                  v12 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA40, (const struct __class_type_info *)&unk_24C418E30, 0);
                  if (v12)
                  {
                    v16 = v12;
                    sub_20B3C3A78(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
                  }
                  else
                  {
                    v13 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA40, (const struct __class_type_info *)&unk_24C418E68, 0);
                    if (v13)
                    {
                      v16 = v13;
                      sub_20B3CDB20(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
                    }
                    else
                    {
                      v14 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA40, (const struct __class_type_info *)&unk_24C40EC98, 0);
                      if (v14)
                      {
                        v16 = v14;
                        sub_20B3D5C04(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
                      }
                      else
                      {
                        v15 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C41EA40, (const struct __class_type_info *)&unk_24C418EA0, 0);
                        if (v15)
                        {
                          v16 = v15;
                          sub_20B3DDCE8(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
                        }
                        else
                        {
                          v16 = (void *)a1;
                          sub_20B3E5DCC(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_20B2E01DC(int a1)
{
  __asm { BR              X10 }
}

void sub_20B2E020C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  _QWORD v14[2];
  uint64_t v15;
  std::__shared_weak_count *v16;
  unsigned int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  int v21;

  v14[0] = *(_QWORD *)(*(_QWORD *)a2 + 8);
  v14[1] = &off_24C404100;
  sub_20B2E0CD0((uint64_t)&v15, v14);
  *(_QWORD *)v2 = &off_24C3FF020;
  v3 = v15;
  v4 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v7 = v16;
  }
  else
  {
    v7 = 0;
  }
  v8 = v21;
  if (v18)
    v9 = v17 | 0x100000000;
  else
    v9 = 0;
  v10 = v20;
  v11 = v19;
  *(_QWORD *)(v2 + 8) = v3;
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)(v2 + 24) = v9;
  *(_QWORD *)(v2 + 32) = v10;
  *(_DWORD *)(v2 + 40) = v8;
  *(_QWORD *)(v2 + 48) = v11;
  *(_DWORD *)(v2 + 56) = 1;
  *(_WORD *)(v2 + 60) = 256;
  if (v7)
  {
    v12 = (unint64_t *)&v7->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_20B2E0C9C()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B2E0CD0(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;

  sub_20B064AD0(a2, &v16);
  v3 = v16;
  v17 = v16;
  if (v16)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v16;
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F92B8;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  else
  {
    v4 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v19, v3, 1);
  v8 = *(_QWORD *)(v19 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v19;
  *(_QWORD *)(a1 + 40) = v8;
  v19 = 0;
  MEMORY[0x20BD3583C]();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a1 + 32);
  v9 = (unint64_t *)&v4->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  v11 = v18;
  if (!v18)
    goto LABEL_14;
  v12 = (unint64_t *)&v18->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v14 = v16;
    v16 = 0;
    if (!v14)
      return;
  }
  else
  {
LABEL_14:
    v14 = v16;
    v16 = 0;
    if (!v14)
      return;
  }
  *(_QWORD *)v14 = off_24C414820;
  v15 = *(unsigned int *)(v14 + 40);
  if ((_DWORD)v15 != -1)
    ((void (*)(uint64_t *, uint64_t))off_24C415AE0[v15])(&v19, v14 + 16);
  *(_DWORD *)(v14 + 40) = -1;
  MEMORY[0x20BD3583C](v14, 0x10A3C40A1F8E8FFLL);
}

void sub_20B2E0EAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B0649E4(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E0EC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  sub_20AEC147C(v11);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  sub_20AEC147C((uint64_t)&a10);
  sub_20B0649E4(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E0F14(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;

  sub_20B065750(a2, &v16);
  v3 = v16;
  v17 = v16;
  if (v16)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v16;
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F9400;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  else
  {
    v4 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v19, v3, 2);
  v8 = *(_QWORD *)(v19 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v19;
  *(_QWORD *)(a1 + 40) = v8;
  v19 = 0;
  MEMORY[0x20BD3583C]();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a1 + 32);
  v9 = (unint64_t *)&v4->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  v11 = v18;
  if (!v18)
    goto LABEL_14;
  v12 = (unint64_t *)&v18->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v14 = v16;
    v16 = 0;
    if (!v14)
      return;
  }
  else
  {
LABEL_14:
    v14 = v16;
    v16 = 0;
    if (!v14)
      return;
  }
  *(_QWORD *)v14 = off_24C414A60;
  v15 = *(unsigned int *)(v14 + 40);
  if ((_DWORD)v15 != -1)
    ((void (*)(uint64_t *, uint64_t))off_24C415AE0[v15])(&v19, v14 + 16);
  *(_DWORD *)(v14 + 40) = -1;
  MEMORY[0x20BD3583C](v14, 0x10A3C40A1F8E8FFLL);
}

void sub_20B2E10F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B0656B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E1104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  sub_20AEC147C(v11);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  sub_20AEC147C((uint64_t)&a10);
  sub_20B0656B0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E1158(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;

  sub_20B0663D0(a2, &v16);
  v3 = v16;
  v17 = v16;
  if (v16)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v16;
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F9548;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  else
  {
    v4 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v19, v3, 3);
  v8 = *(_QWORD *)(v19 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v19;
  *(_QWORD *)(a1 + 40) = v8;
  v19 = 0;
  MEMORY[0x20BD3583C]();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a1 + 32);
  v9 = (unint64_t *)&v4->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  v11 = v18;
  if (!v18)
    goto LABEL_14;
  v12 = (unint64_t *)&v18->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v14 = v16;
    v16 = 0;
    if (!v14)
      return;
  }
  else
  {
LABEL_14:
    v14 = v16;
    v16 = 0;
    if (!v14)
      return;
  }
  *(_QWORD *)v14 = off_24C414C10;
  v15 = *(unsigned int *)(v14 + 40);
  if ((_DWORD)v15 != -1)
    ((void (*)(uint64_t *, uint64_t))off_24C415AE0[v15])(&v19, v14 + 16);
  *(_DWORD *)(v14 + 40) = -1;
  MEMORY[0x20BD3583C](v14, 0x10A3C40A1F8E8FFLL);
}

void sub_20B2E1334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B066330(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E1348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  sub_20AEC147C(v11);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  sub_20AEC147C((uint64_t)&a10);
  sub_20B066330(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E139C(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;

  sub_20B067058(a2, &v16);
  v3 = v16;
  v17 = v16;
  if (v16)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v16;
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F9690;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  else
  {
    v4 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v19, v3, 4);
  v8 = *(_QWORD *)(v19 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v19;
  *(_QWORD *)(a1 + 40) = v8;
  v19 = 0;
  MEMORY[0x20BD3583C]();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a1 + 32);
  v9 = (unint64_t *)&v4->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  v11 = v18;
  if (!v18)
    goto LABEL_14;
  v12 = (unint64_t *)&v18->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v14 = v16;
    v16 = 0;
    if (!v14)
      return;
  }
  else
  {
LABEL_14:
    v14 = v16;
    v16 = 0;
    if (!v14)
      return;
  }
  *(_QWORD *)v14 = off_24C414DC0;
  v15 = *(unsigned int *)(v14 + 40);
  if ((_DWORD)v15 != -1)
    ((void (*)(uint64_t *, uint64_t))off_24C415AE0[v15])(&v19, v14 + 16);
  *(_DWORD *)(v14 + 40) = -1;
  MEMORY[0x20BD3583C](v14, 0x10A3C40A1F8E8FFLL);
}

void sub_20B2E1578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B066FB8(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E158C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  sub_20AEC147C(v11);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  sub_20AEC147C((uint64_t)&a10);
  sub_20B066FB8(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E15E0(uint64_t a1, _DWORD *a2)
{
  std::__shared_weak_count_vtbl *v3;
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count_vtbl *v16;
  uint64_t v17;
  std::__shared_weak_count_vtbl *v18;
  std::__shared_weak_count_vtbl *v19;
  std::__shared_weak_count *v20;
  _OWORD *v21;

  sub_20B067CD8(a2, (unint64_t)&v18);
  v3 = v18;
  v19 = v18;
  if (v18)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v18;
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F97D8;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  else
  {
    v4 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  *(_QWORD *)(a1 + 16) = 0;
  (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v3->~__shared_weak_count + 8))(&v21, v3, 5);
  v9 = v21[1];
  v8 = v21[2];
  *(_OWORD *)(a1 + 24) = *v21;
  *(_OWORD *)(a1 + 40) = v9;
  *(_OWORD *)(a1 + 56) = v8;
  v21 = 0;
  MEMORY[0x20BD3583C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v10;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  v11 = (unint64_t *)&v4->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  v13 = v20;
  if (!v20)
    goto LABEL_14;
  v14 = (unint64_t *)&v20->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  else
  {
LABEL_14:
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  v16->~__shared_weak_count = (void (__cdecl *)(std::__shared_weak_count *__hidden))off_24C4148B0;
  v17 = LODWORD(v16[1].~__shared_weak_count);
  if ((_DWORD)v17 != -1)
    ((void (*)(_OWORD **, void (__cdecl **)(std::__shared_count *__hidden)))off_24C415AE0[v17])(&v21, &v16->__on_zero_shared);
  LODWORD(v16[1].~__shared_weak_count) = -1;
  MEMORY[0x20BD3583C](v16, 0x10A3C40ED729E16);
}

void sub_20B2E17C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B067C38(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E17DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  sub_20AEC147C(v11);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  sub_20AEC147C((uint64_t)&a10);
  sub_20B067C38(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E1830(uint64_t a1, _DWORD *a2)
{
  std::__shared_weak_count_vtbl *v3;
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count_vtbl *v16;
  uint64_t v17;
  std::__shared_weak_count_vtbl *v18;
  std::__shared_weak_count_vtbl *v19;
  std::__shared_weak_count *v20;
  _OWORD *v21;

  sub_20B068A84(a2, (unint64_t)&v18);
  v3 = v18;
  v19 = v18;
  if (v18)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v18;
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F9920;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  else
  {
    v4 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  *(_QWORD *)(a1 + 16) = 0;
  (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v3->~__shared_weak_count + 8))(&v21, v3, 7);
  v9 = v21[1];
  v8 = v21[2];
  *(_OWORD *)(a1 + 24) = *v21;
  *(_OWORD *)(a1 + 40) = v9;
  *(_OWORD *)(a1 + 56) = v8;
  v21 = 0;
  MEMORY[0x20BD3583C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v10;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  v11 = (unint64_t *)&v4->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  v13 = v20;
  if (!v20)
    goto LABEL_14;
  v14 = (unint64_t *)&v20->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  else
  {
LABEL_14:
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  v16->~__shared_weak_count = (void (__cdecl *)(std::__shared_weak_count *__hidden))off_24C414CA0;
  v17 = LODWORD(v16[1].~__shared_weak_count);
  if ((_DWORD)v17 != -1)
    ((void (*)(_OWORD **, void (__cdecl **)(std::__shared_count *__hidden)))off_24C415AE0[v17])(&v21, &v16->__on_zero_shared);
  LODWORD(v16[1].~__shared_weak_count) = -1;
  MEMORY[0x20BD3583C](v16, 0x10A3C40ED729E16);
}

void sub_20B2E1A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B0689E4(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E1A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  sub_20AEC147C(v11);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  sub_20AEC147C((uint64_t)&a10);
  sub_20B0689E4(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E1A80(uint64_t a1, _DWORD *a2)
{
  std::__shared_weak_count_vtbl *v3;
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count_vtbl *v16;
  uint64_t v17;
  std::__shared_weak_count_vtbl *v18;
  std::__shared_weak_count_vtbl *v19;
  std::__shared_weak_count *v20;
  _OWORD *v21;

  sub_20B069820(a2, (unint64_t)&v18);
  v3 = v18;
  v19 = v18;
  if (v18)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v18;
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F9A68;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  else
  {
    v4 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  *(_QWORD *)(a1 + 16) = 0;
  (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v3->~__shared_weak_count + 8))(&v21, v3, 8);
  v9 = v21[1];
  v8 = v21[2];
  *(_OWORD *)(a1 + 24) = *v21;
  *(_OWORD *)(a1 + 40) = v9;
  *(_OWORD *)(a1 + 56) = v8;
  v21 = 0;
  MEMORY[0x20BD3583C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v10;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  v11 = (unint64_t *)&v4->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  v13 = v20;
  if (!v20)
    goto LABEL_14;
  v14 = (unint64_t *)&v20->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  else
  {
LABEL_14:
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  v16->~__shared_weak_count = (void (__cdecl *)(std::__shared_weak_count *__hidden))off_24C414E50;
  v17 = LODWORD(v16[1].~__shared_weak_count);
  if ((_DWORD)v17 != -1)
    ((void (*)(_OWORD **, void (__cdecl **)(std::__shared_count *__hidden)))off_24C415AE0[v17])(&v21, &v16->__on_zero_shared);
  LODWORD(v16[1].~__shared_weak_count) = -1;
  MEMORY[0x20BD3583C](v16, 0x10A3C40ED729E16);
}

void sub_20B2E1C68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B069798(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E1C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  sub_20AEC147C(v11);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  sub_20AEC147C((uint64_t)&a10);
  sub_20B069798(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E1CD0(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  _OWORD *v21;

  sub_20B06A5D4(a2, &v18);
  v3 = v18;
  v19 = v18;
  if (v18)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v18;
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F9BB0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  else
  {
    v4 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v21, v3, 21);
  v9 = v21[1];
  v8 = v21[2];
  *(_OWORD *)(a1 + 24) = *v21;
  *(_OWORD *)(a1 + 40) = v9;
  *(_OWORD *)(a1 + 56) = v8;
  v21 = 0;
  MEMORY[0x20BD3583C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v10;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  v11 = (unint64_t *)&v4->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  v13 = v20;
  if (!v20)
    goto LABEL_14;
  v14 = (unint64_t *)&v20->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  else
  {
LABEL_14:
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  *(_QWORD *)v16 = off_24C414940;
  v17 = *(unsigned int *)(v16 + 40);
  if ((_DWORD)v17 != -1)
    ((void (*)(_OWORD **, uint64_t))off_24C415AE0[v17])(&v21, v16 + 16);
  *(_DWORD *)(v16 + 40) = -1;
  MEMORY[0x20BD3583C](v16, 0x10A3C40ED729E16);
}

void sub_20B2E1EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B06A534(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E1ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  sub_20AEC147C(v11);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  sub_20AEC147C((uint64_t)&a10);
  sub_20B06A534(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E1F20(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  _OWORD *v21;

  sub_20B06B508(a2, &v18);
  v3 = v18;
  v19 = v18;
  if (v18)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v18;
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F9CF8;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  else
  {
    v4 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v21, v3, 22);
  v9 = v21[1];
  v8 = v21[2];
  *(_OWORD *)(a1 + 24) = *v21;
  *(_OWORD *)(a1 + 40) = v9;
  *(_OWORD *)(a1 + 56) = v8;
  v21 = 0;
  MEMORY[0x20BD3583C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v10;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  v11 = (unint64_t *)&v4->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  v13 = v20;
  if (!v20)
    goto LABEL_14;
  v14 = (unint64_t *)&v20->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  else
  {
LABEL_14:
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  *(_QWORD *)v16 = off_24C414AF0;
  v17 = *(unsigned int *)(v16 + 40);
  if ((_DWORD)v17 != -1)
    ((void (*)(_OWORD **, uint64_t))off_24C415AE0[v17])(&v21, v16 + 16);
  *(_DWORD *)(v16 + 40) = -1;
  MEMORY[0x20BD3583C](v16, 0x10A3C40ED729E16);
}

void sub_20B2E2108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B06B468(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E211C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  sub_20AEC147C(v11);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  sub_20AEC147C((uint64_t)&a10);
  sub_20B06B468(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E2170(uint64_t a1, _DWORD *a2)
{
  std::__shared_weak_count_vtbl *v3;
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count_vtbl *v16;
  uint64_t v17;
  std::__shared_weak_count_vtbl *v18;
  std::__shared_weak_count_vtbl *v19;
  std::__shared_weak_count *v20;
  _OWORD *v21;

  sub_20B06C45C(a2, (unint64_t)&v18);
  v3 = v18;
  v19 = v18;
  if (v18)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v18;
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F9E40;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  else
  {
    v4 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  *(_QWORD *)(a1 + 16) = 0;
  (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v3->~__shared_weak_count + 8))(&v21, v3, 25);
  v9 = v21[1];
  v8 = v21[2];
  *(_OWORD *)(a1 + 24) = *v21;
  *(_OWORD *)(a1 + 40) = v9;
  *(_OWORD *)(a1 + 56) = v8;
  v21 = 0;
  MEMORY[0x20BD3583C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v10;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  v11 = (unint64_t *)&v4->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  v13 = v20;
  if (!v20)
    goto LABEL_14;
  v14 = (unint64_t *)&v20->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  else
  {
LABEL_14:
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  v16->~__shared_weak_count = (void (__cdecl *)(std::__shared_weak_count *__hidden))off_24C4149D0;
  v17 = LODWORD(v16[1].~__shared_weak_count);
  if ((_DWORD)v17 != -1)
    ((void (*)(_OWORD **, void (__cdecl **)(std::__shared_count *__hidden)))off_24C415AE0[v17])(&v21, &v16->__on_zero_shared);
  LODWORD(v16[1].~__shared_weak_count) = -1;
  MEMORY[0x20BD3583C](v16, 0x10A3C40ED729E16);
}

void sub_20B2E2358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B06C3BC(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E236C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  sub_20AEC147C(v11);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  sub_20AEC147C((uint64_t)&a10);
  sub_20B06C3BC(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E23C0(uint64_t a1, _DWORD *a2)
{
  std::__shared_weak_count_vtbl *v3;
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count_vtbl *v16;
  uint64_t v17;
  std::__shared_weak_count_vtbl *v18;
  std::__shared_weak_count_vtbl *v19;
  std::__shared_weak_count *v20;
  _OWORD *v21;

  sub_20B06D29C(a2, (unint64_t)&v18);
  v3 = v18;
  v19 = v18;
  if (v18)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v18;
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3F9F88;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  else
  {
    v4 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  *(_QWORD *)(a1 + 16) = 0;
  (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v3->~__shared_weak_count + 8))(&v21, v3, 31);
  v9 = v21[1];
  v8 = v21[2];
  *(_OWORD *)(a1 + 24) = *v21;
  *(_OWORD *)(a1 + 40) = v9;
  *(_OWORD *)(a1 + 56) = v8;
  v21 = 0;
  MEMORY[0x20BD3583C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v10;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  v11 = (unint64_t *)&v4->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  v13 = v20;
  if (!v20)
    goto LABEL_14;
  v14 = (unint64_t *)&v20->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  else
  {
LABEL_14:
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  v16->~__shared_weak_count = (void (__cdecl *)(std::__shared_weak_count *__hidden))off_24C414D30;
  v17 = LODWORD(v16[1].~__shared_weak_count);
  if ((_DWORD)v17 != -1)
    ((void (*)(_OWORD **, void (__cdecl **)(std::__shared_count *__hidden)))off_24C415AE0[v17])(&v21, &v16->__on_zero_shared);
  LODWORD(v16[1].~__shared_weak_count) = -1;
  MEMORY[0x20BD3583C](v16, 0x10A3C40ED729E16);
}

void sub_20B2E25A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B06D214(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E25BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  sub_20AEC147C(v11);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  sub_20AEC147C((uint64_t)&a10);
  sub_20B06D214(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E2610(uint64_t a1, _DWORD *a2)
{
  std::__shared_weak_count_vtbl *v3;
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count_vtbl *v16;
  uint64_t v17;
  std::__shared_weak_count_vtbl *v18;
  std::__shared_weak_count_vtbl *v19;
  std::__shared_weak_count *v20;
  _OWORD *v21;

  sub_20B06E038(a2, (unint64_t)&v18);
  v3 = v18;
  v19 = v18;
  if (v18)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v18;
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3FA0D0;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  else
  {
    v4 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  *(_QWORD *)(a1 + 16) = 0;
  (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v3->~__shared_weak_count + 8))(&v21, v3, 32);
  v9 = v21[1];
  v8 = v21[2];
  *(_OWORD *)(a1 + 24) = *v21;
  *(_OWORD *)(a1 + 40) = v9;
  *(_OWORD *)(a1 + 56) = v8;
  v21 = 0;
  MEMORY[0x20BD3583C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v10;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  v11 = (unint64_t *)&v4->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  v13 = v20;
  if (!v20)
    goto LABEL_14;
  v14 = (unint64_t *)&v20->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  else
  {
LABEL_14:
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  v16->~__shared_weak_count = (void (__cdecl *)(std::__shared_weak_count *__hidden))off_24C414EE0;
  v17 = LODWORD(v16[1].~__shared_weak_count);
  if ((_DWORD)v17 != -1)
    ((void (*)(_OWORD **, void (__cdecl **)(std::__shared_count *__hidden)))off_24C415AE0[v17])(&v21, &v16->__on_zero_shared);
  LODWORD(v16[1].~__shared_weak_count) = -1;
  MEMORY[0x20BD3583C](v16, 0x10A3C40ED729E16);
}

void sub_20B2E27F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B06DFB0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E280C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  sub_20AEC147C(v11);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  sub_20AEC147C((uint64_t)&a10);
  sub_20B06DFB0(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E2860(uint64_t a1, _DWORD *a2)
{
  std::__shared_weak_count_vtbl *v3;
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count_vtbl *v16;
  uint64_t v17;
  std::__shared_weak_count_vtbl *v18;
  std::__shared_weak_count_vtbl *v19;
  std::__shared_weak_count *v20;
  _OWORD *v21;

  sub_20B06EE98(a2, (unint64_t)&v18);
  v3 = v18;
  v19 = v18;
  if (v18)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v18;
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3FA218;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  else
  {
    v4 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  *(_QWORD *)(a1 + 16) = 0;
  (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v3->~__shared_weak_count + 8))(&v21, v3, 37);
  v9 = v21[1];
  v8 = v21[2];
  *(_OWORD *)(a1 + 24) = *v21;
  *(_OWORD *)(a1 + 40) = v9;
  *(_OWORD *)(a1 + 56) = v8;
  v21 = 0;
  MEMORY[0x20BD3583C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v10;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  v11 = (unint64_t *)&v4->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  v13 = v20;
  if (!v20)
    goto LABEL_14;
  v14 = (unint64_t *)&v20->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  else
  {
LABEL_14:
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  v16->~__shared_weak_count = (void (__cdecl *)(std::__shared_weak_count *__hidden))off_24C4149D0;
  v17 = LODWORD(v16[1].~__shared_weak_count);
  if ((_DWORD)v17 != -1)
    ((void (*)(_OWORD **, void (__cdecl **)(std::__shared_count *__hidden)))off_24C415AE0[v17])(&v21, &v16->__on_zero_shared);
  LODWORD(v16[1].~__shared_weak_count) = -1;
  MEMORY[0x20BD3583C](v16, 0x10A3C40ED729E16);
}

void sub_20B2E2A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B06EDF8(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E2A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  sub_20AEC147C(v11);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  sub_20AEC147C((uint64_t)&a10);
  sub_20B06EDF8(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E2AB0(uint64_t a1, _DWORD *a2)
{
  std::__shared_weak_count_vtbl *v3;
  std::__shared_weak_count *v4;
  std::__shared_weak_count_vtbl *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count_vtbl *v16;
  uint64_t v17;
  std::__shared_weak_count_vtbl *v18;
  std::__shared_weak_count_vtbl *v19;
  std::__shared_weak_count *v20;
  _OWORD *v21;

  sub_20B06FCD8(a2, (unint64_t)&v18);
  v3 = v18;
  v19 = v18;
  if (v18)
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v18;
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C3FA360;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = v5;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  else
  {
    v4 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  *(_QWORD *)(a1 + 16) = 0;
  (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v3->~__shared_weak_count + 8))(&v21, v3, 38);
  v9 = v21[1];
  v8 = v21[2];
  *(_OWORD *)(a1 + 24) = *v21;
  *(_OWORD *)(a1 + 40) = v9;
  *(_OWORD *)(a1 + 56) = v8;
  v21 = 0;
  MEMORY[0x20BD3583C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v10;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  v11 = (unint64_t *)&v4->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  v13 = v20;
  if (!v20)
    goto LABEL_14;
  v14 = (unint64_t *)&v20->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  else
  {
LABEL_14:
    v16 = v18;
    v18 = 0;
    if (!v16)
      return;
  }
  v16->~__shared_weak_count = (void (__cdecl *)(std::__shared_weak_count *__hidden))off_24C414B80;
  v17 = LODWORD(v16[1].~__shared_weak_count);
  if ((_DWORD)v17 != -1)
    ((void (*)(_OWORD **, void (__cdecl **)(std::__shared_count *__hidden)))off_24C415AE0[v17])(&v21, &v16->__on_zero_shared);
  LODWORD(v16[1].~__shared_weak_count) = -1;
  MEMORY[0x20BD3583C](v16, 0x10A3C40ED729E16);
}

void sub_20B2E2C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B06FC50(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E2CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  sub_20AEC147C(v11);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  sub_20AEC147C((uint64_t)&a10);
  sub_20B06FC50(&a9);
  _Unwind_Resume(a1);
}

void sub_20B2E2D00(int a1)
{
  __asm { BR              X10 }
}

void sub_20B2E2D30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  _QWORD v14[2];
  uint64_t v15;
  std::__shared_weak_count *v16;
  unsigned int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  int v21;

  v14[0] = *(_QWORD *)(*(_QWORD *)a2 + 8);
  v14[1] = &off_24C404100;
  sub_20B2E0CD0((uint64_t)&v15, v14);
  *(_QWORD *)v2 = &off_24C3FF020;
  v3 = v15;
  v4 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v7 = v16;
  }
  else
  {
    v7 = 0;
  }
  v8 = v21;
  if (v18)
    v9 = v17 | 0x100000000;
  else
    v9 = 0;
  v10 = v20;
  v11 = v19;
  *(_QWORD *)(v2 + 8) = v3;
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)(v2 + 24) = v9;
  *(_QWORD *)(v2 + 32) = v10;
  *(_DWORD *)(v2 + 40) = v8;
  *(_QWORD *)(v2 + 48) = v11;
  *(_DWORD *)(v2 + 56) = 1;
  *(_WORD *)(v2 + 60) = 256;
  if (v7)
  {
    v12 = (unint64_t *)&v7->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_20B2E37C0()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_20B532360);
  abort();
}

void sub_20B2E37F4(_QWORD **a1, uint64_t a2, unsigned __int16 **a3)
{
  unsigned __int16 *v4;
  unsigned __int16 *v5;
  unsigned __int16 *v6;
  BOOL v7;
  _QWORD *v9;
  _WORD *v10;
  void *v11;
  size_t v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  int v20;
  const void *v21;
  size_t v22;
  const void *v23;
  size_t v24;
  size_t v25;
  int v26;
  _QWORD *v27;
  size_t v28;
  size_t v29;
  const void *v30;
  size_t v31;
  size_t v32;
  int v33;
  int v34;
  _QWORD *v35;
  uint64_t v36;
  unsigned __int16 **v38;
  _QWORD *v39;
  void *v40;
  _BYTE v41[15];
  unsigned __int8 v42;
  _BYTE v43[24];
  int v44;
  char v45;
  _QWORD v46[2];
  _QWORD v47[3];

  v47[2] = *MEMORY[0x24BDAC8D0];
  v4 = *(unsigned __int16 **)a2;
  v5 = *a3;
  v38 = a3;
  v6 = a3[2];
  v7 = *(unsigned __int16 **)a2 == v5 && *(_QWORD *)(a2 + 16) == (_QWORD)v6;
  if (!v7)
  {
    v9 = a1;
    v39 = a1 + 1;
    do
    {
      v44 = 0;
      sub_20B0D3044((uint64_t)v46, (uint64_t)v43, v4);
      if (v44 == -1)
        sub_20AECFAB8();
      v46[0] = &v45;
      ((void (*)(void **__return_ptr, _QWORD *, _BYTE *))off_24C418A80[v44])(&v40, v46, v43);
      if (v44 != -1)
        ((void (*)(_QWORD *, _BYTE *))off_24C418A68[v44])(v46, v43);
      v10 = *(_WORD **)(a2 + 16);
      v11 = v40;
      v47[0] = *(_QWORD *)v41;
      *(_QWORD *)((char *)v47 + 7) = *(_QWORD *)&v41[7];
      v12 = v42;
      v13 = (char)v42;
      v14 = operator new(0x40uLL);
      v14[4] = v11;
      v14[5] = v47[0];
      *(_QWORD *)((char *)v14 + 47) = *(_QWORD *)((char *)v47 + 7);
      *((_BYTE *)v14 + 55) = v13;
      v47[0] = 0;
      *(_QWORD *)((char *)v47 + 7) = 0;
      *((_WORD *)v14 + 28) = *v10;
      v15 = v9[1];
      v16 = v39;
      v17 = v39;
      if ((_QWORD *)*v9 != v39)
      {
        v18 = (_QWORD *)v9[1];
        v19 = v39;
        if (v15)
        {
          do
          {
            v17 = v18;
            v18 = (_QWORD *)v18[1];
          }
          while (v18);
        }
        else
        {
          do
          {
            v17 = (_QWORD *)v19[2];
            v7 = *v17 == (_QWORD)v19;
            v19 = v17;
          }
          while (v7);
        }
        v20 = *((char *)v17 + 55);
        if (v20 >= 0)
          v21 = v17 + 4;
        else
          v21 = (const void *)v17[4];
        if (v20 >= 0)
          v22 = *((unsigned __int8 *)v17 + 55);
        else
          v22 = v17[5];
        if (v13 >= 0)
          v23 = v14 + 4;
        else
          v23 = v11;
        if (v13 >= 0)
          v24 = v12;
        else
          v24 = v14[5];
        if (v24 >= v22)
          v25 = v22;
        else
          v25 = v24;
        v26 = memcmp(v21, v23, v25);
        if (v26)
        {
          v16 = v39;
          if ((v26 & 0x80000000) == 0)
            goto LABEL_31;
        }
        else
        {
          v16 = v39;
          if (v22 >= v24)
          {
LABEL_31:
            v27 = v16;
            v17 = v16;
            if (!v15)
              goto LABEL_60;
            while (1)
            {
              v17 = (_QWORD *)v15;
              v28 = *(unsigned __int8 *)(v15 + 55);
              v29 = *(_QWORD *)(v15 + 40);
              if ((v28 & 0x80u) == 0)
                v30 = (const void *)(v15 + 32);
              else
                v30 = *(const void **)(v15 + 32);
              if ((v28 & 0x80u) == 0)
                v31 = v28;
              else
                v31 = v29;
              if (v31 >= v24)
                v32 = v24;
              else
                v32 = v31;
              v33 = memcmp(v23, v30, v32);
              if (v33)
              {
                if (v33 < 0)
                  goto LABEL_33;
              }
              else if (v24 < v31)
              {
LABEL_33:
                v15 = *v17;
                v27 = v17;
                if (!*v17)
                  goto LABEL_60;
                continue;
              }
              v34 = memcmp(v30, v23, v32);
              if (v34)
              {
                if ((v34 & 0x80000000) == 0)
                  goto LABEL_57;
              }
              else if (v31 >= v24)
              {
                goto LABEL_57;
              }
              v15 = v17[1];
              if (!v15)
              {
                v27 = v17 + 1;
                goto LABEL_60;
              }
            }
          }
        }
      }
      v27 = v17 + 1;
      if (!v15)
      {
        v17 = v16;
        v27 = v16;
      }
      if (*v27)
      {
LABEL_57:
        if (v13 < 0)
          operator delete(v11);
        operator delete(v14);
        v9 = a1;
        goto LABEL_63;
      }
LABEL_60:
      *v14 = 0;
      v14[1] = 0;
      v14[2] = v17;
      *v27 = v14;
      v9 = a1;
      v35 = (_QWORD *)**a1;
      if (v35)
      {
        *a1 = v35;
        v14 = (_QWORD *)*v27;
      }
      sub_20AEC84C8(a1[1], v14);
      a1[2] = (_QWORD *)((char *)a1[2] + 1);
LABEL_63:
      v4 = (unsigned __int16 *)(*(_QWORD *)a2 + 2);
      *(_QWORD *)a2 = v4;
      v36 = *(_QWORD *)(a2 + 16) + 2;
      *(_QWORD *)(a2 + 16) = v36;
    }
    while (v4 != *v38 || (unsigned __int16 *)v36 != v38[2]);
  }
}

void sub_20B2E3B50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, int a20)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20AEC01C0(exception_object);
}

void sub_20B2E3BB8(_QWORD **a1, uint64_t a2, uint64_t **a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  BOOL v7;
  _QWORD *v9;
  _QWORD *v10;
  void *v11;
  size_t v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  int v20;
  const void *v21;
  size_t v22;
  const void *v23;
  size_t v24;
  size_t v25;
  int v26;
  _QWORD *v27;
  size_t v28;
  size_t v29;
  const void *v30;
  size_t v31;
  size_t v32;
  int v33;
  int v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t **v38;
  _QWORD *v39;
  void *v40;
  _BYTE v41[15];
  unsigned __int8 v42;
  _BYTE v43[24];
  int v44;
  char v45;
  _QWORD v46[2];
  _QWORD v47[3];

  v47[2] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)a2;
  v5 = *a3;
  v38 = a3;
  v6 = a3[2];
  v7 = *(uint64_t **)a2 == v5 && *(_QWORD *)(a2 + 16) == (_QWORD)v6;
  if (!v7)
  {
    v9 = a1;
    v39 = a1 + 1;
    do
    {
      v44 = 0;
      sub_20B0D32F8((uint64_t)v46, (uint64_t)v43, v4);
      if (v44 == -1)
        sub_20AECFAB8();
      v46[0] = &v45;
      ((void (*)(void **__return_ptr, _QWORD *, _BYTE *))off_24C418A80[v44])(&v40, v46, v43);
      if (v44 != -1)
        ((void (*)(_QWORD *, _BYTE *))off_24C418A68[v44])(v46, v43);
      v10 = *(_QWORD **)(a2 + 16);
      v11 = v40;
      v47[0] = *(_QWORD *)v41;
      *(_QWORD *)((char *)v47 + 7) = *(_QWORD *)&v41[7];
      v12 = v42;
      v13 = (char)v42;
      v14 = operator new(0x40uLL);
      v14[4] = v11;
      v14[5] = v47[0];
      *(_QWORD *)((char *)v14 + 47) = *(_QWORD *)((char *)v47 + 7);
      *((_BYTE *)v14 + 55) = v13;
      v47[0] = 0;
      *(_QWORD *)((char *)v47 + 7) = 0;
      v14[7] = *v10;
      v15 = v9[1];
      v16 = v39;
      v17 = v39;
      if ((_QWORD *)*v9 != v39)
      {
        v18 = (_QWORD *)v9[1];
        v19 = v39;
        if (v15)
        {
          do
          {
            v17 = v18;
            v18 = (_QWORD *)v18[1];
          }
          while (v18);
        }
        else
        {
          do
          {
            v17 = (_QWORD *)v19[2];
            v7 = *v17 == (_QWORD)v19;
            v19 = v17;
          }
          while (v7);
        }
        v20 = *((char *)v17 + 55);
        if (v20 >= 0)
          v21 = v17 + 4;
        else
          v21 = (const void *)v17[4];
        if (v20 >= 0)
          v22 = *((unsigned __int8 *)v17 + 55);
        else
          v22 = v17[5];
        if (v13 >= 0)
          v23 = v14 + 4;
        else
          v23 = v11;
        if (v13 >= 0)
          v24 = v12;
        else
          v24 = v14[5];
        if (v24 >= v22)
          v25 = v22;
        else
          v25 = v24;
        v26 = memcmp(v21, v23, v25);
        if (v26)
        {
          v16 = v39;
          if ((v26 & 0x80000000) == 0)
            goto LABEL_31;
        }
        else
        {
          v16 = v39;
          if (v22 >= v24)
          {
LABEL_31:
            v27 = v16;
            v17 = v16;
            if (!v15)
              goto LABEL_60;
            while (1)
            {
              v17 = (_QWORD *)v15;
              v28 = *(unsigned __int8 *)(v15 + 55);
              v29 = *(_QWORD *)(v15 + 40);
              if ((v28 & 0x80u) == 0)
                v30 = (const void *)(v15 + 32);
              else
                v30 = *(const void **)(v15 + 32);
              if ((v28 & 0x80u) == 0)
                v31 = v28;
              else
                v31 = v29;
              if (v31 >= v24)
                v32 = v24;
              else
                v32 = v31;
              v33 = memcmp(v23, v30, v32);
              if (v33)
              {
                if (v33 < 0)
                  goto LABEL_33;
              }
              else if (v24 < v31)
              {
LABEL_33:
                v15 = *v17;
                v27 = v17;
                if (!*v17)
                  goto LABEL_60;
                continue;
              }
              v34 = memcmp(v30, v23, v32);
              if (v34)
              {
                if ((v34 & 0x80000000) == 0)
                  goto LABEL_57;
              }
              else if (v31 >= v24)
              {
                goto LABEL_57;
              }
              v15 = v17[1];
              if (!v15)
              {
                v27 = v17 + 1;
                goto LABEL_60;
              }
            }
          }
        }
      }
      v27 = v17 + 1;
      if (!v15)
      {
        v17 = v16;
        v27 = v16;
      }
      if (*v27)
      {
LABEL_57:
        if (v13 < 0)
          operator delete(v11);
        operator delete(v14);
        v9 = a1;
        goto LABEL_63;
      }
LABEL_60:
      *v14 = 0;
      v14[1] = 0;
      v14[2] = v17;
      *v27 = v14;
      v9 = a1;
      v35 = (_QWORD *)**a1;
      if (v35)
      {
        *a1 = v35;
        v14 = (_QWORD *)*v27;
      }
      sub_20AEC84C8(a1[1], v14);
      a1[2] = (_QWORD *)((char *)a1[2] + 1);
LABEL_63:
      v4 = (uint64_t *)(*(_QWORD *)a2 + 8);
      *(_QWORD *)a2 = v4;
      v36 = *(_QWORD *)(a2 + 16) + 8;
      *(_QWORD *)(a2 + 16) = v36;
    }
    while (v4 != *v38 || (uint64_t *)v36 != v38[2]);
  }
}

void sub_20B2E3F14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, int a20)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20AEC01C0(exception_object);
}

void sub_20B2E3F7C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  unsigned __int8 v15;
  __int16 v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  int v23;
  std::__shared_weak_count *v24;
  std::__shared_weak_count *v25;

  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  v25 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v24 = v3;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_QWORD *)(a1 + 48);
    v22 = *(_QWORD *)(a1 + 32);
    v23 = *(_DWORD *)(a1 + 40);
    v9 = *(_DWORD *)(a1 + 56);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  else
  {
    v24 = 0;
    v8 = *(_QWORD *)(a1 + 48);
    v22 = *(_QWORD *)(a1 + 32);
    v23 = *(_DWORD *)(a1 + 40);
    v9 = *(_DWORD *)(a1 + 56);
  }
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v22;
  *(_DWORD *)(a2 + 24) = v23;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = v9;
  if (v4)
  {
    if (v3)
    {
      v11 = (unint64_t *)&v3->__shared_owners_;
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 1, v11));
      do
        v13 = __ldaxr(v11);
      while (__stlxr(v13 - 1, v11));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104))(v4);
    if ((v14 & 0xFFFFFFu) <= 0x10000)
      v15 = 0;
    else
      v15 = v14;
    v16 = v14 & 0xFF00;
    if ((v14 & 0xFF0000) == 0)
      v16 = 0;
    v3 = v24;
    *(_WORD *)(a2 + 44) = v16 & 0xFF00 | v15;
    if (!v24)
      goto LABEL_28;
  }
  else
  {
    *(_WORD *)(a2 + 44) = 0;
    if (!v3)
      goto LABEL_28;
  }
  v17 = (unint64_t *)&v3->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    v19 = v25;
    if (!v25)
      return;
    goto LABEL_29;
  }
LABEL_28:
  v19 = v25;
  if (!v25)
    return;
LABEL_29:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldaxr(v20);
  while (__stlxr(v21 - 1, v20));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
}

void sub_20B2E4158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  va_list va;
  uint64_t v10;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v5 = *(std::__shared_weak_count **)(v3 + 8);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_20AEC147C((uint64_t)va);
  sub_20AEC147C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_20B2E41AC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  unsigned __int8 v15;
  __int16 v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  int v23;
  std::__shared_weak_count *v24;
  std::__shared_weak_count *v25;

  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  v25 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v24 = v3;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_QWORD *)(a1 + 48);
    v22 = *(_QWORD *)(a1 + 32);
    v23 = *(_DWORD *)(a1 + 40);
    v9 = *(_DWORD *)(a1 + 56);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  else
  {
    v24 = 0;
    v8 = *(_QWORD *)(a1 + 48);
    v22 = *(_QWORD *)(a1 + 32);
    v23 = *(_DWORD *)(a1 + 40);
    v9 = *(_DWORD *)(a1 + 56);
  }
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v22;
  *(_DWORD *)(a2 + 24) = v23;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = v9;
  if (v4)
  {
    if (v3)
    {
      v11 = (unint64_t *)&v3->__shared_owners_;
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 1, v11));
      do
        v13 = __ldaxr(v11);
      while (__stlxr(v13 - 1, v11));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104))(v4);
    if ((v14 & 0xFFFFFFu) <= 0x10000)
      v15 = 0;
    else
      v15 = v14;
    v16 = v14 & 0xFF00;
    if ((v14 & 0xFF0000) == 0)
      v16 = 0;
    v3 = v24;
    *(_WORD *)(a2 + 44) = v16 & 0xFF00 | v15;
    if (!v24)
      goto LABEL_28;
  }
  else
  {
    *(_WORD *)(a2 + 44) = 0;
    if (!v3)
      goto LABEL_28;
  }
  v17 = (unint64_t *)&v3->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    v19 = v25;
    if (!v25)
      return;
    goto LABEL_29;
  }
LABEL_28:
  v19 = v25;
  if (!v25)
    return;
LABEL_29:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldaxr(v20);
  while (__stlxr(v21 - 1, v20));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
}

void sub_20B2E4388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  va_list va;
  uint64_t v10;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v5 = *(std::__shared_weak_count **)(v3 + 8);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_20AEC147C((uint64_t)va);
  sub_20AEC147C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_20B2E43DC()
{
  unsigned __int8 v0;
  std::string *v1;
  __int128 *v2;
  int64x2_t v3;
  int8x16_t v4;
  void *v5[3];
  void *v6[2];
  char v7;
  void *v8[2];
  char v9;
  void *__p;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25463CAF0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25463CAF0))
  {
    sub_20AEC0D64(v6, "Image");
    v1 = sub_20AF872C0();
    sub_20B2E45CC((uint64_t)v8, (uint64_t)v1);
    v2 = sub_20AF85EB4();
    sub_20B2E45CC((uint64_t)&__p, (uint64_t)v2);
    sub_20AEC7620(v5, (uint64_t)v8, 2uLL);
    sub_20B53170C((char *)v6, (uint64_t *)v5, &stru_25463CAF8, v3, v4);
    sub_20AEC2E90(v5);
    if (v11 < 0)
    {
      operator delete(__p);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v7 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25463CAF8, &dword_20AEBB000);
          __cxa_guard_release(&qword_25463CAF0);
          return;
        }
LABEL_10:
        operator delete(v6[0]);
        goto LABEL_7;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8[0]);
    if ((v7 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
}

void sub_20B2E4518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AEC2E90((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_25463CAF0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_25463CAF0);
  _Unwind_Resume(a1);
}

void sub_20B2E45CC(uint64_t a1, uint64_t a2)
{
  std::string __p;

  if (*(char *)(a2 + 23) < 0)
    sub_20AEC60F4(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  sub_20B52B814(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20B2E4668(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B2E4684(int a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  std::__shared_weak_count *v94;
  unint64_t *v95;
  unint64_t v96;
  unint64_t v97;
  std::__shared_weak_count *v98;
  unint64_t *v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  std::__shared_weak_count *v105;
  unint64_t *v106;
  unint64_t v107;
  unint64_t v108;
  std::__shared_weak_count *v109;
  unint64_t *v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  std::__shared_weak_count *v116;
  unint64_t *v117;
  unint64_t v118;
  unint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  unint64_t v130;
  std::__shared_weak_count *v131;
  unint64_t *v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  std::__shared_weak_count *v138;
  unint64_t *v139;
  unint64_t v140;
  unint64_t v141;
  std::__shared_weak_count *v142;
  unint64_t *v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  std::__shared_weak_count *v149;
  unint64_t *v150;
  unint64_t v151;
  unint64_t v152;
  std::__shared_weak_count *v153;
  unint64_t *v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  std::__shared_weak_count *v160;
  unint64_t *v161;
  unint64_t v162;
  unint64_t v163;
  std::__shared_weak_count *v164;
  unint64_t *v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  std::__shared_weak_count *v171;
  unint64_t *v172;
  unint64_t v173;
  unint64_t v174;
  std::__shared_weak_count *v175;
  unint64_t *v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  std::__shared_weak_count *v182;
  unint64_t *v183;
  unint64_t v184;
  unint64_t v185;
  std::__shared_weak_count *v186;
  unint64_t *v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  std::__shared_weak_count *v192;
  unint64_t *v193;
  unint64_t v194;
  unint64_t v195;
  std::__shared_weak_count *v196;
  unint64_t *v197;
  unint64_t v198;
  unint64_t v199;
  uint64_t v200;
  int v201;
  uint64_t v202;
  std::__shared_weak_count *v203;
  unint64_t *v204;
  unint64_t v205;
  unint64_t v206;
  std::__shared_weak_count *v207;
  unint64_t *v208;
  unint64_t v209;
  unint64_t v210;
  uint64_t v211;
  int v212;
  uint64_t v213;
  std::__shared_weak_count *v214;
  unint64_t *v215;
  unint64_t v216;
  unint64_t v217;
  std::__shared_weak_count *v218;
  unint64_t *v219;
  unint64_t v220;
  unint64_t v221;
  uint64_t v222;
  int v223;
  uint64_t v224;
  std::__shared_weak_count *v225;
  unint64_t *v226;
  unint64_t v227;
  unint64_t v228;
  std::__shared_weak_count *v229;
  unint64_t *v230;
  unint64_t v231;
  unint64_t v232;
  uint64_t v233;
  int v234;
  uint64_t v235;
  std::__shared_weak_count *v236;
  unint64_t *v237;
  unint64_t v238;
  unint64_t v239;
  std::__shared_weak_count *v240;
  unint64_t *v241;
  unint64_t v242;
  unint64_t v243;
  uint64_t v244;
  int v245;
  uint64_t v246;
  std::__shared_weak_count *v247;
  unint64_t *v248;
  unint64_t v249;
  unint64_t v250;
  std::__shared_weak_count *v251;
  unint64_t *v252;
  unint64_t v253;
  unint64_t v254;
  uint64_t v255;
  int v256;
  uint64_t v257;
  std::__shared_weak_count *v258;
  unint64_t *v259;
  unint64_t v260;
  unint64_t v261;
  std::__shared_weak_count *v262;
  unint64_t *v263;
  unint64_t v264;
  unint64_t v265;
  uint64_t v266;
  int v267;
  uint64_t v268;
  std::__shared_weak_count *v269;
  unint64_t *v270;
  unint64_t v271;
  unint64_t v272;
  std::__shared_weak_count *v273;
  unint64_t *v274;
  unint64_t v275;
  unint64_t v276;
  uint64_t v277;
  int v278;
  uint64_t v279;
  std::__shared_weak_count *v280;
  unint64_t *v281;
  unint64_t v282;
  unint64_t v283;
  std::__shared_weak_count *v284;
  unint64_t *v285;
  unint64_t v286;
  unint64_t v287;
  uint64_t v288;
  int v289;
  uint64_t v290;
  std::__shared_weak_count *v291;
  unint64_t *v292;
  unint64_t v293;
  unint64_t v294;
  std::__shared_weak_count *v295;
  unint64_t *v296;
  unint64_t v297;
  unint64_t v298;
  uint64_t v299;
  int v300;
  uint64_t v301;
  std::__shared_weak_count *v302;
  unint64_t *v303;
  unint64_t v304;
  unint64_t v305;
  std::__shared_weak_count *v306;
  unint64_t *v307;
  unint64_t v308;
  unint64_t v309;
  uint64_t v310;
  uint64_t v311;
  std::__shared_weak_count *v312;
  unint64_t *v313;
  unint64_t v314;
  unint64_t v315;
  std::__shared_weak_count *v316;
  unint64_t *v317;
  unint64_t v318;
  unint64_t v319;
  uint64_t v320;
  uint64_t v321;
  std::__shared_weak_count *v322;
  unint64_t *v323;
  unint64_t v324;
  unint64_t v325;
  std::__shared_weak_count *v326;
  unint64_t *v327;
  unint64_t v328;
  unint64_t v329;
  uint64_t v330;
  int v331;
  uint64_t v332;
  std::__shared_weak_count *v333;
  unint64_t *v334;
  unint64_t v335;
  unint64_t v336;
  std::__shared_weak_count *v337;
  unint64_t *v338;
  unint64_t v339;
  unint64_t v340;
  uint64_t v341;
  uint64_t v342;
  std::__shared_weak_count *v343;
  unint64_t *v344;
  unint64_t v345;
  unint64_t v346;
  std::__shared_weak_count *v347;
  unint64_t *v348;
  unint64_t v349;
  unint64_t v350;
  uint64_t v351;
  int v352;
  uint64_t v353;
  std::__shared_weak_count *v354;
  unint64_t *v355;
  unint64_t v356;
  unint64_t v357;
  std::__shared_weak_count *v358;
  unint64_t *v359;
  unint64_t v360;
  unint64_t v361;
  uint64_t v362;
  int v363;
  uint64_t v364;
  std::__shared_weak_count *v365;
  unint64_t *v366;
  unint64_t v367;
  unint64_t v368;
  std::__shared_weak_count *v369;
  unint64_t *v370;
  unint64_t v371;
  unint64_t v372;
  uint64_t v373;
  int v374;
  uint64_t v375;
  std::__shared_weak_count *v376;
  unint64_t *v377;
  unint64_t v378;
  unint64_t v379;
  std::__shared_weak_count *v380;
  unint64_t *v381;
  unint64_t v382;
  unint64_t v383;
  uint64_t v384;
  int v385;
  uint64_t v386;
  std::__shared_weak_count *v387;
  unint64_t *v388;
  unint64_t v389;
  unint64_t v390;
  std::__shared_weak_count *v391;
  unint64_t *v392;
  unint64_t v393;
  unint64_t v394;
  uint64_t v395;
  int v396;
  uint64_t v397;
  std::__shared_weak_count *v398;
  unint64_t *v399;
  unint64_t v400;
  unint64_t v401;
  std::__shared_weak_count *v402;
  unint64_t *v403;
  unint64_t v404;
  unint64_t v405;
  uint64_t v406;
  int v407;
  uint64_t v408;
  std::__shared_weak_count *v409;
  unint64_t *v410;
  unint64_t v411;
  unint64_t v412;
  std::__shared_weak_count *v413;
  unint64_t *v414;
  unint64_t v415;
  unint64_t v416;
  uint64_t v417;
  uint64_t v418;
  std::__shared_weak_count *v419;
  unint64_t *v420;
  unint64_t v421;
  unint64_t v422;
  std::__shared_weak_count *v423;
  unint64_t *v424;
  unint64_t v425;
  unint64_t v426;
  uint64_t v427;
  int v428;
  uint64_t v429;
  std::__shared_weak_count *v430;
  unint64_t *v431;
  unint64_t v432;
  unint64_t v433;
  std::__shared_weak_count *v434;
  unint64_t *v435;
  unint64_t v436;
  unint64_t v437;
  int v438;
  uint64_t v439;
  _WORD *v440;
  uint64_t v441;
  std::__shared_weak_count *v442;
  unint64_t *v443;
  unint64_t v444;
  unint64_t v445;
  int v446;
  int m;
  uint64_t v448;
  int v449;
  uint64_t v450;
  _WORD *v451;
  uint64_t v452;
  std::__shared_weak_count *v453;
  unint64_t *v454;
  unint64_t v455;
  unint64_t v456;
  int v457;
  uint64_t v458;
  int v459;
  uint64_t v460;
  _BYTE *v461;
  uint64_t v462;
  std::__shared_weak_count *v463;
  unint64_t *v464;
  unint64_t v465;
  unint64_t v466;
  uint64_t v467;
  int v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  std::__shared_weak_count *v473;
  unint64_t *v474;
  unint64_t v475;
  int v476;
  uint64_t v477;
  float *v478;
  uint64_t v479;
  std::__shared_weak_count *v480;
  unint64_t *v481;
  unint64_t v482;
  unint64_t v483;
  int v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  int v488;
  uint64_t v489;
  _BYTE *v490;
  uint64_t v491;
  std::__shared_weak_count *v492;
  unint64_t *v493;
  unint64_t v494;
  unint64_t v495;
  uint64_t v496;
  int v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  unint64_t *v502;
  int v503;
  uint64_t v504;
  float *v505;
  uint64_t v506;
  std::__shared_weak_count *v507;
  unint64_t *v508;
  unint64_t v509;
  unint64_t v510;
  int v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  int v515;
  uint64_t v516;
  _WORD *v517;
  uint64_t v518;
  std::__shared_weak_count *v519;
  unint64_t *v520;
  unint64_t v521;
  unint64_t v522;
  uint64_t v523;
  int v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  unint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  unint64_t *v533;
  int v534;
  uint64_t v535;
  _BYTE *v536;
  uint64_t v537;
  std::__shared_weak_count *v538;
  unint64_t *v539;
  unint64_t v540;
  unint64_t v541;
  uint64_t v542;
  int v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  unint64_t *v548;
  int v549;
  uint64_t v550;
  float *v551;
  uint64_t v552;
  std::__shared_weak_count *v553;
  unint64_t *v554;
  unint64_t v555;
  unint64_t v556;
  uint64_t v557;
  int v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  unint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  unint64_t *v567;
  int v568;
  uint64_t v569;
  _WORD *v570;
  uint64_t v571;
  std::__shared_weak_count *v572;
  unint64_t *v573;
  unint64_t v574;
  unint64_t v575;
  int v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  int v580;
  uint64_t v581;
  _WORD *v582;
  uint64_t v583;
  std::__shared_weak_count *v584;
  unint64_t *v585;
  unint64_t v586;
  unint64_t v587;
  int v588;
  int j;
  uint64_t v590;
  int v591;
  uint64_t v592;
  _WORD *v593;
  uint64_t v594;
  std::__shared_weak_count *v595;
  unint64_t *v596;
  unint64_t v597;
  unint64_t v598;
  int v599;
  int jj;
  uint64_t v601;
  int v602;
  uint64_t v603;
  _WORD *v604;
  uint64_t v605;
  std::__shared_weak_count *v606;
  unint64_t *v607;
  unint64_t v608;
  unint64_t v609;
  int v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  int v614;
  uint64_t v615;
  _WORD *v616;
  uint64_t v617;
  std::__shared_weak_count *v618;
  unint64_t *v619;
  unint64_t v620;
  unint64_t v621;
  uint64_t v622;
  int v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  unint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  unint64_t *v632;
  int v633;
  uint64_t v634;
  _WORD *v635;
  uint64_t v636;
  std::__shared_weak_count *v637;
  unint64_t *v638;
  unint64_t v639;
  unint64_t v640;
  int v641;
  int n;
  uint64_t v643;
  int v644;
  uint64_t v645;
  _WORD *v646;
  uint64_t v647;
  std::__shared_weak_count *v648;
  unint64_t *v649;
  unint64_t v650;
  unint64_t v651;
  uint64_t v652;
  int v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  unint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  unint64_t *v662;
  int v663;
  uint64_t v664;
  float *v665;
  uint64_t v666;
  std::__shared_weak_count *v667;
  unint64_t *v668;
  unint64_t v669;
  unint64_t v670;
  int v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  unint64_t *v678;
  int v679;
  uint64_t v680;
  float *v681;
  uint64_t v682;
  std::__shared_weak_count *v683;
  unint64_t *v684;
  unint64_t v685;
  unint64_t v686;
  uint64_t v687;
  int v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  unint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  unint64_t *v697;
  int v698;
  uint64_t v699;
  float *v700;
  uint64_t v701;
  std::__shared_weak_count *v702;
  unint64_t *v703;
  unint64_t v704;
  unint64_t v705;
  uint64_t v706;
  int v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  unint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  unint64_t *v716;
  int v717;
  uint64_t v718;
  _WORD *v719;
  uint64_t v720;
  std::__shared_weak_count *v721;
  unint64_t *v722;
  unint64_t v723;
  unint64_t v724;
  int v725;
  int ii;
  uint64_t v727;
  int v728;
  uint64_t v729;
  _WORD *v730;
  uint64_t v731;
  std::__shared_weak_count *v732;
  unint64_t *v733;
  unint64_t v734;
  unint64_t v735;
  uint64_t v736;
  int v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  unint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  unint64_t *v746;
  int v747;
  uint64_t v748;
  _WORD *v749;
  uint64_t v750;
  std::__shared_weak_count *v751;
  unint64_t *v752;
  unint64_t v753;
  unint64_t v754;
  uint64_t v755;
  int v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  unint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  unint64_t *v765;
  int v766;
  uint64_t v767;
  float *v768;
  uint64_t v769;
  std::__shared_weak_count *v770;
  unint64_t *v771;
  unint64_t v772;
  unint64_t v773;
  uint64_t v774;
  int v775;
  uint64_t v776;
  uint64_t v777;
  uint64_t v778;
  unint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  unint64_t *v784;
  int v785;
  uint64_t v786;
  _BYTE *v787;
  uint64_t v788;
  std::__shared_weak_count *v789;
  unint64_t *v790;
  unint64_t v791;
  unint64_t v792;
  uint64_t v793;
  int v794;
  int v795;
  uint64_t v796;
  uint64_t v797;
  int v798;
  uint64_t v799;
  _BYTE *v800;
  uint64_t v801;
  std::__shared_weak_count *v802;
  unint64_t *v803;
  unint64_t v804;
  unint64_t v805;
  uint64_t v806;
  int v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  unint64_t *v812;
  int v813;
  uint64_t v814;
  float *v815;
  uint64_t v816;
  std::__shared_weak_count *v817;
  unint64_t *v818;
  unint64_t v819;
  unint64_t v820;
  uint64_t v821;
  int v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  unint64_t v826;
  uint64_t v827;
  uint64_t v828;
  uint64_t v829;
  uint64_t v830;
  unint64_t *v831;
  int v832;
  uint64_t v833;
  float *v834;
  uint64_t v835;
  std::__shared_weak_count *v836;
  unint64_t *v837;
  unint64_t v838;
  unint64_t v839;
  uint64_t v840;
  int v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  unint64_t v845;
  uint64_t v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  unint64_t *v850;
  int v851;
  uint64_t v852;
  _WORD *v853;
  uint64_t v854;
  std::__shared_weak_count *v855;
  unint64_t *v856;
  unint64_t v857;
  unint64_t v858;
  int v859;
  uint64_t i;
  int v861;
  uint64_t v862;
  _WORD *v863;
  uint64_t v864;
  std::__shared_weak_count *v865;
  unint64_t *v866;
  unint64_t v867;
  unint64_t v868;
  int v869;
  uint64_t v870;
  uint64_t v871;
  uint64_t v872;
  uint64_t v873;
  uint64_t v874;
  uint64_t v875;
  unint64_t *v876;
  int v877;
  uint64_t v878;
  _BYTE *v879;
  uint64_t v880;
  std::__shared_weak_count *v881;
  unint64_t *v882;
  unint64_t v883;
  unint64_t v884;
  int v885;
  int v886;
  uint64_t v887;
  uint64_t v888;
  uint64_t v889;
  uint64_t v890;
  unint64_t *v891;
  int v892;
  uint64_t v893;
  _BYTE *v894;
  uint64_t v895;
  std::__shared_weak_count *v896;
  unint64_t *v897;
  unint64_t v898;
  unint64_t v899;
  uint64_t v900;
  int v901;
  uint64_t v902;
  uint64_t v903;
  uint64_t v904;
  uint64_t v905;
  unint64_t *v906;
  int v907;
  uint64_t v908;
  _WORD *v909;
  uint64_t v910;
  std::__shared_weak_count *v911;
  unint64_t *v912;
  unint64_t v913;
  unint64_t v914;
  int v915;
  uint64_t v916;
  int v917;
  uint64_t v918;
  _WORD *v919;
  uint64_t v920;
  std::__shared_weak_count *v921;
  unint64_t *v922;
  unint64_t v923;
  unint64_t v924;
  int v925;
  uint64_t v926;
  uint64_t v927;
  uint64_t v928;
  int v929;
  uint64_t v930;
  _BYTE *v931;
  uint64_t v932;
  std::__shared_weak_count *v933;
  unint64_t *v934;
  unint64_t v935;
  unint64_t v936;
  uint64_t v937;
  int v938;
  uint64_t v939;
  uint64_t v940;
  uint64_t v941;
  uint64_t v942;
  unint64_t *v943;
  int v944;
  uint64_t v945;
  float *v946;
  uint64_t v947;
  std::__shared_weak_count *v948;
  unint64_t *v949;
  unint64_t v950;
  unint64_t v951;
  int v952;
  uint64_t v953;
  uint64_t v954;
  uint64_t v955;
  int v956;
  uint64_t v957;
  _WORD *v958;
  uint64_t v959;
  std::__shared_weak_count *v960;
  unint64_t *v961;
  unint64_t v962;
  unint64_t v963;
  uint64_t v964;
  int v965;
  uint64_t v966;
  uint64_t v967;
  uint64_t v968;
  unint64_t v969;
  uint64_t v970;
  uint64_t v971;
  uint64_t v972;
  uint64_t v973;
  unint64_t *v974;
  int v975;
  uint64_t v976;
  _WORD *v977;
  uint64_t v978;
  std::__shared_weak_count *v979;
  unint64_t *v980;
  unint64_t v981;
  unint64_t v982;
  int v983;
  int k;
  uint64_t v985;
  int v986;
  uint64_t v987;
  _BYTE *v988;
  uint64_t v989;
  std::__shared_weak_count *v990;
  unint64_t *v991;
  unint64_t v992;
  unint64_t v993;
  uint64_t v994;
  int v995;
  int v996;
  uint64_t v997;
  uint64_t v998;
  int v999;
  uint64_t v1000;
  _WORD *v1001;
  uint64_t v1002;
  std::__shared_weak_count *v1003;
  unint64_t *v1004;
  unint64_t v1005;
  unint64_t v1006;
  int v1007;
  uint64_t v1008;
  int v1009;
  uint64_t v1010;
  _BYTE *v1011;
  uint64_t v1012;
  std::__shared_weak_count *v1013;
  unint64_t *v1014;
  unint64_t v1015;
  unint64_t v1016;
  uint64_t v1017;
  int v1018;
  int v1019;
  uint64_t v1020;
  uint64_t v1021;
  uint64_t v1022;
  uint64_t v1023;
  unint64_t *v1024;
  uint64_t v1025;
  uint64_t v1026;
  unint64_t *v1027;
  uint64_t v1028;
  uint64_t v1029;
  unint64_t *v1030;
  uint64_t v1031;
  uint64_t v1032;
  unint64_t *v1033;
  uint64_t v1034;
  uint64_t v1035;
  unint64_t *v1036;
  uint64_t v1037;
  uint64_t v1038;
  unint64_t *v1039;
  uint64_t v1040;
  uint64_t v1041;
  unint64_t *v1042;
  uint64_t v1043;
  uint64_t v1044;
  unint64_t *v1045;
  uint64_t v1046;
  uint64_t v1047;
  unint64_t *v1048;
  uint64_t v1049;
  uint64_t v1050;
  unint64_t *v1051;
  uint64_t v1052;
  uint64_t v1053;
  uint64_t v1054;
  unint64_t *v1055;
  uint64_t v1056;
  uint64_t v1057;
  uint64_t v1058;
  unint64_t *v1059;
  uint64_t v1060;
  uint64_t v1061;
  uint64_t v1062;
  unint64_t *v1063;
  uint64_t v1064;
  uint64_t v1065;
  uint64_t v1066;
  unint64_t *v1067;
  uint64_t v1068;
  uint64_t v1069;
  unint64_t *v1070;
  uint64_t v1071;
  uint64_t v1072;
  uint64_t v1073;
  unint64_t *v1074;
  uint64_t v1075;
  uint64_t v1076;
  uint64_t v1077;
  unint64_t *v1078;
  uint64_t v1079;
  uint64_t v1080;
  unint64_t *v1081;
  uint64_t v1082;
  uint64_t v1083;
  unint64_t *v1084;
  uint64_t v1085;
  int v1086;
  int v1087;
  int v1088;
  int v1089;
  uint64_t v1090;
  int v1091;
  int v1092;
  uint64_t v1093;
  int v1094;
  uint64_t v1095;
  uint64_t v1096;
  uint64_t v1097;
  int v1098;
  int v1099;
  uint64_t v1100;
  uint64_t v1101;
  uint64_t v1102;
  uint64_t v1103;
  uint64_t v1104;
  uint64_t v1105;
  uint64_t v1106;
  uint64_t v1107;
  uint64_t v1108;
  int v1109;
  uint64_t v1110;
  uint64_t v1111;
  uint64_t v1112;
  int v1113;
  int v1114;
  __int16 v1115;
  uint64_t (**v1116)();
  uint64_t v1117;
  std::__shared_weak_count *v1118;
  _BYTE *v1119;
  unsigned int v1120;
  int v1121;
  int v1122;
  unsigned int v1123;
  char v1124;
  char v1125;
  unsigned int v1126;
  int v1127;
  char v1128;
  char v1129;
  uint64_t v1130;

  switch(a1)
  {
    case 0:
      sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_20B532360);
      abort();
    case 1:
      v1116 = &off_24C415B50;
      sub_20B2EBFE0(&v1117, a3);
      v4 = *a2;
      v5 = v1120;
      v6 = v1117;
      if (!v1117)
        goto LABEL_1462;
      v7 = v1118;
      if (v1118)
      {
        p_shared_owners = (unint64_t *)&v1118->__shared_owners_;
        do
          v9 = __ldxr(p_shared_owners);
        while (__stxr(v9 + 1, p_shared_owners));
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        v6 = v1117;
        v11 = v1118;
        if (v1118)
        {
          v12 = (unint64_t *)&v1118->__shared_owners_;
          do
            v13 = __ldxr(v12);
          while (__stxr(v13 + 1, v12));
          do
            v14 = __ldaxr(v12);
          while (__stlxr(v14 - 1, v12));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
      }
      if (v1125)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 96))(&v1130, v6, 1);
      else
LABEL_1462:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1489;
      v877 = v1121;
      if (!v1121)
        goto LABEL_1489;
      v878 = v1123;
      v879 = v1119;
      if (v1124 && v1119)
      {
        v880 = v1117;
        v881 = v1118;
        if (v1118)
        {
          v882 = (unint64_t *)&v1118->__shared_owners_;
          do
            v883 = __ldxr(v882);
          while (__stxr(v883 + 1, v882));
          do
            v884 = __ldaxr(v882);
          while (__stlxr(v884 - 1, v882));
          if (!v884)
          {
            ((void (*)(std::__shared_weak_count *))v881->__on_zero_shared)(v881);
            std::__shared_weak_count::__release_weak(v881);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v880 + 88))(v880, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v879 = v1119;
      }
      v885 = v877 - 1;
      if (v877 == 1)
        goto LABEL_1482;
      if (!(_DWORD)v5)
        goto LABEL_1489;
      v886 = 0;
      do
      {
        if (!v879
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1999;
        }
        v887 = 0;
        v888 = *(_QWORD *)(v4 + 48);
        do
          sub_20B51852C(v888, &v879[v887++]);
        while (v5 != v887);
        v879 += v878;
        ++v886;
      }
      while (v886 != v885);
LABEL_1482:
      if ((_DWORD)v5 && !v879)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_1999:
          abort();
        }
        v879 = 0;
      }
      if ((_DWORD)v5)
      {
        v889 = *(_QWORD *)(v4 + 48);
        do
        {
          sub_20B51852C(v889, v879++);
          --v5;
        }
        while (v5);
      }
LABEL_1489:
      v890 = v1130;
      v1130 = 0;
      if (v890)
        (*(void (**)(uint64_t))(*(_QWORD *)v890 + 8))(v890);
      v473 = v1118;
      if (!v1118)
        return;
      v891 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v891);
      while (__stlxr(v475 - 1, v891));
      goto LABEL_1975;
    case 2:
      v1116 = &off_24C415C48;
      sub_20B2EC368(&v1117, a3);
      v320 = *a2;
      v1097 = v1120;
      v321 = v1117;
      if (!v1117)
        goto LABEL_1429;
      v322 = v1118;
      if (v1118)
      {
        v323 = (unint64_t *)&v1118->__shared_owners_;
        do
          v324 = __ldxr(v323);
        while (__stxr(v324 + 1, v323));
        do
          v325 = __ldaxr(v323);
        while (__stlxr(v325 - 1, v323));
        if (!v325)
        {
          ((void (*)(std::__shared_weak_count *))v322->__on_zero_shared)(v322);
          std::__shared_weak_count::__release_weak(v322);
        }
        v321 = v1117;
        v326 = v1118;
        if (v1118)
        {
          v327 = (unint64_t *)&v1118->__shared_owners_;
          do
            v328 = __ldxr(v327);
          while (__stxr(v328 + 1, v327));
          do
            v329 = __ldaxr(v327);
          while (__stlxr(v329 - 1, v327));
          if (!v329)
          {
            ((void (*)(std::__shared_weak_count *))v326->__on_zero_shared)(v326);
            std::__shared_weak_count::__release_weak(v326);
          }
        }
      }
      if (v1125)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v321 + 96))(&v1130, v321, 1);
      else
LABEL_1429:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1456;
      v861 = v1121;
      if (!v1121)
        goto LABEL_1456;
      v862 = v1123;
      v863 = v1119;
      if (v1124 && v1119)
      {
        v864 = v1117;
        v865 = v1118;
        if (v1118)
        {
          v866 = (unint64_t *)&v1118->__shared_owners_;
          do
            v867 = __ldxr(v866);
          while (__stxr(v867 + 1, v866));
          do
            v868 = __ldaxr(v866);
          while (__stlxr(v868 - 1, v866));
          if (!v868)
          {
            ((void (*)(std::__shared_weak_count *))v865->__on_zero_shared)(v865);
            std::__shared_weak_count::__release_weak(v865);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v864 + 88))(v864, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v863 = v1119;
      }
      if (v861 == 1)
        goto LABEL_1449;
      if (!(_DWORD)v1097)
        goto LABEL_1456;
      v869 = 0;
      v870 = 2 * v862;
      do
      {
        if (!v863
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1998;
        }
        v871 = 0;
        v872 = *(_QWORD *)(v320 + 48);
        do
          sub_20B5186C0(v872, &v863[v871++]);
        while (v1097 != v871);
        v863 = (_WORD *)((char *)v863 + v870);
        ++v869;
      }
      while (v869 != v861 - 1);
LABEL_1449:
      if ((_DWORD)v1097 && !v863)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_1998:
          abort();
        }
        v863 = 0;
      }
      if ((_DWORD)v1097)
      {
        v873 = *(_QWORD *)(v320 + 48);
        v874 = 2 * v1097;
        do
        {
          sub_20B5186C0(v873, v863++);
          v874 -= 2;
        }
        while (v874);
      }
LABEL_1456:
      v875 = v1130;
      v1130 = 0;
      if (v875)
        (*(void (**)(uint64_t))(*(_QWORD *)v875 + 8))(v875);
      v473 = v1118;
      if (!v1118)
        return;
      v876 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v876);
      while (__stlxr(v475 - 1, v876));
      goto LABEL_1975;
    case 3:
      v1116 = &off_24C415D40;
      sub_20B2EC6F0(&v1117, a3);
      v310 = *a2;
      v1096 = v1120;
      v311 = v1117;
      if (!v1117)
        goto LABEL_1405;
      v312 = v1118;
      if (v1118)
      {
        v313 = (unint64_t *)&v1118->__shared_owners_;
        do
          v314 = __ldxr(v313);
        while (__stxr(v314 + 1, v313));
        do
          v315 = __ldaxr(v313);
        while (__stlxr(v315 - 1, v313));
        if (!v315)
        {
          ((void (*)(std::__shared_weak_count *))v312->__on_zero_shared)(v312);
          std::__shared_weak_count::__release_weak(v312);
        }
        v311 = v1117;
        v316 = v1118;
        if (v1118)
        {
          v317 = (unint64_t *)&v1118->__shared_owners_;
          do
            v318 = __ldxr(v317);
          while (__stxr(v318 + 1, v317));
          do
            v319 = __ldaxr(v317);
          while (__stlxr(v319 - 1, v317));
          if (!v319)
          {
            ((void (*)(std::__shared_weak_count *))v316->__on_zero_shared)(v316);
            std::__shared_weak_count::__release_weak(v316);
          }
        }
      }
      if (v1125)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v311 + 96))(&v1130, v311, 1);
      else
LABEL_1405:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1817;
      v851 = v1121;
      if (!v1121)
        goto LABEL_1817;
      v852 = v1123;
      v853 = v1119;
      if (v1124 && v1119)
      {
        v854 = v1117;
        v855 = v1118;
        if (v1118)
        {
          v856 = (unint64_t *)&v1118->__shared_owners_;
          do
            v857 = __ldxr(v856);
          while (__stxr(v857 + 1, v856));
          do
            v858 = __ldaxr(v856);
          while (__stlxr(v858 - 1, v856));
          if (!v858)
          {
            ((void (*)(std::__shared_weak_count *))v855->__on_zero_shared)(v855);
            std::__shared_weak_count::__release_weak(v855);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v854 + 88))(v854, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v853 = v1119;
      }
      if (v851 == 1)
        goto LABEL_1425;
      if (!(_DWORD)v1096)
        goto LABEL_1817;
      v859 = 0;
      do
      {
        if (!v853
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1428;
        }
        for (i = 0; i != v1096; ++i)
        {
          v1115 = 0;
          sub_20B5186C0(*(_QWORD *)(v310 + 48), &v1115);
          v853[i] = v1115;
        }
        v853 += v852;
        ++v859;
      }
      while (v859 != v851 - 1);
LABEL_1425:
      if (!(_DWORD)v1096 || v853)
      {
        if (!(_DWORD)v1096)
          goto LABEL_1817;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1428:
        abort();
      }
      v1040 = 2 * v1096;
      do
      {
        v1115 = 0;
        sub_20B5186C0(*(_QWORD *)(v310 + 48), &v1115);
        *v853++ = v1115;
        v1040 -= 2;
      }
      while (v1040);
LABEL_1817:
      v1041 = v1130;
      v1130 = 0;
      if (v1041)
        (*(void (**)(uint64_t))(*(_QWORD *)v1041 + 8))(v1041);
      v473 = v1118;
      if (!v1118)
        return;
      v1042 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1042);
      while (__stlxr(v475 - 1, v1042));
      goto LABEL_1975;
    case 4:
      v1116 = &off_24C415E38;
      sub_20B2ECD34(&v1117, a3);
      v190 = *a2;
      v1095 = v1120;
      v191 = v1117;
      if (!v1117)
        goto LABEL_1053;
      v192 = v1118;
      if (v1118)
      {
        v193 = (unint64_t *)&v1118->__shared_owners_;
        do
          v194 = __ldxr(v193);
        while (__stxr(v194 + 1, v193));
        do
          v195 = __ldaxr(v193);
        while (__stlxr(v195 - 1, v193));
        if (!v195)
        {
          ((void (*)(std::__shared_weak_count *))v192->__on_zero_shared)(v192);
          std::__shared_weak_count::__release_weak(v192);
        }
        v191 = v1117;
        v196 = v1118;
        if (v1118)
        {
          v197 = (unint64_t *)&v1118->__shared_owners_;
          do
            v198 = __ldxr(v197);
          while (__stxr(v198 + 1, v197));
          do
            v199 = __ldaxr(v197);
          while (__stlxr(v199 - 1, v197));
          if (!v199)
          {
            ((void (*)(std::__shared_weak_count *))v196->__on_zero_shared)(v196);
            std::__shared_weak_count::__release_weak(v196);
          }
        }
      }
      if (v1125)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v191 + 96))(&v1130, v191, 1);
      else
LABEL_1053:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1080;
      v663 = v1121;
      if (!v1121)
        goto LABEL_1080;
      v664 = v1123;
      v665 = (float *)v1119;
      if (v1124 && v1119)
      {
        v666 = v1117;
        v667 = v1118;
        if (v1118)
        {
          v668 = (unint64_t *)&v1118->__shared_owners_;
          do
            v669 = __ldxr(v668);
          while (__stxr(v669 + 1, v668));
          do
            v670 = __ldaxr(v668);
          while (__stlxr(v670 - 1, v668));
          if (!v670)
          {
            ((void (*)(std::__shared_weak_count *))v667->__on_zero_shared)(v667);
            std::__shared_weak_count::__release_weak(v667);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v666 + 88))(v666, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v665 = (float *)v1119;
      }
      if (v663 == 1)
        goto LABEL_1073;
      if (!(_DWORD)v1095)
        goto LABEL_1080;
      v671 = 0;
      v672 = 4 * v664;
      do
      {
        if (!v665
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1989;
        }
        v673 = 0;
        v674 = *(_QWORD *)(v190 + 48);
        do
          sub_20B518CC0(v674, &v665[v673++]);
        while (v1095 != v673);
        v665 = (float *)((char *)v665 + v672);
        ++v671;
      }
      while (v671 != v663 - 1);
LABEL_1073:
      if ((_DWORD)v1095 && !v665)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_1989:
          abort();
        }
        v665 = 0;
      }
      if ((_DWORD)v1095)
      {
        v675 = *(_QWORD *)(v190 + 48);
        v676 = 4 * v1095;
        do
        {
          sub_20B518CC0(v675, v665++);
          v676 -= 4;
        }
        while (v676);
      }
LABEL_1080:
      v677 = v1130;
      v1130 = 0;
      if (v677)
        (*(void (**)(uint64_t))(*(_QWORD *)v677 + 8))(v677);
      v473 = v1118;
      if (!v1118)
        return;
      v678 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v678);
      while (__stlxr(v475 - 1, v678));
      goto LABEL_1975;
    case 5:
      v1116 = &off_24C415F30;
      sub_20B2ED378((std::string::size_type *)&v1117, a3);
      v277 = *a2;
      v278 = v1127;
      v279 = v1117;
      if (!v1117)
        goto LABEL_1303;
      v280 = v1118;
      if (v1118)
      {
        v281 = (unint64_t *)&v1118->__shared_owners_;
        do
          v282 = __ldxr(v281);
        while (__stxr(v282 + 1, v281));
        do
          v283 = __ldaxr(v281);
        while (__stlxr(v283 - 1, v281));
        if (!v283)
        {
          ((void (*)(std::__shared_weak_count *))v280->__on_zero_shared)(v280);
          std::__shared_weak_count::__release_weak(v280);
        }
        v279 = v1117;
        v284 = v1118;
        if (v1118)
        {
          v285 = (unint64_t *)&v1118->__shared_owners_;
          do
            v286 = __ldxr(v285);
          while (__stxr(v286 + 1, v285));
          do
            v287 = __ldaxr(v285);
          while (__stlxr(v287 - 1, v285));
          if (!v287)
          {
            ((void (*)(std::__shared_weak_count *))v284->__on_zero_shared)(v284);
            std::__shared_weak_count::__release_weak(v284);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v279 + 96))(&v1130, v279, 1);
      else
LABEL_1303:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1331;
      if (!v1121)
        goto LABEL_1331;
      v798 = v1122;
      if (!v1122)
        goto LABEL_1331;
      v799 = v1126;
      v800 = v1119;
      if (v1128 && v1119)
      {
        v801 = v1117;
        v802 = v1118;
        if (v1118)
        {
          v803 = (unint64_t *)&v1118->__shared_owners_;
          do
            v804 = __ldxr(v803);
          while (__stxr(v804 + 1, v803));
          do
            v805 = __ldaxr(v803);
          while (__stlxr(v805 - 1, v803));
          if (!v805)
          {
            ((void (*)(std::__shared_weak_count *))v802->__on_zero_shared)(v802);
            std::__shared_weak_count::__release_weak(v802);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v801 + 88))(v801, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v800 = v1119;
      }
      v806 = (2 * v278);
      if (v798 == 1)
        goto LABEL_1324;
      if (!(_DWORD)v806)
        goto LABEL_1331;
      v807 = 0;
      do
      {
        if (!v800
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1995;
        }
        v808 = 0;
        v809 = *(_QWORD *)(v277 + 48);
        do
          sub_20B51852C(v809, &v800[v808++]);
        while (v806 != v808);
        v800 += v799;
        ++v807;
      }
      while (v807 != v798 - 1);
LABEL_1324:
      if ((_DWORD)v806 && !v800)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_1995:
          abort();
        }
        v800 = 0;
      }
      if ((_DWORD)v806)
      {
        v810 = *(_QWORD *)(v277 + 48);
        do
        {
          sub_20B51852C(v810, v800++);
          --v806;
        }
        while (v806);
      }
LABEL_1331:
      v811 = v1130;
      v1130 = 0;
      if (v811)
        (*(void (**)(uint64_t))(*(_QWORD *)v811 + 8))(v811);
      v473 = v1118;
      if (!v1118)
        return;
      v812 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v812);
      while (__stlxr(v475 - 1, v812));
      goto LABEL_1975;
    case 6:
      v1116 = &off_24C418EE8;
      sub_20B2ED9D4((std::string::size_type *)&v1117, a3);
      v179 = *a2;
      v180 = v1127;
      v181 = v1117;
      if (!v1117)
        goto LABEL_1019;
      v182 = v1118;
      if (v1118)
      {
        v183 = (unint64_t *)&v1118->__shared_owners_;
        do
          v184 = __ldxr(v183);
        while (__stxr(v184 + 1, v183));
        do
          v185 = __ldaxr(v183);
        while (__stlxr(v185 - 1, v183));
        if (!v185)
        {
          ((void (*)(std::__shared_weak_count *))v182->__on_zero_shared)(v182);
          std::__shared_weak_count::__release_weak(v182);
        }
        v181 = v1117;
        v186 = v1118;
        if (v1118)
        {
          v187 = (unint64_t *)&v1118->__shared_owners_;
          do
            v188 = __ldxr(v187);
          while (__stxr(v188 + 1, v187));
          do
            v189 = __ldaxr(v187);
          while (__stlxr(v189 - 1, v187));
          if (!v189)
          {
            ((void (*)(std::__shared_weak_count *))v186->__on_zero_shared)(v186);
            std::__shared_weak_count::__release_weak(v186);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v181 + 96))(&v1130, v181, 1);
      else
LABEL_1019:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1047;
      if (!v1121)
        goto LABEL_1047;
      v644 = v1122;
      if (!v1122)
        goto LABEL_1047;
      v645 = v1126;
      v646 = v1119;
      if (v1128 && v1119)
      {
        v647 = v1117;
        v648 = v1118;
        if (v1118)
        {
          v649 = (unint64_t *)&v1118->__shared_owners_;
          do
            v650 = __ldxr(v649);
          while (__stxr(v650 + 1, v649));
          do
            v651 = __ldaxr(v649);
          while (__stlxr(v651 - 1, v649));
          if (!v651)
          {
            ((void (*)(std::__shared_weak_count *))v648->__on_zero_shared)(v648);
            std::__shared_weak_count::__release_weak(v648);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v647 + 88))(v647, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v646 = v1119;
      }
      v652 = (2 * v180);
      if (v644 == 1)
        goto LABEL_1040;
      if (!(_DWORD)v652)
        goto LABEL_1047;
      v653 = 0;
      v654 = 2 * v645;
      v655 = 2 * v652;
      do
      {
        if (!v646
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1984;
        }
        v656 = v652;
        v657 = 0;
        v658 = *(_QWORD *)(v179 + 48);
        do
        {
          sub_20B5186C0(v658, &v646[v657 / 2]);
          v657 += 2;
        }
        while (v655 != v657);
        v646 = (_WORD *)((char *)v646 + v654);
        ++v653;
        v652 = v656;
      }
      while (v653 != v644 - 1);
LABEL_1040:
      if ((_DWORD)v652 && !v646)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_1984:
          abort();
        }
        v646 = 0;
      }
      if ((_DWORD)v652)
      {
        v659 = *(_QWORD *)(v179 + 48);
        v660 = 2 * v652;
        do
        {
          sub_20B5186C0(v659, v646++);
          v660 -= 2;
        }
        while (v660);
      }
LABEL_1047:
      v661 = v1130;
      v1130 = 0;
      if (v661)
        (*(void (**)(uint64_t))(*(_QWORD *)v661 + 8))(v661);
      v473 = v1118;
      if (!v1118)
        return;
      v662 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v662);
      while (__stlxr(v475 - 1, v662));
      goto LABEL_1975;
    case 7:
      v1116 = &off_24C416028;
      sub_20B2EE0DC((std::string::size_type *)&v1117, a3);
      v124 = *a2;
      v125 = v1127;
      v126 = v1117;
      if (!v1117)
        goto LABEL_888;
      v127 = v1118;
      if (v1118)
      {
        v128 = (unint64_t *)&v1118->__shared_owners_;
        do
          v129 = __ldxr(v128);
        while (__stxr(v129 + 1, v128));
        do
          v130 = __ldaxr(v128);
        while (__stlxr(v130 - 1, v128));
        if (!v130)
        {
          ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
          std::__shared_weak_count::__release_weak(v127);
        }
        v126 = v1117;
        v131 = v1118;
        if (v1118)
        {
          v132 = (unint64_t *)&v1118->__shared_owners_;
          do
            v133 = __ldxr(v132);
          while (__stxr(v133 + 1, v132));
          do
            v134 = __ldaxr(v132);
          while (__stlxr(v134 - 1, v132));
          if (!v134)
          {
            ((void (*)(std::__shared_weak_count *))v131->__on_zero_shared)(v131);
            std::__shared_weak_count::__release_weak(v131);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v126 + 96))(&v1130, v126, 1);
      else
LABEL_888:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1781;
      if (!v1121)
        goto LABEL_1781;
      v580 = v1122;
      if (!v1122)
        goto LABEL_1781;
      v581 = v1126;
      v582 = v1119;
      if (v1128 && v1119)
      {
        v583 = v1117;
        v584 = v1118;
        if (v1118)
        {
          v585 = (unint64_t *)&v1118->__shared_owners_;
          do
            v586 = __ldxr(v585);
          while (__stxr(v586 + 1, v585));
          do
            v587 = __ldaxr(v585);
          while (__stlxr(v587 - 1, v585));
          if (!v587)
          {
            ((void (*)(std::__shared_weak_count *))v584->__on_zero_shared)(v584);
            std::__shared_weak_count::__release_weak(v584);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v583 + 88))(v583, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v582 = v1119;
      }
      v588 = v580 - 1;
      v1104 = (2 * v125);
      if (!v588)
        goto LABEL_909;
      if (!(2 * v125))
        goto LABEL_1781;
      for (j = 0; j != v588; ++j)
      {
        if (!v582
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_912;
        }
        v590 = 0;
        do
        {
          v1115 = 0;
          sub_20B5186C0(*(_QWORD *)(v124 + 48), &v1115);
          v582[v590++] = v1115;
        }
        while (v1104 != v590);
        v582 += v581;
      }
LABEL_909:
      if (!(_DWORD)v1104 || v582)
      {
        if (!(_DWORD)v1104)
          goto LABEL_1781;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_912:
        abort();
      }
      v1028 = 2 * v1104;
      do
      {
        v1115 = 0;
        sub_20B5186C0(*(_QWORD *)(v124 + 48), &v1115);
        *v582++ = v1115;
        v1028 -= 2;
      }
      while (v1028);
LABEL_1781:
      v1029 = v1130;
      v1130 = 0;
      if (v1029)
        (*(void (**)(uint64_t))(*(_QWORD *)v1029 + 8))(v1029);
      v473 = v1118;
      if (!v1118)
        return;
      v1030 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1030);
      while (__stlxr(v475 - 1, v1030));
      goto LABEL_1975;
    case 8:
      v1116 = &off_24C416120;
      sub_20B2EE6D0((std::string::size_type *)&v1117, a3);
      v299 = *a2;
      v300 = v1127;
      v301 = v1117;
      if (!v1117)
        goto LABEL_1371;
      v302 = v1118;
      if (v1118)
      {
        v303 = (unint64_t *)&v1118->__shared_owners_;
        do
          v304 = __ldxr(v303);
        while (__stxr(v304 + 1, v303));
        do
          v305 = __ldaxr(v303);
        while (__stlxr(v305 - 1, v303));
        if (!v305)
        {
          ((void (*)(std::__shared_weak_count *))v302->__on_zero_shared)(v302);
          std::__shared_weak_count::__release_weak(v302);
        }
        v301 = v1117;
        v306 = v1118;
        if (v1118)
        {
          v307 = (unint64_t *)&v1118->__shared_owners_;
          do
            v308 = __ldxr(v307);
          while (__stxr(v308 + 1, v307));
          do
            v309 = __ldaxr(v307);
          while (__stlxr(v309 - 1, v307));
          if (!v309)
          {
            ((void (*)(std::__shared_weak_count *))v306->__on_zero_shared)(v306);
            std::__shared_weak_count::__release_weak(v306);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v301 + 96))(&v1130, v301, 1);
      else
LABEL_1371:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1399;
      if (!v1121)
        goto LABEL_1399;
      v832 = v1122;
      if (!v1122)
        goto LABEL_1399;
      v833 = v1126;
      v834 = (float *)v1119;
      if (v1128 && v1119)
      {
        v835 = v1117;
        v836 = v1118;
        if (v1118)
        {
          v837 = (unint64_t *)&v1118->__shared_owners_;
          do
            v838 = __ldxr(v837);
          while (__stxr(v838 + 1, v837));
          do
            v839 = __ldaxr(v837);
          while (__stlxr(v839 - 1, v837));
          if (!v839)
          {
            ((void (*)(std::__shared_weak_count *))v836->__on_zero_shared)(v836);
            std::__shared_weak_count::__release_weak(v836);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v835 + 88))(v835, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v834 = (float *)v1119;
      }
      v840 = (2 * v300);
      if (v832 == 1)
        goto LABEL_1392;
      if (!(_DWORD)v840)
        goto LABEL_1399;
      v841 = 0;
      v842 = 4 * v833;
      v843 = 4 * v840;
      do
      {
        if (!v834
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1997;
        }
        v844 = v840;
        v845 = 0;
        v846 = *(_QWORD *)(v299 + 48);
        do
        {
          sub_20B518CC0(v846, &v834[v845 / 4]);
          v845 += 4;
        }
        while (v843 != v845);
        v834 = (float *)((char *)v834 + v842);
        ++v841;
        v840 = v844;
      }
      while (v841 != v832 - 1);
LABEL_1392:
      if ((_DWORD)v840 && !v834)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_1997:
          abort();
        }
        v834 = 0;
      }
      if ((_DWORD)v840)
      {
        v847 = *(_QWORD *)(v299 + 48);
        v848 = 4 * v840;
        do
        {
          sub_20B518CC0(v847, v834++);
          v848 -= 4;
        }
        while (v848);
      }
LABEL_1399:
      v849 = v1130;
      v1130 = 0;
      if (v849)
        (*(void (**)(uint64_t))(*(_QWORD *)v849 + 8))(v849);
      v473 = v1118;
      if (!v1118)
        return;
      v850 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v850);
      while (__stlxr(v475 - 1, v850));
      goto LABEL_1975;
    case 9:
      v1116 = &off_24C418FE0;
      sub_20B2EED2C((std::string::size_type *)&v1117, a3);
      v266 = *a2;
      v267 = v1127;
      v268 = v1117;
      if (!v1117)
        goto LABEL_1281;
      v269 = v1118;
      if (v1118)
      {
        v270 = (unint64_t *)&v1118->__shared_owners_;
        do
          v271 = __ldxr(v270);
        while (__stxr(v271 + 1, v270));
        do
          v272 = __ldaxr(v270);
        while (__stlxr(v272 - 1, v270));
        if (!v272)
        {
          ((void (*)(std::__shared_weak_count *))v269->__on_zero_shared)(v269);
          std::__shared_weak_count::__release_weak(v269);
        }
        v268 = v1117;
        v273 = v1118;
        if (v1118)
        {
          v274 = (unint64_t *)&v1118->__shared_owners_;
          do
            v275 = __ldxr(v274);
          while (__stxr(v275 + 1, v274));
          do
            v276 = __ldaxr(v274);
          while (__stlxr(v276 - 1, v274));
          if (!v276)
          {
            ((void (*)(std::__shared_weak_count *))v273->__on_zero_shared)(v273);
            std::__shared_weak_count::__release_weak(v273);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v268 + 96))(&v1130, v268, 1);
      else
LABEL_1281:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1914;
      if (!v1121)
        goto LABEL_1914;
      v785 = v1122;
      if (!v1122)
        goto LABEL_1914;
      v786 = v1126;
      v787 = v1119;
      if (v1128 && v1119)
      {
        v788 = v1117;
        v789 = v1118;
        if (v1118)
        {
          v790 = (unint64_t *)&v1118->__shared_owners_;
          do
            v791 = __ldxr(v790);
          while (__stxr(v791 + 1, v790));
          do
            v792 = __ldaxr(v790);
          while (__stlxr(v792 - 1, v790));
          if (!v792)
          {
            ((void (*)(std::__shared_weak_count *))v789->__on_zero_shared)(v789);
            std::__shared_weak_count::__release_weak(v789);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v788 + 88))(v788, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v787 = v1119;
      }
      v793 = (3 * v267);
      v794 = v785 - 1;
      if (v785 == 1)
      {
        v1109 = v267;
LABEL_1907:
        if (v1109 && !v787)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2000;
          }
          v787 = 0;
        }
        if (v1109)
        {
          v1068 = *(_QWORD *)(v266 + 48);
          do
          {
            sub_20B51852C(v1068, v787++);
            --v793;
          }
          while (v793);
        }
      }
      else if (v267)
      {
        v1109 = v267;
        v795 = 0;
        while (v787
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v796 = 0;
          v797 = *(_QWORD *)(v266 + 48);
          do
            sub_20B51852C(v797, &v787[v796++]);
          while (v793 != v796);
          v787 += v786;
          if (++v795 == v794)
            goto LABEL_1907;
        }
LABEL_2000:
        abort();
      }
LABEL_1914:
      v1069 = v1130;
      v1130 = 0;
      if (v1069)
        (*(void (**)(uint64_t))(*(_QWORD *)v1069 + 8))(v1069);
      v473 = v1118;
      if (!v1118)
        return;
      v1070 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1070);
      while (__stlxr(v475 - 1, v1070));
      goto LABEL_1975;
    case 10:
      v1116 = &off_24C4190D8;
      sub_20B2EF498((std::string::size_type *)&v1117, a3);
      v351 = *a2;
      v352 = v1127;
      v353 = v1117;
      if (!v1117)
        goto LABEL_1554;
      v354 = v1118;
      if (v1118)
      {
        v355 = (unint64_t *)&v1118->__shared_owners_;
        do
          v356 = __ldxr(v355);
        while (__stxr(v356 + 1, v355));
        do
          v357 = __ldaxr(v355);
        while (__stlxr(v357 - 1, v355));
        if (!v357)
        {
          ((void (*)(std::__shared_weak_count *))v354->__on_zero_shared)(v354);
          std::__shared_weak_count::__release_weak(v354);
        }
        v353 = v1117;
        v358 = v1118;
        if (v1118)
        {
          v359 = (unint64_t *)&v1118->__shared_owners_;
          do
            v360 = __ldxr(v359);
          while (__stxr(v360 + 1, v359));
          do
            v361 = __ldaxr(v359);
          while (__stlxr(v361 - 1, v359));
          if (!v361)
          {
            ((void (*)(std::__shared_weak_count *))v358->__on_zero_shared)(v358);
            std::__shared_weak_count::__release_weak(v358);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v353 + 96))(&v1130, v353, 1);
      else
LABEL_1554:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1928;
      if (!v1121)
        goto LABEL_1928;
      v917 = v1122;
      if (!v1122)
        goto LABEL_1928;
      v918 = v1126;
      v919 = v1119;
      if (v1128 && v1119)
      {
        v920 = v1117;
        v921 = v1118;
        if (v1118)
        {
          v922 = (unint64_t *)&v1118->__shared_owners_;
          do
            v923 = __ldxr(v922);
          while (__stxr(v923 + 1, v922));
          do
            v924 = __ldaxr(v922);
          while (__stlxr(v924 - 1, v922));
          if (!v924)
          {
            ((void (*)(std::__shared_weak_count *))v921->__on_zero_shared)(v921);
            std::__shared_weak_count::__release_weak(v921);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v920 + 88))(v920, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v919 = v1119;
      }
      v1110 = (3 * v352);
      if (v917 == 1)
      {
        v1091 = v352;
LABEL_1921:
        if (v1091 && !v919)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2004;
          }
          v919 = 0;
        }
        if (v1091)
        {
          v1071 = *(_QWORD *)(v351 + 48);
          v1072 = 2 * v1110;
          do
          {
            sub_20B5186C0(v1071, v919++);
            v1072 -= 2;
          }
          while (v1072);
        }
      }
      else if (v352)
      {
        v1091 = v352;
        v925 = 0;
        v926 = 2 * v918;
        while (v919
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v927 = 0;
          v928 = *(_QWORD *)(v351 + 48);
          do
            sub_20B5186C0(v928, &v919[v927++]);
          while (v1110 != v927);
          v919 = (_WORD *)((char *)v919 + v926);
          if (++v925 == v917 - 1)
            goto LABEL_1921;
        }
LABEL_2004:
        abort();
      }
LABEL_1928:
      v1073 = v1130;
      v1130 = 0;
      if (v1073)
        (*(void (**)(uint64_t))(*(_QWORD *)v1073 + 8))(v1073);
      v473 = v1118;
      if (!v1118)
        return;
      v1074 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1074);
      while (__stlxr(v475 - 1, v1074));
      goto LABEL_1975;
    case 11:
      v1116 = &off_24C4191D0;
      sub_20B2EFC08((std::string::size_type *)&v1117, a3);
      v341 = *a2;
      v1098 = v1127;
      v342 = v1117;
      if (!v1117)
        goto LABEL_1529;
      v343 = v1118;
      if (v1118)
      {
        v344 = (unint64_t *)&v1118->__shared_owners_;
        do
          v345 = __ldxr(v344);
        while (__stxr(v345 + 1, v344));
        do
          v346 = __ldaxr(v344);
        while (__stlxr(v346 - 1, v344));
        if (!v346)
        {
          ((void (*)(std::__shared_weak_count *))v343->__on_zero_shared)(v343);
          std::__shared_weak_count::__release_weak(v343);
        }
        v342 = v1117;
        v347 = v1118;
        if (v1118)
        {
          v348 = (unint64_t *)&v1118->__shared_owners_;
          do
            v349 = __ldxr(v348);
          while (__stxr(v349 + 1, v348));
          do
            v350 = __ldaxr(v348);
          while (__stlxr(v350 - 1, v348));
          if (!v350)
          {
            ((void (*)(std::__shared_weak_count *))v347->__on_zero_shared)(v347);
            std::__shared_weak_count::__release_weak(v347);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v342 + 96))(&v1130, v342, 1);
      else
LABEL_1529:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1826;
      if (!v1121)
        goto LABEL_1826;
      v907 = v1122;
      if (!v1122)
        goto LABEL_1826;
      v908 = v1126;
      v909 = v1119;
      if (v1128 && v1119)
      {
        v910 = v1117;
        v911 = v1118;
        if (v1118)
        {
          v912 = (unint64_t *)&v1118->__shared_owners_;
          do
            v913 = __ldxr(v912);
          while (__stxr(v913 + 1, v912));
          do
            v914 = __ldaxr(v912);
          while (__stlxr(v914 - 1, v912));
          if (!v914)
          {
            ((void (*)(std::__shared_weak_count *))v911->__on_zero_shared)(v911);
            std::__shared_weak_count::__release_weak(v911);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v910 + 88))(v910, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v909 = v1119;
      }
      v1090 = (3 * v1098);
      if (v907 == 1)
        goto LABEL_1550;
      if (!v1098)
        goto LABEL_1826;
      v915 = 0;
      do
      {
        if (!v909
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1553;
        }
        v916 = 0;
        do
        {
          v1115 = 0;
          sub_20B5186C0(*(_QWORD *)(v341 + 48), &v1115);
          v909[v916++] = v1115;
        }
        while (v1090 != v916);
        v909 += v908;
        ++v915;
      }
      while (v915 != v907 - 1);
LABEL_1550:
      if (!v1098 || v909)
      {
        if (!v1098)
          goto LABEL_1826;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1553:
        abort();
      }
      v1043 = 2 * v1090;
      do
      {
        v1115 = 0;
        sub_20B5186C0(*(_QWORD *)(v341 + 48), &v1115);
        *v909++ = v1115;
        v1043 -= 2;
      }
      while (v1043);
LABEL_1826:
      v1044 = v1130;
      v1130 = 0;
      if (v1044)
        (*(void (**)(uint64_t))(*(_QWORD *)v1044 + 8))(v1044);
      v473 = v1118;
      if (!v1118)
        return;
      v1045 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1045);
      while (__stlxr(v475 - 1, v1045));
      goto LABEL_1975;
    case 12:
      v1116 = &off_24C4192C8;
      sub_20B2F0378((std::string::size_type *)&v1117, a3);
      v47 = *a2;
      v48 = v1127;
      v49 = v1117;
      if (!v1117)
        goto LABEL_686;
      v50 = v1118;
      if (v1118)
      {
        v51 = (unint64_t *)&v1118->__shared_owners_;
        do
          v52 = __ldxr(v51);
        while (__stxr(v52 + 1, v51));
        do
          v53 = __ldaxr(v51);
        while (__stlxr(v53 - 1, v51));
        if (!v53)
        {
          ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
          std::__shared_weak_count::__release_weak(v50);
        }
        v49 = v1117;
        v54 = v1118;
        if (v1118)
        {
          v55 = (unint64_t *)&v1118->__shared_owners_;
          do
            v56 = __ldxr(v55);
          while (__stxr(v56 + 1, v55));
          do
            v57 = __ldaxr(v55);
          while (__stlxr(v57 - 1, v55));
          if (!v57)
          {
            ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
            std::__shared_weak_count::__release_weak(v54);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v49 + 96))(&v1130, v49, 1);
      else
LABEL_686:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1858;
      if (!v1121)
        goto LABEL_1858;
      v476 = v1122;
      if (!v1122)
        goto LABEL_1858;
      v477 = v1126;
      v478 = (float *)v1119;
      if (v1128 && v1119)
      {
        v479 = v1117;
        v480 = v1118;
        if (v1118)
        {
          v481 = (unint64_t *)&v1118->__shared_owners_;
          do
            v482 = __ldxr(v481);
          while (__stxr(v482 + 1, v481));
          do
            v483 = __ldaxr(v481);
          while (__stlxr(v483 - 1, v481));
          if (!v483)
          {
            ((void (*)(std::__shared_weak_count *))v480->__on_zero_shared)(v480);
            std::__shared_weak_count::__release_weak(v480);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v479 + 88))(v479, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v478 = (float *)v1119;
      }
      v1101 = (3 * v48);
      if (v476 == 1)
      {
        v1086 = v48;
LABEL_1851:
        if (v1086 && !v478)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_1985;
          }
          v478 = 0;
        }
        if (v1086)
        {
          v1052 = *(_QWORD *)(v47 + 48);
          v1053 = 4 * v1101;
          do
          {
            sub_20B518CC0(v1052, v478++);
            v1053 -= 4;
          }
          while (v1053);
        }
      }
      else if (v48)
      {
        v1086 = v48;
        v484 = 0;
        v485 = 4 * v477;
        while (v478
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v486 = 0;
          v487 = *(_QWORD *)(v47 + 48);
          do
            sub_20B518CC0(v487, &v478[v486++]);
          while (v1101 != v486);
          v478 = (float *)((char *)v478 + v485);
          if (++v484 == v476 - 1)
            goto LABEL_1851;
        }
LABEL_1985:
        abort();
      }
LABEL_1858:
      v1054 = v1130;
      v1130 = 0;
      if (v1054)
        (*(void (**)(uint64_t))(*(_QWORD *)v1054 + 8))(v1054);
      v473 = v1118;
      if (!v1118)
        return;
      v1055 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1055);
      while (__stlxr(v475 - 1, v1055));
      goto LABEL_1975;
    case 13:
      v1116 = &off_24C4193C0;
      sub_20B2F0AE8((std::string::size_type *)&v1117, a3);
      v91 = *a2;
      v92 = v1127;
      v93 = v1117;
      if (!v1117)
        goto LABEL_798;
      v94 = v1118;
      if (v1118)
      {
        v95 = (unint64_t *)&v1118->__shared_owners_;
        do
          v96 = __ldxr(v95);
        while (__stxr(v96 + 1, v95));
        do
          v97 = __ldaxr(v95);
        while (__stlxr(v97 - 1, v95));
        if (!v97)
        {
          ((void (*)(std::__shared_weak_count *))v94->__on_zero_shared)(v94);
          std::__shared_weak_count::__release_weak(v94);
        }
        v93 = v1117;
        v98 = v1118;
        if (v1118)
        {
          v99 = (unint64_t *)&v1118->__shared_owners_;
          do
            v100 = __ldxr(v99);
          while (__stxr(v100 + 1, v99));
          do
            v101 = __ldaxr(v99);
          while (__stlxr(v101 - 1, v99));
          if (!v101)
          {
            ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
            std::__shared_weak_count::__release_weak(v98);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v93 + 96))(&v1130, v93, 1);
      else
LABEL_798:
        v1130 = 0;
      if (!v1120)
        goto LABEL_826;
      if (!v1121)
        goto LABEL_826;
      v534 = v1122;
      if (!v1122)
        goto LABEL_826;
      v535 = v1126;
      v536 = v1119;
      if (v1128 && v1119)
      {
        v537 = v1117;
        v538 = v1118;
        if (v1118)
        {
          v539 = (unint64_t *)&v1118->__shared_owners_;
          do
            v540 = __ldxr(v539);
          while (__stxr(v540 + 1, v539));
          do
            v541 = __ldaxr(v539);
          while (__stlxr(v541 - 1, v539));
          if (!v541)
          {
            ((void (*)(std::__shared_weak_count *))v538->__on_zero_shared)(v538);
            std::__shared_weak_count::__release_weak(v538);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v537 + 88))(v537, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v536 = v1119;
      }
      v542 = (4 * v92);
      if (v534 == 1)
        goto LABEL_819;
      if (!(_DWORD)v542)
        goto LABEL_826;
      v543 = 0;
      do
      {
        if (!v536
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1981;
        }
        v544 = 0;
        v545 = *(_QWORD *)(v91 + 48);
        do
          sub_20B51852C(v545, &v536[v544++]);
        while (v542 != v544);
        v536 += v535;
        ++v543;
      }
      while (v543 != v534 - 1);
LABEL_819:
      if ((_DWORD)v542 && !v536)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_1981:
          abort();
        }
        v536 = 0;
      }
      if ((_DWORD)v542)
      {
        v546 = *(_QWORD *)(v91 + 48);
        do
        {
          sub_20B51852C(v546, v536++);
          --v542;
        }
        while (v542);
      }
LABEL_826:
      v547 = v1130;
      v1130 = 0;
      if (v547)
        (*(void (**)(uint64_t))(*(_QWORD *)v547 + 8))(v547);
      v473 = v1118;
      if (!v1118)
        return;
      v548 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v548);
      while (__stlxr(v475 - 1, v548));
      goto LABEL_1975;
    case 14:
      v1116 = &off_24C4194B8;
      sub_20B2F1254((std::string::size_type *)&v1117, a3);
      v80 = *a2;
      v81 = v1127;
      v82 = v1117;
      if (!v1117)
        goto LABEL_764;
      v83 = v1118;
      if (v1118)
      {
        v84 = (unint64_t *)&v1118->__shared_owners_;
        do
          v85 = __ldxr(v84);
        while (__stxr(v85 + 1, v84));
        do
          v86 = __ldaxr(v84);
        while (__stlxr(v86 - 1, v84));
        if (!v86)
        {
          ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
          std::__shared_weak_count::__release_weak(v83);
        }
        v82 = v1117;
        v87 = v1118;
        if (v1118)
        {
          v88 = (unint64_t *)&v1118->__shared_owners_;
          do
            v89 = __ldxr(v88);
          while (__stxr(v89 + 1, v88));
          do
            v90 = __ldaxr(v88);
          while (__stlxr(v90 - 1, v88));
          if (!v90)
          {
            ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
            std::__shared_weak_count::__release_weak(v87);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v82 + 96))(&v1130, v82, 1);
      else
LABEL_764:
        v1130 = 0;
      if (!v1120)
        goto LABEL_792;
      if (!v1121)
        goto LABEL_792;
      v515 = v1122;
      if (!v1122)
        goto LABEL_792;
      v516 = v1126;
      v517 = v1119;
      if (v1128 && v1119)
      {
        v518 = v1117;
        v519 = v1118;
        if (v1118)
        {
          v520 = (unint64_t *)&v1118->__shared_owners_;
          do
            v521 = __ldxr(v520);
          while (__stxr(v521 + 1, v520));
          do
            v522 = __ldaxr(v520);
          while (__stlxr(v522 - 1, v520));
          if (!v522)
          {
            ((void (*)(std::__shared_weak_count *))v519->__on_zero_shared)(v519);
            std::__shared_weak_count::__release_weak(v519);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v518 + 88))(v518, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v517 = v1119;
      }
      v523 = (4 * v81);
      if (v515 == 1)
        goto LABEL_785;
      if (!(_DWORD)v523)
        goto LABEL_792;
      v524 = 0;
      v525 = 2 * v516;
      v526 = 2 * v523;
      do
      {
        if (!v517
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1980;
        }
        v527 = v523;
        v528 = 0;
        v529 = *(_QWORD *)(v80 + 48);
        do
        {
          sub_20B5186C0(v529, &v517[v528 / 2]);
          v528 += 2;
        }
        while (v526 != v528);
        v517 = (_WORD *)((char *)v517 + v525);
        ++v524;
        v523 = v527;
      }
      while (v524 != v515 - 1);
LABEL_785:
      if ((_DWORD)v523 && !v517)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_1980:
          abort();
        }
        v517 = 0;
      }
      if ((_DWORD)v523)
      {
        v530 = *(_QWORD *)(v80 + 48);
        v531 = 2 * v523;
        do
        {
          sub_20B5186C0(v530, v517++);
          v531 -= 2;
        }
        while (v531);
      }
LABEL_792:
      v532 = v1130;
      v1130 = 0;
      if (v532)
        (*(void (**)(uint64_t))(*(_QWORD *)v532 + 8))(v532);
      v473 = v1118;
      if (!v1118)
        return;
      v533 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v533);
      while (__stlxr(v475 - 1, v533));
      goto LABEL_1975;
    case 15:
      v1116 = &off_24C4195B0;
      sub_20B2F19C4((std::string::size_type *)&v1117, a3);
      v395 = *a2;
      v396 = v1127;
      v397 = v1117;
      if (!v1117)
        goto LABEL_1666;
      v398 = v1118;
      if (v1118)
      {
        v399 = (unint64_t *)&v1118->__shared_owners_;
        do
          v400 = __ldxr(v399);
        while (__stxr(v400 + 1, v399));
        do
          v401 = __ldaxr(v399);
        while (__stlxr(v401 - 1, v399));
        if (!v401)
        {
          ((void (*)(std::__shared_weak_count *))v398->__on_zero_shared)(v398);
          std::__shared_weak_count::__release_weak(v398);
        }
        v397 = v1117;
        v402 = v1118;
        if (v1118)
        {
          v403 = (unint64_t *)&v1118->__shared_owners_;
          do
            v404 = __ldxr(v403);
          while (__stxr(v404 + 1, v403));
          do
            v405 = __ldaxr(v403);
          while (__stlxr(v405 - 1, v403));
          if (!v405)
          {
            ((void (*)(std::__shared_weak_count *))v402->__on_zero_shared)(v402);
            std::__shared_weak_count::__release_weak(v402);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v397 + 96))(&v1130, v397, 1);
      else
LABEL_1666:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1835;
      if (!v1121)
        goto LABEL_1835;
      v975 = v1122;
      if (!v1122)
        goto LABEL_1835;
      v976 = v1126;
      v977 = v1119;
      if (v1128 && v1119)
      {
        v978 = v1117;
        v979 = v1118;
        if (v1118)
        {
          v980 = (unint64_t *)&v1118->__shared_owners_;
          do
            v981 = __ldxr(v980);
          while (__stxr(v981 + 1, v980));
          do
            v982 = __ldaxr(v980);
          while (__stlxr(v982 - 1, v980));
          if (!v982)
          {
            ((void (*)(std::__shared_weak_count *))v979->__on_zero_shared)(v979);
            std::__shared_weak_count::__release_weak(v979);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v978 + 88))(v978, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v977 = v1119;
      }
      v983 = v975 - 1;
      v1112 = (4 * v396);
      if (!v983)
        goto LABEL_1687;
      if (!(4 * v396))
        goto LABEL_1835;
      for (k = 0; k != v983; ++k)
      {
        if (!v977
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1690;
        }
        v985 = 0;
        do
        {
          v1115 = 0;
          sub_20B5186C0(*(_QWORD *)(v395 + 48), &v1115);
          v977[v985++] = v1115;
        }
        while (v1112 != v985);
        v977 += v976;
      }
LABEL_1687:
      if (!(_DWORD)v1112 || v977)
      {
        if (!(_DWORD)v1112)
          goto LABEL_1835;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1690:
        abort();
      }
      v1046 = 2 * v1112;
      do
      {
        v1115 = 0;
        sub_20B5186C0(*(_QWORD *)(v395 + 48), &v1115);
        *v977++ = v1115;
        v1046 -= 2;
      }
      while (v1046);
LABEL_1835:
      v1047 = v1130;
      v1130 = 0;
      if (v1047)
        (*(void (**)(uint64_t))(*(_QWORD *)v1047 + 8))(v1047);
      v473 = v1118;
      if (!v1118)
        return;
      v1048 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1048);
      while (__stlxr(v475 - 1, v1048));
      goto LABEL_1975;
    case 16:
      v1116 = &off_24C4196A8;
      sub_20B2F2134((std::string::size_type *)&v1117, a3);
      v288 = *a2;
      v289 = v1127;
      v290 = v1117;
      if (!v1117)
        goto LABEL_1337;
      v291 = v1118;
      if (v1118)
      {
        v292 = (unint64_t *)&v1118->__shared_owners_;
        do
          v293 = __ldxr(v292);
        while (__stxr(v293 + 1, v292));
        do
          v294 = __ldaxr(v292);
        while (__stlxr(v294 - 1, v292));
        if (!v294)
        {
          ((void (*)(std::__shared_weak_count *))v291->__on_zero_shared)(v291);
          std::__shared_weak_count::__release_weak(v291);
        }
        v290 = v1117;
        v295 = v1118;
        if (v1118)
        {
          v296 = (unint64_t *)&v1118->__shared_owners_;
          do
            v297 = __ldxr(v296);
          while (__stxr(v297 + 1, v296));
          do
            v298 = __ldaxr(v296);
          while (__stlxr(v298 - 1, v296));
          if (!v298)
          {
            ((void (*)(std::__shared_weak_count *))v295->__on_zero_shared)(v295);
            std::__shared_weak_count::__release_weak(v295);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v290 + 96))(&v1130, v290, 1);
      else
LABEL_1337:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1365;
      if (!v1121)
        goto LABEL_1365;
      v813 = v1122;
      if (!v1122)
        goto LABEL_1365;
      v814 = v1126;
      v815 = (float *)v1119;
      if (v1128 && v1119)
      {
        v816 = v1117;
        v817 = v1118;
        if (v1118)
        {
          v818 = (unint64_t *)&v1118->__shared_owners_;
          do
            v819 = __ldxr(v818);
          while (__stxr(v819 + 1, v818));
          do
            v820 = __ldaxr(v818);
          while (__stlxr(v820 - 1, v818));
          if (!v820)
          {
            ((void (*)(std::__shared_weak_count *))v817->__on_zero_shared)(v817);
            std::__shared_weak_count::__release_weak(v817);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v816 + 88))(v816, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v815 = (float *)v1119;
      }
      v821 = (4 * v289);
      if (v813 == 1)
        goto LABEL_1358;
      if (!(_DWORD)v821)
        goto LABEL_1365;
      v822 = 0;
      v823 = 4 * v814;
      v824 = 4 * v821;
      do
      {
        if (!v815
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1996;
        }
        v825 = v821;
        v826 = 0;
        v827 = *(_QWORD *)(v288 + 48);
        do
        {
          sub_20B518CC0(v827, &v815[v826 / 4]);
          v826 += 4;
        }
        while (v824 != v826);
        v815 = (float *)((char *)v815 + v823);
        ++v822;
        v821 = v825;
      }
      while (v822 != v813 - 1);
LABEL_1358:
      if ((_DWORD)v821 && !v815)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_1996:
          abort();
        }
        v815 = 0;
      }
      if ((_DWORD)v821)
      {
        v828 = *(_QWORD *)(v288 + 48);
        v829 = 4 * v821;
        do
        {
          sub_20B518CC0(v828, v815++);
          v829 -= 4;
        }
        while (v829);
      }
LABEL_1365:
      v830 = v1130;
      v1130 = 0;
      if (v830)
        (*(void (**)(uint64_t))(*(_QWORD *)v830 + 8))(v830);
      v473 = v1118;
      if (!v1118)
        return;
      v831 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v831);
      while (__stlxr(v475 - 1, v831));
      goto LABEL_1975;
    case 17:
      v1116 = &off_24C418178;
      sub_20B2F283C((std::string::size_type *)&v1117, a3);
      v406 = *a2;
      v407 = v1127;
      v408 = v1117;
      if (!v1117)
        goto LABEL_1691;
      v409 = v1118;
      if (v1118)
      {
        v410 = (unint64_t *)&v1118->__shared_owners_;
        do
          v411 = __ldxr(v410);
        while (__stxr(v411 + 1, v410));
        do
          v412 = __ldaxr(v410);
        while (__stlxr(v412 - 1, v410));
        if (!v412)
        {
          ((void (*)(std::__shared_weak_count *))v409->__on_zero_shared)(v409);
          std::__shared_weak_count::__release_weak(v409);
        }
        v408 = v1117;
        v413 = v1118;
        if (v1118)
        {
          v414 = (unint64_t *)&v1118->__shared_owners_;
          do
            v415 = __ldxr(v414);
          while (__stxr(v415 + 1, v414));
          do
            v416 = __ldaxr(v414);
          while (__stlxr(v416 - 1, v414));
          if (!v416)
          {
            ((void (*)(std::__shared_weak_count *))v413->__on_zero_shared)(v413);
            std::__shared_weak_count::__release_weak(v413);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v408 + 96))(&v1130, v408, 1);
      else
LABEL_1691:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1956;
      if (!v1121)
        goto LABEL_1956;
      v986 = v1122;
      if (!v1122)
        goto LABEL_1956;
      v987 = v1126;
      v988 = v1119;
      if (v1128 && v1119)
      {
        v989 = v1117;
        v990 = v1118;
        if (v1118)
        {
          v991 = (unint64_t *)&v1118->__shared_owners_;
          do
            v992 = __ldxr(v991);
          while (__stxr(v992 + 1, v991));
          do
            v993 = __ldaxr(v991);
          while (__stlxr(v993 - 1, v991));
          if (!v993)
          {
            ((void (*)(std::__shared_weak_count *))v990->__on_zero_shared)(v990);
            std::__shared_weak_count::__release_weak(v990);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v989 + 88))(v989, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v988 = v1119;
      }
      v994 = (3 * v407);
      v995 = v986 - 1;
      if (v986 == 1)
      {
        v1113 = v407;
LABEL_1949:
        if (v1113 && !v988)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2006;
          }
          v988 = 0;
        }
        if (v1113)
        {
          v1079 = *(_QWORD *)(v406 + 48);
          do
          {
            sub_20B51852C(v1079, v988++);
            --v994;
          }
          while (v994);
        }
      }
      else if (v407)
      {
        v1113 = v407;
        v996 = 0;
        while (v988
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v997 = 0;
          v998 = *(_QWORD *)(v406 + 48);
          do
            sub_20B51852C(v998, &v988[v997++]);
          while (v994 != v997);
          v988 += v987;
          if (++v996 == v995)
            goto LABEL_1949;
        }
LABEL_2006:
        abort();
      }
LABEL_1956:
      v1080 = v1130;
      v1130 = 0;
      if (v1080)
        (*(void (**)(uint64_t))(*(_QWORD *)v1080 + 8))(v1080);
      v473 = v1118;
      if (!v1118)
        return;
      v1081 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1081);
      while (__stlxr(v475 - 1, v1081));
      goto LABEL_1975;
    case 18:
      v1116 = &off_24C4197A0;
      sub_20B2F2E98((std::string::size_type *)&v1117, a3);
      v113 = *a2;
      v114 = v1127;
      v115 = v1117;
      if (!v1117)
        goto LABEL_866;
      v116 = v1118;
      if (v1118)
      {
        v117 = (unint64_t *)&v1118->__shared_owners_;
        do
          v118 = __ldxr(v117);
        while (__stxr(v118 + 1, v117));
        do
          v119 = __ldaxr(v117);
        while (__stlxr(v119 - 1, v117));
        if (!v119)
        {
          ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
          std::__shared_weak_count::__release_weak(v116);
        }
        v115 = v1117;
        v120 = v1118;
        if (v1118)
        {
          v121 = (unint64_t *)&v1118->__shared_owners_;
          do
            v122 = __ldxr(v121);
          while (__stxr(v122 + 1, v121));
          do
            v123 = __ldaxr(v121);
          while (__stlxr(v123 - 1, v121));
          if (!v123)
          {
            ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
            std::__shared_weak_count::__release_weak(v120);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v115 + 96))(&v1130, v115, 1);
      else
LABEL_866:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1886;
      if (!v1121)
        goto LABEL_1886;
      v568 = v1122;
      if (!v1122)
        goto LABEL_1886;
      v569 = v1126;
      v570 = v1119;
      if (v1128 && v1119)
      {
        v571 = v1117;
        v572 = v1118;
        if (v1118)
        {
          v573 = (unint64_t *)&v1118->__shared_owners_;
          do
            v574 = __ldxr(v573);
          while (__stxr(v574 + 1, v573));
          do
            v575 = __ldaxr(v573);
          while (__stlxr(v575 - 1, v573));
          if (!v575)
          {
            ((void (*)(std::__shared_weak_count *))v572->__on_zero_shared)(v572);
            std::__shared_weak_count::__release_weak(v572);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v571 + 88))(v571, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v570 = v1119;
      }
      v1103 = (3 * v114);
      if (v568 == 1)
      {
        v1088 = v114;
LABEL_1879:
        if (v1088 && !v570)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_1987;
          }
          v570 = 0;
        }
        if (v1088)
        {
          v1060 = *(_QWORD *)(v113 + 48);
          v1061 = 2 * v1103;
          do
          {
            sub_20B5186C0(v1060, v570++);
            v1061 -= 2;
          }
          while (v1061);
        }
      }
      else if (v114)
      {
        v1088 = v114;
        v576 = 0;
        v577 = 2 * v569;
        while (v570
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v578 = 0;
          v579 = *(_QWORD *)(v113 + 48);
          do
            sub_20B5186C0(v579, &v570[v578++]);
          while (v1103 != v578);
          v570 = (_WORD *)((char *)v570 + v577);
          if (++v576 == v568 - 1)
            goto LABEL_1879;
        }
LABEL_1987:
        abort();
      }
LABEL_1886:
      v1062 = v1130;
      v1130 = 0;
      if (v1062)
        (*(void (**)(uint64_t))(*(_QWORD *)v1062 + 8))(v1062);
      v473 = v1118;
      if (!v1118)
        return;
      v1063 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1063);
      while (__stlxr(v475 - 1, v1063));
      goto LABEL_1975;
    case 19:
      v1116 = &off_24C419898;
      sub_20B2F3608((std::string::size_type *)&v1117, a3);
      v26 = *a2;
      v1094 = v1127;
      v27 = v1117;
      if (!v1117)
        goto LABEL_627;
      v28 = v1118;
      if (v1118)
      {
        v29 = (unint64_t *)&v1118->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
        v27 = v1117;
        v32 = v1118;
        if (v1118)
        {
          v33 = (unint64_t *)&v1118->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v27 + 96))(&v1130, v27, 1);
      else
LABEL_627:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1772;
      if (!v1121)
        goto LABEL_1772;
      v449 = v1122;
      if (!v1122)
        goto LABEL_1772;
      v450 = v1126;
      v451 = v1119;
      if (v1128 && v1119)
      {
        v452 = v1117;
        v453 = v1118;
        if (v1118)
        {
          v454 = (unint64_t *)&v1118->__shared_owners_;
          do
            v455 = __ldxr(v454);
          while (__stxr(v455 + 1, v454));
          do
            v456 = __ldaxr(v454);
          while (__stlxr(v456 - 1, v454));
          if (!v456)
          {
            ((void (*)(std::__shared_weak_count *))v453->__on_zero_shared)(v453);
            std::__shared_weak_count::__release_weak(v453);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v452 + 88))(v452, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v451 = v1119;
      }
      v1085 = (3 * v1094);
      if (v449 == 1)
        goto LABEL_648;
      if (!v1094)
        goto LABEL_1772;
      v457 = 0;
      do
      {
        if (!v451
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_651;
        }
        v458 = 0;
        do
        {
          v1115 = 0;
          sub_20B5186C0(*(_QWORD *)(v26 + 48), &v1115);
          v451[v458++] = v1115;
        }
        while (v1085 != v458);
        v451 += v450;
        ++v457;
      }
      while (v457 != v449 - 1);
LABEL_648:
      if (!v1094 || v451)
      {
        if (!v1094)
          goto LABEL_1772;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_651:
        abort();
      }
      v1025 = 2 * v1085;
      do
      {
        v1115 = 0;
        sub_20B5186C0(*(_QWORD *)(v26 + 48), &v1115);
        *v451++ = v1115;
        v1025 -= 2;
      }
      while (v1025);
LABEL_1772:
      v1026 = v1130;
      v1130 = 0;
      if (v1026)
        (*(void (**)(uint64_t))(*(_QWORD *)v1026 + 8))(v1026);
      v473 = v1118;
      if (!v1118)
        return;
      v1027 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1027);
      while (__stlxr(v475 - 1, v1027));
      goto LABEL_1975;
    case 20:
      v1116 = &off_24C419990;
      sub_20B2F3D78((std::string::size_type *)&v1117, a3);
      v373 = *a2;
      v374 = v1127;
      v375 = v1117;
      if (!v1117)
        goto LABEL_1610;
      v376 = v1118;
      if (v1118)
      {
        v377 = (unint64_t *)&v1118->__shared_owners_;
        do
          v378 = __ldxr(v377);
        while (__stxr(v378 + 1, v377));
        do
          v379 = __ldaxr(v377);
        while (__stlxr(v379 - 1, v377));
        if (!v379)
        {
          ((void (*)(std::__shared_weak_count *))v376->__on_zero_shared)(v376);
          std::__shared_weak_count::__release_weak(v376);
        }
        v375 = v1117;
        v380 = v1118;
        if (v1118)
        {
          v381 = (unint64_t *)&v1118->__shared_owners_;
          do
            v382 = __ldxr(v381);
          while (__stxr(v382 + 1, v381));
          do
            v383 = __ldaxr(v381);
          while (__stlxr(v383 - 1, v381));
          if (!v383)
          {
            ((void (*)(std::__shared_weak_count *))v380->__on_zero_shared)(v380);
            std::__shared_weak_count::__release_weak(v380);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v375 + 96))(&v1130, v375, 1);
      else
LABEL_1610:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1942;
      if (!v1121)
        goto LABEL_1942;
      v944 = v1122;
      if (!v1122)
        goto LABEL_1942;
      v945 = v1126;
      v946 = (float *)v1119;
      if (v1128 && v1119)
      {
        v947 = v1117;
        v948 = v1118;
        if (v1118)
        {
          v949 = (unint64_t *)&v1118->__shared_owners_;
          do
            v950 = __ldxr(v949);
          while (__stxr(v950 + 1, v949));
          do
            v951 = __ldaxr(v949);
          while (__stlxr(v951 - 1, v949));
          if (!v951)
          {
            ((void (*)(std::__shared_weak_count *))v948->__on_zero_shared)(v948);
            std::__shared_weak_count::__release_weak(v948);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v947 + 88))(v947, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v946 = (float *)v1119;
      }
      v1111 = (3 * v374);
      if (v944 == 1)
      {
        v1092 = v374;
LABEL_1935:
        if (v1092 && !v946)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2005;
          }
          v946 = 0;
        }
        if (v1092)
        {
          v1075 = *(_QWORD *)(v373 + 48);
          v1076 = 4 * v1111;
          do
          {
            sub_20B518CC0(v1075, v946++);
            v1076 -= 4;
          }
          while (v1076);
        }
      }
      else if (v374)
      {
        v1092 = v374;
        v952 = 0;
        v953 = 4 * v945;
        while (v946
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v954 = 0;
          v955 = *(_QWORD *)(v373 + 48);
          do
            sub_20B518CC0(v955, &v946[v954++]);
          while (v1111 != v954);
          v946 = (float *)((char *)v946 + v953);
          if (++v952 == v944 - 1)
            goto LABEL_1935;
        }
LABEL_2005:
        abort();
      }
LABEL_1942:
      v1077 = v1130;
      v1130 = 0;
      if (v1077)
        (*(void (**)(uint64_t))(*(_QWORD *)v1077 + 8))(v1077);
      v473 = v1118;
      if (!v1118)
        return;
      v1078 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1078);
      while (__stlxr(v475 - 1, v1078));
      goto LABEL_1975;
    case 21:
      v1116 = &off_24C416218;
      sub_20B2F4480(&v1117, a3);
      v427 = *a2;
      v428 = v1127;
      v429 = v1117;
      if (!v1117)
        goto LABEL_1738;
      v430 = v1118;
      if (v1118)
      {
        v431 = (unint64_t *)&v1118->__shared_owners_;
        do
          v432 = __ldxr(v431);
        while (__stxr(v432 + 1, v431));
        do
          v433 = __ldaxr(v431);
        while (__stlxr(v433 - 1, v431));
        if (!v433)
        {
          ((void (*)(std::__shared_weak_count *))v430->__on_zero_shared)(v430);
          std::__shared_weak_count::__release_weak(v430);
        }
        v429 = v1117;
        v434 = v1118;
        if (v1118)
        {
          v435 = (unint64_t *)&v1118->__shared_owners_;
          do
            v436 = __ldxr(v435);
          while (__stxr(v436 + 1, v435));
          do
            v437 = __ldaxr(v435);
          while (__stlxr(v437 - 1, v435));
          if (!v437)
          {
            ((void (*)(std::__shared_weak_count *))v434->__on_zero_shared)(v434);
            std::__shared_weak_count::__release_weak(v434);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v429 + 96))(&v1130, v429, 1);
      else
LABEL_1738:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1970;
      if (!v1121)
        goto LABEL_1970;
      v1009 = v1122;
      if (!v1122)
        goto LABEL_1970;
      v1010 = v1126;
      v1011 = v1119;
      if (v1128 && v1119)
      {
        v1012 = v1117;
        v1013 = v1118;
        if (v1118)
        {
          v1014 = (unint64_t *)&v1118->__shared_owners_;
          do
            v1015 = __ldxr(v1014);
          while (__stxr(v1015 + 1, v1014));
          do
            v1016 = __ldaxr(v1014);
          while (__stlxr(v1016 - 1, v1014));
          if (!v1016)
          {
            ((void (*)(std::__shared_weak_count *))v1013->__on_zero_shared)(v1013);
            std::__shared_weak_count::__release_weak(v1013);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v1012 + 88))(v1012, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v1011 = v1119;
      }
      v1017 = (3 * v428);
      v1018 = v1009 - 1;
      if (v1009 == 1)
      {
        v1114 = v428;
LABEL_1963:
        if (v1114 && !v1011)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2007;
          }
          v1011 = 0;
        }
        if (v1114)
        {
          v1082 = *(_QWORD *)(v427 + 48);
          do
          {
            sub_20B51852C(v1082, v1011++);
            --v1017;
          }
          while (v1017);
        }
      }
      else if (v428)
      {
        v1114 = v428;
        v1019 = 0;
        while (v1011
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1020 = 0;
          v1021 = *(_QWORD *)(v427 + 48);
          do
            sub_20B51852C(v1021, &v1011[v1020++]);
          while (v1017 != v1020);
          v1011 += v1010;
          if (++v1019 == v1018)
            goto LABEL_1963;
        }
LABEL_2007:
        abort();
      }
LABEL_1970:
      v1083 = v1130;
      v1130 = 0;
      if (v1083)
        (*(void (**)(uint64_t))(*(_QWORD *)v1083 + 8))(v1083);
      v473 = v1118;
      if (!v1118)
        return;
      v1084 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1084);
      while (__stlxr(v475 - 1, v1084));
      goto LABEL_1975;
    case 22:
      v1116 = &off_24C416310;
      sub_20B2F4808(&v1117, a3);
      v146 = *a2;
      v147 = v1127;
      v148 = v1117;
      if (!v1117)
        goto LABEL_938;
      v149 = v1118;
      if (v1118)
      {
        v150 = (unint64_t *)&v1118->__shared_owners_;
        do
          v151 = __ldxr(v150);
        while (__stxr(v151 + 1, v150));
        do
          v152 = __ldaxr(v150);
        while (__stlxr(v152 - 1, v150));
        if (!v152)
        {
          ((void (*)(std::__shared_weak_count *))v149->__on_zero_shared)(v149);
          std::__shared_weak_count::__release_weak(v149);
        }
        v148 = v1117;
        v153 = v1118;
        if (v1118)
        {
          v154 = (unint64_t *)&v1118->__shared_owners_;
          do
            v155 = __ldxr(v154);
          while (__stxr(v155 + 1, v154));
          do
            v156 = __ldaxr(v154);
          while (__stlxr(v156 - 1, v154));
          if (!v156)
          {
            ((void (*)(std::__shared_weak_count *))v153->__on_zero_shared)(v153);
            std::__shared_weak_count::__release_weak(v153);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v148 + 96))(&v1130, v148, 1);
      else
LABEL_938:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1900;
      if (!v1121)
        goto LABEL_1900;
      v602 = v1122;
      if (!v1122)
        goto LABEL_1900;
      v603 = v1126;
      v604 = v1119;
      if (v1128 && v1119)
      {
        v605 = v1117;
        v606 = v1118;
        if (v1118)
        {
          v607 = (unint64_t *)&v1118->__shared_owners_;
          do
            v608 = __ldxr(v607);
          while (__stxr(v608 + 1, v607));
          do
            v609 = __ldaxr(v607);
          while (__stlxr(v609 - 1, v607));
          if (!v609)
          {
            ((void (*)(std::__shared_weak_count *))v606->__on_zero_shared)(v606);
            std::__shared_weak_count::__release_weak(v606);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v605 + 88))(v605, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v604 = v1119;
      }
      v1106 = (3 * v147);
      if (v602 == 1)
      {
        v1089 = v147;
LABEL_1893:
        if (v1089 && !v604)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_1988;
          }
          v604 = 0;
        }
        if (v1089)
        {
          v1064 = *(_QWORD *)(v146 + 48);
          v1065 = 2 * v1106;
          do
          {
            sub_20B5186C0(v1064, v604++);
            v1065 -= 2;
          }
          while (v1065);
        }
      }
      else if (v147)
      {
        v1089 = v147;
        v610 = 0;
        v611 = 2 * v603;
        while (v604
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v612 = 0;
          v613 = *(_QWORD *)(v146 + 48);
          do
            sub_20B5186C0(v613, &v604[v612++]);
          while (v1106 != v612);
          v604 = (_WORD *)((char *)v604 + v611);
          if (++v610 == v602 - 1)
            goto LABEL_1893;
        }
LABEL_1988:
        abort();
      }
LABEL_1900:
      v1066 = v1130;
      v1130 = 0;
      if (v1066)
        (*(void (**)(uint64_t))(*(_QWORD *)v1066 + 8))(v1066);
      v473 = v1118;
      if (!v1118)
        return;
      v1067 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1067);
      while (__stlxr(v475 - 1, v1067));
      goto LABEL_1975;
    case 23:
      v1116 = &off_24C419A88;
      sub_20B2F4EB4(&v1117, a3);
      v417 = *a2;
      v1099 = v1127;
      v418 = v1117;
      if (!v1117)
        goto LABEL_1713;
      v419 = v1118;
      if (v1118)
      {
        v420 = (unint64_t *)&v1118->__shared_owners_;
        do
          v421 = __ldxr(v420);
        while (__stxr(v421 + 1, v420));
        do
          v422 = __ldaxr(v420);
        while (__stlxr(v422 - 1, v420));
        if (!v422)
        {
          ((void (*)(std::__shared_weak_count *))v419->__on_zero_shared)(v419);
          std::__shared_weak_count::__release_weak(v419);
        }
        v418 = v1117;
        v423 = v1118;
        if (v1118)
        {
          v424 = (unint64_t *)&v1118->__shared_owners_;
          do
            v425 = __ldxr(v424);
          while (__stxr(v425 + 1, v424));
          do
            v426 = __ldaxr(v424);
          while (__stlxr(v426 - 1, v424));
          if (!v426)
          {
            ((void (*)(std::__shared_weak_count *))v423->__on_zero_shared)(v423);
            std::__shared_weak_count::__release_weak(v423);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v418 + 96))(&v1130, v418, 1);
      else
LABEL_1713:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1844;
      if (!v1121)
        goto LABEL_1844;
      v999 = v1122;
      if (!v1122)
        goto LABEL_1844;
      v1000 = v1126;
      v1001 = v1119;
      if (v1128 && v1119)
      {
        v1002 = v1117;
        v1003 = v1118;
        if (v1118)
        {
          v1004 = (unint64_t *)&v1118->__shared_owners_;
          do
            v1005 = __ldxr(v1004);
          while (__stxr(v1005 + 1, v1004));
          do
            v1006 = __ldaxr(v1004);
          while (__stlxr(v1006 - 1, v1004));
          if (!v1006)
          {
            ((void (*)(std::__shared_weak_count *))v1003->__on_zero_shared)(v1003);
            std::__shared_weak_count::__release_weak(v1003);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v1002 + 88))(v1002, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v1001 = v1119;
      }
      v1093 = (3 * v1099);
      if (v999 == 1)
        goto LABEL_1734;
      if (!v1099)
        goto LABEL_1844;
      v1007 = 0;
      do
      {
        if (!v1001
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1737;
        }
        v1008 = 0;
        do
        {
          v1115 = 0;
          sub_20B5186C0(*(_QWORD *)(v417 + 48), &v1115);
          v1001[v1008++] = v1115;
        }
        while (v1093 != v1008);
        v1001 += v1000;
        ++v1007;
      }
      while (v1007 != v999 - 1);
LABEL_1734:
      if (!v1099 || v1001)
      {
        if (!v1099)
          goto LABEL_1844;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1737:
        abort();
      }
      v1049 = 2 * v1093;
      do
      {
        v1115 = 0;
        sub_20B5186C0(*(_QWORD *)(v417 + 48), &v1115);
        *v1001++ = v1115;
        v1049 -= 2;
      }
      while (v1049);
LABEL_1844:
      v1050 = v1130;
      v1130 = 0;
      if (v1050)
        (*(void (**)(uint64_t))(*(_QWORD *)v1050 + 8))(v1050);
      v473 = v1118;
      if (!v1118)
        return;
      v1051 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1051);
      while (__stlxr(v475 - 1, v1051));
      goto LABEL_1975;
    case 24:
      v1116 = &off_24C419B80;
      sub_20B2F5674(&v1117, a3);
      v69 = *a2;
      v70 = v1127;
      v71 = v1117;
      if (!v1117)
        goto LABEL_742;
      v72 = v1118;
      if (v1118)
      {
        v73 = (unint64_t *)&v1118->__shared_owners_;
        do
          v74 = __ldxr(v73);
        while (__stxr(v74 + 1, v73));
        do
          v75 = __ldaxr(v73);
        while (__stlxr(v75 - 1, v73));
        if (!v75)
        {
          ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
          std::__shared_weak_count::__release_weak(v72);
        }
        v71 = v1117;
        v76 = v1118;
        if (v1118)
        {
          v77 = (unint64_t *)&v1118->__shared_owners_;
          do
            v78 = __ldxr(v77);
          while (__stxr(v78 + 1, v77));
          do
            v79 = __ldaxr(v77);
          while (__stlxr(v79 - 1, v77));
          if (!v79)
          {
            ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
            std::__shared_weak_count::__release_weak(v76);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v71 + 96))(&v1130, v71, 1);
      else
LABEL_742:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1872;
      if (!v1121)
        goto LABEL_1872;
      v503 = v1122;
      if (!v1122)
        goto LABEL_1872;
      v504 = v1126;
      v505 = (float *)v1119;
      if (v1128 && v1119)
      {
        v506 = v1117;
        v507 = v1118;
        if (v1118)
        {
          v508 = (unint64_t *)&v1118->__shared_owners_;
          do
            v509 = __ldxr(v508);
          while (__stxr(v509 + 1, v508));
          do
            v510 = __ldaxr(v508);
          while (__stlxr(v510 - 1, v508));
          if (!v510)
          {
            ((void (*)(std::__shared_weak_count *))v507->__on_zero_shared)(v507);
            std::__shared_weak_count::__release_weak(v507);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v506 + 88))(v506, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v505 = (float *)v1119;
      }
      v1102 = (3 * v70);
      if (v503 == 1)
      {
        v1087 = v70;
LABEL_1865:
        if (v1087 && !v505)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_1986;
          }
          v505 = 0;
        }
        if (v1087)
        {
          v1056 = *(_QWORD *)(v69 + 48);
          v1057 = 4 * v1102;
          do
          {
            sub_20B518CC0(v1056, v505++);
            v1057 -= 4;
          }
          while (v1057);
        }
      }
      else if (v70)
      {
        v1087 = v70;
        v511 = 0;
        v512 = 4 * v504;
        while (v505
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v513 = 0;
          v514 = *(_QWORD *)(v69 + 48);
          do
            sub_20B518CC0(v514, &v505[v513++]);
          while (v1102 != v513);
          v505 = (float *)((char *)v505 + v512);
          if (++v511 == v503 - 1)
            goto LABEL_1865;
        }
LABEL_1986:
        abort();
      }
LABEL_1872:
      v1058 = v1130;
      v1130 = 0;
      if (v1058)
        (*(void (**)(uint64_t))(*(_QWORD *)v1058 + 8))(v1058);
      v473 = v1118;
      if (v1118)
      {
        v1059 = (unint64_t *)&v1118->__shared_owners_;
        do
          v475 = __ldaxr(v1059);
        while (__stlxr(v475 - 1, v1059));
LABEL_1975:
        if (!v475)
        {
          ((void (*)(std::__shared_weak_count *))v473->__on_zero_shared)(v473);
          std::__shared_weak_count::__release_weak(v473);
        }
      }
      return;
    case 25:
      v1116 = &off_24C416408;
      sub_20B2F5DCC(&v1117, a3);
      v36 = *a2;
      v37 = v1127;
      v38 = v1117;
      if (!v1117)
        goto LABEL_652;
      v39 = v1118;
      if (v1118)
      {
        v40 = (unint64_t *)&v1118->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
        }
        v38 = v1117;
        v43 = v1118;
        if (v1118)
        {
          v44 = (unint64_t *)&v1118->__shared_owners_;
          do
            v45 = __ldxr(v44);
          while (__stxr(v45 + 1, v44));
          do
            v46 = __ldaxr(v44);
          while (__stlxr(v46 - 1, v44));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
            std::__shared_weak_count::__release_weak(v43);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v38 + 96))(&v1130, v38, 1);
      else
LABEL_652:
        v1130 = 0;
      if (!v1120)
        goto LABEL_680;
      if (!v1121)
        goto LABEL_680;
      v459 = v1122;
      if (!v1122)
        goto LABEL_680;
      v460 = v1126;
      v461 = v1119;
      if (v1128 && v1119)
      {
        v462 = v1117;
        v463 = v1118;
        if (v1118)
        {
          v464 = (unint64_t *)&v1118->__shared_owners_;
          do
            v465 = __ldxr(v464);
          while (__stxr(v465 + 1, v464));
          do
            v466 = __ldaxr(v464);
          while (__stlxr(v466 - 1, v464));
          if (!v466)
          {
            ((void (*)(std::__shared_weak_count *))v463->__on_zero_shared)(v463);
            std::__shared_weak_count::__release_weak(v463);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v462 + 88))(v462, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v461 = v1119;
      }
      v467 = (4 * v37);
      if (v459 == 1)
        goto LABEL_673;
      if (!(_DWORD)v467)
        goto LABEL_680;
      v468 = 0;
      do
      {
        if (!v461
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1978;
        }
        v469 = 0;
        v470 = *(_QWORD *)(v36 + 48);
        do
          sub_20B51852C(v470, &v461[v469++]);
        while (v467 != v469);
        v461 += v460;
        ++v468;
      }
      while (v468 != v459 - 1);
LABEL_673:
      if ((_DWORD)v467 && !v461)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_1978:
          abort();
        }
        v461 = 0;
      }
      if ((_DWORD)v467)
      {
        v471 = *(_QWORD *)(v36 + 48);
        do
        {
          sub_20B51852C(v471, v461++);
          --v467;
        }
        while (v467);
      }
LABEL_680:
      v472 = v1130;
      v1130 = 0;
      if (v472)
        (*(void (**)(uint64_t))(*(_QWORD *)v472 + 8))(v472);
      v473 = v1118;
      if (!v1118)
        return;
      v474 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v474);
      while (__stlxr(v475 - 1, v474));
      goto LABEL_1975;
    case 26:
      v1116 = &off_24C419C78;
      sub_20B2F6478((std::string::size_type *)&v1117, a3);
      v157 = *a2;
      v158 = v1127;
      v159 = v1117;
      if (!v1117)
        goto LABEL_960;
      v160 = v1118;
      if (v1118)
      {
        v161 = (unint64_t *)&v1118->__shared_owners_;
        do
          v162 = __ldxr(v161);
        while (__stxr(v162 + 1, v161));
        do
          v163 = __ldaxr(v161);
        while (__stlxr(v163 - 1, v161));
        if (!v163)
        {
          ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
          std::__shared_weak_count::__release_weak(v160);
        }
        v159 = v1117;
        v164 = v1118;
        if (v1118)
        {
          v165 = (unint64_t *)&v1118->__shared_owners_;
          do
            v166 = __ldxr(v165);
          while (__stxr(v166 + 1, v165));
          do
            v167 = __ldaxr(v165);
          while (__stlxr(v167 - 1, v165));
          if (!v167)
          {
            ((void (*)(std::__shared_weak_count *))v164->__on_zero_shared)(v164);
            std::__shared_weak_count::__release_weak(v164);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v159 + 96))(&v1130, v159, 1);
      else
LABEL_960:
        v1130 = 0;
      if (!v1120)
        goto LABEL_988;
      if (!v1121)
        goto LABEL_988;
      v614 = v1122;
      if (!v1122)
        goto LABEL_988;
      v615 = v1126;
      v616 = v1119;
      if (v1128 && v1119)
      {
        v617 = v1117;
        v618 = v1118;
        if (v1118)
        {
          v619 = (unint64_t *)&v1118->__shared_owners_;
          do
            v620 = __ldxr(v619);
          while (__stxr(v620 + 1, v619));
          do
            v621 = __ldaxr(v619);
          while (__stlxr(v621 - 1, v619));
          if (!v621)
          {
            ((void (*)(std::__shared_weak_count *))v618->__on_zero_shared)(v618);
            std::__shared_weak_count::__release_weak(v618);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v617 + 88))(v617, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v616 = v1119;
      }
      v622 = (4 * v158);
      if (v614 == 1)
        goto LABEL_981;
      if (!(_DWORD)v622)
        goto LABEL_988;
      v623 = 0;
      v624 = 2 * v615;
      v625 = 2 * v622;
      do
      {
        if (!v616
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1983;
        }
        v626 = v622;
        v627 = 0;
        v628 = *(_QWORD *)(v157 + 48);
        do
        {
          sub_20B5186C0(v628, &v616[v627 / 2]);
          v627 += 2;
        }
        while (v625 != v627);
        v616 = (_WORD *)((char *)v616 + v624);
        ++v623;
        v622 = v626;
      }
      while (v623 != v614 - 1);
LABEL_981:
      if ((_DWORD)v622 && !v616)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_1983:
          abort();
        }
        v616 = 0;
      }
      if ((_DWORD)v622)
      {
        v629 = *(_QWORD *)(v157 + 48);
        v630 = 2 * v622;
        do
        {
          sub_20B5186C0(v629, v616++);
          v630 -= 2;
        }
        while (v630);
      }
LABEL_988:
      v631 = v1130;
      v1130 = 0;
      if (v631)
        (*(void (**)(uint64_t))(*(_QWORD *)v631 + 8))(v631);
      v473 = v1118;
      if (!v1118)
        return;
      v632 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v632);
      while (__stlxr(v475 - 1, v632));
      goto LABEL_1975;
    case 27:
      v1116 = &off_24C419D70;
      sub_20B2F6BE8((std::string::size_type *)&v1117, a3);
      v15 = *a2;
      v16 = v1127;
      v17 = v1117;
      if (!v1117)
        goto LABEL_602;
      v18 = v1118;
      if (v1118)
      {
        v19 = (unint64_t *)&v1118->__shared_owners_;
        do
          v20 = __ldxr(v19);
        while (__stxr(v20 + 1, v19));
        do
          v21 = __ldaxr(v19);
        while (__stlxr(v21 - 1, v19));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
        v17 = v1117;
        v22 = v1118;
        if (v1118)
        {
          v23 = (unint64_t *)&v1118->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
            std::__shared_weak_count::__release_weak(v22);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v17 + 96))(&v1130, v17, 1);
      else
LABEL_602:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1763;
      if (!v1121)
        goto LABEL_1763;
      v438 = v1122;
      if (!v1122)
        goto LABEL_1763;
      v439 = v1126;
      v440 = v1119;
      if (v1128 && v1119)
      {
        v441 = v1117;
        v442 = v1118;
        if (v1118)
        {
          v443 = (unint64_t *)&v1118->__shared_owners_;
          do
            v444 = __ldxr(v443);
          while (__stxr(v444 + 1, v443));
          do
            v445 = __ldaxr(v443);
          while (__stlxr(v445 - 1, v443));
          if (!v445)
          {
            ((void (*)(std::__shared_weak_count *))v442->__on_zero_shared)(v442);
            std::__shared_weak_count::__release_weak(v442);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v441 + 88))(v441, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v440 = v1119;
      }
      v446 = v438 - 1;
      v1100 = (4 * v16);
      if (!v446)
        goto LABEL_623;
      if (!(4 * v16))
        goto LABEL_1763;
      for (m = 0; m != v446; ++m)
      {
        if (!v440
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_626;
        }
        v448 = 0;
        do
        {
          v1115 = 0;
          sub_20B5186C0(*(_QWORD *)(v15 + 48), &v1115);
          v440[v448++] = v1115;
        }
        while (v1100 != v448);
        v440 += v439;
      }
LABEL_623:
      if (!(_DWORD)v1100 || v440)
      {
        if (!(_DWORD)v1100)
          goto LABEL_1763;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_626:
        abort();
      }
      v1022 = 2 * v1100;
      do
      {
        v1115 = 0;
        sub_20B5186C0(*(_QWORD *)(v15 + 48), &v1115);
        *v440++ = v1115;
        v1022 -= 2;
      }
      while (v1022);
LABEL_1763:
      v1023 = v1130;
      v1130 = 0;
      if (v1023)
        (*(void (**)(uint64_t))(*(_QWORD *)v1023 + 8))(v1023);
      v473 = v1118;
      if (!v1118)
        return;
      v1024 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1024);
      while (__stlxr(v475 - 1, v1024));
      goto LABEL_1975;
    case 28:
      v1116 = &off_24C419E68;
      sub_20B2F7358((std::string::size_type *)&v1117, a3);
      v200 = *a2;
      v201 = v1127;
      v202 = v1117;
      if (!v1117)
        goto LABEL_1086;
      v203 = v1118;
      if (v1118)
      {
        v204 = (unint64_t *)&v1118->__shared_owners_;
        do
          v205 = __ldxr(v204);
        while (__stxr(v205 + 1, v204));
        do
          v206 = __ldaxr(v204);
        while (__stlxr(v206 - 1, v204));
        if (!v206)
        {
          ((void (*)(std::__shared_weak_count *))v203->__on_zero_shared)(v203);
          std::__shared_weak_count::__release_weak(v203);
        }
        v202 = v1117;
        v207 = v1118;
        if (v1118)
        {
          v208 = (unint64_t *)&v1118->__shared_owners_;
          do
            v209 = __ldxr(v208);
          while (__stxr(v209 + 1, v208));
          do
            v210 = __ldaxr(v208);
          while (__stlxr(v210 - 1, v208));
          if (!v210)
          {
            ((void (*)(std::__shared_weak_count *))v207->__on_zero_shared)(v207);
            std::__shared_weak_count::__release_weak(v207);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v202 + 96))(&v1130, v202, 1);
      else
LABEL_1086:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1114;
      if (!v1121)
        goto LABEL_1114;
      v679 = v1122;
      if (!v1122)
        goto LABEL_1114;
      v680 = v1126;
      v681 = (float *)v1119;
      if (v1128 && v1119)
      {
        v682 = v1117;
        v683 = v1118;
        if (v1118)
        {
          v684 = (unint64_t *)&v1118->__shared_owners_;
          do
            v685 = __ldxr(v684);
          while (__stxr(v685 + 1, v684));
          do
            v686 = __ldaxr(v684);
          while (__stlxr(v686 - 1, v684));
          if (!v686)
          {
            ((void (*)(std::__shared_weak_count *))v683->__on_zero_shared)(v683);
            std::__shared_weak_count::__release_weak(v683);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v682 + 88))(v682, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v681 = (float *)v1119;
      }
      v687 = (4 * v201);
      if (v679 == 1)
        goto LABEL_1107;
      if (!(_DWORD)v687)
        goto LABEL_1114;
      v688 = 0;
      v689 = 4 * v680;
      v690 = 4 * v687;
      do
      {
        if (!v681
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1990;
        }
        v691 = v687;
        v692 = 0;
        v693 = *(_QWORD *)(v200 + 48);
        do
        {
          sub_20B518CC0(v693, &v681[v692 / 4]);
          v692 += 4;
        }
        while (v690 != v692);
        v681 = (float *)((char *)v681 + v689);
        ++v688;
        v687 = v691;
      }
      while (v688 != v679 - 1);
LABEL_1107:
      if ((_DWORD)v687 && !v681)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_1990:
          abort();
        }
        v681 = 0;
      }
      if ((_DWORD)v687)
      {
        v694 = *(_QWORD *)(v200 + 48);
        v695 = 4 * v687;
        do
        {
          sub_20B518CC0(v694, v681++);
          v695 -= 4;
        }
        while (v695);
      }
LABEL_1114:
      v696 = v1130;
      v1130 = 0;
      if (v696)
        (*(void (**)(uint64_t))(*(_QWORD *)v696 + 8))(v696);
      v473 = v1118;
      if (!v1118)
        return;
      v697 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v697);
      while (__stlxr(v475 - 1, v697));
      goto LABEL_1975;
    case 29:
      v1116 = &off_24C418270;
      sub_20B2F7A60(&v1117, a3);
      v58 = *a2;
      v59 = v1127;
      v60 = v1117;
      if (!v1117)
        goto LABEL_708;
      v61 = v1118;
      if (v1118)
      {
        v62 = (unint64_t *)&v1118->__shared_owners_;
        do
          v63 = __ldxr(v62);
        while (__stxr(v63 + 1, v62));
        do
          v64 = __ldaxr(v62);
        while (__stlxr(v64 - 1, v62));
        if (!v64)
        {
          ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
          std::__shared_weak_count::__release_weak(v61);
        }
        v60 = v1117;
        v65 = v1118;
        if (v1118)
        {
          v66 = (unint64_t *)&v1118->__shared_owners_;
          do
            v67 = __ldxr(v66);
          while (__stxr(v67 + 1, v66));
          do
            v68 = __ldaxr(v66);
          while (__stlxr(v68 - 1, v66));
          if (!v68)
          {
            ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
            std::__shared_weak_count::__release_weak(v65);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v60 + 96))(&v1130, v60, 1);
      else
LABEL_708:
        v1130 = 0;
      if (!v1120)
        goto LABEL_736;
      if (!v1121)
        goto LABEL_736;
      v488 = v1122;
      if (!v1122)
        goto LABEL_736;
      v489 = v1126;
      v490 = v1119;
      if (v1128 && v1119)
      {
        v491 = v1117;
        v492 = v1118;
        if (v1118)
        {
          v493 = (unint64_t *)&v1118->__shared_owners_;
          do
            v494 = __ldxr(v493);
          while (__stxr(v494 + 1, v493));
          do
            v495 = __ldaxr(v493);
          while (__stlxr(v495 - 1, v493));
          if (!v495)
          {
            ((void (*)(std::__shared_weak_count *))v492->__on_zero_shared)(v492);
            std::__shared_weak_count::__release_weak(v492);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v491 + 88))(v491, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v490 = v1119;
      }
      v496 = (4 * v59);
      if (v488 == 1)
        goto LABEL_729;
      if (!(_DWORD)v496)
        goto LABEL_736;
      v497 = 0;
      do
      {
        if (!v490
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1979;
        }
        v498 = 0;
        v499 = *(_QWORD *)(v58 + 48);
        do
          sub_20B51852C(v499, &v490[v498++]);
        while (v496 != v498);
        v490 += v489;
        ++v497;
      }
      while (v497 != v488 - 1);
LABEL_729:
      if ((_DWORD)v496 && !v490)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_1979:
          abort();
        }
        v490 = 0;
      }
      if ((_DWORD)v496)
      {
        v500 = *(_QWORD *)(v58 + 48);
        do
        {
          sub_20B51852C(v500, v490++);
          --v496;
        }
        while (v496);
      }
LABEL_736:
      v501 = v1130;
      v1130 = 0;
      if (v501)
        (*(void (**)(uint64_t))(*(_QWORD *)v501 + 8))(v501);
      v473 = v1118;
      if (!v1118)
        return;
      v502 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v502);
      while (__stlxr(v475 - 1, v502));
      goto LABEL_1975;
    case 30:
      v1116 = &off_24C419F60;
      sub_20B2F810C(&v1117, a3);
      v233 = *a2;
      v234 = v1127;
      v235 = v1117;
      if (!v1117)
        goto LABEL_1179;
      v236 = v1118;
      if (v1118)
      {
        v237 = (unint64_t *)&v1118->__shared_owners_;
        do
          v238 = __ldxr(v237);
        while (__stxr(v238 + 1, v237));
        do
          v239 = __ldaxr(v237);
        while (__stlxr(v239 - 1, v237));
        if (!v239)
        {
          ((void (*)(std::__shared_weak_count *))v236->__on_zero_shared)(v236);
          std::__shared_weak_count::__release_weak(v236);
        }
        v235 = v1117;
        v240 = v1118;
        if (v1118)
        {
          v241 = (unint64_t *)&v1118->__shared_owners_;
          do
            v242 = __ldxr(v241);
          while (__stxr(v242 + 1, v241));
          do
            v243 = __ldaxr(v241);
          while (__stlxr(v243 - 1, v241));
          if (!v243)
          {
            ((void (*)(std::__shared_weak_count *))v240->__on_zero_shared)(v240);
            std::__shared_weak_count::__release_weak(v240);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v235 + 96))(&v1130, v235, 1);
      else
LABEL_1179:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1207;
      if (!v1121)
        goto LABEL_1207;
      v728 = v1122;
      if (!v1122)
        goto LABEL_1207;
      v729 = v1126;
      v730 = v1119;
      if (v1128 && v1119)
      {
        v731 = v1117;
        v732 = v1118;
        if (v1118)
        {
          v733 = (unint64_t *)&v1118->__shared_owners_;
          do
            v734 = __ldxr(v733);
          while (__stxr(v734 + 1, v733));
          do
            v735 = __ldaxr(v733);
          while (__stlxr(v735 - 1, v733));
          if (!v735)
          {
            ((void (*)(std::__shared_weak_count *))v732->__on_zero_shared)(v732);
            std::__shared_weak_count::__release_weak(v732);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v731 + 88))(v731, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v730 = v1119;
      }
      v736 = (4 * v234);
      if (v728 == 1)
        goto LABEL_1200;
      if (!(_DWORD)v736)
        goto LABEL_1207;
      v737 = 0;
      v738 = 2 * v729;
      v739 = 2 * v736;
      do
      {
        if (!v730
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1992;
        }
        v740 = v736;
        v741 = 0;
        v742 = *(_QWORD *)(v233 + 48);
        do
        {
          sub_20B5186C0(v742, &v730[v741 / 2]);
          v741 += 2;
        }
        while (v739 != v741);
        v730 = (_WORD *)((char *)v730 + v738);
        ++v737;
        v736 = v740;
      }
      while (v737 != v728 - 1);
LABEL_1200:
      if ((_DWORD)v736 && !v730)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_1992:
          abort();
        }
        v730 = 0;
      }
      if ((_DWORD)v736)
      {
        v743 = *(_QWORD *)(v233 + 48);
        v744 = 2 * v736;
        do
        {
          sub_20B5186C0(v743, v730++);
          v744 -= 2;
        }
        while (v744);
      }
LABEL_1207:
      v745 = v1130;
      v1130 = 0;
      if (v745)
        (*(void (**)(uint64_t))(*(_QWORD *)v745 + 8))(v745);
      v473 = v1118;
      if (!v1118)
        return;
      v746 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v746);
      while (__stlxr(v475 - 1, v746));
      goto LABEL_1975;
    case 31:
      v1116 = &off_24C416500;
      sub_20B2F8864(&v1117, a3);
      v168 = *a2;
      v169 = v1127;
      v170 = v1117;
      if (!v1117)
        goto LABEL_994;
      v171 = v1118;
      if (v1118)
      {
        v172 = (unint64_t *)&v1118->__shared_owners_;
        do
          v173 = __ldxr(v172);
        while (__stxr(v173 + 1, v172));
        do
          v174 = __ldaxr(v172);
        while (__stlxr(v174 - 1, v172));
        if (!v174)
        {
          ((void (*)(std::__shared_weak_count *))v171->__on_zero_shared)(v171);
          std::__shared_weak_count::__release_weak(v171);
        }
        v170 = v1117;
        v175 = v1118;
        if (v1118)
        {
          v176 = (unint64_t *)&v1118->__shared_owners_;
          do
            v177 = __ldxr(v176);
          while (__stxr(v177 + 1, v176));
          do
            v178 = __ldaxr(v176);
          while (__stlxr(v178 - 1, v176));
          if (!v178)
          {
            ((void (*)(std::__shared_weak_count *))v175->__on_zero_shared)(v175);
            std::__shared_weak_count::__release_weak(v175);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v170 + 96))(&v1130, v170, 1);
      else
LABEL_994:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1799;
      if (!v1121)
        goto LABEL_1799;
      v633 = v1122;
      if (!v1122)
        goto LABEL_1799;
      v634 = v1126;
      v635 = v1119;
      if (v1128 && v1119)
      {
        v636 = v1117;
        v637 = v1118;
        if (v1118)
        {
          v638 = (unint64_t *)&v1118->__shared_owners_;
          do
            v639 = __ldxr(v638);
          while (__stxr(v639 + 1, v638));
          do
            v640 = __ldaxr(v638);
          while (__stlxr(v640 - 1, v638));
          if (!v640)
          {
            ((void (*)(std::__shared_weak_count *))v637->__on_zero_shared)(v637);
            std::__shared_weak_count::__release_weak(v637);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v636 + 88))(v636, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v635 = v1119;
      }
      v641 = v633 - 1;
      v1107 = (4 * v169);
      if (!v641)
        goto LABEL_1015;
      if (!(4 * v169))
        goto LABEL_1799;
      for (n = 0; n != v641; ++n)
      {
        if (!v635
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1018;
        }
        v643 = 0;
        do
        {
          v1115 = 0;
          sub_20B5186C0(*(_QWORD *)(v168 + 48), &v1115);
          v635[v643++] = v1115;
        }
        while (v1107 != v643);
        v635 += v634;
      }
LABEL_1015:
      if (!(_DWORD)v1107 || v635)
      {
        if (!(_DWORD)v1107)
          goto LABEL_1799;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1018:
        abort();
      }
      v1034 = 2 * v1107;
      do
      {
        v1115 = 0;
        sub_20B5186C0(*(_QWORD *)(v168 + 48), &v1115);
        *v635++ = v1115;
        v1034 -= 2;
      }
      while (v1034);
LABEL_1799:
      v1035 = v1130;
      v1130 = 0;
      if (v1035)
        (*(void (**)(uint64_t))(*(_QWORD *)v1035 + 8))(v1035);
      v473 = v1118;
      if (!v1118)
        return;
      v1036 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1036);
      while (__stlxr(v475 - 1, v1036));
      goto LABEL_1975;
    case 32:
      v1116 = &off_24C4165F8;
      sub_20B2F8EA8(&v1117, a3);
      v255 = *a2;
      v256 = v1127;
      v257 = v1117;
      if (!v1117)
        goto LABEL_1247;
      v258 = v1118;
      if (v1118)
      {
        v259 = (unint64_t *)&v1118->__shared_owners_;
        do
          v260 = __ldxr(v259);
        while (__stxr(v260 + 1, v259));
        do
          v261 = __ldaxr(v259);
        while (__stlxr(v261 - 1, v259));
        if (!v261)
        {
          ((void (*)(std::__shared_weak_count *))v258->__on_zero_shared)(v258);
          std::__shared_weak_count::__release_weak(v258);
        }
        v257 = v1117;
        v262 = v1118;
        if (v1118)
        {
          v263 = (unint64_t *)&v1118->__shared_owners_;
          do
            v264 = __ldxr(v263);
          while (__stxr(v264 + 1, v263));
          do
            v265 = __ldaxr(v263);
          while (__stlxr(v265 - 1, v263));
          if (!v265)
          {
            ((void (*)(std::__shared_weak_count *))v262->__on_zero_shared)(v262);
            std::__shared_weak_count::__release_weak(v262);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v257 + 96))(&v1130, v257, 1);
      else
LABEL_1247:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1275;
      if (!v1121)
        goto LABEL_1275;
      v766 = v1122;
      if (!v1122)
        goto LABEL_1275;
      v767 = v1126;
      v768 = (float *)v1119;
      if (v1128 && v1119)
      {
        v769 = v1117;
        v770 = v1118;
        if (v1118)
        {
          v771 = (unint64_t *)&v1118->__shared_owners_;
          do
            v772 = __ldxr(v771);
          while (__stxr(v772 + 1, v771));
          do
            v773 = __ldaxr(v771);
          while (__stlxr(v773 - 1, v771));
          if (!v773)
          {
            ((void (*)(std::__shared_weak_count *))v770->__on_zero_shared)(v770);
            std::__shared_weak_count::__release_weak(v770);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v769 + 88))(v769, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v768 = (float *)v1119;
      }
      v774 = (4 * v256);
      if (v766 == 1)
        goto LABEL_1268;
      if (!(_DWORD)v774)
        goto LABEL_1275;
      v775 = 0;
      v776 = 4 * v767;
      v777 = 4 * v774;
      do
      {
        if (!v768
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1994;
        }
        v778 = v774;
        v779 = 0;
        v780 = *(_QWORD *)(v255 + 48);
        do
        {
          sub_20B518CC0(v780, &v768[v779 / 4]);
          v779 += 4;
        }
        while (v777 != v779);
        v768 = (float *)((char *)v768 + v776);
        ++v775;
        v774 = v778;
      }
      while (v775 != v766 - 1);
LABEL_1268:
      if ((_DWORD)v774 && !v768)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_1994:
          abort();
        }
        v768 = 0;
      }
      if ((_DWORD)v774)
      {
        v781 = *(_QWORD *)(v255 + 48);
        v782 = 4 * v774;
        do
        {
          sub_20B518CC0(v781, v768++);
          v782 -= 4;
        }
        while (v782);
      }
LABEL_1275:
      v783 = v1130;
      v1130 = 0;
      if (v783)
        (*(void (**)(uint64_t))(*(_QWORD *)v783 + 8))(v783);
      v473 = v1118;
      if (!v1118)
        return;
      v784 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v784);
      while (__stlxr(v475 - 1, v784));
      goto LABEL_1975;
    case 33:
      v1116 = &off_24C418368;
      sub_20B2F94EC(&v1117, a3);
      v362 = *a2;
      v363 = v1127;
      v364 = v1117;
      if (!v1117)
        goto LABEL_1576;
      v365 = v1118;
      if (v1118)
      {
        v366 = (unint64_t *)&v1118->__shared_owners_;
        do
          v367 = __ldxr(v366);
        while (__stxr(v367 + 1, v366));
        do
          v368 = __ldaxr(v366);
        while (__stlxr(v368 - 1, v366));
        if (!v368)
        {
          ((void (*)(std::__shared_weak_count *))v365->__on_zero_shared)(v365);
          std::__shared_weak_count::__release_weak(v365);
        }
        v364 = v1117;
        v369 = v1118;
        if (v1118)
        {
          v370 = (unint64_t *)&v1118->__shared_owners_;
          do
            v371 = __ldxr(v370);
          while (__stxr(v371 + 1, v370));
          do
            v372 = __ldaxr(v370);
          while (__stlxr(v372 - 1, v370));
          if (!v372)
          {
            ((void (*)(std::__shared_weak_count *))v369->__on_zero_shared)(v369);
            std::__shared_weak_count::__release_weak(v369);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v364 + 96))(&v1130, v364, 1);
      else
LABEL_1576:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1604;
      if (!v1121)
        goto LABEL_1604;
      v929 = v1122;
      if (!v1122)
        goto LABEL_1604;
      v930 = v1126;
      v931 = v1119;
      if (v1128 && v1119)
      {
        v932 = v1117;
        v933 = v1118;
        if (v1118)
        {
          v934 = (unint64_t *)&v1118->__shared_owners_;
          do
            v935 = __ldxr(v934);
          while (__stxr(v935 + 1, v934));
          do
            v936 = __ldaxr(v934);
          while (__stlxr(v936 - 1, v934));
          if (!v936)
          {
            ((void (*)(std::__shared_weak_count *))v933->__on_zero_shared)(v933);
            std::__shared_weak_count::__release_weak(v933);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v932 + 88))(v932, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v931 = v1119;
      }
      v937 = (4 * v363);
      if (v929 == 1)
        goto LABEL_1597;
      if (!(_DWORD)v937)
        goto LABEL_1604;
      v938 = 0;
      do
      {
        if (!v931
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2002;
        }
        v939 = 0;
        v940 = *(_QWORD *)(v362 + 48);
        do
          sub_20B51852C(v940, &v931[v939++]);
        while (v937 != v939);
        v931 += v930;
        ++v938;
      }
      while (v938 != v929 - 1);
LABEL_1597:
      if ((_DWORD)v937 && !v931)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2002:
          abort();
        }
        v931 = 0;
      }
      if ((_DWORD)v937)
      {
        v941 = *(_QWORD *)(v362 + 48);
        do
        {
          sub_20B51852C(v941, v931++);
          --v937;
        }
        while (v937);
      }
LABEL_1604:
      v942 = v1130;
      v1130 = 0;
      if (v942)
        (*(void (**)(uint64_t))(*(_QWORD *)v942 + 8))(v942);
      v473 = v1118;
      if (!v1118)
        return;
      v943 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v943);
      while (__stlxr(v475 - 1, v943));
      goto LABEL_1975;
    case 34:
      v1116 = &off_24C41A058;
      sub_20B2F9B98((std::string::size_type *)&v1117, a3);
      v244 = *a2;
      v245 = v1127;
      v246 = v1117;
      if (!v1117)
        goto LABEL_1213;
      v247 = v1118;
      if (v1118)
      {
        v248 = (unint64_t *)&v1118->__shared_owners_;
        do
          v249 = __ldxr(v248);
        while (__stxr(v249 + 1, v248));
        do
          v250 = __ldaxr(v248);
        while (__stlxr(v250 - 1, v248));
        if (!v250)
        {
          ((void (*)(std::__shared_weak_count *))v247->__on_zero_shared)(v247);
          std::__shared_weak_count::__release_weak(v247);
        }
        v246 = v1117;
        v251 = v1118;
        if (v1118)
        {
          v252 = (unint64_t *)&v1118->__shared_owners_;
          do
            v253 = __ldxr(v252);
          while (__stxr(v253 + 1, v252));
          do
            v254 = __ldaxr(v252);
          while (__stlxr(v254 - 1, v252));
          if (!v254)
          {
            ((void (*)(std::__shared_weak_count *))v251->__on_zero_shared)(v251);
            std::__shared_weak_count::__release_weak(v251);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v246 + 96))(&v1130, v246, 1);
      else
LABEL_1213:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1241;
      if (!v1121)
        goto LABEL_1241;
      v747 = v1122;
      if (!v1122)
        goto LABEL_1241;
      v748 = v1126;
      v749 = v1119;
      if (v1128 && v1119)
      {
        v750 = v1117;
        v751 = v1118;
        if (v1118)
        {
          v752 = (unint64_t *)&v1118->__shared_owners_;
          do
            v753 = __ldxr(v752);
          while (__stxr(v753 + 1, v752));
          do
            v754 = __ldaxr(v752);
          while (__stlxr(v754 - 1, v752));
          if (!v754)
          {
            ((void (*)(std::__shared_weak_count *))v751->__on_zero_shared)(v751);
            std::__shared_weak_count::__release_weak(v751);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v750 + 88))(v750, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v749 = v1119;
      }
      v755 = (4 * v245);
      if (v747 == 1)
        goto LABEL_1234;
      if (!(_DWORD)v755)
        goto LABEL_1241;
      v756 = 0;
      v757 = 2 * v748;
      v758 = 2 * v755;
      do
      {
        if (!v749
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1993;
        }
        v759 = v755;
        v760 = 0;
        v761 = *(_QWORD *)(v244 + 48);
        do
        {
          sub_20B5186C0(v761, &v749[v760 / 2]);
          v760 += 2;
        }
        while (v758 != v760);
        v749 = (_WORD *)((char *)v749 + v757);
        ++v756;
        v755 = v759;
      }
      while (v756 != v747 - 1);
LABEL_1234:
      if ((_DWORD)v755 && !v749)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_1993:
          abort();
        }
        v749 = 0;
      }
      if ((_DWORD)v755)
      {
        v762 = *(_QWORD *)(v244 + 48);
        v763 = 2 * v755;
        do
        {
          sub_20B5186C0(v762, v749++);
          v763 -= 2;
        }
        while (v763);
      }
LABEL_1241:
      v764 = v1130;
      v1130 = 0;
      if (v764)
        (*(void (**)(uint64_t))(*(_QWORD *)v764 + 8))(v764);
      v473 = v1118;
      if (!v1118)
        return;
      v765 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v765);
      while (__stlxr(v475 - 1, v765));
      goto LABEL_1975;
    case 35:
      v1116 = &off_24C41A150;
      sub_20B2FA308((std::string::size_type *)&v1117, a3);
      v222 = *a2;
      v223 = v1127;
      v224 = v1117;
      if (!v1117)
        goto LABEL_1154;
      v225 = v1118;
      if (v1118)
      {
        v226 = (unint64_t *)&v1118->__shared_owners_;
        do
          v227 = __ldxr(v226);
        while (__stxr(v227 + 1, v226));
        do
          v228 = __ldaxr(v226);
        while (__stlxr(v228 - 1, v226));
        if (!v228)
        {
          ((void (*)(std::__shared_weak_count *))v225->__on_zero_shared)(v225);
          std::__shared_weak_count::__release_weak(v225);
        }
        v224 = v1117;
        v229 = v1118;
        if (v1118)
        {
          v230 = (unint64_t *)&v1118->__shared_owners_;
          do
            v231 = __ldxr(v230);
          while (__stxr(v231 + 1, v230));
          do
            v232 = __ldaxr(v230);
          while (__stlxr(v232 - 1, v230));
          if (!v232)
          {
            ((void (*)(std::__shared_weak_count *))v229->__on_zero_shared)(v229);
            std::__shared_weak_count::__release_weak(v229);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v224 + 96))(&v1130, v224, 1);
      else
LABEL_1154:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1808;
      if (!v1121)
        goto LABEL_1808;
      v717 = v1122;
      if (!v1122)
        goto LABEL_1808;
      v718 = v1126;
      v719 = v1119;
      if (v1128 && v1119)
      {
        v720 = v1117;
        v721 = v1118;
        if (v1118)
        {
          v722 = (unint64_t *)&v1118->__shared_owners_;
          do
            v723 = __ldxr(v722);
          while (__stxr(v723 + 1, v722));
          do
            v724 = __ldaxr(v722);
          while (__stlxr(v724 - 1, v722));
          if (!v724)
          {
            ((void (*)(std::__shared_weak_count *))v721->__on_zero_shared)(v721);
            std::__shared_weak_count::__release_weak(v721);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v720 + 88))(v720, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v719 = v1119;
      }
      v725 = v717 - 1;
      v1108 = (4 * v223);
      if (!v725)
        goto LABEL_1175;
      if (!(4 * v223))
        goto LABEL_1808;
      for (ii = 0; ii != v725; ++ii)
      {
        if (!v719
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1178;
        }
        v727 = 0;
        do
        {
          v1115 = 0;
          sub_20B5186C0(*(_QWORD *)(v222 + 48), &v1115);
          v719[v727++] = v1115;
        }
        while (v1108 != v727);
        v719 += v718;
      }
LABEL_1175:
      if (!(_DWORD)v1108 || v719)
      {
        if (!(_DWORD)v1108)
          goto LABEL_1808;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1178:
        abort();
      }
      v1037 = 2 * v1108;
      do
      {
        v1115 = 0;
        sub_20B5186C0(*(_QWORD *)(v222 + 48), &v1115);
        *v719++ = v1115;
        v1037 -= 2;
      }
      while (v1037);
LABEL_1808:
      v1038 = v1130;
      v1130 = 0;
      if (v1038)
        (*(void (**)(uint64_t))(*(_QWORD *)v1038 + 8))(v1038);
      v473 = v1118;
      if (!v1118)
        return;
      v1039 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1039);
      while (__stlxr(v475 - 1, v1039));
      goto LABEL_1975;
    case 36:
      v1116 = &off_24C41A248;
      sub_20B2FAA78((std::string::size_type *)&v1117, a3);
      v211 = *a2;
      v212 = v1127;
      v213 = v1117;
      if (!v1117)
        goto LABEL_1120;
      v214 = v1118;
      if (v1118)
      {
        v215 = (unint64_t *)&v1118->__shared_owners_;
        do
          v216 = __ldxr(v215);
        while (__stxr(v216 + 1, v215));
        do
          v217 = __ldaxr(v215);
        while (__stlxr(v217 - 1, v215));
        if (!v217)
        {
          ((void (*)(std::__shared_weak_count *))v214->__on_zero_shared)(v214);
          std::__shared_weak_count::__release_weak(v214);
        }
        v213 = v1117;
        v218 = v1118;
        if (v1118)
        {
          v219 = (unint64_t *)&v1118->__shared_owners_;
          do
            v220 = __ldxr(v219);
          while (__stxr(v220 + 1, v219));
          do
            v221 = __ldaxr(v219);
          while (__stlxr(v221 - 1, v219));
          if (!v221)
          {
            ((void (*)(std::__shared_weak_count *))v218->__on_zero_shared)(v218);
            std::__shared_weak_count::__release_weak(v218);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v213 + 96))(&v1130, v213, 1);
      else
LABEL_1120:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1148;
      if (!v1121)
        goto LABEL_1148;
      v698 = v1122;
      if (!v1122)
        goto LABEL_1148;
      v699 = v1126;
      v700 = (float *)v1119;
      if (v1128 && v1119)
      {
        v701 = v1117;
        v702 = v1118;
        if (v1118)
        {
          v703 = (unint64_t *)&v1118->__shared_owners_;
          do
            v704 = __ldxr(v703);
          while (__stxr(v704 + 1, v703));
          do
            v705 = __ldaxr(v703);
          while (__stlxr(v705 - 1, v703));
          if (!v705)
          {
            ((void (*)(std::__shared_weak_count *))v702->__on_zero_shared)(v702);
            std::__shared_weak_count::__release_weak(v702);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v701 + 88))(v701, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v700 = (float *)v1119;
      }
      v706 = (4 * v212);
      if (v698 == 1)
        goto LABEL_1141;
      if (!(_DWORD)v706)
        goto LABEL_1148;
      v707 = 0;
      v708 = 4 * v699;
      v709 = 4 * v706;
      do
      {
        if (!v700
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1991;
        }
        v710 = v706;
        v711 = 0;
        v712 = *(_QWORD *)(v211 + 48);
        do
        {
          sub_20B518CC0(v712, &v700[v711 / 4]);
          v711 += 4;
        }
        while (v709 != v711);
        v700 = (float *)((char *)v700 + v708);
        ++v707;
        v706 = v710;
      }
      while (v707 != v698 - 1);
LABEL_1141:
      if ((_DWORD)v706 && !v700)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_1991:
          abort();
        }
        v700 = 0;
      }
      if ((_DWORD)v706)
      {
        v713 = *(_QWORD *)(v211 + 48);
        v714 = 4 * v706;
        do
        {
          sub_20B518CC0(v713, v700++);
          v714 -= 4;
        }
        while (v714);
      }
LABEL_1148:
      v715 = v1130;
      v1130 = 0;
      if (v715)
        (*(void (**)(uint64_t))(*(_QWORD *)v715 + 8))(v715);
      v473 = v1118;
      if (!v1118)
        return;
      v716 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v716);
      while (__stlxr(v475 - 1, v716));
      goto LABEL_1975;
    case 37:
      v1116 = &off_24C4166F0;
      sub_20B2FB180(&v1117, a3);
      v330 = *a2;
      v331 = v1127;
      v332 = v1117;
      if (!v1117)
        goto LABEL_1495;
      v333 = v1118;
      if (v1118)
      {
        v334 = (unint64_t *)&v1118->__shared_owners_;
        do
          v335 = __ldxr(v334);
        while (__stxr(v335 + 1, v334));
        do
          v336 = __ldaxr(v334);
        while (__stlxr(v336 - 1, v334));
        if (!v336)
        {
          ((void (*)(std::__shared_weak_count *))v333->__on_zero_shared)(v333);
          std::__shared_weak_count::__release_weak(v333);
        }
        v332 = v1117;
        v337 = v1118;
        if (v1118)
        {
          v338 = (unint64_t *)&v1118->__shared_owners_;
          do
            v339 = __ldxr(v338);
          while (__stxr(v339 + 1, v338));
          do
            v340 = __ldaxr(v338);
          while (__stlxr(v340 - 1, v338));
          if (!v340)
          {
            ((void (*)(std::__shared_weak_count *))v337->__on_zero_shared)(v337);
            std::__shared_weak_count::__release_weak(v337);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v332 + 96))(&v1130, v332, 1);
      else
LABEL_1495:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1523;
      if (!v1121)
        goto LABEL_1523;
      v892 = v1122;
      if (!v1122)
        goto LABEL_1523;
      v893 = v1126;
      v894 = v1119;
      if (v1128 && v1119)
      {
        v895 = v1117;
        v896 = v1118;
        if (v1118)
        {
          v897 = (unint64_t *)&v1118->__shared_owners_;
          do
            v898 = __ldxr(v897);
          while (__stxr(v898 + 1, v897));
          do
            v899 = __ldaxr(v897);
          while (__stlxr(v899 - 1, v897));
          if (!v899)
          {
            ((void (*)(std::__shared_weak_count *))v896->__on_zero_shared)(v896);
            std::__shared_weak_count::__release_weak(v896);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v895 + 88))(v895, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v894 = v1119;
      }
      v900 = (4 * v331);
      if (v892 == 1)
        goto LABEL_1516;
      if (!(_DWORD)v900)
        goto LABEL_1523;
      v901 = 0;
      do
      {
        if (!v894
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2001;
        }
        v902 = 0;
        v903 = *(_QWORD *)(v330 + 48);
        do
          sub_20B51852C(v903, &v894[v902++]);
        while (v900 != v902);
        v894 += v893;
        ++v901;
      }
      while (v901 != v892 - 1);
LABEL_1516:
      if ((_DWORD)v900 && !v894)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2001:
          abort();
        }
        v894 = 0;
      }
      if ((_DWORD)v900)
      {
        v904 = *(_QWORD *)(v330 + 48);
        do
        {
          sub_20B51852C(v904, v894++);
          --v900;
        }
        while (v900);
      }
LABEL_1523:
      v905 = v1130;
      v1130 = 0;
      if (v905)
        (*(void (**)(uint64_t))(*(_QWORD *)v905 + 8))(v905);
      v473 = v1118;
      if (!v1118)
        return;
      v906 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v906);
      while (__stlxr(v475 - 1, v906));
      goto LABEL_1975;
    case 38:
      v1116 = &off_24C4167E8;
      sub_20B2FB7C4(&v1117, a3);
      v384 = *a2;
      v385 = v1127;
      v386 = v1117;
      if (!v1117)
        goto LABEL_1632;
      v387 = v1118;
      if (v1118)
      {
        v388 = (unint64_t *)&v1118->__shared_owners_;
        do
          v389 = __ldxr(v388);
        while (__stxr(v389 + 1, v388));
        do
          v390 = __ldaxr(v388);
        while (__stlxr(v390 - 1, v388));
        if (!v390)
        {
          ((void (*)(std::__shared_weak_count *))v387->__on_zero_shared)(v387);
          std::__shared_weak_count::__release_weak(v387);
        }
        v386 = v1117;
        v391 = v1118;
        if (v1118)
        {
          v392 = (unint64_t *)&v1118->__shared_owners_;
          do
            v393 = __ldxr(v392);
          while (__stxr(v393 + 1, v392));
          do
            v394 = __ldaxr(v392);
          while (__stlxr(v394 - 1, v392));
          if (!v394)
          {
            ((void (*)(std::__shared_weak_count *))v391->__on_zero_shared)(v391);
            std::__shared_weak_count::__release_weak(v391);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v386 + 96))(&v1130, v386, 1);
      else
LABEL_1632:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1660;
      if (!v1121)
        goto LABEL_1660;
      v956 = v1122;
      if (!v1122)
        goto LABEL_1660;
      v957 = v1126;
      v958 = v1119;
      if (v1128 && v1119)
      {
        v959 = v1117;
        v960 = v1118;
        if (v1118)
        {
          v961 = (unint64_t *)&v1118->__shared_owners_;
          do
            v962 = __ldxr(v961);
          while (__stxr(v962 + 1, v961));
          do
            v963 = __ldaxr(v961);
          while (__stlxr(v963 - 1, v961));
          if (!v963)
          {
            ((void (*)(std::__shared_weak_count *))v960->__on_zero_shared)(v960);
            std::__shared_weak_count::__release_weak(v960);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v959 + 88))(v959, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v958 = v1119;
      }
      v964 = (4 * v385);
      if (v956 == 1)
        goto LABEL_1653;
      if (!(_DWORD)v964)
        goto LABEL_1660;
      v965 = 0;
      v966 = 2 * v957;
      v967 = 2 * v964;
      do
      {
        if (!v958
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2003;
        }
        v968 = v964;
        v969 = 0;
        v970 = *(_QWORD *)(v384 + 48);
        do
        {
          sub_20B5186C0(v970, &v958[v969 / 2]);
          v969 += 2;
        }
        while (v967 != v969);
        v958 = (_WORD *)((char *)v958 + v966);
        ++v965;
        v964 = v968;
      }
      while (v965 != v956 - 1);
LABEL_1653:
      if ((_DWORD)v964 && !v958)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2003:
          abort();
        }
        v958 = 0;
      }
      if ((_DWORD)v964)
      {
        v971 = *(_QWORD *)(v384 + 48);
        v972 = 2 * v964;
        do
        {
          sub_20B5186C0(v971, v958++);
          v972 -= 2;
        }
        while (v972);
      }
LABEL_1660:
      v973 = v1130;
      v1130 = 0;
      if (v973)
        (*(void (**)(uint64_t))(*(_QWORD *)v973 + 8))(v973);
      v473 = v1118;
      if (!v1118)
        return;
      v974 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v974);
      while (__stlxr(v475 - 1, v974));
      goto LABEL_1975;
    case 39:
      v1116 = &off_24C41A340;
      sub_20B2FBE70(&v1117, a3);
      v135 = *a2;
      v136 = v1127;
      v137 = v1117;
      if (!v1117)
        goto LABEL_913;
      v138 = v1118;
      if (v1118)
      {
        v139 = (unint64_t *)&v1118->__shared_owners_;
        do
          v140 = __ldxr(v139);
        while (__stxr(v140 + 1, v139));
        do
          v141 = __ldaxr(v139);
        while (__stlxr(v141 - 1, v139));
        if (!v141)
        {
          ((void (*)(std::__shared_weak_count *))v138->__on_zero_shared)(v138);
          std::__shared_weak_count::__release_weak(v138);
        }
        v137 = v1117;
        v142 = v1118;
        if (v1118)
        {
          v143 = (unint64_t *)&v1118->__shared_owners_;
          do
            v144 = __ldxr(v143);
          while (__stxr(v144 + 1, v143));
          do
            v145 = __ldaxr(v143);
          while (__stlxr(v145 - 1, v143));
          if (!v145)
          {
            ((void (*)(std::__shared_weak_count *))v142->__on_zero_shared)(v142);
            std::__shared_weak_count::__release_weak(v142);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v137 + 96))(&v1130, v137, 1);
      else
LABEL_913:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1790;
      if (!v1121)
        goto LABEL_1790;
      v591 = v1122;
      if (!v1122)
        goto LABEL_1790;
      v592 = v1126;
      v593 = v1119;
      if (v1128 && v1119)
      {
        v594 = v1117;
        v595 = v1118;
        if (v1118)
        {
          v596 = (unint64_t *)&v1118->__shared_owners_;
          do
            v597 = __ldxr(v596);
          while (__stxr(v597 + 1, v596));
          do
            v598 = __ldaxr(v596);
          while (__stlxr(v598 - 1, v596));
          if (!v598)
          {
            ((void (*)(std::__shared_weak_count *))v595->__on_zero_shared)(v595);
            std::__shared_weak_count::__release_weak(v595);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v594 + 88))(v594, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v593 = v1119;
      }
      v599 = v591 - 1;
      v1105 = (4 * v136);
      if (!v599)
        goto LABEL_934;
      if (!(4 * v136))
        goto LABEL_1790;
      for (jj = 0; jj != v599; ++jj)
      {
        if (!v593
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_937;
        }
        v601 = 0;
        do
        {
          v1115 = 0;
          sub_20B5186C0(*(_QWORD *)(v135 + 48), &v1115);
          v593[v601++] = v1115;
        }
        while (v1105 != v601);
        v593 += v592;
      }
LABEL_934:
      if (!(_DWORD)v1105 || v593)
      {
        if (!(_DWORD)v1105)
          goto LABEL_1790;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_937:
        abort();
      }
      v1031 = 2 * v1105;
      do
      {
        v1115 = 0;
        sub_20B5186C0(*(_QWORD *)(v135 + 48), &v1115);
        *v593++ = v1115;
        v1031 -= 2;
      }
      while (v1031);
LABEL_1790:
      v1032 = v1130;
      v1130 = 0;
      if (v1032)
        (*(void (**)(uint64_t))(*(_QWORD *)v1032 + 8))(v1032);
      v473 = v1118;
      if (!v1118)
        return;
      v1033 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1033);
      while (__stlxr(v475 - 1, v1033));
      goto LABEL_1975;
    case 40:
      v1116 = &off_24C41A438;
      sub_20B2FC630(&v1117, a3);
      v102 = *a2;
      v103 = v1127;
      v104 = v1117;
      if (!v1117)
        goto LABEL_832;
      v105 = v1118;
      if (v1118)
      {
        v106 = (unint64_t *)&v1118->__shared_owners_;
        do
          v107 = __ldxr(v106);
        while (__stxr(v107 + 1, v106));
        do
          v108 = __ldaxr(v106);
        while (__stlxr(v108 - 1, v106));
        if (!v108)
        {
          ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
          std::__shared_weak_count::__release_weak(v105);
        }
        v104 = v1117;
        v109 = v1118;
        if (v1118)
        {
          v110 = (unint64_t *)&v1118->__shared_owners_;
          do
            v111 = __ldxr(v110);
          while (__stxr(v111 + 1, v110));
          do
            v112 = __ldaxr(v110);
          while (__stlxr(v112 - 1, v110));
          if (!v112)
          {
            ((void (*)(std::__shared_weak_count *))v109->__on_zero_shared)(v109);
            std::__shared_weak_count::__release_weak(v109);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v104 + 96))(&v1130, v104, 1);
      else
LABEL_832:
        v1130 = 0;
      if (!v1120)
        goto LABEL_860;
      if (!v1121)
        goto LABEL_860;
      v549 = v1122;
      if (!v1122)
        goto LABEL_860;
      v550 = v1126;
      v551 = (float *)v1119;
      if (v1128 && v1119)
      {
        v552 = v1117;
        v553 = v1118;
        if (v1118)
        {
          v554 = (unint64_t *)&v1118->__shared_owners_;
          do
            v555 = __ldxr(v554);
          while (__stxr(v555 + 1, v554));
          do
            v556 = __ldaxr(v554);
          while (__stlxr(v556 - 1, v554));
          if (!v556)
          {
            ((void (*)(std::__shared_weak_count *))v553->__on_zero_shared)(v553);
            std::__shared_weak_count::__release_weak(v553);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v552 + 88))(v552, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v551 = (float *)v1119;
      }
      v557 = (4 * v103);
      if (v549 == 1)
        goto LABEL_853;
      if (!(_DWORD)v557)
        goto LABEL_860;
      v558 = 0;
      v559 = 4 * v550;
      v560 = 4 * v557;
      do
      {
        if (!v551
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1982;
        }
        v561 = v557;
        v562 = 0;
        v563 = *(_QWORD *)(v102 + 48);
        do
        {
          sub_20B518CC0(v563, &v551[v562 / 4]);
          v562 += 4;
        }
        while (v560 != v562);
        v551 = (float *)((char *)v551 + v559);
        ++v558;
        v557 = v561;
      }
      while (v558 != v549 - 1);
LABEL_853:
      if ((_DWORD)v557 && !v551)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_1982:
          abort();
        }
        v551 = 0;
      }
      if ((_DWORD)v557)
      {
        v564 = *(_QWORD *)(v102 + 48);
        v565 = 4 * v557;
        do
        {
          sub_20B518CC0(v564, v551++);
          v565 -= 4;
        }
        while (v565);
      }
LABEL_860:
      v566 = v1130;
      v1130 = 0;
      if (v566)
        (*(void (**)(uint64_t))(*(_QWORD *)v566 + 8))(v566);
      v473 = v1118;
      if (!v1118)
        return;
      v567 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v567);
      while (__stlxr(v475 - 1, v567));
      goto LABEL_1975;
    default:
      return;
  }
}

