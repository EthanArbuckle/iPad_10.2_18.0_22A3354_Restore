void sub_20B3C2C38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  unint64_t *p_shared_owners;
  unint64_t v24;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v24 = __ldaxr(p_shared_owners);
    while (__stlxr(v24 - 1, p_shared_owners));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_20B3C3A78(int a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  unint64_t v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  unint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  unint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  std::__shared_weak_count *v95;
  unint64_t *v96;
  unint64_t v97;
  unint64_t v98;
  std::__shared_weak_count *v99;
  unint64_t *v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  std::__shared_weak_count *v106;
  unint64_t *v107;
  unint64_t v108;
  unint64_t v109;
  std::__shared_weak_count *v110;
  unint64_t *v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  std::__shared_weak_count *v117;
  unint64_t *v118;
  unint64_t v119;
  unint64_t v120;
  std::__shared_weak_count *v121;
  unint64_t *v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  std::__shared_weak_count *v128;
  unint64_t *v129;
  unint64_t v130;
  unint64_t v131;
  std::__shared_weak_count *v132;
  unint64_t *v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  std::__shared_weak_count *v139;
  unint64_t *v140;
  unint64_t v141;
  unint64_t v142;
  std::__shared_weak_count *v143;
  unint64_t *v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  std::__shared_weak_count *v150;
  unint64_t *v151;
  unint64_t v152;
  unint64_t v153;
  std::__shared_weak_count *v154;
  unint64_t *v155;
  unint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  std::__shared_weak_count *v161;
  unint64_t *v162;
  unint64_t v163;
  unint64_t v164;
  std::__shared_weak_count *v165;
  unint64_t *v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  std::__shared_weak_count *v172;
  unint64_t *v173;
  unint64_t v174;
  unint64_t v175;
  std::__shared_weak_count *v176;
  unint64_t *v177;
  unint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  std::__shared_weak_count *v183;
  unint64_t *v184;
  unint64_t v185;
  unint64_t v186;
  std::__shared_weak_count *v187;
  unint64_t *v188;
  unint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  std::__shared_weak_count *v194;
  unint64_t *v195;
  unint64_t v196;
  unint64_t v197;
  std::__shared_weak_count *v198;
  unint64_t *v199;
  unint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  std::__shared_weak_count *v205;
  unint64_t *v206;
  unint64_t v207;
  unint64_t v208;
  std::__shared_weak_count *v209;
  unint64_t *v210;
  unint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  std::__shared_weak_count *v216;
  unint64_t *v217;
  unint64_t v218;
  unint64_t v219;
  std::__shared_weak_count *v220;
  unint64_t *v221;
  unint64_t v222;
  unint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  std::__shared_weak_count *v227;
  unint64_t *v228;
  unint64_t v229;
  unint64_t v230;
  std::__shared_weak_count *v231;
  unint64_t *v232;
  unint64_t v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  std::__shared_weak_count *v238;
  unint64_t *v239;
  unint64_t v240;
  unint64_t v241;
  std::__shared_weak_count *v242;
  unint64_t *v243;
  unint64_t v244;
  unint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  std::__shared_weak_count *v249;
  unint64_t *v250;
  unint64_t v251;
  unint64_t v252;
  std::__shared_weak_count *v253;
  unint64_t *v254;
  unint64_t v255;
  unint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  std::__shared_weak_count *v260;
  unint64_t *v261;
  unint64_t v262;
  unint64_t v263;
  std::__shared_weak_count *v264;
  unint64_t *v265;
  unint64_t v266;
  unint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  std::__shared_weak_count *v271;
  unint64_t *v272;
  unint64_t v273;
  unint64_t v274;
  std::__shared_weak_count *v275;
  unint64_t *v276;
  unint64_t v277;
  unint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  std::__shared_weak_count *v282;
  unint64_t *v283;
  unint64_t v284;
  unint64_t v285;
  std::__shared_weak_count *v286;
  unint64_t *v287;
  unint64_t v288;
  unint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  std::__shared_weak_count *v293;
  unint64_t *v294;
  unint64_t v295;
  unint64_t v296;
  std::__shared_weak_count *v297;
  unint64_t *v298;
  unint64_t v299;
  unint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  std::__shared_weak_count *v304;
  unint64_t *v305;
  unint64_t v306;
  unint64_t v307;
  std::__shared_weak_count *v308;
  unint64_t *v309;
  unint64_t v310;
  unint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  std::__shared_weak_count *v315;
  unint64_t *v316;
  unint64_t v317;
  unint64_t v318;
  std::__shared_weak_count *v319;
  unint64_t *v320;
  unint64_t v321;
  unint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  std::__shared_weak_count *v326;
  unint64_t *v327;
  unint64_t v328;
  unint64_t v329;
  std::__shared_weak_count *v330;
  unint64_t *v331;
  unint64_t v332;
  unint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  std::__shared_weak_count *v337;
  unint64_t *v338;
  unint64_t v339;
  unint64_t v340;
  std::__shared_weak_count *v341;
  unint64_t *v342;
  unint64_t v343;
  unint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  std::__shared_weak_count *v348;
  unint64_t *v349;
  unint64_t v350;
  unint64_t v351;
  std::__shared_weak_count *v352;
  unint64_t *v353;
  unint64_t v354;
  unint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  std::__shared_weak_count *v359;
  unint64_t *v360;
  unint64_t v361;
  unint64_t v362;
  std::__shared_weak_count *v363;
  unint64_t *v364;
  unint64_t v365;
  unint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  std::__shared_weak_count *v370;
  unint64_t *v371;
  unint64_t v372;
  unint64_t v373;
  std::__shared_weak_count *v374;
  unint64_t *v375;
  unint64_t v376;
  unint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  std::__shared_weak_count *v381;
  unint64_t *v382;
  unint64_t v383;
  unint64_t v384;
  std::__shared_weak_count *v385;
  unint64_t *v386;
  unint64_t v387;
  unint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  std::__shared_weak_count *v392;
  unint64_t *v393;
  unint64_t v394;
  unint64_t v395;
  std::__shared_weak_count *v396;
  unint64_t *v397;
  unint64_t v398;
  unint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  std::__shared_weak_count *v403;
  unint64_t *v404;
  unint64_t v405;
  unint64_t v406;
  std::__shared_weak_count *v407;
  unint64_t *v408;
  unint64_t v409;
  unint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  std::__shared_weak_count *v414;
  unint64_t *v415;
  unint64_t v416;
  unint64_t v417;
  std::__shared_weak_count *v418;
  unint64_t *v419;
  unint64_t v420;
  unint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  std::__shared_weak_count *v425;
  unint64_t *v426;
  unint64_t v427;
  unint64_t v428;
  std::__shared_weak_count *v429;
  unint64_t *v430;
  unint64_t v431;
  unint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  std::__shared_weak_count *v436;
  unint64_t *v437;
  unint64_t v438;
  unint64_t v439;
  std::__shared_weak_count *v440;
  unint64_t *v441;
  unint64_t v442;
  unint64_t v443;
  int v444;
  int v445;
  uint64_t v446;
  uint64_t v447;
  std::__shared_weak_count *v448;
  unint64_t *v449;
  unint64_t v450;
  unint64_t v451;
  int v452;
  unsigned int v453;
  uint64_t v454;
  unsigned int v455;
  uint64_t v456;
  uint64_t v457;
  int v458;
  int v459;
  uint64_t v460;
  uint64_t v461;
  std::__shared_weak_count *v462;
  unint64_t *v463;
  unint64_t v464;
  unint64_t v465;
  int v466;
  unsigned int v467;
  uint64_t v468;
  unsigned int v469;
  uint64_t v470;
  uint64_t v471;
  int v472;
  int v473;
  uint64_t v474;
  uint64_t v475;
  std::__shared_weak_count *v476;
  unint64_t *v477;
  unint64_t v478;
  unint64_t v479;
  int v480;
  int v481;
  unsigned int v482;
  uint64_t v483;
  unsigned int v484;
  uint64_t v485;
  uint64_t v486;
  int v487;
  int v488;
  uint64_t v489;
  uint64_t v490;
  std::__shared_weak_count *v491;
  unint64_t *v492;
  unint64_t v493;
  unint64_t v494;
  int v495;
  unsigned int v496;
  uint64_t v497;
  unsigned int v498;
  uint64_t v499;
  uint64_t v500;
  int v501;
  int v502;
  uint64_t v503;
  uint64_t v504;
  std::__shared_weak_count *v505;
  unint64_t *v506;
  unint64_t v507;
  unint64_t v508;
  int v509;
  int v510;
  unsigned int v511;
  uint64_t v512;
  unsigned int v513;
  uint64_t v514;
  uint64_t v515;
  int v516;
  int v517;
  uint64_t v518;
  uint64_t v519;
  std::__shared_weak_count *v520;
  unint64_t *v521;
  unint64_t v522;
  unint64_t v523;
  int v524;
  unsigned int v525;
  uint64_t v526;
  unsigned int v527;
  uint64_t v528;
  uint64_t v529;
  int v530;
  int v531;
  uint64_t v532;
  uint64_t v533;
  std::__shared_weak_count *v534;
  unint64_t *v535;
  unint64_t v536;
  unint64_t v537;
  int v538;
  unsigned int v539;
  uint64_t v540;
  unsigned int v541;
  uint64_t v542;
  uint64_t v543;
  int v544;
  int v545;
  uint64_t v546;
  uint64_t v547;
  std::__shared_weak_count *v548;
  unint64_t *v549;
  unint64_t v550;
  unint64_t v551;
  int v552;
  int v553;
  unsigned int v554;
  uint64_t v555;
  unsigned int v556;
  uint64_t v557;
  uint64_t v558;
  int v559;
  int v560;
  uint64_t v561;
  uint64_t v562;
  std::__shared_weak_count *v563;
  unint64_t *v564;
  unint64_t v565;
  unint64_t v566;
  int v567;
  unsigned int v568;
  uint64_t v569;
  unsigned int v570;
  uint64_t v571;
  uint64_t v572;
  int v573;
  int v574;
  uint64_t v575;
  uint64_t v576;
  std::__shared_weak_count *v577;
  unint64_t *v578;
  unint64_t v579;
  unint64_t v580;
  int v581;
  unsigned int v582;
  uint64_t v583;
  unsigned int v584;
  uint64_t v585;
  uint64_t v586;
  int v587;
  int v588;
  uint64_t v589;
  uint64_t v590;
  std::__shared_weak_count *v591;
  unint64_t *v592;
  unint64_t v593;
  unint64_t v594;
  int v595;
  unsigned int v596;
  uint64_t v597;
  unsigned int v598;
  uint64_t v599;
  uint64_t v600;
  int v601;
  int v602;
  uint64_t v603;
  uint64_t v604;
  std::__shared_weak_count *v605;
  unint64_t *v606;
  unint64_t v607;
  unint64_t v608;
  int v609;
  unsigned int v610;
  uint64_t v611;
  unsigned int v612;
  uint64_t v613;
  uint64_t v614;
  int v615;
  int v616;
  uint64_t v617;
  uint64_t v618;
  std::__shared_weak_count *v619;
  unint64_t *v620;
  unint64_t v621;
  unint64_t v622;
  int v623;
  unsigned int v624;
  uint64_t v625;
  unsigned int v626;
  uint64_t v627;
  uint64_t v628;
  int v629;
  int v630;
  uint64_t v631;
  uint64_t v632;
  std::__shared_weak_count *v633;
  unint64_t *v634;
  unint64_t v635;
  unint64_t v636;
  int v637;
  unsigned int v638;
  uint64_t v639;
  unsigned int v640;
  uint64_t v641;
  uint64_t v642;
  int v643;
  int v644;
  uint64_t v645;
  uint64_t v646;
  std::__shared_weak_count *v647;
  unint64_t *v648;
  unint64_t v649;
  unint64_t v650;
  int v651;
  unsigned int v652;
  uint64_t v653;
  unsigned int v654;
  uint64_t v655;
  uint64_t v656;
  int v657;
  int v658;
  uint64_t v659;
  uint64_t v660;
  std::__shared_weak_count *v661;
  unint64_t *v662;
  unint64_t v663;
  unint64_t v664;
  int v665;
  unsigned int v666;
  uint64_t v667;
  unsigned int v668;
  uint64_t v669;
  uint64_t v670;
  int v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  std::__shared_weak_count *v675;
  unint64_t *v676;
  unint64_t v677;
  unint64_t v678;
  int v679;
  int v680;
  int v681;
  uint64_t v682;
  uint64_t v683;
  std::__shared_weak_count *v684;
  unint64_t *v685;
  unint64_t v686;
  unint64_t v687;
  int v688;
  unsigned int v689;
  uint64_t v690;
  unsigned int v691;
  uint64_t v692;
  uint64_t v693;
  int v694;
  int v695;
  uint64_t v696;
  uint64_t v697;
  std::__shared_weak_count *v698;
  unint64_t *v699;
  unint64_t v700;
  unint64_t v701;
  int v702;
  unsigned int v703;
  uint64_t v704;
  unsigned int v705;
  uint64_t v706;
  uint64_t v707;
  int v708;
  int v709;
  uint64_t v710;
  uint64_t v711;
  std::__shared_weak_count *v712;
  unint64_t *v713;
  unint64_t v714;
  unint64_t v715;
  int v716;
  unsigned int v717;
  uint64_t v718;
  unsigned int v719;
  uint64_t v720;
  uint64_t v721;
  int v722;
  int v723;
  uint64_t v724;
  uint64_t v725;
  std::__shared_weak_count *v726;
  unint64_t *v727;
  unint64_t v728;
  unint64_t v729;
  int v730;
  unsigned int v731;
  uint64_t v732;
  unsigned int v733;
  uint64_t v734;
  uint64_t v735;
  int v736;
  int v737;
  uint64_t v738;
  uint64_t v739;
  std::__shared_weak_count *v740;
  unint64_t *v741;
  unint64_t v742;
  unint64_t v743;
  int v744;
  unsigned int v745;
  uint64_t v746;
  unsigned int v747;
  uint64_t v748;
  uint64_t v749;
  int v750;
  int v751;
  uint64_t v752;
  uint64_t v753;
  std::__shared_weak_count *v754;
  unint64_t *v755;
  unint64_t v756;
  unint64_t v757;
  int v758;
  unsigned int v759;
  uint64_t v760;
  unsigned int v761;
  uint64_t v762;
  uint64_t v763;
  int v764;
  int v765;
  uint64_t v766;
  uint64_t v767;
  std::__shared_weak_count *v768;
  unint64_t *v769;
  unint64_t v770;
  unint64_t v771;
  int v772;
  int v773;
  unsigned int v774;
  uint64_t v775;
  unsigned int v776;
  uint64_t v777;
  uint64_t v778;
  int v779;
  int v780;
  uint64_t v781;
  uint64_t v782;
  std::__shared_weak_count *v783;
  unint64_t *v784;
  unint64_t v785;
  unint64_t v786;
  int v787;
  int v788;
  unsigned int v789;
  uint64_t v790;
  unsigned int v791;
  uint64_t v792;
  uint64_t v793;
  int v794;
  int v795;
  uint64_t v796;
  uint64_t v797;
  std::__shared_weak_count *v798;
  unint64_t *v799;
  unint64_t v800;
  unint64_t v801;
  int v802;
  unsigned int v803;
  uint64_t v804;
  unsigned int v805;
  uint64_t v806;
  uint64_t v807;
  int v808;
  int v809;
  uint64_t v810;
  uint64_t v811;
  std::__shared_weak_count *v812;
  unint64_t *v813;
  unint64_t v814;
  unint64_t v815;
  int v816;
  unsigned int v817;
  uint64_t v818;
  unsigned int v819;
  uint64_t v820;
  uint64_t v821;
  int v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  std::__shared_weak_count *v826;
  unint64_t *v827;
  unint64_t v828;
  unint64_t v829;
  int v830;
  int v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  std::__shared_weak_count *v835;
  unint64_t *v836;
  unint64_t v837;
  unint64_t v838;
  int v839;
  int v840;
  uint64_t v841;
  uint64_t v842;
  uint64_t v843;
  std::__shared_weak_count *v844;
  unint64_t *v845;
  unint64_t v846;
  unint64_t v847;
  int v848;
  uint64_t v849;
  std::__shared_weak_count *v850;
  unint64_t *v851;
  unint64_t v852;
  int v853;
  int v854;
  uint64_t v855;
  uint64_t v856;
  std::__shared_weak_count *v857;
  unint64_t *v858;
  unint64_t v859;
  unint64_t v860;
  int v861;
  int v862;
  unsigned int v863;
  uint64_t v864;
  unsigned int v865;
  uint64_t v866;
  uint64_t v867;
  int v868;
  int v869;
  uint64_t v870;
  uint64_t v871;
  std::__shared_weak_count *v872;
  unint64_t *v873;
  unint64_t v874;
  unint64_t v875;
  int v876;
  unsigned int v877;
  uint64_t v878;
  unsigned int v879;
  uint64_t v880;
  uint64_t v881;
  int v882;
  int v883;
  uint64_t v884;
  uint64_t v885;
  std::__shared_weak_count *v886;
  unint64_t *v887;
  unint64_t v888;
  unint64_t v889;
  int v890;
  unsigned int v891;
  uint64_t v892;
  unsigned int v893;
  uint64_t v894;
  uint64_t v895;
  int v896;
  int v897;
  uint64_t v898;
  uint64_t v899;
  std::__shared_weak_count *v900;
  unint64_t *v901;
  unint64_t v902;
  unint64_t v903;
  int v904;
  int v905;
  unsigned int v906;
  uint64_t v907;
  unsigned int v908;
  uint64_t v909;
  uint64_t v910;
  int v911;
  int v912;
  uint64_t v913;
  uint64_t v914;
  std::__shared_weak_count *v915;
  unint64_t *v916;
  unint64_t v917;
  unint64_t v918;
  int v919;
  unsigned int v920;
  uint64_t v921;
  unsigned int v922;
  uint64_t v923;
  uint64_t v924;
  int v925;
  int v926;
  uint64_t v927;
  uint64_t v928;
  std::__shared_weak_count *v929;
  unint64_t *v930;
  unint64_t v931;
  unint64_t v932;
  int v933;
  unsigned int v934;
  uint64_t v935;
  unsigned int v936;
  uint64_t v937;
  uint64_t v938;
  int v939;
  int v940;
  uint64_t v941;
  uint64_t v942;
  std::__shared_weak_count *v943;
  unint64_t *v944;
  unint64_t v945;
  unint64_t v946;
  int v947;
  unsigned int v948;
  uint64_t v949;
  unsigned int v950;
  uint64_t v951;
  uint64_t v952;
  int v953;
  int v954;
  uint64_t v955;
  uint64_t v956;
  std::__shared_weak_count *v957;
  unint64_t *v958;
  unint64_t v959;
  unint64_t v960;
  int v961;
  int v962;
  unsigned int v963;
  uint64_t v964;
  unsigned int v965;
  uint64_t v966;
  uint64_t v967;
  int v968;
  int v969;
  uint64_t v970;
  uint64_t v971;
  std::__shared_weak_count *v972;
  unint64_t *v973;
  unint64_t v974;
  unint64_t v975;
  int v976;
  unsigned int v977;
  uint64_t v978;
  unsigned int v979;
  uint64_t v980;
  uint64_t v981;
  int v982;
  int v983;
  uint64_t v984;
  uint64_t v985;
  std::__shared_weak_count *v986;
  unint64_t *v987;
  unint64_t v988;
  unint64_t v989;
  int v990;
  int v991;
  unsigned int v992;
  uint64_t v993;
  unsigned int v994;
  uint64_t v995;
  uint64_t v996;
  uint64_t v997;
  uint64_t v998;
  unsigned int v999;
  uint64_t v1000;
  uint64_t v1001;
  unsigned int v1002;
  uint64_t v1003;
  uint64_t v1004;
  unsigned int v1005;
  uint64_t v1006;
  uint64_t v1007;
  unsigned int v1008;
  uint64_t v1009;
  uint64_t v1010;
  unsigned int v1011;
  uint64_t v1012;
  uint64_t v1013;
  unsigned int v1014;
  uint64_t v1015;
  uint64_t v1016;
  unsigned int v1017;
  uint64_t v1018;
  uint64_t v1019;
  unsigned int v1020;
  uint64_t v1021;
  uint64_t v1022;
  unsigned int v1023;
  uint64_t v1024;
  uint64_t v1025;
  unsigned int v1026;
  uint64_t v1027;
  uint64_t v1028;
  unsigned int v1029;
  uint64_t v1030;
  uint64_t v1031;
  unsigned int v1032;
  uint64_t v1033;
  uint64_t v1034;
  unsigned int v1035;
  uint64_t v1036;
  uint64_t v1037;
  unsigned int v1038;
  uint64_t v1039;
  uint64_t v1040;
  unsigned int v1041;
  uint64_t v1042;
  uint64_t v1043;
  unsigned int v1044;
  uint64_t v1045;
  unint64_t *v1046;
  uint64_t v1047;
  uint64_t v1048;
  unsigned int v1049;
  uint64_t v1050;
  uint64_t v1051;
  unsigned int v1052;
  uint64_t v1053;
  uint64_t v1054;
  unsigned int v1055;
  uint64_t v1056;
  uint64_t v1057;
  unsigned int v1058;
  uint64_t v1059;
  uint64_t v1060;
  unsigned int v1061;
  uint64_t v1062;
  uint64_t v1063;
  unsigned int v1064;
  uint64_t v1065;
  uint64_t v1066;
  unsigned int v1067;
  uint64_t v1068;
  uint64_t v1069;
  unsigned int v1070;
  uint64_t v1071;
  uint64_t v1072;
  unsigned int v1073;
  uint64_t v1074;
  uint64_t v1075;
  unsigned int v1076;
  uint64_t v1077;
  unint64_t *v1078;
  uint64_t v1079;
  unint64_t *v1080;
  uint64_t v1081;
  uint64_t v1082;
  unsigned int v1083;
  uint64_t v1084;
  uint64_t v1085;
  unsigned int v1086;
  uint64_t v1087;
  uint64_t v1088;
  unsigned int v1089;
  uint64_t v1090;
  uint64_t v1091;
  unsigned int v1092;
  uint64_t v1093;
  uint64_t v1094;
  unsigned int v1095;
  uint64_t v1096;
  uint64_t v1097;
  unsigned int v1098;
  uint64_t v1099;
  uint64_t v1100;
  unsigned int v1101;
  uint64_t v1102;
  uint64_t v1103;
  unsigned int v1104;
  uint64_t v1105;
  uint64_t v1106;
  unsigned int v1107;
  uint64_t v1108;
  uint64_t v1109;
  unsigned int v1110;
  unsigned int v1111;
  uint64_t v1112;
  uint64_t v1113;
  unint64_t *v1114;
  unsigned int v1115;
  uint64_t v1116;
  uint64_t v1117;
  unint64_t *v1118;
  unsigned int v1119;
  uint64_t v1120;
  uint64_t v1121;
  unint64_t *v1122;
  unsigned int v1123;
  uint64_t v1124;
  uint64_t v1125;
  unint64_t *v1126;
  unsigned int v1127;
  uint64_t v1128;
  uint64_t v1129;
  unint64_t *v1130;
  unsigned int v1131;
  uint64_t v1132;
  uint64_t v1133;
  unint64_t *v1134;
  unsigned int v1135;
  uint64_t v1136;
  uint64_t v1137;
  unint64_t *v1138;
  unsigned int v1139;
  uint64_t v1140;
  uint64_t v1141;
  unint64_t *v1142;
  unsigned int v1143;
  uint64_t v1144;
  uint64_t v1145;
  unint64_t *v1146;
  unsigned int v1147;
  uint64_t v1148;
  uint64_t v1149;
  unint64_t *v1150;
  unsigned int v1151;
  uint64_t v1152;
  uint64_t v1153;
  unint64_t *v1154;
  unsigned int v1155;
  uint64_t v1156;
  uint64_t v1157;
  unint64_t *v1158;
  unsigned int v1159;
  uint64_t v1160;
  uint64_t v1161;
  unint64_t *v1162;
  unsigned int v1163;
  uint64_t v1164;
  uint64_t v1165;
  unint64_t *v1166;
  unsigned int v1167;
  uint64_t v1168;
  uint64_t v1169;
  unint64_t *v1170;
  unsigned int v1171;
  uint64_t v1172;
  uint64_t v1173;
  unint64_t *v1174;
  unsigned int v1175;
  uint64_t v1176;
  uint64_t v1177;
  unint64_t *v1178;
  unsigned int v1179;
  uint64_t v1180;
  uint64_t v1181;
  unint64_t *v1182;
  unsigned int v1183;
  uint64_t v1184;
  uint64_t v1185;
  unint64_t *v1186;
  unsigned int v1187;
  uint64_t v1188;
  uint64_t v1189;
  unint64_t *v1190;
  unsigned int v1191;
  uint64_t v1192;
  uint64_t v1193;
  unint64_t *v1194;
  unsigned int v1195;
  uint64_t v1196;
  uint64_t v1197;
  unint64_t *v1198;
  unsigned int v1199;
  uint64_t v1200;
  uint64_t v1201;
  unint64_t *v1202;
  unsigned int v1203;
  uint64_t v1204;
  uint64_t v1205;
  unint64_t *v1206;
  unsigned int v1207;
  uint64_t v1208;
  uint64_t v1209;
  unint64_t *v1210;
  unsigned int v1211;
  uint64_t v1212;
  uint64_t v1213;
  unint64_t *v1214;
  unsigned int v1215;
  uint64_t v1216;
  uint64_t v1217;
  unint64_t *v1218;
  unsigned int v1219;
  uint64_t v1220;
  uint64_t v1221;
  unint64_t *v1222;
  unsigned int v1223;
  uint64_t v1224;
  uint64_t v1225;
  unint64_t *v1226;
  unsigned int v1227;
  uint64_t v1228;
  uint64_t v1229;
  unint64_t *v1230;
  unsigned int v1231;
  uint64_t v1232;
  uint64_t v1233;
  unint64_t *v1234;
  unsigned int v1235;
  uint64_t v1236;
  uint64_t v1237;
  unint64_t *v1238;
  unsigned int v1239;
  uint64_t v1240;
  uint64_t v1241;
  unint64_t *v1242;
  unsigned int v1243;
  uint64_t v1244;
  uint64_t v1245;
  unint64_t *v1246;
  unsigned int v1247;
  uint64_t v1248;
  uint64_t v1249;
  unint64_t *v1250;
  unsigned int v1251;
  uint64_t v1252;
  uint64_t v1253;
  unint64_t *v1254;
  uint64_t v1255;
  uint64_t v1256;
  uint64_t v1257;
  uint64_t v1258;
  uint64_t v1259;
  uint64_t v1260;
  uint64_t v1261;
  uint64_t v1262;
  uint64_t v1263;
  uint64_t v1264;
  uint64_t v1265;
  uint64_t v1266;
  uint64_t v1267;
  uint64_t v1268;
  uint64_t v1269;
  uint64_t v1270;
  uint64_t v1271;
  uint64_t v1272;
  uint64_t v1273;
  uint64_t v1274;
  uint64_t v1275;
  uint64_t v1276;
  uint64_t v1277;
  uint64_t v1278;
  uint64_t v1279;
  uint64_t v1280;
  uint64_t v1281;
  uint64_t v1282;
  uint64_t v1283;
  uint64_t v1284;
  uint64_t v1285;
  uint64_t v1286;
  uint64_t v1287;
  uint64_t v1288;
  uint64_t v1289;
  uint64_t v1290;
  int v1291;
  int v1292;
  int v1293;
  int v1294;
  int v1295;
  int v1296;
  int v1297;
  int v1298;
  int v1299;
  int v1300;
  int v1301;
  int v1302;
  int v1303;
  int v1304;
  int v1305;
  int v1306;
  int v1307;
  int v1308;
  int v1309;
  int v1310;
  int v1311;
  int v1312;
  int v1313;
  int v1314;
  int v1315;
  int v1316;
  int v1317;
  uint64_t v1318;
  std::__shared_weak_count *v1319;
  uint64_t v1320;
  unsigned int v1321;
  int v1322;
  int v1323;
  unsigned int v1324;
  int v1325;
  unsigned int v1326;
  unsigned int v1327;
  char v1328;
  char v1329;
  uint64_t v1330;
  uint64_t v1331;
  uint64_t v1332;

  switch(a1)
  {
    case 0:
      sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_20B532360);
      abort();
    case 1:
      sub_20B2D6D24(a3, (uint64_t)&v1318);
      v4 = *a2;
      v5 = v1321;
      v6 = v1318;
      if (!v1318)
        goto LABEL_1332;
      v7 = v1319;
      if (v1319)
      {
        p_shared_owners = (unint64_t *)&v1319->__shared_owners_;
        do
          v9 = __ldxr(p_shared_owners);
        while (__stxr(v9 + 1, p_shared_owners));
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        v6 = v1318;
        v11 = v1319;
        if (v1319)
        {
          v12 = (unint64_t *)&v1319->__shared_owners_;
          do
            v13 = __ldxr(v12);
          while (__stxr(v13 + 1, v12));
          do
            v14 = __ldaxr(v12);
          while (__stlxr(v14 - 1, v12));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
      }
      if (BYTE1(v1325))
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v1330, v6, 0);
      else
LABEL_1332:
        v1330 = 0;
      if (!v1321)
        goto LABEL_1355;
      v840 = v1322;
      if (!v1322)
        goto LABEL_1355;
      v841 = v1324;
      v842 = v1320;
      if ((_BYTE)v1325 && v1320)
      {
        v843 = v1318;
        v844 = v1319;
        if (v1319)
        {
          v845 = (unint64_t *)&v1319->__shared_owners_;
          do
            v846 = __ldxr(v845);
          while (__stxr(v846 + 1, v845));
          do
            v847 = __ldaxr(v845);
          while (__stlxr(v847 - 1, v845));
          if (!v847)
          {
            ((void (*)(std::__shared_weak_count *))v844->__on_zero_shared)(v844);
            std::__shared_weak_count::__release_weak(v844);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v843 + 88))(v843, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v842 = v1320;
      }
      v848 = v840 - 1;
      if (v840 == 1)
        goto LABEL_1351;
      if ((_DWORD)v5)
      {
        while (v842
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = v5;
          v1332 = v842;
          sub_20B506898(v4, (size_t *)&v1331);
          v842 += v841;
          if (!--v848)
            goto LABEL_1351;
        }
        goto LABEL_2412;
      }
      do
      {
        v1331 = v5;
        v1332 = v842;
        sub_20B506898(v4, (size_t *)&v1331);
        v842 += v841;
        --v848;
      }
      while (v848);
LABEL_1351:
      if ((_DWORD)v5
        && !v842
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_2412:
        abort();
      }
      v1331 = v5;
      v1332 = v842;
      sub_20B506898(v4, (size_t *)&v1331);
LABEL_1355:
      v849 = v1330;
      v1330 = 0;
      if (v849)
        (*(void (**)(uint64_t))(*(_QWORD *)v849 + 8))(v849);
      v850 = v1319;
      if (!v1319)
        return;
      v851 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v851);
      while (__stlxr(v852 - 1, v851));
      goto LABEL_2373;
    case 2:
      sub_20B2D7590(a3, (uint64_t)&v1318);
      v323 = *a2;
      v324 = v1321;
      v325 = v1318;
      if (!v1318)
        goto LABEL_1314;
      v326 = v1319;
      if (v1319)
      {
        v327 = (unint64_t *)&v1319->__shared_owners_;
        do
          v328 = __ldxr(v327);
        while (__stxr(v328 + 1, v327));
        do
          v329 = __ldaxr(v327);
        while (__stlxr(v329 - 1, v327));
        if (!v329)
        {
          ((void (*)(std::__shared_weak_count *))v326->__on_zero_shared)(v326);
          std::__shared_weak_count::__release_weak(v326);
        }
        v325 = v1318;
        v330 = v1319;
        if (v1319)
        {
          v331 = (unint64_t *)&v1319->__shared_owners_;
          do
            v332 = __ldxr(v331);
          while (__stxr(v332 + 1, v331));
          do
            v333 = __ldaxr(v331);
          while (__stlxr(v333 - 1, v331));
          if (!v333)
          {
            ((void (*)(std::__shared_weak_count *))v330->__on_zero_shared)(v330);
            std::__shared_weak_count::__release_weak(v330);
          }
        }
      }
      if (BYTE1(v1325))
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v325 + 96))(&v1330, v325, 0);
      else
LABEL_1314:
        v1330 = 0;
      if (!v1321)
        goto LABEL_1882;
      v831 = v1322;
      if (!v1322)
        goto LABEL_1882;
      v832 = v1324;
      v833 = v1320;
      if ((_BYTE)v1325 && v1320)
      {
        v834 = v1318;
        v835 = v1319;
        if (v1319)
        {
          v836 = (unint64_t *)&v1319->__shared_owners_;
          do
            v837 = __ldxr(v836);
          while (__stxr(v837 + 1, v836));
          do
            v838 = __ldaxr(v836);
          while (__stlxr(v838 - 1, v836));
          if (!v838)
          {
            ((void (*)(std::__shared_weak_count *))v835->__on_zero_shared)(v835);
            std::__shared_weak_count::__release_weak(v835);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v834 + 88))(v834, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v833 = v1320;
      }
      v839 = v831 - 1;
      if (v831 == 1)
        goto LABEL_1878;
      if ((_DWORD)v324)
      {
        while (v833
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = v324;
          v1332 = v833;
          sub_20B509034(v323, (uint64_t)&v1331);
          v833 += 2 * v832;
          if (!--v839)
            goto LABEL_1878;
        }
        goto LABEL_2415;
      }
      do
      {
        v1331 = v324;
        v1332 = v833;
        sub_20B509034(v323, (uint64_t)&v1331);
        v833 += 2 * v832;
        --v839;
      }
      while (v839);
LABEL_1878:
      if ((_DWORD)v324
        && !v833
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_2415:
        abort();
      }
      v1331 = v324;
      v1332 = v833;
      sub_20B509034(v323, (uint64_t)&v1331);
LABEL_1882:
      v1079 = v1330;
      v1330 = 0;
      if (v1079)
        (*(void (**)(uint64_t))(*(_QWORD *)v1079 + 8))(v1079);
      v850 = v1319;
      if (!v1319)
        return;
      v1080 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1080);
      while (__stlxr(v852 - 1, v1080));
      goto LABEL_2373;
    case 3:
      sub_20B372128(a3, (uint64_t)&v1318);
      v312 = *a2;
      v313 = v1321;
      v314 = v1318;
      if (!v1318)
        goto LABEL_1296;
      v315 = v1319;
      if (v1319)
      {
        v316 = (unint64_t *)&v1319->__shared_owners_;
        do
          v317 = __ldxr(v316);
        while (__stxr(v317 + 1, v316));
        do
          v318 = __ldaxr(v316);
        while (__stlxr(v318 - 1, v316));
        if (!v318)
        {
          ((void (*)(std::__shared_weak_count *))v315->__on_zero_shared)(v315);
          std::__shared_weak_count::__release_weak(v315);
        }
        v314 = v1318;
        v319 = v1319;
        if (v1319)
        {
          v320 = (unint64_t *)&v1319->__shared_owners_;
          do
            v321 = __ldxr(v320);
          while (__stxr(v321 + 1, v320));
          do
            v322 = __ldaxr(v320);
          while (__stlxr(v322 - 1, v320));
          if (!v322)
          {
            ((void (*)(std::__shared_weak_count *))v319->__on_zero_shared)(v319);
            std::__shared_weak_count::__release_weak(v319);
          }
        }
      }
      if (BYTE1(v1325))
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v314 + 96))(&v1330, v314, 0);
      else
LABEL_1296:
        v1330 = 0;
      if (!v1321)
        goto LABEL_1871;
      v822 = v1322;
      if (!v1322)
        goto LABEL_1871;
      v823 = v1324;
      v824 = v1320;
      if ((_BYTE)v1325 && v1320)
      {
        v825 = v1318;
        v826 = v1319;
        if (v1319)
        {
          v827 = (unint64_t *)&v1319->__shared_owners_;
          do
            v828 = __ldxr(v827);
          while (__stxr(v828 + 1, v827));
          do
            v829 = __ldaxr(v827);
          while (__stlxr(v829 - 1, v827));
          if (!v829)
          {
            ((void (*)(std::__shared_weak_count *))v826->__on_zero_shared)(v826);
            std::__shared_weak_count::__release_weak(v826);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v825 + 88))(v825, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v824 = v1320;
      }
      v830 = v822 - 1;
      if (v822 == 1)
        goto LABEL_1867;
      if ((_DWORD)v313)
      {
        while (v824
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = v313;
          v1332 = v824;
          sub_20B5098BC(v312, &v1331);
          v824 += 2 * v823;
          if (!--v830)
            goto LABEL_1867;
        }
        goto LABEL_2414;
      }
      do
      {
        v1331 = v313;
        v1332 = v824;
        sub_20B5098BC(v312, &v1331);
        v824 += 2 * v823;
        --v830;
      }
      while (v830);
LABEL_1867:
      if ((_DWORD)v313
        && !v824
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_2414:
        abort();
      }
      v1331 = v313;
      v1332 = v824;
      sub_20B5098BC(v312, &v1331);
LABEL_1871:
      v1077 = v1330;
      v1330 = 0;
      if (v1077)
        (*(void (**)(uint64_t))(*(_QWORD *)v1077 + 8))(v1077);
      v850 = v1319;
      if (!v1319)
        return;
      v1078 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1078);
      while (__stlxr(v852 - 1, v1078));
      goto LABEL_2373;
    case 4:
      sub_20B3726DC(a3, (uint64_t)&v1318);
      v191 = *a2;
      v192 = v1321;
      v193 = v1318;
      if (!v1318)
        goto LABEL_1018;
      v194 = v1319;
      if (v1319)
      {
        v195 = (unint64_t *)&v1319->__shared_owners_;
        do
          v196 = __ldxr(v195);
        while (__stxr(v196 + 1, v195));
        do
          v197 = __ldaxr(v195);
        while (__stlxr(v197 - 1, v195));
        if (!v197)
        {
          ((void (*)(std::__shared_weak_count *))v194->__on_zero_shared)(v194);
          std::__shared_weak_count::__release_weak(v194);
        }
        v193 = v1318;
        v198 = v1319;
        if (v1319)
        {
          v199 = (unint64_t *)&v1319->__shared_owners_;
          do
            v200 = __ldxr(v199);
          while (__stxr(v200 + 1, v199));
          do
            v201 = __ldaxr(v199);
          while (__stlxr(v201 - 1, v199));
          if (!v201)
          {
            ((void (*)(std::__shared_weak_count *))v198->__on_zero_shared)(v198);
            std::__shared_weak_count::__release_weak(v198);
          }
        }
      }
      if (BYTE1(v1325))
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v193 + 96))(&v1330, v193, 0);
      else
LABEL_1018:
        v1330 = 0;
      if (!v1321)
        goto LABEL_1770;
      v671 = v1322;
      if (!v1322)
        goto LABEL_1770;
      v672 = v1324;
      v673 = v1320;
      if ((_BYTE)v1325 && v1320)
      {
        v674 = v1318;
        v675 = v1319;
        if (v1319)
        {
          v676 = (unint64_t *)&v1319->__shared_owners_;
          do
            v677 = __ldxr(v676);
          while (__stxr(v677 + 1, v676));
          do
            v678 = __ldaxr(v676);
          while (__stlxr(v678 - 1, v676));
          if (!v678)
          {
            ((void (*)(std::__shared_weak_count *))v675->__on_zero_shared)(v675);
            std::__shared_weak_count::__release_weak(v675);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v674 + 88))(v674, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v673 = v1320;
      }
      v679 = v671 - 1;
      if (v671 == 1)
        goto LABEL_1766;
      if ((_DWORD)v192)
      {
        while (v673
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = v192;
          v1332 = v673;
          sub_20B509D64(v191, (float **)&v1331);
          v673 += 4 * v672;
          if (!--v679)
            goto LABEL_1766;
        }
        goto LABEL_2413;
      }
      do
      {
        v1331 = v192;
        v1332 = v673;
        sub_20B509D64(v191, (float **)&v1331);
        v673 += 4 * v672;
        --v679;
      }
      while (v679);
LABEL_1766:
      if ((_DWORD)v192
        && !v673
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_2413:
        abort();
      }
      v1331 = v192;
      v1332 = v673;
      sub_20B509D64(v191, (float **)&v1331);
LABEL_1770:
      v1045 = v1330;
      v1330 = 0;
      if (v1045)
        (*(void (**)(uint64_t))(*(_QWORD *)v1045 + 8))(v1045);
      v850 = v1319;
      if (!v1319)
        return;
      v1046 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1046);
      while (__stlxr(v852 - 1, v1046));
      goto LABEL_2373;
    case 5:
      sub_20B372C90(a3, (uint64_t)&v1318);
      v279 = *a2;
      v280 = v1327;
      v281 = v1318;
      if (!v1318)
        goto LABEL_1218;
      v282 = v1319;
      if (v1319)
      {
        v283 = (unint64_t *)&v1319->__shared_owners_;
        do
          v284 = __ldxr(v283);
        while (__stxr(v284 + 1, v283));
        do
          v285 = __ldaxr(v283);
        while (__stlxr(v285 - 1, v283));
        if (!v285)
        {
          ((void (*)(std::__shared_weak_count *))v282->__on_zero_shared)(v282);
          std::__shared_weak_count::__release_weak(v282);
        }
        v281 = v1318;
        v286 = v1319;
        if (v1319)
        {
          v287 = (unint64_t *)&v1319->__shared_owners_;
          do
            v288 = __ldxr(v287);
          while (__stxr(v288 + 1, v287));
          do
            v289 = __ldaxr(v287);
          while (__stlxr(v289 - 1, v287));
          if (!v289)
          {
            ((void (*)(std::__shared_weak_count *))v286->__on_zero_shared)(v286);
            std::__shared_weak_count::__release_weak(v286);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v281 + 96))(&v1330, v281, 0);
      else
LABEL_1218:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2236;
      if (!v1322)
        goto LABEL_2236;
      v779 = v1323;
      if (!v1323)
        goto LABEL_2236;
      v780 = v1325;
      v1286 = v1326;
      v781 = v1320;
      if (v1328 && v1320)
      {
        v782 = v1318;
        v783 = v1319;
        if (v1319)
        {
          v784 = (unint64_t *)&v1319->__shared_owners_;
          do
            v785 = __ldxr(v784);
          while (__stxr(v785 + 1, v784));
          do
            v786 = __ldaxr(v784);
          while (__stlxr(v786 - 1, v784));
          if (!v786)
          {
            ((void (*)(std::__shared_weak_count *))v783->__on_zero_shared)(v783);
            std::__shared_weak_count::__release_weak(v783);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v782 + 88))(v782, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v781 = v1320;
      }
      v787 = v779 - 1;
      if (v779 == 1)
        goto LABEL_1843;
      if ((_DWORD)v280)
      {
        v788 = 0;
        while (1)
        {
          sub_20B50671C(v279);
          if (!v781)
            break;
          v789 = 0;
          v790 = v280;
          do
          {
            v1331 = 2;
            v1332 = v781 + v789;
            sub_20B506898(v279, (size_t *)&v1331);
            v789 += v780;
            --v790;
          }
          while (v790);
LABEL_1242:
          v793 = *(_QWORD *)(v279 + 56);
          *(_QWORD *)(v279 + 40) = *(_QWORD *)(v793 - 8);
          *(_QWORD *)(v279 + 56) = v793 - 8;
          if (*(_BYTE *)(v279 + 88))
            *(_BYTE *)(v279 + 88) = 0;
          v781 += v1286;
          if (++v788 == v779 - 1)
            goto LABEL_1843;
        }
        v791 = 0;
        v792 = v280;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 2;
          v1332 = v791;
          sub_20B506898(v279, (size_t *)&v1331);
          v791 += v780;
          if (!--v792)
            goto LABEL_1242;
        }
LABEL_2399:
        abort();
      }
      v781 += v1286 + v1286 * (unint64_t)(v779 - 2);
      do
      {
        sub_20B50671C(v279);
        v1068 = *(_QWORD *)(v279 + 56);
        *(_QWORD *)(v279 + 40) = *(_QWORD *)(v1068 - 8);
        *(_QWORD *)(v279 + 56) = v1068 - 8;
        if (*(_BYTE *)(v279 + 88))
          *(_BYTE *)(v279 + 88) = 0;
        --v787;
      }
      while (v787);
LABEL_1843:
      sub_20B50671C(v279);
      v1069 = v280;
      if ((_DWORD)v280)
      {
        if (!v781)
        {
          v1203 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 2;
            v1332 = v1203;
            sub_20B506898(v279, (size_t *)&v1331);
            v1203 += v780;
            if (!--v1069)
              goto LABEL_2234;
          }
          goto LABEL_2399;
        }
        v1070 = 0;
        do
        {
          v1331 = 2;
          v1332 = v781 + v1070;
          sub_20B506898(v279, (size_t *)&v1331);
          v1070 += v780;
          --v1069;
        }
        while (v1069);
      }
LABEL_2234:
      v1204 = *(_QWORD *)(v279 + 56);
      *(_QWORD *)(v279 + 40) = *(_QWORD *)(v1204 - 8);
      *(_QWORD *)(v279 + 56) = v1204 - 8;
      if (*(_BYTE *)(v279 + 88))
        *(_BYTE *)(v279 + 88) = 0;
LABEL_2236:
      v1205 = v1330;
      v1330 = 0;
      if (v1205)
        (*(void (**)(uint64_t))(*(_QWORD *)v1205 + 8))(v1205);
      v850 = v1319;
      if (!v1319)
        return;
      v1206 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1206);
      while (__stlxr(v852 - 1, v1206));
      goto LABEL_2373;
    case 6:
      sub_20B3732C4(a3, (uint64_t)&v1318);
      v180 = *a2;
      v181 = v1327;
      v182 = v1318;
      if (!v1318)
        goto LABEL_992;
      v183 = v1319;
      if (v1319)
      {
        v184 = (unint64_t *)&v1319->__shared_owners_;
        do
          v185 = __ldxr(v184);
        while (__stxr(v185 + 1, v184));
        do
          v186 = __ldaxr(v184);
        while (__stlxr(v186 - 1, v184));
        if (!v186)
        {
          ((void (*)(std::__shared_weak_count *))v183->__on_zero_shared)(v183);
          std::__shared_weak_count::__release_weak(v183);
        }
        v182 = v1318;
        v187 = v1319;
        if (v1319)
        {
          v188 = (unint64_t *)&v1319->__shared_owners_;
          do
            v189 = __ldxr(v188);
          while (__stxr(v189 + 1, v188));
          do
            v190 = __ldaxr(v188);
          while (__stlxr(v190 - 1, v188));
          if (!v190)
          {
            ((void (*)(std::__shared_weak_count *))v187->__on_zero_shared)(v187);
            std::__shared_weak_count::__release_weak(v187);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v182 + 96))(&v1330, v182, 0);
      else
LABEL_992:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2148;
      if (!v1322)
        goto LABEL_2148;
      v657 = v1323;
      if (!v1323)
        goto LABEL_2148;
      v658 = v1325;
      v1267 = v1326;
      v659 = v1320;
      if (v1328 && v1320)
      {
        v660 = v1318;
        v661 = v1319;
        if (v1319)
        {
          v662 = (unint64_t *)&v1319->__shared_owners_;
          do
            v663 = __ldxr(v662);
          while (__stxr(v663 + 1, v662));
          do
            v664 = __ldaxr(v662);
          while (__stlxr(v664 - 1, v662));
          if (!v664)
          {
            ((void (*)(std::__shared_weak_count *))v661->__on_zero_shared)(v661);
            std::__shared_weak_count::__release_weak(v661);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v660 + 88))(v660, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v659 = v1320;
      }
      v1303 = v657 - 1;
      if (v657 == 1)
        goto LABEL_1760;
      if ((_DWORD)v181)
      {
        v665 = 0;
        while (1)
        {
          sub_20B50671C(v180);
          if (!v659)
            break;
          v666 = 0;
          v667 = v181;
          do
          {
            v1331 = 2;
            v1332 = v659 + 2 * v666;
            sub_20B509034(v180, (uint64_t)&v1331);
            v666 += v658;
            --v667;
          }
          while (v667);
LABEL_1016:
          v670 = *(_QWORD *)(v180 + 56);
          *(_QWORD *)(v180 + 40) = *(_QWORD *)(v670 - 8);
          *(_QWORD *)(v180 + 56) = v670 - 8;
          if (*(_BYTE *)(v180 + 88))
            *(_BYTE *)(v180 + 88) = 0;
          v659 += 2 * v1267;
          if (++v665 == v1303)
            goto LABEL_1760;
        }
        v668 = 0;
        v669 = v181;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 2;
          v1332 = 2 * v668;
          sub_20B509034(v180, (uint64_t)&v1331);
          v668 += v658;
          if (!--v669)
            goto LABEL_1016;
        }
LABEL_2391:
        abort();
      }
      do
      {
        sub_20B50671C(v180);
        v1042 = *(_QWORD *)(v180 + 56);
        *(_QWORD *)(v180 + 40) = *(_QWORD *)(v1042 - 8);
        *(_QWORD *)(v180 + 56) = v1042 - 8;
        if (*(_BYTE *)(v180 + 88))
          *(_BYTE *)(v180 + 88) = 0;
        v659 += 2 * v1267;
        --v1303;
      }
      while (v1303);
LABEL_1760:
      sub_20B50671C(v180);
      v1043 = v181;
      if ((_DWORD)v181)
      {
        if (!v659)
        {
          v1171 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 2;
            v1332 = 2 * v1171;
            sub_20B509034(v180, (uint64_t)&v1331);
            v1171 += v658;
            if (!--v1043)
              goto LABEL_2146;
          }
          goto LABEL_2391;
        }
        v1044 = 0;
        do
        {
          v1331 = 2;
          v1332 = v659 + 2 * v1044;
          sub_20B509034(v180, (uint64_t)&v1331);
          v1044 += v658;
          --v1043;
        }
        while (v1043);
      }
LABEL_2146:
      v1172 = *(_QWORD *)(v180 + 56);
      *(_QWORD *)(v180 + 40) = *(_QWORD *)(v1172 - 8);
      *(_QWORD *)(v180 + 56) = v1172 - 8;
      if (*(_BYTE *)(v180 + 88))
        *(_BYTE *)(v180 + 88) = 0;
LABEL_2148:
      v1173 = v1330;
      v1330 = 0;
      if (v1173)
        (*(void (**)(uint64_t))(*(_QWORD *)v1173 + 8))(v1173);
      v850 = v1319;
      if (!v1319)
        return;
      v1174 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1174);
      while (__stlxr(v852 - 1, v1174));
      goto LABEL_2373;
    case 7:
      sub_20B3738FC(a3, (uint64_t)&v1318);
      v125 = *a2;
      v126 = v1327;
      v127 = v1318;
      if (!v1318)
        goto LABEL_862;
      v128 = v1319;
      if (v1319)
      {
        v129 = (unint64_t *)&v1319->__shared_owners_;
        do
          v130 = __ldxr(v129);
        while (__stxr(v130 + 1, v129));
        do
          v131 = __ldaxr(v129);
        while (__stlxr(v131 - 1, v129));
        if (!v131)
        {
          ((void (*)(std::__shared_weak_count *))v128->__on_zero_shared)(v128);
          std::__shared_weak_count::__release_weak(v128);
        }
        v127 = v1318;
        v132 = v1319;
        if (v1319)
        {
          v133 = (unint64_t *)&v1319->__shared_owners_;
          do
            v134 = __ldxr(v133);
          while (__stxr(v134 + 1, v133));
          do
            v135 = __ldaxr(v133);
          while (__stlxr(v135 - 1, v133));
          if (!v135)
          {
            ((void (*)(std::__shared_weak_count *))v132->__on_zero_shared)(v132);
            std::__shared_weak_count::__release_weak(v132);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v127 + 96))(&v1330, v127, 0);
      else
LABEL_862:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2093;
      if (!v1322)
        goto LABEL_2093;
      v587 = v1323;
      if (!v1323)
        goto LABEL_2093;
      v588 = v1325;
      v1262 = v1326;
      v589 = v1320;
      if (v1328 && v1320)
      {
        v590 = v1318;
        v591 = v1319;
        if (v1319)
        {
          v592 = (unint64_t *)&v1319->__shared_owners_;
          do
            v593 = __ldxr(v592);
          while (__stxr(v593 + 1, v592));
          do
            v594 = __ldaxr(v592);
          while (__stlxr(v594 - 1, v592));
          if (!v594)
          {
            ((void (*)(std::__shared_weak_count *))v591->__on_zero_shared)(v591);
            std::__shared_weak_count::__release_weak(v591);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v590 + 88))(v590, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v589 = v1320;
      }
      v1298 = v587 - 1;
      if (v587 == 1)
        goto LABEL_1715;
      if ((_DWORD)v126)
      {
        v595 = 0;
        while (1)
        {
          sub_20B50671C(v125);
          if (!v589)
            break;
          v596 = 0;
          v597 = v126;
          do
          {
            v1331 = 2;
            v1332 = v589 + 2 * v596;
            sub_20B5098BC(v125, &v1331);
            v596 += v588;
            --v597;
          }
          while (v597);
LABEL_886:
          v600 = *(_QWORD *)(v125 + 56);
          *(_QWORD *)(v125 + 40) = *(_QWORD *)(v600 - 8);
          *(_QWORD *)(v125 + 56) = v600 - 8;
          if (*(_BYTE *)(v125 + 88))
            *(_BYTE *)(v125 + 88) = 0;
          v589 += 2 * v1262;
          if (++v595 == v1298)
            goto LABEL_1715;
        }
        v598 = 0;
        v599 = v126;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 2;
          v1332 = 2 * v598;
          sub_20B5098BC(v125, &v1331);
          v598 += v588;
          if (!--v599)
            goto LABEL_886;
        }
LABEL_2386:
        abort();
      }
      do
      {
        sub_20B50671C(v125);
        v1027 = *(_QWORD *)(v125 + 56);
        *(_QWORD *)(v125 + 40) = *(_QWORD *)(v1027 - 8);
        *(_QWORD *)(v125 + 56) = v1027 - 8;
        if (*(_BYTE *)(v125 + 88))
          *(_BYTE *)(v125 + 88) = 0;
        v589 += 2 * v1262;
        --v1298;
      }
      while (v1298);
LABEL_1715:
      sub_20B50671C(v125);
      v1028 = v126;
      if ((_DWORD)v126)
      {
        if (!v589)
        {
          v1151 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 2;
            v1332 = 2 * v1151;
            sub_20B5098BC(v125, &v1331);
            v1151 += v588;
            if (!--v1028)
              goto LABEL_2091;
          }
          goto LABEL_2386;
        }
        v1029 = 0;
        do
        {
          v1331 = 2;
          v1332 = v589 + 2 * v1029;
          sub_20B5098BC(v125, &v1331);
          v1029 += v588;
          --v1028;
        }
        while (v1028);
      }
LABEL_2091:
      v1152 = *(_QWORD *)(v125 + 56);
      *(_QWORD *)(v125 + 40) = *(_QWORD *)(v1152 - 8);
      *(_QWORD *)(v125 + 56) = v1152 - 8;
      if (*(_BYTE *)(v125 + 88))
        *(_BYTE *)(v125 + 88) = 0;
LABEL_2093:
      v1153 = v1330;
      v1330 = 0;
      if (v1153)
        (*(void (**)(uint64_t))(*(_QWORD *)v1153 + 8))(v1153);
      v850 = v1319;
      if (!v1319)
        return;
      v1154 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1154);
      while (__stlxr(v852 - 1, v1154));
      goto LABEL_2373;
    case 8:
      sub_20B373F34(a3, (uint64_t)&v1318);
      v301 = *a2;
      v302 = v1327;
      v303 = v1318;
      if (!v1318)
        goto LABEL_1270;
      v304 = v1319;
      if (v1319)
      {
        v305 = (unint64_t *)&v1319->__shared_owners_;
        do
          v306 = __ldxr(v305);
        while (__stxr(v306 + 1, v305));
        do
          v307 = __ldaxr(v305);
        while (__stlxr(v307 - 1, v305));
        if (!v307)
        {
          ((void (*)(std::__shared_weak_count *))v304->__on_zero_shared)(v304);
          std::__shared_weak_count::__release_weak(v304);
        }
        v303 = v1318;
        v308 = v1319;
        if (v1319)
        {
          v309 = (unint64_t *)&v1319->__shared_owners_;
          do
            v310 = __ldxr(v309);
          while (__stxr(v310 + 1, v309));
          do
            v311 = __ldaxr(v309);
          while (__stlxr(v311 - 1, v309));
          if (!v311)
          {
            ((void (*)(std::__shared_weak_count *))v308->__on_zero_shared)(v308);
            std::__shared_weak_count::__release_weak(v308);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v303 + 96))(&v1330, v303, 0);
      else
LABEL_1270:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2258;
      if (!v1322)
        goto LABEL_2258;
      v808 = v1323;
      if (!v1323)
        goto LABEL_2258;
      v809 = v1325;
      v1275 = v1326;
      v810 = v1320;
      if (v1328 && v1320)
      {
        v811 = v1318;
        v812 = v1319;
        if (v1319)
        {
          v813 = (unint64_t *)&v1319->__shared_owners_;
          do
            v814 = __ldxr(v813);
          while (__stxr(v814 + 1, v813));
          do
            v815 = __ldaxr(v813);
          while (__stlxr(v815 - 1, v813));
          if (!v815)
          {
            ((void (*)(std::__shared_weak_count *))v812->__on_zero_shared)(v812);
            std::__shared_weak_count::__release_weak(v812);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v811 + 88))(v811, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v810 = v1320;
      }
      v1311 = v808 - 1;
      if (v808 == 1)
        goto LABEL_1861;
      if ((_DWORD)v302)
      {
        v816 = 0;
        while (1)
        {
          sub_20B50671C(v301);
          if (!v810)
            break;
          v817 = 0;
          v818 = v302;
          do
          {
            v1331 = 2;
            v1332 = v810 + 4 * v817;
            sub_20B509D64(v301, (float **)&v1331);
            v817 += v809;
            --v818;
          }
          while (v818);
LABEL_1294:
          v821 = *(_QWORD *)(v301 + 56);
          *(_QWORD *)(v301 + 40) = *(_QWORD *)(v821 - 8);
          *(_QWORD *)(v301 + 56) = v821 - 8;
          if (*(_BYTE *)(v301 + 88))
            *(_BYTE *)(v301 + 88) = 0;
          v810 += 4 * v1275;
          if (++v816 == v1311)
            goto LABEL_1861;
        }
        v819 = 0;
        v820 = v302;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 2;
          v1332 = 4 * v819;
          sub_20B509D64(v301, (float **)&v1331);
          v819 += v809;
          if (!--v820)
            goto LABEL_1294;
        }
LABEL_2401:
        abort();
      }
      do
      {
        sub_20B50671C(v301);
        v1074 = *(_QWORD *)(v301 + 56);
        *(_QWORD *)(v301 + 40) = *(_QWORD *)(v1074 - 8);
        *(_QWORD *)(v301 + 56) = v1074 - 8;
        if (*(_BYTE *)(v301 + 88))
          *(_BYTE *)(v301 + 88) = 0;
        v810 += 4 * v1275;
        --v1311;
      }
      while (v1311);
LABEL_1861:
      sub_20B50671C(v301);
      v1075 = v302;
      if ((_DWORD)v302)
      {
        if (!v810)
        {
          v1211 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 2;
            v1332 = 4 * v1211;
            sub_20B509D64(v301, (float **)&v1331);
            v1211 += v809;
            if (!--v1075)
              goto LABEL_2256;
          }
          goto LABEL_2401;
        }
        v1076 = 0;
        do
        {
          v1331 = 2;
          v1332 = v810 + 4 * v1076;
          sub_20B509D64(v301, (float **)&v1331);
          v1076 += v809;
          --v1075;
        }
        while (v1075);
      }
LABEL_2256:
      v1212 = *(_QWORD *)(v301 + 56);
      *(_QWORD *)(v301 + 40) = *(_QWORD *)(v1212 - 8);
      *(_QWORD *)(v301 + 56) = v1212 - 8;
      if (*(_BYTE *)(v301 + 88))
        *(_BYTE *)(v301 + 88) = 0;
LABEL_2258:
      v1213 = v1330;
      v1330 = 0;
      if (v1213)
        (*(void (**)(uint64_t))(*(_QWORD *)v1213 + 8))(v1213);
      v850 = v1319;
      if (!v1319)
        return;
      v1214 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1214);
      while (__stlxr(v852 - 1, v1214));
      goto LABEL_2373;
    case 9:
      sub_20B37456C(a3, (uint64_t)&v1318);
      v268 = *a2;
      v269 = v1327;
      v270 = v1318;
      if (!v1318)
        goto LABEL_1192;
      v271 = v1319;
      if (v1319)
      {
        v272 = (unint64_t *)&v1319->__shared_owners_;
        do
          v273 = __ldxr(v272);
        while (__stxr(v273 + 1, v272));
        do
          v274 = __ldaxr(v272);
        while (__stlxr(v274 - 1, v272));
        if (!v274)
        {
          ((void (*)(std::__shared_weak_count *))v271->__on_zero_shared)(v271);
          std::__shared_weak_count::__release_weak(v271);
        }
        v270 = v1318;
        v275 = v1319;
        if (v1319)
        {
          v276 = (unint64_t *)&v1319->__shared_owners_;
          do
            v277 = __ldxr(v276);
          while (__stxr(v277 + 1, v276));
          do
            v278 = __ldaxr(v276);
          while (__stlxr(v278 - 1, v276));
          if (!v278)
          {
            ((void (*)(std::__shared_weak_count *))v275->__on_zero_shared)(v275);
            std::__shared_weak_count::__release_weak(v275);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v270 + 96))(&v1330, v270, 0);
      else
LABEL_1192:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2225;
      if (!v1322)
        goto LABEL_2225;
      v764 = v1323;
      if (!v1323)
        goto LABEL_2225;
      v765 = v1325;
      v1285 = v1326;
      v766 = v1320;
      if (v1328 && v1320)
      {
        v767 = v1318;
        v768 = v1319;
        if (v1319)
        {
          v769 = (unint64_t *)&v1319->__shared_owners_;
          do
            v770 = __ldxr(v769);
          while (__stxr(v770 + 1, v769));
          do
            v771 = __ldaxr(v769);
          while (__stlxr(v771 - 1, v769));
          if (!v771)
          {
            ((void (*)(std::__shared_weak_count *))v768->__on_zero_shared)(v768);
            std::__shared_weak_count::__release_weak(v768);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v767 + 88))(v767, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v766 = v1320;
      }
      v772 = v764 - 1;
      if (v764 == 1)
        goto LABEL_1834;
      if ((_DWORD)v269)
      {
        v773 = 0;
        while (1)
        {
          sub_20B50671C(v268);
          if (!v766)
            break;
          v774 = 0;
          v775 = v269;
          do
          {
            v1331 = 3;
            v1332 = v766 + v774;
            sub_20B506898(v268, (size_t *)&v1331);
            v774 += v765;
            --v775;
          }
          while (v775);
LABEL_1216:
          v778 = *(_QWORD *)(v268 + 56);
          *(_QWORD *)(v268 + 40) = *(_QWORD *)(v778 - 8);
          *(_QWORD *)(v268 + 56) = v778 - 8;
          if (*(_BYTE *)(v268 + 88))
            *(_BYTE *)(v268 + 88) = 0;
          v766 += v1285;
          if (++v773 == v764 - 1)
            goto LABEL_1834;
        }
        v776 = 0;
        v777 = v269;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 3;
          v1332 = v776;
          sub_20B506898(v268, (size_t *)&v1331);
          v776 += v765;
          if (!--v777)
            goto LABEL_1216;
        }
LABEL_2398:
        abort();
      }
      v766 += v1285 + v1285 * (unint64_t)(v764 - 2);
      do
      {
        sub_20B50671C(v268);
        v1065 = *(_QWORD *)(v268 + 56);
        *(_QWORD *)(v268 + 40) = *(_QWORD *)(v1065 - 8);
        *(_QWORD *)(v268 + 56) = v1065 - 8;
        if (*(_BYTE *)(v268 + 88))
          *(_BYTE *)(v268 + 88) = 0;
        --v772;
      }
      while (v772);
LABEL_1834:
      sub_20B50671C(v268);
      v1066 = v269;
      if ((_DWORD)v269)
      {
        if (!v766)
        {
          v1199 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 3;
            v1332 = v1199;
            sub_20B506898(v268, (size_t *)&v1331);
            v1199 += v765;
            if (!--v1066)
              goto LABEL_2223;
          }
          goto LABEL_2398;
        }
        v1067 = 0;
        do
        {
          v1331 = 3;
          v1332 = v766 + v1067;
          sub_20B506898(v268, (size_t *)&v1331);
          v1067 += v765;
          --v1066;
        }
        while (v1066);
      }
LABEL_2223:
      v1200 = *(_QWORD *)(v268 + 56);
      *(_QWORD *)(v268 + 40) = *(_QWORD *)(v1200 - 8);
      *(_QWORD *)(v268 + 56) = v1200 - 8;
      if (*(_BYTE *)(v268 + 88))
        *(_BYTE *)(v268 + 88) = 0;
LABEL_2225:
      v1201 = v1330;
      v1330 = 0;
      if (v1201)
        (*(void (**)(uint64_t))(*(_QWORD *)v1201 + 8))(v1201);
      v850 = v1319;
      if (!v1319)
        return;
      v1202 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1202);
      while (__stlxr(v852 - 1, v1202));
      goto LABEL_2373;
    case 10:
      sub_20B374BA0(a3, (uint64_t)&v1318);
      v356 = *a2;
      v357 = v1327;
      v358 = v1318;
      if (!v1318)
        goto LABEL_1413;
      v359 = v1319;
      if (v1319)
      {
        v360 = (unint64_t *)&v1319->__shared_owners_;
        do
          v361 = __ldxr(v360);
        while (__stxr(v361 + 1, v360));
        do
          v362 = __ldaxr(v360);
        while (__stlxr(v362 - 1, v360));
        if (!v362)
        {
          ((void (*)(std::__shared_weak_count *))v359->__on_zero_shared)(v359);
          std::__shared_weak_count::__release_weak(v359);
        }
        v358 = v1318;
        v363 = v1319;
        if (v1319)
        {
          v364 = (unint64_t *)&v1319->__shared_owners_;
          do
            v365 = __ldxr(v364);
          while (__stxr(v365 + 1, v364));
          do
            v366 = __ldaxr(v364);
          while (__stlxr(v366 - 1, v364));
          if (!v366)
          {
            ((void (*)(std::__shared_weak_count *))v363->__on_zero_shared)(v363);
            std::__shared_weak_count::__release_weak(v363);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v358 + 96))(&v1330, v358, 0);
      else
LABEL_1413:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2291;
      if (!v1322)
        goto LABEL_2291;
      v882 = v1323;
      if (!v1323)
        goto LABEL_2291;
      v883 = v1325;
      v1277 = v1326;
      v884 = v1320;
      if (v1328 && v1320)
      {
        v885 = v1318;
        v886 = v1319;
        if (v1319)
        {
          v887 = (unint64_t *)&v1319->__shared_owners_;
          do
            v888 = __ldxr(v887);
          while (__stxr(v888 + 1, v887));
          do
            v889 = __ldaxr(v887);
          while (__stlxr(v889 - 1, v887));
          if (!v889)
          {
            ((void (*)(std::__shared_weak_count *))v886->__on_zero_shared)(v886);
            std::__shared_weak_count::__release_weak(v886);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v885 + 88))(v885, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v884 = v1320;
      }
      v1313 = v882 - 1;
      if (v882 == 1)
        goto LABEL_1910;
      if ((_DWORD)v357)
      {
        v890 = 0;
        while (1)
        {
          sub_20B50671C(v356);
          if (!v884)
            break;
          v891 = 0;
          v892 = v357;
          do
          {
            v1331 = 3;
            v1332 = v884 + 2 * v891;
            sub_20B509034(v356, (uint64_t)&v1331);
            v891 += v883;
            --v892;
          }
          while (v892);
LABEL_1437:
          v895 = *(_QWORD *)(v356 + 56);
          *(_QWORD *)(v356 + 40) = *(_QWORD *)(v895 - 8);
          *(_QWORD *)(v356 + 56) = v895 - 8;
          if (*(_BYTE *)(v356 + 88))
            *(_BYTE *)(v356 + 88) = 0;
          v884 += 2 * v1277;
          if (++v890 == v1313)
            goto LABEL_1910;
        }
        v893 = 0;
        v894 = v357;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 3;
          v1332 = 2 * v893;
          sub_20B509034(v356, (uint64_t)&v1331);
          v893 += v883;
          if (!--v894)
            goto LABEL_1437;
        }
LABEL_2404:
        abort();
      }
      do
      {
        sub_20B50671C(v356);
        v1087 = *(_QWORD *)(v356 + 56);
        *(_QWORD *)(v356 + 40) = *(_QWORD *)(v1087 - 8);
        *(_QWORD *)(v356 + 56) = v1087 - 8;
        if (*(_BYTE *)(v356 + 88))
          *(_BYTE *)(v356 + 88) = 0;
        v884 += 2 * v1277;
        --v1313;
      }
      while (v1313);
LABEL_1910:
      sub_20B50671C(v356);
      v1088 = v357;
      if ((_DWORD)v357)
      {
        if (!v884)
        {
          v1223 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 3;
            v1332 = 2 * v1223;
            sub_20B509034(v356, (uint64_t)&v1331);
            v1223 += v883;
            if (!--v1088)
              goto LABEL_2289;
          }
          goto LABEL_2404;
        }
        v1089 = 0;
        do
        {
          v1331 = 3;
          v1332 = v884 + 2 * v1089;
          sub_20B509034(v356, (uint64_t)&v1331);
          v1089 += v883;
          --v1088;
        }
        while (v1088);
      }
LABEL_2289:
      v1224 = *(_QWORD *)(v356 + 56);
      *(_QWORD *)(v356 + 40) = *(_QWORD *)(v1224 - 8);
      *(_QWORD *)(v356 + 56) = v1224 - 8;
      if (*(_BYTE *)(v356 + 88))
        *(_BYTE *)(v356 + 88) = 0;
LABEL_2291:
      v1225 = v1330;
      v1330 = 0;
      if (v1225)
        (*(void (**)(uint64_t))(*(_QWORD *)v1225 + 8))(v1225);
      v850 = v1319;
      if (!v1319)
        return;
      v1226 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1226);
      while (__stlxr(v852 - 1, v1226));
      goto LABEL_2373;
    case 11:
      sub_20B3751D8(a3, (uint64_t)&v1318);
      v345 = *a2;
      v346 = v1327;
      v347 = v1318;
      if (!v1318)
        goto LABEL_1387;
      v348 = v1319;
      if (v1319)
      {
        v349 = (unint64_t *)&v1319->__shared_owners_;
        do
          v350 = __ldxr(v349);
        while (__stxr(v350 + 1, v349));
        do
          v351 = __ldaxr(v349);
        while (__stlxr(v351 - 1, v349));
        if (!v351)
        {
          ((void (*)(std::__shared_weak_count *))v348->__on_zero_shared)(v348);
          std::__shared_weak_count::__release_weak(v348);
        }
        v347 = v1318;
        v352 = v1319;
        if (v1319)
        {
          v353 = (unint64_t *)&v1319->__shared_owners_;
          do
            v354 = __ldxr(v353);
          while (__stxr(v354 + 1, v353));
          do
            v355 = __ldaxr(v353);
          while (__stlxr(v355 - 1, v353));
          if (!v355)
          {
            ((void (*)(std::__shared_weak_count *))v352->__on_zero_shared)(v352);
            std::__shared_weak_count::__release_weak(v352);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v347 + 96))(&v1330, v347, 0);
      else
LABEL_1387:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2280;
      if (!v1322)
        goto LABEL_2280;
      v868 = v1323;
      if (!v1323)
        goto LABEL_2280;
      v869 = v1325;
      v1276 = v1326;
      v870 = v1320;
      if (v1328 && v1320)
      {
        v871 = v1318;
        v872 = v1319;
        if (v1319)
        {
          v873 = (unint64_t *)&v1319->__shared_owners_;
          do
            v874 = __ldxr(v873);
          while (__stxr(v874 + 1, v873));
          do
            v875 = __ldaxr(v873);
          while (__stlxr(v875 - 1, v873));
          if (!v875)
          {
            ((void (*)(std::__shared_weak_count *))v872->__on_zero_shared)(v872);
            std::__shared_weak_count::__release_weak(v872);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v871 + 88))(v871, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v870 = v1320;
      }
      v1312 = v868 - 1;
      if (v868 == 1)
        goto LABEL_1901;
      if ((_DWORD)v346)
      {
        v876 = 0;
        while (1)
        {
          sub_20B50671C(v345);
          if (!v870)
            break;
          v877 = 0;
          v878 = v346;
          do
          {
            v1331 = 3;
            v1332 = v870 + 2 * v877;
            sub_20B5098BC(v345, &v1331);
            v877 += v869;
            --v878;
          }
          while (v878);
LABEL_1411:
          v881 = *(_QWORD *)(v345 + 56);
          *(_QWORD *)(v345 + 40) = *(_QWORD *)(v881 - 8);
          *(_QWORD *)(v345 + 56) = v881 - 8;
          if (*(_BYTE *)(v345 + 88))
            *(_BYTE *)(v345 + 88) = 0;
          v870 += 2 * v1276;
          if (++v876 == v1312)
            goto LABEL_1901;
        }
        v879 = 0;
        v880 = v346;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 3;
          v1332 = 2 * v879;
          sub_20B5098BC(v345, &v1331);
          v879 += v869;
          if (!--v880)
            goto LABEL_1411;
        }
LABEL_2403:
        abort();
      }
      do
      {
        sub_20B50671C(v345);
        v1084 = *(_QWORD *)(v345 + 56);
        *(_QWORD *)(v345 + 40) = *(_QWORD *)(v1084 - 8);
        *(_QWORD *)(v345 + 56) = v1084 - 8;
        if (*(_BYTE *)(v345 + 88))
          *(_BYTE *)(v345 + 88) = 0;
        v870 += 2 * v1276;
        --v1312;
      }
      while (v1312);
LABEL_1901:
      sub_20B50671C(v345);
      v1085 = v346;
      if ((_DWORD)v346)
      {
        if (!v870)
        {
          v1219 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 3;
            v1332 = 2 * v1219;
            sub_20B5098BC(v345, &v1331);
            v1219 += v869;
            if (!--v1085)
              goto LABEL_2278;
          }
          goto LABEL_2403;
        }
        v1086 = 0;
        do
        {
          v1331 = 3;
          v1332 = v870 + 2 * v1086;
          sub_20B5098BC(v345, &v1331);
          v1086 += v869;
          --v1085;
        }
        while (v1085);
      }
LABEL_2278:
      v1220 = *(_QWORD *)(v345 + 56);
      *(_QWORD *)(v345 + 40) = *(_QWORD *)(v1220 - 8);
      *(_QWORD *)(v345 + 56) = v1220 - 8;
      if (*(_BYTE *)(v345 + 88))
        *(_BYTE *)(v345 + 88) = 0;
LABEL_2280:
      v1221 = v1330;
      v1330 = 0;
      if (v1221)
        (*(void (**)(uint64_t))(*(_QWORD *)v1221 + 8))(v1221);
      v850 = v1319;
      if (!v1319)
        return;
      v1222 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1222);
      while (__stlxr(v852 - 1, v1222));
      goto LABEL_2373;
    case 12:
      sub_20B375810(a3, (uint64_t)&v1318);
      v48 = *a2;
      v49 = v1327;
      v50 = v1318;
      if (!v1318)
        goto LABEL_680;
      v51 = v1319;
      if (v1319)
      {
        v52 = (unint64_t *)&v1319->__shared_owners_;
        do
          v53 = __ldxr(v52);
        while (__stxr(v53 + 1, v52));
        do
          v54 = __ldaxr(v52);
        while (__stlxr(v54 - 1, v52));
        if (!v54)
        {
          ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
          std::__shared_weak_count::__release_weak(v51);
        }
        v50 = v1318;
        v55 = v1319;
        if (v1319)
        {
          v56 = (unint64_t *)&v1319->__shared_owners_;
          do
            v57 = __ldxr(v56);
          while (__stxr(v57 + 1, v56));
          do
            v58 = __ldaxr(v56);
          while (__stlxr(v58 - 1, v56));
          if (!v58)
          {
            ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
            std::__shared_weak_count::__release_weak(v55);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v50 + 96))(&v1330, v50, 0);
      else
LABEL_680:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2016;
      if (!v1322)
        goto LABEL_2016;
      v487 = v1323;
      if (!v1323)
        goto LABEL_2016;
      v488 = v1325;
      v1257 = v1326;
      v489 = v1320;
      if (v1328 && v1320)
      {
        v490 = v1318;
        v491 = v1319;
        if (v1319)
        {
          v492 = (unint64_t *)&v1319->__shared_owners_;
          do
            v493 = __ldxr(v492);
          while (__stxr(v493 + 1, v492));
          do
            v494 = __ldaxr(v492);
          while (__stlxr(v494 - 1, v492));
          if (!v494)
          {
            ((void (*)(std::__shared_weak_count *))v491->__on_zero_shared)(v491);
            std::__shared_weak_count::__release_weak(v491);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v490 + 88))(v490, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v489 = v1320;
      }
      v1293 = v487 - 1;
      if (v487 == 1)
        goto LABEL_1652;
      if ((_DWORD)v49)
      {
        v495 = 0;
        while (1)
        {
          sub_20B50671C(v48);
          if (!v489)
            break;
          v496 = 0;
          v497 = v49;
          do
          {
            v1331 = 3;
            v1332 = v489 + 4 * v496;
            sub_20B509D64(v48, (float **)&v1331);
            v496 += v488;
            --v497;
          }
          while (v497);
LABEL_704:
          v500 = *(_QWORD *)(v48 + 56);
          *(_QWORD *)(v48 + 40) = *(_QWORD *)(v500 - 8);
          *(_QWORD *)(v48 + 56) = v500 - 8;
          if (*(_BYTE *)(v48 + 88))
            *(_BYTE *)(v48 + 88) = 0;
          v489 += 4 * v1257;
          if (++v495 == v1293)
            goto LABEL_1652;
        }
        v498 = 0;
        v499 = v49;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 3;
          v1332 = 4 * v498;
          sub_20B509D64(v48, (float **)&v1331);
          v498 += v488;
          if (!--v499)
            goto LABEL_704;
        }
LABEL_2379:
        abort();
      }
      do
      {
        sub_20B50671C(v48);
        v1006 = *(_QWORD *)(v48 + 56);
        *(_QWORD *)(v48 + 40) = *(_QWORD *)(v1006 - 8);
        *(_QWORD *)(v48 + 56) = v1006 - 8;
        if (*(_BYTE *)(v48 + 88))
          *(_BYTE *)(v48 + 88) = 0;
        v489 += 4 * v1257;
        --v1293;
      }
      while (v1293);
LABEL_1652:
      sub_20B50671C(v48);
      v1007 = v49;
      if ((_DWORD)v49)
      {
        if (!v489)
        {
          v1123 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 3;
            v1332 = 4 * v1123;
            sub_20B509D64(v48, (float **)&v1331);
            v1123 += v488;
            if (!--v1007)
              goto LABEL_2014;
          }
          goto LABEL_2379;
        }
        v1008 = 0;
        do
        {
          v1331 = 3;
          v1332 = v489 + 4 * v1008;
          sub_20B509D64(v48, (float **)&v1331);
          v1008 += v488;
          --v1007;
        }
        while (v1007);
      }
LABEL_2014:
      v1124 = *(_QWORD *)(v48 + 56);
      *(_QWORD *)(v48 + 40) = *(_QWORD *)(v1124 - 8);
      *(_QWORD *)(v48 + 56) = v1124 - 8;
      if (*(_BYTE *)(v48 + 88))
        *(_BYTE *)(v48 + 88) = 0;
LABEL_2016:
      v1125 = v1330;
      v1330 = 0;
      if (v1125)
        (*(void (**)(uint64_t))(*(_QWORD *)v1125 + 8))(v1125);
      v850 = v1319;
      if (!v1319)
        return;
      v1126 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1126);
      while (__stlxr(v852 - 1, v1126));
      goto LABEL_2373;
    case 13:
      sub_20B375E48(a3, (uint64_t)&v1318);
      v92 = *a2;
      v93 = v1327;
      v94 = v1318;
      if (!v1318)
        goto LABEL_784;
      v95 = v1319;
      if (v1319)
      {
        v96 = (unint64_t *)&v1319->__shared_owners_;
        do
          v97 = __ldxr(v96);
        while (__stxr(v97 + 1, v96));
        do
          v98 = __ldaxr(v96);
        while (__stlxr(v98 - 1, v96));
        if (!v98)
        {
          ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
          std::__shared_weak_count::__release_weak(v95);
        }
        v94 = v1318;
        v99 = v1319;
        if (v1319)
        {
          v100 = (unint64_t *)&v1319->__shared_owners_;
          do
            v101 = __ldxr(v100);
          while (__stxr(v101 + 1, v100));
          do
            v102 = __ldaxr(v100);
          while (__stlxr(v102 - 1, v100));
          if (!v102)
          {
            ((void (*)(std::__shared_weak_count *))v99->__on_zero_shared)(v99);
            std::__shared_weak_count::__release_weak(v99);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v94 + 96))(&v1330, v94, 0);
      else
LABEL_784:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2060;
      if (!v1322)
        goto LABEL_2060;
      v544 = v1323;
      if (!v1323)
        goto LABEL_2060;
      v545 = v1325;
      v1284 = v1326;
      v546 = v1320;
      if (v1328 && v1320)
      {
        v547 = v1318;
        v548 = v1319;
        if (v1319)
        {
          v549 = (unint64_t *)&v1319->__shared_owners_;
          do
            v550 = __ldxr(v549);
          while (__stxr(v550 + 1, v549));
          do
            v551 = __ldaxr(v549);
          while (__stlxr(v551 - 1, v549));
          if (!v551)
          {
            ((void (*)(std::__shared_weak_count *))v548->__on_zero_shared)(v548);
            std::__shared_weak_count::__release_weak(v548);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v547 + 88))(v547, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v546 = v1320;
      }
      v552 = v544 - 1;
      if (v544 == 1)
        goto LABEL_1688;
      if ((_DWORD)v93)
      {
        v553 = 0;
        while (1)
        {
          sub_20B50671C(v92);
          if (!v546)
            break;
          v554 = 0;
          v555 = v93;
          do
          {
            v1331 = 4;
            v1332 = v546 + v554;
            sub_20B506898(v92, (size_t *)&v1331);
            v554 += v545;
            --v555;
          }
          while (v555);
LABEL_808:
          v558 = *(_QWORD *)(v92 + 56);
          *(_QWORD *)(v92 + 40) = *(_QWORD *)(v558 - 8);
          *(_QWORD *)(v92 + 56) = v558 - 8;
          if (*(_BYTE *)(v92 + 88))
            *(_BYTE *)(v92 + 88) = 0;
          v546 += v1284;
          if (++v553 == v544 - 1)
            goto LABEL_1688;
        }
        v556 = 0;
        v557 = v93;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = v556;
          sub_20B506898(v92, (size_t *)&v1331);
          v556 += v545;
          if (!--v557)
            goto LABEL_808;
        }
LABEL_2383:
        abort();
      }
      v546 += v1284 + v1284 * (unint64_t)(v544 - 2);
      do
      {
        sub_20B50671C(v92);
        v1018 = *(_QWORD *)(v92 + 56);
        *(_QWORD *)(v92 + 40) = *(_QWORD *)(v1018 - 8);
        *(_QWORD *)(v92 + 56) = v1018 - 8;
        if (*(_BYTE *)(v92 + 88))
          *(_BYTE *)(v92 + 88) = 0;
        --v552;
      }
      while (v552);
LABEL_1688:
      sub_20B50671C(v92);
      v1019 = v93;
      if ((_DWORD)v93)
      {
        if (!v546)
        {
          v1139 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = v1139;
            sub_20B506898(v92, (size_t *)&v1331);
            v1139 += v545;
            if (!--v1019)
              goto LABEL_2058;
          }
          goto LABEL_2383;
        }
        v1020 = 0;
        do
        {
          v1331 = 4;
          v1332 = v546 + v1020;
          sub_20B506898(v92, (size_t *)&v1331);
          v1020 += v545;
          --v1019;
        }
        while (v1019);
      }
LABEL_2058:
      v1140 = *(_QWORD *)(v92 + 56);
      *(_QWORD *)(v92 + 40) = *(_QWORD *)(v1140 - 8);
      *(_QWORD *)(v92 + 56) = v1140 - 8;
      if (*(_BYTE *)(v92 + 88))
        *(_BYTE *)(v92 + 88) = 0;
LABEL_2060:
      v1141 = v1330;
      v1330 = 0;
      if (v1141)
        (*(void (**)(uint64_t))(*(_QWORD *)v1141 + 8))(v1141);
      v850 = v1319;
      if (!v1319)
        return;
      v1142 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1142);
      while (__stlxr(v852 - 1, v1142));
      goto LABEL_2373;
    case 14:
      sub_20B37647C(a3, (uint64_t)&v1318);
      v81 = *a2;
      v82 = v1327;
      v83 = v1318;
      if (!v1318)
        goto LABEL_758;
      v84 = v1319;
      if (v1319)
      {
        v85 = (unint64_t *)&v1319->__shared_owners_;
        do
          v86 = __ldxr(v85);
        while (__stxr(v86 + 1, v85));
        do
          v87 = __ldaxr(v85);
        while (__stlxr(v87 - 1, v85));
        if (!v87)
        {
          ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
          std::__shared_weak_count::__release_weak(v84);
        }
        v83 = v1318;
        v88 = v1319;
        if (v1319)
        {
          v89 = (unint64_t *)&v1319->__shared_owners_;
          do
            v90 = __ldxr(v89);
          while (__stxr(v90 + 1, v89));
          do
            v91 = __ldaxr(v89);
          while (__stlxr(v91 - 1, v89));
          if (!v91)
          {
            ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
            std::__shared_weak_count::__release_weak(v88);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v83 + 96))(&v1330, v83, 0);
      else
LABEL_758:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2049;
      if (!v1322)
        goto LABEL_2049;
      v530 = v1323;
      if (!v1323)
        goto LABEL_2049;
      v531 = v1325;
      v1259 = v1326;
      v532 = v1320;
      if (v1328 && v1320)
      {
        v533 = v1318;
        v534 = v1319;
        if (v1319)
        {
          v535 = (unint64_t *)&v1319->__shared_owners_;
          do
            v536 = __ldxr(v535);
          while (__stxr(v536 + 1, v535));
          do
            v537 = __ldaxr(v535);
          while (__stlxr(v537 - 1, v535));
          if (!v537)
          {
            ((void (*)(std::__shared_weak_count *))v534->__on_zero_shared)(v534);
            std::__shared_weak_count::__release_weak(v534);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v533 + 88))(v533, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v532 = v1320;
      }
      v1295 = v530 - 1;
      if (v530 == 1)
        goto LABEL_1679;
      if ((_DWORD)v82)
      {
        v538 = 0;
        while (1)
        {
          sub_20B50671C(v81);
          if (!v532)
            break;
          v539 = 0;
          v540 = v82;
          do
          {
            v1331 = 4;
            v1332 = v532 + 2 * v539;
            sub_20B509034(v81, (uint64_t)&v1331);
            v539 += v531;
            --v540;
          }
          while (v540);
LABEL_782:
          v543 = *(_QWORD *)(v81 + 56);
          *(_QWORD *)(v81 + 40) = *(_QWORD *)(v543 - 8);
          *(_QWORD *)(v81 + 56) = v543 - 8;
          if (*(_BYTE *)(v81 + 88))
            *(_BYTE *)(v81 + 88) = 0;
          v532 += 2 * v1259;
          if (++v538 == v1295)
            goto LABEL_1679;
        }
        v541 = 0;
        v542 = v82;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = 2 * v541;
          sub_20B509034(v81, (uint64_t)&v1331);
          v541 += v531;
          if (!--v542)
            goto LABEL_782;
        }
LABEL_2382:
        abort();
      }
      do
      {
        sub_20B50671C(v81);
        v1015 = *(_QWORD *)(v81 + 56);
        *(_QWORD *)(v81 + 40) = *(_QWORD *)(v1015 - 8);
        *(_QWORD *)(v81 + 56) = v1015 - 8;
        if (*(_BYTE *)(v81 + 88))
          *(_BYTE *)(v81 + 88) = 0;
        v532 += 2 * v1259;
        --v1295;
      }
      while (v1295);
LABEL_1679:
      sub_20B50671C(v81);
      v1016 = v82;
      if ((_DWORD)v82)
      {
        if (!v532)
        {
          v1135 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = 2 * v1135;
            sub_20B509034(v81, (uint64_t)&v1331);
            v1135 += v531;
            if (!--v1016)
              goto LABEL_2047;
          }
          goto LABEL_2382;
        }
        v1017 = 0;
        do
        {
          v1331 = 4;
          v1332 = v532 + 2 * v1017;
          sub_20B509034(v81, (uint64_t)&v1331);
          v1017 += v531;
          --v1016;
        }
        while (v1016);
      }
LABEL_2047:
      v1136 = *(_QWORD *)(v81 + 56);
      *(_QWORD *)(v81 + 40) = *(_QWORD *)(v1136 - 8);
      *(_QWORD *)(v81 + 56) = v1136 - 8;
      if (*(_BYTE *)(v81 + 88))
        *(_BYTE *)(v81 + 88) = 0;
LABEL_2049:
      v1137 = v1330;
      v1330 = 0;
      if (v1137)
        (*(void (**)(uint64_t))(*(_QWORD *)v1137 + 8))(v1137);
      v850 = v1319;
      if (!v1319)
        return;
      v1138 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1138);
      while (__stlxr(v852 - 1, v1138));
      goto LABEL_2373;
    case 15:
      sub_20B376AB4(a3, (uint64_t)&v1318);
      v400 = *a2;
      v401 = v1327;
      v402 = v1318;
      if (!v1318)
        goto LABEL_1517;
      v403 = v1319;
      if (v1319)
      {
        v404 = (unint64_t *)&v1319->__shared_owners_;
        do
          v405 = __ldxr(v404);
        while (__stxr(v405 + 1, v404));
        do
          v406 = __ldaxr(v404);
        while (__stlxr(v406 - 1, v404));
        if (!v406)
        {
          ((void (*)(std::__shared_weak_count *))v403->__on_zero_shared)(v403);
          std::__shared_weak_count::__release_weak(v403);
        }
        v402 = v1318;
        v407 = v1319;
        if (v1319)
        {
          v408 = (unint64_t *)&v1319->__shared_owners_;
          do
            v409 = __ldxr(v408);
          while (__stxr(v409 + 1, v408));
          do
            v410 = __ldaxr(v408);
          while (__stlxr(v410 - 1, v408));
          if (!v410)
          {
            ((void (*)(std::__shared_weak_count *))v407->__on_zero_shared)(v407);
            std::__shared_weak_count::__release_weak(v407);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v402 + 96))(&v1330, v402, 0);
      else
LABEL_1517:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2335;
      if (!v1322)
        goto LABEL_2335;
      v939 = v1323;
      if (!v1323)
        goto LABEL_2335;
      v940 = v1325;
      v1280 = v1326;
      v941 = v1320;
      if (v1328 && v1320)
      {
        v942 = v1318;
        v943 = v1319;
        if (v1319)
        {
          v944 = (unint64_t *)&v1319->__shared_owners_;
          do
            v945 = __ldxr(v944);
          while (__stxr(v945 + 1, v944));
          do
            v946 = __ldaxr(v944);
          while (__stlxr(v946 - 1, v944));
          if (!v946)
          {
            ((void (*)(std::__shared_weak_count *))v943->__on_zero_shared)(v943);
            std::__shared_weak_count::__release_weak(v943);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v942 + 88))(v942, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v941 = v1320;
      }
      v1316 = v939 - 1;
      if (v939 == 1)
        goto LABEL_1946;
      if ((_DWORD)v401)
      {
        v947 = 0;
        while (1)
        {
          sub_20B50671C(v400);
          if (!v941)
            break;
          v948 = 0;
          v949 = v401;
          do
          {
            v1331 = 4;
            v1332 = v941 + 2 * v948;
            sub_20B5098BC(v400, &v1331);
            v948 += v940;
            --v949;
          }
          while (v949);
LABEL_1541:
          v952 = *(_QWORD *)(v400 + 56);
          *(_QWORD *)(v400 + 40) = *(_QWORD *)(v952 - 8);
          *(_QWORD *)(v400 + 56) = v952 - 8;
          if (*(_BYTE *)(v400 + 88))
            *(_BYTE *)(v400 + 88) = 0;
          v941 += 2 * v1280;
          if (++v947 == v1316)
            goto LABEL_1946;
        }
        v950 = 0;
        v951 = v401;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = 2 * v950;
          sub_20B5098BC(v400, &v1331);
          v950 += v940;
          if (!--v951)
            goto LABEL_1541;
        }
LABEL_2408:
        abort();
      }
      do
      {
        sub_20B50671C(v400);
        v1099 = *(_QWORD *)(v400 + 56);
        *(_QWORD *)(v400 + 40) = *(_QWORD *)(v1099 - 8);
        *(_QWORD *)(v400 + 56) = v1099 - 8;
        if (*(_BYTE *)(v400 + 88))
          *(_BYTE *)(v400 + 88) = 0;
        v941 += 2 * v1280;
        --v1316;
      }
      while (v1316);
LABEL_1946:
      sub_20B50671C(v400);
      v1100 = v401;
      if ((_DWORD)v401)
      {
        if (!v941)
        {
          v1239 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = 2 * v1239;
            sub_20B5098BC(v400, &v1331);
            v1239 += v940;
            if (!--v1100)
              goto LABEL_2333;
          }
          goto LABEL_2408;
        }
        v1101 = 0;
        do
        {
          v1331 = 4;
          v1332 = v941 + 2 * v1101;
          sub_20B5098BC(v400, &v1331);
          v1101 += v940;
          --v1100;
        }
        while (v1100);
      }
LABEL_2333:
      v1240 = *(_QWORD *)(v400 + 56);
      *(_QWORD *)(v400 + 40) = *(_QWORD *)(v1240 - 8);
      *(_QWORD *)(v400 + 56) = v1240 - 8;
      if (*(_BYTE *)(v400 + 88))
        *(_BYTE *)(v400 + 88) = 0;
LABEL_2335:
      v1241 = v1330;
      v1330 = 0;
      if (v1241)
        (*(void (**)(uint64_t))(*(_QWORD *)v1241 + 8))(v1241);
      v850 = v1319;
      if (!v1319)
        return;
      v1242 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1242);
      while (__stlxr(v852 - 1, v1242));
      goto LABEL_2373;
    case 16:
      sub_20B3770EC(a3, (uint64_t)&v1318);
      v290 = *a2;
      v291 = v1327;
      v292 = v1318;
      if (!v1318)
        goto LABEL_1244;
      v293 = v1319;
      if (v1319)
      {
        v294 = (unint64_t *)&v1319->__shared_owners_;
        do
          v295 = __ldxr(v294);
        while (__stxr(v295 + 1, v294));
        do
          v296 = __ldaxr(v294);
        while (__stlxr(v296 - 1, v294));
        if (!v296)
        {
          ((void (*)(std::__shared_weak_count *))v293->__on_zero_shared)(v293);
          std::__shared_weak_count::__release_weak(v293);
        }
        v292 = v1318;
        v297 = v1319;
        if (v1319)
        {
          v298 = (unint64_t *)&v1319->__shared_owners_;
          do
            v299 = __ldxr(v298);
          while (__stxr(v299 + 1, v298));
          do
            v300 = __ldaxr(v298);
          while (__stlxr(v300 - 1, v298));
          if (!v300)
          {
            ((void (*)(std::__shared_weak_count *))v297->__on_zero_shared)(v297);
            std::__shared_weak_count::__release_weak(v297);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v292 + 96))(&v1330, v292, 0);
      else
LABEL_1244:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2247;
      if (!v1322)
        goto LABEL_2247;
      v794 = v1323;
      if (!v1323)
        goto LABEL_2247;
      v795 = v1325;
      v1274 = v1326;
      v796 = v1320;
      if (v1328 && v1320)
      {
        v797 = v1318;
        v798 = v1319;
        if (v1319)
        {
          v799 = (unint64_t *)&v1319->__shared_owners_;
          do
            v800 = __ldxr(v799);
          while (__stxr(v800 + 1, v799));
          do
            v801 = __ldaxr(v799);
          while (__stlxr(v801 - 1, v799));
          if (!v801)
          {
            ((void (*)(std::__shared_weak_count *))v798->__on_zero_shared)(v798);
            std::__shared_weak_count::__release_weak(v798);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v797 + 88))(v797, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v796 = v1320;
      }
      v1310 = v794 - 1;
      if (v794 == 1)
        goto LABEL_1852;
      if ((_DWORD)v291)
      {
        v802 = 0;
        while (1)
        {
          sub_20B50671C(v290);
          if (!v796)
            break;
          v803 = 0;
          v804 = v291;
          do
          {
            v1331 = 4;
            v1332 = v796 + 4 * v803;
            sub_20B509D64(v290, (float **)&v1331);
            v803 += v795;
            --v804;
          }
          while (v804);
LABEL_1268:
          v807 = *(_QWORD *)(v290 + 56);
          *(_QWORD *)(v290 + 40) = *(_QWORD *)(v807 - 8);
          *(_QWORD *)(v290 + 56) = v807 - 8;
          if (*(_BYTE *)(v290 + 88))
            *(_BYTE *)(v290 + 88) = 0;
          v796 += 4 * v1274;
          if (++v802 == v1310)
            goto LABEL_1852;
        }
        v805 = 0;
        v806 = v291;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = 4 * v805;
          sub_20B509D64(v290, (float **)&v1331);
          v805 += v795;
          if (!--v806)
            goto LABEL_1268;
        }
LABEL_2400:
        abort();
      }
      do
      {
        sub_20B50671C(v290);
        v1071 = *(_QWORD *)(v290 + 56);
        *(_QWORD *)(v290 + 40) = *(_QWORD *)(v1071 - 8);
        *(_QWORD *)(v290 + 56) = v1071 - 8;
        if (*(_BYTE *)(v290 + 88))
          *(_BYTE *)(v290 + 88) = 0;
        v796 += 4 * v1274;
        --v1310;
      }
      while (v1310);
LABEL_1852:
      sub_20B50671C(v290);
      v1072 = v291;
      if ((_DWORD)v291)
      {
        if (!v796)
        {
          v1207 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = 4 * v1207;
            sub_20B509D64(v290, (float **)&v1331);
            v1207 += v795;
            if (!--v1072)
              goto LABEL_2245;
          }
          goto LABEL_2400;
        }
        v1073 = 0;
        do
        {
          v1331 = 4;
          v1332 = v796 + 4 * v1073;
          sub_20B509D64(v290, (float **)&v1331);
          v1073 += v795;
          --v1072;
        }
        while (v1072);
      }
LABEL_2245:
      v1208 = *(_QWORD *)(v290 + 56);
      *(_QWORD *)(v290 + 40) = *(_QWORD *)(v1208 - 8);
      *(_QWORD *)(v290 + 56) = v1208 - 8;
      if (*(_BYTE *)(v290 + 88))
        *(_BYTE *)(v290 + 88) = 0;
LABEL_2247:
      v1209 = v1330;
      v1330 = 0;
      if (v1209)
        (*(void (**)(uint64_t))(*(_QWORD *)v1209 + 8))(v1209);
      v850 = v1319;
      if (!v1319)
        return;
      v1210 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1210);
      while (__stlxr(v852 - 1, v1210));
      goto LABEL_2373;
    case 17:
      sub_20B377724(a3, (uint64_t)&v1318);
      v411 = *a2;
      v412 = v1327;
      v413 = v1318;
      if (!v1318)
        goto LABEL_1543;
      v414 = v1319;
      if (v1319)
      {
        v415 = (unint64_t *)&v1319->__shared_owners_;
        do
          v416 = __ldxr(v415);
        while (__stxr(v416 + 1, v415));
        do
          v417 = __ldaxr(v415);
        while (__stlxr(v417 - 1, v415));
        if (!v417)
        {
          ((void (*)(std::__shared_weak_count *))v414->__on_zero_shared)(v414);
          std::__shared_weak_count::__release_weak(v414);
        }
        v413 = v1318;
        v418 = v1319;
        if (v1319)
        {
          v419 = (unint64_t *)&v1319->__shared_owners_;
          do
            v420 = __ldxr(v419);
          while (__stxr(v420 + 1, v419));
          do
            v421 = __ldaxr(v419);
          while (__stlxr(v421 - 1, v419));
          if (!v421)
          {
            ((void (*)(std::__shared_weak_count *))v418->__on_zero_shared)(v418);
            std::__shared_weak_count::__release_weak(v418);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v413 + 96))(&v1330, v413, 0);
      else
LABEL_1543:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2346;
      if (!v1322)
        goto LABEL_2346;
      v953 = v1323;
      if (!v1323)
        goto LABEL_2346;
      v954 = v1325;
      v1289 = v1326;
      v955 = v1320;
      if (v1328 && v1320)
      {
        v956 = v1318;
        v957 = v1319;
        if (v1319)
        {
          v958 = (unint64_t *)&v1319->__shared_owners_;
          do
            v959 = __ldxr(v958);
          while (__stxr(v959 + 1, v958));
          do
            v960 = __ldaxr(v958);
          while (__stlxr(v960 - 1, v958));
          if (!v960)
          {
            ((void (*)(std::__shared_weak_count *))v957->__on_zero_shared)(v957);
            std::__shared_weak_count::__release_weak(v957);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v956 + 88))(v956, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v955 = v1320;
      }
      v961 = v953 - 1;
      if (v953 == 1)
        goto LABEL_1955;
      if ((_DWORD)v412)
      {
        v962 = 0;
        while (1)
        {
          sub_20B50671C(v411);
          if (!v955)
            break;
          v963 = 0;
          v964 = v412;
          do
          {
            v1331 = 3;
            v1332 = v955 + v963;
            sub_20B506898(v411, (size_t *)&v1331);
            v963 += v954;
            --v964;
          }
          while (v964);
LABEL_1567:
          v967 = *(_QWORD *)(v411 + 56);
          *(_QWORD *)(v411 + 40) = *(_QWORD *)(v967 - 8);
          *(_QWORD *)(v411 + 56) = v967 - 8;
          if (*(_BYTE *)(v411 + 88))
            *(_BYTE *)(v411 + 88) = 0;
          v955 += v1289;
          if (++v962 == v953 - 1)
            goto LABEL_1955;
        }
        v965 = 0;
        v966 = v412;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 3;
          v1332 = v965;
          sub_20B506898(v411, (size_t *)&v1331);
          v965 += v954;
          if (!--v966)
            goto LABEL_1567;
        }
LABEL_2409:
        abort();
      }
      v955 += v1289 + v1289 * (unint64_t)(v953 - 2);
      do
      {
        sub_20B50671C(v411);
        v1102 = *(_QWORD *)(v411 + 56);
        *(_QWORD *)(v411 + 40) = *(_QWORD *)(v1102 - 8);
        *(_QWORD *)(v411 + 56) = v1102 - 8;
        if (*(_BYTE *)(v411 + 88))
          *(_BYTE *)(v411 + 88) = 0;
        --v961;
      }
      while (v961);
LABEL_1955:
      sub_20B50671C(v411);
      v1103 = v412;
      if ((_DWORD)v412)
      {
        if (!v955)
        {
          v1243 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 3;
            v1332 = v1243;
            sub_20B506898(v411, (size_t *)&v1331);
            v1243 += v954;
            if (!--v1103)
              goto LABEL_2344;
          }
          goto LABEL_2409;
        }
        v1104 = 0;
        do
        {
          v1331 = 3;
          v1332 = v955 + v1104;
          sub_20B506898(v411, (size_t *)&v1331);
          v1104 += v954;
          --v1103;
        }
        while (v1103);
      }
LABEL_2344:
      v1244 = *(_QWORD *)(v411 + 56);
      *(_QWORD *)(v411 + 40) = *(_QWORD *)(v1244 - 8);
      *(_QWORD *)(v411 + 56) = v1244 - 8;
      if (*(_BYTE *)(v411 + 88))
        *(_BYTE *)(v411 + 88) = 0;
LABEL_2346:
      v1245 = v1330;
      v1330 = 0;
      if (v1245)
        (*(void (**)(uint64_t))(*(_QWORD *)v1245 + 8))(v1245);
      v850 = v1319;
      if (!v1319)
        return;
      v1246 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1246);
      while (__stlxr(v852 - 1, v1246));
      goto LABEL_2373;
    case 18:
      sub_20B377D58(a3, (uint64_t)&v1318);
      v114 = *a2;
      v115 = v1327;
      v116 = v1318;
      if (!v1318)
        goto LABEL_836;
      v117 = v1319;
      if (v1319)
      {
        v118 = (unint64_t *)&v1319->__shared_owners_;
        do
          v119 = __ldxr(v118);
        while (__stxr(v119 + 1, v118));
        do
          v120 = __ldaxr(v118);
        while (__stlxr(v120 - 1, v118));
        if (!v120)
        {
          ((void (*)(std::__shared_weak_count *))v117->__on_zero_shared)(v117);
          std::__shared_weak_count::__release_weak(v117);
        }
        v116 = v1318;
        v121 = v1319;
        if (v1319)
        {
          v122 = (unint64_t *)&v1319->__shared_owners_;
          do
            v123 = __ldxr(v122);
          while (__stxr(v123 + 1, v122));
          do
            v124 = __ldaxr(v122);
          while (__stlxr(v124 - 1, v122));
          if (!v124)
          {
            ((void (*)(std::__shared_weak_count *))v121->__on_zero_shared)(v121);
            std::__shared_weak_count::__release_weak(v121);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v116 + 96))(&v1330, v116, 0);
      else
LABEL_836:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2082;
      if (!v1322)
        goto LABEL_2082;
      v573 = v1323;
      if (!v1323)
        goto LABEL_2082;
      v574 = v1325;
      v1261 = v1326;
      v575 = v1320;
      if (v1328 && v1320)
      {
        v576 = v1318;
        v577 = v1319;
        if (v1319)
        {
          v578 = (unint64_t *)&v1319->__shared_owners_;
          do
            v579 = __ldxr(v578);
          while (__stxr(v579 + 1, v578));
          do
            v580 = __ldaxr(v578);
          while (__stlxr(v580 - 1, v578));
          if (!v580)
          {
            ((void (*)(std::__shared_weak_count *))v577->__on_zero_shared)(v577);
            std::__shared_weak_count::__release_weak(v577);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v576 + 88))(v576, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v575 = v1320;
      }
      v1297 = v573 - 1;
      if (v573 == 1)
        goto LABEL_1706;
      if ((_DWORD)v115)
      {
        v581 = 0;
        while (1)
        {
          sub_20B50671C(v114);
          if (!v575)
            break;
          v582 = 0;
          v583 = v115;
          do
          {
            v1331 = 3;
            v1332 = v575 + 2 * v582;
            sub_20B509034(v114, (uint64_t)&v1331);
            v582 += v574;
            --v583;
          }
          while (v583);
LABEL_860:
          v586 = *(_QWORD *)(v114 + 56);
          *(_QWORD *)(v114 + 40) = *(_QWORD *)(v586 - 8);
          *(_QWORD *)(v114 + 56) = v586 - 8;
          if (*(_BYTE *)(v114 + 88))
            *(_BYTE *)(v114 + 88) = 0;
          v575 += 2 * v1261;
          if (++v581 == v1297)
            goto LABEL_1706;
        }
        v584 = 0;
        v585 = v115;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 3;
          v1332 = 2 * v584;
          sub_20B509034(v114, (uint64_t)&v1331);
          v584 += v574;
          if (!--v585)
            goto LABEL_860;
        }
LABEL_2385:
        abort();
      }
      do
      {
        sub_20B50671C(v114);
        v1024 = *(_QWORD *)(v114 + 56);
        *(_QWORD *)(v114 + 40) = *(_QWORD *)(v1024 - 8);
        *(_QWORD *)(v114 + 56) = v1024 - 8;
        if (*(_BYTE *)(v114 + 88))
          *(_BYTE *)(v114 + 88) = 0;
        v575 += 2 * v1261;
        --v1297;
      }
      while (v1297);
LABEL_1706:
      sub_20B50671C(v114);
      v1025 = v115;
      if ((_DWORD)v115)
      {
        if (!v575)
        {
          v1147 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 3;
            v1332 = 2 * v1147;
            sub_20B509034(v114, (uint64_t)&v1331);
            v1147 += v574;
            if (!--v1025)
              goto LABEL_2080;
          }
          goto LABEL_2385;
        }
        v1026 = 0;
        do
        {
          v1331 = 3;
          v1332 = v575 + 2 * v1026;
          sub_20B509034(v114, (uint64_t)&v1331);
          v1026 += v574;
          --v1025;
        }
        while (v1025);
      }
LABEL_2080:
      v1148 = *(_QWORD *)(v114 + 56);
      *(_QWORD *)(v114 + 40) = *(_QWORD *)(v1148 - 8);
      *(_QWORD *)(v114 + 56) = v1148 - 8;
      if (*(_BYTE *)(v114 + 88))
        *(_BYTE *)(v114 + 88) = 0;
LABEL_2082:
      v1149 = v1330;
      v1330 = 0;
      if (v1149)
        (*(void (**)(uint64_t))(*(_QWORD *)v1149 + 8))(v1149);
      v850 = v1319;
      if (!v1319)
        return;
      v1150 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1150);
      while (__stlxr(v852 - 1, v1150));
      goto LABEL_2373;
    case 19:
      sub_20B378390(a3, (uint64_t)&v1318);
      v26 = *a2;
      v27 = v1327;
      v28 = v1318;
      if (!v1318)
        goto LABEL_628;
      v29 = v1319;
      if (v1319)
      {
        v30 = (unint64_t *)&v1319->__shared_owners_;
        do
          v31 = __ldxr(v30);
        while (__stxr(v31 + 1, v30));
        do
          v32 = __ldaxr(v30);
        while (__stlxr(v32 - 1, v30));
        if (!v32)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
        v28 = v1318;
        v33 = v1319;
        if (v1319)
        {
          v34 = (unint64_t *)&v1319->__shared_owners_;
          do
            v35 = __ldxr(v34);
          while (__stxr(v35 + 1, v34));
          do
            v36 = __ldaxr(v34);
          while (__stlxr(v36 - 1, v34));
          if (!v36)
          {
            ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
            std::__shared_weak_count::__release_weak(v33);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v28 + 96))(&v1330, v28, 0);
      else
LABEL_628:
        v1330 = 0;
      if (!v1321)
        goto LABEL_1994;
      if (!v1322)
        goto LABEL_1994;
      v458 = v1323;
      if (!v1323)
        goto LABEL_1994;
      v459 = v1325;
      v1256 = v1326;
      v460 = v1320;
      if (v1328 && v1320)
      {
        v461 = v1318;
        v462 = v1319;
        if (v1319)
        {
          v463 = (unint64_t *)&v1319->__shared_owners_;
          do
            v464 = __ldxr(v463);
          while (__stxr(v464 + 1, v463));
          do
            v465 = __ldaxr(v463);
          while (__stlxr(v465 - 1, v463));
          if (!v465)
          {
            ((void (*)(std::__shared_weak_count *))v462->__on_zero_shared)(v462);
            std::__shared_weak_count::__release_weak(v462);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v461 + 88))(v461, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v460 = v1320;
      }
      v1292 = v458 - 1;
      if (v458 == 1)
        goto LABEL_1634;
      if ((_DWORD)v27)
      {
        v466 = 0;
        while (1)
        {
          sub_20B50671C(v26);
          if (!v460)
            break;
          v467 = 0;
          v468 = v27;
          do
          {
            v1331 = 3;
            v1332 = v460 + 2 * v467;
            sub_20B5098BC(v26, &v1331);
            v467 += v459;
            --v468;
          }
          while (v468);
LABEL_652:
          v471 = *(_QWORD *)(v26 + 56);
          *(_QWORD *)(v26 + 40) = *(_QWORD *)(v471 - 8);
          *(_QWORD *)(v26 + 56) = v471 - 8;
          if (*(_BYTE *)(v26 + 88))
            *(_BYTE *)(v26 + 88) = 0;
          v460 += 2 * v1256;
          if (++v466 == v1292)
            goto LABEL_1634;
        }
        v469 = 0;
        v470 = v27;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 3;
          v1332 = 2 * v469;
          sub_20B5098BC(v26, &v1331);
          v469 += v459;
          if (!--v470)
            goto LABEL_652;
        }
LABEL_2377:
        abort();
      }
      do
      {
        sub_20B50671C(v26);
        v1000 = *(_QWORD *)(v26 + 56);
        *(_QWORD *)(v26 + 40) = *(_QWORD *)(v1000 - 8);
        *(_QWORD *)(v26 + 56) = v1000 - 8;
        if (*(_BYTE *)(v26 + 88))
          *(_BYTE *)(v26 + 88) = 0;
        v460 += 2 * v1256;
        --v1292;
      }
      while (v1292);
LABEL_1634:
      sub_20B50671C(v26);
      v1001 = v27;
      if ((_DWORD)v27)
      {
        if (!v460)
        {
          v1115 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 3;
            v1332 = 2 * v1115;
            sub_20B5098BC(v26, &v1331);
            v1115 += v459;
            if (!--v1001)
              goto LABEL_1992;
          }
          goto LABEL_2377;
        }
        v1002 = 0;
        do
        {
          v1331 = 3;
          v1332 = v460 + 2 * v1002;
          sub_20B5098BC(v26, &v1331);
          v1002 += v459;
          --v1001;
        }
        while (v1001);
      }
LABEL_1992:
      v1116 = *(_QWORD *)(v26 + 56);
      *(_QWORD *)(v26 + 40) = *(_QWORD *)(v1116 - 8);
      *(_QWORD *)(v26 + 56) = v1116 - 8;
      if (*(_BYTE *)(v26 + 88))
        *(_BYTE *)(v26 + 88) = 0;
LABEL_1994:
      v1117 = v1330;
      v1330 = 0;
      if (v1117)
        (*(void (**)(uint64_t))(*(_QWORD *)v1117 + 8))(v1117);
      v850 = v1319;
      if (!v1319)
        return;
      v1118 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1118);
      while (__stlxr(v852 - 1, v1118));
      goto LABEL_2373;
    case 20:
      sub_20B3789C8(a3, (uint64_t)&v1318);
      v378 = *a2;
      v379 = v1327;
      v380 = v1318;
      if (!v1318)
        goto LABEL_1465;
      v381 = v1319;
      if (v1319)
      {
        v382 = (unint64_t *)&v1319->__shared_owners_;
        do
          v383 = __ldxr(v382);
        while (__stxr(v383 + 1, v382));
        do
          v384 = __ldaxr(v382);
        while (__stlxr(v384 - 1, v382));
        if (!v384)
        {
          ((void (*)(std::__shared_weak_count *))v381->__on_zero_shared)(v381);
          std::__shared_weak_count::__release_weak(v381);
        }
        v380 = v1318;
        v385 = v1319;
        if (v1319)
        {
          v386 = (unint64_t *)&v1319->__shared_owners_;
          do
            v387 = __ldxr(v386);
          while (__stxr(v387 + 1, v386));
          do
            v388 = __ldaxr(v386);
          while (__stlxr(v388 - 1, v386));
          if (!v388)
          {
            ((void (*)(std::__shared_weak_count *))v385->__on_zero_shared)(v385);
            std::__shared_weak_count::__release_weak(v385);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v380 + 96))(&v1330, v380, 0);
      else
LABEL_1465:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2313;
      if (!v1322)
        goto LABEL_2313;
      v911 = v1323;
      if (!v1323)
        goto LABEL_2313;
      v912 = v1325;
      v1278 = v1326;
      v913 = v1320;
      if (v1328 && v1320)
      {
        v914 = v1318;
        v915 = v1319;
        if (v1319)
        {
          v916 = (unint64_t *)&v1319->__shared_owners_;
          do
            v917 = __ldxr(v916);
          while (__stxr(v917 + 1, v916));
          do
            v918 = __ldaxr(v916);
          while (__stlxr(v918 - 1, v916));
          if (!v918)
          {
            ((void (*)(std::__shared_weak_count *))v915->__on_zero_shared)(v915);
            std::__shared_weak_count::__release_weak(v915);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v914 + 88))(v914, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v913 = v1320;
      }
      v1314 = v911 - 1;
      if (v911 == 1)
        goto LABEL_1928;
      if ((_DWORD)v379)
      {
        v919 = 0;
        while (1)
        {
          sub_20B50671C(v378);
          if (!v913)
            break;
          v920 = 0;
          v921 = v379;
          do
          {
            v1331 = 3;
            v1332 = v913 + 4 * v920;
            sub_20B509D64(v378, (float **)&v1331);
            v920 += v912;
            --v921;
          }
          while (v921);
LABEL_1489:
          v924 = *(_QWORD *)(v378 + 56);
          *(_QWORD *)(v378 + 40) = *(_QWORD *)(v924 - 8);
          *(_QWORD *)(v378 + 56) = v924 - 8;
          if (*(_BYTE *)(v378 + 88))
            *(_BYTE *)(v378 + 88) = 0;
          v913 += 4 * v1278;
          if (++v919 == v1314)
            goto LABEL_1928;
        }
        v922 = 0;
        v923 = v379;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 3;
          v1332 = 4 * v922;
          sub_20B509D64(v378, (float **)&v1331);
          v922 += v912;
          if (!--v923)
            goto LABEL_1489;
        }
LABEL_2406:
        abort();
      }
      do
      {
        sub_20B50671C(v378);
        v1093 = *(_QWORD *)(v378 + 56);
        *(_QWORD *)(v378 + 40) = *(_QWORD *)(v1093 - 8);
        *(_QWORD *)(v378 + 56) = v1093 - 8;
        if (*(_BYTE *)(v378 + 88))
          *(_BYTE *)(v378 + 88) = 0;
        v913 += 4 * v1278;
        --v1314;
      }
      while (v1314);
LABEL_1928:
      sub_20B50671C(v378);
      v1094 = v379;
      if ((_DWORD)v379)
      {
        if (!v913)
        {
          v1231 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 3;
            v1332 = 4 * v1231;
            sub_20B509D64(v378, (float **)&v1331);
            v1231 += v912;
            if (!--v1094)
              goto LABEL_2311;
          }
          goto LABEL_2406;
        }
        v1095 = 0;
        do
        {
          v1331 = 3;
          v1332 = v913 + 4 * v1095;
          sub_20B509D64(v378, (float **)&v1331);
          v1095 += v912;
          --v1094;
        }
        while (v1094);
      }
LABEL_2311:
      v1232 = *(_QWORD *)(v378 + 56);
      *(_QWORD *)(v378 + 40) = *(_QWORD *)(v1232 - 8);
      *(_QWORD *)(v378 + 56) = v1232 - 8;
      if (*(_BYTE *)(v378 + 88))
        *(_BYTE *)(v378 + 88) = 0;
LABEL_2313:
      v1233 = v1330;
      v1330 = 0;
      if (v1233)
        (*(void (**)(uint64_t))(*(_QWORD *)v1233 + 8))(v1233);
      v850 = v1319;
      if (!v1319)
        return;
      v1234 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1234);
      while (__stlxr(v852 - 1, v1234));
      goto LABEL_2373;
    case 21:
      sub_20B2D7B44(a3, (uint64_t)&v1318);
      v433 = *a2;
      v434 = v1327;
      v435 = v1318;
      if (!v1318)
        goto LABEL_1595;
      v436 = v1319;
      if (v1319)
      {
        v437 = (unint64_t *)&v1319->__shared_owners_;
        do
          v438 = __ldxr(v437);
        while (__stxr(v438 + 1, v437));
        do
          v439 = __ldaxr(v437);
        while (__stlxr(v439 - 1, v437));
        if (!v439)
        {
          ((void (*)(std::__shared_weak_count *))v436->__on_zero_shared)(v436);
          std::__shared_weak_count::__release_weak(v436);
        }
        v435 = v1318;
        v440 = v1319;
        if (v1319)
        {
          v441 = (unint64_t *)&v1319->__shared_owners_;
          do
            v442 = __ldxr(v441);
          while (__stxr(v442 + 1, v441));
          do
            v443 = __ldaxr(v441);
          while (__stlxr(v443 - 1, v441));
          if (!v443)
          {
            ((void (*)(std::__shared_weak_count *))v440->__on_zero_shared)(v440);
            std::__shared_weak_count::__release_weak(v440);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v435 + 96))(&v1330, v435, 0);
      else
LABEL_1595:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2368;
      if (!v1322)
        goto LABEL_2368;
      v982 = v1323;
      if (!v1323)
        goto LABEL_2368;
      v983 = v1325;
      v1290 = v1326;
      v984 = v1320;
      if (v1328 && v1320)
      {
        v985 = v1318;
        v986 = v1319;
        if (v1319)
        {
          v987 = (unint64_t *)&v1319->__shared_owners_;
          do
            v988 = __ldxr(v987);
          while (__stxr(v988 + 1, v987));
          do
            v989 = __ldaxr(v987);
          while (__stlxr(v989 - 1, v987));
          if (!v989)
          {
            ((void (*)(std::__shared_weak_count *))v986->__on_zero_shared)(v986);
            std::__shared_weak_count::__release_weak(v986);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v985 + 88))(v985, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v984 = v1320;
      }
      v990 = v982 - 1;
      if (v982 == 1)
        goto LABEL_1973;
      if ((_DWORD)v434)
      {
        v991 = 0;
        while (1)
        {
          sub_20B50671C(v433);
          if (!v984)
            break;
          v992 = 0;
          v993 = v434;
          do
          {
            v1331 = 3;
            v1332 = v984 + v992;
            sub_20B506898(v433, (size_t *)&v1331);
            v992 += v983;
            --v993;
          }
          while (v993);
LABEL_1619:
          v996 = *(_QWORD *)(v433 + 56);
          *(_QWORD *)(v433 + 40) = *(_QWORD *)(v996 - 8);
          *(_QWORD *)(v433 + 56) = v996 - 8;
          if (*(_BYTE *)(v433 + 88))
            *(_BYTE *)(v433 + 88) = 0;
          v984 += v1290;
          if (++v991 == v982 - 1)
            goto LABEL_1973;
        }
        v994 = 0;
        v995 = v434;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 3;
          v1332 = v994;
          sub_20B506898(v433, (size_t *)&v1331);
          v994 += v983;
          if (!--v995)
            goto LABEL_1619;
        }
LABEL_2411:
        abort();
      }
      v984 += v1290 + v1290 * (unint64_t)(v982 - 2);
      do
      {
        sub_20B50671C(v433);
        v1108 = *(_QWORD *)(v433 + 56);
        *(_QWORD *)(v433 + 40) = *(_QWORD *)(v1108 - 8);
        *(_QWORD *)(v433 + 56) = v1108 - 8;
        if (*(_BYTE *)(v433 + 88))
          *(_BYTE *)(v433 + 88) = 0;
        --v990;
      }
      while (v990);
LABEL_1973:
      sub_20B50671C(v433);
      v1109 = v434;
      if ((_DWORD)v434)
      {
        if (!v984)
        {
          v1251 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 3;
            v1332 = v1251;
            sub_20B506898(v433, (size_t *)&v1331);
            v1251 += v983;
            if (!--v1109)
              goto LABEL_2366;
          }
          goto LABEL_2411;
        }
        v1110 = 0;
        do
        {
          v1331 = 3;
          v1332 = v984 + v1110;
          sub_20B506898(v433, (size_t *)&v1331);
          v1110 += v983;
          --v1109;
        }
        while (v1109);
      }
LABEL_2366:
      v1252 = *(_QWORD *)(v433 + 56);
      *(_QWORD *)(v433 + 40) = *(_QWORD *)(v1252 - 8);
      *(_QWORD *)(v433 + 56) = v1252 - 8;
      if (*(_BYTE *)(v433 + 88))
        *(_BYTE *)(v433 + 88) = 0;
LABEL_2368:
      v1253 = v1330;
      v1330 = 0;
      if (v1253)
        (*(void (**)(uint64_t))(*(_QWORD *)v1253 + 8))(v1253);
      v850 = v1319;
      if (!v1319)
        return;
      v1254 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1254);
      while (__stlxr(v852 - 1, v1254));
      goto LABEL_2373;
    case 22:
      sub_20B379000(a3, (uint64_t)&v1318);
      v147 = *a2;
      v148 = v1327;
      v149 = v1318;
      if (!v1318)
        goto LABEL_914;
      v150 = v1319;
      if (v1319)
      {
        v151 = (unint64_t *)&v1319->__shared_owners_;
        do
          v152 = __ldxr(v151);
        while (__stxr(v152 + 1, v151));
        do
          v153 = __ldaxr(v151);
        while (__stlxr(v153 - 1, v151));
        if (!v153)
        {
          ((void (*)(std::__shared_weak_count *))v150->__on_zero_shared)(v150);
          std::__shared_weak_count::__release_weak(v150);
        }
        v149 = v1318;
        v154 = v1319;
        if (v1319)
        {
          v155 = (unint64_t *)&v1319->__shared_owners_;
          do
            v156 = __ldxr(v155);
          while (__stxr(v156 + 1, v155));
          do
            v157 = __ldaxr(v155);
          while (__stlxr(v157 - 1, v155));
          if (!v157)
          {
            ((void (*)(std::__shared_weak_count *))v154->__on_zero_shared)(v154);
            std::__shared_weak_count::__release_weak(v154);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v149 + 96))(&v1330, v149, 0);
      else
LABEL_914:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2115;
      if (!v1322)
        goto LABEL_2115;
      v615 = v1323;
      if (!v1323)
        goto LABEL_2115;
      v616 = v1325;
      v1264 = v1326;
      v617 = v1320;
      if (v1328 && v1320)
      {
        v618 = v1318;
        v619 = v1319;
        if (v1319)
        {
          v620 = (unint64_t *)&v1319->__shared_owners_;
          do
            v621 = __ldxr(v620);
          while (__stxr(v621 + 1, v620));
          do
            v622 = __ldaxr(v620);
          while (__stlxr(v622 - 1, v620));
          if (!v622)
          {
            ((void (*)(std::__shared_weak_count *))v619->__on_zero_shared)(v619);
            std::__shared_weak_count::__release_weak(v619);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v618 + 88))(v618, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v617 = v1320;
      }
      v1300 = v615 - 1;
      if (v615 == 1)
        goto LABEL_1733;
      if ((_DWORD)v148)
      {
        v623 = 0;
        while (1)
        {
          sub_20B50671C(v147);
          if (!v617)
            break;
          v624 = 0;
          v625 = v148;
          do
          {
            v1331 = 3;
            v1332 = v617 + 2 * v624;
            sub_20B509034(v147, (uint64_t)&v1331);
            v624 += v616;
            --v625;
          }
          while (v625);
LABEL_938:
          v628 = *(_QWORD *)(v147 + 56);
          *(_QWORD *)(v147 + 40) = *(_QWORD *)(v628 - 8);
          *(_QWORD *)(v147 + 56) = v628 - 8;
          if (*(_BYTE *)(v147 + 88))
            *(_BYTE *)(v147 + 88) = 0;
          v617 += 2 * v1264;
          if (++v623 == v1300)
            goto LABEL_1733;
        }
        v626 = 0;
        v627 = v148;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 3;
          v1332 = 2 * v626;
          sub_20B509034(v147, (uint64_t)&v1331);
          v626 += v616;
          if (!--v627)
            goto LABEL_938;
        }
LABEL_2388:
        abort();
      }
      do
      {
        sub_20B50671C(v147);
        v1033 = *(_QWORD *)(v147 + 56);
        *(_QWORD *)(v147 + 40) = *(_QWORD *)(v1033 - 8);
        *(_QWORD *)(v147 + 56) = v1033 - 8;
        if (*(_BYTE *)(v147 + 88))
          *(_BYTE *)(v147 + 88) = 0;
        v617 += 2 * v1264;
        --v1300;
      }
      while (v1300);
LABEL_1733:
      sub_20B50671C(v147);
      v1034 = v148;
      if ((_DWORD)v148)
      {
        if (!v617)
        {
          v1159 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 3;
            v1332 = 2 * v1159;
            sub_20B509034(v147, (uint64_t)&v1331);
            v1159 += v616;
            if (!--v1034)
              goto LABEL_2113;
          }
          goto LABEL_2388;
        }
        v1035 = 0;
        do
        {
          v1331 = 3;
          v1332 = v617 + 2 * v1035;
          sub_20B509034(v147, (uint64_t)&v1331);
          v1035 += v616;
          --v1034;
        }
        while (v1034);
      }
LABEL_2113:
      v1160 = *(_QWORD *)(v147 + 56);
      *(_QWORD *)(v147 + 40) = *(_QWORD *)(v1160 - 8);
      *(_QWORD *)(v147 + 56) = v1160 - 8;
      if (*(_BYTE *)(v147 + 88))
        *(_BYTE *)(v147 + 88) = 0;
LABEL_2115:
      v1161 = v1330;
      v1330 = 0;
      if (v1161)
        (*(void (**)(uint64_t))(*(_QWORD *)v1161 + 8))(v1161);
      v850 = v1319;
      if (!v1319)
        return;
      v1162 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1162);
      while (__stlxr(v852 - 1, v1162));
      goto LABEL_2373;
    case 23:
      sub_20B379638(a3, (uint64_t)&v1318);
      v422 = *a2;
      v423 = v1327;
      v424 = v1318;
      if (!v1318)
        goto LABEL_1569;
      v425 = v1319;
      if (v1319)
      {
        v426 = (unint64_t *)&v1319->__shared_owners_;
        do
          v427 = __ldxr(v426);
        while (__stxr(v427 + 1, v426));
        do
          v428 = __ldaxr(v426);
        while (__stlxr(v428 - 1, v426));
        if (!v428)
        {
          ((void (*)(std::__shared_weak_count *))v425->__on_zero_shared)(v425);
          std::__shared_weak_count::__release_weak(v425);
        }
        v424 = v1318;
        v429 = v1319;
        if (v1319)
        {
          v430 = (unint64_t *)&v1319->__shared_owners_;
          do
            v431 = __ldxr(v430);
          while (__stxr(v431 + 1, v430));
          do
            v432 = __ldaxr(v430);
          while (__stlxr(v432 - 1, v430));
          if (!v432)
          {
            ((void (*)(std::__shared_weak_count *))v429->__on_zero_shared)(v429);
            std::__shared_weak_count::__release_weak(v429);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v424 + 96))(&v1330, v424, 0);
      else
LABEL_1569:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2357;
      if (!v1322)
        goto LABEL_2357;
      v968 = v1323;
      if (!v1323)
        goto LABEL_2357;
      v969 = v1325;
      v1281 = v1326;
      v970 = v1320;
      if (v1328 && v1320)
      {
        v971 = v1318;
        v972 = v1319;
        if (v1319)
        {
          v973 = (unint64_t *)&v1319->__shared_owners_;
          do
            v974 = __ldxr(v973);
          while (__stxr(v974 + 1, v973));
          do
            v975 = __ldaxr(v973);
          while (__stlxr(v975 - 1, v973));
          if (!v975)
          {
            ((void (*)(std::__shared_weak_count *))v972->__on_zero_shared)(v972);
            std::__shared_weak_count::__release_weak(v972);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v971 + 88))(v971, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v970 = v1320;
      }
      v1317 = v968 - 1;
      if (v968 == 1)
        goto LABEL_1964;
      if ((_DWORD)v423)
      {
        v976 = 0;
        while (1)
        {
          sub_20B50671C(v422);
          if (!v970)
            break;
          v977 = 0;
          v978 = v423;
          do
          {
            v1331 = 3;
            v1332 = v970 + 2 * v977;
            sub_20B5098BC(v422, &v1331);
            v977 += v969;
            --v978;
          }
          while (v978);
LABEL_1593:
          v981 = *(_QWORD *)(v422 + 56);
          *(_QWORD *)(v422 + 40) = *(_QWORD *)(v981 - 8);
          *(_QWORD *)(v422 + 56) = v981 - 8;
          if (*(_BYTE *)(v422 + 88))
            *(_BYTE *)(v422 + 88) = 0;
          v970 += 2 * v1281;
          if (++v976 == v1317)
            goto LABEL_1964;
        }
        v979 = 0;
        v980 = v423;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 3;
          v1332 = 2 * v979;
          sub_20B5098BC(v422, &v1331);
          v979 += v969;
          if (!--v980)
            goto LABEL_1593;
        }
LABEL_2410:
        abort();
      }
      do
      {
        sub_20B50671C(v422);
        v1105 = *(_QWORD *)(v422 + 56);
        *(_QWORD *)(v422 + 40) = *(_QWORD *)(v1105 - 8);
        *(_QWORD *)(v422 + 56) = v1105 - 8;
        if (*(_BYTE *)(v422 + 88))
          *(_BYTE *)(v422 + 88) = 0;
        v970 += 2 * v1281;
        --v1317;
      }
      while (v1317);
LABEL_1964:
      sub_20B50671C(v422);
      v1106 = v423;
      if ((_DWORD)v423)
      {
        if (!v970)
        {
          v1247 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 3;
            v1332 = 2 * v1247;
            sub_20B5098BC(v422, &v1331);
            v1247 += v969;
            if (!--v1106)
              goto LABEL_2355;
          }
          goto LABEL_2410;
        }
        v1107 = 0;
        do
        {
          v1331 = 3;
          v1332 = v970 + 2 * v1107;
          sub_20B5098BC(v422, &v1331);
          v1107 += v969;
          --v1106;
        }
        while (v1106);
      }
LABEL_2355:
      v1248 = *(_QWORD *)(v422 + 56);
      *(_QWORD *)(v422 + 40) = *(_QWORD *)(v1248 - 8);
      *(_QWORD *)(v422 + 56) = v1248 - 8;
      if (*(_BYTE *)(v422 + 88))
        *(_BYTE *)(v422 + 88) = 0;
LABEL_2357:
      v1249 = v1330;
      v1330 = 0;
      if (v1249)
        (*(void (**)(uint64_t))(*(_QWORD *)v1249 + 8))(v1249);
      v850 = v1319;
      if (!v1319)
        return;
      v1250 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1250);
      while (__stlxr(v852 - 1, v1250));
      goto LABEL_2373;
    case 24:
      sub_20B379C70(a3, (uint64_t)&v1318);
      v70 = *a2;
      v71 = v1327;
      v72 = v1318;
      if (!v1318)
        goto LABEL_732;
      v73 = v1319;
      if (v1319)
      {
        v74 = (unint64_t *)&v1319->__shared_owners_;
        do
          v75 = __ldxr(v74);
        while (__stxr(v75 + 1, v74));
        do
          v76 = __ldaxr(v74);
        while (__stlxr(v76 - 1, v74));
        if (!v76)
        {
          ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
          std::__shared_weak_count::__release_weak(v73);
        }
        v72 = v1318;
        v77 = v1319;
        if (v1319)
        {
          v78 = (unint64_t *)&v1319->__shared_owners_;
          do
            v79 = __ldxr(v78);
          while (__stxr(v79 + 1, v78));
          do
            v80 = __ldaxr(v78);
          while (__stlxr(v80 - 1, v78));
          if (!v80)
          {
            ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
            std::__shared_weak_count::__release_weak(v77);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v72 + 96))(&v1330, v72, 0);
      else
LABEL_732:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2038;
      if (!v1322)
        goto LABEL_2038;
      v516 = v1323;
      if (!v1323)
        goto LABEL_2038;
      v517 = v1325;
      v1258 = v1326;
      v518 = v1320;
      if (v1328 && v1320)
      {
        v519 = v1318;
        v520 = v1319;
        if (v1319)
        {
          v521 = (unint64_t *)&v1319->__shared_owners_;
          do
            v522 = __ldxr(v521);
          while (__stxr(v522 + 1, v521));
          do
            v523 = __ldaxr(v521);
          while (__stlxr(v523 - 1, v521));
          if (!v523)
          {
            ((void (*)(std::__shared_weak_count *))v520->__on_zero_shared)(v520);
            std::__shared_weak_count::__release_weak(v520);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v519 + 88))(v519, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v518 = v1320;
      }
      v1294 = v516 - 1;
      if (v516 == 1)
        goto LABEL_1670;
      if ((_DWORD)v71)
      {
        v524 = 0;
        while (1)
        {
          sub_20B50671C(v70);
          if (!v518)
            break;
          v525 = 0;
          v526 = v71;
          do
          {
            v1331 = 3;
            v1332 = v518 + 4 * v525;
            sub_20B509D64(v70, (float **)&v1331);
            v525 += v517;
            --v526;
          }
          while (v526);
LABEL_756:
          v529 = *(_QWORD *)(v70 + 56);
          *(_QWORD *)(v70 + 40) = *(_QWORD *)(v529 - 8);
          *(_QWORD *)(v70 + 56) = v529 - 8;
          if (*(_BYTE *)(v70 + 88))
            *(_BYTE *)(v70 + 88) = 0;
          v518 += 4 * v1258;
          if (++v524 == v1294)
            goto LABEL_1670;
        }
        v527 = 0;
        v528 = v71;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 3;
          v1332 = 4 * v527;
          sub_20B509D64(v70, (float **)&v1331);
          v527 += v517;
          if (!--v528)
            goto LABEL_756;
        }
LABEL_2381:
        abort();
      }
      do
      {
        sub_20B50671C(v70);
        v1012 = *(_QWORD *)(v70 + 56);
        *(_QWORD *)(v70 + 40) = *(_QWORD *)(v1012 - 8);
        *(_QWORD *)(v70 + 56) = v1012 - 8;
        if (*(_BYTE *)(v70 + 88))
          *(_BYTE *)(v70 + 88) = 0;
        v518 += 4 * v1258;
        --v1294;
      }
      while (v1294);
LABEL_1670:
      sub_20B50671C(v70);
      v1013 = v71;
      if ((_DWORD)v71)
      {
        if (!v518)
        {
          v1131 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 3;
            v1332 = 4 * v1131;
            sub_20B509D64(v70, (float **)&v1331);
            v1131 += v517;
            if (!--v1013)
              goto LABEL_2036;
          }
          goto LABEL_2381;
        }
        v1014 = 0;
        do
        {
          v1331 = 3;
          v1332 = v518 + 4 * v1014;
          sub_20B509D64(v70, (float **)&v1331);
          v1014 += v517;
          --v1013;
        }
        while (v1013);
      }
LABEL_2036:
      v1132 = *(_QWORD *)(v70 + 56);
      *(_QWORD *)(v70 + 40) = *(_QWORD *)(v1132 - 8);
      *(_QWORD *)(v70 + 56) = v1132 - 8;
      if (*(_BYTE *)(v70 + 88))
        *(_BYTE *)(v70 + 88) = 0;
LABEL_2038:
      v1133 = v1330;
      v1330 = 0;
      if (v1133)
        (*(void (**)(uint64_t))(*(_QWORD *)v1133 + 8))(v1133);
      v850 = v1319;
      if (!v1319)
        return;
      v1134 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1134);
      while (__stlxr(v852 - 1, v1134));
      goto LABEL_2373;
    case 25:
      sub_20B37A2A8(a3, (uint64_t)&v1318);
      v37 = *a2;
      v38 = v1327;
      v39 = v1318;
      if (!v1318)
        goto LABEL_654;
      v40 = v1319;
      if (v1319)
      {
        v41 = (unint64_t *)&v1319->__shared_owners_;
        do
          v42 = __ldxr(v41);
        while (__stxr(v42 + 1, v41));
        do
          v43 = __ldaxr(v41);
        while (__stlxr(v43 - 1, v41));
        if (!v43)
        {
          ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
          std::__shared_weak_count::__release_weak(v40);
        }
        v39 = v1318;
        v44 = v1319;
        if (v1319)
        {
          v45 = (unint64_t *)&v1319->__shared_owners_;
          do
            v46 = __ldxr(v45);
          while (__stxr(v46 + 1, v45));
          do
            v47 = __ldaxr(v45);
          while (__stlxr(v47 - 1, v45));
          if (!v47)
          {
            ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
            std::__shared_weak_count::__release_weak(v44);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v39 + 96))(&v1330, v39, 0);
      else
LABEL_654:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2005;
      if (!v1322)
        goto LABEL_2005;
      v472 = v1323;
      if (!v1323)
        goto LABEL_2005;
      v473 = v1325;
      v1282 = v1326;
      v474 = v1320;
      if (v1328 && v1320)
      {
        v475 = v1318;
        v476 = v1319;
        if (v1319)
        {
          v477 = (unint64_t *)&v1319->__shared_owners_;
          do
            v478 = __ldxr(v477);
          while (__stxr(v478 + 1, v477));
          do
            v479 = __ldaxr(v477);
          while (__stlxr(v479 - 1, v477));
          if (!v479)
          {
            ((void (*)(std::__shared_weak_count *))v476->__on_zero_shared)(v476);
            std::__shared_weak_count::__release_weak(v476);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v475 + 88))(v475, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v474 = v1320;
      }
      v480 = v472 - 1;
      if (v472 == 1)
        goto LABEL_1643;
      if ((_DWORD)v38)
      {
        v481 = 0;
        while (1)
        {
          sub_20B50671C(v37);
          if (!v474)
            break;
          v482 = 0;
          v483 = v38;
          do
          {
            v1331 = 4;
            v1332 = v474 + v482;
            sub_20B506898(v37, (size_t *)&v1331);
            v482 += v473;
            --v483;
          }
          while (v483);
LABEL_678:
          v486 = *(_QWORD *)(v37 + 56);
          *(_QWORD *)(v37 + 40) = *(_QWORD *)(v486 - 8);
          *(_QWORD *)(v37 + 56) = v486 - 8;
          if (*(_BYTE *)(v37 + 88))
            *(_BYTE *)(v37 + 88) = 0;
          v474 += v1282;
          if (++v481 == v472 - 1)
            goto LABEL_1643;
        }
        v484 = 0;
        v485 = v38;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = v484;
          sub_20B506898(v37, (size_t *)&v1331);
          v484 += v473;
          if (!--v485)
            goto LABEL_678;
        }
LABEL_2378:
        abort();
      }
      v474 += v1282 + v1282 * (unint64_t)(v472 - 2);
      do
      {
        sub_20B50671C(v37);
        v1003 = *(_QWORD *)(v37 + 56);
        *(_QWORD *)(v37 + 40) = *(_QWORD *)(v1003 - 8);
        *(_QWORD *)(v37 + 56) = v1003 - 8;
        if (*(_BYTE *)(v37 + 88))
          *(_BYTE *)(v37 + 88) = 0;
        --v480;
      }
      while (v480);
LABEL_1643:
      sub_20B50671C(v37);
      v1004 = v38;
      if ((_DWORD)v38)
      {
        if (!v474)
        {
          v1119 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = v1119;
            sub_20B506898(v37, (size_t *)&v1331);
            v1119 += v473;
            if (!--v1004)
              goto LABEL_2003;
          }
          goto LABEL_2378;
        }
        v1005 = 0;
        do
        {
          v1331 = 4;
          v1332 = v474 + v1005;
          sub_20B506898(v37, (size_t *)&v1331);
          v1005 += v473;
          --v1004;
        }
        while (v1004);
      }
LABEL_2003:
      v1120 = *(_QWORD *)(v37 + 56);
      *(_QWORD *)(v37 + 40) = *(_QWORD *)(v1120 - 8);
      *(_QWORD *)(v37 + 56) = v1120 - 8;
      if (*(_BYTE *)(v37 + 88))
        *(_BYTE *)(v37 + 88) = 0;
LABEL_2005:
      v1121 = v1330;
      v1330 = 0;
      if (v1121)
        (*(void (**)(uint64_t))(*(_QWORD *)v1121 + 8))(v1121);
      v850 = v1319;
      if (!v1319)
        return;
      v1122 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1122);
      while (__stlxr(v852 - 1, v1122));
      goto LABEL_2373;
    case 26:
      sub_20B37A8DC(a3, (uint64_t)&v1318);
      v158 = *a2;
      v159 = v1327;
      v160 = v1318;
      if (!v1318)
        goto LABEL_940;
      v161 = v1319;
      if (v1319)
      {
        v162 = (unint64_t *)&v1319->__shared_owners_;
        do
          v163 = __ldxr(v162);
        while (__stxr(v163 + 1, v162));
        do
          v164 = __ldaxr(v162);
        while (__stlxr(v164 - 1, v162));
        if (!v164)
        {
          ((void (*)(std::__shared_weak_count *))v161->__on_zero_shared)(v161);
          std::__shared_weak_count::__release_weak(v161);
        }
        v160 = v1318;
        v165 = v1319;
        if (v1319)
        {
          v166 = (unint64_t *)&v1319->__shared_owners_;
          do
            v167 = __ldxr(v166);
          while (__stxr(v167 + 1, v166));
          do
            v168 = __ldaxr(v166);
          while (__stlxr(v168 - 1, v166));
          if (!v168)
          {
            ((void (*)(std::__shared_weak_count *))v165->__on_zero_shared)(v165);
            std::__shared_weak_count::__release_weak(v165);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v160 + 96))(&v1330, v160, 0);
      else
LABEL_940:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2126;
      if (!v1322)
        goto LABEL_2126;
      v629 = v1323;
      if (!v1323)
        goto LABEL_2126;
      v630 = v1325;
      v1265 = v1326;
      v631 = v1320;
      if (v1328 && v1320)
      {
        v632 = v1318;
        v633 = v1319;
        if (v1319)
        {
          v634 = (unint64_t *)&v1319->__shared_owners_;
          do
            v635 = __ldxr(v634);
          while (__stxr(v635 + 1, v634));
          do
            v636 = __ldaxr(v634);
          while (__stlxr(v636 - 1, v634));
          if (!v636)
          {
            ((void (*)(std::__shared_weak_count *))v633->__on_zero_shared)(v633);
            std::__shared_weak_count::__release_weak(v633);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v632 + 88))(v632, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v631 = v1320;
      }
      v1301 = v629 - 1;
      if (v629 == 1)
        goto LABEL_1742;
      if ((_DWORD)v159)
      {
        v637 = 0;
        while (1)
        {
          sub_20B50671C(v158);
          if (!v631)
            break;
          v638 = 0;
          v639 = v159;
          do
          {
            v1331 = 4;
            v1332 = v631 + 2 * v638;
            sub_20B509034(v158, (uint64_t)&v1331);
            v638 += v630;
            --v639;
          }
          while (v639);
LABEL_964:
          v642 = *(_QWORD *)(v158 + 56);
          *(_QWORD *)(v158 + 40) = *(_QWORD *)(v642 - 8);
          *(_QWORD *)(v158 + 56) = v642 - 8;
          if (*(_BYTE *)(v158 + 88))
            *(_BYTE *)(v158 + 88) = 0;
          v631 += 2 * v1265;
          if (++v637 == v1301)
            goto LABEL_1742;
        }
        v640 = 0;
        v641 = v159;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = 2 * v640;
          sub_20B509034(v158, (uint64_t)&v1331);
          v640 += v630;
          if (!--v641)
            goto LABEL_964;
        }
LABEL_2389:
        abort();
      }
      do
      {
        sub_20B50671C(v158);
        v1036 = *(_QWORD *)(v158 + 56);
        *(_QWORD *)(v158 + 40) = *(_QWORD *)(v1036 - 8);
        *(_QWORD *)(v158 + 56) = v1036 - 8;
        if (*(_BYTE *)(v158 + 88))
          *(_BYTE *)(v158 + 88) = 0;
        v631 += 2 * v1265;
        --v1301;
      }
      while (v1301);
LABEL_1742:
      sub_20B50671C(v158);
      v1037 = v159;
      if ((_DWORD)v159)
      {
        if (!v631)
        {
          v1163 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = 2 * v1163;
            sub_20B509034(v158, (uint64_t)&v1331);
            v1163 += v630;
            if (!--v1037)
              goto LABEL_2124;
          }
          goto LABEL_2389;
        }
        v1038 = 0;
        do
        {
          v1331 = 4;
          v1332 = v631 + 2 * v1038;
          sub_20B509034(v158, (uint64_t)&v1331);
          v1038 += v630;
          --v1037;
        }
        while (v1037);
      }
LABEL_2124:
      v1164 = *(_QWORD *)(v158 + 56);
      *(_QWORD *)(v158 + 40) = *(_QWORD *)(v1164 - 8);
      *(_QWORD *)(v158 + 56) = v1164 - 8;
      if (*(_BYTE *)(v158 + 88))
        *(_BYTE *)(v158 + 88) = 0;
LABEL_2126:
      v1165 = v1330;
      v1330 = 0;
      if (v1165)
        (*(void (**)(uint64_t))(*(_QWORD *)v1165 + 8))(v1165);
      v850 = v1319;
      if (!v1319)
        return;
      v1166 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1166);
      while (__stlxr(v852 - 1, v1166));
      goto LABEL_2373;
    case 27:
      sub_20B37AF14(a3, (uint64_t)&v1318);
      v15 = *a2;
      v16 = v1327;
      v17 = v1318;
      if (!v1318)
        goto LABEL_602;
      v18 = v1319;
      if (v1319)
      {
        v19 = (unint64_t *)&v1319->__shared_owners_;
        do
          v20 = __ldxr(v19);
        while (__stxr(v20 + 1, v19));
        do
          v21 = __ldaxr(v19);
        while (__stlxr(v21 - 1, v19));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
        v17 = v1318;
        v22 = v1319;
        if (v1319)
        {
          v23 = (unint64_t *)&v1319->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
            std::__shared_weak_count::__release_weak(v22);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v17 + 96))(&v1330, v17, 0);
      else
LABEL_602:
        v1330 = 0;
      if (!v1321)
        goto LABEL_1983;
      if (!v1322)
        goto LABEL_1983;
      v444 = v1323;
      if (!v1323)
        goto LABEL_1983;
      v445 = v1325;
      v1255 = v1326;
      v446 = v1320;
      if (v1328 && v1320)
      {
        v447 = v1318;
        v448 = v1319;
        if (v1319)
        {
          v449 = (unint64_t *)&v1319->__shared_owners_;
          do
            v450 = __ldxr(v449);
          while (__stxr(v450 + 1, v449));
          do
            v451 = __ldaxr(v449);
          while (__stlxr(v451 - 1, v449));
          if (!v451)
          {
            ((void (*)(std::__shared_weak_count *))v448->__on_zero_shared)(v448);
            std::__shared_weak_count::__release_weak(v448);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v447 + 88))(v447, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v446 = v1320;
      }
      v1291 = v444 - 1;
      if (v444 == 1)
        goto LABEL_1625;
      if ((_DWORD)v16)
      {
        v452 = 0;
        while (1)
        {
          sub_20B50671C(v15);
          if (!v446)
            break;
          v453 = 0;
          v454 = v16;
          do
          {
            v1331 = 4;
            v1332 = v446 + 2 * v453;
            sub_20B5098BC(v15, &v1331);
            v453 += v445;
            --v454;
          }
          while (v454);
LABEL_626:
          v457 = *(_QWORD *)(v15 + 56);
          *(_QWORD *)(v15 + 40) = *(_QWORD *)(v457 - 8);
          *(_QWORD *)(v15 + 56) = v457 - 8;
          if (*(_BYTE *)(v15 + 88))
            *(_BYTE *)(v15 + 88) = 0;
          v446 += 2 * v1255;
          if (++v452 == v1291)
            goto LABEL_1625;
        }
        v455 = 0;
        v456 = v16;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = 2 * v455;
          sub_20B5098BC(v15, &v1331);
          v455 += v445;
          if (!--v456)
            goto LABEL_626;
        }
LABEL_2376:
        abort();
      }
      do
      {
        sub_20B50671C(v15);
        v997 = *(_QWORD *)(v15 + 56);
        *(_QWORD *)(v15 + 40) = *(_QWORD *)(v997 - 8);
        *(_QWORD *)(v15 + 56) = v997 - 8;
        if (*(_BYTE *)(v15 + 88))
          *(_BYTE *)(v15 + 88) = 0;
        v446 += 2 * v1255;
        --v1291;
      }
      while (v1291);
LABEL_1625:
      sub_20B50671C(v15);
      v998 = v16;
      if ((_DWORD)v16)
      {
        if (!v446)
        {
          v1111 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = 2 * v1111;
            sub_20B5098BC(v15, &v1331);
            v1111 += v445;
            if (!--v998)
              goto LABEL_1981;
          }
          goto LABEL_2376;
        }
        v999 = 0;
        do
        {
          v1331 = 4;
          v1332 = v446 + 2 * v999;
          sub_20B5098BC(v15, &v1331);
          v999 += v445;
          --v998;
        }
        while (v998);
      }
LABEL_1981:
      v1112 = *(_QWORD *)(v15 + 56);
      *(_QWORD *)(v15 + 40) = *(_QWORD *)(v1112 - 8);
      *(_QWORD *)(v15 + 56) = v1112 - 8;
      if (*(_BYTE *)(v15 + 88))
        *(_BYTE *)(v15 + 88) = 0;
LABEL_1983:
      v1113 = v1330;
      v1330 = 0;
      if (v1113)
        (*(void (**)(uint64_t))(*(_QWORD *)v1113 + 8))(v1113);
      v850 = v1319;
      if (!v1319)
        return;
      v1114 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1114);
      while (__stlxr(v852 - 1, v1114));
      goto LABEL_2373;
    case 28:
      sub_20B37B54C(a3, (uint64_t)&v1318);
      v202 = *a2;
      v203 = v1327;
      v204 = v1318;
      if (!v1318)
        goto LABEL_1036;
      v205 = v1319;
      if (v1319)
      {
        v206 = (unint64_t *)&v1319->__shared_owners_;
        do
          v207 = __ldxr(v206);
        while (__stxr(v207 + 1, v206));
        do
          v208 = __ldaxr(v206);
        while (__stlxr(v208 - 1, v206));
        if (!v208)
        {
          ((void (*)(std::__shared_weak_count *))v205->__on_zero_shared)(v205);
          std::__shared_weak_count::__release_weak(v205);
        }
        v204 = v1318;
        v209 = v1319;
        if (v1319)
        {
          v210 = (unint64_t *)&v1319->__shared_owners_;
          do
            v211 = __ldxr(v210);
          while (__stxr(v211 + 1, v210));
          do
            v212 = __ldaxr(v210);
          while (__stlxr(v212 - 1, v210));
          if (!v212)
          {
            ((void (*)(std::__shared_weak_count *))v209->__on_zero_shared)(v209);
            std::__shared_weak_count::__release_weak(v209);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v204 + 96))(&v1330, v204, 0);
      else
LABEL_1036:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2159;
      if (!v1322)
        goto LABEL_2159;
      v680 = v1323;
      if (!v1323)
        goto LABEL_2159;
      v681 = v1325;
      v1268 = v1326;
      v682 = v1320;
      if (v1328 && v1320)
      {
        v683 = v1318;
        v684 = v1319;
        if (v1319)
        {
          v685 = (unint64_t *)&v1319->__shared_owners_;
          do
            v686 = __ldxr(v685);
          while (__stxr(v686 + 1, v685));
          do
            v687 = __ldaxr(v685);
          while (__stlxr(v687 - 1, v685));
          if (!v687)
          {
            ((void (*)(std::__shared_weak_count *))v684->__on_zero_shared)(v684);
            std::__shared_weak_count::__release_weak(v684);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v683 + 88))(v683, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v682 = v1320;
      }
      v1304 = v680 - 1;
      if (v680 == 1)
        goto LABEL_1780;
      if ((_DWORD)v203)
      {
        v688 = 0;
        while (1)
        {
          sub_20B50671C(v202);
          if (!v682)
            break;
          v689 = 0;
          v690 = v203;
          do
          {
            v1331 = 4;
            v1332 = v682 + 4 * v689;
            sub_20B509D64(v202, (float **)&v1331);
            v689 += v681;
            --v690;
          }
          while (v690);
LABEL_1060:
          v693 = *(_QWORD *)(v202 + 56);
          *(_QWORD *)(v202 + 40) = *(_QWORD *)(v693 - 8);
          *(_QWORD *)(v202 + 56) = v693 - 8;
          if (*(_BYTE *)(v202 + 88))
            *(_BYTE *)(v202 + 88) = 0;
          v682 += 4 * v1268;
          if (++v688 == v1304)
            goto LABEL_1780;
        }
        v691 = 0;
        v692 = v203;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = 4 * v691;
          sub_20B509D64(v202, (float **)&v1331);
          v691 += v681;
          if (!--v692)
            goto LABEL_1060;
        }
LABEL_2392:
        abort();
      }
      do
      {
        sub_20B50671C(v202);
        v1047 = *(_QWORD *)(v202 + 56);
        *(_QWORD *)(v202 + 40) = *(_QWORD *)(v1047 - 8);
        *(_QWORD *)(v202 + 56) = v1047 - 8;
        if (*(_BYTE *)(v202 + 88))
          *(_BYTE *)(v202 + 88) = 0;
        v682 += 4 * v1268;
        --v1304;
      }
      while (v1304);
LABEL_1780:
      sub_20B50671C(v202);
      v1048 = v203;
      if ((_DWORD)v203)
      {
        if (!v682)
        {
          v1175 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = 4 * v1175;
            sub_20B509D64(v202, (float **)&v1331);
            v1175 += v681;
            if (!--v1048)
              goto LABEL_2157;
          }
          goto LABEL_2392;
        }
        v1049 = 0;
        do
        {
          v1331 = 4;
          v1332 = v682 + 4 * v1049;
          sub_20B509D64(v202, (float **)&v1331);
          v1049 += v681;
          --v1048;
        }
        while (v1048);
      }
LABEL_2157:
      v1176 = *(_QWORD *)(v202 + 56);
      *(_QWORD *)(v202 + 40) = *(_QWORD *)(v1176 - 8);
      *(_QWORD *)(v202 + 56) = v1176 - 8;
      if (*(_BYTE *)(v202 + 88))
        *(_BYTE *)(v202 + 88) = 0;
LABEL_2159:
      v1177 = v1330;
      v1330 = 0;
      if (v1177)
        (*(void (**)(uint64_t))(*(_QWORD *)v1177 + 8))(v1177);
      v850 = v1319;
      if (!v1319)
        return;
      v1178 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1178);
      while (__stlxr(v852 - 1, v1178));
      goto LABEL_2373;
    case 29:
      sub_20B37BB84(a3, (uint64_t)&v1318);
      v59 = *a2;
      v60 = v1327;
      v61 = v1318;
      if (!v1318)
        goto LABEL_706;
      v62 = v1319;
      if (v1319)
      {
        v63 = (unint64_t *)&v1319->__shared_owners_;
        do
          v64 = __ldxr(v63);
        while (__stxr(v64 + 1, v63));
        do
          v65 = __ldaxr(v63);
        while (__stlxr(v65 - 1, v63));
        if (!v65)
        {
          ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
          std::__shared_weak_count::__release_weak(v62);
        }
        v61 = v1318;
        v66 = v1319;
        if (v1319)
        {
          v67 = (unint64_t *)&v1319->__shared_owners_;
          do
            v68 = __ldxr(v67);
          while (__stxr(v68 + 1, v67));
          do
            v69 = __ldaxr(v67);
          while (__stlxr(v69 - 1, v67));
          if (!v69)
          {
            ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
            std::__shared_weak_count::__release_weak(v66);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v61 + 96))(&v1330, v61, 0);
      else
LABEL_706:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2027;
      if (!v1322)
        goto LABEL_2027;
      v501 = v1323;
      if (!v1323)
        goto LABEL_2027;
      v502 = v1325;
      v1283 = v1326;
      v503 = v1320;
      if (v1328 && v1320)
      {
        v504 = v1318;
        v505 = v1319;
        if (v1319)
        {
          v506 = (unint64_t *)&v1319->__shared_owners_;
          do
            v507 = __ldxr(v506);
          while (__stxr(v507 + 1, v506));
          do
            v508 = __ldaxr(v506);
          while (__stlxr(v508 - 1, v506));
          if (!v508)
          {
            ((void (*)(std::__shared_weak_count *))v505->__on_zero_shared)(v505);
            std::__shared_weak_count::__release_weak(v505);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v504 + 88))(v504, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v503 = v1320;
      }
      v509 = v501 - 1;
      if (v501 == 1)
        goto LABEL_1661;
      if ((_DWORD)v60)
      {
        v510 = 0;
        while (1)
        {
          sub_20B50671C(v59);
          if (!v503)
            break;
          v511 = 0;
          v512 = v60;
          do
          {
            v1331 = 4;
            v1332 = v503 + v511;
            sub_20B506898(v59, (size_t *)&v1331);
            v511 += v502;
            --v512;
          }
          while (v512);
LABEL_730:
          v515 = *(_QWORD *)(v59 + 56);
          *(_QWORD *)(v59 + 40) = *(_QWORD *)(v515 - 8);
          *(_QWORD *)(v59 + 56) = v515 - 8;
          if (*(_BYTE *)(v59 + 88))
            *(_BYTE *)(v59 + 88) = 0;
          v503 += v1283;
          if (++v510 == v501 - 1)
            goto LABEL_1661;
        }
        v513 = 0;
        v514 = v60;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = v513;
          sub_20B506898(v59, (size_t *)&v1331);
          v513 += v502;
          if (!--v514)
            goto LABEL_730;
        }
LABEL_2380:
        abort();
      }
      v503 += v1283 + v1283 * (unint64_t)(v501 - 2);
      do
      {
        sub_20B50671C(v59);
        v1009 = *(_QWORD *)(v59 + 56);
        *(_QWORD *)(v59 + 40) = *(_QWORD *)(v1009 - 8);
        *(_QWORD *)(v59 + 56) = v1009 - 8;
        if (*(_BYTE *)(v59 + 88))
          *(_BYTE *)(v59 + 88) = 0;
        --v509;
      }
      while (v509);
LABEL_1661:
      sub_20B50671C(v59);
      v1010 = v60;
      if ((_DWORD)v60)
      {
        if (!v503)
        {
          v1127 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = v1127;
            sub_20B506898(v59, (size_t *)&v1331);
            v1127 += v502;
            if (!--v1010)
              goto LABEL_2025;
          }
          goto LABEL_2380;
        }
        v1011 = 0;
        do
        {
          v1331 = 4;
          v1332 = v503 + v1011;
          sub_20B506898(v59, (size_t *)&v1331);
          v1011 += v502;
          --v1010;
        }
        while (v1010);
      }
LABEL_2025:
      v1128 = *(_QWORD *)(v59 + 56);
      *(_QWORD *)(v59 + 40) = *(_QWORD *)(v1128 - 8);
      *(_QWORD *)(v59 + 56) = v1128 - 8;
      if (*(_BYTE *)(v59 + 88))
        *(_BYTE *)(v59 + 88) = 0;
LABEL_2027:
      v1129 = v1330;
      v1330 = 0;
      if (v1129)
        (*(void (**)(uint64_t))(*(_QWORD *)v1129 + 8))(v1129);
      v850 = v1319;
      if (!v1319)
        return;
      v1130 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1130);
      while (__stlxr(v852 - 1, v1130));
      goto LABEL_2373;
    case 30:
      sub_20B37C1B8(a3, (uint64_t)&v1318);
      v235 = *a2;
      v236 = v1327;
      v237 = v1318;
      if (!v1318)
        goto LABEL_1114;
      v238 = v1319;
      if (v1319)
      {
        v239 = (unint64_t *)&v1319->__shared_owners_;
        do
          v240 = __ldxr(v239);
        while (__stxr(v240 + 1, v239));
        do
          v241 = __ldaxr(v239);
        while (__stlxr(v241 - 1, v239));
        if (!v241)
        {
          ((void (*)(std::__shared_weak_count *))v238->__on_zero_shared)(v238);
          std::__shared_weak_count::__release_weak(v238);
        }
        v237 = v1318;
        v242 = v1319;
        if (v1319)
        {
          v243 = (unint64_t *)&v1319->__shared_owners_;
          do
            v244 = __ldxr(v243);
          while (__stxr(v244 + 1, v243));
          do
            v245 = __ldaxr(v243);
          while (__stlxr(v245 - 1, v243));
          if (!v245)
          {
            ((void (*)(std::__shared_weak_count *))v242->__on_zero_shared)(v242);
            std::__shared_weak_count::__release_weak(v242);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v237 + 96))(&v1330, v237, 0);
      else
LABEL_1114:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2192;
      if (!v1322)
        goto LABEL_2192;
      v722 = v1323;
      if (!v1323)
        goto LABEL_2192;
      v723 = v1325;
      v1271 = v1326;
      v724 = v1320;
      if (v1328 && v1320)
      {
        v725 = v1318;
        v726 = v1319;
        if (v1319)
        {
          v727 = (unint64_t *)&v1319->__shared_owners_;
          do
            v728 = __ldxr(v727);
          while (__stxr(v728 + 1, v727));
          do
            v729 = __ldaxr(v727);
          while (__stlxr(v729 - 1, v727));
          if (!v729)
          {
            ((void (*)(std::__shared_weak_count *))v726->__on_zero_shared)(v726);
            std::__shared_weak_count::__release_weak(v726);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v725 + 88))(v725, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v724 = v1320;
      }
      v1307 = v722 - 1;
      if (v722 == 1)
        goto LABEL_1807;
      if ((_DWORD)v236)
      {
        v730 = 0;
        while (1)
        {
          sub_20B50671C(v235);
          if (!v724)
            break;
          v731 = 0;
          v732 = v236;
          do
          {
            v1331 = 4;
            v1332 = v724 + 2 * v731;
            sub_20B509034(v235, (uint64_t)&v1331);
            v731 += v723;
            --v732;
          }
          while (v732);
LABEL_1138:
          v735 = *(_QWORD *)(v235 + 56);
          *(_QWORD *)(v235 + 40) = *(_QWORD *)(v735 - 8);
          *(_QWORD *)(v235 + 56) = v735 - 8;
          if (*(_BYTE *)(v235 + 88))
            *(_BYTE *)(v235 + 88) = 0;
          v724 += 2 * v1271;
          if (++v730 == v1307)
            goto LABEL_1807;
        }
        v733 = 0;
        v734 = v236;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = 2 * v733;
          sub_20B509034(v235, (uint64_t)&v1331);
          v733 += v723;
          if (!--v734)
            goto LABEL_1138;
        }
LABEL_2395:
        abort();
      }
      do
      {
        sub_20B50671C(v235);
        v1056 = *(_QWORD *)(v235 + 56);
        *(_QWORD *)(v235 + 40) = *(_QWORD *)(v1056 - 8);
        *(_QWORD *)(v235 + 56) = v1056 - 8;
        if (*(_BYTE *)(v235 + 88))
          *(_BYTE *)(v235 + 88) = 0;
        v724 += 2 * v1271;
        --v1307;
      }
      while (v1307);
LABEL_1807:
      sub_20B50671C(v235);
      v1057 = v236;
      if ((_DWORD)v236)
      {
        if (!v724)
        {
          v1187 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = 2 * v1187;
            sub_20B509034(v235, (uint64_t)&v1331);
            v1187 += v723;
            if (!--v1057)
              goto LABEL_2190;
          }
          goto LABEL_2395;
        }
        v1058 = 0;
        do
        {
          v1331 = 4;
          v1332 = v724 + 2 * v1058;
          sub_20B509034(v235, (uint64_t)&v1331);
          v1058 += v723;
          --v1057;
        }
        while (v1057);
      }
LABEL_2190:
      v1188 = *(_QWORD *)(v235 + 56);
      *(_QWORD *)(v235 + 40) = *(_QWORD *)(v1188 - 8);
      *(_QWORD *)(v235 + 56) = v1188 - 8;
      if (*(_BYTE *)(v235 + 88))
        *(_BYTE *)(v235 + 88) = 0;
LABEL_2192:
      v1189 = v1330;
      v1330 = 0;
      if (v1189)
        (*(void (**)(uint64_t))(*(_QWORD *)v1189 + 8))(v1189);
      v850 = v1319;
      if (!v1319)
        return;
      v1190 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1190);
      while (__stlxr(v852 - 1, v1190));
      goto LABEL_2373;
    case 31:
      sub_20B37C7F0(a3, (uint64_t)&v1318);
      v169 = *a2;
      v170 = v1327;
      v171 = v1318;
      if (!v1318)
        goto LABEL_966;
      v172 = v1319;
      if (v1319)
      {
        v173 = (unint64_t *)&v1319->__shared_owners_;
        do
          v174 = __ldxr(v173);
        while (__stxr(v174 + 1, v173));
        do
          v175 = __ldaxr(v173);
        while (__stlxr(v175 - 1, v173));
        if (!v175)
        {
          ((void (*)(std::__shared_weak_count *))v172->__on_zero_shared)(v172);
          std::__shared_weak_count::__release_weak(v172);
        }
        v171 = v1318;
        v176 = v1319;
        if (v1319)
        {
          v177 = (unint64_t *)&v1319->__shared_owners_;
          do
            v178 = __ldxr(v177);
          while (__stxr(v178 + 1, v177));
          do
            v179 = __ldaxr(v177);
          while (__stlxr(v179 - 1, v177));
          if (!v179)
          {
            ((void (*)(std::__shared_weak_count *))v176->__on_zero_shared)(v176);
            std::__shared_weak_count::__release_weak(v176);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v171 + 96))(&v1330, v171, 0);
      else
LABEL_966:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2137;
      if (!v1322)
        goto LABEL_2137;
      v643 = v1323;
      if (!v1323)
        goto LABEL_2137;
      v644 = v1325;
      v1266 = v1326;
      v645 = v1320;
      if (v1328 && v1320)
      {
        v646 = v1318;
        v647 = v1319;
        if (v1319)
        {
          v648 = (unint64_t *)&v1319->__shared_owners_;
          do
            v649 = __ldxr(v648);
          while (__stxr(v649 + 1, v648));
          do
            v650 = __ldaxr(v648);
          while (__stlxr(v650 - 1, v648));
          if (!v650)
          {
            ((void (*)(std::__shared_weak_count *))v647->__on_zero_shared)(v647);
            std::__shared_weak_count::__release_weak(v647);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v646 + 88))(v646, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v645 = v1320;
      }
      v1302 = v643 - 1;
      if (v643 == 1)
        goto LABEL_1751;
      if ((_DWORD)v170)
      {
        v651 = 0;
        while (1)
        {
          sub_20B50671C(v169);
          if (!v645)
            break;
          v652 = 0;
          v653 = v170;
          do
          {
            v1331 = 4;
            v1332 = v645 + 2 * v652;
            sub_20B5098BC(v169, &v1331);
            v652 += v644;
            --v653;
          }
          while (v653);
LABEL_990:
          v656 = *(_QWORD *)(v169 + 56);
          *(_QWORD *)(v169 + 40) = *(_QWORD *)(v656 - 8);
          *(_QWORD *)(v169 + 56) = v656 - 8;
          if (*(_BYTE *)(v169 + 88))
            *(_BYTE *)(v169 + 88) = 0;
          v645 += 2 * v1266;
          if (++v651 == v1302)
            goto LABEL_1751;
        }
        v654 = 0;
        v655 = v170;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = 2 * v654;
          sub_20B5098BC(v169, &v1331);
          v654 += v644;
          if (!--v655)
            goto LABEL_990;
        }
LABEL_2390:
        abort();
      }
      do
      {
        sub_20B50671C(v169);
        v1039 = *(_QWORD *)(v169 + 56);
        *(_QWORD *)(v169 + 40) = *(_QWORD *)(v1039 - 8);
        *(_QWORD *)(v169 + 56) = v1039 - 8;
        if (*(_BYTE *)(v169 + 88))
          *(_BYTE *)(v169 + 88) = 0;
        v645 += 2 * v1266;
        --v1302;
      }
      while (v1302);
LABEL_1751:
      sub_20B50671C(v169);
      v1040 = v170;
      if ((_DWORD)v170)
      {
        if (!v645)
        {
          v1167 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = 2 * v1167;
            sub_20B5098BC(v169, &v1331);
            v1167 += v644;
            if (!--v1040)
              goto LABEL_2135;
          }
          goto LABEL_2390;
        }
        v1041 = 0;
        do
        {
          v1331 = 4;
          v1332 = v645 + 2 * v1041;
          sub_20B5098BC(v169, &v1331);
          v1041 += v644;
          --v1040;
        }
        while (v1040);
      }
LABEL_2135:
      v1168 = *(_QWORD *)(v169 + 56);
      *(_QWORD *)(v169 + 40) = *(_QWORD *)(v1168 - 8);
      *(_QWORD *)(v169 + 56) = v1168 - 8;
      if (*(_BYTE *)(v169 + 88))
        *(_BYTE *)(v169 + 88) = 0;
LABEL_2137:
      v1169 = v1330;
      v1330 = 0;
      if (v1169)
        (*(void (**)(uint64_t))(*(_QWORD *)v1169 + 8))(v1169);
      v850 = v1319;
      if (!v1319)
        return;
      v1170 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1170);
      while (__stlxr(v852 - 1, v1170));
      goto LABEL_2373;
    case 32:
      sub_20B37CE28(a3, (uint64_t)&v1318);
      v257 = *a2;
      v258 = v1327;
      v259 = v1318;
      if (!v1318)
        goto LABEL_1166;
      v260 = v1319;
      if (v1319)
      {
        v261 = (unint64_t *)&v1319->__shared_owners_;
        do
          v262 = __ldxr(v261);
        while (__stxr(v262 + 1, v261));
        do
          v263 = __ldaxr(v261);
        while (__stlxr(v263 - 1, v261));
        if (!v263)
        {
          ((void (*)(std::__shared_weak_count *))v260->__on_zero_shared)(v260);
          std::__shared_weak_count::__release_weak(v260);
        }
        v259 = v1318;
        v264 = v1319;
        if (v1319)
        {
          v265 = (unint64_t *)&v1319->__shared_owners_;
          do
            v266 = __ldxr(v265);
          while (__stxr(v266 + 1, v265));
          do
            v267 = __ldaxr(v265);
          while (__stlxr(v267 - 1, v265));
          if (!v267)
          {
            ((void (*)(std::__shared_weak_count *))v264->__on_zero_shared)(v264);
            std::__shared_weak_count::__release_weak(v264);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v259 + 96))(&v1330, v259, 0);
      else
LABEL_1166:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2214;
      if (!v1322)
        goto LABEL_2214;
      v750 = v1323;
      if (!v1323)
        goto LABEL_2214;
      v751 = v1325;
      v1273 = v1326;
      v752 = v1320;
      if (v1328 && v1320)
      {
        v753 = v1318;
        v754 = v1319;
        if (v1319)
        {
          v755 = (unint64_t *)&v1319->__shared_owners_;
          do
            v756 = __ldxr(v755);
          while (__stxr(v756 + 1, v755));
          do
            v757 = __ldaxr(v755);
          while (__stlxr(v757 - 1, v755));
          if (!v757)
          {
            ((void (*)(std::__shared_weak_count *))v754->__on_zero_shared)(v754);
            std::__shared_weak_count::__release_weak(v754);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v753 + 88))(v753, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v752 = v1320;
      }
      v1309 = v750 - 1;
      if (v750 == 1)
        goto LABEL_1825;
      if ((_DWORD)v258)
      {
        v758 = 0;
        while (1)
        {
          sub_20B50671C(v257);
          if (!v752)
            break;
          v759 = 0;
          v760 = v258;
          do
          {
            v1331 = 4;
            v1332 = v752 + 4 * v759;
            sub_20B509D64(v257, (float **)&v1331);
            v759 += v751;
            --v760;
          }
          while (v760);
LABEL_1190:
          v763 = *(_QWORD *)(v257 + 56);
          *(_QWORD *)(v257 + 40) = *(_QWORD *)(v763 - 8);
          *(_QWORD *)(v257 + 56) = v763 - 8;
          if (*(_BYTE *)(v257 + 88))
            *(_BYTE *)(v257 + 88) = 0;
          v752 += 4 * v1273;
          if (++v758 == v1309)
            goto LABEL_1825;
        }
        v761 = 0;
        v762 = v258;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = 4 * v761;
          sub_20B509D64(v257, (float **)&v1331);
          v761 += v751;
          if (!--v762)
            goto LABEL_1190;
        }
LABEL_2397:
        abort();
      }
      do
      {
        sub_20B50671C(v257);
        v1062 = *(_QWORD *)(v257 + 56);
        *(_QWORD *)(v257 + 40) = *(_QWORD *)(v1062 - 8);
        *(_QWORD *)(v257 + 56) = v1062 - 8;
        if (*(_BYTE *)(v257 + 88))
          *(_BYTE *)(v257 + 88) = 0;
        v752 += 4 * v1273;
        --v1309;
      }
      while (v1309);
LABEL_1825:
      sub_20B50671C(v257);
      v1063 = v258;
      if ((_DWORD)v258)
      {
        if (!v752)
        {
          v1195 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = 4 * v1195;
            sub_20B509D64(v257, (float **)&v1331);
            v1195 += v751;
            if (!--v1063)
              goto LABEL_2212;
          }
          goto LABEL_2397;
        }
        v1064 = 0;
        do
        {
          v1331 = 4;
          v1332 = v752 + 4 * v1064;
          sub_20B509D64(v257, (float **)&v1331);
          v1064 += v751;
          --v1063;
        }
        while (v1063);
      }
LABEL_2212:
      v1196 = *(_QWORD *)(v257 + 56);
      *(_QWORD *)(v257 + 40) = *(_QWORD *)(v1196 - 8);
      *(_QWORD *)(v257 + 56) = v1196 - 8;
      if (*(_BYTE *)(v257 + 88))
        *(_BYTE *)(v257 + 88) = 0;
LABEL_2214:
      v1197 = v1330;
      v1330 = 0;
      if (v1197)
        (*(void (**)(uint64_t))(*(_QWORD *)v1197 + 8))(v1197);
      v850 = v1319;
      if (!v1319)
        return;
      v1198 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1198);
      while (__stlxr(v852 - 1, v1198));
      goto LABEL_2373;
    case 33:
      sub_20B37D460(a3, (uint64_t)&v1318);
      v367 = *a2;
      v368 = v1327;
      v369 = v1318;
      if (!v1318)
        goto LABEL_1439;
      v370 = v1319;
      if (v1319)
      {
        v371 = (unint64_t *)&v1319->__shared_owners_;
        do
          v372 = __ldxr(v371);
        while (__stxr(v372 + 1, v371));
        do
          v373 = __ldaxr(v371);
        while (__stlxr(v373 - 1, v371));
        if (!v373)
        {
          ((void (*)(std::__shared_weak_count *))v370->__on_zero_shared)(v370);
          std::__shared_weak_count::__release_weak(v370);
        }
        v369 = v1318;
        v374 = v1319;
        if (v1319)
        {
          v375 = (unint64_t *)&v1319->__shared_owners_;
          do
            v376 = __ldxr(v375);
          while (__stxr(v376 + 1, v375));
          do
            v377 = __ldaxr(v375);
          while (__stlxr(v377 - 1, v375));
          if (!v377)
          {
            ((void (*)(std::__shared_weak_count *))v374->__on_zero_shared)(v374);
            std::__shared_weak_count::__release_weak(v374);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v369 + 96))(&v1330, v369, 0);
      else
LABEL_1439:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2302;
      if (!v1322)
        goto LABEL_2302;
      v896 = v1323;
      if (!v1323)
        goto LABEL_2302;
      v897 = v1325;
      v1288 = v1326;
      v898 = v1320;
      if (v1328 && v1320)
      {
        v899 = v1318;
        v900 = v1319;
        if (v1319)
        {
          v901 = (unint64_t *)&v1319->__shared_owners_;
          do
            v902 = __ldxr(v901);
          while (__stxr(v902 + 1, v901));
          do
            v903 = __ldaxr(v901);
          while (__stlxr(v903 - 1, v901));
          if (!v903)
          {
            ((void (*)(std::__shared_weak_count *))v900->__on_zero_shared)(v900);
            std::__shared_weak_count::__release_weak(v900);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v899 + 88))(v899, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v898 = v1320;
      }
      v904 = v896 - 1;
      if (v896 == 1)
        goto LABEL_1919;
      if ((_DWORD)v368)
      {
        v905 = 0;
        while (1)
        {
          sub_20B50671C(v367);
          if (!v898)
            break;
          v906 = 0;
          v907 = v368;
          do
          {
            v1331 = 4;
            v1332 = v898 + v906;
            sub_20B506898(v367, (size_t *)&v1331);
            v906 += v897;
            --v907;
          }
          while (v907);
LABEL_1463:
          v910 = *(_QWORD *)(v367 + 56);
          *(_QWORD *)(v367 + 40) = *(_QWORD *)(v910 - 8);
          *(_QWORD *)(v367 + 56) = v910 - 8;
          if (*(_BYTE *)(v367 + 88))
            *(_BYTE *)(v367 + 88) = 0;
          v898 += v1288;
          if (++v905 == v896 - 1)
            goto LABEL_1919;
        }
        v908 = 0;
        v909 = v368;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = v908;
          sub_20B506898(v367, (size_t *)&v1331);
          v908 += v897;
          if (!--v909)
            goto LABEL_1463;
        }
LABEL_2405:
        abort();
      }
      v898 += v1288 + v1288 * (unint64_t)(v896 - 2);
      do
      {
        sub_20B50671C(v367);
        v1090 = *(_QWORD *)(v367 + 56);
        *(_QWORD *)(v367 + 40) = *(_QWORD *)(v1090 - 8);
        *(_QWORD *)(v367 + 56) = v1090 - 8;
        if (*(_BYTE *)(v367 + 88))
          *(_BYTE *)(v367 + 88) = 0;
        --v904;
      }
      while (v904);
LABEL_1919:
      sub_20B50671C(v367);
      v1091 = v368;
      if ((_DWORD)v368)
      {
        if (!v898)
        {
          v1227 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = v1227;
            sub_20B506898(v367, (size_t *)&v1331);
            v1227 += v897;
            if (!--v1091)
              goto LABEL_2300;
          }
          goto LABEL_2405;
        }
        v1092 = 0;
        do
        {
          v1331 = 4;
          v1332 = v898 + v1092;
          sub_20B506898(v367, (size_t *)&v1331);
          v1092 += v897;
          --v1091;
        }
        while (v1091);
      }
LABEL_2300:
      v1228 = *(_QWORD *)(v367 + 56);
      *(_QWORD *)(v367 + 40) = *(_QWORD *)(v1228 - 8);
      *(_QWORD *)(v367 + 56) = v1228 - 8;
      if (*(_BYTE *)(v367 + 88))
        *(_BYTE *)(v367 + 88) = 0;
LABEL_2302:
      v1229 = v1330;
      v1330 = 0;
      if (v1229)
        (*(void (**)(uint64_t))(*(_QWORD *)v1229 + 8))(v1229);
      v850 = v1319;
      if (!v1319)
        return;
      v1230 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1230);
      while (__stlxr(v852 - 1, v1230));
      goto LABEL_2373;
    case 34:
      sub_20B37DA94(a3, (uint64_t)&v1318);
      v246 = *a2;
      v247 = v1327;
      v248 = v1318;
      if (!v1318)
        goto LABEL_1140;
      v249 = v1319;
      if (v1319)
      {
        v250 = (unint64_t *)&v1319->__shared_owners_;
        do
          v251 = __ldxr(v250);
        while (__stxr(v251 + 1, v250));
        do
          v252 = __ldaxr(v250);
        while (__stlxr(v252 - 1, v250));
        if (!v252)
        {
          ((void (*)(std::__shared_weak_count *))v249->__on_zero_shared)(v249);
          std::__shared_weak_count::__release_weak(v249);
        }
        v248 = v1318;
        v253 = v1319;
        if (v1319)
        {
          v254 = (unint64_t *)&v1319->__shared_owners_;
          do
            v255 = __ldxr(v254);
          while (__stxr(v255 + 1, v254));
          do
            v256 = __ldaxr(v254);
          while (__stlxr(v256 - 1, v254));
          if (!v256)
          {
            ((void (*)(std::__shared_weak_count *))v253->__on_zero_shared)(v253);
            std::__shared_weak_count::__release_weak(v253);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v248 + 96))(&v1330, v248, 0);
      else
LABEL_1140:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2203;
      if (!v1322)
        goto LABEL_2203;
      v736 = v1323;
      if (!v1323)
        goto LABEL_2203;
      v737 = v1325;
      v1272 = v1326;
      v738 = v1320;
      if (v1328 && v1320)
      {
        v739 = v1318;
        v740 = v1319;
        if (v1319)
        {
          v741 = (unint64_t *)&v1319->__shared_owners_;
          do
            v742 = __ldxr(v741);
          while (__stxr(v742 + 1, v741));
          do
            v743 = __ldaxr(v741);
          while (__stlxr(v743 - 1, v741));
          if (!v743)
          {
            ((void (*)(std::__shared_weak_count *))v740->__on_zero_shared)(v740);
            std::__shared_weak_count::__release_weak(v740);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v739 + 88))(v739, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v738 = v1320;
      }
      v1308 = v736 - 1;
      if (v736 == 1)
        goto LABEL_1816;
      if ((_DWORD)v247)
      {
        v744 = 0;
        while (1)
        {
          sub_20B50671C(v246);
          if (!v738)
            break;
          v745 = 0;
          v746 = v247;
          do
          {
            v1331 = 4;
            v1332 = v738 + 2 * v745;
            sub_20B509034(v246, (uint64_t)&v1331);
            v745 += v737;
            --v746;
          }
          while (v746);
LABEL_1164:
          v749 = *(_QWORD *)(v246 + 56);
          *(_QWORD *)(v246 + 40) = *(_QWORD *)(v749 - 8);
          *(_QWORD *)(v246 + 56) = v749 - 8;
          if (*(_BYTE *)(v246 + 88))
            *(_BYTE *)(v246 + 88) = 0;
          v738 += 2 * v1272;
          if (++v744 == v1308)
            goto LABEL_1816;
        }
        v747 = 0;
        v748 = v247;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = 2 * v747;
          sub_20B509034(v246, (uint64_t)&v1331);
          v747 += v737;
          if (!--v748)
            goto LABEL_1164;
        }
LABEL_2396:
        abort();
      }
      do
      {
        sub_20B50671C(v246);
        v1059 = *(_QWORD *)(v246 + 56);
        *(_QWORD *)(v246 + 40) = *(_QWORD *)(v1059 - 8);
        *(_QWORD *)(v246 + 56) = v1059 - 8;
        if (*(_BYTE *)(v246 + 88))
          *(_BYTE *)(v246 + 88) = 0;
        v738 += 2 * v1272;
        --v1308;
      }
      while (v1308);
LABEL_1816:
      sub_20B50671C(v246);
      v1060 = v247;
      if ((_DWORD)v247)
      {
        if (!v738)
        {
          v1191 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = 2 * v1191;
            sub_20B509034(v246, (uint64_t)&v1331);
            v1191 += v737;
            if (!--v1060)
              goto LABEL_2201;
          }
          goto LABEL_2396;
        }
        v1061 = 0;
        do
        {
          v1331 = 4;
          v1332 = v738 + 2 * v1061;
          sub_20B509034(v246, (uint64_t)&v1331);
          v1061 += v737;
          --v1060;
        }
        while (v1060);
      }
LABEL_2201:
      v1192 = *(_QWORD *)(v246 + 56);
      *(_QWORD *)(v246 + 40) = *(_QWORD *)(v1192 - 8);
      *(_QWORD *)(v246 + 56) = v1192 - 8;
      if (*(_BYTE *)(v246 + 88))
        *(_BYTE *)(v246 + 88) = 0;
LABEL_2203:
      v1193 = v1330;
      v1330 = 0;
      if (v1193)
        (*(void (**)(uint64_t))(*(_QWORD *)v1193 + 8))(v1193);
      v850 = v1319;
      if (!v1319)
        return;
      v1194 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1194);
      while (__stlxr(v852 - 1, v1194));
      goto LABEL_2373;
    case 35:
      sub_20B37E0CC(a3, (uint64_t)&v1318);
      v224 = *a2;
      v225 = v1327;
      v226 = v1318;
      if (!v1318)
        goto LABEL_1088;
      v227 = v1319;
      if (v1319)
      {
        v228 = (unint64_t *)&v1319->__shared_owners_;
        do
          v229 = __ldxr(v228);
        while (__stxr(v229 + 1, v228));
        do
          v230 = __ldaxr(v228);
        while (__stlxr(v230 - 1, v228));
        if (!v230)
        {
          ((void (*)(std::__shared_weak_count *))v227->__on_zero_shared)(v227);
          std::__shared_weak_count::__release_weak(v227);
        }
        v226 = v1318;
        v231 = v1319;
        if (v1319)
        {
          v232 = (unint64_t *)&v1319->__shared_owners_;
          do
            v233 = __ldxr(v232);
          while (__stxr(v233 + 1, v232));
          do
            v234 = __ldaxr(v232);
          while (__stlxr(v234 - 1, v232));
          if (!v234)
          {
            ((void (*)(std::__shared_weak_count *))v231->__on_zero_shared)(v231);
            std::__shared_weak_count::__release_weak(v231);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v226 + 96))(&v1330, v226, 0);
      else
LABEL_1088:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2181;
      if (!v1322)
        goto LABEL_2181;
      v708 = v1323;
      if (!v1323)
        goto LABEL_2181;
      v709 = v1325;
      v1270 = v1326;
      v710 = v1320;
      if (v1328 && v1320)
      {
        v711 = v1318;
        v712 = v1319;
        if (v1319)
        {
          v713 = (unint64_t *)&v1319->__shared_owners_;
          do
            v714 = __ldxr(v713);
          while (__stxr(v714 + 1, v713));
          do
            v715 = __ldaxr(v713);
          while (__stlxr(v715 - 1, v713));
          if (!v715)
          {
            ((void (*)(std::__shared_weak_count *))v712->__on_zero_shared)(v712);
            std::__shared_weak_count::__release_weak(v712);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v711 + 88))(v711, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v710 = v1320;
      }
      v1306 = v708 - 1;
      if (v708 == 1)
        goto LABEL_1798;
      if ((_DWORD)v225)
      {
        v716 = 0;
        while (1)
        {
          sub_20B50671C(v224);
          if (!v710)
            break;
          v717 = 0;
          v718 = v225;
          do
          {
            v1331 = 4;
            v1332 = v710 + 2 * v717;
            sub_20B5098BC(v224, &v1331);
            v717 += v709;
            --v718;
          }
          while (v718);
LABEL_1112:
          v721 = *(_QWORD *)(v224 + 56);
          *(_QWORD *)(v224 + 40) = *(_QWORD *)(v721 - 8);
          *(_QWORD *)(v224 + 56) = v721 - 8;
          if (*(_BYTE *)(v224 + 88))
            *(_BYTE *)(v224 + 88) = 0;
          v710 += 2 * v1270;
          if (++v716 == v1306)
            goto LABEL_1798;
        }
        v719 = 0;
        v720 = v225;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = 2 * v719;
          sub_20B5098BC(v224, &v1331);
          v719 += v709;
          if (!--v720)
            goto LABEL_1112;
        }
LABEL_2394:
        abort();
      }
      do
      {
        sub_20B50671C(v224);
        v1053 = *(_QWORD *)(v224 + 56);
        *(_QWORD *)(v224 + 40) = *(_QWORD *)(v1053 - 8);
        *(_QWORD *)(v224 + 56) = v1053 - 8;
        if (*(_BYTE *)(v224 + 88))
          *(_BYTE *)(v224 + 88) = 0;
        v710 += 2 * v1270;
        --v1306;
      }
      while (v1306);
LABEL_1798:
      sub_20B50671C(v224);
      v1054 = v225;
      if ((_DWORD)v225)
      {
        if (!v710)
        {
          v1183 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = 2 * v1183;
            sub_20B5098BC(v224, &v1331);
            v1183 += v709;
            if (!--v1054)
              goto LABEL_2179;
          }
          goto LABEL_2394;
        }
        v1055 = 0;
        do
        {
          v1331 = 4;
          v1332 = v710 + 2 * v1055;
          sub_20B5098BC(v224, &v1331);
          v1055 += v709;
          --v1054;
        }
        while (v1054);
      }
LABEL_2179:
      v1184 = *(_QWORD *)(v224 + 56);
      *(_QWORD *)(v224 + 40) = *(_QWORD *)(v1184 - 8);
      *(_QWORD *)(v224 + 56) = v1184 - 8;
      if (*(_BYTE *)(v224 + 88))
        *(_BYTE *)(v224 + 88) = 0;
LABEL_2181:
      v1185 = v1330;
      v1330 = 0;
      if (v1185)
        (*(void (**)(uint64_t))(*(_QWORD *)v1185 + 8))(v1185);
      v850 = v1319;
      if (!v1319)
        return;
      v1186 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1186);
      while (__stlxr(v852 - 1, v1186));
      goto LABEL_2373;
    case 36:
      sub_20B37E704(a3, (uint64_t)&v1318);
      v213 = *a2;
      v214 = v1327;
      v215 = v1318;
      if (!v1318)
        goto LABEL_1062;
      v216 = v1319;
      if (v1319)
      {
        v217 = (unint64_t *)&v1319->__shared_owners_;
        do
          v218 = __ldxr(v217);
        while (__stxr(v218 + 1, v217));
        do
          v219 = __ldaxr(v217);
        while (__stlxr(v219 - 1, v217));
        if (!v219)
        {
          ((void (*)(std::__shared_weak_count *))v216->__on_zero_shared)(v216);
          std::__shared_weak_count::__release_weak(v216);
        }
        v215 = v1318;
        v220 = v1319;
        if (v1319)
        {
          v221 = (unint64_t *)&v1319->__shared_owners_;
          do
            v222 = __ldxr(v221);
          while (__stxr(v222 + 1, v221));
          do
            v223 = __ldaxr(v221);
          while (__stlxr(v223 - 1, v221));
          if (!v223)
          {
            ((void (*)(std::__shared_weak_count *))v220->__on_zero_shared)(v220);
            std::__shared_weak_count::__release_weak(v220);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v215 + 96))(&v1330, v215, 0);
      else
LABEL_1062:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2170;
      if (!v1322)
        goto LABEL_2170;
      v694 = v1323;
      if (!v1323)
        goto LABEL_2170;
      v695 = v1325;
      v1269 = v1326;
      v696 = v1320;
      if (v1328 && v1320)
      {
        v697 = v1318;
        v698 = v1319;
        if (v1319)
        {
          v699 = (unint64_t *)&v1319->__shared_owners_;
          do
            v700 = __ldxr(v699);
          while (__stxr(v700 + 1, v699));
          do
            v701 = __ldaxr(v699);
          while (__stlxr(v701 - 1, v699));
          if (!v701)
          {
            ((void (*)(std::__shared_weak_count *))v698->__on_zero_shared)(v698);
            std::__shared_weak_count::__release_weak(v698);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v697 + 88))(v697, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v696 = v1320;
      }
      v1305 = v694 - 1;
      if (v694 == 1)
        goto LABEL_1789;
      if ((_DWORD)v214)
      {
        v702 = 0;
        while (1)
        {
          sub_20B50671C(v213);
          if (!v696)
            break;
          v703 = 0;
          v704 = v214;
          do
          {
            v1331 = 4;
            v1332 = v696 + 4 * v703;
            sub_20B509D64(v213, (float **)&v1331);
            v703 += v695;
            --v704;
          }
          while (v704);
LABEL_1086:
          v707 = *(_QWORD *)(v213 + 56);
          *(_QWORD *)(v213 + 40) = *(_QWORD *)(v707 - 8);
          *(_QWORD *)(v213 + 56) = v707 - 8;
          if (*(_BYTE *)(v213 + 88))
            *(_BYTE *)(v213 + 88) = 0;
          v696 += 4 * v1269;
          if (++v702 == v1305)
            goto LABEL_1789;
        }
        v705 = 0;
        v706 = v214;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = 4 * v705;
          sub_20B509D64(v213, (float **)&v1331);
          v705 += v695;
          if (!--v706)
            goto LABEL_1086;
        }
LABEL_2393:
        abort();
      }
      do
      {
        sub_20B50671C(v213);
        v1050 = *(_QWORD *)(v213 + 56);
        *(_QWORD *)(v213 + 40) = *(_QWORD *)(v1050 - 8);
        *(_QWORD *)(v213 + 56) = v1050 - 8;
        if (*(_BYTE *)(v213 + 88))
          *(_BYTE *)(v213 + 88) = 0;
        v696 += 4 * v1269;
        --v1305;
      }
      while (v1305);
LABEL_1789:
      sub_20B50671C(v213);
      v1051 = v214;
      if ((_DWORD)v214)
      {
        if (!v696)
        {
          v1179 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = 4 * v1179;
            sub_20B509D64(v213, (float **)&v1331);
            v1179 += v695;
            if (!--v1051)
              goto LABEL_2168;
          }
          goto LABEL_2393;
        }
        v1052 = 0;
        do
        {
          v1331 = 4;
          v1332 = v696 + 4 * v1052;
          sub_20B509D64(v213, (float **)&v1331);
          v1052 += v695;
          --v1051;
        }
        while (v1051);
      }
LABEL_2168:
      v1180 = *(_QWORD *)(v213 + 56);
      *(_QWORD *)(v213 + 40) = *(_QWORD *)(v1180 - 8);
      *(_QWORD *)(v213 + 56) = v1180 - 8;
      if (*(_BYTE *)(v213 + 88))
        *(_BYTE *)(v213 + 88) = 0;
LABEL_2170:
      v1181 = v1330;
      v1330 = 0;
      if (v1181)
        (*(void (**)(uint64_t))(*(_QWORD *)v1181 + 8))(v1181);
      v850 = v1319;
      if (!v1319)
        return;
      v1182 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1182);
      while (__stlxr(v852 - 1, v1182));
      goto LABEL_2373;
    case 37:
      sub_20B37ED3C(a3, (uint64_t)&v1318);
      v334 = *a2;
      v335 = v1327;
      v336 = v1318;
      if (!v1318)
        goto LABEL_1361;
      v337 = v1319;
      if (v1319)
      {
        v338 = (unint64_t *)&v1319->__shared_owners_;
        do
          v339 = __ldxr(v338);
        while (__stxr(v339 + 1, v338));
        do
          v340 = __ldaxr(v338);
        while (__stlxr(v340 - 1, v338));
        if (!v340)
        {
          ((void (*)(std::__shared_weak_count *))v337->__on_zero_shared)(v337);
          std::__shared_weak_count::__release_weak(v337);
        }
        v336 = v1318;
        v341 = v1319;
        if (v1319)
        {
          v342 = (unint64_t *)&v1319->__shared_owners_;
          do
            v343 = __ldxr(v342);
          while (__stxr(v343 + 1, v342));
          do
            v344 = __ldaxr(v342);
          while (__stlxr(v344 - 1, v342));
          if (!v344)
          {
            ((void (*)(std::__shared_weak_count *))v341->__on_zero_shared)(v341);
            std::__shared_weak_count::__release_weak(v341);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v336 + 96))(&v1330, v336, 0);
      else
LABEL_1361:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2269;
      if (!v1322)
        goto LABEL_2269;
      v853 = v1323;
      if (!v1323)
        goto LABEL_2269;
      v854 = v1325;
      v1287 = v1326;
      v855 = v1320;
      if (v1328 && v1320)
      {
        v856 = v1318;
        v857 = v1319;
        if (v1319)
        {
          v858 = (unint64_t *)&v1319->__shared_owners_;
          do
            v859 = __ldxr(v858);
          while (__stxr(v859 + 1, v858));
          do
            v860 = __ldaxr(v858);
          while (__stlxr(v860 - 1, v858));
          if (!v860)
          {
            ((void (*)(std::__shared_weak_count *))v857->__on_zero_shared)(v857);
            std::__shared_weak_count::__release_weak(v857);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v856 + 88))(v856, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v855 = v1320;
      }
      v861 = v853 - 1;
      if (v853 == 1)
        goto LABEL_1892;
      if ((_DWORD)v335)
      {
        v862 = 0;
        while (1)
        {
          sub_20B50671C(v334);
          if (!v855)
            break;
          v863 = 0;
          v864 = v335;
          do
          {
            v1331 = 4;
            v1332 = v855 + v863;
            sub_20B506898(v334, (size_t *)&v1331);
            v863 += v854;
            --v864;
          }
          while (v864);
LABEL_1385:
          v867 = *(_QWORD *)(v334 + 56);
          *(_QWORD *)(v334 + 40) = *(_QWORD *)(v867 - 8);
          *(_QWORD *)(v334 + 56) = v867 - 8;
          if (*(_BYTE *)(v334 + 88))
            *(_BYTE *)(v334 + 88) = 0;
          v855 += v1287;
          if (++v862 == v853 - 1)
            goto LABEL_1892;
        }
        v865 = 0;
        v866 = v335;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = v865;
          sub_20B506898(v334, (size_t *)&v1331);
          v865 += v854;
          if (!--v866)
            goto LABEL_1385;
        }
LABEL_2402:
        abort();
      }
      v855 += v1287 + v1287 * (unint64_t)(v853 - 2);
      do
      {
        sub_20B50671C(v334);
        v1081 = *(_QWORD *)(v334 + 56);
        *(_QWORD *)(v334 + 40) = *(_QWORD *)(v1081 - 8);
        *(_QWORD *)(v334 + 56) = v1081 - 8;
        if (*(_BYTE *)(v334 + 88))
          *(_BYTE *)(v334 + 88) = 0;
        --v861;
      }
      while (v861);
LABEL_1892:
      sub_20B50671C(v334);
      v1082 = v335;
      if ((_DWORD)v335)
      {
        if (!v855)
        {
          v1215 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = v1215;
            sub_20B506898(v334, (size_t *)&v1331);
            v1215 += v854;
            if (!--v1082)
              goto LABEL_2267;
          }
          goto LABEL_2402;
        }
        v1083 = 0;
        do
        {
          v1331 = 4;
          v1332 = v855 + v1083;
          sub_20B506898(v334, (size_t *)&v1331);
          v1083 += v854;
          --v1082;
        }
        while (v1082);
      }
LABEL_2267:
      v1216 = *(_QWORD *)(v334 + 56);
      *(_QWORD *)(v334 + 40) = *(_QWORD *)(v1216 - 8);
      *(_QWORD *)(v334 + 56) = v1216 - 8;
      if (*(_BYTE *)(v334 + 88))
        *(_BYTE *)(v334 + 88) = 0;
LABEL_2269:
      v1217 = v1330;
      v1330 = 0;
      if (v1217)
        (*(void (**)(uint64_t))(*(_QWORD *)v1217 + 8))(v1217);
      v850 = v1319;
      if (!v1319)
        return;
      v1218 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1218);
      while (__stlxr(v852 - 1, v1218));
      goto LABEL_2373;
    case 38:
      sub_20B37F370(a3, (uint64_t)&v1318);
      v389 = *a2;
      v390 = v1327;
      v391 = v1318;
      if (!v1318)
        goto LABEL_1491;
      v392 = v1319;
      if (v1319)
      {
        v393 = (unint64_t *)&v1319->__shared_owners_;
        do
          v394 = __ldxr(v393);
        while (__stxr(v394 + 1, v393));
        do
          v395 = __ldaxr(v393);
        while (__stlxr(v395 - 1, v393));
        if (!v395)
        {
          ((void (*)(std::__shared_weak_count *))v392->__on_zero_shared)(v392);
          std::__shared_weak_count::__release_weak(v392);
        }
        v391 = v1318;
        v396 = v1319;
        if (v1319)
        {
          v397 = (unint64_t *)&v1319->__shared_owners_;
          do
            v398 = __ldxr(v397);
          while (__stxr(v398 + 1, v397));
          do
            v399 = __ldaxr(v397);
          while (__stlxr(v399 - 1, v397));
          if (!v399)
          {
            ((void (*)(std::__shared_weak_count *))v396->__on_zero_shared)(v396);
            std::__shared_weak_count::__release_weak(v396);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v391 + 96))(&v1330, v391, 0);
      else
LABEL_1491:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2324;
      if (!v1322)
        goto LABEL_2324;
      v925 = v1323;
      if (!v1323)
        goto LABEL_2324;
      v926 = v1325;
      v1279 = v1326;
      v927 = v1320;
      if (v1328 && v1320)
      {
        v928 = v1318;
        v929 = v1319;
        if (v1319)
        {
          v930 = (unint64_t *)&v1319->__shared_owners_;
          do
            v931 = __ldxr(v930);
          while (__stxr(v931 + 1, v930));
          do
            v932 = __ldaxr(v930);
          while (__stlxr(v932 - 1, v930));
          if (!v932)
          {
            ((void (*)(std::__shared_weak_count *))v929->__on_zero_shared)(v929);
            std::__shared_weak_count::__release_weak(v929);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v928 + 88))(v928, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v927 = v1320;
      }
      v1315 = v925 - 1;
      if (v925 == 1)
        goto LABEL_1937;
      if ((_DWORD)v390)
      {
        v933 = 0;
        while (1)
        {
          sub_20B50671C(v389);
          if (!v927)
            break;
          v934 = 0;
          v935 = v390;
          do
          {
            v1331 = 4;
            v1332 = v927 + 2 * v934;
            sub_20B509034(v389, (uint64_t)&v1331);
            v934 += v926;
            --v935;
          }
          while (v935);
LABEL_1515:
          v938 = *(_QWORD *)(v389 + 56);
          *(_QWORD *)(v389 + 40) = *(_QWORD *)(v938 - 8);
          *(_QWORD *)(v389 + 56) = v938 - 8;
          if (*(_BYTE *)(v389 + 88))
            *(_BYTE *)(v389 + 88) = 0;
          v927 += 2 * v1279;
          if (++v933 == v1315)
            goto LABEL_1937;
        }
        v936 = 0;
        v937 = v390;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = 2 * v936;
          sub_20B509034(v389, (uint64_t)&v1331);
          v936 += v926;
          if (!--v937)
            goto LABEL_1515;
        }
LABEL_2407:
        abort();
      }
      do
      {
        sub_20B50671C(v389);
        v1096 = *(_QWORD *)(v389 + 56);
        *(_QWORD *)(v389 + 40) = *(_QWORD *)(v1096 - 8);
        *(_QWORD *)(v389 + 56) = v1096 - 8;
        if (*(_BYTE *)(v389 + 88))
          *(_BYTE *)(v389 + 88) = 0;
        v927 += 2 * v1279;
        --v1315;
      }
      while (v1315);
LABEL_1937:
      sub_20B50671C(v389);
      v1097 = v390;
      if ((_DWORD)v390)
      {
        if (!v927)
        {
          v1235 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = 2 * v1235;
            sub_20B509034(v389, (uint64_t)&v1331);
            v1235 += v926;
            if (!--v1097)
              goto LABEL_2322;
          }
          goto LABEL_2407;
        }
        v1098 = 0;
        do
        {
          v1331 = 4;
          v1332 = v927 + 2 * v1098;
          sub_20B509034(v389, (uint64_t)&v1331);
          v1098 += v926;
          --v1097;
        }
        while (v1097);
      }
LABEL_2322:
      v1236 = *(_QWORD *)(v389 + 56);
      *(_QWORD *)(v389 + 40) = *(_QWORD *)(v1236 - 8);
      *(_QWORD *)(v389 + 56) = v1236 - 8;
      if (*(_BYTE *)(v389 + 88))
        *(_BYTE *)(v389 + 88) = 0;
LABEL_2324:
      v1237 = v1330;
      v1330 = 0;
      if (v1237)
        (*(void (**)(uint64_t))(*(_QWORD *)v1237 + 8))(v1237);
      v850 = v1319;
      if (!v1319)
        return;
      v1238 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1238);
      while (__stlxr(v852 - 1, v1238));
      goto LABEL_2373;
    case 39:
      sub_20B37F9A8(a3, (uint64_t)&v1318);
      v136 = *a2;
      v137 = v1327;
      v138 = v1318;
      if (!v1318)
        goto LABEL_888;
      v139 = v1319;
      if (v1319)
      {
        v140 = (unint64_t *)&v1319->__shared_owners_;
        do
          v141 = __ldxr(v140);
        while (__stxr(v141 + 1, v140));
        do
          v142 = __ldaxr(v140);
        while (__stlxr(v142 - 1, v140));
        if (!v142)
        {
          ((void (*)(std::__shared_weak_count *))v139->__on_zero_shared)(v139);
          std::__shared_weak_count::__release_weak(v139);
        }
        v138 = v1318;
        v143 = v1319;
        if (v1319)
        {
          v144 = (unint64_t *)&v1319->__shared_owners_;
          do
            v145 = __ldxr(v144);
          while (__stxr(v145 + 1, v144));
          do
            v146 = __ldaxr(v144);
          while (__stlxr(v146 - 1, v144));
          if (!v146)
          {
            ((void (*)(std::__shared_weak_count *))v143->__on_zero_shared)(v143);
            std::__shared_weak_count::__release_weak(v143);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v138 + 96))(&v1330, v138, 0);
      else
LABEL_888:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2104;
      if (!v1322)
        goto LABEL_2104;
      v601 = v1323;
      if (!v1323)
        goto LABEL_2104;
      v602 = v1325;
      v1263 = v1326;
      v603 = v1320;
      if (v1328 && v1320)
      {
        v604 = v1318;
        v605 = v1319;
        if (v1319)
        {
          v606 = (unint64_t *)&v1319->__shared_owners_;
          do
            v607 = __ldxr(v606);
          while (__stxr(v607 + 1, v606));
          do
            v608 = __ldaxr(v606);
          while (__stlxr(v608 - 1, v606));
          if (!v608)
          {
            ((void (*)(std::__shared_weak_count *))v605->__on_zero_shared)(v605);
            std::__shared_weak_count::__release_weak(v605);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v604 + 88))(v604, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v603 = v1320;
      }
      v1299 = v601 - 1;
      if (v601 == 1)
        goto LABEL_1724;
      if ((_DWORD)v137)
      {
        v609 = 0;
        while (1)
        {
          sub_20B50671C(v136);
          if (!v603)
            break;
          v610 = 0;
          v611 = v137;
          do
          {
            v1331 = 4;
            v1332 = v603 + 2 * v610;
            sub_20B5098BC(v136, &v1331);
            v610 += v602;
            --v611;
          }
          while (v611);
LABEL_912:
          v614 = *(_QWORD *)(v136 + 56);
          *(_QWORD *)(v136 + 40) = *(_QWORD *)(v614 - 8);
          *(_QWORD *)(v136 + 56) = v614 - 8;
          if (*(_BYTE *)(v136 + 88))
            *(_BYTE *)(v136 + 88) = 0;
          v603 += 2 * v1263;
          if (++v609 == v1299)
            goto LABEL_1724;
        }
        v612 = 0;
        v613 = v137;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = 2 * v612;
          sub_20B5098BC(v136, &v1331);
          v612 += v602;
          if (!--v613)
            goto LABEL_912;
        }
LABEL_2387:
        abort();
      }
      do
      {
        sub_20B50671C(v136);
        v1030 = *(_QWORD *)(v136 + 56);
        *(_QWORD *)(v136 + 40) = *(_QWORD *)(v1030 - 8);
        *(_QWORD *)(v136 + 56) = v1030 - 8;
        if (*(_BYTE *)(v136 + 88))
          *(_BYTE *)(v136 + 88) = 0;
        v603 += 2 * v1263;
        --v1299;
      }
      while (v1299);
LABEL_1724:
      sub_20B50671C(v136);
      v1031 = v137;
      if ((_DWORD)v137)
      {
        if (!v603)
        {
          v1155 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = 2 * v1155;
            sub_20B5098BC(v136, &v1331);
            v1155 += v602;
            if (!--v1031)
              goto LABEL_2102;
          }
          goto LABEL_2387;
        }
        v1032 = 0;
        do
        {
          v1331 = 4;
          v1332 = v603 + 2 * v1032;
          sub_20B5098BC(v136, &v1331);
          v1032 += v602;
          --v1031;
        }
        while (v1031);
      }
LABEL_2102:
      v1156 = *(_QWORD *)(v136 + 56);
      *(_QWORD *)(v136 + 40) = *(_QWORD *)(v1156 - 8);
      *(_QWORD *)(v136 + 56) = v1156 - 8;
      if (*(_BYTE *)(v136 + 88))
        *(_BYTE *)(v136 + 88) = 0;
LABEL_2104:
      v1157 = v1330;
      v1330 = 0;
      if (v1157)
        (*(void (**)(uint64_t))(*(_QWORD *)v1157 + 8))(v1157);
      v850 = v1319;
      if (!v1319)
        return;
      v1158 = (unint64_t *)&v1319->__shared_owners_;
      do
        v852 = __ldaxr(v1158);
      while (__stlxr(v852 - 1, v1158));
      goto LABEL_2373;
    case 40:
      sub_20B37FFE0(a3, (uint64_t)&v1318);
      v103 = *a2;
      v104 = v1327;
      v105 = v1318;
      if (!v1318)
        goto LABEL_810;
      v106 = v1319;
      if (v1319)
      {
        v107 = (unint64_t *)&v1319->__shared_owners_;
        do
          v108 = __ldxr(v107);
        while (__stxr(v108 + 1, v107));
        do
          v109 = __ldaxr(v107);
        while (__stlxr(v109 - 1, v107));
        if (!v109)
        {
          ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
          std::__shared_weak_count::__release_weak(v106);
        }
        v105 = v1318;
        v110 = v1319;
        if (v1319)
        {
          v111 = (unint64_t *)&v1319->__shared_owners_;
          do
            v112 = __ldxr(v111);
          while (__stxr(v112 + 1, v111));
          do
            v113 = __ldaxr(v111);
          while (__stlxr(v113 - 1, v111));
          if (!v113)
          {
            ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
            std::__shared_weak_count::__release_weak(v110);
          }
        }
      }
      if (v1329)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v105 + 96))(&v1330, v105, 0);
      else
LABEL_810:
        v1330 = 0;
      if (!v1321)
        goto LABEL_2071;
      if (!v1322)
        goto LABEL_2071;
      v559 = v1323;
      if (!v1323)
        goto LABEL_2071;
      v560 = v1325;
      v1260 = v1326;
      v561 = v1320;
      if (v1328 && v1320)
      {
        v562 = v1318;
        v563 = v1319;
        if (v1319)
        {
          v564 = (unint64_t *)&v1319->__shared_owners_;
          do
            v565 = __ldxr(v564);
          while (__stxr(v565 + 1, v564));
          do
            v566 = __ldaxr(v564);
          while (__stlxr(v566 - 1, v564));
          if (!v566)
          {
            ((void (*)(std::__shared_weak_count *))v563->__on_zero_shared)(v563);
            std::__shared_weak_count::__release_weak(v563);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v562 + 88))(v562, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v561 = v1320;
      }
      v1296 = v559 - 1;
      if (v559 == 1)
        goto LABEL_1697;
      if ((_DWORD)v104)
      {
        v567 = 0;
        while (1)
        {
          sub_20B50671C(v103);
          if (!v561)
            break;
          v568 = 0;
          v569 = v104;
          do
          {
            v1331 = 4;
            v1332 = v561 + 4 * v568;
            sub_20B509D64(v103, (float **)&v1331);
            v568 += v560;
            --v569;
          }
          while (v569);
LABEL_834:
          v572 = *(_QWORD *)(v103 + 56);
          *(_QWORD *)(v103 + 40) = *(_QWORD *)(v572 - 8);
          *(_QWORD *)(v103 + 56) = v572 - 8;
          if (*(_BYTE *)(v103 + 88))
            *(_BYTE *)(v103 + 88) = 0;
          v561 += 4 * v1260;
          if (++v567 == v1296)
            goto LABEL_1697;
        }
        v570 = 0;
        v571 = v104;
        while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v1331 = 4;
          v1332 = 4 * v570;
          sub_20B509D64(v103, (float **)&v1331);
          v570 += v560;
          if (!--v571)
            goto LABEL_834;
        }
LABEL_2384:
        abort();
      }
      do
      {
        sub_20B50671C(v103);
        v1021 = *(_QWORD *)(v103 + 56);
        *(_QWORD *)(v103 + 40) = *(_QWORD *)(v1021 - 8);
        *(_QWORD *)(v103 + 56) = v1021 - 8;
        if (*(_BYTE *)(v103 + 88))
          *(_BYTE *)(v103 + 88) = 0;
        v561 += 4 * v1260;
        --v1296;
      }
      while (v1296);
LABEL_1697:
      sub_20B50671C(v103);
      v1022 = v104;
      if ((_DWORD)v104)
      {
        if (!v561)
        {
          v1143 = 0;
          while (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v1331 = 4;
            v1332 = 4 * v1143;
            sub_20B509D64(v103, (float **)&v1331);
            v1143 += v560;
            if (!--v1022)
              goto LABEL_2069;
          }
          goto LABEL_2384;
        }
        v1023 = 0;
        do
        {
          v1331 = 4;
          v1332 = v561 + 4 * v1023;
          sub_20B509D64(v103, (float **)&v1331);
          v1023 += v560;
          --v1022;
        }
        while (v1022);
      }
LABEL_2069:
      v1144 = *(_QWORD *)(v103 + 56);
      *(_QWORD *)(v103 + 40) = *(_QWORD *)(v1144 - 8);
      *(_QWORD *)(v103 + 56) = v1144 - 8;
      if (*(_BYTE *)(v103 + 88))
        *(_BYTE *)(v103 + 88) = 0;
LABEL_2071:
      v1145 = v1330;
      v1330 = 0;
      if (v1145)
        (*(void (**)(uint64_t))(*(_QWORD *)v1145 + 8))(v1145);
      v850 = v1319;
      if (v1319)
      {
        v1146 = (unint64_t *)&v1319->__shared_owners_;
        do
          v852 = __ldaxr(v1146);
        while (__stlxr(v852 - 1, v1146));
LABEL_2373:
        if (!v852)
        {
          ((void (*)(std::__shared_weak_count *))v850->__on_zero_shared)(v850);
          std::__shared_weak_count::__release_weak(v850);
        }
      }
      return;
    default:
      return;
  }
}

void sub_20B3CCCE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  unint64_t *p_shared_owners;
  unint64_t v24;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v24 = __ldaxr(p_shared_owners);
    while (__stlxr(v24 - 1, p_shared_owners));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_20B3CDB20(int a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  std::__shared_weak_count *v94;
  unint64_t *v95;
  unint64_t v96;
  unint64_t v97;
  std::__shared_weak_count *v98;
  unint64_t *v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  std::__shared_weak_count *v105;
  unint64_t *v106;
  unint64_t v107;
  unint64_t v108;
  std::__shared_weak_count *v109;
  unint64_t *v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  std::__shared_weak_count *v116;
  unint64_t *v117;
  unint64_t v118;
  unint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  unint64_t v130;
  std::__shared_weak_count *v131;
  unint64_t *v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  std::__shared_weak_count *v138;
  unint64_t *v139;
  unint64_t v140;
  unint64_t v141;
  std::__shared_weak_count *v142;
  unint64_t *v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  std::__shared_weak_count *v149;
  unint64_t *v150;
  unint64_t v151;
  unint64_t v152;
  std::__shared_weak_count *v153;
  unint64_t *v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  std::__shared_weak_count *v160;
  unint64_t *v161;
  unint64_t v162;
  unint64_t v163;
  std::__shared_weak_count *v164;
  unint64_t *v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  std::__shared_weak_count *v171;
  unint64_t *v172;
  unint64_t v173;
  unint64_t v174;
  std::__shared_weak_count *v175;
  unint64_t *v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  std::__shared_weak_count *v182;
  unint64_t *v183;
  unint64_t v184;
  unint64_t v185;
  std::__shared_weak_count *v186;
  unint64_t *v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  std::__shared_weak_count *v193;
  unint64_t *v194;
  unint64_t v195;
  unint64_t v196;
  std::__shared_weak_count *v197;
  unint64_t *v198;
  unint64_t v199;
  unint64_t v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  std::__shared_weak_count *v204;
  unint64_t *v205;
  unint64_t v206;
  unint64_t v207;
  std::__shared_weak_count *v208;
  unint64_t *v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  int v213;
  uint64_t v214;
  std::__shared_weak_count *v215;
  unint64_t *v216;
  unint64_t v217;
  unint64_t v218;
  std::__shared_weak_count *v219;
  unint64_t *v220;
  unint64_t v221;
  unint64_t v222;
  uint64_t v223;
  int v224;
  uint64_t v225;
  std::__shared_weak_count *v226;
  unint64_t *v227;
  unint64_t v228;
  unint64_t v229;
  std::__shared_weak_count *v230;
  unint64_t *v231;
  unint64_t v232;
  unint64_t v233;
  uint64_t v234;
  int v235;
  uint64_t v236;
  std::__shared_weak_count *v237;
  unint64_t *v238;
  unint64_t v239;
  unint64_t v240;
  std::__shared_weak_count *v241;
  unint64_t *v242;
  unint64_t v243;
  unint64_t v244;
  uint64_t v245;
  int v246;
  uint64_t v247;
  std::__shared_weak_count *v248;
  unint64_t *v249;
  unint64_t v250;
  unint64_t v251;
  std::__shared_weak_count *v252;
  unint64_t *v253;
  unint64_t v254;
  unint64_t v255;
  uint64_t v256;
  int v257;
  uint64_t v258;
  std::__shared_weak_count *v259;
  unint64_t *v260;
  unint64_t v261;
  unint64_t v262;
  std::__shared_weak_count *v263;
  unint64_t *v264;
  unint64_t v265;
  unint64_t v266;
  uint64_t v267;
  int v268;
  uint64_t v269;
  std::__shared_weak_count *v270;
  unint64_t *v271;
  unint64_t v272;
  unint64_t v273;
  std::__shared_weak_count *v274;
  unint64_t *v275;
  unint64_t v276;
  unint64_t v277;
  uint64_t v278;
  int v279;
  uint64_t v280;
  std::__shared_weak_count *v281;
  unint64_t *v282;
  unint64_t v283;
  unint64_t v284;
  std::__shared_weak_count *v285;
  unint64_t *v286;
  unint64_t v287;
  unint64_t v288;
  uint64_t v289;
  int v290;
  uint64_t v291;
  std::__shared_weak_count *v292;
  unint64_t *v293;
  unint64_t v294;
  unint64_t v295;
  std::__shared_weak_count *v296;
  unint64_t *v297;
  unint64_t v298;
  unint64_t v299;
  uint64_t v300;
  int v301;
  uint64_t v302;
  std::__shared_weak_count *v303;
  unint64_t *v304;
  unint64_t v305;
  unint64_t v306;
  std::__shared_weak_count *v307;
  unint64_t *v308;
  unint64_t v309;
  unint64_t v310;
  uint64_t v311;
  uint64_t v312;
  std::__shared_weak_count *v313;
  unint64_t *v314;
  unint64_t v315;
  unint64_t v316;
  std::__shared_weak_count *v317;
  unint64_t *v318;
  unint64_t v319;
  unint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  std::__shared_weak_count *v324;
  unint64_t *v325;
  unint64_t v326;
  unint64_t v327;
  std::__shared_weak_count *v328;
  unint64_t *v329;
  unint64_t v330;
  unint64_t v331;
  uint64_t v332;
  int v333;
  uint64_t v334;
  std::__shared_weak_count *v335;
  unint64_t *v336;
  unint64_t v337;
  unint64_t v338;
  std::__shared_weak_count *v339;
  unint64_t *v340;
  unint64_t v341;
  unint64_t v342;
  uint64_t v343;
  uint64_t v344;
  std::__shared_weak_count *v345;
  unint64_t *v346;
  unint64_t v347;
  unint64_t v348;
  std::__shared_weak_count *v349;
  unint64_t *v350;
  unint64_t v351;
  unint64_t v352;
  uint64_t v353;
  int v354;
  uint64_t v355;
  std::__shared_weak_count *v356;
  unint64_t *v357;
  unint64_t v358;
  unint64_t v359;
  std::__shared_weak_count *v360;
  unint64_t *v361;
  unint64_t v362;
  unint64_t v363;
  uint64_t v364;
  int v365;
  uint64_t v366;
  std::__shared_weak_count *v367;
  unint64_t *v368;
  unint64_t v369;
  unint64_t v370;
  std::__shared_weak_count *v371;
  unint64_t *v372;
  unint64_t v373;
  unint64_t v374;
  uint64_t v375;
  int v376;
  uint64_t v377;
  std::__shared_weak_count *v378;
  unint64_t *v379;
  unint64_t v380;
  unint64_t v381;
  std::__shared_weak_count *v382;
  unint64_t *v383;
  unint64_t v384;
  unint64_t v385;
  uint64_t v386;
  int v387;
  uint64_t v388;
  std::__shared_weak_count *v389;
  unint64_t *v390;
  unint64_t v391;
  unint64_t v392;
  std::__shared_weak_count *v393;
  unint64_t *v394;
  unint64_t v395;
  unint64_t v396;
  uint64_t v397;
  int v398;
  uint64_t v399;
  std::__shared_weak_count *v400;
  unint64_t *v401;
  unint64_t v402;
  unint64_t v403;
  std::__shared_weak_count *v404;
  unint64_t *v405;
  unint64_t v406;
  unint64_t v407;
  uint64_t v408;
  int v409;
  uint64_t v410;
  std::__shared_weak_count *v411;
  unint64_t *v412;
  unint64_t v413;
  unint64_t v414;
  std::__shared_weak_count *v415;
  unint64_t *v416;
  unint64_t v417;
  unint64_t v418;
  uint64_t v419;
  uint64_t v420;
  std::__shared_weak_count *v421;
  unint64_t *v422;
  unint64_t v423;
  unint64_t v424;
  std::__shared_weak_count *v425;
  unint64_t *v426;
  unint64_t v427;
  unint64_t v428;
  uint64_t v429;
  int v430;
  uint64_t v431;
  std::__shared_weak_count *v432;
  unint64_t *v433;
  unint64_t v434;
  unint64_t v435;
  std::__shared_weak_count *v436;
  unint64_t *v437;
  unint64_t v438;
  unint64_t v439;
  int v440;
  uint64_t v441;
  unsigned __int8 *v442;
  uint64_t v443;
  std::__shared_weak_count *v444;
  unint64_t *v445;
  unint64_t v446;
  unint64_t v447;
  int v448;
  uint64_t v449;
  uint64_t v450;
  _QWORD *v451;
  int v458;
  uint64_t v459;
  unsigned __int8 *v460;
  uint64_t v461;
  std::__shared_weak_count *v462;
  unint64_t *v463;
  unint64_t v464;
  unint64_t v465;
  int v466;
  uint64_t v467;
  uint64_t v468;
  _QWORD *v469;
  int v472;
  uint64_t v473;
  unsigned __int8 *v474;
  uint64_t v475;
  std::__shared_weak_count *v476;
  unint64_t *v477;
  unint64_t v478;
  unint64_t v479;
  uint64_t v480;
  int v481;
  uint64_t m;
  uint64_t v483;
  std::__shared_weak_count *v484;
  unint64_t *v485;
  unint64_t v486;
  int v487;
  uint64_t v488;
  unsigned __int8 *v489;
  uint64_t v490;
  std::__shared_weak_count *v491;
  unint64_t *v492;
  unint64_t v493;
  unint64_t v494;
  int v495;
  uint64_t v496;
  uint64_t v497;
  _QWORD *v498;
  int v499;
  uint64_t v500;
  unsigned __int8 *v501;
  uint64_t v502;
  std::__shared_weak_count *v503;
  unint64_t *v504;
  unint64_t v505;
  unint64_t v506;
  uint64_t v507;
  int v508;
  uint64_t n;
  uint64_t v510;
  unint64_t *v511;
  int v512;
  uint64_t v513;
  unsigned __int8 *v514;
  uint64_t v515;
  std::__shared_weak_count *v516;
  unint64_t *v517;
  unint64_t v518;
  unint64_t v519;
  int v520;
  uint64_t v521;
  uint64_t v522;
  _QWORD *v523;
  int v524;
  uint64_t v525;
  unsigned __int8 *v526;
  uint64_t v527;
  std::__shared_weak_count *v528;
  unint64_t *v529;
  unint64_t v530;
  unint64_t v531;
  uint64_t v532;
  int v533;
  uint64_t v534;
  uint64_t v535;
  _QWORD *v536;
  int v537;
  uint64_t v538;
  unsigned __int8 *v539;
  uint64_t v540;
  std::__shared_weak_count *v541;
  unint64_t *v542;
  unint64_t v543;
  unint64_t v544;
  uint64_t v545;
  int v546;
  uint64_t k;
  uint64_t v548;
  unint64_t *v549;
  int v550;
  uint64_t v551;
  unsigned __int8 *v552;
  uint64_t v553;
  std::__shared_weak_count *v554;
  unint64_t *v555;
  unint64_t v556;
  unint64_t v557;
  uint64_t v558;
  int v559;
  uint64_t v560;
  uint64_t v561;
  _QWORD *v562;
  int v563;
  uint64_t v564;
  unsigned __int8 *v565;
  uint64_t v566;
  std::__shared_weak_count *v567;
  unint64_t *v568;
  unint64_t v569;
  unint64_t v570;
  int v571;
  uint64_t v572;
  uint64_t v573;
  _QWORD *v574;
  int v575;
  uint64_t v576;
  unsigned __int8 *v577;
  uint64_t v578;
  std::__shared_weak_count *v579;
  unint64_t *v580;
  unint64_t v581;
  unint64_t v582;
  int v583;
  uint64_t v584;
  uint64_t v585;
  _QWORD *v586;
  int v589;
  uint64_t v590;
  unsigned __int8 *v591;
  uint64_t v592;
  std::__shared_weak_count *v593;
  unint64_t *v594;
  unint64_t v595;
  unint64_t v596;
  int v597;
  uint64_t v598;
  uint64_t v599;
  _QWORD *v600;
  int v603;
  uint64_t v604;
  unsigned __int8 *v605;
  uint64_t v606;
  std::__shared_weak_count *v607;
  unint64_t *v608;
  unint64_t v609;
  unint64_t v610;
  int v611;
  uint64_t v612;
  uint64_t v613;
  _QWORD *v614;
  int v615;
  uint64_t v616;
  unsigned __int8 *v617;
  uint64_t v618;
  std::__shared_weak_count *v619;
  unint64_t *v620;
  unint64_t v621;
  unint64_t v622;
  uint64_t v623;
  int v624;
  uint64_t v625;
  uint64_t v626;
  _QWORD *v627;
  int v628;
  uint64_t v629;
  unsigned __int8 *v630;
  uint64_t v631;
  std::__shared_weak_count *v632;
  unint64_t *v633;
  unint64_t v634;
  unint64_t v635;
  int v636;
  uint64_t v637;
  uint64_t v638;
  _QWORD *v639;
  int v642;
  uint64_t v643;
  unsigned __int8 *v644;
  uint64_t v645;
  std::__shared_weak_count *v646;
  unint64_t *v647;
  unint64_t v648;
  unint64_t v649;
  uint64_t v650;
  int v651;
  uint64_t v652;
  uint64_t v653;
  _QWORD *v654;
  int v655;
  uint64_t v656;
  unsigned __int8 *v657;
  uint64_t v658;
  std::__shared_weak_count *v659;
  unint64_t *v660;
  unint64_t v661;
  unint64_t v662;
  int v663;
  uint64_t v664;
  uint64_t v665;
  _QWORD *v666;
  int v667;
  uint64_t v668;
  unsigned __int8 *v669;
  uint64_t v670;
  std::__shared_weak_count *v671;
  unint64_t *v672;
  unint64_t v673;
  unint64_t v674;
  uint64_t v675;
  int v676;
  uint64_t v677;
  uint64_t v678;
  _QWORD *v679;
  int v680;
  uint64_t v681;
  unsigned __int8 *v682;
  uint64_t v683;
  std::__shared_weak_count *v684;
  unint64_t *v685;
  unint64_t v686;
  unint64_t v687;
  uint64_t v688;
  int v689;
  uint64_t v690;
  uint64_t v691;
  _QWORD *v692;
  int v693;
  uint64_t v694;
  unsigned __int8 *v695;
  uint64_t v696;
  std::__shared_weak_count *v697;
  unint64_t *v698;
  unint64_t v699;
  unint64_t v700;
  int v701;
  uint64_t v702;
  uint64_t v703;
  _QWORD *v704;
  int v707;
  uint64_t v708;
  unsigned __int8 *v709;
  uint64_t v710;
  std::__shared_weak_count *v711;
  unint64_t *v712;
  unint64_t v713;
  unint64_t v714;
  uint64_t v715;
  int v716;
  uint64_t v717;
  uint64_t v718;
  _QWORD *v719;
  int v720;
  uint64_t v721;
  unsigned __int8 *v722;
  uint64_t v723;
  std::__shared_weak_count *v724;
  unint64_t *v725;
  unint64_t v726;
  unint64_t v727;
  uint64_t v728;
  int v729;
  uint64_t v730;
  uint64_t v731;
  _QWORD *v732;
  int v733;
  uint64_t v734;
  unsigned __int8 *v735;
  uint64_t v736;
  std::__shared_weak_count *v737;
  unint64_t *v738;
  unint64_t v739;
  unint64_t v740;
  uint64_t v741;
  int v742;
  uint64_t v743;
  uint64_t v744;
  _QWORD *v745;
  int v746;
  uint64_t v747;
  unsigned __int8 *v748;
  uint64_t v749;
  std::__shared_weak_count *v750;
  unint64_t *v751;
  unint64_t v752;
  unint64_t v753;
  uint64_t v754;
  int v755;
  uint64_t v756;
  int v757;
  uint64_t v758;
  unsigned __int8 *v759;
  uint64_t v760;
  std::__shared_weak_count *v761;
  unint64_t *v762;
  unint64_t v763;
  unint64_t v764;
  uint64_t v765;
  int v766;
  uint64_t j;
  uint64_t v768;
  unint64_t *v769;
  int v770;
  uint64_t v771;
  unsigned __int8 *v772;
  uint64_t v773;
  std::__shared_weak_count *v774;
  unint64_t *v775;
  unint64_t v776;
  unint64_t v777;
  uint64_t v778;
  int v779;
  uint64_t v780;
  uint64_t v781;
  _QWORD *v782;
  int v783;
  uint64_t v784;
  unsigned __int8 *v785;
  uint64_t v786;
  std::__shared_weak_count *v787;
  unint64_t *v788;
  unint64_t v789;
  unint64_t v790;
  uint64_t v791;
  int v792;
  uint64_t v793;
  uint64_t v794;
  _QWORD *v795;
  int v796;
  uint64_t v797;
  unsigned __int8 *v798;
  uint64_t v799;
  std::__shared_weak_count *v800;
  unint64_t *v801;
  unint64_t v802;
  unint64_t v803;
  int v804;
  uint64_t v805;
  uint64_t v806;
  _QWORD *v807;
  int v810;
  uint64_t v811;
  unsigned __int8 *v812;
  uint64_t v813;
  std::__shared_weak_count *v814;
  unint64_t *v815;
  unint64_t v816;
  unint64_t v817;
  int v818;
  uint64_t v819;
  uint64_t v820;
  _QWORD *v821;
  int v822;
  uint64_t v823;
  unsigned __int8 *v824;
  uint64_t v825;
  std::__shared_weak_count *v826;
  unint64_t *v827;
  unint64_t v828;
  unint64_t v829;
  int v830;
  uint64_t i;
  uint64_t v832;
  unint64_t *v833;
  int v834;
  uint64_t v835;
  unsigned __int8 *v836;
  uint64_t v837;
  std::__shared_weak_count *v838;
  unint64_t *v839;
  unint64_t v840;
  unint64_t v841;
  uint64_t v842;
  int v843;
  uint64_t jj;
  uint64_t v845;
  unint64_t *v846;
  int v847;
  uint64_t v848;
  unsigned __int8 *v849;
  uint64_t v850;
  std::__shared_weak_count *v851;
  unint64_t *v852;
  unint64_t v853;
  unint64_t v854;
  int v855;
  uint64_t v856;
  uint64_t v857;
  _QWORD *v858;
  int v861;
  uint64_t v862;
  unsigned __int8 *v863;
  uint64_t v864;
  std::__shared_weak_count *v865;
  unint64_t *v866;
  unint64_t v867;
  unint64_t v868;
  int v869;
  uint64_t v870;
  uint64_t v871;
  _QWORD *v872;
  int v873;
  uint64_t v874;
  unsigned __int8 *v875;
  uint64_t v876;
  std::__shared_weak_count *v877;
  unint64_t *v878;
  unint64_t v879;
  unint64_t v880;
  uint64_t v881;
  int v882;
  uint64_t ii;
  uint64_t v884;
  unint64_t *v885;
  int v886;
  uint64_t v887;
  unsigned __int8 *v888;
  uint64_t v889;
  std::__shared_weak_count *v890;
  unint64_t *v891;
  unint64_t v892;
  unint64_t v893;
  int v894;
  uint64_t v895;
  uint64_t v896;
  _QWORD *v897;
  int v898;
  uint64_t v899;
  unsigned __int8 *v900;
  uint64_t v901;
  std::__shared_weak_count *v902;
  unint64_t *v903;
  unint64_t v904;
  unint64_t v905;
  uint64_t v906;
  int v907;
  uint64_t v908;
  uint64_t v909;
  _QWORD *v910;
  int v911;
  uint64_t v912;
  unsigned __int8 *v913;
  uint64_t v914;
  std::__shared_weak_count *v915;
  unint64_t *v916;
  unint64_t v917;
  unint64_t v918;
  int v919;
  uint64_t v920;
  uint64_t v921;
  _QWORD *v922;
  int v925;
  uint64_t v926;
  unsigned __int8 *v927;
  uint64_t v928;
  std::__shared_weak_count *v929;
  unint64_t *v930;
  unint64_t v931;
  unint64_t v932;
  uint64_t v933;
  int v934;
  uint64_t v935;
  int v936;
  uint64_t v937;
  unsigned __int8 *v938;
  uint64_t v939;
  std::__shared_weak_count *v940;
  unint64_t *v941;
  unint64_t v942;
  unint64_t v943;
  int v944;
  uint64_t v945;
  uint64_t v946;
  _QWORD *v947;
  int v950;
  uint64_t v951;
  unsigned __int8 *v952;
  uint64_t v953;
  std::__shared_weak_count *v954;
  unint64_t *v955;
  unint64_t v956;
  unint64_t v957;
  uint64_t v958;
  int v959;
  uint64_t v960;
  uint64_t v961;
  uint64_t v962;
  _QWORD *v963;
  uint64_t v966;
  unint64_t *v967;
  uint64_t v968;
  uint64_t v969;
  _QWORD *v970;
  uint64_t v973;
  unint64_t *v974;
  uint64_t v975;
  uint64_t v976;
  _QWORD *v977;
  uint64_t v980;
  unint64_t *v981;
  uint64_t v982;
  uint64_t v983;
  _QWORD *v984;
  uint64_t v987;
  unint64_t *v988;
  uint64_t v989;
  uint64_t v990;
  _QWORD *v991;
  uint64_t v994;
  unint64_t *v995;
  uint64_t v996;
  uint64_t v997;
  _QWORD *v998;
  uint64_t v1001;
  unint64_t *v1002;
  uint64_t v1003;
  uint64_t v1004;
  _QWORD *v1005;
  uint64_t v1008;
  unint64_t *v1009;
  uint64_t v1010;
  uint64_t v1011;
  _QWORD *v1012;
  uint64_t v1015;
  unint64_t *v1016;
  uint64_t v1017;
  uint64_t v1018;
  _QWORD *v1019;
  uint64_t v1022;
  unint64_t *v1023;
  uint64_t v1024;
  uint64_t v1025;
  _QWORD *v1026;
  uint64_t v1029;
  unint64_t *v1030;
  uint64_t v1031;
  unint64_t *v1032;
  uint64_t v1033;
  unint64_t *v1034;
  uint64_t v1035;
  unint64_t *v1036;
  uint64_t v1037;
  unint64_t *v1038;
  uint64_t v1039;
  unint64_t *v1040;
  uint64_t v1041;
  unint64_t *v1042;
  uint64_t v1043;
  unint64_t *v1044;
  uint64_t v1045;
  unint64_t *v1046;
  uint64_t v1047;
  unint64_t *v1048;
  uint64_t v1049;
  unint64_t *v1050;
  uint64_t v1051;
  unint64_t *v1052;
  uint64_t v1053;
  unint64_t *v1054;
  uint64_t v1055;
  unint64_t *v1056;
  uint64_t v1057;
  unint64_t *v1058;
  uint64_t v1059;
  unint64_t *v1060;
  uint64_t v1061;
  unint64_t *v1062;
  uint64_t v1063;
  unint64_t *v1064;
  uint64_t v1065;
  unint64_t *v1066;
  uint64_t v1067;
  unint64_t *v1068;
  uint64_t v1069;
  unint64_t *v1070;
  uint64_t v1071;
  unint64_t *v1072;
  uint64_t v1073;
  unint64_t *v1074;
  uint64_t v1075;
  unint64_t *v1076;
  uint64_t v1077;
  int v1078;
  int v1079;
  int v1080;
  int v1081;
  uint64_t v1082;
  int v1083;
  int v1084;
  uint64_t v1085;
  int v1086;
  uint64_t v1087;
  int v1088;
  int v1089;
  uint64_t v1090;
  uint64_t v1091;
  uint64_t v1092;
  uint64_t v1093;
  uint64_t v1094;
  uint64_t v1095;
  int v1096;
  uint64_t v1097;
  uint64_t v1098;
  int v1099;
  int v1100;
  uint64_t v1101;
  std::__shared_weak_count *v1102;
  unsigned __int8 *v1103;
  unsigned int v1104;
  int v1105;
  int v1106;
  unsigned int v1107;
  char v1108;
  char v1109;
  unsigned int v1110;
  int v1111;
  char v1112;
  char v1113;
  uint64_t v1114;
  uint64_t v1115;
  unsigned __int8 *v1116;

  switch(a1)
  {
    case 0:
      sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_20B532360);
      abort();
    case 1:
      sub_20B2D6D24(a3, (uint64_t)&v1101);
      v4 = *a2;
      v5 = v1104;
      v6 = v1101;
      if (!v1101)
        goto LABEL_1389;
      v7 = v1102;
      if (v1102)
      {
        p_shared_owners = (unint64_t *)&v1102->__shared_owners_;
        do
          v9 = __ldxr(p_shared_owners);
        while (__stxr(v9 + 1, p_shared_owners));
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        v6 = v1101;
        v11 = v1102;
        if (v1102)
        {
          v12 = (unint64_t *)&v1102->__shared_owners_;
          do
            v13 = __ldxr(v12);
          while (__stxr(v13 + 1, v12));
          do
            v14 = __ldaxr(v12);
          while (__stlxr(v14 - 1, v12));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
      }
      if (v1109)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v1115, v6, 0);
      else
LABEL_1389:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1415;
      v822 = v1105;
      if (!v1105)
        goto LABEL_1415;
      v823 = v1107;
      v824 = v1103;
      if (v1108 && v1103)
      {
        v825 = v1101;
        v826 = v1102;
        if (v1102)
        {
          v827 = (unint64_t *)&v1102->__shared_owners_;
          do
            v828 = __ldxr(v827);
          while (__stxr(v828 + 1, v827));
          do
            v829 = __ldaxr(v827);
          while (__stlxr(v829 - 1, v827));
          if (!v829)
          {
            ((void (*)(std::__shared_weak_count *))v826->__on_zero_shared)(v826);
            std::__shared_weak_count::__release_weak(v826);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v825 + 88))(v825, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v824 = v1103;
      }
      if (v822 == 1)
        goto LABEL_1409;
      if (!(_DWORD)v5)
        goto LABEL_1415;
      v830 = 0;
      do
      {
        if (!v824
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2032;
        }
        for (i = 0; i != v5; ++i)
          sub_20B512EB0(v4, &v824[i]);
        v824 += v823;
        ++v830;
      }
      while (v830 != v822 - 1);
LABEL_1409:
      if ((_DWORD)v5 && !v824)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2032:
          abort();
        }
        v824 = 0;
      }
      if ((_DWORD)v5)
      {
        do
        {
          sub_20B512EB0(v4, v824++);
          --v5;
        }
        while (v5);
      }
LABEL_1415:
      v832 = v1115;
      v1115 = 0;
      if (v832)
        (*(void (**)(uint64_t))(*(_QWORD *)v832 + 8))(v832);
      v484 = v1102;
      if (!v1102)
        return;
      v833 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v833);
      while (__stlxr(v486 - 1, v833));
      goto LABEL_2025;
    case 2:
      sub_20B2D7590(a3, (uint64_t)&v1101);
      v321 = *a2;
      v322 = v1104;
      v323 = v1101;
      if (!v1101)
        goto LABEL_1363;
      v324 = v1102;
      if (v1102)
      {
        v325 = (unint64_t *)&v1102->__shared_owners_;
        do
          v326 = __ldxr(v325);
        while (__stxr(v326 + 1, v325));
        do
          v327 = __ldaxr(v325);
        while (__stlxr(v327 - 1, v325));
        if (!v327)
        {
          ((void (*)(std::__shared_weak_count *))v324->__on_zero_shared)(v324);
          std::__shared_weak_count::__release_weak(v324);
        }
        v323 = v1101;
        v328 = v1102;
        if (v1102)
        {
          v329 = (unint64_t *)&v1102->__shared_owners_;
          do
            v330 = __ldxr(v329);
          while (__stxr(v330 + 1, v329));
          do
            v331 = __ldaxr(v329);
          while (__stlxr(v331 - 1, v329));
          if (!v331)
          {
            ((void (*)(std::__shared_weak_count *))v328->__on_zero_shared)(v328);
            std::__shared_weak_count::__release_weak(v328);
          }
        }
      }
      if (v1109)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v323 + 96))(&v1114, v323, 0);
      else
LABEL_1363:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1996;
      v810 = v1105;
      if (!v1105)
        goto LABEL_1996;
      v1097 = v322;
      v811 = v1107;
      v812 = v1103;
      if (v1108 && v1103)
      {
        v813 = v1101;
        v814 = v1102;
        if (v1102)
        {
          v815 = (unint64_t *)&v1102->__shared_owners_;
          do
            v816 = __ldxr(v815);
          while (__stxr(v816 + 1, v815));
          do
            v817 = __ldaxr(v815);
          while (__stlxr(v817 - 1, v815));
          if (!v817)
          {
            ((void (*)(std::__shared_weak_count *))v814->__on_zero_shared)(v814);
            std::__shared_weak_count::__release_weak(v814);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v813 + 88))(v813, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v812 = v1103;
      }
      if (v810 == 1)
        goto LABEL_1385;
      if ((_DWORD)v1097)
      {
        v818 = 0;
        do
        {
          if (!v812
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2054;
          }
          v819 = 0;
          v820 = *(_QWORD *)(v321 + 40);
          do
          {
            if (v820)
            {
              v821 = *(_QWORD **)(v321 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v321 + 32);
              sub_20AEC01D0(v821, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v820 = *(_QWORD *)(v321 + 40) + 1;
            *(_QWORD *)(v321 + 40) = v820;
            v819 += 2;
          }
          while (2 * v1097 != v819);
          v812 += 2 * v811;
          ++v818;
        }
        while (v818 != v810 - 1);
LABEL_1385:
        if ((_DWORD)v1097 && !v812)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2054:
            abort();
          }
          v812 = 0;
        }
      }
      else
      {
        v812 += (2 * (v810 - 2) + 2) * v811;
      }
      v1115 = v1097;
      v1116 = v812;
      sub_20B513184(v321, &v1115);
LABEL_1996:
      v1069 = v1114;
      v1114 = 0;
      if (v1069)
        (*(void (**)(uint64_t))(*(_QWORD *)v1069 + 8))(v1069);
      v484 = v1102;
      if (!v1102)
        return;
      v1070 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1070);
      while (__stlxr(v486 - 1, v1070));
      goto LABEL_2025;
    case 3:
      sub_20B372128(a3, (uint64_t)&v1101);
      v311 = *a2;
      v1087 = v1104;
      v312 = v1101;
      if (!v1101)
        goto LABEL_1337;
      v313 = v1102;
      if (v1102)
      {
        v314 = (unint64_t *)&v1102->__shared_owners_;
        do
          v315 = __ldxr(v314);
        while (__stxr(v315 + 1, v314));
        do
          v316 = __ldaxr(v314);
        while (__stlxr(v316 - 1, v314));
        if (!v316)
        {
          ((void (*)(std::__shared_weak_count *))v313->__on_zero_shared)(v313);
          std::__shared_weak_count::__release_weak(v313);
        }
        v312 = v1101;
        v317 = v1102;
        if (v1102)
        {
          v318 = (unint64_t *)&v1102->__shared_owners_;
          do
            v319 = __ldxr(v318);
          while (__stxr(v319 + 1, v318));
          do
            v320 = __ldaxr(v318);
          while (__stlxr(v320 - 1, v318));
          if (!v320)
          {
            ((void (*)(std::__shared_weak_count *))v317->__on_zero_shared)(v317);
            std::__shared_weak_count::__release_weak(v317);
          }
        }
      }
      if (v1109)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v312 + 96))(&v1115, v312, 0);
      else
LABEL_1337:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1758;
      v796 = v1105;
      if (!v1105)
        goto LABEL_1758;
      v797 = v1107;
      v798 = v1103;
      if (v1108 && v1103)
      {
        v799 = v1101;
        v800 = v1102;
        if (v1102)
        {
          v801 = (unint64_t *)&v1102->__shared_owners_;
          do
            v802 = __ldxr(v801);
          while (__stxr(v802 + 1, v801));
          do
            v803 = __ldaxr(v801);
          while (__stlxr(v803 - 1, v801));
          if (!v803)
          {
            ((void (*)(std::__shared_weak_count *))v800->__on_zero_shared)(v800);
            std::__shared_weak_count::__release_weak(v800);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v799 + 88))(v799, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v798 = v1103;
      }
      if (v796 == 1)
        goto LABEL_1359;
      if (!(_DWORD)v1087)
        goto LABEL_1758;
      v804 = 0;
      do
      {
        if (!v798
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1362;
        }
        v805 = 0;
        v806 = *(_QWORD *)(v311 + 40);
        do
        {
          if (v806)
          {
            v807 = *(_QWORD **)(v311 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v311 + 32);
            sub_20AEC01D0(v807, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v311 + 24) + *(_QWORD *)(**(_QWORD **)(v311 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v798[v805];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v806 = *(_QWORD *)(v311 + 40) + 1;
          *(_QWORD *)(v311 + 40) = v806;
          v805 += 2;
        }
        while (2 * v1087 != v805);
        v798 += 2 * v797;
        ++v804;
      }
      while (v804 != v796 - 1);
LABEL_1359:
      if (!(_DWORD)v1087 || v798)
      {
        if (!(_DWORD)v1087)
          goto LABEL_1758;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1362:
        abort();
      }
      v1003 = *(_QWORD *)(v311 + 40);
      v1004 = 2 * v1087;
      do
      {
        if (v1003)
        {
          v1005 = *(_QWORD **)(v311 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v311 + 32);
          sub_20AEC01D0(v1005, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v311 + 24) + *(_QWORD *)(**(_QWORD **)(v311 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v798;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v1003 = *(_QWORD *)(v311 + 40) + 1;
        *(_QWORD *)(v311 + 40) = v1003;
        v798 += 2;
        v1004 -= 2;
      }
      while (v1004);
LABEL_1758:
      v1008 = v1115;
      v1115 = 0;
      if (v1008)
        (*(void (**)(uint64_t))(*(_QWORD *)v1008 + 8))(v1008);
      v484 = v1102;
      if (!v1102)
        return;
      v1009 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1009);
      while (__stlxr(v486 - 1, v1009));
      goto LABEL_2025;
    case 4:
      sub_20B3726DC(a3, (uint64_t)&v1101);
      v190 = *a2;
      v191 = v1104;
      v192 = v1101;
      if (!v1101)
        goto LABEL_1040;
      v193 = v1102;
      if (v1102)
      {
        v194 = (unint64_t *)&v1102->__shared_owners_;
        do
          v195 = __ldxr(v194);
        while (__stxr(v195 + 1, v194));
        do
          v196 = __ldaxr(v194);
        while (__stlxr(v196 - 1, v194));
        if (!v196)
        {
          ((void (*)(std::__shared_weak_count *))v193->__on_zero_shared)(v193);
          std::__shared_weak_count::__release_weak(v193);
        }
        v192 = v1101;
        v197 = v1102;
        if (v1102)
        {
          v198 = (unint64_t *)&v1102->__shared_owners_;
          do
            v199 = __ldxr(v198);
          while (__stxr(v199 + 1, v198));
          do
            v200 = __ldaxr(v198);
          while (__stlxr(v200 - 1, v198));
          if (!v200)
          {
            ((void (*)(std::__shared_weak_count *))v197->__on_zero_shared)(v197);
            std::__shared_weak_count::__release_weak(v197);
          }
        }
      }
      if (v1109)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v192 + 96))(&v1114, v192, 0);
      else
LABEL_1040:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1932;
      v655 = v1105;
      if (!v1105)
        goto LABEL_1932;
      v1094 = v191;
      v656 = v1107;
      v657 = v1103;
      if (v1108 && v1103)
      {
        v658 = v1101;
        v659 = v1102;
        if (v1102)
        {
          v660 = (unint64_t *)&v1102->__shared_owners_;
          do
            v661 = __ldxr(v660);
          while (__stxr(v661 + 1, v660));
          do
            v662 = __ldaxr(v660);
          while (__stlxr(v662 - 1, v660));
          if (!v662)
          {
            ((void (*)(std::__shared_weak_count *))v659->__on_zero_shared)(v659);
            std::__shared_weak_count::__release_weak(v659);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v658 + 88))(v658, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v657 = v1103;
      }
      if (v655 == 1)
        goto LABEL_1062;
      if ((_DWORD)v1094)
      {
        v663 = 0;
        do
        {
          if (!v657
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2043;
          }
          v664 = 0;
          v665 = *(_QWORD *)(v190 + 40);
          do
          {
            if (v665)
            {
              v666 = *(_QWORD **)(v190 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v190 + 32);
              sub_20AEC01D0(v666, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v190 + 24) + *(_QWORD *)(**(_QWORD **)(v190 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v665 = *(_QWORD *)(v190 + 40) + 1;
            *(_QWORD *)(v190 + 40) = v665;
            v664 += 4;
          }
          while (4 * v1094 != v664);
          v657 += 4 * v656;
          ++v663;
        }
        while (v663 != v655 - 1);
LABEL_1062:
        if ((_DWORD)v1094 && !v657)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2043:
            abort();
          }
          v657 = 0;
        }
      }
      else
      {
        v657 += (4 * (v655 - 2) + 4) * v656;
      }
      v1115 = v1094;
      v1116 = v657;
      sub_20B513208(v190, &v1115);
LABEL_1932:
      v1053 = v1114;
      v1114 = 0;
      if (v1053)
        (*(void (**)(uint64_t))(*(_QWORD *)v1053 + 8))(v1053);
      v484 = v1102;
      if (!v1102)
        return;
      v1054 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1054);
      while (__stlxr(v486 - 1, v1054));
      goto LABEL_2025;
    case 5:
      sub_20B372C90(a3, (uint64_t)&v1101);
      v278 = *a2;
      v279 = v1111;
      v280 = v1101;
      if (!v1101)
        goto LABEL_1250;
      v281 = v1102;
      if (v1102)
      {
        v282 = (unint64_t *)&v1102->__shared_owners_;
        do
          v283 = __ldxr(v282);
        while (__stxr(v283 + 1, v282));
        do
          v284 = __ldaxr(v282);
        while (__stlxr(v284 - 1, v282));
        if (!v284)
        {
          ((void (*)(std::__shared_weak_count *))v281->__on_zero_shared)(v281);
          std::__shared_weak_count::__release_weak(v281);
        }
        v280 = v1101;
        v285 = v1102;
        if (v1102)
        {
          v286 = (unint64_t *)&v1102->__shared_owners_;
          do
            v287 = __ldxr(v286);
          while (__stxr(v287 + 1, v286));
          do
            v288 = __ldaxr(v286);
          while (__stlxr(v288 - 1, v286));
          if (!v288)
          {
            ((void (*)(std::__shared_weak_count *))v285->__on_zero_shared)(v285);
            std::__shared_weak_count::__release_weak(v285);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v280 + 96))(&v1115, v280, 0);
      else
LABEL_1250:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1277;
      if (!v1105)
        goto LABEL_1277;
      v757 = v1106;
      if (!v1106)
        goto LABEL_1277;
      v758 = v1110;
      v759 = v1103;
      if (v1112 && v1103)
      {
        v760 = v1101;
        v761 = v1102;
        if (v1102)
        {
          v762 = (unint64_t *)&v1102->__shared_owners_;
          do
            v763 = __ldxr(v762);
          while (__stxr(v763 + 1, v762));
          do
            v764 = __ldaxr(v762);
          while (__stlxr(v764 - 1, v762));
          if (!v764)
          {
            ((void (*)(std::__shared_weak_count *))v761->__on_zero_shared)(v761);
            std::__shared_weak_count::__release_weak(v761);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v760 + 88))(v760, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v759 = v1103;
      }
      v765 = (2 * v279);
      if (v757 == 1)
        goto LABEL_1271;
      if (!(_DWORD)v765)
        goto LABEL_1277;
      v766 = 0;
      do
      {
        if (!v759
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2031;
        }
        for (j = 0; j != v765; ++j)
          sub_20B512EB0(v278, &v759[j]);
        v759 += v758;
        ++v766;
      }
      while (v766 != v757 - 1);
LABEL_1271:
      if ((_DWORD)v765 && !v759)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2031:
          abort();
        }
        v759 = 0;
      }
      if ((_DWORD)v765)
      {
        do
        {
          sub_20B512EB0(v278, v759++);
          --v765;
        }
        while (v765);
      }
LABEL_1277:
      v768 = v1115;
      v1115 = 0;
      if (v768)
        (*(void (**)(uint64_t))(*(_QWORD *)v768 + 8))(v768);
      v484 = v1102;
      if (!v1102)
        return;
      v769 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v769);
      while (__stlxr(v486 - 1, v769));
      goto LABEL_2025;
    case 6:
      sub_20B3732C4(a3, (uint64_t)&v1101);
      v179 = *a2;
      v180 = v1111;
      v181 = v1101;
      if (!v1101)
        goto LABEL_1013;
      v182 = v1102;
      if (v1102)
      {
        v183 = (unint64_t *)&v1102->__shared_owners_;
        do
          v184 = __ldxr(v183);
        while (__stxr(v184 + 1, v183));
        do
          v185 = __ldaxr(v183);
        while (__stlxr(v185 - 1, v183));
        if (!v185)
        {
          ((void (*)(std::__shared_weak_count *))v182->__on_zero_shared)(v182);
          std::__shared_weak_count::__release_weak(v182);
        }
        v181 = v1101;
        v186 = v1102;
        if (v1102)
        {
          v187 = (unint64_t *)&v1102->__shared_owners_;
          do
            v188 = __ldxr(v187);
          while (__stxr(v188 + 1, v187));
          do
            v189 = __ldaxr(v187);
          while (__stlxr(v189 - 1, v187));
          if (!v189)
          {
            ((void (*)(std::__shared_weak_count *))v186->__on_zero_shared)(v186);
            std::__shared_weak_count::__release_weak(v186);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v181 + 96))(&v1114, v181, 0);
      else
LABEL_1013:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1924;
      if (!v1105)
        goto LABEL_1924;
      v642 = v1106;
      if (!v1106)
        goto LABEL_1924;
      v643 = v1110;
      v644 = v1103;
      if (v1112 && v1103)
      {
        v645 = v1101;
        v646 = v1102;
        if (v1102)
        {
          v647 = (unint64_t *)&v1102->__shared_owners_;
          do
            v648 = __ldxr(v647);
          while (__stxr(v648 + 1, v647));
          do
            v649 = __ldaxr(v647);
          while (__stlxr(v649 - 1, v647));
          if (!v649)
          {
            ((void (*)(std::__shared_weak_count *))v646->__on_zero_shared)(v646);
            std::__shared_weak_count::__release_weak(v646);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v645 + 88))(v645, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v644 = v1103;
      }
      v650 = (2 * v180);
      if (v642 == 1)
        goto LABEL_1036;
      if ((_DWORD)v650)
      {
        v651 = 0;
        do
        {
          if (!v644
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2042;
          }
          v652 = 0;
          v653 = *(_QWORD *)(v179 + 40);
          do
          {
            if (v653)
            {
              v654 = *(_QWORD **)(v179 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v179 + 32);
              sub_20AEC01D0(v654, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v653 = *(_QWORD *)(v179 + 40) + 1;
            *(_QWORD *)(v179 + 40) = v653;
            v652 += 2;
          }
          while (2 * v650 != v652);
          v644 += 2 * v643;
          ++v651;
        }
        while (v651 != v642 - 1);
LABEL_1036:
        if ((_DWORD)v650 && !v644)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2042:
            abort();
          }
          v644 = 0;
        }
      }
      else
      {
        v644 += (2 * (v642 - 2) + 2) * v643;
      }
      v1115 = (2 * v180);
      v1116 = v644;
      sub_20B513184(v179, &v1115);
LABEL_1924:
      v1051 = v1114;
      v1114 = 0;
      if (v1051)
        (*(void (**)(uint64_t))(*(_QWORD *)v1051 + 8))(v1051);
      v484 = v1102;
      if (!v1102)
        return;
      v1052 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1052);
      while (__stlxr(v486 - 1, v1052));
      goto LABEL_2025;
    case 7:
      sub_20B3738FC(a3, (uint64_t)&v1101);
      v124 = *a2;
      v125 = v1111;
      v126 = v1101;
      if (!v1101)
        goto LABEL_881;
      v127 = v1102;
      if (v1102)
      {
        v128 = (unint64_t *)&v1102->__shared_owners_;
        do
          v129 = __ldxr(v128);
        while (__stxr(v129 + 1, v128));
        do
          v130 = __ldaxr(v128);
        while (__stlxr(v130 - 1, v128));
        if (!v130)
        {
          ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
          std::__shared_weak_count::__release_weak(v127);
        }
        v126 = v1101;
        v131 = v1102;
        if (v1102)
        {
          v132 = (unint64_t *)&v1102->__shared_owners_;
          do
            v133 = __ldxr(v132);
          while (__stxr(v133 + 1, v132));
          do
            v134 = __ldaxr(v132);
          while (__stlxr(v134 - 1, v132));
          if (!v134)
          {
            ((void (*)(std::__shared_weak_count *))v131->__on_zero_shared)(v131);
            std::__shared_weak_count::__release_weak(v131);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v126 + 96))(&v1115, v126, 0);
      else
LABEL_881:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1714;
      if (!v1105)
        goto LABEL_1714;
      v575 = v1106;
      if (!v1106)
        goto LABEL_1714;
      v576 = v1110;
      v577 = v1103;
      if (v1112 && v1103)
      {
        v578 = v1101;
        v579 = v1102;
        if (v1102)
        {
          v580 = (unint64_t *)&v1102->__shared_owners_;
          do
            v581 = __ldxr(v580);
          while (__stxr(v581 + 1, v580));
          do
            v582 = __ldaxr(v580);
          while (__stlxr(v582 - 1, v580));
          if (!v582)
          {
            ((void (*)(std::__shared_weak_count *))v579->__on_zero_shared)(v579);
            std::__shared_weak_count::__release_weak(v579);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v578 + 88))(v578, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v577 = v1103;
      }
      v1091 = (2 * v125);
      if (v575 == 1)
        goto LABEL_904;
      if (!(2 * v125))
        goto LABEL_1714;
      v583 = 0;
      do
      {
        if (!v577
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_907;
        }
        v584 = 0;
        v585 = *(_QWORD *)(v124 + 40);
        do
        {
          if (v585)
          {
            v586 = *(_QWORD **)(v124 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v124 + 32);
            sub_20AEC01D0(v586, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v124 + 24) + *(_QWORD *)(**(_QWORD **)(v124 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v577[v584];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v585 = *(_QWORD *)(v124 + 40) + 1;
          *(_QWORD *)(v124 + 40) = v585;
          v584 += 2;
        }
        while (2 * v1091 != v584);
        v577 += 2 * v576;
        ++v583;
      }
      while (v583 != v575 - 1);
LABEL_904:
      if (!(_DWORD)v1091 || v577)
      {
        if (!(_DWORD)v1091)
          goto LABEL_1714;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_907:
        abort();
      }
      v975 = *(_QWORD *)(v124 + 40);
      v976 = 2 * v1091;
      do
      {
        if (v975)
        {
          v977 = *(_QWORD **)(v124 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v124 + 32);
          sub_20AEC01D0(v977, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v124 + 24) + *(_QWORD *)(**(_QWORD **)(v124 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v577;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v975 = *(_QWORD *)(v124 + 40) + 1;
        *(_QWORD *)(v124 + 40) = v975;
        v577 += 2;
        v976 -= 2;
      }
      while (v976);
LABEL_1714:
      v980 = v1115;
      v1115 = 0;
      if (v980)
        (*(void (**)(uint64_t))(*(_QWORD *)v980 + 8))(v980);
      v484 = v1102;
      if (!v1102)
        return;
      v981 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v981);
      while (__stlxr(v486 - 1, v981));
      goto LABEL_2025;
    case 8:
      sub_20B373F34(a3, (uint64_t)&v1101);
      v300 = *a2;
      v301 = v1111;
      v302 = v1101;
      if (!v1101)
        goto LABEL_1310;
      v303 = v1102;
      if (v1102)
      {
        v304 = (unint64_t *)&v1102->__shared_owners_;
        do
          v305 = __ldxr(v304);
        while (__stxr(v305 + 1, v304));
        do
          v306 = __ldaxr(v304);
        while (__stlxr(v306 - 1, v304));
        if (!v306)
        {
          ((void (*)(std::__shared_weak_count *))v303->__on_zero_shared)(v303);
          std::__shared_weak_count::__release_weak(v303);
        }
        v302 = v1101;
        v307 = v1102;
        if (v1102)
        {
          v308 = (unint64_t *)&v1102->__shared_owners_;
          do
            v309 = __ldxr(v308);
          while (__stxr(v309 + 1, v308));
          do
            v310 = __ldaxr(v308);
          while (__stlxr(v310 - 1, v308));
          if (!v310)
          {
            ((void (*)(std::__shared_weak_count *))v307->__on_zero_shared)(v307);
            std::__shared_weak_count::__release_weak(v307);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v302 + 96))(&v1114, v302, 0);
      else
LABEL_1310:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1988;
      if (!v1105)
        goto LABEL_1988;
      v783 = v1106;
      if (!v1106)
        goto LABEL_1988;
      v784 = v1110;
      v785 = v1103;
      if (v1112 && v1103)
      {
        v786 = v1101;
        v787 = v1102;
        if (v1102)
        {
          v788 = (unint64_t *)&v1102->__shared_owners_;
          do
            v789 = __ldxr(v788);
          while (__stxr(v789 + 1, v788));
          do
            v790 = __ldaxr(v788);
          while (__stlxr(v790 - 1, v788));
          if (!v790)
          {
            ((void (*)(std::__shared_weak_count *))v787->__on_zero_shared)(v787);
            std::__shared_weak_count::__release_weak(v787);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v786 + 88))(v786, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v785 = v1103;
      }
      v791 = (2 * v301);
      if (v783 == 1)
        goto LABEL_1333;
      if ((_DWORD)v791)
      {
        v792 = 0;
        do
        {
          if (!v785
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2053;
          }
          v793 = 0;
          v794 = *(_QWORD *)(v300 + 40);
          do
          {
            if (v794)
            {
              v795 = *(_QWORD **)(v300 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v300 + 32);
              sub_20AEC01D0(v795, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v300 + 24) + *(_QWORD *)(**(_QWORD **)(v300 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v794 = *(_QWORD *)(v300 + 40) + 1;
            *(_QWORD *)(v300 + 40) = v794;
            v793 += 4;
          }
          while (4 * v791 != v793);
          v785 += 4 * v784;
          ++v792;
        }
        while (v792 != v783 - 1);
LABEL_1333:
        if ((_DWORD)v791 && !v785)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2053:
            abort();
          }
          v785 = 0;
        }
      }
      else
      {
        v785 += (4 * (v783 - 2) + 4) * v784;
      }
      v1115 = v791;
      v1116 = v785;
      sub_20B513208(v300, &v1115);
LABEL_1988:
      v1067 = v1114;
      v1114 = 0;
      if (v1067)
        (*(void (**)(uint64_t))(*(_QWORD *)v1067 + 8))(v1067);
      v484 = v1102;
      if (!v1102)
        return;
      v1068 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1068);
      while (__stlxr(v486 - 1, v1068));
      goto LABEL_2025;
    case 9:
      sub_20B37456C(a3, (uint64_t)&v1101);
      v267 = *a2;
      v268 = v1111;
      v269 = v1101;
      if (!v1101)
        goto LABEL_1228;
      v270 = v1102;
      if (v1102)
      {
        v271 = (unint64_t *)&v1102->__shared_owners_;
        do
          v272 = __ldxr(v271);
        while (__stxr(v272 + 1, v271));
        do
          v273 = __ldaxr(v271);
        while (__stlxr(v273 - 1, v271));
        if (!v273)
        {
          ((void (*)(std::__shared_weak_count *))v270->__on_zero_shared)(v270);
          std::__shared_weak_count::__release_weak(v270);
        }
        v269 = v1101;
        v274 = v1102;
        if (v1102)
        {
          v275 = (unint64_t *)&v1102->__shared_owners_;
          do
            v276 = __ldxr(v275);
          while (__stxr(v276 + 1, v275));
          do
            v277 = __ldaxr(v275);
          while (__stlxr(v277 - 1, v275));
          if (!v277)
          {
            ((void (*)(std::__shared_weak_count *))v274->__on_zero_shared)(v274);
            std::__shared_weak_count::__release_weak(v274);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v269 + 96))(&v1115, v269, 0);
      else
LABEL_1228:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1824;
      if (!v1105)
        goto LABEL_1824;
      v746 = v1106;
      if (!v1106)
        goto LABEL_1824;
      v747 = v1110;
      v748 = v1103;
      if (v1112 && v1103)
      {
        v749 = v1101;
        v750 = v1102;
        if (v1102)
        {
          v751 = (unint64_t *)&v1102->__shared_owners_;
          do
            v752 = __ldxr(v751);
          while (__stxr(v752 + 1, v751));
          do
            v753 = __ldaxr(v751);
          while (__stlxr(v753 - 1, v751));
          if (!v753)
          {
            ((void (*)(std::__shared_weak_count *))v750->__on_zero_shared)(v750);
            std::__shared_weak_count::__release_weak(v750);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v749 + 88))(v749, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v748 = v1103;
      }
      v754 = (3 * v268);
      if (v746 == 1)
      {
        v1096 = v268;
LABEL_1818:
        if (v1096 && !v748)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2033;
          }
          v748 = 0;
        }
        if (v1096)
        {
          do
          {
            sub_20B512EB0(v267, v748++);
            --v754;
          }
          while (v754);
        }
      }
      else if (v268)
      {
        v1096 = v268;
        v755 = 0;
        while (v748
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v756 = 0;
          do
            sub_20B512EB0(v267, &v748[v756++]);
          while (v754 != v756);
          v748 += v747;
          if (++v755 == v746 - 1)
            goto LABEL_1818;
        }
LABEL_2033:
        abort();
      }
LABEL_1824:
      v1031 = v1115;
      v1115 = 0;
      if (v1031)
        (*(void (**)(uint64_t))(*(_QWORD *)v1031 + 8))(v1031);
      v484 = v1102;
      if (!v1102)
        return;
      v1032 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1032);
      while (__stlxr(v486 - 1, v1032));
      goto LABEL_2025;
    case 10:
      sub_20B374BA0(a3, (uint64_t)&v1101);
      v353 = *a2;
      v354 = v1111;
      v355 = v1101;
      if (!v1101)
        goto LABEL_1481;
      v356 = v1102;
      if (v1102)
      {
        v357 = (unint64_t *)&v1102->__shared_owners_;
        do
          v358 = __ldxr(v357);
        while (__stxr(v358 + 1, v357));
        do
          v359 = __ldaxr(v357);
        while (__stlxr(v359 - 1, v357));
        if (!v359)
        {
          ((void (*)(std::__shared_weak_count *))v356->__on_zero_shared)(v356);
          std::__shared_weak_count::__release_weak(v356);
        }
        v355 = v1101;
        v360 = v1102;
        if (v1102)
        {
          v361 = (unint64_t *)&v1102->__shared_owners_;
          do
            v362 = __ldxr(v361);
          while (__stxr(v362 + 1, v361));
          do
            v363 = __ldaxr(v361);
          while (__stlxr(v363 - 1, v361));
          if (!v363)
          {
            ((void (*)(std::__shared_weak_count *))v360->__on_zero_shared)(v360);
            std::__shared_weak_count::__release_weak(v360);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v355 + 96))(&v1114, v355, 0);
      else
LABEL_1481:
        v1114 = 0;
      if (!v1104)
        goto LABEL_2004;
      if (!v1105)
        goto LABEL_2004;
      v861 = v1106;
      if (!v1106)
        goto LABEL_2004;
      v862 = v1110;
      v863 = v1103;
      if (v1112 && v1103)
      {
        v864 = v1101;
        v865 = v1102;
        if (v1102)
        {
          v866 = (unint64_t *)&v1102->__shared_owners_;
          do
            v867 = __ldxr(v866);
          while (__stxr(v867 + 1, v866));
          do
            v868 = __ldaxr(v866);
          while (__stlxr(v868 - 1, v866));
          if (!v868)
          {
            ((void (*)(std::__shared_weak_count *))v865->__on_zero_shared)(v865);
            std::__shared_weak_count::__release_weak(v865);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v864 + 88))(v864, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v863 = v1103;
      }
      if (v861 == 1)
      {
        v1083 = v354;
LABEL_1831:
        if (v1083 && !v863)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2055;
          }
          v863 = 0;
        }
      }
      else
      {
        if (v354)
        {
          v1083 = v354;
          v869 = 0;
          while (v863
               || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v870 = 0;
            v871 = *(_QWORD *)(v353 + 40);
            do
            {
              if (v871)
              {
                v872 = *(_QWORD **)(v353 + 24);
                LOBYTE(v1115) = *(_BYTE *)(v353 + 32);
                sub_20AEC01D0(v872, (uint64_t)&v1115, 1);
              }
              std::ostream::operator<<();
              v871 = *(_QWORD *)(v353 + 40) + 1;
              *(_QWORD *)(v353 + 40) = v871;
              v870 += 2;
            }
            while (2 * (3 * v354) != v870);
            v863 += 2 * v862;
            if (++v869 == v861 - 1)
              goto LABEL_1831;
          }
LABEL_2055:
          abort();
        }
        v863 += (2 * (v861 - 2) + 2) * v862;
      }
      v1115 = (3 * v354);
      v1116 = v863;
      sub_20B513184(v353, &v1115);
LABEL_2004:
      v1071 = v1114;
      v1114 = 0;
      if (v1071)
        (*(void (**)(uint64_t))(*(_QWORD *)v1071 + 8))(v1071);
      v484 = v1102;
      if (!v1102)
        return;
      v1072 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1072);
      while (__stlxr(v486 - 1, v1072));
      goto LABEL_2025;
    case 11:
      sub_20B3751D8(a3, (uint64_t)&v1101);
      v343 = *a2;
      v1088 = v1111;
      v344 = v1101;
      if (!v1101)
        goto LABEL_1454;
      v345 = v1102;
      if (v1102)
      {
        v346 = (unint64_t *)&v1102->__shared_owners_;
        do
          v347 = __ldxr(v346);
        while (__stxr(v347 + 1, v346));
        do
          v348 = __ldaxr(v346);
        while (__stlxr(v348 - 1, v346));
        if (!v348)
        {
          ((void (*)(std::__shared_weak_count *))v345->__on_zero_shared)(v345);
          std::__shared_weak_count::__release_weak(v345);
        }
        v344 = v1101;
        v349 = v1102;
        if (v1102)
        {
          v350 = (unint64_t *)&v1102->__shared_owners_;
          do
            v351 = __ldxr(v350);
          while (__stxr(v351 + 1, v350));
          do
            v352 = __ldaxr(v350);
          while (__stlxr(v352 - 1, v350));
          if (!v352)
          {
            ((void (*)(std::__shared_weak_count *))v349->__on_zero_shared)(v349);
            std::__shared_weak_count::__release_weak(v349);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v344 + 96))(&v1115, v344, 0);
      else
LABEL_1454:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1769;
      if (!v1105)
        goto LABEL_1769;
      v847 = v1106;
      if (!v1106)
        goto LABEL_1769;
      v848 = v1110;
      v849 = v1103;
      if (v1112 && v1103)
      {
        v850 = v1101;
        v851 = v1102;
        if (v1102)
        {
          v852 = (unint64_t *)&v1102->__shared_owners_;
          do
            v853 = __ldxr(v852);
          while (__stxr(v853 + 1, v852));
          do
            v854 = __ldaxr(v852);
          while (__stlxr(v854 - 1, v852));
          if (!v854)
          {
            ((void (*)(std::__shared_weak_count *))v851->__on_zero_shared)(v851);
            std::__shared_weak_count::__release_weak(v851);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v850 + 88))(v850, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v849 = v1103;
      }
      v1082 = (3 * v1088);
      if (v847 == 1)
        goto LABEL_1477;
      if (!v1088)
        goto LABEL_1769;
      v855 = 0;
      do
      {
        if (!v849
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1480;
        }
        v856 = 0;
        v857 = *(_QWORD *)(v343 + 40);
        do
        {
          if (v857)
          {
            v858 = *(_QWORD **)(v343 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v343 + 32);
            sub_20AEC01D0(v858, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v343 + 24) + *(_QWORD *)(**(_QWORD **)(v343 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v849[v856];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v857 = *(_QWORD *)(v343 + 40) + 1;
          *(_QWORD *)(v343 + 40) = v857;
          v856 += 2;
        }
        while (2 * v1082 != v856);
        v849 += 2 * v848;
        ++v855;
      }
      while (v855 != v847 - 1);
LABEL_1477:
      if (!v1088 || v849)
      {
        if (!v1088)
          goto LABEL_1769;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1480:
        abort();
      }
      v1010 = *(_QWORD *)(v343 + 40);
      v1011 = 2 * v1082;
      do
      {
        if (v1010)
        {
          v1012 = *(_QWORD **)(v343 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v343 + 32);
          sub_20AEC01D0(v1012, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v343 + 24) + *(_QWORD *)(**(_QWORD **)(v343 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v849;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v1010 = *(_QWORD *)(v343 + 40) + 1;
        *(_QWORD *)(v343 + 40) = v1010;
        v849 += 2;
        v1011 -= 2;
      }
      while (v1011);
LABEL_1769:
      v1015 = v1115;
      v1115 = 0;
      if (v1015)
        (*(void (**)(uint64_t))(*(_QWORD *)v1015 + 8))(v1015);
      v484 = v1102;
      if (!v1102)
        return;
      v1016 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1016);
      while (__stlxr(v486 - 1, v1016));
      goto LABEL_2025;
    case 12:
      sub_20B375810(a3, (uint64_t)&v1101);
      v47 = *a2;
      v48 = v1111;
      v49 = v1101;
      if (!v1101)
        goto LABEL_689;
      v50 = v1102;
      if (v1102)
      {
        v51 = (unint64_t *)&v1102->__shared_owners_;
        do
          v52 = __ldxr(v51);
        while (__stxr(v52 + 1, v51));
        do
          v53 = __ldaxr(v51);
        while (__stlxr(v53 - 1, v51));
        if (!v53)
        {
          ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
          std::__shared_weak_count::__release_weak(v50);
        }
        v49 = v1101;
        v54 = v1102;
        if (v1102)
        {
          v55 = (unint64_t *)&v1102->__shared_owners_;
          do
            v56 = __ldxr(v55);
          while (__stxr(v56 + 1, v55));
          do
            v57 = __ldaxr(v55);
          while (__stlxr(v57 - 1, v55));
          if (!v57)
          {
            ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
            std::__shared_weak_count::__release_weak(v54);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v49 + 96))(&v1114, v49, 0);
      else
LABEL_689:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1868;
      if (!v1105)
        goto LABEL_1868;
      v487 = v1106;
      if (!v1106)
        goto LABEL_1868;
      v488 = v1110;
      v489 = v1103;
      if (v1112 && v1103)
      {
        v490 = v1101;
        v491 = v1102;
        if (v1102)
        {
          v492 = (unint64_t *)&v1102->__shared_owners_;
          do
            v493 = __ldxr(v492);
          while (__stxr(v493 + 1, v492));
          do
            v494 = __ldaxr(v492);
          while (__stlxr(v494 - 1, v492));
          if (!v494)
          {
            ((void (*)(std::__shared_weak_count *))v491->__on_zero_shared)(v491);
            std::__shared_weak_count::__release_weak(v491);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v490 + 88))(v490, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v489 = v1103;
      }
      if (v487 == 1)
      {
        v1078 = v48;
LABEL_1798:
        if (v1078 && !v489)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2038;
          }
          v489 = 0;
        }
      }
      else
      {
        if (v48)
        {
          v1078 = v48;
          v495 = 0;
          while (v489
               || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v496 = 0;
            v497 = *(_QWORD *)(v47 + 40);
            do
            {
              if (v497)
              {
                v498 = *(_QWORD **)(v47 + 24);
                LOBYTE(v1115) = *(_BYTE *)(v47 + 32);
                sub_20AEC01D0(v498, (uint64_t)&v1115, 1);
              }
              *(_QWORD *)(*(_QWORD *)(v47 + 24) + *(_QWORD *)(**(_QWORD **)(v47 + 24) - 24) + 16) = 9;
              std::ostream::operator<<();
              v497 = *(_QWORD *)(v47 + 40) + 1;
              *(_QWORD *)(v47 + 40) = v497;
              v496 += 4;
            }
            while (4 * (3 * v48) != v496);
            v489 += 4 * v488;
            if (++v495 == v487 - 1)
              goto LABEL_1798;
          }
LABEL_2038:
          abort();
        }
        v489 += (4 * (v487 - 2) + 4) * v488;
      }
      v1115 = (3 * v48);
      v1116 = v489;
      sub_20B513208(v47, &v1115);
LABEL_1868:
      v1037 = v1114;
      v1114 = 0;
      if (v1037)
        (*(void (**)(uint64_t))(*(_QWORD *)v1037 + 8))(v1037);
      v484 = v1102;
      if (!v1102)
        return;
      v1038 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1038);
      while (__stlxr(v486 - 1, v1038));
      goto LABEL_2025;
    case 13:
      sub_20B375E48(a3, (uint64_t)&v1101);
      v91 = *a2;
      v92 = v1111;
      v93 = v1101;
      if (!v1101)
        goto LABEL_797;
      v94 = v1102;
      if (v1102)
      {
        v95 = (unint64_t *)&v1102->__shared_owners_;
        do
          v96 = __ldxr(v95);
        while (__stxr(v96 + 1, v95));
        do
          v97 = __ldaxr(v95);
        while (__stlxr(v97 - 1, v95));
        if (!v97)
        {
          ((void (*)(std::__shared_weak_count *))v94->__on_zero_shared)(v94);
          std::__shared_weak_count::__release_weak(v94);
        }
        v93 = v1101;
        v98 = v1102;
        if (v1102)
        {
          v99 = (unint64_t *)&v1102->__shared_owners_;
          do
            v100 = __ldxr(v99);
          while (__stxr(v100 + 1, v99));
          do
            v101 = __ldaxr(v99);
          while (__stlxr(v101 - 1, v99));
          if (!v101)
          {
            ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
            std::__shared_weak_count::__release_weak(v98);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v93 + 96))(&v1115, v93, 0);
      else
LABEL_797:
        v1115 = 0;
      if (!v1104)
        goto LABEL_824;
      if (!v1105)
        goto LABEL_824;
      v537 = v1106;
      if (!v1106)
        goto LABEL_824;
      v538 = v1110;
      v539 = v1103;
      if (v1112 && v1103)
      {
        v540 = v1101;
        v541 = v1102;
        if (v1102)
        {
          v542 = (unint64_t *)&v1102->__shared_owners_;
          do
            v543 = __ldxr(v542);
          while (__stxr(v543 + 1, v542));
          do
            v544 = __ldaxr(v542);
          while (__stlxr(v544 - 1, v542));
          if (!v544)
          {
            ((void (*)(std::__shared_weak_count *))v541->__on_zero_shared)(v541);
            std::__shared_weak_count::__release_weak(v541);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v540 + 88))(v540, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v539 = v1103;
      }
      v545 = (4 * v92);
      if (v537 == 1)
        goto LABEL_818;
      if (!(_DWORD)v545)
        goto LABEL_824;
      v546 = 0;
      do
      {
        if (!v539
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2030;
        }
        for (k = 0; k != v545; ++k)
          sub_20B512EB0(v91, &v539[k]);
        v539 += v538;
        ++v546;
      }
      while (v546 != v537 - 1);
LABEL_818:
      if ((_DWORD)v545 && !v539)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2030:
          abort();
        }
        v539 = 0;
      }
      if ((_DWORD)v545)
      {
        do
        {
          sub_20B512EB0(v91, v539++);
          --v545;
        }
        while (v545);
      }
LABEL_824:
      v548 = v1115;
      v1115 = 0;
      if (v548)
        (*(void (**)(uint64_t))(*(_QWORD *)v548 + 8))(v548);
      v484 = v1102;
      if (!v1102)
        return;
      v549 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v549);
      while (__stlxr(v486 - 1, v549));
      goto LABEL_2025;
    case 14:
      sub_20B37647C(a3, (uint64_t)&v1101);
      v80 = *a2;
      v81 = v1111;
      v82 = v1101;
      if (!v1101)
        goto LABEL_770;
      v83 = v1102;
      if (v1102)
      {
        v84 = (unint64_t *)&v1102->__shared_owners_;
        do
          v85 = __ldxr(v84);
        while (__stxr(v85 + 1, v84));
        do
          v86 = __ldaxr(v84);
        while (__stlxr(v86 - 1, v84));
        if (!v86)
        {
          ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
          std::__shared_weak_count::__release_weak(v83);
        }
        v82 = v1101;
        v87 = v1102;
        if (v1102)
        {
          v88 = (unint64_t *)&v1102->__shared_owners_;
          do
            v89 = __ldxr(v88);
          while (__stxr(v89 + 1, v88));
          do
            v90 = __ldaxr(v88);
          while (__stlxr(v90 - 1, v88));
          if (!v90)
          {
            ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
            std::__shared_weak_count::__release_weak(v87);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v82 + 96))(&v1114, v82, 0);
      else
LABEL_770:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1884;
      if (!v1105)
        goto LABEL_1884;
      v524 = v1106;
      if (!v1106)
        goto LABEL_1884;
      v525 = v1110;
      v526 = v1103;
      if (v1112 && v1103)
      {
        v527 = v1101;
        v528 = v1102;
        if (v1102)
        {
          v529 = (unint64_t *)&v1102->__shared_owners_;
          do
            v530 = __ldxr(v529);
          while (__stxr(v530 + 1, v529));
          do
            v531 = __ldaxr(v529);
          while (__stlxr(v531 - 1, v529));
          if (!v531)
          {
            ((void (*)(std::__shared_weak_count *))v528->__on_zero_shared)(v528);
            std::__shared_weak_count::__release_weak(v528);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v527 + 88))(v527, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v526 = v1103;
      }
      v532 = (4 * v81);
      if (v524 == 1)
        goto LABEL_793;
      if ((_DWORD)v532)
      {
        v533 = 0;
        do
        {
          if (!v526
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2039;
          }
          v534 = 0;
          v535 = *(_QWORD *)(v80 + 40);
          do
          {
            if (v535)
            {
              v536 = *(_QWORD **)(v80 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v80 + 32);
              sub_20AEC01D0(v536, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v535 = *(_QWORD *)(v80 + 40) + 1;
            *(_QWORD *)(v80 + 40) = v535;
            v534 += 2;
          }
          while (2 * v532 != v534);
          v526 += 2 * v525;
          ++v533;
        }
        while (v533 != v524 - 1);
LABEL_793:
        if ((_DWORD)v532 && !v526)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2039:
            abort();
          }
          v526 = 0;
        }
      }
      else
      {
        v526 += (2 * (v524 - 2) + 2) * v525;
      }
      v1115 = (4 * v81);
      v1116 = v526;
      sub_20B513184(v80, &v1115);
LABEL_1884:
      v1041 = v1114;
      v1114 = 0;
      if (v1041)
        (*(void (**)(uint64_t))(*(_QWORD *)v1041 + 8))(v1041);
      v484 = v1102;
      if (!v1102)
        return;
      v1042 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1042);
      while (__stlxr(v486 - 1, v1042));
      goto LABEL_2025;
    case 15:
      sub_20B376AB4(a3, (uint64_t)&v1101);
      v397 = *a2;
      v398 = v1111;
      v399 = v1101;
      if (!v1101)
        goto LABEL_1589;
      v400 = v1102;
      if (v1102)
      {
        v401 = (unint64_t *)&v1102->__shared_owners_;
        do
          v402 = __ldxr(v401);
        while (__stxr(v402 + 1, v401));
        do
          v403 = __ldaxr(v401);
        while (__stlxr(v403 - 1, v401));
        if (!v403)
        {
          ((void (*)(std::__shared_weak_count *))v400->__on_zero_shared)(v400);
          std::__shared_weak_count::__release_weak(v400);
        }
        v399 = v1101;
        v404 = v1102;
        if (v1102)
        {
          v405 = (unint64_t *)&v1102->__shared_owners_;
          do
            v406 = __ldxr(v405);
          while (__stxr(v406 + 1, v405));
          do
            v407 = __ldaxr(v405);
          while (__stlxr(v407 - 1, v405));
          if (!v407)
          {
            ((void (*)(std::__shared_weak_count *))v404->__on_zero_shared)(v404);
            std::__shared_weak_count::__release_weak(v404);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v399 + 96))(&v1115, v399, 0);
      else
LABEL_1589:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1780;
      if (!v1105)
        goto LABEL_1780;
      v911 = v1106;
      if (!v1106)
        goto LABEL_1780;
      v912 = v1110;
      v913 = v1103;
      if (v1112 && v1103)
      {
        v914 = v1101;
        v915 = v1102;
        if (v1102)
        {
          v916 = (unint64_t *)&v1102->__shared_owners_;
          do
            v917 = __ldxr(v916);
          while (__stxr(v917 + 1, v916));
          do
            v918 = __ldaxr(v916);
          while (__stlxr(v918 - 1, v916));
          if (!v918)
          {
            ((void (*)(std::__shared_weak_count *))v915->__on_zero_shared)(v915);
            std::__shared_weak_count::__release_weak(v915);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v914 + 88))(v914, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v913 = v1103;
      }
      v1098 = (4 * v398);
      if (v911 == 1)
        goto LABEL_1612;
      if (!(4 * v398))
        goto LABEL_1780;
      v919 = 0;
      do
      {
        if (!v913
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1615;
        }
        v920 = 0;
        v921 = *(_QWORD *)(v397 + 40);
        do
        {
          if (v921)
          {
            v922 = *(_QWORD **)(v397 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v397 + 32);
            sub_20AEC01D0(v922, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v397 + 24) + *(_QWORD *)(**(_QWORD **)(v397 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v913[v920];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v921 = *(_QWORD *)(v397 + 40) + 1;
          *(_QWORD *)(v397 + 40) = v921;
          v920 += 2;
        }
        while (2 * v1098 != v920);
        v913 += 2 * v912;
        ++v919;
      }
      while (v919 != v911 - 1);
LABEL_1612:
      if (!(_DWORD)v1098 || v913)
      {
        if (!(_DWORD)v1098)
          goto LABEL_1780;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1615:
        abort();
      }
      v1017 = *(_QWORD *)(v397 + 40);
      v1018 = 2 * v1098;
      do
      {
        if (v1017)
        {
          v1019 = *(_QWORD **)(v397 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v397 + 32);
          sub_20AEC01D0(v1019, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v397 + 24) + *(_QWORD *)(**(_QWORD **)(v397 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v913;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v1017 = *(_QWORD *)(v397 + 40) + 1;
        *(_QWORD *)(v397 + 40) = v1017;
        v913 += 2;
        v1018 -= 2;
      }
      while (v1018);
LABEL_1780:
      v1022 = v1115;
      v1115 = 0;
      if (v1022)
        (*(void (**)(uint64_t))(*(_QWORD *)v1022 + 8))(v1022);
      v484 = v1102;
      if (!v1102)
        return;
      v1023 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1023);
      while (__stlxr(v486 - 1, v1023));
      goto LABEL_2025;
    case 16:
      sub_20B3770EC(a3, (uint64_t)&v1101);
      v289 = *a2;
      v290 = v1111;
      v291 = v1101;
      if (!v1101)
        goto LABEL_1283;
      v292 = v1102;
      if (v1102)
      {
        v293 = (unint64_t *)&v1102->__shared_owners_;
        do
          v294 = __ldxr(v293);
        while (__stxr(v294 + 1, v293));
        do
          v295 = __ldaxr(v293);
        while (__stlxr(v295 - 1, v293));
        if (!v295)
        {
          ((void (*)(std::__shared_weak_count *))v292->__on_zero_shared)(v292);
          std::__shared_weak_count::__release_weak(v292);
        }
        v291 = v1101;
        v296 = v1102;
        if (v1102)
        {
          v297 = (unint64_t *)&v1102->__shared_owners_;
          do
            v298 = __ldxr(v297);
          while (__stxr(v298 + 1, v297));
          do
            v299 = __ldaxr(v297);
          while (__stlxr(v299 - 1, v297));
          if (!v299)
          {
            ((void (*)(std::__shared_weak_count *))v296->__on_zero_shared)(v296);
            std::__shared_weak_count::__release_weak(v296);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v291 + 96))(&v1114, v291, 0);
      else
LABEL_1283:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1980;
      if (!v1105)
        goto LABEL_1980;
      v770 = v1106;
      if (!v1106)
        goto LABEL_1980;
      v771 = v1110;
      v772 = v1103;
      if (v1112 && v1103)
      {
        v773 = v1101;
        v774 = v1102;
        if (v1102)
        {
          v775 = (unint64_t *)&v1102->__shared_owners_;
          do
            v776 = __ldxr(v775);
          while (__stxr(v776 + 1, v775));
          do
            v777 = __ldaxr(v775);
          while (__stlxr(v777 - 1, v775));
          if (!v777)
          {
            ((void (*)(std::__shared_weak_count *))v774->__on_zero_shared)(v774);
            std::__shared_weak_count::__release_weak(v774);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v773 + 88))(v773, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v772 = v1103;
      }
      v778 = (4 * v290);
      if (v770 == 1)
        goto LABEL_1306;
      if ((_DWORD)v778)
      {
        v779 = 0;
        do
        {
          if (!v772
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2052;
          }
          v780 = 0;
          v781 = *(_QWORD *)(v289 + 40);
          do
          {
            if (v781)
            {
              v782 = *(_QWORD **)(v289 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v289 + 32);
              sub_20AEC01D0(v782, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v289 + 24) + *(_QWORD *)(**(_QWORD **)(v289 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v781 = *(_QWORD *)(v289 + 40) + 1;
            *(_QWORD *)(v289 + 40) = v781;
            v780 += 4;
          }
          while (4 * v778 != v780);
          v772 += 4 * v771;
          ++v779;
        }
        while (v779 != v770 - 1);
LABEL_1306:
        if ((_DWORD)v778 && !v772)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2052:
            abort();
          }
          v772 = 0;
        }
      }
      else
      {
        v772 += (4 * (v770 - 2) + 4) * v771;
      }
      v1115 = v778;
      v1116 = v772;
      sub_20B513208(v289, &v1115);
LABEL_1980:
      v1065 = v1114;
      v1114 = 0;
      if (v1065)
        (*(void (**)(uint64_t))(*(_QWORD *)v1065 + 8))(v1065);
      v484 = v1102;
      if (!v1102)
        return;
      v1066 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1066);
      while (__stlxr(v486 - 1, v1066));
      goto LABEL_2025;
    case 17:
      sub_20B377724(a3, (uint64_t)&v1101);
      v408 = *a2;
      v409 = v1111;
      v410 = v1101;
      if (!v1101)
        goto LABEL_1616;
      v411 = v1102;
      if (v1102)
      {
        v412 = (unint64_t *)&v1102->__shared_owners_;
        do
          v413 = __ldxr(v412);
        while (__stxr(v413 + 1, v412));
        do
          v414 = __ldaxr(v412);
        while (__stlxr(v414 - 1, v412));
        if (!v414)
        {
          ((void (*)(std::__shared_weak_count *))v411->__on_zero_shared)(v411);
          std::__shared_weak_count::__release_weak(v411);
        }
        v410 = v1101;
        v415 = v1102;
        if (v1102)
        {
          v416 = (unint64_t *)&v1102->__shared_owners_;
          do
            v417 = __ldxr(v416);
          while (__stxr(v417 + 1, v416));
          do
            v418 = __ldaxr(v416);
          while (__stlxr(v418 - 1, v416));
          if (!v418)
          {
            ((void (*)(std::__shared_weak_count *))v415->__on_zero_shared)(v415);
            std::__shared_weak_count::__release_weak(v415);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v410 + 96))(&v1115, v410, 0);
      else
LABEL_1616:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1847;
      if (!v1105)
        goto LABEL_1847;
      v925 = v1106;
      if (!v1106)
        goto LABEL_1847;
      v926 = v1110;
      v927 = v1103;
      if (v1112 && v1103)
      {
        v928 = v1101;
        v929 = v1102;
        if (v1102)
        {
          v930 = (unint64_t *)&v1102->__shared_owners_;
          do
            v931 = __ldxr(v930);
          while (__stxr(v931 + 1, v930));
          do
            v932 = __ldaxr(v930);
          while (__stlxr(v932 - 1, v930));
          if (!v932)
          {
            ((void (*)(std::__shared_weak_count *))v929->__on_zero_shared)(v929);
            std::__shared_weak_count::__release_weak(v929);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v928 + 88))(v928, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v927 = v1103;
      }
      v933 = (3 * v409);
      if (v925 == 1)
      {
        v1099 = v409;
LABEL_1841:
        if (v1099 && !v927)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2036;
          }
          v927 = 0;
        }
        if (v1099)
        {
          do
          {
            sub_20B512EB0(v408, v927++);
            --v933;
          }
          while (v933);
        }
      }
      else if (v409)
      {
        v1099 = v409;
        v934 = 0;
        while (v927
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v935 = 0;
          do
            sub_20B512EB0(v408, &v927[v935++]);
          while (v933 != v935);
          v927 += v926;
          if (++v934 == v925 - 1)
            goto LABEL_1841;
        }
LABEL_2036:
        abort();
      }
LABEL_1847:
      v1033 = v1115;
      v1115 = 0;
      if (v1033)
        (*(void (**)(uint64_t))(*(_QWORD *)v1033 + 8))(v1033);
      v484 = v1102;
      if (!v1102)
        return;
      v1034 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1034);
      while (__stlxr(v486 - 1, v1034));
      goto LABEL_2025;
    case 18:
      sub_20B377D58(a3, (uint64_t)&v1101);
      v113 = *a2;
      v114 = v1111;
      v115 = v1101;
      if (!v1101)
        goto LABEL_857;
      v116 = v1102;
      if (v1102)
      {
        v117 = (unint64_t *)&v1102->__shared_owners_;
        do
          v118 = __ldxr(v117);
        while (__stxr(v118 + 1, v117));
        do
          v119 = __ldaxr(v117);
        while (__stlxr(v119 - 1, v117));
        if (!v119)
        {
          ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
          std::__shared_weak_count::__release_weak(v116);
        }
        v115 = v1101;
        v120 = v1102;
        if (v1102)
        {
          v121 = (unint64_t *)&v1102->__shared_owners_;
          do
            v122 = __ldxr(v121);
          while (__stxr(v122 + 1, v121));
          do
            v123 = __ldaxr(v121);
          while (__stlxr(v123 - 1, v121));
          if (!v123)
          {
            ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
            std::__shared_weak_count::__release_weak(v120);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v115 + 96))(&v1114, v115, 0);
      else
LABEL_857:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1900;
      if (!v1105)
        goto LABEL_1900;
      v563 = v1106;
      if (!v1106)
        goto LABEL_1900;
      v564 = v1110;
      v565 = v1103;
      if (v1112 && v1103)
      {
        v566 = v1101;
        v567 = v1102;
        if (v1102)
        {
          v568 = (unint64_t *)&v1102->__shared_owners_;
          do
            v569 = __ldxr(v568);
          while (__stxr(v569 + 1, v568));
          do
            v570 = __ldaxr(v568);
          while (__stlxr(v570 - 1, v568));
          if (!v570)
          {
            ((void (*)(std::__shared_weak_count *))v567->__on_zero_shared)(v567);
            std::__shared_weak_count::__release_weak(v567);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v566 + 88))(v566, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v565 = v1103;
      }
      if (v563 == 1)
      {
        v1080 = v114;
LABEL_1808:
        if (v1080 && !v565)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2047;
          }
          v565 = 0;
        }
      }
      else
      {
        if (v114)
        {
          v1080 = v114;
          v571 = 0;
          while (v565
               || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v572 = 0;
            v573 = *(_QWORD *)(v113 + 40);
            do
            {
              if (v573)
              {
                v574 = *(_QWORD **)(v113 + 24);
                LOBYTE(v1115) = *(_BYTE *)(v113 + 32);
                sub_20AEC01D0(v574, (uint64_t)&v1115, 1);
              }
              std::ostream::operator<<();
              v573 = *(_QWORD *)(v113 + 40) + 1;
              *(_QWORD *)(v113 + 40) = v573;
              v572 += 2;
            }
            while (2 * (3 * v114) != v572);
            v565 += 2 * v564;
            if (++v571 == v563 - 1)
              goto LABEL_1808;
          }
LABEL_2047:
          abort();
        }
        v565 += (2 * (v563 - 2) + 2) * v564;
      }
      v1115 = (3 * v114);
      v1116 = v565;
      sub_20B513184(v113, &v1115);
LABEL_1900:
      v1045 = v1114;
      v1114 = 0;
      if (v1045)
        (*(void (**)(uint64_t))(*(_QWORD *)v1045 + 8))(v1045);
      v484 = v1102;
      if (!v1102)
        return;
      v1046 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1046);
      while (__stlxr(v486 - 1, v1046));
      goto LABEL_2025;
    case 19:
      sub_20B378390(a3, (uint64_t)&v1101);
      v26 = *a2;
      v1086 = v1111;
      v27 = v1101;
      if (!v1101)
        goto LABEL_629;
      v28 = v1102;
      if (v1102)
      {
        v29 = (unint64_t *)&v1102->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
        v27 = v1101;
        v32 = v1102;
        if (v1102)
        {
          v33 = (unint64_t *)&v1102->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v27 + 96))(&v1115, v27, 0);
      else
LABEL_629:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1703;
      if (!v1105)
        goto LABEL_1703;
      v458 = v1106;
      if (!v1106)
        goto LABEL_1703;
      v459 = v1110;
      v460 = v1103;
      if (v1112 && v1103)
      {
        v461 = v1101;
        v462 = v1102;
        if (v1102)
        {
          v463 = (unint64_t *)&v1102->__shared_owners_;
          do
            v464 = __ldxr(v463);
          while (__stxr(v464 + 1, v463));
          do
            v465 = __ldaxr(v463);
          while (__stlxr(v465 - 1, v463));
          if (!v465)
          {
            ((void (*)(std::__shared_weak_count *))v462->__on_zero_shared)(v462);
            std::__shared_weak_count::__release_weak(v462);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v461 + 88))(v461, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v460 = v1103;
      }
      v1077 = (3 * v1086);
      if (v458 == 1)
        goto LABEL_652;
      if (!v1086)
        goto LABEL_1703;
      v466 = 0;
      do
      {
        if (!v460
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_655;
        }
        v467 = 0;
        v468 = *(_QWORD *)(v26 + 40);
        do
        {
          if (v468)
          {
            v469 = *(_QWORD **)(v26 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v26 + 32);
            sub_20AEC01D0(v469, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v26 + 24) + *(_QWORD *)(**(_QWORD **)(v26 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v460[v467];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v468 = *(_QWORD *)(v26 + 40) + 1;
          *(_QWORD *)(v26 + 40) = v468;
          v467 += 2;
        }
        while (2 * v1077 != v467);
        v460 += 2 * v459;
        ++v466;
      }
      while (v466 != v458 - 1);
LABEL_652:
      if (!v1086 || v460)
      {
        if (!v1086)
          goto LABEL_1703;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_655:
        abort();
      }
      v968 = *(_QWORD *)(v26 + 40);
      v969 = 2 * v1077;
      do
      {
        if (v968)
        {
          v970 = *(_QWORD **)(v26 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v26 + 32);
          sub_20AEC01D0(v970, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v26 + 24) + *(_QWORD *)(**(_QWORD **)(v26 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v460;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v968 = *(_QWORD *)(v26 + 40) + 1;
        *(_QWORD *)(v26 + 40) = v968;
        v460 += 2;
        v969 -= 2;
      }
      while (v969);
LABEL_1703:
      v973 = v1115;
      v1115 = 0;
      if (v973)
        (*(void (**)(uint64_t))(*(_QWORD *)v973 + 8))(v973);
      v484 = v1102;
      if (!v1102)
        return;
      v974 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v974);
      while (__stlxr(v486 - 1, v974));
      goto LABEL_2025;
    case 20:
      sub_20B3789C8(a3, (uint64_t)&v1101);
      v375 = *a2;
      v376 = v1111;
      v377 = v1101;
      if (!v1101)
        goto LABEL_1538;
      v378 = v1102;
      if (v1102)
      {
        v379 = (unint64_t *)&v1102->__shared_owners_;
        do
          v380 = __ldxr(v379);
        while (__stxr(v380 + 1, v379));
        do
          v381 = __ldaxr(v379);
        while (__stlxr(v381 - 1, v379));
        if (!v381)
        {
          ((void (*)(std::__shared_weak_count *))v378->__on_zero_shared)(v378);
          std::__shared_weak_count::__release_weak(v378);
        }
        v377 = v1101;
        v382 = v1102;
        if (v1102)
        {
          v383 = (unint64_t *)&v1102->__shared_owners_;
          do
            v384 = __ldxr(v383);
          while (__stxr(v384 + 1, v383));
          do
            v385 = __ldaxr(v383);
          while (__stlxr(v385 - 1, v383));
          if (!v385)
          {
            ((void (*)(std::__shared_weak_count *))v382->__on_zero_shared)(v382);
            std::__shared_weak_count::__release_weak(v382);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v377 + 96))(&v1114, v377, 0);
      else
LABEL_1538:
        v1114 = 0;
      if (!v1104)
        goto LABEL_2012;
      if (!v1105)
        goto LABEL_2012;
      v886 = v1106;
      if (!v1106)
        goto LABEL_2012;
      v887 = v1110;
      v888 = v1103;
      if (v1112 && v1103)
      {
        v889 = v1101;
        v890 = v1102;
        if (v1102)
        {
          v891 = (unint64_t *)&v1102->__shared_owners_;
          do
            v892 = __ldxr(v891);
          while (__stxr(v892 + 1, v891));
          do
            v893 = __ldaxr(v891);
          while (__stlxr(v893 - 1, v891));
          if (!v893)
          {
            ((void (*)(std::__shared_weak_count *))v890->__on_zero_shared)(v890);
            std::__shared_weak_count::__release_weak(v890);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v889 + 88))(v889, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v888 = v1103;
      }
      if (v886 == 1)
      {
        v1084 = v376;
LABEL_1836:
        if (v1084 && !v888)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2057;
          }
          v888 = 0;
        }
      }
      else
      {
        if (v376)
        {
          v1084 = v376;
          v894 = 0;
          while (v888
               || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v895 = 0;
            v896 = *(_QWORD *)(v375 + 40);
            do
            {
              if (v896)
              {
                v897 = *(_QWORD **)(v375 + 24);
                LOBYTE(v1115) = *(_BYTE *)(v375 + 32);
                sub_20AEC01D0(v897, (uint64_t)&v1115, 1);
              }
              *(_QWORD *)(*(_QWORD *)(v375 + 24) + *(_QWORD *)(**(_QWORD **)(v375 + 24) - 24) + 16) = 9;
              std::ostream::operator<<();
              v896 = *(_QWORD *)(v375 + 40) + 1;
              *(_QWORD *)(v375 + 40) = v896;
              v895 += 4;
            }
            while (4 * (3 * v376) != v895);
            v888 += 4 * v887;
            if (++v894 == v886 - 1)
              goto LABEL_1836;
          }
LABEL_2057:
          abort();
        }
        v888 += (4 * (v886 - 2) + 4) * v887;
      }
      v1115 = (3 * v376);
      v1116 = v888;
      sub_20B513208(v375, &v1115);
LABEL_2012:
      v1073 = v1114;
      v1114 = 0;
      if (v1073)
        (*(void (**)(uint64_t))(*(_QWORD *)v1073 + 8))(v1073);
      v484 = v1102;
      if (!v1102)
        return;
      v1074 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1074);
      while (__stlxr(v486 - 1, v1074));
      goto LABEL_2025;
    case 21:
      sub_20B2D7B44(a3, (uint64_t)&v1101);
      v429 = *a2;
      v430 = v1111;
      v431 = v1101;
      if (!v1101)
        goto LABEL_1665;
      v432 = v1102;
      if (v1102)
      {
        v433 = (unint64_t *)&v1102->__shared_owners_;
        do
          v434 = __ldxr(v433);
        while (__stxr(v434 + 1, v433));
        do
          v435 = __ldaxr(v433);
        while (__stlxr(v435 - 1, v433));
        if (!v435)
        {
          ((void (*)(std::__shared_weak_count *))v432->__on_zero_shared)(v432);
          std::__shared_weak_count::__release_weak(v432);
        }
        v431 = v1101;
        v436 = v1102;
        if (v1102)
        {
          v437 = (unint64_t *)&v1102->__shared_owners_;
          do
            v438 = __ldxr(v437);
          while (__stxr(v438 + 1, v437));
          do
            v439 = __ldaxr(v437);
          while (__stlxr(v439 - 1, v437));
          if (!v439)
          {
            ((void (*)(std::__shared_weak_count *))v436->__on_zero_shared)(v436);
            std::__shared_weak_count::__release_weak(v436);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v431 + 96))(&v1115, v431, 0);
      else
LABEL_1665:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1860;
      if (!v1105)
        goto LABEL_1860;
      v950 = v1106;
      if (!v1106)
        goto LABEL_1860;
      v951 = v1110;
      v952 = v1103;
      if (v1112 && v1103)
      {
        v953 = v1101;
        v954 = v1102;
        if (v1102)
        {
          v955 = (unint64_t *)&v1102->__shared_owners_;
          do
            v956 = __ldxr(v955);
          while (__stxr(v956 + 1, v955));
          do
            v957 = __ldaxr(v955);
          while (__stlxr(v957 - 1, v955));
          if (!v957)
          {
            ((void (*)(std::__shared_weak_count *))v954->__on_zero_shared)(v954);
            std::__shared_weak_count::__release_weak(v954);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v953 + 88))(v953, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v952 = v1103;
      }
      v958 = (3 * v430);
      if (v950 == 1)
      {
        v1100 = v430;
LABEL_1854:
        if (v1100 && !v952)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2037;
          }
          v952 = 0;
        }
        if (v1100)
        {
          do
          {
            sub_20B512EB0(v429, v952++);
            --v958;
          }
          while (v958);
        }
      }
      else if (v430)
      {
        v1100 = v430;
        v959 = 0;
        while (v952
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v960 = 0;
          do
            sub_20B512EB0(v429, &v952[v960++]);
          while (v958 != v960);
          v952 += v951;
          if (++v959 == v950 - 1)
            goto LABEL_1854;
        }
LABEL_2037:
        abort();
      }
LABEL_1860:
      v1035 = v1115;
      v1115 = 0;
      if (v1035)
        (*(void (**)(uint64_t))(*(_QWORD *)v1035 + 8))(v1035);
      v484 = v1102;
      if (!v1102)
        return;
      v1036 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1036);
      while (__stlxr(v486 - 1, v1036));
      goto LABEL_2025;
    case 22:
      sub_20B379000(a3, (uint64_t)&v1101);
      v146 = *a2;
      v147 = v1111;
      v148 = v1101;
      if (!v1101)
        goto LABEL_935;
      v149 = v1102;
      if (v1102)
      {
        v150 = (unint64_t *)&v1102->__shared_owners_;
        do
          v151 = __ldxr(v150);
        while (__stxr(v151 + 1, v150));
        do
          v152 = __ldaxr(v150);
        while (__stlxr(v152 - 1, v150));
        if (!v152)
        {
          ((void (*)(std::__shared_weak_count *))v149->__on_zero_shared)(v149);
          std::__shared_weak_count::__release_weak(v149);
        }
        v148 = v1101;
        v153 = v1102;
        if (v1102)
        {
          v154 = (unint64_t *)&v1102->__shared_owners_;
          do
            v155 = __ldxr(v154);
          while (__stxr(v155 + 1, v154));
          do
            v156 = __ldaxr(v154);
          while (__stlxr(v156 - 1, v154));
          if (!v156)
          {
            ((void (*)(std::__shared_weak_count *))v153->__on_zero_shared)(v153);
            std::__shared_weak_count::__release_weak(v153);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v148 + 96))(&v1114, v148, 0);
      else
LABEL_935:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1908;
      if (!v1105)
        goto LABEL_1908;
      v603 = v1106;
      if (!v1106)
        goto LABEL_1908;
      v604 = v1110;
      v605 = v1103;
      if (v1112 && v1103)
      {
        v606 = v1101;
        v607 = v1102;
        if (v1102)
        {
          v608 = (unint64_t *)&v1102->__shared_owners_;
          do
            v609 = __ldxr(v608);
          while (__stxr(v609 + 1, v608));
          do
            v610 = __ldaxr(v608);
          while (__stlxr(v610 - 1, v608));
          if (!v610)
          {
            ((void (*)(std::__shared_weak_count *))v607->__on_zero_shared)(v607);
            std::__shared_weak_count::__release_weak(v607);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v606 + 88))(v606, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v605 = v1103;
      }
      if (v603 == 1)
      {
        v1081 = v147;
LABEL_1813:
        if (v1081 && !v605)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2048;
          }
          v605 = 0;
        }
      }
      else
      {
        if (v147)
        {
          v1081 = v147;
          v611 = 0;
          while (v605
               || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v612 = 0;
            v613 = *(_QWORD *)(v146 + 40);
            do
            {
              if (v613)
              {
                v614 = *(_QWORD **)(v146 + 24);
                LOBYTE(v1115) = *(_BYTE *)(v146 + 32);
                sub_20AEC01D0(v614, (uint64_t)&v1115, 1);
              }
              std::ostream::operator<<();
              v613 = *(_QWORD *)(v146 + 40) + 1;
              *(_QWORD *)(v146 + 40) = v613;
              v612 += 2;
            }
            while (2 * (3 * v147) != v612);
            v605 += 2 * v604;
            if (++v611 == v603 - 1)
              goto LABEL_1813;
          }
LABEL_2048:
          abort();
        }
        v605 += (2 * (v603 - 2) + 2) * v604;
      }
      v1115 = (3 * v147);
      v1116 = v605;
      sub_20B513184(v146, &v1115);
LABEL_1908:
      v1047 = v1114;
      v1114 = 0;
      if (v1047)
        (*(void (**)(uint64_t))(*(_QWORD *)v1047 + 8))(v1047);
      v484 = v1102;
      if (!v1102)
        return;
      v1048 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1048);
      while (__stlxr(v486 - 1, v1048));
      goto LABEL_2025;
    case 23:
      sub_20B379638(a3, (uint64_t)&v1101);
      v419 = *a2;
      v1089 = v1111;
      v420 = v1101;
      if (!v1101)
        goto LABEL_1638;
      v421 = v1102;
      if (v1102)
      {
        v422 = (unint64_t *)&v1102->__shared_owners_;
        do
          v423 = __ldxr(v422);
        while (__stxr(v423 + 1, v422));
        do
          v424 = __ldaxr(v422);
        while (__stlxr(v424 - 1, v422));
        if (!v424)
        {
          ((void (*)(std::__shared_weak_count *))v421->__on_zero_shared)(v421);
          std::__shared_weak_count::__release_weak(v421);
        }
        v420 = v1101;
        v425 = v1102;
        if (v1102)
        {
          v426 = (unint64_t *)&v1102->__shared_owners_;
          do
            v427 = __ldxr(v426);
          while (__stxr(v427 + 1, v426));
          do
            v428 = __ldaxr(v426);
          while (__stlxr(v428 - 1, v426));
          if (!v428)
          {
            ((void (*)(std::__shared_weak_count *))v425->__on_zero_shared)(v425);
            std::__shared_weak_count::__release_weak(v425);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v420 + 96))(&v1115, v420, 0);
      else
LABEL_1638:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1791;
      if (!v1105)
        goto LABEL_1791;
      v936 = v1106;
      if (!v1106)
        goto LABEL_1791;
      v937 = v1110;
      v938 = v1103;
      if (v1112 && v1103)
      {
        v939 = v1101;
        v940 = v1102;
        if (v1102)
        {
          v941 = (unint64_t *)&v1102->__shared_owners_;
          do
            v942 = __ldxr(v941);
          while (__stxr(v942 + 1, v941));
          do
            v943 = __ldaxr(v941);
          while (__stlxr(v943 - 1, v941));
          if (!v943)
          {
            ((void (*)(std::__shared_weak_count *))v940->__on_zero_shared)(v940);
            std::__shared_weak_count::__release_weak(v940);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v939 + 88))(v939, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v938 = v1103;
      }
      v1085 = (3 * v1089);
      if (v936 == 1)
        goto LABEL_1661;
      if (!v1089)
        goto LABEL_1791;
      v944 = 0;
      do
      {
        if (!v938
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1664;
        }
        v945 = 0;
        v946 = *(_QWORD *)(v419 + 40);
        do
        {
          if (v946)
          {
            v947 = *(_QWORD **)(v419 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v419 + 32);
            sub_20AEC01D0(v947, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v419 + 24) + *(_QWORD *)(**(_QWORD **)(v419 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v938[v945];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v946 = *(_QWORD *)(v419 + 40) + 1;
          *(_QWORD *)(v419 + 40) = v946;
          v945 += 2;
        }
        while (2 * v1085 != v945);
        v938 += 2 * v937;
        ++v944;
      }
      while (v944 != v936 - 1);
LABEL_1661:
      if (!v1089 || v938)
      {
        if (!v1089)
          goto LABEL_1791;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1664:
        abort();
      }
      v1024 = *(_QWORD *)(v419 + 40);
      v1025 = 2 * v1085;
      do
      {
        if (v1024)
        {
          v1026 = *(_QWORD **)(v419 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v419 + 32);
          sub_20AEC01D0(v1026, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v419 + 24) + *(_QWORD *)(**(_QWORD **)(v419 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v938;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v1024 = *(_QWORD *)(v419 + 40) + 1;
        *(_QWORD *)(v419 + 40) = v1024;
        v938 += 2;
        v1025 -= 2;
      }
      while (v1025);
LABEL_1791:
      v1029 = v1115;
      v1115 = 0;
      if (v1029)
        (*(void (**)(uint64_t))(*(_QWORD *)v1029 + 8))(v1029);
      v484 = v1102;
      if (!v1102)
        return;
      v1030 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1030);
      while (__stlxr(v486 - 1, v1030));
      goto LABEL_2025;
    case 24:
      sub_20B379C70(a3, (uint64_t)&v1101);
      v69 = *a2;
      v70 = v1111;
      v71 = v1101;
      if (!v1101)
        goto LABEL_746;
      v72 = v1102;
      if (v1102)
      {
        v73 = (unint64_t *)&v1102->__shared_owners_;
        do
          v74 = __ldxr(v73);
        while (__stxr(v74 + 1, v73));
        do
          v75 = __ldaxr(v73);
        while (__stlxr(v75 - 1, v73));
        if (!v75)
        {
          ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
          std::__shared_weak_count::__release_weak(v72);
        }
        v71 = v1101;
        v76 = v1102;
        if (v1102)
        {
          v77 = (unint64_t *)&v1102->__shared_owners_;
          do
            v78 = __ldxr(v77);
          while (__stxr(v78 + 1, v77));
          do
            v79 = __ldaxr(v77);
          while (__stlxr(v79 - 1, v77));
          if (!v79)
          {
            ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
            std::__shared_weak_count::__release_weak(v76);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v71 + 96))(&v1114, v71, 0);
      else
LABEL_746:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1876;
      if (!v1105)
        goto LABEL_1876;
      v512 = v1106;
      if (!v1106)
        goto LABEL_1876;
      v513 = v1110;
      v514 = v1103;
      if (v1112 && v1103)
      {
        v515 = v1101;
        v516 = v1102;
        if (v1102)
        {
          v517 = (unint64_t *)&v1102->__shared_owners_;
          do
            v518 = __ldxr(v517);
          while (__stxr(v518 + 1, v517));
          do
            v519 = __ldaxr(v517);
          while (__stlxr(v519 - 1, v517));
          if (!v519)
          {
            ((void (*)(std::__shared_weak_count *))v516->__on_zero_shared)(v516);
            std::__shared_weak_count::__release_weak(v516);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v515 + 88))(v515, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v514 = v1103;
      }
      if (v512 == 1)
      {
        v1079 = v70;
LABEL_1803:
        if (v1079 && !v514)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2046;
          }
          v514 = 0;
        }
      }
      else
      {
        if (v70)
        {
          v1079 = v70;
          v520 = 0;
          while (v514
               || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v521 = 0;
            v522 = *(_QWORD *)(v69 + 40);
            do
            {
              if (v522)
              {
                v523 = *(_QWORD **)(v69 + 24);
                LOBYTE(v1115) = *(_BYTE *)(v69 + 32);
                sub_20AEC01D0(v523, (uint64_t)&v1115, 1);
              }
              *(_QWORD *)(*(_QWORD *)(v69 + 24) + *(_QWORD *)(**(_QWORD **)(v69 + 24) - 24) + 16) = 9;
              std::ostream::operator<<();
              v522 = *(_QWORD *)(v69 + 40) + 1;
              *(_QWORD *)(v69 + 40) = v522;
              v521 += 4;
            }
            while (4 * (3 * v70) != v521);
            v514 += 4 * v513;
            if (++v520 == v512 - 1)
              goto LABEL_1803;
          }
LABEL_2046:
          abort();
        }
        v514 += (4 * (v512 - 2) + 4) * v513;
      }
      v1115 = (3 * v70);
      v1116 = v514;
      sub_20B513208(v69, &v1115);
LABEL_1876:
      v1039 = v1114;
      v1114 = 0;
      if (v1039)
        (*(void (**)(uint64_t))(*(_QWORD *)v1039 + 8))(v1039);
      v484 = v1102;
      if (v1102)
      {
        v1040 = (unint64_t *)&v1102->__shared_owners_;
        do
          v486 = __ldaxr(v1040);
        while (__stlxr(v486 - 1, v1040));
LABEL_2025:
        if (!v486)
        {
          ((void (*)(std::__shared_weak_count *))v484->__on_zero_shared)(v484);
          std::__shared_weak_count::__release_weak(v484);
        }
      }
      return;
    case 25:
      sub_20B37A2A8(a3, (uint64_t)&v1101);
      v36 = *a2;
      v37 = v1111;
      v38 = v1101;
      if (!v1101)
        goto LABEL_656;
      v39 = v1102;
      if (v1102)
      {
        v40 = (unint64_t *)&v1102->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
        }
        v38 = v1101;
        v43 = v1102;
        if (v1102)
        {
          v44 = (unint64_t *)&v1102->__shared_owners_;
          do
            v45 = __ldxr(v44);
          while (__stxr(v45 + 1, v44));
          do
            v46 = __ldaxr(v44);
          while (__stlxr(v46 - 1, v44));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
            std::__shared_weak_count::__release_weak(v43);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v38 + 96))(&v1115, v38, 0);
      else
LABEL_656:
        v1115 = 0;
      if (!v1104)
        goto LABEL_683;
      if (!v1105)
        goto LABEL_683;
      v472 = v1106;
      if (!v1106)
        goto LABEL_683;
      v473 = v1110;
      v474 = v1103;
      if (v1112 && v1103)
      {
        v475 = v1101;
        v476 = v1102;
        if (v1102)
        {
          v477 = (unint64_t *)&v1102->__shared_owners_;
          do
            v478 = __ldxr(v477);
          while (__stxr(v478 + 1, v477));
          do
            v479 = __ldaxr(v477);
          while (__stlxr(v479 - 1, v477));
          if (!v479)
          {
            ((void (*)(std::__shared_weak_count *))v476->__on_zero_shared)(v476);
            std::__shared_weak_count::__release_weak(v476);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v475 + 88))(v475, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v474 = v1103;
      }
      v480 = (4 * v37);
      if (v472 == 1)
        goto LABEL_677;
      if (!(_DWORD)v480)
        goto LABEL_683;
      v481 = 0;
      do
      {
        if (!v474
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2028;
        }
        for (m = 0; m != v480; ++m)
          sub_20B512EB0(v36, &v474[m]);
        v474 += v473;
        ++v481;
      }
      while (v481 != v472 - 1);
LABEL_677:
      if ((_DWORD)v480 && !v474)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2028:
          abort();
        }
        v474 = 0;
      }
      if ((_DWORD)v480)
      {
        do
        {
          sub_20B512EB0(v36, v474++);
          --v480;
        }
        while (v480);
      }
LABEL_683:
      v483 = v1115;
      v1115 = 0;
      if (v483)
        (*(void (**)(uint64_t))(*(_QWORD *)v483 + 8))(v483);
      v484 = v1102;
      if (!v1102)
        return;
      v485 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v485);
      while (__stlxr(v486 - 1, v485));
      goto LABEL_2025;
    case 26:
      sub_20B37A8DC(a3, (uint64_t)&v1101);
      v157 = *a2;
      v158 = v1111;
      v159 = v1101;
      if (!v1101)
        goto LABEL_959;
      v160 = v1102;
      if (v1102)
      {
        v161 = (unint64_t *)&v1102->__shared_owners_;
        do
          v162 = __ldxr(v161);
        while (__stxr(v162 + 1, v161));
        do
          v163 = __ldaxr(v161);
        while (__stlxr(v163 - 1, v161));
        if (!v163)
        {
          ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
          std::__shared_weak_count::__release_weak(v160);
        }
        v159 = v1101;
        v164 = v1102;
        if (v1102)
        {
          v165 = (unint64_t *)&v1102->__shared_owners_;
          do
            v166 = __ldxr(v165);
          while (__stxr(v166 + 1, v165));
          do
            v167 = __ldaxr(v165);
          while (__stlxr(v167 - 1, v165));
          if (!v167)
          {
            ((void (*)(std::__shared_weak_count *))v164->__on_zero_shared)(v164);
            std::__shared_weak_count::__release_weak(v164);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v159 + 96))(&v1114, v159, 0);
      else
LABEL_959:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1916;
      if (!v1105)
        goto LABEL_1916;
      v615 = v1106;
      if (!v1106)
        goto LABEL_1916;
      v616 = v1110;
      v617 = v1103;
      if (v1112 && v1103)
      {
        v618 = v1101;
        v619 = v1102;
        if (v1102)
        {
          v620 = (unint64_t *)&v1102->__shared_owners_;
          do
            v621 = __ldxr(v620);
          while (__stxr(v621 + 1, v620));
          do
            v622 = __ldaxr(v620);
          while (__stlxr(v622 - 1, v620));
          if (!v622)
          {
            ((void (*)(std::__shared_weak_count *))v619->__on_zero_shared)(v619);
            std::__shared_weak_count::__release_weak(v619);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v618 + 88))(v618, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v617 = v1103;
      }
      v623 = (4 * v158);
      if (v615 == 1)
        goto LABEL_982;
      if ((_DWORD)v623)
      {
        v624 = 0;
        do
        {
          if (!v617
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2041;
          }
          v625 = 0;
          v626 = *(_QWORD *)(v157 + 40);
          do
          {
            if (v626)
            {
              v627 = *(_QWORD **)(v157 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v157 + 32);
              sub_20AEC01D0(v627, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v626 = *(_QWORD *)(v157 + 40) + 1;
            *(_QWORD *)(v157 + 40) = v626;
            v625 += 2;
          }
          while (2 * v623 != v625);
          v617 += 2 * v616;
          ++v624;
        }
        while (v624 != v615 - 1);
LABEL_982:
        if ((_DWORD)v623 && !v617)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2041:
            abort();
          }
          v617 = 0;
        }
      }
      else
      {
        v617 += (2 * (v615 - 2) + 2) * v616;
      }
      v1115 = (4 * v158);
      v1116 = v617;
      sub_20B513184(v157, &v1115);
LABEL_1916:
      v1049 = v1114;
      v1114 = 0;
      if (v1049)
        (*(void (**)(uint64_t))(*(_QWORD *)v1049 + 8))(v1049);
      v484 = v1102;
      if (!v1102)
        return;
      v1050 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1050);
      while (__stlxr(v486 - 1, v1050));
      goto LABEL_2025;
    case 27:
      sub_20B37AF14(a3, (uint64_t)&v1101);
      v15 = *a2;
      v16 = v1111;
      v17 = v1101;
      if (!v1101)
        goto LABEL_602;
      v18 = v1102;
      if (v1102)
      {
        v19 = (unint64_t *)&v1102->__shared_owners_;
        do
          v20 = __ldxr(v19);
        while (__stxr(v20 + 1, v19));
        do
          v21 = __ldaxr(v19);
        while (__stlxr(v21 - 1, v19));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
        v17 = v1101;
        v22 = v1102;
        if (v1102)
        {
          v23 = (unint64_t *)&v1102->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
            std::__shared_weak_count::__release_weak(v22);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v17 + 96))(&v1115, v17, 0);
      else
LABEL_602:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1692;
      if (!v1105)
        goto LABEL_1692;
      v440 = v1106;
      if (!v1106)
        goto LABEL_1692;
      v441 = v1110;
      v442 = v1103;
      if (v1112 && v1103)
      {
        v443 = v1101;
        v444 = v1102;
        if (v1102)
        {
          v445 = (unint64_t *)&v1102->__shared_owners_;
          do
            v446 = __ldxr(v445);
          while (__stxr(v446 + 1, v445));
          do
            v447 = __ldaxr(v445);
          while (__stlxr(v447 - 1, v445));
          if (!v447)
          {
            ((void (*)(std::__shared_weak_count *))v444->__on_zero_shared)(v444);
            std::__shared_weak_count::__release_weak(v444);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v443 + 88))(v443, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v442 = v1103;
      }
      v1090 = (4 * v16);
      if (v440 == 1)
        goto LABEL_625;
      if (!(4 * v16))
        goto LABEL_1692;
      v448 = 0;
      do
      {
        if (!v442
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_628;
        }
        v449 = 0;
        v450 = *(_QWORD *)(v15 + 40);
        do
        {
          if (v450)
          {
            v451 = *(_QWORD **)(v15 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v15 + 32);
            sub_20AEC01D0(v451, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v15 + 24) + *(_QWORD *)(**(_QWORD **)(v15 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v442[v449];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v450 = *(_QWORD *)(v15 + 40) + 1;
          *(_QWORD *)(v15 + 40) = v450;
          v449 += 2;
        }
        while (2 * v1090 != v449);
        v442 += 2 * v441;
        ++v448;
      }
      while (v448 != v440 - 1);
LABEL_625:
      if (!(_DWORD)v1090 || v442)
      {
        if (!(_DWORD)v1090)
          goto LABEL_1692;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_628:
        abort();
      }
      v961 = *(_QWORD *)(v15 + 40);
      v962 = 2 * v1090;
      do
      {
        if (v961)
        {
          v963 = *(_QWORD **)(v15 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v15 + 32);
          sub_20AEC01D0(v963, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v15 + 24) + *(_QWORD *)(**(_QWORD **)(v15 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v442;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v961 = *(_QWORD *)(v15 + 40) + 1;
        *(_QWORD *)(v15 + 40) = v961;
        v442 += 2;
        v962 -= 2;
      }
      while (v962);
LABEL_1692:
      v966 = v1115;
      v1115 = 0;
      if (v966)
        (*(void (**)(uint64_t))(*(_QWORD *)v966 + 8))(v966);
      v484 = v1102;
      if (!v1102)
        return;
      v967 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v967);
      while (__stlxr(v486 - 1, v967));
      goto LABEL_2025;
    case 28:
      sub_20B37B54C(a3, (uint64_t)&v1101);
      v201 = *a2;
      v202 = v1111;
      v203 = v1101;
      if (!v1101)
        goto LABEL_1066;
      v204 = v1102;
      if (v1102)
      {
        v205 = (unint64_t *)&v1102->__shared_owners_;
        do
          v206 = __ldxr(v205);
        while (__stxr(v206 + 1, v205));
        do
          v207 = __ldaxr(v205);
        while (__stlxr(v207 - 1, v205));
        if (!v207)
        {
          ((void (*)(std::__shared_weak_count *))v204->__on_zero_shared)(v204);
          std::__shared_weak_count::__release_weak(v204);
        }
        v203 = v1101;
        v208 = v1102;
        if (v1102)
        {
          v209 = (unint64_t *)&v1102->__shared_owners_;
          do
            v210 = __ldxr(v209);
          while (__stxr(v210 + 1, v209));
          do
            v211 = __ldaxr(v209);
          while (__stlxr(v211 - 1, v209));
          if (!v211)
          {
            ((void (*)(std::__shared_weak_count *))v208->__on_zero_shared)(v208);
            std::__shared_weak_count::__release_weak(v208);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v203 + 96))(&v1114, v203, 0);
      else
LABEL_1066:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1940;
      if (!v1105)
        goto LABEL_1940;
      v667 = v1106;
      if (!v1106)
        goto LABEL_1940;
      v668 = v1110;
      v669 = v1103;
      if (v1112 && v1103)
      {
        v670 = v1101;
        v671 = v1102;
        if (v1102)
        {
          v672 = (unint64_t *)&v1102->__shared_owners_;
          do
            v673 = __ldxr(v672);
          while (__stxr(v673 + 1, v672));
          do
            v674 = __ldaxr(v672);
          while (__stlxr(v674 - 1, v672));
          if (!v674)
          {
            ((void (*)(std::__shared_weak_count *))v671->__on_zero_shared)(v671);
            std::__shared_weak_count::__release_weak(v671);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v670 + 88))(v670, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v669 = v1103;
      }
      v675 = (4 * v202);
      if (v667 == 1)
        goto LABEL_1089;
      if ((_DWORD)v675)
      {
        v676 = 0;
        do
        {
          if (!v669
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2044;
          }
          v677 = 0;
          v678 = *(_QWORD *)(v201 + 40);
          do
          {
            if (v678)
            {
              v679 = *(_QWORD **)(v201 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v201 + 32);
              sub_20AEC01D0(v679, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v201 + 24) + *(_QWORD *)(**(_QWORD **)(v201 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v678 = *(_QWORD *)(v201 + 40) + 1;
            *(_QWORD *)(v201 + 40) = v678;
            v677 += 4;
          }
          while (4 * v675 != v677);
          v669 += 4 * v668;
          ++v676;
        }
        while (v676 != v667 - 1);
LABEL_1089:
        if ((_DWORD)v675 && !v669)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2044:
            abort();
          }
          v669 = 0;
        }
      }
      else
      {
        v669 += (4 * (v667 - 2) + 4) * v668;
      }
      v1115 = v675;
      v1116 = v669;
      sub_20B513208(v201, &v1115);
LABEL_1940:
      v1055 = v1114;
      v1114 = 0;
      if (v1055)
        (*(void (**)(uint64_t))(*(_QWORD *)v1055 + 8))(v1055);
      v484 = v1102;
      if (!v1102)
        return;
      v1056 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1056);
      while (__stlxr(v486 - 1, v1056));
      goto LABEL_2025;
    case 29:
      sub_20B37BB84(a3, (uint64_t)&v1101);
      v58 = *a2;
      v59 = v1111;
      v60 = v1101;
      if (!v1101)
        goto LABEL_713;
      v61 = v1102;
      if (v1102)
      {
        v62 = (unint64_t *)&v1102->__shared_owners_;
        do
          v63 = __ldxr(v62);
        while (__stxr(v63 + 1, v62));
        do
          v64 = __ldaxr(v62);
        while (__stlxr(v64 - 1, v62));
        if (!v64)
        {
          ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
          std::__shared_weak_count::__release_weak(v61);
        }
        v60 = v1101;
        v65 = v1102;
        if (v1102)
        {
          v66 = (unint64_t *)&v1102->__shared_owners_;
          do
            v67 = __ldxr(v66);
          while (__stxr(v67 + 1, v66));
          do
            v68 = __ldaxr(v66);
          while (__stlxr(v68 - 1, v66));
          if (!v68)
          {
            ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
            std::__shared_weak_count::__release_weak(v65);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v60 + 96))(&v1115, v60, 0);
      else
LABEL_713:
        v1115 = 0;
      if (!v1104)
        goto LABEL_740;
      if (!v1105)
        goto LABEL_740;
      v499 = v1106;
      if (!v1106)
        goto LABEL_740;
      v500 = v1110;
      v501 = v1103;
      if (v1112 && v1103)
      {
        v502 = v1101;
        v503 = v1102;
        if (v1102)
        {
          v504 = (unint64_t *)&v1102->__shared_owners_;
          do
            v505 = __ldxr(v504);
          while (__stxr(v505 + 1, v504));
          do
            v506 = __ldaxr(v504);
          while (__stlxr(v506 - 1, v504));
          if (!v506)
          {
            ((void (*)(std::__shared_weak_count *))v503->__on_zero_shared)(v503);
            std::__shared_weak_count::__release_weak(v503);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v502 + 88))(v502, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v501 = v1103;
      }
      v507 = (4 * v59);
      if (v499 == 1)
        goto LABEL_734;
      if (!(_DWORD)v507)
        goto LABEL_740;
      v508 = 0;
      do
      {
        if (!v501
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2029;
        }
        for (n = 0; n != v507; ++n)
          sub_20B512EB0(v58, &v501[n]);
        v501 += v500;
        ++v508;
      }
      while (v508 != v499 - 1);
LABEL_734:
      if ((_DWORD)v507 && !v501)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2029:
          abort();
        }
        v501 = 0;
      }
      if ((_DWORD)v507)
      {
        do
        {
          sub_20B512EB0(v58, v501++);
          --v507;
        }
        while (v507);
      }
LABEL_740:
      v510 = v1115;
      v1115 = 0;
      if (v510)
        (*(void (**)(uint64_t))(*(_QWORD *)v510 + 8))(v510);
      v484 = v1102;
      if (!v1102)
        return;
      v511 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v511);
      while (__stlxr(v486 - 1, v511));
      goto LABEL_2025;
    case 30:
      sub_20B37C1B8(a3, (uint64_t)&v1101);
      v234 = *a2;
      v235 = v1111;
      v236 = v1101;
      if (!v1101)
        goto LABEL_1147;
      v237 = v1102;
      if (v1102)
      {
        v238 = (unint64_t *)&v1102->__shared_owners_;
        do
          v239 = __ldxr(v238);
        while (__stxr(v239 + 1, v238));
        do
          v240 = __ldaxr(v238);
        while (__stlxr(v240 - 1, v238));
        if (!v240)
        {
          ((void (*)(std::__shared_weak_count *))v237->__on_zero_shared)(v237);
          std::__shared_weak_count::__release_weak(v237);
        }
        v236 = v1101;
        v241 = v1102;
        if (v1102)
        {
          v242 = (unint64_t *)&v1102->__shared_owners_;
          do
            v243 = __ldxr(v242);
          while (__stxr(v243 + 1, v242));
          do
            v244 = __ldaxr(v242);
          while (__stlxr(v244 - 1, v242));
          if (!v244)
          {
            ((void (*)(std::__shared_weak_count *))v241->__on_zero_shared)(v241);
            std::__shared_weak_count::__release_weak(v241);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v236 + 96))(&v1114, v236, 0);
      else
LABEL_1147:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1956;
      if (!v1105)
        goto LABEL_1956;
      v707 = v1106;
      if (!v1106)
        goto LABEL_1956;
      v708 = v1110;
      v709 = v1103;
      if (v1112 && v1103)
      {
        v710 = v1101;
        v711 = v1102;
        if (v1102)
        {
          v712 = (unint64_t *)&v1102->__shared_owners_;
          do
            v713 = __ldxr(v712);
          while (__stxr(v713 + 1, v712));
          do
            v714 = __ldaxr(v712);
          while (__stlxr(v714 - 1, v712));
          if (!v714)
          {
            ((void (*)(std::__shared_weak_count *))v711->__on_zero_shared)(v711);
            std::__shared_weak_count::__release_weak(v711);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v710 + 88))(v710, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v709 = v1103;
      }
      v715 = (4 * v235);
      if (v707 == 1)
        goto LABEL_1170;
      if ((_DWORD)v715)
      {
        v716 = 0;
        do
        {
          if (!v709
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2049;
          }
          v717 = 0;
          v718 = *(_QWORD *)(v234 + 40);
          do
          {
            if (v718)
            {
              v719 = *(_QWORD **)(v234 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v234 + 32);
              sub_20AEC01D0(v719, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v718 = *(_QWORD *)(v234 + 40) + 1;
            *(_QWORD *)(v234 + 40) = v718;
            v717 += 2;
          }
          while (2 * v715 != v717);
          v709 += 2 * v708;
          ++v716;
        }
        while (v716 != v707 - 1);
LABEL_1170:
        if ((_DWORD)v715 && !v709)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2049:
            abort();
          }
          v709 = 0;
        }
      }
      else
      {
        v709 += (2 * (v707 - 2) + 2) * v708;
      }
      v1115 = (4 * v235);
      v1116 = v709;
      sub_20B513184(v234, &v1115);
LABEL_1956:
      v1059 = v1114;
      v1114 = 0;
      if (v1059)
        (*(void (**)(uint64_t))(*(_QWORD *)v1059 + 8))(v1059);
      v484 = v1102;
      if (!v1102)
        return;
      v1060 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1060);
      while (__stlxr(v486 - 1, v1060));
      goto LABEL_2025;
    case 31:
      sub_20B37C7F0(a3, (uint64_t)&v1101);
      v168 = *a2;
      v169 = v1111;
      v170 = v1101;
      if (!v1101)
        goto LABEL_986;
      v171 = v1102;
      if (v1102)
      {
        v172 = (unint64_t *)&v1102->__shared_owners_;
        do
          v173 = __ldxr(v172);
        while (__stxr(v173 + 1, v172));
        do
          v174 = __ldaxr(v172);
        while (__stlxr(v174 - 1, v172));
        if (!v174)
        {
          ((void (*)(std::__shared_weak_count *))v171->__on_zero_shared)(v171);
          std::__shared_weak_count::__release_weak(v171);
        }
        v170 = v1101;
        v175 = v1102;
        if (v1102)
        {
          v176 = (unint64_t *)&v1102->__shared_owners_;
          do
            v177 = __ldxr(v176);
          while (__stxr(v177 + 1, v176));
          do
            v178 = __ldaxr(v176);
          while (__stlxr(v178 - 1, v176));
          if (!v178)
          {
            ((void (*)(std::__shared_weak_count *))v175->__on_zero_shared)(v175);
            std::__shared_weak_count::__release_weak(v175);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v170 + 96))(&v1115, v170, 0);
      else
LABEL_986:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1736;
      if (!v1105)
        goto LABEL_1736;
      v628 = v1106;
      if (!v1106)
        goto LABEL_1736;
      v629 = v1110;
      v630 = v1103;
      if (v1112 && v1103)
      {
        v631 = v1101;
        v632 = v1102;
        if (v1102)
        {
          v633 = (unint64_t *)&v1102->__shared_owners_;
          do
            v634 = __ldxr(v633);
          while (__stxr(v634 + 1, v633));
          do
            v635 = __ldaxr(v633);
          while (__stlxr(v635 - 1, v633));
          if (!v635)
          {
            ((void (*)(std::__shared_weak_count *))v632->__on_zero_shared)(v632);
            std::__shared_weak_count::__release_weak(v632);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v631 + 88))(v631, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v630 = v1103;
      }
      v1093 = (4 * v169);
      if (v628 == 1)
        goto LABEL_1009;
      if (!(4 * v169))
        goto LABEL_1736;
      v636 = 0;
      do
      {
        if (!v630
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1012;
        }
        v637 = 0;
        v638 = *(_QWORD *)(v168 + 40);
        do
        {
          if (v638)
          {
            v639 = *(_QWORD **)(v168 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v168 + 32);
            sub_20AEC01D0(v639, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v168 + 24) + *(_QWORD *)(**(_QWORD **)(v168 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v630[v637];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v638 = *(_QWORD *)(v168 + 40) + 1;
          *(_QWORD *)(v168 + 40) = v638;
          v637 += 2;
        }
        while (2 * v1093 != v637);
        v630 += 2 * v629;
        ++v636;
      }
      while (v636 != v628 - 1);
LABEL_1009:
      if (!(_DWORD)v1093 || v630)
      {
        if (!(_DWORD)v1093)
          goto LABEL_1736;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1012:
        abort();
      }
      v989 = *(_QWORD *)(v168 + 40);
      v990 = 2 * v1093;
      do
      {
        if (v989)
        {
          v991 = *(_QWORD **)(v168 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v168 + 32);
          sub_20AEC01D0(v991, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v168 + 24) + *(_QWORD *)(**(_QWORD **)(v168 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v630;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v989 = *(_QWORD *)(v168 + 40) + 1;
        *(_QWORD *)(v168 + 40) = v989;
        v630 += 2;
        v990 -= 2;
      }
      while (v990);
LABEL_1736:
      v994 = v1115;
      v1115 = 0;
      if (v994)
        (*(void (**)(uint64_t))(*(_QWORD *)v994 + 8))(v994);
      v484 = v1102;
      if (!v1102)
        return;
      v995 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v995);
      while (__stlxr(v486 - 1, v995));
      goto LABEL_2025;
    case 32:
      sub_20B37CE28(a3, (uint64_t)&v1101);
      v256 = *a2;
      v257 = v1111;
      v258 = v1101;
      if (!v1101)
        goto LABEL_1201;
      v259 = v1102;
      if (v1102)
      {
        v260 = (unint64_t *)&v1102->__shared_owners_;
        do
          v261 = __ldxr(v260);
        while (__stxr(v261 + 1, v260));
        do
          v262 = __ldaxr(v260);
        while (__stlxr(v262 - 1, v260));
        if (!v262)
        {
          ((void (*)(std::__shared_weak_count *))v259->__on_zero_shared)(v259);
          std::__shared_weak_count::__release_weak(v259);
        }
        v258 = v1101;
        v263 = v1102;
        if (v1102)
        {
          v264 = (unint64_t *)&v1102->__shared_owners_;
          do
            v265 = __ldxr(v264);
          while (__stxr(v265 + 1, v264));
          do
            v266 = __ldaxr(v264);
          while (__stlxr(v266 - 1, v264));
          if (!v266)
          {
            ((void (*)(std::__shared_weak_count *))v263->__on_zero_shared)(v263);
            std::__shared_weak_count::__release_weak(v263);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v258 + 96))(&v1114, v258, 0);
      else
LABEL_1201:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1972;
      if (!v1105)
        goto LABEL_1972;
      v733 = v1106;
      if (!v1106)
        goto LABEL_1972;
      v734 = v1110;
      v735 = v1103;
      if (v1112 && v1103)
      {
        v736 = v1101;
        v737 = v1102;
        if (v1102)
        {
          v738 = (unint64_t *)&v1102->__shared_owners_;
          do
            v739 = __ldxr(v738);
          while (__stxr(v739 + 1, v738));
          do
            v740 = __ldaxr(v738);
          while (__stlxr(v740 - 1, v738));
          if (!v740)
          {
            ((void (*)(std::__shared_weak_count *))v737->__on_zero_shared)(v737);
            std::__shared_weak_count::__release_weak(v737);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v736 + 88))(v736, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v735 = v1103;
      }
      v741 = (4 * v257);
      if (v733 == 1)
        goto LABEL_1224;
      if ((_DWORD)v741)
      {
        v742 = 0;
        do
        {
          if (!v735
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2051;
          }
          v743 = 0;
          v744 = *(_QWORD *)(v256 + 40);
          do
          {
            if (v744)
            {
              v745 = *(_QWORD **)(v256 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v256 + 32);
              sub_20AEC01D0(v745, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v256 + 24) + *(_QWORD *)(**(_QWORD **)(v256 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v744 = *(_QWORD *)(v256 + 40) + 1;
            *(_QWORD *)(v256 + 40) = v744;
            v743 += 4;
          }
          while (4 * v741 != v743);
          v735 += 4 * v734;
          ++v742;
        }
        while (v742 != v733 - 1);
LABEL_1224:
        if ((_DWORD)v741 && !v735)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2051:
            abort();
          }
          v735 = 0;
        }
      }
      else
      {
        v735 += (4 * (v733 - 2) + 4) * v734;
      }
      v1115 = v741;
      v1116 = v735;
      sub_20B513208(v256, &v1115);
LABEL_1972:
      v1063 = v1114;
      v1114 = 0;
      if (v1063)
        (*(void (**)(uint64_t))(*(_QWORD *)v1063 + 8))(v1063);
      v484 = v1102;
      if (!v1102)
        return;
      v1064 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1064);
      while (__stlxr(v486 - 1, v1064));
      goto LABEL_2025;
    case 33:
      sub_20B37D460(a3, (uint64_t)&v1101);
      v364 = *a2;
      v365 = v1111;
      v366 = v1101;
      if (!v1101)
        goto LABEL_1505;
      v367 = v1102;
      if (v1102)
      {
        v368 = (unint64_t *)&v1102->__shared_owners_;
        do
          v369 = __ldxr(v368);
        while (__stxr(v369 + 1, v368));
        do
          v370 = __ldaxr(v368);
        while (__stlxr(v370 - 1, v368));
        if (!v370)
        {
          ((void (*)(std::__shared_weak_count *))v367->__on_zero_shared)(v367);
          std::__shared_weak_count::__release_weak(v367);
        }
        v366 = v1101;
        v371 = v1102;
        if (v1102)
        {
          v372 = (unint64_t *)&v1102->__shared_owners_;
          do
            v373 = __ldxr(v372);
          while (__stxr(v373 + 1, v372));
          do
            v374 = __ldaxr(v372);
          while (__stlxr(v374 - 1, v372));
          if (!v374)
          {
            ((void (*)(std::__shared_weak_count *))v371->__on_zero_shared)(v371);
            std::__shared_weak_count::__release_weak(v371);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v366 + 96))(&v1115, v366, 0);
      else
LABEL_1505:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1532;
      if (!v1105)
        goto LABEL_1532;
      v873 = v1106;
      if (!v1106)
        goto LABEL_1532;
      v874 = v1110;
      v875 = v1103;
      if (v1112 && v1103)
      {
        v876 = v1101;
        v877 = v1102;
        if (v1102)
        {
          v878 = (unint64_t *)&v1102->__shared_owners_;
          do
            v879 = __ldxr(v878);
          while (__stxr(v879 + 1, v878));
          do
            v880 = __ldaxr(v878);
          while (__stlxr(v880 - 1, v878));
          if (!v880)
          {
            ((void (*)(std::__shared_weak_count *))v877->__on_zero_shared)(v877);
            std::__shared_weak_count::__release_weak(v877);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v876 + 88))(v876, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v875 = v1103;
      }
      v881 = (4 * v365);
      if (v873 == 1)
        goto LABEL_1526;
      if (!(_DWORD)v881)
        goto LABEL_1532;
      v882 = 0;
      do
      {
        if (!v875
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2035;
        }
        for (ii = 0; ii != v881; ++ii)
          sub_20B512EB0(v364, &v875[ii]);
        v875 += v874;
        ++v882;
      }
      while (v882 != v873 - 1);
LABEL_1526:
      if ((_DWORD)v881 && !v875)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2035:
          abort();
        }
        v875 = 0;
      }
      if ((_DWORD)v881)
      {
        do
        {
          sub_20B512EB0(v364, v875++);
          --v881;
        }
        while (v881);
      }
LABEL_1532:
      v884 = v1115;
      v1115 = 0;
      if (v884)
        (*(void (**)(uint64_t))(*(_QWORD *)v884 + 8))(v884);
      v484 = v1102;
      if (!v1102)
        return;
      v885 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v885);
      while (__stlxr(v486 - 1, v885));
      goto LABEL_2025;
    case 34:
      sub_20B37DA94(a3, (uint64_t)&v1101);
      v245 = *a2;
      v246 = v1111;
      v247 = v1101;
      if (!v1101)
        goto LABEL_1174;
      v248 = v1102;
      if (v1102)
      {
        v249 = (unint64_t *)&v1102->__shared_owners_;
        do
          v250 = __ldxr(v249);
        while (__stxr(v250 + 1, v249));
        do
          v251 = __ldaxr(v249);
        while (__stlxr(v251 - 1, v249));
        if (!v251)
        {
          ((void (*)(std::__shared_weak_count *))v248->__on_zero_shared)(v248);
          std::__shared_weak_count::__release_weak(v248);
        }
        v247 = v1101;
        v252 = v1102;
        if (v1102)
        {
          v253 = (unint64_t *)&v1102->__shared_owners_;
          do
            v254 = __ldxr(v253);
          while (__stxr(v254 + 1, v253));
          do
            v255 = __ldaxr(v253);
          while (__stlxr(v255 - 1, v253));
          if (!v255)
          {
            ((void (*)(std::__shared_weak_count *))v252->__on_zero_shared)(v252);
            std::__shared_weak_count::__release_weak(v252);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v247 + 96))(&v1114, v247, 0);
      else
LABEL_1174:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1964;
      if (!v1105)
        goto LABEL_1964;
      v720 = v1106;
      if (!v1106)
        goto LABEL_1964;
      v721 = v1110;
      v722 = v1103;
      if (v1112 && v1103)
      {
        v723 = v1101;
        v724 = v1102;
        if (v1102)
        {
          v725 = (unint64_t *)&v1102->__shared_owners_;
          do
            v726 = __ldxr(v725);
          while (__stxr(v726 + 1, v725));
          do
            v727 = __ldaxr(v725);
          while (__stlxr(v727 - 1, v725));
          if (!v727)
          {
            ((void (*)(std::__shared_weak_count *))v724->__on_zero_shared)(v724);
            std::__shared_weak_count::__release_weak(v724);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v723 + 88))(v723, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v722 = v1103;
      }
      v728 = (4 * v246);
      if (v720 == 1)
        goto LABEL_1197;
      if ((_DWORD)v728)
      {
        v729 = 0;
        do
        {
          if (!v722
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2050;
          }
          v730 = 0;
          v731 = *(_QWORD *)(v245 + 40);
          do
          {
            if (v731)
            {
              v732 = *(_QWORD **)(v245 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v245 + 32);
              sub_20AEC01D0(v732, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v731 = *(_QWORD *)(v245 + 40) + 1;
            *(_QWORD *)(v245 + 40) = v731;
            v730 += 2;
          }
          while (2 * v728 != v730);
          v722 += 2 * v721;
          ++v729;
        }
        while (v729 != v720 - 1);
LABEL_1197:
        if ((_DWORD)v728 && !v722)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2050:
            abort();
          }
          v722 = 0;
        }
      }
      else
      {
        v722 += (2 * (v720 - 2) + 2) * v721;
      }
      v1115 = (4 * v246);
      v1116 = v722;
      sub_20B513184(v245, &v1115);
LABEL_1964:
      v1061 = v1114;
      v1114 = 0;
      if (v1061)
        (*(void (**)(uint64_t))(*(_QWORD *)v1061 + 8))(v1061);
      v484 = v1102;
      if (!v1102)
        return;
      v1062 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1062);
      while (__stlxr(v486 - 1, v1062));
      goto LABEL_2025;
    case 35:
      sub_20B37E0CC(a3, (uint64_t)&v1101);
      v223 = *a2;
      v224 = v1111;
      v225 = v1101;
      if (!v1101)
        goto LABEL_1120;
      v226 = v1102;
      if (v1102)
      {
        v227 = (unint64_t *)&v1102->__shared_owners_;
        do
          v228 = __ldxr(v227);
        while (__stxr(v228 + 1, v227));
        do
          v229 = __ldaxr(v227);
        while (__stlxr(v229 - 1, v227));
        if (!v229)
        {
          ((void (*)(std::__shared_weak_count *))v226->__on_zero_shared)(v226);
          std::__shared_weak_count::__release_weak(v226);
        }
        v225 = v1101;
        v230 = v1102;
        if (v1102)
        {
          v231 = (unint64_t *)&v1102->__shared_owners_;
          do
            v232 = __ldxr(v231);
          while (__stxr(v232 + 1, v231));
          do
            v233 = __ldaxr(v231);
          while (__stlxr(v233 - 1, v231));
          if (!v233)
          {
            ((void (*)(std::__shared_weak_count *))v230->__on_zero_shared)(v230);
            std::__shared_weak_count::__release_weak(v230);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v225 + 96))(&v1115, v225, 0);
      else
LABEL_1120:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1747;
      if (!v1105)
        goto LABEL_1747;
      v693 = v1106;
      if (!v1106)
        goto LABEL_1747;
      v694 = v1110;
      v695 = v1103;
      if (v1112 && v1103)
      {
        v696 = v1101;
        v697 = v1102;
        if (v1102)
        {
          v698 = (unint64_t *)&v1102->__shared_owners_;
          do
            v699 = __ldxr(v698);
          while (__stxr(v699 + 1, v698));
          do
            v700 = __ldaxr(v698);
          while (__stlxr(v700 - 1, v698));
          if (!v700)
          {
            ((void (*)(std::__shared_weak_count *))v697->__on_zero_shared)(v697);
            std::__shared_weak_count::__release_weak(v697);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v696 + 88))(v696, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v695 = v1103;
      }
      v1095 = (4 * v224);
      if (v693 == 1)
        goto LABEL_1143;
      if (!(4 * v224))
        goto LABEL_1747;
      v701 = 0;
      do
      {
        if (!v695
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1146;
        }
        v702 = 0;
        v703 = *(_QWORD *)(v223 + 40);
        do
        {
          if (v703)
          {
            v704 = *(_QWORD **)(v223 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v223 + 32);
            sub_20AEC01D0(v704, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v223 + 24) + *(_QWORD *)(**(_QWORD **)(v223 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v695[v702];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v703 = *(_QWORD *)(v223 + 40) + 1;
          *(_QWORD *)(v223 + 40) = v703;
          v702 += 2;
        }
        while (2 * v1095 != v702);
        v695 += 2 * v694;
        ++v701;
      }
      while (v701 != v693 - 1);
LABEL_1143:
      if (!(_DWORD)v1095 || v695)
      {
        if (!(_DWORD)v1095)
          goto LABEL_1747;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1146:
        abort();
      }
      v996 = *(_QWORD *)(v223 + 40);
      v997 = 2 * v1095;
      do
      {
        if (v996)
        {
          v998 = *(_QWORD **)(v223 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v223 + 32);
          sub_20AEC01D0(v998, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v223 + 24) + *(_QWORD *)(**(_QWORD **)(v223 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v695;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v996 = *(_QWORD *)(v223 + 40) + 1;
        *(_QWORD *)(v223 + 40) = v996;
        v695 += 2;
        v997 -= 2;
      }
      while (v997);
LABEL_1747:
      v1001 = v1115;
      v1115 = 0;
      if (v1001)
        (*(void (**)(uint64_t))(*(_QWORD *)v1001 + 8))(v1001);
      v484 = v1102;
      if (!v1102)
        return;
      v1002 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1002);
      while (__stlxr(v486 - 1, v1002));
      goto LABEL_2025;
    case 36:
      sub_20B37E704(a3, (uint64_t)&v1101);
      v212 = *a2;
      v213 = v1111;
      v214 = v1101;
      if (!v1101)
        goto LABEL_1093;
      v215 = v1102;
      if (v1102)
      {
        v216 = (unint64_t *)&v1102->__shared_owners_;
        do
          v217 = __ldxr(v216);
        while (__stxr(v217 + 1, v216));
        do
          v218 = __ldaxr(v216);
        while (__stlxr(v218 - 1, v216));
        if (!v218)
        {
          ((void (*)(std::__shared_weak_count *))v215->__on_zero_shared)(v215);
          std::__shared_weak_count::__release_weak(v215);
        }
        v214 = v1101;
        v219 = v1102;
        if (v1102)
        {
          v220 = (unint64_t *)&v1102->__shared_owners_;
          do
            v221 = __ldxr(v220);
          while (__stxr(v221 + 1, v220));
          do
            v222 = __ldaxr(v220);
          while (__stlxr(v222 - 1, v220));
          if (!v222)
          {
            ((void (*)(std::__shared_weak_count *))v219->__on_zero_shared)(v219);
            std::__shared_weak_count::__release_weak(v219);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v214 + 96))(&v1114, v214, 0);
      else
LABEL_1093:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1948;
      if (!v1105)
        goto LABEL_1948;
      v680 = v1106;
      if (!v1106)
        goto LABEL_1948;
      v681 = v1110;
      v682 = v1103;
      if (v1112 && v1103)
      {
        v683 = v1101;
        v684 = v1102;
        if (v1102)
        {
          v685 = (unint64_t *)&v1102->__shared_owners_;
          do
            v686 = __ldxr(v685);
          while (__stxr(v686 + 1, v685));
          do
            v687 = __ldaxr(v685);
          while (__stlxr(v687 - 1, v685));
          if (!v687)
          {
            ((void (*)(std::__shared_weak_count *))v684->__on_zero_shared)(v684);
            std::__shared_weak_count::__release_weak(v684);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v683 + 88))(v683, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v682 = v1103;
      }
      v688 = (4 * v213);
      if (v680 == 1)
        goto LABEL_1116;
      if ((_DWORD)v688)
      {
        v689 = 0;
        do
        {
          if (!v682
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2045;
          }
          v690 = 0;
          v691 = *(_QWORD *)(v212 + 40);
          do
          {
            if (v691)
            {
              v692 = *(_QWORD **)(v212 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v212 + 32);
              sub_20AEC01D0(v692, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v212 + 24) + *(_QWORD *)(**(_QWORD **)(v212 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v691 = *(_QWORD *)(v212 + 40) + 1;
            *(_QWORD *)(v212 + 40) = v691;
            v690 += 4;
          }
          while (4 * v688 != v690);
          v682 += 4 * v681;
          ++v689;
        }
        while (v689 != v680 - 1);
LABEL_1116:
        if ((_DWORD)v688 && !v682)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2045:
            abort();
          }
          v682 = 0;
        }
      }
      else
      {
        v682 += (4 * (v680 - 2) + 4) * v681;
      }
      v1115 = v688;
      v1116 = v682;
      sub_20B513208(v212, &v1115);
LABEL_1948:
      v1057 = v1114;
      v1114 = 0;
      if (v1057)
        (*(void (**)(uint64_t))(*(_QWORD *)v1057 + 8))(v1057);
      v484 = v1102;
      if (!v1102)
        return;
      v1058 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1058);
      while (__stlxr(v486 - 1, v1058));
      goto LABEL_2025;
    case 37:
      sub_20B37ED3C(a3, (uint64_t)&v1101);
      v332 = *a2;
      v333 = v1111;
      v334 = v1101;
      if (!v1101)
        goto LABEL_1421;
      v335 = v1102;
      if (v1102)
      {
        v336 = (unint64_t *)&v1102->__shared_owners_;
        do
          v337 = __ldxr(v336);
        while (__stxr(v337 + 1, v336));
        do
          v338 = __ldaxr(v336);
        while (__stlxr(v338 - 1, v336));
        if (!v338)
        {
          ((void (*)(std::__shared_weak_count *))v335->__on_zero_shared)(v335);
          std::__shared_weak_count::__release_weak(v335);
        }
        v334 = v1101;
        v339 = v1102;
        if (v1102)
        {
          v340 = (unint64_t *)&v1102->__shared_owners_;
          do
            v341 = __ldxr(v340);
          while (__stxr(v341 + 1, v340));
          do
            v342 = __ldaxr(v340);
          while (__stlxr(v342 - 1, v340));
          if (!v342)
          {
            ((void (*)(std::__shared_weak_count *))v339->__on_zero_shared)(v339);
            std::__shared_weak_count::__release_weak(v339);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v334 + 96))(&v1115, v334, 0);
      else
LABEL_1421:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1448;
      if (!v1105)
        goto LABEL_1448;
      v834 = v1106;
      if (!v1106)
        goto LABEL_1448;
      v835 = v1110;
      v836 = v1103;
      if (v1112 && v1103)
      {
        v837 = v1101;
        v838 = v1102;
        if (v1102)
        {
          v839 = (unint64_t *)&v1102->__shared_owners_;
          do
            v840 = __ldxr(v839);
          while (__stxr(v840 + 1, v839));
          do
            v841 = __ldaxr(v839);
          while (__stlxr(v841 - 1, v839));
          if (!v841)
          {
            ((void (*)(std::__shared_weak_count *))v838->__on_zero_shared)(v838);
            std::__shared_weak_count::__release_weak(v838);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v837 + 88))(v837, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v836 = v1103;
      }
      v842 = (4 * v333);
      if (v834 == 1)
        goto LABEL_1442;
      if (!(_DWORD)v842)
        goto LABEL_1448;
      v843 = 0;
      do
      {
        if (!v836
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2034;
        }
        for (jj = 0; jj != v842; ++jj)
          sub_20B512EB0(v332, &v836[jj]);
        v836 += v835;
        ++v843;
      }
      while (v843 != v834 - 1);
LABEL_1442:
      if ((_DWORD)v842 && !v836)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2034:
          abort();
        }
        v836 = 0;
      }
      if ((_DWORD)v842)
      {
        do
        {
          sub_20B512EB0(v332, v836++);
          --v842;
        }
        while (v842);
      }
LABEL_1448:
      v845 = v1115;
      v1115 = 0;
      if (v845)
        (*(void (**)(uint64_t))(*(_QWORD *)v845 + 8))(v845);
      v484 = v1102;
      if (!v1102)
        return;
      v846 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v846);
      while (__stlxr(v486 - 1, v846));
      goto LABEL_2025;
    case 38:
      sub_20B37F370(a3, (uint64_t)&v1101);
      v386 = *a2;
      v387 = v1111;
      v388 = v1101;
      if (!v1101)
        goto LABEL_1562;
      v389 = v1102;
      if (v1102)
      {
        v390 = (unint64_t *)&v1102->__shared_owners_;
        do
          v391 = __ldxr(v390);
        while (__stxr(v391 + 1, v390));
        do
          v392 = __ldaxr(v390);
        while (__stlxr(v392 - 1, v390));
        if (!v392)
        {
          ((void (*)(std::__shared_weak_count *))v389->__on_zero_shared)(v389);
          std::__shared_weak_count::__release_weak(v389);
        }
        v388 = v1101;
        v393 = v1102;
        if (v1102)
        {
          v394 = (unint64_t *)&v1102->__shared_owners_;
          do
            v395 = __ldxr(v394);
          while (__stxr(v395 + 1, v394));
          do
            v396 = __ldaxr(v394);
          while (__stlxr(v396 - 1, v394));
          if (!v396)
          {
            ((void (*)(std::__shared_weak_count *))v393->__on_zero_shared)(v393);
            std::__shared_weak_count::__release_weak(v393);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v388 + 96))(&v1114, v388, 0);
      else
LABEL_1562:
        v1114 = 0;
      if (!v1104)
        goto LABEL_2020;
      if (!v1105)
        goto LABEL_2020;
      v898 = v1106;
      if (!v1106)
        goto LABEL_2020;
      v899 = v1110;
      v900 = v1103;
      if (v1112 && v1103)
      {
        v901 = v1101;
        v902 = v1102;
        if (v1102)
        {
          v903 = (unint64_t *)&v1102->__shared_owners_;
          do
            v904 = __ldxr(v903);
          while (__stxr(v904 + 1, v903));
          do
            v905 = __ldaxr(v903);
          while (__stlxr(v905 - 1, v903));
          if (!v905)
          {
            ((void (*)(std::__shared_weak_count *))v902->__on_zero_shared)(v902);
            std::__shared_weak_count::__release_weak(v902);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v901 + 88))(v901, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v900 = v1103;
      }
      v906 = (4 * v387);
      if (v898 == 1)
        goto LABEL_1585;
      if ((_DWORD)v906)
      {
        v907 = 0;
        do
        {
          if (!v900
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2056;
          }
          v908 = 0;
          v909 = *(_QWORD *)(v386 + 40);
          do
          {
            if (v909)
            {
              v910 = *(_QWORD **)(v386 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v386 + 32);
              sub_20AEC01D0(v910, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v909 = *(_QWORD *)(v386 + 40) + 1;
            *(_QWORD *)(v386 + 40) = v909;
            v908 += 2;
          }
          while (2 * v906 != v908);
          v900 += 2 * v899;
          ++v907;
        }
        while (v907 != v898 - 1);
LABEL_1585:
        if ((_DWORD)v906 && !v900)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2056:
            abort();
          }
          v900 = 0;
        }
      }
      else
      {
        v900 += (2 * (v898 - 2) + 2) * v899;
      }
      v1115 = (4 * v387);
      v1116 = v900;
      sub_20B513184(v386, &v1115);
LABEL_2020:
      v1075 = v1114;
      v1114 = 0;
      if (v1075)
        (*(void (**)(uint64_t))(*(_QWORD *)v1075 + 8))(v1075);
      v484 = v1102;
      if (!v1102)
        return;
      v1076 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1076);
      while (__stlxr(v486 - 1, v1076));
      goto LABEL_2025;
    case 39:
      sub_20B37F9A8(a3, (uint64_t)&v1101);
      v135 = *a2;
      v136 = v1111;
      v137 = v1101;
      if (!v1101)
        goto LABEL_908;
      v138 = v1102;
      if (v1102)
      {
        v139 = (unint64_t *)&v1102->__shared_owners_;
        do
          v140 = __ldxr(v139);
        while (__stxr(v140 + 1, v139));
        do
          v141 = __ldaxr(v139);
        while (__stlxr(v141 - 1, v139));
        if (!v141)
        {
          ((void (*)(std::__shared_weak_count *))v138->__on_zero_shared)(v138);
          std::__shared_weak_count::__release_weak(v138);
        }
        v137 = v1101;
        v142 = v1102;
        if (v1102)
        {
          v143 = (unint64_t *)&v1102->__shared_owners_;
          do
            v144 = __ldxr(v143);
          while (__stxr(v144 + 1, v143));
          do
            v145 = __ldaxr(v143);
          while (__stlxr(v145 - 1, v143));
          if (!v145)
          {
            ((void (*)(std::__shared_weak_count *))v142->__on_zero_shared)(v142);
            std::__shared_weak_count::__release_weak(v142);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v137 + 96))(&v1115, v137, 0);
      else
LABEL_908:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1725;
      if (!v1105)
        goto LABEL_1725;
      v589 = v1106;
      if (!v1106)
        goto LABEL_1725;
      v590 = v1110;
      v591 = v1103;
      if (v1112 && v1103)
      {
        v592 = v1101;
        v593 = v1102;
        if (v1102)
        {
          v594 = (unint64_t *)&v1102->__shared_owners_;
          do
            v595 = __ldxr(v594);
          while (__stxr(v595 + 1, v594));
          do
            v596 = __ldaxr(v594);
          while (__stlxr(v596 - 1, v594));
          if (!v596)
          {
            ((void (*)(std::__shared_weak_count *))v593->__on_zero_shared)(v593);
            std::__shared_weak_count::__release_weak(v593);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v592 + 88))(v592, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v591 = v1103;
      }
      v1092 = (4 * v136);
      if (v589 == 1)
        goto LABEL_931;
      if (!(4 * v136))
        goto LABEL_1725;
      v597 = 0;
      do
      {
        if (!v591
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_934;
        }
        v598 = 0;
        v599 = *(_QWORD *)(v135 + 40);
        do
        {
          if (v599)
          {
            v600 = *(_QWORD **)(v135 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v135 + 32);
            sub_20AEC01D0(v600, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v135 + 24) + *(_QWORD *)(**(_QWORD **)(v135 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v591[v598];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v599 = *(_QWORD *)(v135 + 40) + 1;
          *(_QWORD *)(v135 + 40) = v599;
          v598 += 2;
        }
        while (2 * v1092 != v598);
        v591 += 2 * v590;
        ++v597;
      }
      while (v597 != v589 - 1);
LABEL_931:
      if (!(_DWORD)v1092 || v591)
      {
        if (!(_DWORD)v1092)
          goto LABEL_1725;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_934:
        abort();
      }
      v982 = *(_QWORD *)(v135 + 40);
      v983 = 2 * v1092;
      do
      {
        if (v982)
        {
          v984 = *(_QWORD **)(v135 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v135 + 32);
          sub_20AEC01D0(v984, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v135 + 24) + *(_QWORD *)(**(_QWORD **)(v135 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v591;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v982 = *(_QWORD *)(v135 + 40) + 1;
        *(_QWORD *)(v135 + 40) = v982;
        v591 += 2;
        v983 -= 2;
      }
      while (v983);
LABEL_1725:
      v987 = v1115;
      v1115 = 0;
      if (v987)
        (*(void (**)(uint64_t))(*(_QWORD *)v987 + 8))(v987);
      v484 = v1102;
      if (!v1102)
        return;
      v988 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v988);
      while (__stlxr(v486 - 1, v988));
      goto LABEL_2025;
    case 40:
      sub_20B37FFE0(a3, (uint64_t)&v1101);
      v102 = *a2;
      v103 = v1111;
      v104 = v1101;
      if (!v1101)
        goto LABEL_830;
      v105 = v1102;
      if (v1102)
      {
        v106 = (unint64_t *)&v1102->__shared_owners_;
        do
          v107 = __ldxr(v106);
        while (__stxr(v107 + 1, v106));
        do
          v108 = __ldaxr(v106);
        while (__stlxr(v108 - 1, v106));
        if (!v108)
        {
          ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
          std::__shared_weak_count::__release_weak(v105);
        }
        v104 = v1101;
        v109 = v1102;
        if (v1102)
        {
          v110 = (unint64_t *)&v1102->__shared_owners_;
          do
            v111 = __ldxr(v110);
          while (__stxr(v111 + 1, v110));
          do
            v112 = __ldaxr(v110);
          while (__stlxr(v112 - 1, v110));
          if (!v112)
          {
            ((void (*)(std::__shared_weak_count *))v109->__on_zero_shared)(v109);
            std::__shared_weak_count::__release_weak(v109);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v104 + 96))(&v1114, v104, 0);
      else
LABEL_830:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1892;
      if (!v1105)
        goto LABEL_1892;
      v550 = v1106;
      if (!v1106)
        goto LABEL_1892;
      v551 = v1110;
      v552 = v1103;
      if (v1112 && v1103)
      {
        v553 = v1101;
        v554 = v1102;
        if (v1102)
        {
          v555 = (unint64_t *)&v1102->__shared_owners_;
          do
            v556 = __ldxr(v555);
          while (__stxr(v556 + 1, v555));
          do
            v557 = __ldaxr(v555);
          while (__stlxr(v557 - 1, v555));
          if (!v557)
          {
            ((void (*)(std::__shared_weak_count *))v554->__on_zero_shared)(v554);
            std::__shared_weak_count::__release_weak(v554);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v553 + 88))(v553, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v552 = v1103;
      }
      v558 = (4 * v103);
      if (v550 == 1)
        goto LABEL_853;
      if ((_DWORD)v558)
      {
        v559 = 0;
        do
        {
          if (!v552
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2040;
          }
          v560 = 0;
          v561 = *(_QWORD *)(v102 + 40);
          do
          {
            if (v561)
            {
              v562 = *(_QWORD **)(v102 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v102 + 32);
              sub_20AEC01D0(v562, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v102 + 24) + *(_QWORD *)(**(_QWORD **)(v102 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v561 = *(_QWORD *)(v102 + 40) + 1;
            *(_QWORD *)(v102 + 40) = v561;
            v560 += 4;
          }
          while (4 * v558 != v560);
          v552 += 4 * v551;
          ++v559;
        }
        while (v559 != v550 - 1);
LABEL_853:
        if ((_DWORD)v558 && !v552)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2040:
            abort();
          }
          v552 = 0;
        }
      }
      else
      {
        v552 += (4 * (v550 - 2) + 4) * v551;
      }
      v1115 = v558;
      v1116 = v552;
      sub_20B513208(v102, &v1115);
LABEL_1892:
      v1043 = v1114;
      v1114 = 0;
      if (v1043)
        (*(void (**)(uint64_t))(*(_QWORD *)v1043 + 8))(v1043);
      v484 = v1102;
      if (!v1102)
        return;
      v1044 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1044);
      while (__stlxr(v486 - 1, v1044));
      goto LABEL_2025;
    default:
      return;
  }
}

void sub_20B3D4FB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  unint64_t *p_shared_owners;
  unint64_t v24;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v24 = __ldaxr(p_shared_owners);
    while (__stlxr(v24 - 1, p_shared_owners));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_20B3D5C04(int a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  std::__shared_weak_count *v94;
  unint64_t *v95;
  unint64_t v96;
  unint64_t v97;
  std::__shared_weak_count *v98;
  unint64_t *v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  std::__shared_weak_count *v105;
  unint64_t *v106;
  unint64_t v107;
  unint64_t v108;
  std::__shared_weak_count *v109;
  unint64_t *v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  std::__shared_weak_count *v116;
  unint64_t *v117;
  unint64_t v118;
  unint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  unint64_t v130;
  std::__shared_weak_count *v131;
  unint64_t *v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  std::__shared_weak_count *v138;
  unint64_t *v139;
  unint64_t v140;
  unint64_t v141;
  std::__shared_weak_count *v142;
  unint64_t *v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  std::__shared_weak_count *v149;
  unint64_t *v150;
  unint64_t v151;
  unint64_t v152;
  std::__shared_weak_count *v153;
  unint64_t *v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  std::__shared_weak_count *v160;
  unint64_t *v161;
  unint64_t v162;
  unint64_t v163;
  std::__shared_weak_count *v164;
  unint64_t *v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  std::__shared_weak_count *v171;
  unint64_t *v172;
  unint64_t v173;
  unint64_t v174;
  std::__shared_weak_count *v175;
  unint64_t *v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  std::__shared_weak_count *v182;
  unint64_t *v183;
  unint64_t v184;
  unint64_t v185;
  std::__shared_weak_count *v186;
  unint64_t *v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  std::__shared_weak_count *v193;
  unint64_t *v194;
  unint64_t v195;
  unint64_t v196;
  std::__shared_weak_count *v197;
  unint64_t *v198;
  unint64_t v199;
  unint64_t v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  std::__shared_weak_count *v204;
  unint64_t *v205;
  unint64_t v206;
  unint64_t v207;
  std::__shared_weak_count *v208;
  unint64_t *v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  int v213;
  uint64_t v214;
  std::__shared_weak_count *v215;
  unint64_t *v216;
  unint64_t v217;
  unint64_t v218;
  std::__shared_weak_count *v219;
  unint64_t *v220;
  unint64_t v221;
  unint64_t v222;
  uint64_t v223;
  int v224;
  uint64_t v225;
  std::__shared_weak_count *v226;
  unint64_t *v227;
  unint64_t v228;
  unint64_t v229;
  std::__shared_weak_count *v230;
  unint64_t *v231;
  unint64_t v232;
  unint64_t v233;
  uint64_t v234;
  int v235;
  uint64_t v236;
  std::__shared_weak_count *v237;
  unint64_t *v238;
  unint64_t v239;
  unint64_t v240;
  std::__shared_weak_count *v241;
  unint64_t *v242;
  unint64_t v243;
  unint64_t v244;
  uint64_t v245;
  int v246;
  uint64_t v247;
  std::__shared_weak_count *v248;
  unint64_t *v249;
  unint64_t v250;
  unint64_t v251;
  std::__shared_weak_count *v252;
  unint64_t *v253;
  unint64_t v254;
  unint64_t v255;
  uint64_t v256;
  int v257;
  uint64_t v258;
  std::__shared_weak_count *v259;
  unint64_t *v260;
  unint64_t v261;
  unint64_t v262;
  std::__shared_weak_count *v263;
  unint64_t *v264;
  unint64_t v265;
  unint64_t v266;
  uint64_t v267;
  int v268;
  uint64_t v269;
  std::__shared_weak_count *v270;
  unint64_t *v271;
  unint64_t v272;
  unint64_t v273;
  std::__shared_weak_count *v274;
  unint64_t *v275;
  unint64_t v276;
  unint64_t v277;
  uint64_t v278;
  int v279;
  uint64_t v280;
  std::__shared_weak_count *v281;
  unint64_t *v282;
  unint64_t v283;
  unint64_t v284;
  std::__shared_weak_count *v285;
  unint64_t *v286;
  unint64_t v287;
  unint64_t v288;
  uint64_t v289;
  int v290;
  uint64_t v291;
  std::__shared_weak_count *v292;
  unint64_t *v293;
  unint64_t v294;
  unint64_t v295;
  std::__shared_weak_count *v296;
  unint64_t *v297;
  unint64_t v298;
  unint64_t v299;
  uint64_t v300;
  int v301;
  uint64_t v302;
  std::__shared_weak_count *v303;
  unint64_t *v304;
  unint64_t v305;
  unint64_t v306;
  std::__shared_weak_count *v307;
  unint64_t *v308;
  unint64_t v309;
  unint64_t v310;
  uint64_t v311;
  uint64_t v312;
  std::__shared_weak_count *v313;
  unint64_t *v314;
  unint64_t v315;
  unint64_t v316;
  std::__shared_weak_count *v317;
  unint64_t *v318;
  unint64_t v319;
  unint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  std::__shared_weak_count *v324;
  unint64_t *v325;
  unint64_t v326;
  unint64_t v327;
  std::__shared_weak_count *v328;
  unint64_t *v329;
  unint64_t v330;
  unint64_t v331;
  uint64_t v332;
  int v333;
  uint64_t v334;
  std::__shared_weak_count *v335;
  unint64_t *v336;
  unint64_t v337;
  unint64_t v338;
  std::__shared_weak_count *v339;
  unint64_t *v340;
  unint64_t v341;
  unint64_t v342;
  uint64_t v343;
  uint64_t v344;
  std::__shared_weak_count *v345;
  unint64_t *v346;
  unint64_t v347;
  unint64_t v348;
  std::__shared_weak_count *v349;
  unint64_t *v350;
  unint64_t v351;
  unint64_t v352;
  uint64_t v353;
  int v354;
  uint64_t v355;
  std::__shared_weak_count *v356;
  unint64_t *v357;
  unint64_t v358;
  unint64_t v359;
  std::__shared_weak_count *v360;
  unint64_t *v361;
  unint64_t v362;
  unint64_t v363;
  uint64_t v364;
  int v365;
  uint64_t v366;
  std::__shared_weak_count *v367;
  unint64_t *v368;
  unint64_t v369;
  unint64_t v370;
  std::__shared_weak_count *v371;
  unint64_t *v372;
  unint64_t v373;
  unint64_t v374;
  uint64_t v375;
  int v376;
  uint64_t v377;
  std::__shared_weak_count *v378;
  unint64_t *v379;
  unint64_t v380;
  unint64_t v381;
  std::__shared_weak_count *v382;
  unint64_t *v383;
  unint64_t v384;
  unint64_t v385;
  uint64_t v386;
  int v387;
  uint64_t v388;
  std::__shared_weak_count *v389;
  unint64_t *v390;
  unint64_t v391;
  unint64_t v392;
  std::__shared_weak_count *v393;
  unint64_t *v394;
  unint64_t v395;
  unint64_t v396;
  uint64_t v397;
  int v398;
  uint64_t v399;
  std::__shared_weak_count *v400;
  unint64_t *v401;
  unint64_t v402;
  unint64_t v403;
  std::__shared_weak_count *v404;
  unint64_t *v405;
  unint64_t v406;
  unint64_t v407;
  uint64_t v408;
  int v409;
  uint64_t v410;
  std::__shared_weak_count *v411;
  unint64_t *v412;
  unint64_t v413;
  unint64_t v414;
  std::__shared_weak_count *v415;
  unint64_t *v416;
  unint64_t v417;
  unint64_t v418;
  uint64_t v419;
  uint64_t v420;
  std::__shared_weak_count *v421;
  unint64_t *v422;
  unint64_t v423;
  unint64_t v424;
  std::__shared_weak_count *v425;
  unint64_t *v426;
  unint64_t v427;
  unint64_t v428;
  uint64_t v429;
  int v430;
  uint64_t v431;
  std::__shared_weak_count *v432;
  unint64_t *v433;
  unint64_t v434;
  unint64_t v435;
  std::__shared_weak_count *v436;
  unint64_t *v437;
  unint64_t v438;
  unint64_t v439;
  int v440;
  uint64_t v441;
  unsigned __int8 *v442;
  uint64_t v443;
  std::__shared_weak_count *v444;
  unint64_t *v445;
  unint64_t v446;
  unint64_t v447;
  int v448;
  uint64_t v449;
  uint64_t v450;
  _QWORD *v451;
  int v458;
  uint64_t v459;
  unsigned __int8 *v460;
  uint64_t v461;
  std::__shared_weak_count *v462;
  unint64_t *v463;
  unint64_t v464;
  unint64_t v465;
  int v466;
  uint64_t v467;
  uint64_t v468;
  _QWORD *v469;
  int v472;
  uint64_t v473;
  unsigned __int8 *v474;
  uint64_t v475;
  std::__shared_weak_count *v476;
  unint64_t *v477;
  unint64_t v478;
  unint64_t v479;
  uint64_t v480;
  int v481;
  uint64_t m;
  uint64_t v483;
  std::__shared_weak_count *v484;
  unint64_t *v485;
  unint64_t v486;
  int v487;
  uint64_t v488;
  unsigned __int8 *v489;
  uint64_t v490;
  std::__shared_weak_count *v491;
  unint64_t *v492;
  unint64_t v493;
  unint64_t v494;
  int v495;
  uint64_t v496;
  uint64_t v497;
  _QWORD *v498;
  int v499;
  uint64_t v500;
  unsigned __int8 *v501;
  uint64_t v502;
  std::__shared_weak_count *v503;
  unint64_t *v504;
  unint64_t v505;
  unint64_t v506;
  uint64_t v507;
  int v508;
  uint64_t n;
  uint64_t v510;
  unint64_t *v511;
  int v512;
  uint64_t v513;
  unsigned __int8 *v514;
  uint64_t v515;
  std::__shared_weak_count *v516;
  unint64_t *v517;
  unint64_t v518;
  unint64_t v519;
  int v520;
  uint64_t v521;
  uint64_t v522;
  _QWORD *v523;
  int v524;
  uint64_t v525;
  unsigned __int8 *v526;
  uint64_t v527;
  std::__shared_weak_count *v528;
  unint64_t *v529;
  unint64_t v530;
  unint64_t v531;
  uint64_t v532;
  int v533;
  uint64_t v534;
  uint64_t v535;
  _QWORD *v536;
  int v537;
  uint64_t v538;
  unsigned __int8 *v539;
  uint64_t v540;
  std::__shared_weak_count *v541;
  unint64_t *v542;
  unint64_t v543;
  unint64_t v544;
  uint64_t v545;
  int v546;
  uint64_t k;
  uint64_t v548;
  unint64_t *v549;
  int v550;
  uint64_t v551;
  unsigned __int8 *v552;
  uint64_t v553;
  std::__shared_weak_count *v554;
  unint64_t *v555;
  unint64_t v556;
  unint64_t v557;
  uint64_t v558;
  int v559;
  uint64_t v560;
  uint64_t v561;
  _QWORD *v562;
  int v563;
  uint64_t v564;
  unsigned __int8 *v565;
  uint64_t v566;
  std::__shared_weak_count *v567;
  unint64_t *v568;
  unint64_t v569;
  unint64_t v570;
  int v571;
  uint64_t v572;
  uint64_t v573;
  _QWORD *v574;
  int v575;
  uint64_t v576;
  unsigned __int8 *v577;
  uint64_t v578;
  std::__shared_weak_count *v579;
  unint64_t *v580;
  unint64_t v581;
  unint64_t v582;
  int v583;
  uint64_t v584;
  uint64_t v585;
  _QWORD *v586;
  int v589;
  uint64_t v590;
  unsigned __int8 *v591;
  uint64_t v592;
  std::__shared_weak_count *v593;
  unint64_t *v594;
  unint64_t v595;
  unint64_t v596;
  int v597;
  uint64_t v598;
  uint64_t v599;
  _QWORD *v600;
  int v603;
  uint64_t v604;
  unsigned __int8 *v605;
  uint64_t v606;
  std::__shared_weak_count *v607;
  unint64_t *v608;
  unint64_t v609;
  unint64_t v610;
  int v611;
  uint64_t v612;
  uint64_t v613;
  _QWORD *v614;
  int v615;
  uint64_t v616;
  unsigned __int8 *v617;
  uint64_t v618;
  std::__shared_weak_count *v619;
  unint64_t *v620;
  unint64_t v621;
  unint64_t v622;
  uint64_t v623;
  int v624;
  uint64_t v625;
  uint64_t v626;
  _QWORD *v627;
  int v628;
  uint64_t v629;
  unsigned __int8 *v630;
  uint64_t v631;
  std::__shared_weak_count *v632;
  unint64_t *v633;
  unint64_t v634;
  unint64_t v635;
  int v636;
  uint64_t v637;
  uint64_t v638;
  _QWORD *v639;
  int v642;
  uint64_t v643;
  unsigned __int8 *v644;
  uint64_t v645;
  std::__shared_weak_count *v646;
  unint64_t *v647;
  unint64_t v648;
  unint64_t v649;
  uint64_t v650;
  int v651;
  uint64_t v652;
  uint64_t v653;
  _QWORD *v654;
  int v655;
  uint64_t v656;
  unsigned __int8 *v657;
  uint64_t v658;
  std::__shared_weak_count *v659;
  unint64_t *v660;
  unint64_t v661;
  unint64_t v662;
  int v663;
  uint64_t v664;
  uint64_t v665;
  _QWORD *v666;
  int v667;
  uint64_t v668;
  unsigned __int8 *v669;
  uint64_t v670;
  std::__shared_weak_count *v671;
  unint64_t *v672;
  unint64_t v673;
  unint64_t v674;
  uint64_t v675;
  int v676;
  uint64_t v677;
  uint64_t v678;
  _QWORD *v679;
  int v680;
  uint64_t v681;
  unsigned __int8 *v682;
  uint64_t v683;
  std::__shared_weak_count *v684;
  unint64_t *v685;
  unint64_t v686;
  unint64_t v687;
  uint64_t v688;
  int v689;
  uint64_t v690;
  uint64_t v691;
  _QWORD *v692;
  int v693;
  uint64_t v694;
  unsigned __int8 *v695;
  uint64_t v696;
  std::__shared_weak_count *v697;
  unint64_t *v698;
  unint64_t v699;
  unint64_t v700;
  int v701;
  uint64_t v702;
  uint64_t v703;
  _QWORD *v704;
  int v707;
  uint64_t v708;
  unsigned __int8 *v709;
  uint64_t v710;
  std::__shared_weak_count *v711;
  unint64_t *v712;
  unint64_t v713;
  unint64_t v714;
  uint64_t v715;
  int v716;
  uint64_t v717;
  uint64_t v718;
  _QWORD *v719;
  int v720;
  uint64_t v721;
  unsigned __int8 *v722;
  uint64_t v723;
  std::__shared_weak_count *v724;
  unint64_t *v725;
  unint64_t v726;
  unint64_t v727;
  uint64_t v728;
  int v729;
  uint64_t v730;
  uint64_t v731;
  _QWORD *v732;
  int v733;
  uint64_t v734;
  unsigned __int8 *v735;
  uint64_t v736;
  std::__shared_weak_count *v737;
  unint64_t *v738;
  unint64_t v739;
  unint64_t v740;
  uint64_t v741;
  int v742;
  uint64_t v743;
  uint64_t v744;
  _QWORD *v745;
  int v746;
  uint64_t v747;
  unsigned __int8 *v748;
  uint64_t v749;
  std::__shared_weak_count *v750;
  unint64_t *v751;
  unint64_t v752;
  unint64_t v753;
  uint64_t v754;
  int v755;
  uint64_t v756;
  int v757;
  uint64_t v758;
  unsigned __int8 *v759;
  uint64_t v760;
  std::__shared_weak_count *v761;
  unint64_t *v762;
  unint64_t v763;
  unint64_t v764;
  uint64_t v765;
  int v766;
  uint64_t j;
  uint64_t v768;
  unint64_t *v769;
  int v770;
  uint64_t v771;
  unsigned __int8 *v772;
  uint64_t v773;
  std::__shared_weak_count *v774;
  unint64_t *v775;
  unint64_t v776;
  unint64_t v777;
  uint64_t v778;
  int v779;
  uint64_t v780;
  uint64_t v781;
  _QWORD *v782;
  int v783;
  uint64_t v784;
  unsigned __int8 *v785;
  uint64_t v786;
  std::__shared_weak_count *v787;
  unint64_t *v788;
  unint64_t v789;
  unint64_t v790;
  uint64_t v791;
  int v792;
  uint64_t v793;
  uint64_t v794;
  _QWORD *v795;
  int v796;
  uint64_t v797;
  unsigned __int8 *v798;
  uint64_t v799;
  std::__shared_weak_count *v800;
  unint64_t *v801;
  unint64_t v802;
  unint64_t v803;
  int v804;
  uint64_t v805;
  uint64_t v806;
  _QWORD *v807;
  int v810;
  uint64_t v811;
  unsigned __int8 *v812;
  uint64_t v813;
  std::__shared_weak_count *v814;
  unint64_t *v815;
  unint64_t v816;
  unint64_t v817;
  int v818;
  uint64_t v819;
  uint64_t v820;
  _QWORD *v821;
  int v822;
  uint64_t v823;
  unsigned __int8 *v824;
  uint64_t v825;
  std::__shared_weak_count *v826;
  unint64_t *v827;
  unint64_t v828;
  unint64_t v829;
  int v830;
  uint64_t i;
  uint64_t v832;
  unint64_t *v833;
  int v834;
  uint64_t v835;
  unsigned __int8 *v836;
  uint64_t v837;
  std::__shared_weak_count *v838;
  unint64_t *v839;
  unint64_t v840;
  unint64_t v841;
  uint64_t v842;
  int v843;
  uint64_t jj;
  uint64_t v845;
  unint64_t *v846;
  int v847;
  uint64_t v848;
  unsigned __int8 *v849;
  uint64_t v850;
  std::__shared_weak_count *v851;
  unint64_t *v852;
  unint64_t v853;
  unint64_t v854;
  int v855;
  uint64_t v856;
  uint64_t v857;
  _QWORD *v858;
  int v861;
  uint64_t v862;
  unsigned __int8 *v863;
  uint64_t v864;
  std::__shared_weak_count *v865;
  unint64_t *v866;
  unint64_t v867;
  unint64_t v868;
  int v869;
  uint64_t v870;
  uint64_t v871;
  _QWORD *v872;
  int v873;
  uint64_t v874;
  unsigned __int8 *v875;
  uint64_t v876;
  std::__shared_weak_count *v877;
  unint64_t *v878;
  unint64_t v879;
  unint64_t v880;
  uint64_t v881;
  int v882;
  uint64_t ii;
  uint64_t v884;
  unint64_t *v885;
  int v886;
  uint64_t v887;
  unsigned __int8 *v888;
  uint64_t v889;
  std::__shared_weak_count *v890;
  unint64_t *v891;
  unint64_t v892;
  unint64_t v893;
  int v894;
  uint64_t v895;
  uint64_t v896;
  _QWORD *v897;
  int v898;
  uint64_t v899;
  unsigned __int8 *v900;
  uint64_t v901;
  std::__shared_weak_count *v902;
  unint64_t *v903;
  unint64_t v904;
  unint64_t v905;
  uint64_t v906;
  int v907;
  uint64_t v908;
  uint64_t v909;
  _QWORD *v910;
  int v911;
  uint64_t v912;
  unsigned __int8 *v913;
  uint64_t v914;
  std::__shared_weak_count *v915;
  unint64_t *v916;
  unint64_t v917;
  unint64_t v918;
  int v919;
  uint64_t v920;
  uint64_t v921;
  _QWORD *v922;
  int v925;
  uint64_t v926;
  unsigned __int8 *v927;
  uint64_t v928;
  std::__shared_weak_count *v929;
  unint64_t *v930;
  unint64_t v931;
  unint64_t v932;
  uint64_t v933;
  int v934;
  uint64_t v935;
  int v936;
  uint64_t v937;
  unsigned __int8 *v938;
  uint64_t v939;
  std::__shared_weak_count *v940;
  unint64_t *v941;
  unint64_t v942;
  unint64_t v943;
  int v944;
  uint64_t v945;
  uint64_t v946;
  _QWORD *v947;
  int v950;
  uint64_t v951;
  unsigned __int8 *v952;
  uint64_t v953;
  std::__shared_weak_count *v954;
  unint64_t *v955;
  unint64_t v956;
  unint64_t v957;
  uint64_t v958;
  int v959;
  uint64_t v960;
  uint64_t v961;
  uint64_t v962;
  _QWORD *v963;
  uint64_t v966;
  unint64_t *v967;
  uint64_t v968;
  uint64_t v969;
  _QWORD *v970;
  uint64_t v973;
  unint64_t *v974;
  uint64_t v975;
  uint64_t v976;
  _QWORD *v977;
  uint64_t v980;
  unint64_t *v981;
  uint64_t v982;
  uint64_t v983;
  _QWORD *v984;
  uint64_t v987;
  unint64_t *v988;
  uint64_t v989;
  uint64_t v990;
  _QWORD *v991;
  uint64_t v994;
  unint64_t *v995;
  uint64_t v996;
  uint64_t v997;
  _QWORD *v998;
  uint64_t v1001;
  unint64_t *v1002;
  uint64_t v1003;
  uint64_t v1004;
  _QWORD *v1005;
  uint64_t v1008;
  unint64_t *v1009;
  uint64_t v1010;
  uint64_t v1011;
  _QWORD *v1012;
  uint64_t v1015;
  unint64_t *v1016;
  uint64_t v1017;
  uint64_t v1018;
  _QWORD *v1019;
  uint64_t v1022;
  unint64_t *v1023;
  uint64_t v1024;
  uint64_t v1025;
  _QWORD *v1026;
  uint64_t v1029;
  unint64_t *v1030;
  uint64_t v1031;
  unint64_t *v1032;
  uint64_t v1033;
  unint64_t *v1034;
  uint64_t v1035;
  unint64_t *v1036;
  uint64_t v1037;
  unint64_t *v1038;
  uint64_t v1039;
  unint64_t *v1040;
  uint64_t v1041;
  unint64_t *v1042;
  uint64_t v1043;
  unint64_t *v1044;
  uint64_t v1045;
  unint64_t *v1046;
  uint64_t v1047;
  unint64_t *v1048;
  uint64_t v1049;
  unint64_t *v1050;
  uint64_t v1051;
  unint64_t *v1052;
  uint64_t v1053;
  unint64_t *v1054;
  uint64_t v1055;
  unint64_t *v1056;
  uint64_t v1057;
  unint64_t *v1058;
  uint64_t v1059;
  unint64_t *v1060;
  uint64_t v1061;
  unint64_t *v1062;
  uint64_t v1063;
  unint64_t *v1064;
  uint64_t v1065;
  unint64_t *v1066;
  uint64_t v1067;
  unint64_t *v1068;
  uint64_t v1069;
  unint64_t *v1070;
  uint64_t v1071;
  unint64_t *v1072;
  uint64_t v1073;
  unint64_t *v1074;
  uint64_t v1075;
  unint64_t *v1076;
  uint64_t v1077;
  int v1078;
  int v1079;
  int v1080;
  int v1081;
  uint64_t v1082;
  int v1083;
  int v1084;
  uint64_t v1085;
  int v1086;
  uint64_t v1087;
  int v1088;
  int v1089;
  uint64_t v1090;
  uint64_t v1091;
  uint64_t v1092;
  uint64_t v1093;
  uint64_t v1094;
  uint64_t v1095;
  int v1096;
  uint64_t v1097;
  uint64_t v1098;
  int v1099;
  int v1100;
  uint64_t v1101;
  std::__shared_weak_count *v1102;
  unsigned __int8 *v1103;
  unsigned int v1104;
  int v1105;
  int v1106;
  unsigned int v1107;
  char v1108;
  char v1109;
  unsigned int v1110;
  int v1111;
  char v1112;
  char v1113;
  uint64_t v1114;
  uint64_t v1115;
  unsigned __int8 *v1116;

  switch(a1)
  {
    case 0:
      sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_20B532360);
      abort();
    case 1:
      sub_20B2D6D24(a3, (uint64_t)&v1101);
      v4 = *a2;
      v5 = v1104;
      v6 = v1101;
      if (!v1101)
        goto LABEL_1389;
      v7 = v1102;
      if (v1102)
      {
        p_shared_owners = (unint64_t *)&v1102->__shared_owners_;
        do
          v9 = __ldxr(p_shared_owners);
        while (__stxr(v9 + 1, p_shared_owners));
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        v6 = v1101;
        v11 = v1102;
        if (v1102)
        {
          v12 = (unint64_t *)&v1102->__shared_owners_;
          do
            v13 = __ldxr(v12);
          while (__stxr(v13 + 1, v12));
          do
            v14 = __ldaxr(v12);
          while (__stlxr(v14 - 1, v12));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
      }
      if (v1109)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v1115, v6, 0);
      else
LABEL_1389:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1415;
      v822 = v1105;
      if (!v1105)
        goto LABEL_1415;
      v823 = v1107;
      v824 = v1103;
      if (v1108 && v1103)
      {
        v825 = v1101;
        v826 = v1102;
        if (v1102)
        {
          v827 = (unint64_t *)&v1102->__shared_owners_;
          do
            v828 = __ldxr(v827);
          while (__stxr(v828 + 1, v827));
          do
            v829 = __ldaxr(v827);
          while (__stlxr(v829 - 1, v827));
          if (!v829)
          {
            ((void (*)(std::__shared_weak_count *))v826->__on_zero_shared)(v826);
            std::__shared_weak_count::__release_weak(v826);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v825 + 88))(v825, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v824 = v1103;
      }
      if (v822 == 1)
        goto LABEL_1409;
      if (!(_DWORD)v5)
        goto LABEL_1415;
      v830 = 0;
      do
      {
        if (!v824
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2032;
        }
        for (i = 0; i != v5; ++i)
          sub_20B512EB0(v4, &v824[i]);
        v824 += v823;
        ++v830;
      }
      while (v830 != v822 - 1);
LABEL_1409:
      if ((_DWORD)v5 && !v824)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2032:
          abort();
        }
        v824 = 0;
      }
      if ((_DWORD)v5)
      {
        do
        {
          sub_20B512EB0(v4, v824++);
          --v5;
        }
        while (v5);
      }
LABEL_1415:
      v832 = v1115;
      v1115 = 0;
      if (v832)
        (*(void (**)(uint64_t))(*(_QWORD *)v832 + 8))(v832);
      v484 = v1102;
      if (!v1102)
        return;
      v833 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v833);
      while (__stlxr(v486 - 1, v833));
      goto LABEL_2025;
    case 2:
      sub_20B2D7590(a3, (uint64_t)&v1101);
      v321 = *a2;
      v322 = v1104;
      v323 = v1101;
      if (!v1101)
        goto LABEL_1363;
      v324 = v1102;
      if (v1102)
      {
        v325 = (unint64_t *)&v1102->__shared_owners_;
        do
          v326 = __ldxr(v325);
        while (__stxr(v326 + 1, v325));
        do
          v327 = __ldaxr(v325);
        while (__stlxr(v327 - 1, v325));
        if (!v327)
        {
          ((void (*)(std::__shared_weak_count *))v324->__on_zero_shared)(v324);
          std::__shared_weak_count::__release_weak(v324);
        }
        v323 = v1101;
        v328 = v1102;
        if (v1102)
        {
          v329 = (unint64_t *)&v1102->__shared_owners_;
          do
            v330 = __ldxr(v329);
          while (__stxr(v330 + 1, v329));
          do
            v331 = __ldaxr(v329);
          while (__stlxr(v331 - 1, v329));
          if (!v331)
          {
            ((void (*)(std::__shared_weak_count *))v328->__on_zero_shared)(v328);
            std::__shared_weak_count::__release_weak(v328);
          }
        }
      }
      if (v1109)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v323 + 96))(&v1114, v323, 0);
      else
LABEL_1363:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1996;
      v810 = v1105;
      if (!v1105)
        goto LABEL_1996;
      v1097 = v322;
      v811 = v1107;
      v812 = v1103;
      if (v1108 && v1103)
      {
        v813 = v1101;
        v814 = v1102;
        if (v1102)
        {
          v815 = (unint64_t *)&v1102->__shared_owners_;
          do
            v816 = __ldxr(v815);
          while (__stxr(v816 + 1, v815));
          do
            v817 = __ldaxr(v815);
          while (__stlxr(v817 - 1, v815));
          if (!v817)
          {
            ((void (*)(std::__shared_weak_count *))v814->__on_zero_shared)(v814);
            std::__shared_weak_count::__release_weak(v814);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v813 + 88))(v813, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v812 = v1103;
      }
      if (v810 == 1)
        goto LABEL_1385;
      if ((_DWORD)v1097)
      {
        v818 = 0;
        do
        {
          if (!v812
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2054;
          }
          v819 = 0;
          v820 = *(_QWORD *)(v321 + 40);
          do
          {
            if (v820)
            {
              v821 = *(_QWORD **)(v321 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v321 + 32);
              sub_20AEC01D0(v821, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v820 = *(_QWORD *)(v321 + 40) + 1;
            *(_QWORD *)(v321 + 40) = v820;
            v819 += 2;
          }
          while (2 * v1097 != v819);
          v812 += 2 * v811;
          ++v818;
        }
        while (v818 != v810 - 1);
LABEL_1385:
        if ((_DWORD)v1097 && !v812)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2054:
            abort();
          }
          v812 = 0;
        }
      }
      else
      {
        v812 += (2 * (v810 - 2) + 2) * v811;
      }
      v1115 = v1097;
      v1116 = v812;
      sub_20B513184(v321, &v1115);
LABEL_1996:
      v1069 = v1114;
      v1114 = 0;
      if (v1069)
        (*(void (**)(uint64_t))(*(_QWORD *)v1069 + 8))(v1069);
      v484 = v1102;
      if (!v1102)
        return;
      v1070 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1070);
      while (__stlxr(v486 - 1, v1070));
      goto LABEL_2025;
    case 3:
      sub_20B372128(a3, (uint64_t)&v1101);
      v311 = *a2;
      v1087 = v1104;
      v312 = v1101;
      if (!v1101)
        goto LABEL_1337;
      v313 = v1102;
      if (v1102)
      {
        v314 = (unint64_t *)&v1102->__shared_owners_;
        do
          v315 = __ldxr(v314);
        while (__stxr(v315 + 1, v314));
        do
          v316 = __ldaxr(v314);
        while (__stlxr(v316 - 1, v314));
        if (!v316)
        {
          ((void (*)(std::__shared_weak_count *))v313->__on_zero_shared)(v313);
          std::__shared_weak_count::__release_weak(v313);
        }
        v312 = v1101;
        v317 = v1102;
        if (v1102)
        {
          v318 = (unint64_t *)&v1102->__shared_owners_;
          do
            v319 = __ldxr(v318);
          while (__stxr(v319 + 1, v318));
          do
            v320 = __ldaxr(v318);
          while (__stlxr(v320 - 1, v318));
          if (!v320)
          {
            ((void (*)(std::__shared_weak_count *))v317->__on_zero_shared)(v317);
            std::__shared_weak_count::__release_weak(v317);
          }
        }
      }
      if (v1109)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v312 + 96))(&v1115, v312, 0);
      else
LABEL_1337:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1758;
      v796 = v1105;
      if (!v1105)
        goto LABEL_1758;
      v797 = v1107;
      v798 = v1103;
      if (v1108 && v1103)
      {
        v799 = v1101;
        v800 = v1102;
        if (v1102)
        {
          v801 = (unint64_t *)&v1102->__shared_owners_;
          do
            v802 = __ldxr(v801);
          while (__stxr(v802 + 1, v801));
          do
            v803 = __ldaxr(v801);
          while (__stlxr(v803 - 1, v801));
          if (!v803)
          {
            ((void (*)(std::__shared_weak_count *))v800->__on_zero_shared)(v800);
            std::__shared_weak_count::__release_weak(v800);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v799 + 88))(v799, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v798 = v1103;
      }
      if (v796 == 1)
        goto LABEL_1359;
      if (!(_DWORD)v1087)
        goto LABEL_1758;
      v804 = 0;
      do
      {
        if (!v798
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1362;
        }
        v805 = 0;
        v806 = *(_QWORD *)(v311 + 40);
        do
        {
          if (v806)
          {
            v807 = *(_QWORD **)(v311 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v311 + 32);
            sub_20AEC01D0(v807, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v311 + 24) + *(_QWORD *)(**(_QWORD **)(v311 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v798[v805];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v806 = *(_QWORD *)(v311 + 40) + 1;
          *(_QWORD *)(v311 + 40) = v806;
          v805 += 2;
        }
        while (2 * v1087 != v805);
        v798 += 2 * v797;
        ++v804;
      }
      while (v804 != v796 - 1);
LABEL_1359:
      if (!(_DWORD)v1087 || v798)
      {
        if (!(_DWORD)v1087)
          goto LABEL_1758;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1362:
        abort();
      }
      v1003 = *(_QWORD *)(v311 + 40);
      v1004 = 2 * v1087;
      do
      {
        if (v1003)
        {
          v1005 = *(_QWORD **)(v311 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v311 + 32);
          sub_20AEC01D0(v1005, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v311 + 24) + *(_QWORD *)(**(_QWORD **)(v311 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v798;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v1003 = *(_QWORD *)(v311 + 40) + 1;
        *(_QWORD *)(v311 + 40) = v1003;
        v798 += 2;
        v1004 -= 2;
      }
      while (v1004);
LABEL_1758:
      v1008 = v1115;
      v1115 = 0;
      if (v1008)
        (*(void (**)(uint64_t))(*(_QWORD *)v1008 + 8))(v1008);
      v484 = v1102;
      if (!v1102)
        return;
      v1009 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1009);
      while (__stlxr(v486 - 1, v1009));
      goto LABEL_2025;
    case 4:
      sub_20B3726DC(a3, (uint64_t)&v1101);
      v190 = *a2;
      v191 = v1104;
      v192 = v1101;
      if (!v1101)
        goto LABEL_1040;
      v193 = v1102;
      if (v1102)
      {
        v194 = (unint64_t *)&v1102->__shared_owners_;
        do
          v195 = __ldxr(v194);
        while (__stxr(v195 + 1, v194));
        do
          v196 = __ldaxr(v194);
        while (__stlxr(v196 - 1, v194));
        if (!v196)
        {
          ((void (*)(std::__shared_weak_count *))v193->__on_zero_shared)(v193);
          std::__shared_weak_count::__release_weak(v193);
        }
        v192 = v1101;
        v197 = v1102;
        if (v1102)
        {
          v198 = (unint64_t *)&v1102->__shared_owners_;
          do
            v199 = __ldxr(v198);
          while (__stxr(v199 + 1, v198));
          do
            v200 = __ldaxr(v198);
          while (__stlxr(v200 - 1, v198));
          if (!v200)
          {
            ((void (*)(std::__shared_weak_count *))v197->__on_zero_shared)(v197);
            std::__shared_weak_count::__release_weak(v197);
          }
        }
      }
      if (v1109)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v192 + 96))(&v1114, v192, 0);
      else
LABEL_1040:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1932;
      v655 = v1105;
      if (!v1105)
        goto LABEL_1932;
      v1094 = v191;
      v656 = v1107;
      v657 = v1103;
      if (v1108 && v1103)
      {
        v658 = v1101;
        v659 = v1102;
        if (v1102)
        {
          v660 = (unint64_t *)&v1102->__shared_owners_;
          do
            v661 = __ldxr(v660);
          while (__stxr(v661 + 1, v660));
          do
            v662 = __ldaxr(v660);
          while (__stlxr(v662 - 1, v660));
          if (!v662)
          {
            ((void (*)(std::__shared_weak_count *))v659->__on_zero_shared)(v659);
            std::__shared_weak_count::__release_weak(v659);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v658 + 88))(v658, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v657 = v1103;
      }
      if (v655 == 1)
        goto LABEL_1062;
      if ((_DWORD)v1094)
      {
        v663 = 0;
        do
        {
          if (!v657
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2043;
          }
          v664 = 0;
          v665 = *(_QWORD *)(v190 + 40);
          do
          {
            if (v665)
            {
              v666 = *(_QWORD **)(v190 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v190 + 32);
              sub_20AEC01D0(v666, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v190 + 24) + *(_QWORD *)(**(_QWORD **)(v190 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v665 = *(_QWORD *)(v190 + 40) + 1;
            *(_QWORD *)(v190 + 40) = v665;
            v664 += 4;
          }
          while (4 * v1094 != v664);
          v657 += 4 * v656;
          ++v663;
        }
        while (v663 != v655 - 1);
LABEL_1062:
        if ((_DWORD)v1094 && !v657)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2043:
            abort();
          }
          v657 = 0;
        }
      }
      else
      {
        v657 += (4 * (v655 - 2) + 4) * v656;
      }
      v1115 = v1094;
      v1116 = v657;
      sub_20B513208(v190, &v1115);
LABEL_1932:
      v1053 = v1114;
      v1114 = 0;
      if (v1053)
        (*(void (**)(uint64_t))(*(_QWORD *)v1053 + 8))(v1053);
      v484 = v1102;
      if (!v1102)
        return;
      v1054 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1054);
      while (__stlxr(v486 - 1, v1054));
      goto LABEL_2025;
    case 5:
      sub_20B372C90(a3, (uint64_t)&v1101);
      v278 = *a2;
      v279 = v1111;
      v280 = v1101;
      if (!v1101)
        goto LABEL_1250;
      v281 = v1102;
      if (v1102)
      {
        v282 = (unint64_t *)&v1102->__shared_owners_;
        do
          v283 = __ldxr(v282);
        while (__stxr(v283 + 1, v282));
        do
          v284 = __ldaxr(v282);
        while (__stlxr(v284 - 1, v282));
        if (!v284)
        {
          ((void (*)(std::__shared_weak_count *))v281->__on_zero_shared)(v281);
          std::__shared_weak_count::__release_weak(v281);
        }
        v280 = v1101;
        v285 = v1102;
        if (v1102)
        {
          v286 = (unint64_t *)&v1102->__shared_owners_;
          do
            v287 = __ldxr(v286);
          while (__stxr(v287 + 1, v286));
          do
            v288 = __ldaxr(v286);
          while (__stlxr(v288 - 1, v286));
          if (!v288)
          {
            ((void (*)(std::__shared_weak_count *))v285->__on_zero_shared)(v285);
            std::__shared_weak_count::__release_weak(v285);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v280 + 96))(&v1115, v280, 0);
      else
LABEL_1250:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1277;
      if (!v1105)
        goto LABEL_1277;
      v757 = v1106;
      if (!v1106)
        goto LABEL_1277;
      v758 = v1110;
      v759 = v1103;
      if (v1112 && v1103)
      {
        v760 = v1101;
        v761 = v1102;
        if (v1102)
        {
          v762 = (unint64_t *)&v1102->__shared_owners_;
          do
            v763 = __ldxr(v762);
          while (__stxr(v763 + 1, v762));
          do
            v764 = __ldaxr(v762);
          while (__stlxr(v764 - 1, v762));
          if (!v764)
          {
            ((void (*)(std::__shared_weak_count *))v761->__on_zero_shared)(v761);
            std::__shared_weak_count::__release_weak(v761);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v760 + 88))(v760, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v759 = v1103;
      }
      v765 = (2 * v279);
      if (v757 == 1)
        goto LABEL_1271;
      if (!(_DWORD)v765)
        goto LABEL_1277;
      v766 = 0;
      do
      {
        if (!v759
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2031;
        }
        for (j = 0; j != v765; ++j)
          sub_20B512EB0(v278, &v759[j]);
        v759 += v758;
        ++v766;
      }
      while (v766 != v757 - 1);
LABEL_1271:
      if ((_DWORD)v765 && !v759)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2031:
          abort();
        }
        v759 = 0;
      }
      if ((_DWORD)v765)
      {
        do
        {
          sub_20B512EB0(v278, v759++);
          --v765;
        }
        while (v765);
      }
LABEL_1277:
      v768 = v1115;
      v1115 = 0;
      if (v768)
        (*(void (**)(uint64_t))(*(_QWORD *)v768 + 8))(v768);
      v484 = v1102;
      if (!v1102)
        return;
      v769 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v769);
      while (__stlxr(v486 - 1, v769));
      goto LABEL_2025;
    case 6:
      sub_20B3732C4(a3, (uint64_t)&v1101);
      v179 = *a2;
      v180 = v1111;
      v181 = v1101;
      if (!v1101)
        goto LABEL_1013;
      v182 = v1102;
      if (v1102)
      {
        v183 = (unint64_t *)&v1102->__shared_owners_;
        do
          v184 = __ldxr(v183);
        while (__stxr(v184 + 1, v183));
        do
          v185 = __ldaxr(v183);
        while (__stlxr(v185 - 1, v183));
        if (!v185)
        {
          ((void (*)(std::__shared_weak_count *))v182->__on_zero_shared)(v182);
          std::__shared_weak_count::__release_weak(v182);
        }
        v181 = v1101;
        v186 = v1102;
        if (v1102)
        {
          v187 = (unint64_t *)&v1102->__shared_owners_;
          do
            v188 = __ldxr(v187);
          while (__stxr(v188 + 1, v187));
          do
            v189 = __ldaxr(v187);
          while (__stlxr(v189 - 1, v187));
          if (!v189)
          {
            ((void (*)(std::__shared_weak_count *))v186->__on_zero_shared)(v186);
            std::__shared_weak_count::__release_weak(v186);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v181 + 96))(&v1114, v181, 0);
      else
LABEL_1013:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1924;
      if (!v1105)
        goto LABEL_1924;
      v642 = v1106;
      if (!v1106)
        goto LABEL_1924;
      v643 = v1110;
      v644 = v1103;
      if (v1112 && v1103)
      {
        v645 = v1101;
        v646 = v1102;
        if (v1102)
        {
          v647 = (unint64_t *)&v1102->__shared_owners_;
          do
            v648 = __ldxr(v647);
          while (__stxr(v648 + 1, v647));
          do
            v649 = __ldaxr(v647);
          while (__stlxr(v649 - 1, v647));
          if (!v649)
          {
            ((void (*)(std::__shared_weak_count *))v646->__on_zero_shared)(v646);
            std::__shared_weak_count::__release_weak(v646);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v645 + 88))(v645, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v644 = v1103;
      }
      v650 = (2 * v180);
      if (v642 == 1)
        goto LABEL_1036;
      if ((_DWORD)v650)
      {
        v651 = 0;
        do
        {
          if (!v644
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2042;
          }
          v652 = 0;
          v653 = *(_QWORD *)(v179 + 40);
          do
          {
            if (v653)
            {
              v654 = *(_QWORD **)(v179 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v179 + 32);
              sub_20AEC01D0(v654, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v653 = *(_QWORD *)(v179 + 40) + 1;
            *(_QWORD *)(v179 + 40) = v653;
            v652 += 2;
          }
          while (2 * v650 != v652);
          v644 += 2 * v643;
          ++v651;
        }
        while (v651 != v642 - 1);
LABEL_1036:
        if ((_DWORD)v650 && !v644)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2042:
            abort();
          }
          v644 = 0;
        }
      }
      else
      {
        v644 += (2 * (v642 - 2) + 2) * v643;
      }
      v1115 = (2 * v180);
      v1116 = v644;
      sub_20B513184(v179, &v1115);
LABEL_1924:
      v1051 = v1114;
      v1114 = 0;
      if (v1051)
        (*(void (**)(uint64_t))(*(_QWORD *)v1051 + 8))(v1051);
      v484 = v1102;
      if (!v1102)
        return;
      v1052 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1052);
      while (__stlxr(v486 - 1, v1052));
      goto LABEL_2025;
    case 7:
      sub_20B3738FC(a3, (uint64_t)&v1101);
      v124 = *a2;
      v125 = v1111;
      v126 = v1101;
      if (!v1101)
        goto LABEL_881;
      v127 = v1102;
      if (v1102)
      {
        v128 = (unint64_t *)&v1102->__shared_owners_;
        do
          v129 = __ldxr(v128);
        while (__stxr(v129 + 1, v128));
        do
          v130 = __ldaxr(v128);
        while (__stlxr(v130 - 1, v128));
        if (!v130)
        {
          ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
          std::__shared_weak_count::__release_weak(v127);
        }
        v126 = v1101;
        v131 = v1102;
        if (v1102)
        {
          v132 = (unint64_t *)&v1102->__shared_owners_;
          do
            v133 = __ldxr(v132);
          while (__stxr(v133 + 1, v132));
          do
            v134 = __ldaxr(v132);
          while (__stlxr(v134 - 1, v132));
          if (!v134)
          {
            ((void (*)(std::__shared_weak_count *))v131->__on_zero_shared)(v131);
            std::__shared_weak_count::__release_weak(v131);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v126 + 96))(&v1115, v126, 0);
      else
LABEL_881:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1714;
      if (!v1105)
        goto LABEL_1714;
      v575 = v1106;
      if (!v1106)
        goto LABEL_1714;
      v576 = v1110;
      v577 = v1103;
      if (v1112 && v1103)
      {
        v578 = v1101;
        v579 = v1102;
        if (v1102)
        {
          v580 = (unint64_t *)&v1102->__shared_owners_;
          do
            v581 = __ldxr(v580);
          while (__stxr(v581 + 1, v580));
          do
            v582 = __ldaxr(v580);
          while (__stlxr(v582 - 1, v580));
          if (!v582)
          {
            ((void (*)(std::__shared_weak_count *))v579->__on_zero_shared)(v579);
            std::__shared_weak_count::__release_weak(v579);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v578 + 88))(v578, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v577 = v1103;
      }
      v1091 = (2 * v125);
      if (v575 == 1)
        goto LABEL_904;
      if (!(2 * v125))
        goto LABEL_1714;
      v583 = 0;
      do
      {
        if (!v577
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_907;
        }
        v584 = 0;
        v585 = *(_QWORD *)(v124 + 40);
        do
        {
          if (v585)
          {
            v586 = *(_QWORD **)(v124 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v124 + 32);
            sub_20AEC01D0(v586, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v124 + 24) + *(_QWORD *)(**(_QWORD **)(v124 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v577[v584];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v585 = *(_QWORD *)(v124 + 40) + 1;
          *(_QWORD *)(v124 + 40) = v585;
          v584 += 2;
        }
        while (2 * v1091 != v584);
        v577 += 2 * v576;
        ++v583;
      }
      while (v583 != v575 - 1);
LABEL_904:
      if (!(_DWORD)v1091 || v577)
      {
        if (!(_DWORD)v1091)
          goto LABEL_1714;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_907:
        abort();
      }
      v975 = *(_QWORD *)(v124 + 40);
      v976 = 2 * v1091;
      do
      {
        if (v975)
        {
          v977 = *(_QWORD **)(v124 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v124 + 32);
          sub_20AEC01D0(v977, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v124 + 24) + *(_QWORD *)(**(_QWORD **)(v124 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v577;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v975 = *(_QWORD *)(v124 + 40) + 1;
        *(_QWORD *)(v124 + 40) = v975;
        v577 += 2;
        v976 -= 2;
      }
      while (v976);
LABEL_1714:
      v980 = v1115;
      v1115 = 0;
      if (v980)
        (*(void (**)(uint64_t))(*(_QWORD *)v980 + 8))(v980);
      v484 = v1102;
      if (!v1102)
        return;
      v981 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v981);
      while (__stlxr(v486 - 1, v981));
      goto LABEL_2025;
    case 8:
      sub_20B373F34(a3, (uint64_t)&v1101);
      v300 = *a2;
      v301 = v1111;
      v302 = v1101;
      if (!v1101)
        goto LABEL_1310;
      v303 = v1102;
      if (v1102)
      {
        v304 = (unint64_t *)&v1102->__shared_owners_;
        do
          v305 = __ldxr(v304);
        while (__stxr(v305 + 1, v304));
        do
          v306 = __ldaxr(v304);
        while (__stlxr(v306 - 1, v304));
        if (!v306)
        {
          ((void (*)(std::__shared_weak_count *))v303->__on_zero_shared)(v303);
          std::__shared_weak_count::__release_weak(v303);
        }
        v302 = v1101;
        v307 = v1102;
        if (v1102)
        {
          v308 = (unint64_t *)&v1102->__shared_owners_;
          do
            v309 = __ldxr(v308);
          while (__stxr(v309 + 1, v308));
          do
            v310 = __ldaxr(v308);
          while (__stlxr(v310 - 1, v308));
          if (!v310)
          {
            ((void (*)(std::__shared_weak_count *))v307->__on_zero_shared)(v307);
            std::__shared_weak_count::__release_weak(v307);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v302 + 96))(&v1114, v302, 0);
      else
LABEL_1310:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1988;
      if (!v1105)
        goto LABEL_1988;
      v783 = v1106;
      if (!v1106)
        goto LABEL_1988;
      v784 = v1110;
      v785 = v1103;
      if (v1112 && v1103)
      {
        v786 = v1101;
        v787 = v1102;
        if (v1102)
        {
          v788 = (unint64_t *)&v1102->__shared_owners_;
          do
            v789 = __ldxr(v788);
          while (__stxr(v789 + 1, v788));
          do
            v790 = __ldaxr(v788);
          while (__stlxr(v790 - 1, v788));
          if (!v790)
          {
            ((void (*)(std::__shared_weak_count *))v787->__on_zero_shared)(v787);
            std::__shared_weak_count::__release_weak(v787);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v786 + 88))(v786, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v785 = v1103;
      }
      v791 = (2 * v301);
      if (v783 == 1)
        goto LABEL_1333;
      if ((_DWORD)v791)
      {
        v792 = 0;
        do
        {
          if (!v785
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2053;
          }
          v793 = 0;
          v794 = *(_QWORD *)(v300 + 40);
          do
          {
            if (v794)
            {
              v795 = *(_QWORD **)(v300 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v300 + 32);
              sub_20AEC01D0(v795, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v300 + 24) + *(_QWORD *)(**(_QWORD **)(v300 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v794 = *(_QWORD *)(v300 + 40) + 1;
            *(_QWORD *)(v300 + 40) = v794;
            v793 += 4;
          }
          while (4 * v791 != v793);
          v785 += 4 * v784;
          ++v792;
        }
        while (v792 != v783 - 1);
LABEL_1333:
        if ((_DWORD)v791 && !v785)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2053:
            abort();
          }
          v785 = 0;
        }
      }
      else
      {
        v785 += (4 * (v783 - 2) + 4) * v784;
      }
      v1115 = v791;
      v1116 = v785;
      sub_20B513208(v300, &v1115);
LABEL_1988:
      v1067 = v1114;
      v1114 = 0;
      if (v1067)
        (*(void (**)(uint64_t))(*(_QWORD *)v1067 + 8))(v1067);
      v484 = v1102;
      if (!v1102)
        return;
      v1068 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1068);
      while (__stlxr(v486 - 1, v1068));
      goto LABEL_2025;
    case 9:
      sub_20B37456C(a3, (uint64_t)&v1101);
      v267 = *a2;
      v268 = v1111;
      v269 = v1101;
      if (!v1101)
        goto LABEL_1228;
      v270 = v1102;
      if (v1102)
      {
        v271 = (unint64_t *)&v1102->__shared_owners_;
        do
          v272 = __ldxr(v271);
        while (__stxr(v272 + 1, v271));
        do
          v273 = __ldaxr(v271);
        while (__stlxr(v273 - 1, v271));
        if (!v273)
        {
          ((void (*)(std::__shared_weak_count *))v270->__on_zero_shared)(v270);
          std::__shared_weak_count::__release_weak(v270);
        }
        v269 = v1101;
        v274 = v1102;
        if (v1102)
        {
          v275 = (unint64_t *)&v1102->__shared_owners_;
          do
            v276 = __ldxr(v275);
          while (__stxr(v276 + 1, v275));
          do
            v277 = __ldaxr(v275);
          while (__stlxr(v277 - 1, v275));
          if (!v277)
          {
            ((void (*)(std::__shared_weak_count *))v274->__on_zero_shared)(v274);
            std::__shared_weak_count::__release_weak(v274);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v269 + 96))(&v1115, v269, 0);
      else
LABEL_1228:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1824;
      if (!v1105)
        goto LABEL_1824;
      v746 = v1106;
      if (!v1106)
        goto LABEL_1824;
      v747 = v1110;
      v748 = v1103;
      if (v1112 && v1103)
      {
        v749 = v1101;
        v750 = v1102;
        if (v1102)
        {
          v751 = (unint64_t *)&v1102->__shared_owners_;
          do
            v752 = __ldxr(v751);
          while (__stxr(v752 + 1, v751));
          do
            v753 = __ldaxr(v751);
          while (__stlxr(v753 - 1, v751));
          if (!v753)
          {
            ((void (*)(std::__shared_weak_count *))v750->__on_zero_shared)(v750);
            std::__shared_weak_count::__release_weak(v750);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v749 + 88))(v749, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v748 = v1103;
      }
      v754 = (3 * v268);
      if (v746 == 1)
      {
        v1096 = v268;
LABEL_1818:
        if (v1096 && !v748)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2033;
          }
          v748 = 0;
        }
        if (v1096)
        {
          do
          {
            sub_20B512EB0(v267, v748++);
            --v754;
          }
          while (v754);
        }
      }
      else if (v268)
      {
        v1096 = v268;
        v755 = 0;
        while (v748
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v756 = 0;
          do
            sub_20B512EB0(v267, &v748[v756++]);
          while (v754 != v756);
          v748 += v747;
          if (++v755 == v746 - 1)
            goto LABEL_1818;
        }
LABEL_2033:
        abort();
      }
LABEL_1824:
      v1031 = v1115;
      v1115 = 0;
      if (v1031)
        (*(void (**)(uint64_t))(*(_QWORD *)v1031 + 8))(v1031);
      v484 = v1102;
      if (!v1102)
        return;
      v1032 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1032);
      while (__stlxr(v486 - 1, v1032));
      goto LABEL_2025;
    case 10:
      sub_20B374BA0(a3, (uint64_t)&v1101);
      v353 = *a2;
      v354 = v1111;
      v355 = v1101;
      if (!v1101)
        goto LABEL_1481;
      v356 = v1102;
      if (v1102)
      {
        v357 = (unint64_t *)&v1102->__shared_owners_;
        do
          v358 = __ldxr(v357);
        while (__stxr(v358 + 1, v357));
        do
          v359 = __ldaxr(v357);
        while (__stlxr(v359 - 1, v357));
        if (!v359)
        {
          ((void (*)(std::__shared_weak_count *))v356->__on_zero_shared)(v356);
          std::__shared_weak_count::__release_weak(v356);
        }
        v355 = v1101;
        v360 = v1102;
        if (v1102)
        {
          v361 = (unint64_t *)&v1102->__shared_owners_;
          do
            v362 = __ldxr(v361);
          while (__stxr(v362 + 1, v361));
          do
            v363 = __ldaxr(v361);
          while (__stlxr(v363 - 1, v361));
          if (!v363)
          {
            ((void (*)(std::__shared_weak_count *))v360->__on_zero_shared)(v360);
            std::__shared_weak_count::__release_weak(v360);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v355 + 96))(&v1114, v355, 0);
      else
LABEL_1481:
        v1114 = 0;
      if (!v1104)
        goto LABEL_2004;
      if (!v1105)
        goto LABEL_2004;
      v861 = v1106;
      if (!v1106)
        goto LABEL_2004;
      v862 = v1110;
      v863 = v1103;
      if (v1112 && v1103)
      {
        v864 = v1101;
        v865 = v1102;
        if (v1102)
        {
          v866 = (unint64_t *)&v1102->__shared_owners_;
          do
            v867 = __ldxr(v866);
          while (__stxr(v867 + 1, v866));
          do
            v868 = __ldaxr(v866);
          while (__stlxr(v868 - 1, v866));
          if (!v868)
          {
            ((void (*)(std::__shared_weak_count *))v865->__on_zero_shared)(v865);
            std::__shared_weak_count::__release_weak(v865);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v864 + 88))(v864, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v863 = v1103;
      }
      if (v861 == 1)
      {
        v1083 = v354;
LABEL_1831:
        if (v1083 && !v863)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2055;
          }
          v863 = 0;
        }
      }
      else
      {
        if (v354)
        {
          v1083 = v354;
          v869 = 0;
          while (v863
               || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v870 = 0;
            v871 = *(_QWORD *)(v353 + 40);
            do
            {
              if (v871)
              {
                v872 = *(_QWORD **)(v353 + 24);
                LOBYTE(v1115) = *(_BYTE *)(v353 + 32);
                sub_20AEC01D0(v872, (uint64_t)&v1115, 1);
              }
              std::ostream::operator<<();
              v871 = *(_QWORD *)(v353 + 40) + 1;
              *(_QWORD *)(v353 + 40) = v871;
              v870 += 2;
            }
            while (2 * (3 * v354) != v870);
            v863 += 2 * v862;
            if (++v869 == v861 - 1)
              goto LABEL_1831;
          }
LABEL_2055:
          abort();
        }
        v863 += (2 * (v861 - 2) + 2) * v862;
      }
      v1115 = (3 * v354);
      v1116 = v863;
      sub_20B513184(v353, &v1115);
LABEL_2004:
      v1071 = v1114;
      v1114 = 0;
      if (v1071)
        (*(void (**)(uint64_t))(*(_QWORD *)v1071 + 8))(v1071);
      v484 = v1102;
      if (!v1102)
        return;
      v1072 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1072);
      while (__stlxr(v486 - 1, v1072));
      goto LABEL_2025;
    case 11:
      sub_20B3751D8(a3, (uint64_t)&v1101);
      v343 = *a2;
      v1088 = v1111;
      v344 = v1101;
      if (!v1101)
        goto LABEL_1454;
      v345 = v1102;
      if (v1102)
      {
        v346 = (unint64_t *)&v1102->__shared_owners_;
        do
          v347 = __ldxr(v346);
        while (__stxr(v347 + 1, v346));
        do
          v348 = __ldaxr(v346);
        while (__stlxr(v348 - 1, v346));
        if (!v348)
        {
          ((void (*)(std::__shared_weak_count *))v345->__on_zero_shared)(v345);
          std::__shared_weak_count::__release_weak(v345);
        }
        v344 = v1101;
        v349 = v1102;
        if (v1102)
        {
          v350 = (unint64_t *)&v1102->__shared_owners_;
          do
            v351 = __ldxr(v350);
          while (__stxr(v351 + 1, v350));
          do
            v352 = __ldaxr(v350);
          while (__stlxr(v352 - 1, v350));
          if (!v352)
          {
            ((void (*)(std::__shared_weak_count *))v349->__on_zero_shared)(v349);
            std::__shared_weak_count::__release_weak(v349);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v344 + 96))(&v1115, v344, 0);
      else
LABEL_1454:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1769;
      if (!v1105)
        goto LABEL_1769;
      v847 = v1106;
      if (!v1106)
        goto LABEL_1769;
      v848 = v1110;
      v849 = v1103;
      if (v1112 && v1103)
      {
        v850 = v1101;
        v851 = v1102;
        if (v1102)
        {
          v852 = (unint64_t *)&v1102->__shared_owners_;
          do
            v853 = __ldxr(v852);
          while (__stxr(v853 + 1, v852));
          do
            v854 = __ldaxr(v852);
          while (__stlxr(v854 - 1, v852));
          if (!v854)
          {
            ((void (*)(std::__shared_weak_count *))v851->__on_zero_shared)(v851);
            std::__shared_weak_count::__release_weak(v851);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v850 + 88))(v850, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v849 = v1103;
      }
      v1082 = (3 * v1088);
      if (v847 == 1)
        goto LABEL_1477;
      if (!v1088)
        goto LABEL_1769;
      v855 = 0;
      do
      {
        if (!v849
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1480;
        }
        v856 = 0;
        v857 = *(_QWORD *)(v343 + 40);
        do
        {
          if (v857)
          {
            v858 = *(_QWORD **)(v343 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v343 + 32);
            sub_20AEC01D0(v858, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v343 + 24) + *(_QWORD *)(**(_QWORD **)(v343 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v849[v856];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v857 = *(_QWORD *)(v343 + 40) + 1;
          *(_QWORD *)(v343 + 40) = v857;
          v856 += 2;
        }
        while (2 * v1082 != v856);
        v849 += 2 * v848;
        ++v855;
      }
      while (v855 != v847 - 1);
LABEL_1477:
      if (!v1088 || v849)
      {
        if (!v1088)
          goto LABEL_1769;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1480:
        abort();
      }
      v1010 = *(_QWORD *)(v343 + 40);
      v1011 = 2 * v1082;
      do
      {
        if (v1010)
        {
          v1012 = *(_QWORD **)(v343 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v343 + 32);
          sub_20AEC01D0(v1012, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v343 + 24) + *(_QWORD *)(**(_QWORD **)(v343 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v849;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v1010 = *(_QWORD *)(v343 + 40) + 1;
        *(_QWORD *)(v343 + 40) = v1010;
        v849 += 2;
        v1011 -= 2;
      }
      while (v1011);
LABEL_1769:
      v1015 = v1115;
      v1115 = 0;
      if (v1015)
        (*(void (**)(uint64_t))(*(_QWORD *)v1015 + 8))(v1015);
      v484 = v1102;
      if (!v1102)
        return;
      v1016 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1016);
      while (__stlxr(v486 - 1, v1016));
      goto LABEL_2025;
    case 12:
      sub_20B375810(a3, (uint64_t)&v1101);
      v47 = *a2;
      v48 = v1111;
      v49 = v1101;
      if (!v1101)
        goto LABEL_689;
      v50 = v1102;
      if (v1102)
      {
        v51 = (unint64_t *)&v1102->__shared_owners_;
        do
          v52 = __ldxr(v51);
        while (__stxr(v52 + 1, v51));
        do
          v53 = __ldaxr(v51);
        while (__stlxr(v53 - 1, v51));
        if (!v53)
        {
          ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
          std::__shared_weak_count::__release_weak(v50);
        }
        v49 = v1101;
        v54 = v1102;
        if (v1102)
        {
          v55 = (unint64_t *)&v1102->__shared_owners_;
          do
            v56 = __ldxr(v55);
          while (__stxr(v56 + 1, v55));
          do
            v57 = __ldaxr(v55);
          while (__stlxr(v57 - 1, v55));
          if (!v57)
          {
            ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
            std::__shared_weak_count::__release_weak(v54);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v49 + 96))(&v1114, v49, 0);
      else
LABEL_689:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1868;
      if (!v1105)
        goto LABEL_1868;
      v487 = v1106;
      if (!v1106)
        goto LABEL_1868;
      v488 = v1110;
      v489 = v1103;
      if (v1112 && v1103)
      {
        v490 = v1101;
        v491 = v1102;
        if (v1102)
        {
          v492 = (unint64_t *)&v1102->__shared_owners_;
          do
            v493 = __ldxr(v492);
          while (__stxr(v493 + 1, v492));
          do
            v494 = __ldaxr(v492);
          while (__stlxr(v494 - 1, v492));
          if (!v494)
          {
            ((void (*)(std::__shared_weak_count *))v491->__on_zero_shared)(v491);
            std::__shared_weak_count::__release_weak(v491);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v490 + 88))(v490, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v489 = v1103;
      }
      if (v487 == 1)
      {
        v1078 = v48;
LABEL_1798:
        if (v1078 && !v489)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2038;
          }
          v489 = 0;
        }
      }
      else
      {
        if (v48)
        {
          v1078 = v48;
          v495 = 0;
          while (v489
               || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v496 = 0;
            v497 = *(_QWORD *)(v47 + 40);
            do
            {
              if (v497)
              {
                v498 = *(_QWORD **)(v47 + 24);
                LOBYTE(v1115) = *(_BYTE *)(v47 + 32);
                sub_20AEC01D0(v498, (uint64_t)&v1115, 1);
              }
              *(_QWORD *)(*(_QWORD *)(v47 + 24) + *(_QWORD *)(**(_QWORD **)(v47 + 24) - 24) + 16) = 9;
              std::ostream::operator<<();
              v497 = *(_QWORD *)(v47 + 40) + 1;
              *(_QWORD *)(v47 + 40) = v497;
              v496 += 4;
            }
            while (4 * (3 * v48) != v496);
            v489 += 4 * v488;
            if (++v495 == v487 - 1)
              goto LABEL_1798;
          }
LABEL_2038:
          abort();
        }
        v489 += (4 * (v487 - 2) + 4) * v488;
      }
      v1115 = (3 * v48);
      v1116 = v489;
      sub_20B513208(v47, &v1115);
LABEL_1868:
      v1037 = v1114;
      v1114 = 0;
      if (v1037)
        (*(void (**)(uint64_t))(*(_QWORD *)v1037 + 8))(v1037);
      v484 = v1102;
      if (!v1102)
        return;
      v1038 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1038);
      while (__stlxr(v486 - 1, v1038));
      goto LABEL_2025;
    case 13:
      sub_20B375E48(a3, (uint64_t)&v1101);
      v91 = *a2;
      v92 = v1111;
      v93 = v1101;
      if (!v1101)
        goto LABEL_797;
      v94 = v1102;
      if (v1102)
      {
        v95 = (unint64_t *)&v1102->__shared_owners_;
        do
          v96 = __ldxr(v95);
        while (__stxr(v96 + 1, v95));
        do
          v97 = __ldaxr(v95);
        while (__stlxr(v97 - 1, v95));
        if (!v97)
        {
          ((void (*)(std::__shared_weak_count *))v94->__on_zero_shared)(v94);
          std::__shared_weak_count::__release_weak(v94);
        }
        v93 = v1101;
        v98 = v1102;
        if (v1102)
        {
          v99 = (unint64_t *)&v1102->__shared_owners_;
          do
            v100 = __ldxr(v99);
          while (__stxr(v100 + 1, v99));
          do
            v101 = __ldaxr(v99);
          while (__stlxr(v101 - 1, v99));
          if (!v101)
          {
            ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
            std::__shared_weak_count::__release_weak(v98);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v93 + 96))(&v1115, v93, 0);
      else
LABEL_797:
        v1115 = 0;
      if (!v1104)
        goto LABEL_824;
      if (!v1105)
        goto LABEL_824;
      v537 = v1106;
      if (!v1106)
        goto LABEL_824;
      v538 = v1110;
      v539 = v1103;
      if (v1112 && v1103)
      {
        v540 = v1101;
        v541 = v1102;
        if (v1102)
        {
          v542 = (unint64_t *)&v1102->__shared_owners_;
          do
            v543 = __ldxr(v542);
          while (__stxr(v543 + 1, v542));
          do
            v544 = __ldaxr(v542);
          while (__stlxr(v544 - 1, v542));
          if (!v544)
          {
            ((void (*)(std::__shared_weak_count *))v541->__on_zero_shared)(v541);
            std::__shared_weak_count::__release_weak(v541);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v540 + 88))(v540, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v539 = v1103;
      }
      v545 = (4 * v92);
      if (v537 == 1)
        goto LABEL_818;
      if (!(_DWORD)v545)
        goto LABEL_824;
      v546 = 0;
      do
      {
        if (!v539
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2030;
        }
        for (k = 0; k != v545; ++k)
          sub_20B512EB0(v91, &v539[k]);
        v539 += v538;
        ++v546;
      }
      while (v546 != v537 - 1);
LABEL_818:
      if ((_DWORD)v545 && !v539)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2030:
          abort();
        }
        v539 = 0;
      }
      if ((_DWORD)v545)
      {
        do
        {
          sub_20B512EB0(v91, v539++);
          --v545;
        }
        while (v545);
      }
LABEL_824:
      v548 = v1115;
      v1115 = 0;
      if (v548)
        (*(void (**)(uint64_t))(*(_QWORD *)v548 + 8))(v548);
      v484 = v1102;
      if (!v1102)
        return;
      v549 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v549);
      while (__stlxr(v486 - 1, v549));
      goto LABEL_2025;
    case 14:
      sub_20B37647C(a3, (uint64_t)&v1101);
      v80 = *a2;
      v81 = v1111;
      v82 = v1101;
      if (!v1101)
        goto LABEL_770;
      v83 = v1102;
      if (v1102)
      {
        v84 = (unint64_t *)&v1102->__shared_owners_;
        do
          v85 = __ldxr(v84);
        while (__stxr(v85 + 1, v84));
        do
          v86 = __ldaxr(v84);
        while (__stlxr(v86 - 1, v84));
        if (!v86)
        {
          ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
          std::__shared_weak_count::__release_weak(v83);
        }
        v82 = v1101;
        v87 = v1102;
        if (v1102)
        {
          v88 = (unint64_t *)&v1102->__shared_owners_;
          do
            v89 = __ldxr(v88);
          while (__stxr(v89 + 1, v88));
          do
            v90 = __ldaxr(v88);
          while (__stlxr(v90 - 1, v88));
          if (!v90)
          {
            ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
            std::__shared_weak_count::__release_weak(v87);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v82 + 96))(&v1114, v82, 0);
      else
LABEL_770:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1884;
      if (!v1105)
        goto LABEL_1884;
      v524 = v1106;
      if (!v1106)
        goto LABEL_1884;
      v525 = v1110;
      v526 = v1103;
      if (v1112 && v1103)
      {
        v527 = v1101;
        v528 = v1102;
        if (v1102)
        {
          v529 = (unint64_t *)&v1102->__shared_owners_;
          do
            v530 = __ldxr(v529);
          while (__stxr(v530 + 1, v529));
          do
            v531 = __ldaxr(v529);
          while (__stlxr(v531 - 1, v529));
          if (!v531)
          {
            ((void (*)(std::__shared_weak_count *))v528->__on_zero_shared)(v528);
            std::__shared_weak_count::__release_weak(v528);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v527 + 88))(v527, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v526 = v1103;
      }
      v532 = (4 * v81);
      if (v524 == 1)
        goto LABEL_793;
      if ((_DWORD)v532)
      {
        v533 = 0;
        do
        {
          if (!v526
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2039;
          }
          v534 = 0;
          v535 = *(_QWORD *)(v80 + 40);
          do
          {
            if (v535)
            {
              v536 = *(_QWORD **)(v80 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v80 + 32);
              sub_20AEC01D0(v536, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v535 = *(_QWORD *)(v80 + 40) + 1;
            *(_QWORD *)(v80 + 40) = v535;
            v534 += 2;
          }
          while (2 * v532 != v534);
          v526 += 2 * v525;
          ++v533;
        }
        while (v533 != v524 - 1);
LABEL_793:
        if ((_DWORD)v532 && !v526)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2039:
            abort();
          }
          v526 = 0;
        }
      }
      else
      {
        v526 += (2 * (v524 - 2) + 2) * v525;
      }
      v1115 = (4 * v81);
      v1116 = v526;
      sub_20B513184(v80, &v1115);
LABEL_1884:
      v1041 = v1114;
      v1114 = 0;
      if (v1041)
        (*(void (**)(uint64_t))(*(_QWORD *)v1041 + 8))(v1041);
      v484 = v1102;
      if (!v1102)
        return;
      v1042 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1042);
      while (__stlxr(v486 - 1, v1042));
      goto LABEL_2025;
    case 15:
      sub_20B376AB4(a3, (uint64_t)&v1101);
      v397 = *a2;
      v398 = v1111;
      v399 = v1101;
      if (!v1101)
        goto LABEL_1589;
      v400 = v1102;
      if (v1102)
      {
        v401 = (unint64_t *)&v1102->__shared_owners_;
        do
          v402 = __ldxr(v401);
        while (__stxr(v402 + 1, v401));
        do
          v403 = __ldaxr(v401);
        while (__stlxr(v403 - 1, v401));
        if (!v403)
        {
          ((void (*)(std::__shared_weak_count *))v400->__on_zero_shared)(v400);
          std::__shared_weak_count::__release_weak(v400);
        }
        v399 = v1101;
        v404 = v1102;
        if (v1102)
        {
          v405 = (unint64_t *)&v1102->__shared_owners_;
          do
            v406 = __ldxr(v405);
          while (__stxr(v406 + 1, v405));
          do
            v407 = __ldaxr(v405);
          while (__stlxr(v407 - 1, v405));
          if (!v407)
          {
            ((void (*)(std::__shared_weak_count *))v404->__on_zero_shared)(v404);
            std::__shared_weak_count::__release_weak(v404);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v399 + 96))(&v1115, v399, 0);
      else
LABEL_1589:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1780;
      if (!v1105)
        goto LABEL_1780;
      v911 = v1106;
      if (!v1106)
        goto LABEL_1780;
      v912 = v1110;
      v913 = v1103;
      if (v1112 && v1103)
      {
        v914 = v1101;
        v915 = v1102;
        if (v1102)
        {
          v916 = (unint64_t *)&v1102->__shared_owners_;
          do
            v917 = __ldxr(v916);
          while (__stxr(v917 + 1, v916));
          do
            v918 = __ldaxr(v916);
          while (__stlxr(v918 - 1, v916));
          if (!v918)
          {
            ((void (*)(std::__shared_weak_count *))v915->__on_zero_shared)(v915);
            std::__shared_weak_count::__release_weak(v915);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v914 + 88))(v914, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v913 = v1103;
      }
      v1098 = (4 * v398);
      if (v911 == 1)
        goto LABEL_1612;
      if (!(4 * v398))
        goto LABEL_1780;
      v919 = 0;
      do
      {
        if (!v913
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1615;
        }
        v920 = 0;
        v921 = *(_QWORD *)(v397 + 40);
        do
        {
          if (v921)
          {
            v922 = *(_QWORD **)(v397 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v397 + 32);
            sub_20AEC01D0(v922, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v397 + 24) + *(_QWORD *)(**(_QWORD **)(v397 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v913[v920];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v921 = *(_QWORD *)(v397 + 40) + 1;
          *(_QWORD *)(v397 + 40) = v921;
          v920 += 2;
        }
        while (2 * v1098 != v920);
        v913 += 2 * v912;
        ++v919;
      }
      while (v919 != v911 - 1);
LABEL_1612:
      if (!(_DWORD)v1098 || v913)
      {
        if (!(_DWORD)v1098)
          goto LABEL_1780;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1615:
        abort();
      }
      v1017 = *(_QWORD *)(v397 + 40);
      v1018 = 2 * v1098;
      do
      {
        if (v1017)
        {
          v1019 = *(_QWORD **)(v397 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v397 + 32);
          sub_20AEC01D0(v1019, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v397 + 24) + *(_QWORD *)(**(_QWORD **)(v397 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v913;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v1017 = *(_QWORD *)(v397 + 40) + 1;
        *(_QWORD *)(v397 + 40) = v1017;
        v913 += 2;
        v1018 -= 2;
      }
      while (v1018);
LABEL_1780:
      v1022 = v1115;
      v1115 = 0;
      if (v1022)
        (*(void (**)(uint64_t))(*(_QWORD *)v1022 + 8))(v1022);
      v484 = v1102;
      if (!v1102)
        return;
      v1023 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1023);
      while (__stlxr(v486 - 1, v1023));
      goto LABEL_2025;
    case 16:
      sub_20B3770EC(a3, (uint64_t)&v1101);
      v289 = *a2;
      v290 = v1111;
      v291 = v1101;
      if (!v1101)
        goto LABEL_1283;
      v292 = v1102;
      if (v1102)
      {
        v293 = (unint64_t *)&v1102->__shared_owners_;
        do
          v294 = __ldxr(v293);
        while (__stxr(v294 + 1, v293));
        do
          v295 = __ldaxr(v293);
        while (__stlxr(v295 - 1, v293));
        if (!v295)
        {
          ((void (*)(std::__shared_weak_count *))v292->__on_zero_shared)(v292);
          std::__shared_weak_count::__release_weak(v292);
        }
        v291 = v1101;
        v296 = v1102;
        if (v1102)
        {
          v297 = (unint64_t *)&v1102->__shared_owners_;
          do
            v298 = __ldxr(v297);
          while (__stxr(v298 + 1, v297));
          do
            v299 = __ldaxr(v297);
          while (__stlxr(v299 - 1, v297));
          if (!v299)
          {
            ((void (*)(std::__shared_weak_count *))v296->__on_zero_shared)(v296);
            std::__shared_weak_count::__release_weak(v296);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v291 + 96))(&v1114, v291, 0);
      else
LABEL_1283:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1980;
      if (!v1105)
        goto LABEL_1980;
      v770 = v1106;
      if (!v1106)
        goto LABEL_1980;
      v771 = v1110;
      v772 = v1103;
      if (v1112 && v1103)
      {
        v773 = v1101;
        v774 = v1102;
        if (v1102)
        {
          v775 = (unint64_t *)&v1102->__shared_owners_;
          do
            v776 = __ldxr(v775);
          while (__stxr(v776 + 1, v775));
          do
            v777 = __ldaxr(v775);
          while (__stlxr(v777 - 1, v775));
          if (!v777)
          {
            ((void (*)(std::__shared_weak_count *))v774->__on_zero_shared)(v774);
            std::__shared_weak_count::__release_weak(v774);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v773 + 88))(v773, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v772 = v1103;
      }
      v778 = (4 * v290);
      if (v770 == 1)
        goto LABEL_1306;
      if ((_DWORD)v778)
      {
        v779 = 0;
        do
        {
          if (!v772
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2052;
          }
          v780 = 0;
          v781 = *(_QWORD *)(v289 + 40);
          do
          {
            if (v781)
            {
              v782 = *(_QWORD **)(v289 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v289 + 32);
              sub_20AEC01D0(v782, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v289 + 24) + *(_QWORD *)(**(_QWORD **)(v289 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v781 = *(_QWORD *)(v289 + 40) + 1;
            *(_QWORD *)(v289 + 40) = v781;
            v780 += 4;
          }
          while (4 * v778 != v780);
          v772 += 4 * v771;
          ++v779;
        }
        while (v779 != v770 - 1);
LABEL_1306:
        if ((_DWORD)v778 && !v772)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2052:
            abort();
          }
          v772 = 0;
        }
      }
      else
      {
        v772 += (4 * (v770 - 2) + 4) * v771;
      }
      v1115 = v778;
      v1116 = v772;
      sub_20B513208(v289, &v1115);
LABEL_1980:
      v1065 = v1114;
      v1114 = 0;
      if (v1065)
        (*(void (**)(uint64_t))(*(_QWORD *)v1065 + 8))(v1065);
      v484 = v1102;
      if (!v1102)
        return;
      v1066 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1066);
      while (__stlxr(v486 - 1, v1066));
      goto LABEL_2025;
    case 17:
      sub_20B377724(a3, (uint64_t)&v1101);
      v408 = *a2;
      v409 = v1111;
      v410 = v1101;
      if (!v1101)
        goto LABEL_1616;
      v411 = v1102;
      if (v1102)
      {
        v412 = (unint64_t *)&v1102->__shared_owners_;
        do
          v413 = __ldxr(v412);
        while (__stxr(v413 + 1, v412));
        do
          v414 = __ldaxr(v412);
        while (__stlxr(v414 - 1, v412));
        if (!v414)
        {
          ((void (*)(std::__shared_weak_count *))v411->__on_zero_shared)(v411);
          std::__shared_weak_count::__release_weak(v411);
        }
        v410 = v1101;
        v415 = v1102;
        if (v1102)
        {
          v416 = (unint64_t *)&v1102->__shared_owners_;
          do
            v417 = __ldxr(v416);
          while (__stxr(v417 + 1, v416));
          do
            v418 = __ldaxr(v416);
          while (__stlxr(v418 - 1, v416));
          if (!v418)
          {
            ((void (*)(std::__shared_weak_count *))v415->__on_zero_shared)(v415);
            std::__shared_weak_count::__release_weak(v415);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v410 + 96))(&v1115, v410, 0);
      else
LABEL_1616:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1847;
      if (!v1105)
        goto LABEL_1847;
      v925 = v1106;
      if (!v1106)
        goto LABEL_1847;
      v926 = v1110;
      v927 = v1103;
      if (v1112 && v1103)
      {
        v928 = v1101;
        v929 = v1102;
        if (v1102)
        {
          v930 = (unint64_t *)&v1102->__shared_owners_;
          do
            v931 = __ldxr(v930);
          while (__stxr(v931 + 1, v930));
          do
            v932 = __ldaxr(v930);
          while (__stlxr(v932 - 1, v930));
          if (!v932)
          {
            ((void (*)(std::__shared_weak_count *))v929->__on_zero_shared)(v929);
            std::__shared_weak_count::__release_weak(v929);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v928 + 88))(v928, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v927 = v1103;
      }
      v933 = (3 * v409);
      if (v925 == 1)
      {
        v1099 = v409;
LABEL_1841:
        if (v1099 && !v927)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2036;
          }
          v927 = 0;
        }
        if (v1099)
        {
          do
          {
            sub_20B512EB0(v408, v927++);
            --v933;
          }
          while (v933);
        }
      }
      else if (v409)
      {
        v1099 = v409;
        v934 = 0;
        while (v927
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v935 = 0;
          do
            sub_20B512EB0(v408, &v927[v935++]);
          while (v933 != v935);
          v927 += v926;
          if (++v934 == v925 - 1)
            goto LABEL_1841;
        }
LABEL_2036:
        abort();
      }
LABEL_1847:
      v1033 = v1115;
      v1115 = 0;
      if (v1033)
        (*(void (**)(uint64_t))(*(_QWORD *)v1033 + 8))(v1033);
      v484 = v1102;
      if (!v1102)
        return;
      v1034 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1034);
      while (__stlxr(v486 - 1, v1034));
      goto LABEL_2025;
    case 18:
      sub_20B377D58(a3, (uint64_t)&v1101);
      v113 = *a2;
      v114 = v1111;
      v115 = v1101;
      if (!v1101)
        goto LABEL_857;
      v116 = v1102;
      if (v1102)
      {
        v117 = (unint64_t *)&v1102->__shared_owners_;
        do
          v118 = __ldxr(v117);
        while (__stxr(v118 + 1, v117));
        do
          v119 = __ldaxr(v117);
        while (__stlxr(v119 - 1, v117));
        if (!v119)
        {
          ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
          std::__shared_weak_count::__release_weak(v116);
        }
        v115 = v1101;
        v120 = v1102;
        if (v1102)
        {
          v121 = (unint64_t *)&v1102->__shared_owners_;
          do
            v122 = __ldxr(v121);
          while (__stxr(v122 + 1, v121));
          do
            v123 = __ldaxr(v121);
          while (__stlxr(v123 - 1, v121));
          if (!v123)
          {
            ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
            std::__shared_weak_count::__release_weak(v120);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v115 + 96))(&v1114, v115, 0);
      else
LABEL_857:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1900;
      if (!v1105)
        goto LABEL_1900;
      v563 = v1106;
      if (!v1106)
        goto LABEL_1900;
      v564 = v1110;
      v565 = v1103;
      if (v1112 && v1103)
      {
        v566 = v1101;
        v567 = v1102;
        if (v1102)
        {
          v568 = (unint64_t *)&v1102->__shared_owners_;
          do
            v569 = __ldxr(v568);
          while (__stxr(v569 + 1, v568));
          do
            v570 = __ldaxr(v568);
          while (__stlxr(v570 - 1, v568));
          if (!v570)
          {
            ((void (*)(std::__shared_weak_count *))v567->__on_zero_shared)(v567);
            std::__shared_weak_count::__release_weak(v567);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v566 + 88))(v566, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v565 = v1103;
      }
      if (v563 == 1)
      {
        v1080 = v114;
LABEL_1808:
        if (v1080 && !v565)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2047;
          }
          v565 = 0;
        }
      }
      else
      {
        if (v114)
        {
          v1080 = v114;
          v571 = 0;
          while (v565
               || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v572 = 0;
            v573 = *(_QWORD *)(v113 + 40);
            do
            {
              if (v573)
              {
                v574 = *(_QWORD **)(v113 + 24);
                LOBYTE(v1115) = *(_BYTE *)(v113 + 32);
                sub_20AEC01D0(v574, (uint64_t)&v1115, 1);
              }
              std::ostream::operator<<();
              v573 = *(_QWORD *)(v113 + 40) + 1;
              *(_QWORD *)(v113 + 40) = v573;
              v572 += 2;
            }
            while (2 * (3 * v114) != v572);
            v565 += 2 * v564;
            if (++v571 == v563 - 1)
              goto LABEL_1808;
          }
LABEL_2047:
          abort();
        }
        v565 += (2 * (v563 - 2) + 2) * v564;
      }
      v1115 = (3 * v114);
      v1116 = v565;
      sub_20B513184(v113, &v1115);
LABEL_1900:
      v1045 = v1114;
      v1114 = 0;
      if (v1045)
        (*(void (**)(uint64_t))(*(_QWORD *)v1045 + 8))(v1045);
      v484 = v1102;
      if (!v1102)
        return;
      v1046 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1046);
      while (__stlxr(v486 - 1, v1046));
      goto LABEL_2025;
    case 19:
      sub_20B378390(a3, (uint64_t)&v1101);
      v26 = *a2;
      v1086 = v1111;
      v27 = v1101;
      if (!v1101)
        goto LABEL_629;
      v28 = v1102;
      if (v1102)
      {
        v29 = (unint64_t *)&v1102->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
        v27 = v1101;
        v32 = v1102;
        if (v1102)
        {
          v33 = (unint64_t *)&v1102->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v27 + 96))(&v1115, v27, 0);
      else
LABEL_629:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1703;
      if (!v1105)
        goto LABEL_1703;
      v458 = v1106;
      if (!v1106)
        goto LABEL_1703;
      v459 = v1110;
      v460 = v1103;
      if (v1112 && v1103)
      {
        v461 = v1101;
        v462 = v1102;
        if (v1102)
        {
          v463 = (unint64_t *)&v1102->__shared_owners_;
          do
            v464 = __ldxr(v463);
          while (__stxr(v464 + 1, v463));
          do
            v465 = __ldaxr(v463);
          while (__stlxr(v465 - 1, v463));
          if (!v465)
          {
            ((void (*)(std::__shared_weak_count *))v462->__on_zero_shared)(v462);
            std::__shared_weak_count::__release_weak(v462);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v461 + 88))(v461, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v460 = v1103;
      }
      v1077 = (3 * v1086);
      if (v458 == 1)
        goto LABEL_652;
      if (!v1086)
        goto LABEL_1703;
      v466 = 0;
      do
      {
        if (!v460
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_655;
        }
        v467 = 0;
        v468 = *(_QWORD *)(v26 + 40);
        do
        {
          if (v468)
          {
            v469 = *(_QWORD **)(v26 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v26 + 32);
            sub_20AEC01D0(v469, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v26 + 24) + *(_QWORD *)(**(_QWORD **)(v26 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v460[v467];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v468 = *(_QWORD *)(v26 + 40) + 1;
          *(_QWORD *)(v26 + 40) = v468;
          v467 += 2;
        }
        while (2 * v1077 != v467);
        v460 += 2 * v459;
        ++v466;
      }
      while (v466 != v458 - 1);
LABEL_652:
      if (!v1086 || v460)
      {
        if (!v1086)
          goto LABEL_1703;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_655:
        abort();
      }
      v968 = *(_QWORD *)(v26 + 40);
      v969 = 2 * v1077;
      do
      {
        if (v968)
        {
          v970 = *(_QWORD **)(v26 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v26 + 32);
          sub_20AEC01D0(v970, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v26 + 24) + *(_QWORD *)(**(_QWORD **)(v26 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v460;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v968 = *(_QWORD *)(v26 + 40) + 1;
        *(_QWORD *)(v26 + 40) = v968;
        v460 += 2;
        v969 -= 2;
      }
      while (v969);
LABEL_1703:
      v973 = v1115;
      v1115 = 0;
      if (v973)
        (*(void (**)(uint64_t))(*(_QWORD *)v973 + 8))(v973);
      v484 = v1102;
      if (!v1102)
        return;
      v974 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v974);
      while (__stlxr(v486 - 1, v974));
      goto LABEL_2025;
    case 20:
      sub_20B3789C8(a3, (uint64_t)&v1101);
      v375 = *a2;
      v376 = v1111;
      v377 = v1101;
      if (!v1101)
        goto LABEL_1538;
      v378 = v1102;
      if (v1102)
      {
        v379 = (unint64_t *)&v1102->__shared_owners_;
        do
          v380 = __ldxr(v379);
        while (__stxr(v380 + 1, v379));
        do
          v381 = __ldaxr(v379);
        while (__stlxr(v381 - 1, v379));
        if (!v381)
        {
          ((void (*)(std::__shared_weak_count *))v378->__on_zero_shared)(v378);
          std::__shared_weak_count::__release_weak(v378);
        }
        v377 = v1101;
        v382 = v1102;
        if (v1102)
        {
          v383 = (unint64_t *)&v1102->__shared_owners_;
          do
            v384 = __ldxr(v383);
          while (__stxr(v384 + 1, v383));
          do
            v385 = __ldaxr(v383);
          while (__stlxr(v385 - 1, v383));
          if (!v385)
          {
            ((void (*)(std::__shared_weak_count *))v382->__on_zero_shared)(v382);
            std::__shared_weak_count::__release_weak(v382);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v377 + 96))(&v1114, v377, 0);
      else
LABEL_1538:
        v1114 = 0;
      if (!v1104)
        goto LABEL_2012;
      if (!v1105)
        goto LABEL_2012;
      v886 = v1106;
      if (!v1106)
        goto LABEL_2012;
      v887 = v1110;
      v888 = v1103;
      if (v1112 && v1103)
      {
        v889 = v1101;
        v890 = v1102;
        if (v1102)
        {
          v891 = (unint64_t *)&v1102->__shared_owners_;
          do
            v892 = __ldxr(v891);
          while (__stxr(v892 + 1, v891));
          do
            v893 = __ldaxr(v891);
          while (__stlxr(v893 - 1, v891));
          if (!v893)
          {
            ((void (*)(std::__shared_weak_count *))v890->__on_zero_shared)(v890);
            std::__shared_weak_count::__release_weak(v890);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v889 + 88))(v889, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v888 = v1103;
      }
      if (v886 == 1)
      {
        v1084 = v376;
LABEL_1836:
        if (v1084 && !v888)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2057;
          }
          v888 = 0;
        }
      }
      else
      {
        if (v376)
        {
          v1084 = v376;
          v894 = 0;
          while (v888
               || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v895 = 0;
            v896 = *(_QWORD *)(v375 + 40);
            do
            {
              if (v896)
              {
                v897 = *(_QWORD **)(v375 + 24);
                LOBYTE(v1115) = *(_BYTE *)(v375 + 32);
                sub_20AEC01D0(v897, (uint64_t)&v1115, 1);
              }
              *(_QWORD *)(*(_QWORD *)(v375 + 24) + *(_QWORD *)(**(_QWORD **)(v375 + 24) - 24) + 16) = 9;
              std::ostream::operator<<();
              v896 = *(_QWORD *)(v375 + 40) + 1;
              *(_QWORD *)(v375 + 40) = v896;
              v895 += 4;
            }
            while (4 * (3 * v376) != v895);
            v888 += 4 * v887;
            if (++v894 == v886 - 1)
              goto LABEL_1836;
          }
LABEL_2057:
          abort();
        }
        v888 += (4 * (v886 - 2) + 4) * v887;
      }
      v1115 = (3 * v376);
      v1116 = v888;
      sub_20B513208(v375, &v1115);
LABEL_2012:
      v1073 = v1114;
      v1114 = 0;
      if (v1073)
        (*(void (**)(uint64_t))(*(_QWORD *)v1073 + 8))(v1073);
      v484 = v1102;
      if (!v1102)
        return;
      v1074 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1074);
      while (__stlxr(v486 - 1, v1074));
      goto LABEL_2025;
    case 21:
      sub_20B2D7B44(a3, (uint64_t)&v1101);
      v429 = *a2;
      v430 = v1111;
      v431 = v1101;
      if (!v1101)
        goto LABEL_1665;
      v432 = v1102;
      if (v1102)
      {
        v433 = (unint64_t *)&v1102->__shared_owners_;
        do
          v434 = __ldxr(v433);
        while (__stxr(v434 + 1, v433));
        do
          v435 = __ldaxr(v433);
        while (__stlxr(v435 - 1, v433));
        if (!v435)
        {
          ((void (*)(std::__shared_weak_count *))v432->__on_zero_shared)(v432);
          std::__shared_weak_count::__release_weak(v432);
        }
        v431 = v1101;
        v436 = v1102;
        if (v1102)
        {
          v437 = (unint64_t *)&v1102->__shared_owners_;
          do
            v438 = __ldxr(v437);
          while (__stxr(v438 + 1, v437));
          do
            v439 = __ldaxr(v437);
          while (__stlxr(v439 - 1, v437));
          if (!v439)
          {
            ((void (*)(std::__shared_weak_count *))v436->__on_zero_shared)(v436);
            std::__shared_weak_count::__release_weak(v436);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v431 + 96))(&v1115, v431, 0);
      else
LABEL_1665:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1860;
      if (!v1105)
        goto LABEL_1860;
      v950 = v1106;
      if (!v1106)
        goto LABEL_1860;
      v951 = v1110;
      v952 = v1103;
      if (v1112 && v1103)
      {
        v953 = v1101;
        v954 = v1102;
        if (v1102)
        {
          v955 = (unint64_t *)&v1102->__shared_owners_;
          do
            v956 = __ldxr(v955);
          while (__stxr(v956 + 1, v955));
          do
            v957 = __ldaxr(v955);
          while (__stlxr(v957 - 1, v955));
          if (!v957)
          {
            ((void (*)(std::__shared_weak_count *))v954->__on_zero_shared)(v954);
            std::__shared_weak_count::__release_weak(v954);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v953 + 88))(v953, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v952 = v1103;
      }
      v958 = (3 * v430);
      if (v950 == 1)
      {
        v1100 = v430;
LABEL_1854:
        if (v1100 && !v952)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2037;
          }
          v952 = 0;
        }
        if (v1100)
        {
          do
          {
            sub_20B512EB0(v429, v952++);
            --v958;
          }
          while (v958);
        }
      }
      else if (v430)
      {
        v1100 = v430;
        v959 = 0;
        while (v952
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v960 = 0;
          do
            sub_20B512EB0(v429, &v952[v960++]);
          while (v958 != v960);
          v952 += v951;
          if (++v959 == v950 - 1)
            goto LABEL_1854;
        }
LABEL_2037:
        abort();
      }
LABEL_1860:
      v1035 = v1115;
      v1115 = 0;
      if (v1035)
        (*(void (**)(uint64_t))(*(_QWORD *)v1035 + 8))(v1035);
      v484 = v1102;
      if (!v1102)
        return;
      v1036 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1036);
      while (__stlxr(v486 - 1, v1036));
      goto LABEL_2025;
    case 22:
      sub_20B379000(a3, (uint64_t)&v1101);
      v146 = *a2;
      v147 = v1111;
      v148 = v1101;
      if (!v1101)
        goto LABEL_935;
      v149 = v1102;
      if (v1102)
      {
        v150 = (unint64_t *)&v1102->__shared_owners_;
        do
          v151 = __ldxr(v150);
        while (__stxr(v151 + 1, v150));
        do
          v152 = __ldaxr(v150);
        while (__stlxr(v152 - 1, v150));
        if (!v152)
        {
          ((void (*)(std::__shared_weak_count *))v149->__on_zero_shared)(v149);
          std::__shared_weak_count::__release_weak(v149);
        }
        v148 = v1101;
        v153 = v1102;
        if (v1102)
        {
          v154 = (unint64_t *)&v1102->__shared_owners_;
          do
            v155 = __ldxr(v154);
          while (__stxr(v155 + 1, v154));
          do
            v156 = __ldaxr(v154);
          while (__stlxr(v156 - 1, v154));
          if (!v156)
          {
            ((void (*)(std::__shared_weak_count *))v153->__on_zero_shared)(v153);
            std::__shared_weak_count::__release_weak(v153);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v148 + 96))(&v1114, v148, 0);
      else
LABEL_935:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1908;
      if (!v1105)
        goto LABEL_1908;
      v603 = v1106;
      if (!v1106)
        goto LABEL_1908;
      v604 = v1110;
      v605 = v1103;
      if (v1112 && v1103)
      {
        v606 = v1101;
        v607 = v1102;
        if (v1102)
        {
          v608 = (unint64_t *)&v1102->__shared_owners_;
          do
            v609 = __ldxr(v608);
          while (__stxr(v609 + 1, v608));
          do
            v610 = __ldaxr(v608);
          while (__stlxr(v610 - 1, v608));
          if (!v610)
          {
            ((void (*)(std::__shared_weak_count *))v607->__on_zero_shared)(v607);
            std::__shared_weak_count::__release_weak(v607);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v606 + 88))(v606, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v605 = v1103;
      }
      if (v603 == 1)
      {
        v1081 = v147;
LABEL_1813:
        if (v1081 && !v605)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2048;
          }
          v605 = 0;
        }
      }
      else
      {
        if (v147)
        {
          v1081 = v147;
          v611 = 0;
          while (v605
               || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v612 = 0;
            v613 = *(_QWORD *)(v146 + 40);
            do
            {
              if (v613)
              {
                v614 = *(_QWORD **)(v146 + 24);
                LOBYTE(v1115) = *(_BYTE *)(v146 + 32);
                sub_20AEC01D0(v614, (uint64_t)&v1115, 1);
              }
              std::ostream::operator<<();
              v613 = *(_QWORD *)(v146 + 40) + 1;
              *(_QWORD *)(v146 + 40) = v613;
              v612 += 2;
            }
            while (2 * (3 * v147) != v612);
            v605 += 2 * v604;
            if (++v611 == v603 - 1)
              goto LABEL_1813;
          }
LABEL_2048:
          abort();
        }
        v605 += (2 * (v603 - 2) + 2) * v604;
      }
      v1115 = (3 * v147);
      v1116 = v605;
      sub_20B513184(v146, &v1115);
LABEL_1908:
      v1047 = v1114;
      v1114 = 0;
      if (v1047)
        (*(void (**)(uint64_t))(*(_QWORD *)v1047 + 8))(v1047);
      v484 = v1102;
      if (!v1102)
        return;
      v1048 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1048);
      while (__stlxr(v486 - 1, v1048));
      goto LABEL_2025;
    case 23:
      sub_20B379638(a3, (uint64_t)&v1101);
      v419 = *a2;
      v1089 = v1111;
      v420 = v1101;
      if (!v1101)
        goto LABEL_1638;
      v421 = v1102;
      if (v1102)
      {
        v422 = (unint64_t *)&v1102->__shared_owners_;
        do
          v423 = __ldxr(v422);
        while (__stxr(v423 + 1, v422));
        do
          v424 = __ldaxr(v422);
        while (__stlxr(v424 - 1, v422));
        if (!v424)
        {
          ((void (*)(std::__shared_weak_count *))v421->__on_zero_shared)(v421);
          std::__shared_weak_count::__release_weak(v421);
        }
        v420 = v1101;
        v425 = v1102;
        if (v1102)
        {
          v426 = (unint64_t *)&v1102->__shared_owners_;
          do
            v427 = __ldxr(v426);
          while (__stxr(v427 + 1, v426));
          do
            v428 = __ldaxr(v426);
          while (__stlxr(v428 - 1, v426));
          if (!v428)
          {
            ((void (*)(std::__shared_weak_count *))v425->__on_zero_shared)(v425);
            std::__shared_weak_count::__release_weak(v425);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v420 + 96))(&v1115, v420, 0);
      else
LABEL_1638:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1791;
      if (!v1105)
        goto LABEL_1791;
      v936 = v1106;
      if (!v1106)
        goto LABEL_1791;
      v937 = v1110;
      v938 = v1103;
      if (v1112 && v1103)
      {
        v939 = v1101;
        v940 = v1102;
        if (v1102)
        {
          v941 = (unint64_t *)&v1102->__shared_owners_;
          do
            v942 = __ldxr(v941);
          while (__stxr(v942 + 1, v941));
          do
            v943 = __ldaxr(v941);
          while (__stlxr(v943 - 1, v941));
          if (!v943)
          {
            ((void (*)(std::__shared_weak_count *))v940->__on_zero_shared)(v940);
            std::__shared_weak_count::__release_weak(v940);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v939 + 88))(v939, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v938 = v1103;
      }
      v1085 = (3 * v1089);
      if (v936 == 1)
        goto LABEL_1661;
      if (!v1089)
        goto LABEL_1791;
      v944 = 0;
      do
      {
        if (!v938
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1664;
        }
        v945 = 0;
        v946 = *(_QWORD *)(v419 + 40);
        do
        {
          if (v946)
          {
            v947 = *(_QWORD **)(v419 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v419 + 32);
            sub_20AEC01D0(v947, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v419 + 24) + *(_QWORD *)(**(_QWORD **)(v419 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v938[v945];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v946 = *(_QWORD *)(v419 + 40) + 1;
          *(_QWORD *)(v419 + 40) = v946;
          v945 += 2;
        }
        while (2 * v1085 != v945);
        v938 += 2 * v937;
        ++v944;
      }
      while (v944 != v936 - 1);
LABEL_1661:
      if (!v1089 || v938)
      {
        if (!v1089)
          goto LABEL_1791;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1664:
        abort();
      }
      v1024 = *(_QWORD *)(v419 + 40);
      v1025 = 2 * v1085;
      do
      {
        if (v1024)
        {
          v1026 = *(_QWORD **)(v419 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v419 + 32);
          sub_20AEC01D0(v1026, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v419 + 24) + *(_QWORD *)(**(_QWORD **)(v419 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v938;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v1024 = *(_QWORD *)(v419 + 40) + 1;
        *(_QWORD *)(v419 + 40) = v1024;
        v938 += 2;
        v1025 -= 2;
      }
      while (v1025);
LABEL_1791:
      v1029 = v1115;
      v1115 = 0;
      if (v1029)
        (*(void (**)(uint64_t))(*(_QWORD *)v1029 + 8))(v1029);
      v484 = v1102;
      if (!v1102)
        return;
      v1030 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1030);
      while (__stlxr(v486 - 1, v1030));
      goto LABEL_2025;
    case 24:
      sub_20B379C70(a3, (uint64_t)&v1101);
      v69 = *a2;
      v70 = v1111;
      v71 = v1101;
      if (!v1101)
        goto LABEL_746;
      v72 = v1102;
      if (v1102)
      {
        v73 = (unint64_t *)&v1102->__shared_owners_;
        do
          v74 = __ldxr(v73);
        while (__stxr(v74 + 1, v73));
        do
          v75 = __ldaxr(v73);
        while (__stlxr(v75 - 1, v73));
        if (!v75)
        {
          ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
          std::__shared_weak_count::__release_weak(v72);
        }
        v71 = v1101;
        v76 = v1102;
        if (v1102)
        {
          v77 = (unint64_t *)&v1102->__shared_owners_;
          do
            v78 = __ldxr(v77);
          while (__stxr(v78 + 1, v77));
          do
            v79 = __ldaxr(v77);
          while (__stlxr(v79 - 1, v77));
          if (!v79)
          {
            ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
            std::__shared_weak_count::__release_weak(v76);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v71 + 96))(&v1114, v71, 0);
      else
LABEL_746:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1876;
      if (!v1105)
        goto LABEL_1876;
      v512 = v1106;
      if (!v1106)
        goto LABEL_1876;
      v513 = v1110;
      v514 = v1103;
      if (v1112 && v1103)
      {
        v515 = v1101;
        v516 = v1102;
        if (v1102)
        {
          v517 = (unint64_t *)&v1102->__shared_owners_;
          do
            v518 = __ldxr(v517);
          while (__stxr(v518 + 1, v517));
          do
            v519 = __ldaxr(v517);
          while (__stlxr(v519 - 1, v517));
          if (!v519)
          {
            ((void (*)(std::__shared_weak_count *))v516->__on_zero_shared)(v516);
            std::__shared_weak_count::__release_weak(v516);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v515 + 88))(v515, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v514 = v1103;
      }
      if (v512 == 1)
      {
        v1079 = v70;
LABEL_1803:
        if (v1079 && !v514)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2046;
          }
          v514 = 0;
        }
      }
      else
      {
        if (v70)
        {
          v1079 = v70;
          v520 = 0;
          while (v514
               || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v521 = 0;
            v522 = *(_QWORD *)(v69 + 40);
            do
            {
              if (v522)
              {
                v523 = *(_QWORD **)(v69 + 24);
                LOBYTE(v1115) = *(_BYTE *)(v69 + 32);
                sub_20AEC01D0(v523, (uint64_t)&v1115, 1);
              }
              *(_QWORD *)(*(_QWORD *)(v69 + 24) + *(_QWORD *)(**(_QWORD **)(v69 + 24) - 24) + 16) = 9;
              std::ostream::operator<<();
              v522 = *(_QWORD *)(v69 + 40) + 1;
              *(_QWORD *)(v69 + 40) = v522;
              v521 += 4;
            }
            while (4 * (3 * v70) != v521);
            v514 += 4 * v513;
            if (++v520 == v512 - 1)
              goto LABEL_1803;
          }
LABEL_2046:
          abort();
        }
        v514 += (4 * (v512 - 2) + 4) * v513;
      }
      v1115 = (3 * v70);
      v1116 = v514;
      sub_20B513208(v69, &v1115);
LABEL_1876:
      v1039 = v1114;
      v1114 = 0;
      if (v1039)
        (*(void (**)(uint64_t))(*(_QWORD *)v1039 + 8))(v1039);
      v484 = v1102;
      if (v1102)
      {
        v1040 = (unint64_t *)&v1102->__shared_owners_;
        do
          v486 = __ldaxr(v1040);
        while (__stlxr(v486 - 1, v1040));
LABEL_2025:
        if (!v486)
        {
          ((void (*)(std::__shared_weak_count *))v484->__on_zero_shared)(v484);
          std::__shared_weak_count::__release_weak(v484);
        }
      }
      return;
    case 25:
      sub_20B37A2A8(a3, (uint64_t)&v1101);
      v36 = *a2;
      v37 = v1111;
      v38 = v1101;
      if (!v1101)
        goto LABEL_656;
      v39 = v1102;
      if (v1102)
      {
        v40 = (unint64_t *)&v1102->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
        }
        v38 = v1101;
        v43 = v1102;
        if (v1102)
        {
          v44 = (unint64_t *)&v1102->__shared_owners_;
          do
            v45 = __ldxr(v44);
          while (__stxr(v45 + 1, v44));
          do
            v46 = __ldaxr(v44);
          while (__stlxr(v46 - 1, v44));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
            std::__shared_weak_count::__release_weak(v43);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v38 + 96))(&v1115, v38, 0);
      else
LABEL_656:
        v1115 = 0;
      if (!v1104)
        goto LABEL_683;
      if (!v1105)
        goto LABEL_683;
      v472 = v1106;
      if (!v1106)
        goto LABEL_683;
      v473 = v1110;
      v474 = v1103;
      if (v1112 && v1103)
      {
        v475 = v1101;
        v476 = v1102;
        if (v1102)
        {
          v477 = (unint64_t *)&v1102->__shared_owners_;
          do
            v478 = __ldxr(v477);
          while (__stxr(v478 + 1, v477));
          do
            v479 = __ldaxr(v477);
          while (__stlxr(v479 - 1, v477));
          if (!v479)
          {
            ((void (*)(std::__shared_weak_count *))v476->__on_zero_shared)(v476);
            std::__shared_weak_count::__release_weak(v476);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v475 + 88))(v475, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v474 = v1103;
      }
      v480 = (4 * v37);
      if (v472 == 1)
        goto LABEL_677;
      if (!(_DWORD)v480)
        goto LABEL_683;
      v481 = 0;
      do
      {
        if (!v474
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2028;
        }
        for (m = 0; m != v480; ++m)
          sub_20B512EB0(v36, &v474[m]);
        v474 += v473;
        ++v481;
      }
      while (v481 != v472 - 1);
LABEL_677:
      if ((_DWORD)v480 && !v474)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2028:
          abort();
        }
        v474 = 0;
      }
      if ((_DWORD)v480)
      {
        do
        {
          sub_20B512EB0(v36, v474++);
          --v480;
        }
        while (v480);
      }
LABEL_683:
      v483 = v1115;
      v1115 = 0;
      if (v483)
        (*(void (**)(uint64_t))(*(_QWORD *)v483 + 8))(v483);
      v484 = v1102;
      if (!v1102)
        return;
      v485 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v485);
      while (__stlxr(v486 - 1, v485));
      goto LABEL_2025;
    case 26:
      sub_20B37A8DC(a3, (uint64_t)&v1101);
      v157 = *a2;
      v158 = v1111;
      v159 = v1101;
      if (!v1101)
        goto LABEL_959;
      v160 = v1102;
      if (v1102)
      {
        v161 = (unint64_t *)&v1102->__shared_owners_;
        do
          v162 = __ldxr(v161);
        while (__stxr(v162 + 1, v161));
        do
          v163 = __ldaxr(v161);
        while (__stlxr(v163 - 1, v161));
        if (!v163)
        {
          ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
          std::__shared_weak_count::__release_weak(v160);
        }
        v159 = v1101;
        v164 = v1102;
        if (v1102)
        {
          v165 = (unint64_t *)&v1102->__shared_owners_;
          do
            v166 = __ldxr(v165);
          while (__stxr(v166 + 1, v165));
          do
            v167 = __ldaxr(v165);
          while (__stlxr(v167 - 1, v165));
          if (!v167)
          {
            ((void (*)(std::__shared_weak_count *))v164->__on_zero_shared)(v164);
            std::__shared_weak_count::__release_weak(v164);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v159 + 96))(&v1114, v159, 0);
      else
LABEL_959:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1916;
      if (!v1105)
        goto LABEL_1916;
      v615 = v1106;
      if (!v1106)
        goto LABEL_1916;
      v616 = v1110;
      v617 = v1103;
      if (v1112 && v1103)
      {
        v618 = v1101;
        v619 = v1102;
        if (v1102)
        {
          v620 = (unint64_t *)&v1102->__shared_owners_;
          do
            v621 = __ldxr(v620);
          while (__stxr(v621 + 1, v620));
          do
            v622 = __ldaxr(v620);
          while (__stlxr(v622 - 1, v620));
          if (!v622)
          {
            ((void (*)(std::__shared_weak_count *))v619->__on_zero_shared)(v619);
            std::__shared_weak_count::__release_weak(v619);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v618 + 88))(v618, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v617 = v1103;
      }
      v623 = (4 * v158);
      if (v615 == 1)
        goto LABEL_982;
      if ((_DWORD)v623)
      {
        v624 = 0;
        do
        {
          if (!v617
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2041;
          }
          v625 = 0;
          v626 = *(_QWORD *)(v157 + 40);
          do
          {
            if (v626)
            {
              v627 = *(_QWORD **)(v157 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v157 + 32);
              sub_20AEC01D0(v627, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v626 = *(_QWORD *)(v157 + 40) + 1;
            *(_QWORD *)(v157 + 40) = v626;
            v625 += 2;
          }
          while (2 * v623 != v625);
          v617 += 2 * v616;
          ++v624;
        }
        while (v624 != v615 - 1);
LABEL_982:
        if ((_DWORD)v623 && !v617)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2041:
            abort();
          }
          v617 = 0;
        }
      }
      else
      {
        v617 += (2 * (v615 - 2) + 2) * v616;
      }
      v1115 = (4 * v158);
      v1116 = v617;
      sub_20B513184(v157, &v1115);
LABEL_1916:
      v1049 = v1114;
      v1114 = 0;
      if (v1049)
        (*(void (**)(uint64_t))(*(_QWORD *)v1049 + 8))(v1049);
      v484 = v1102;
      if (!v1102)
        return;
      v1050 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1050);
      while (__stlxr(v486 - 1, v1050));
      goto LABEL_2025;
    case 27:
      sub_20B37AF14(a3, (uint64_t)&v1101);
      v15 = *a2;
      v16 = v1111;
      v17 = v1101;
      if (!v1101)
        goto LABEL_602;
      v18 = v1102;
      if (v1102)
      {
        v19 = (unint64_t *)&v1102->__shared_owners_;
        do
          v20 = __ldxr(v19);
        while (__stxr(v20 + 1, v19));
        do
          v21 = __ldaxr(v19);
        while (__stlxr(v21 - 1, v19));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
        v17 = v1101;
        v22 = v1102;
        if (v1102)
        {
          v23 = (unint64_t *)&v1102->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
            std::__shared_weak_count::__release_weak(v22);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v17 + 96))(&v1115, v17, 0);
      else
LABEL_602:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1692;
      if (!v1105)
        goto LABEL_1692;
      v440 = v1106;
      if (!v1106)
        goto LABEL_1692;
      v441 = v1110;
      v442 = v1103;
      if (v1112 && v1103)
      {
        v443 = v1101;
        v444 = v1102;
        if (v1102)
        {
          v445 = (unint64_t *)&v1102->__shared_owners_;
          do
            v446 = __ldxr(v445);
          while (__stxr(v446 + 1, v445));
          do
            v447 = __ldaxr(v445);
          while (__stlxr(v447 - 1, v445));
          if (!v447)
          {
            ((void (*)(std::__shared_weak_count *))v444->__on_zero_shared)(v444);
            std::__shared_weak_count::__release_weak(v444);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v443 + 88))(v443, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v442 = v1103;
      }
      v1090 = (4 * v16);
      if (v440 == 1)
        goto LABEL_625;
      if (!(4 * v16))
        goto LABEL_1692;
      v448 = 0;
      do
      {
        if (!v442
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_628;
        }
        v449 = 0;
        v450 = *(_QWORD *)(v15 + 40);
        do
        {
          if (v450)
          {
            v451 = *(_QWORD **)(v15 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v15 + 32);
            sub_20AEC01D0(v451, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v15 + 24) + *(_QWORD *)(**(_QWORD **)(v15 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v442[v449];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v450 = *(_QWORD *)(v15 + 40) + 1;
          *(_QWORD *)(v15 + 40) = v450;
          v449 += 2;
        }
        while (2 * v1090 != v449);
        v442 += 2 * v441;
        ++v448;
      }
      while (v448 != v440 - 1);
LABEL_625:
      if (!(_DWORD)v1090 || v442)
      {
        if (!(_DWORD)v1090)
          goto LABEL_1692;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_628:
        abort();
      }
      v961 = *(_QWORD *)(v15 + 40);
      v962 = 2 * v1090;
      do
      {
        if (v961)
        {
          v963 = *(_QWORD **)(v15 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v15 + 32);
          sub_20AEC01D0(v963, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v15 + 24) + *(_QWORD *)(**(_QWORD **)(v15 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v442;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v961 = *(_QWORD *)(v15 + 40) + 1;
        *(_QWORD *)(v15 + 40) = v961;
        v442 += 2;
        v962 -= 2;
      }
      while (v962);
LABEL_1692:
      v966 = v1115;
      v1115 = 0;
      if (v966)
        (*(void (**)(uint64_t))(*(_QWORD *)v966 + 8))(v966);
      v484 = v1102;
      if (!v1102)
        return;
      v967 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v967);
      while (__stlxr(v486 - 1, v967));
      goto LABEL_2025;
    case 28:
      sub_20B37B54C(a3, (uint64_t)&v1101);
      v201 = *a2;
      v202 = v1111;
      v203 = v1101;
      if (!v1101)
        goto LABEL_1066;
      v204 = v1102;
      if (v1102)
      {
        v205 = (unint64_t *)&v1102->__shared_owners_;
        do
          v206 = __ldxr(v205);
        while (__stxr(v206 + 1, v205));
        do
          v207 = __ldaxr(v205);
        while (__stlxr(v207 - 1, v205));
        if (!v207)
        {
          ((void (*)(std::__shared_weak_count *))v204->__on_zero_shared)(v204);
          std::__shared_weak_count::__release_weak(v204);
        }
        v203 = v1101;
        v208 = v1102;
        if (v1102)
        {
          v209 = (unint64_t *)&v1102->__shared_owners_;
          do
            v210 = __ldxr(v209);
          while (__stxr(v210 + 1, v209));
          do
            v211 = __ldaxr(v209);
          while (__stlxr(v211 - 1, v209));
          if (!v211)
          {
            ((void (*)(std::__shared_weak_count *))v208->__on_zero_shared)(v208);
            std::__shared_weak_count::__release_weak(v208);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v203 + 96))(&v1114, v203, 0);
      else
LABEL_1066:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1940;
      if (!v1105)
        goto LABEL_1940;
      v667 = v1106;
      if (!v1106)
        goto LABEL_1940;
      v668 = v1110;
      v669 = v1103;
      if (v1112 && v1103)
      {
        v670 = v1101;
        v671 = v1102;
        if (v1102)
        {
          v672 = (unint64_t *)&v1102->__shared_owners_;
          do
            v673 = __ldxr(v672);
          while (__stxr(v673 + 1, v672));
          do
            v674 = __ldaxr(v672);
          while (__stlxr(v674 - 1, v672));
          if (!v674)
          {
            ((void (*)(std::__shared_weak_count *))v671->__on_zero_shared)(v671);
            std::__shared_weak_count::__release_weak(v671);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v670 + 88))(v670, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v669 = v1103;
      }
      v675 = (4 * v202);
      if (v667 == 1)
        goto LABEL_1089;
      if ((_DWORD)v675)
      {
        v676 = 0;
        do
        {
          if (!v669
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2044;
          }
          v677 = 0;
          v678 = *(_QWORD *)(v201 + 40);
          do
          {
            if (v678)
            {
              v679 = *(_QWORD **)(v201 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v201 + 32);
              sub_20AEC01D0(v679, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v201 + 24) + *(_QWORD *)(**(_QWORD **)(v201 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v678 = *(_QWORD *)(v201 + 40) + 1;
            *(_QWORD *)(v201 + 40) = v678;
            v677 += 4;
          }
          while (4 * v675 != v677);
          v669 += 4 * v668;
          ++v676;
        }
        while (v676 != v667 - 1);
LABEL_1089:
        if ((_DWORD)v675 && !v669)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2044:
            abort();
          }
          v669 = 0;
        }
      }
      else
      {
        v669 += (4 * (v667 - 2) + 4) * v668;
      }
      v1115 = v675;
      v1116 = v669;
      sub_20B513208(v201, &v1115);
LABEL_1940:
      v1055 = v1114;
      v1114 = 0;
      if (v1055)
        (*(void (**)(uint64_t))(*(_QWORD *)v1055 + 8))(v1055);
      v484 = v1102;
      if (!v1102)
        return;
      v1056 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1056);
      while (__stlxr(v486 - 1, v1056));
      goto LABEL_2025;
    case 29:
      sub_20B37BB84(a3, (uint64_t)&v1101);
      v58 = *a2;
      v59 = v1111;
      v60 = v1101;
      if (!v1101)
        goto LABEL_713;
      v61 = v1102;
      if (v1102)
      {
        v62 = (unint64_t *)&v1102->__shared_owners_;
        do
          v63 = __ldxr(v62);
        while (__stxr(v63 + 1, v62));
        do
          v64 = __ldaxr(v62);
        while (__stlxr(v64 - 1, v62));
        if (!v64)
        {
          ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
          std::__shared_weak_count::__release_weak(v61);
        }
        v60 = v1101;
        v65 = v1102;
        if (v1102)
        {
          v66 = (unint64_t *)&v1102->__shared_owners_;
          do
            v67 = __ldxr(v66);
          while (__stxr(v67 + 1, v66));
          do
            v68 = __ldaxr(v66);
          while (__stlxr(v68 - 1, v66));
          if (!v68)
          {
            ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
            std::__shared_weak_count::__release_weak(v65);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v60 + 96))(&v1115, v60, 0);
      else
LABEL_713:
        v1115 = 0;
      if (!v1104)
        goto LABEL_740;
      if (!v1105)
        goto LABEL_740;
      v499 = v1106;
      if (!v1106)
        goto LABEL_740;
      v500 = v1110;
      v501 = v1103;
      if (v1112 && v1103)
      {
        v502 = v1101;
        v503 = v1102;
        if (v1102)
        {
          v504 = (unint64_t *)&v1102->__shared_owners_;
          do
            v505 = __ldxr(v504);
          while (__stxr(v505 + 1, v504));
          do
            v506 = __ldaxr(v504);
          while (__stlxr(v506 - 1, v504));
          if (!v506)
          {
            ((void (*)(std::__shared_weak_count *))v503->__on_zero_shared)(v503);
            std::__shared_weak_count::__release_weak(v503);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v502 + 88))(v502, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v501 = v1103;
      }
      v507 = (4 * v59);
      if (v499 == 1)
        goto LABEL_734;
      if (!(_DWORD)v507)
        goto LABEL_740;
      v508 = 0;
      do
      {
        if (!v501
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2029;
        }
        for (n = 0; n != v507; ++n)
          sub_20B512EB0(v58, &v501[n]);
        v501 += v500;
        ++v508;
      }
      while (v508 != v499 - 1);
LABEL_734:
      if ((_DWORD)v507 && !v501)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2029:
          abort();
        }
        v501 = 0;
      }
      if ((_DWORD)v507)
      {
        do
        {
          sub_20B512EB0(v58, v501++);
          --v507;
        }
        while (v507);
      }
LABEL_740:
      v510 = v1115;
      v1115 = 0;
      if (v510)
        (*(void (**)(uint64_t))(*(_QWORD *)v510 + 8))(v510);
      v484 = v1102;
      if (!v1102)
        return;
      v511 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v511);
      while (__stlxr(v486 - 1, v511));
      goto LABEL_2025;
    case 30:
      sub_20B37C1B8(a3, (uint64_t)&v1101);
      v234 = *a2;
      v235 = v1111;
      v236 = v1101;
      if (!v1101)
        goto LABEL_1147;
      v237 = v1102;
      if (v1102)
      {
        v238 = (unint64_t *)&v1102->__shared_owners_;
        do
          v239 = __ldxr(v238);
        while (__stxr(v239 + 1, v238));
        do
          v240 = __ldaxr(v238);
        while (__stlxr(v240 - 1, v238));
        if (!v240)
        {
          ((void (*)(std::__shared_weak_count *))v237->__on_zero_shared)(v237);
          std::__shared_weak_count::__release_weak(v237);
        }
        v236 = v1101;
        v241 = v1102;
        if (v1102)
        {
          v242 = (unint64_t *)&v1102->__shared_owners_;
          do
            v243 = __ldxr(v242);
          while (__stxr(v243 + 1, v242));
          do
            v244 = __ldaxr(v242);
          while (__stlxr(v244 - 1, v242));
          if (!v244)
          {
            ((void (*)(std::__shared_weak_count *))v241->__on_zero_shared)(v241);
            std::__shared_weak_count::__release_weak(v241);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v236 + 96))(&v1114, v236, 0);
      else
LABEL_1147:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1956;
      if (!v1105)
        goto LABEL_1956;
      v707 = v1106;
      if (!v1106)
        goto LABEL_1956;
      v708 = v1110;
      v709 = v1103;
      if (v1112 && v1103)
      {
        v710 = v1101;
        v711 = v1102;
        if (v1102)
        {
          v712 = (unint64_t *)&v1102->__shared_owners_;
          do
            v713 = __ldxr(v712);
          while (__stxr(v713 + 1, v712));
          do
            v714 = __ldaxr(v712);
          while (__stlxr(v714 - 1, v712));
          if (!v714)
          {
            ((void (*)(std::__shared_weak_count *))v711->__on_zero_shared)(v711);
            std::__shared_weak_count::__release_weak(v711);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v710 + 88))(v710, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v709 = v1103;
      }
      v715 = (4 * v235);
      if (v707 == 1)
        goto LABEL_1170;
      if ((_DWORD)v715)
      {
        v716 = 0;
        do
        {
          if (!v709
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2049;
          }
          v717 = 0;
          v718 = *(_QWORD *)(v234 + 40);
          do
          {
            if (v718)
            {
              v719 = *(_QWORD **)(v234 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v234 + 32);
              sub_20AEC01D0(v719, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v718 = *(_QWORD *)(v234 + 40) + 1;
            *(_QWORD *)(v234 + 40) = v718;
            v717 += 2;
          }
          while (2 * v715 != v717);
          v709 += 2 * v708;
          ++v716;
        }
        while (v716 != v707 - 1);
LABEL_1170:
        if ((_DWORD)v715 && !v709)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2049:
            abort();
          }
          v709 = 0;
        }
      }
      else
      {
        v709 += (2 * (v707 - 2) + 2) * v708;
      }
      v1115 = (4 * v235);
      v1116 = v709;
      sub_20B513184(v234, &v1115);
LABEL_1956:
      v1059 = v1114;
      v1114 = 0;
      if (v1059)
        (*(void (**)(uint64_t))(*(_QWORD *)v1059 + 8))(v1059);
      v484 = v1102;
      if (!v1102)
        return;
      v1060 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1060);
      while (__stlxr(v486 - 1, v1060));
      goto LABEL_2025;
    case 31:
      sub_20B37C7F0(a3, (uint64_t)&v1101);
      v168 = *a2;
      v169 = v1111;
      v170 = v1101;
      if (!v1101)
        goto LABEL_986;
      v171 = v1102;
      if (v1102)
      {
        v172 = (unint64_t *)&v1102->__shared_owners_;
        do
          v173 = __ldxr(v172);
        while (__stxr(v173 + 1, v172));
        do
          v174 = __ldaxr(v172);
        while (__stlxr(v174 - 1, v172));
        if (!v174)
        {
          ((void (*)(std::__shared_weak_count *))v171->__on_zero_shared)(v171);
          std::__shared_weak_count::__release_weak(v171);
        }
        v170 = v1101;
        v175 = v1102;
        if (v1102)
        {
          v176 = (unint64_t *)&v1102->__shared_owners_;
          do
            v177 = __ldxr(v176);
          while (__stxr(v177 + 1, v176));
          do
            v178 = __ldaxr(v176);
          while (__stlxr(v178 - 1, v176));
          if (!v178)
          {
            ((void (*)(std::__shared_weak_count *))v175->__on_zero_shared)(v175);
            std::__shared_weak_count::__release_weak(v175);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v170 + 96))(&v1115, v170, 0);
      else
LABEL_986:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1736;
      if (!v1105)
        goto LABEL_1736;
      v628 = v1106;
      if (!v1106)
        goto LABEL_1736;
      v629 = v1110;
      v630 = v1103;
      if (v1112 && v1103)
      {
        v631 = v1101;
        v632 = v1102;
        if (v1102)
        {
          v633 = (unint64_t *)&v1102->__shared_owners_;
          do
            v634 = __ldxr(v633);
          while (__stxr(v634 + 1, v633));
          do
            v635 = __ldaxr(v633);
          while (__stlxr(v635 - 1, v633));
          if (!v635)
          {
            ((void (*)(std::__shared_weak_count *))v632->__on_zero_shared)(v632);
            std::__shared_weak_count::__release_weak(v632);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v631 + 88))(v631, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v630 = v1103;
      }
      v1093 = (4 * v169);
      if (v628 == 1)
        goto LABEL_1009;
      if (!(4 * v169))
        goto LABEL_1736;
      v636 = 0;
      do
      {
        if (!v630
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1012;
        }
        v637 = 0;
        v638 = *(_QWORD *)(v168 + 40);
        do
        {
          if (v638)
          {
            v639 = *(_QWORD **)(v168 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v168 + 32);
            sub_20AEC01D0(v639, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v168 + 24) + *(_QWORD *)(**(_QWORD **)(v168 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v630[v637];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v638 = *(_QWORD *)(v168 + 40) + 1;
          *(_QWORD *)(v168 + 40) = v638;
          v637 += 2;
        }
        while (2 * v1093 != v637);
        v630 += 2 * v629;
        ++v636;
      }
      while (v636 != v628 - 1);
LABEL_1009:
      if (!(_DWORD)v1093 || v630)
      {
        if (!(_DWORD)v1093)
          goto LABEL_1736;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1012:
        abort();
      }
      v989 = *(_QWORD *)(v168 + 40);
      v990 = 2 * v1093;
      do
      {
        if (v989)
        {
          v991 = *(_QWORD **)(v168 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v168 + 32);
          sub_20AEC01D0(v991, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v168 + 24) + *(_QWORD *)(**(_QWORD **)(v168 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v630;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v989 = *(_QWORD *)(v168 + 40) + 1;
        *(_QWORD *)(v168 + 40) = v989;
        v630 += 2;
        v990 -= 2;
      }
      while (v990);
LABEL_1736:
      v994 = v1115;
      v1115 = 0;
      if (v994)
        (*(void (**)(uint64_t))(*(_QWORD *)v994 + 8))(v994);
      v484 = v1102;
      if (!v1102)
        return;
      v995 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v995);
      while (__stlxr(v486 - 1, v995));
      goto LABEL_2025;
    case 32:
      sub_20B37CE28(a3, (uint64_t)&v1101);
      v256 = *a2;
      v257 = v1111;
      v258 = v1101;
      if (!v1101)
        goto LABEL_1201;
      v259 = v1102;
      if (v1102)
      {
        v260 = (unint64_t *)&v1102->__shared_owners_;
        do
          v261 = __ldxr(v260);
        while (__stxr(v261 + 1, v260));
        do
          v262 = __ldaxr(v260);
        while (__stlxr(v262 - 1, v260));
        if (!v262)
        {
          ((void (*)(std::__shared_weak_count *))v259->__on_zero_shared)(v259);
          std::__shared_weak_count::__release_weak(v259);
        }
        v258 = v1101;
        v263 = v1102;
        if (v1102)
        {
          v264 = (unint64_t *)&v1102->__shared_owners_;
          do
            v265 = __ldxr(v264);
          while (__stxr(v265 + 1, v264));
          do
            v266 = __ldaxr(v264);
          while (__stlxr(v266 - 1, v264));
          if (!v266)
          {
            ((void (*)(std::__shared_weak_count *))v263->__on_zero_shared)(v263);
            std::__shared_weak_count::__release_weak(v263);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v258 + 96))(&v1114, v258, 0);
      else
LABEL_1201:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1972;
      if (!v1105)
        goto LABEL_1972;
      v733 = v1106;
      if (!v1106)
        goto LABEL_1972;
      v734 = v1110;
      v735 = v1103;
      if (v1112 && v1103)
      {
        v736 = v1101;
        v737 = v1102;
        if (v1102)
        {
          v738 = (unint64_t *)&v1102->__shared_owners_;
          do
            v739 = __ldxr(v738);
          while (__stxr(v739 + 1, v738));
          do
            v740 = __ldaxr(v738);
          while (__stlxr(v740 - 1, v738));
          if (!v740)
          {
            ((void (*)(std::__shared_weak_count *))v737->__on_zero_shared)(v737);
            std::__shared_weak_count::__release_weak(v737);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v736 + 88))(v736, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v735 = v1103;
      }
      v741 = (4 * v257);
      if (v733 == 1)
        goto LABEL_1224;
      if ((_DWORD)v741)
      {
        v742 = 0;
        do
        {
          if (!v735
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2051;
          }
          v743 = 0;
          v744 = *(_QWORD *)(v256 + 40);
          do
          {
            if (v744)
            {
              v745 = *(_QWORD **)(v256 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v256 + 32);
              sub_20AEC01D0(v745, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v256 + 24) + *(_QWORD *)(**(_QWORD **)(v256 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v744 = *(_QWORD *)(v256 + 40) + 1;
            *(_QWORD *)(v256 + 40) = v744;
            v743 += 4;
          }
          while (4 * v741 != v743);
          v735 += 4 * v734;
          ++v742;
        }
        while (v742 != v733 - 1);
LABEL_1224:
        if ((_DWORD)v741 && !v735)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2051:
            abort();
          }
          v735 = 0;
        }
      }
      else
      {
        v735 += (4 * (v733 - 2) + 4) * v734;
      }
      v1115 = v741;
      v1116 = v735;
      sub_20B513208(v256, &v1115);
LABEL_1972:
      v1063 = v1114;
      v1114 = 0;
      if (v1063)
        (*(void (**)(uint64_t))(*(_QWORD *)v1063 + 8))(v1063);
      v484 = v1102;
      if (!v1102)
        return;
      v1064 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1064);
      while (__stlxr(v486 - 1, v1064));
      goto LABEL_2025;
    case 33:
      sub_20B37D460(a3, (uint64_t)&v1101);
      v364 = *a2;
      v365 = v1111;
      v366 = v1101;
      if (!v1101)
        goto LABEL_1505;
      v367 = v1102;
      if (v1102)
      {
        v368 = (unint64_t *)&v1102->__shared_owners_;
        do
          v369 = __ldxr(v368);
        while (__stxr(v369 + 1, v368));
        do
          v370 = __ldaxr(v368);
        while (__stlxr(v370 - 1, v368));
        if (!v370)
        {
          ((void (*)(std::__shared_weak_count *))v367->__on_zero_shared)(v367);
          std::__shared_weak_count::__release_weak(v367);
        }
        v366 = v1101;
        v371 = v1102;
        if (v1102)
        {
          v372 = (unint64_t *)&v1102->__shared_owners_;
          do
            v373 = __ldxr(v372);
          while (__stxr(v373 + 1, v372));
          do
            v374 = __ldaxr(v372);
          while (__stlxr(v374 - 1, v372));
          if (!v374)
          {
            ((void (*)(std::__shared_weak_count *))v371->__on_zero_shared)(v371);
            std::__shared_weak_count::__release_weak(v371);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v366 + 96))(&v1115, v366, 0);
      else
LABEL_1505:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1532;
      if (!v1105)
        goto LABEL_1532;
      v873 = v1106;
      if (!v1106)
        goto LABEL_1532;
      v874 = v1110;
      v875 = v1103;
      if (v1112 && v1103)
      {
        v876 = v1101;
        v877 = v1102;
        if (v1102)
        {
          v878 = (unint64_t *)&v1102->__shared_owners_;
          do
            v879 = __ldxr(v878);
          while (__stxr(v879 + 1, v878));
          do
            v880 = __ldaxr(v878);
          while (__stlxr(v880 - 1, v878));
          if (!v880)
          {
            ((void (*)(std::__shared_weak_count *))v877->__on_zero_shared)(v877);
            std::__shared_weak_count::__release_weak(v877);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v876 + 88))(v876, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v875 = v1103;
      }
      v881 = (4 * v365);
      if (v873 == 1)
        goto LABEL_1526;
      if (!(_DWORD)v881)
        goto LABEL_1532;
      v882 = 0;
      do
      {
        if (!v875
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2035;
        }
        for (ii = 0; ii != v881; ++ii)
          sub_20B512EB0(v364, &v875[ii]);
        v875 += v874;
        ++v882;
      }
      while (v882 != v873 - 1);
LABEL_1526:
      if ((_DWORD)v881 && !v875)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2035:
          abort();
        }
        v875 = 0;
      }
      if ((_DWORD)v881)
      {
        do
        {
          sub_20B512EB0(v364, v875++);
          --v881;
        }
        while (v881);
      }
LABEL_1532:
      v884 = v1115;
      v1115 = 0;
      if (v884)
        (*(void (**)(uint64_t))(*(_QWORD *)v884 + 8))(v884);
      v484 = v1102;
      if (!v1102)
        return;
      v885 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v885);
      while (__stlxr(v486 - 1, v885));
      goto LABEL_2025;
    case 34:
      sub_20B37DA94(a3, (uint64_t)&v1101);
      v245 = *a2;
      v246 = v1111;
      v247 = v1101;
      if (!v1101)
        goto LABEL_1174;
      v248 = v1102;
      if (v1102)
      {
        v249 = (unint64_t *)&v1102->__shared_owners_;
        do
          v250 = __ldxr(v249);
        while (__stxr(v250 + 1, v249));
        do
          v251 = __ldaxr(v249);
        while (__stlxr(v251 - 1, v249));
        if (!v251)
        {
          ((void (*)(std::__shared_weak_count *))v248->__on_zero_shared)(v248);
          std::__shared_weak_count::__release_weak(v248);
        }
        v247 = v1101;
        v252 = v1102;
        if (v1102)
        {
          v253 = (unint64_t *)&v1102->__shared_owners_;
          do
            v254 = __ldxr(v253);
          while (__stxr(v254 + 1, v253));
          do
            v255 = __ldaxr(v253);
          while (__stlxr(v255 - 1, v253));
          if (!v255)
          {
            ((void (*)(std::__shared_weak_count *))v252->__on_zero_shared)(v252);
            std::__shared_weak_count::__release_weak(v252);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v247 + 96))(&v1114, v247, 0);
      else
LABEL_1174:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1964;
      if (!v1105)
        goto LABEL_1964;
      v720 = v1106;
      if (!v1106)
        goto LABEL_1964;
      v721 = v1110;
      v722 = v1103;
      if (v1112 && v1103)
      {
        v723 = v1101;
        v724 = v1102;
        if (v1102)
        {
          v725 = (unint64_t *)&v1102->__shared_owners_;
          do
            v726 = __ldxr(v725);
          while (__stxr(v726 + 1, v725));
          do
            v727 = __ldaxr(v725);
          while (__stlxr(v727 - 1, v725));
          if (!v727)
          {
            ((void (*)(std::__shared_weak_count *))v724->__on_zero_shared)(v724);
            std::__shared_weak_count::__release_weak(v724);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v723 + 88))(v723, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v722 = v1103;
      }
      v728 = (4 * v246);
      if (v720 == 1)
        goto LABEL_1197;
      if ((_DWORD)v728)
      {
        v729 = 0;
        do
        {
          if (!v722
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2050;
          }
          v730 = 0;
          v731 = *(_QWORD *)(v245 + 40);
          do
          {
            if (v731)
            {
              v732 = *(_QWORD **)(v245 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v245 + 32);
              sub_20AEC01D0(v732, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v731 = *(_QWORD *)(v245 + 40) + 1;
            *(_QWORD *)(v245 + 40) = v731;
            v730 += 2;
          }
          while (2 * v728 != v730);
          v722 += 2 * v721;
          ++v729;
        }
        while (v729 != v720 - 1);
LABEL_1197:
        if ((_DWORD)v728 && !v722)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2050:
            abort();
          }
          v722 = 0;
        }
      }
      else
      {
        v722 += (2 * (v720 - 2) + 2) * v721;
      }
      v1115 = (4 * v246);
      v1116 = v722;
      sub_20B513184(v245, &v1115);
LABEL_1964:
      v1061 = v1114;
      v1114 = 0;
      if (v1061)
        (*(void (**)(uint64_t))(*(_QWORD *)v1061 + 8))(v1061);
      v484 = v1102;
      if (!v1102)
        return;
      v1062 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1062);
      while (__stlxr(v486 - 1, v1062));
      goto LABEL_2025;
    case 35:
      sub_20B37E0CC(a3, (uint64_t)&v1101);
      v223 = *a2;
      v224 = v1111;
      v225 = v1101;
      if (!v1101)
        goto LABEL_1120;
      v226 = v1102;
      if (v1102)
      {
        v227 = (unint64_t *)&v1102->__shared_owners_;
        do
          v228 = __ldxr(v227);
        while (__stxr(v228 + 1, v227));
        do
          v229 = __ldaxr(v227);
        while (__stlxr(v229 - 1, v227));
        if (!v229)
        {
          ((void (*)(std::__shared_weak_count *))v226->__on_zero_shared)(v226);
          std::__shared_weak_count::__release_weak(v226);
        }
        v225 = v1101;
        v230 = v1102;
        if (v1102)
        {
          v231 = (unint64_t *)&v1102->__shared_owners_;
          do
            v232 = __ldxr(v231);
          while (__stxr(v232 + 1, v231));
          do
            v233 = __ldaxr(v231);
          while (__stlxr(v233 - 1, v231));
          if (!v233)
          {
            ((void (*)(std::__shared_weak_count *))v230->__on_zero_shared)(v230);
            std::__shared_weak_count::__release_weak(v230);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v225 + 96))(&v1115, v225, 0);
      else
LABEL_1120:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1747;
      if (!v1105)
        goto LABEL_1747;
      v693 = v1106;
      if (!v1106)
        goto LABEL_1747;
      v694 = v1110;
      v695 = v1103;
      if (v1112 && v1103)
      {
        v696 = v1101;
        v697 = v1102;
        if (v1102)
        {
          v698 = (unint64_t *)&v1102->__shared_owners_;
          do
            v699 = __ldxr(v698);
          while (__stxr(v699 + 1, v698));
          do
            v700 = __ldaxr(v698);
          while (__stlxr(v700 - 1, v698));
          if (!v700)
          {
            ((void (*)(std::__shared_weak_count *))v697->__on_zero_shared)(v697);
            std::__shared_weak_count::__release_weak(v697);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v696 + 88))(v696, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v695 = v1103;
      }
      v1095 = (4 * v224);
      if (v693 == 1)
        goto LABEL_1143;
      if (!(4 * v224))
        goto LABEL_1747;
      v701 = 0;
      do
      {
        if (!v695
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1146;
        }
        v702 = 0;
        v703 = *(_QWORD *)(v223 + 40);
        do
        {
          if (v703)
          {
            v704 = *(_QWORD **)(v223 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v223 + 32);
            sub_20AEC01D0(v704, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v223 + 24) + *(_QWORD *)(**(_QWORD **)(v223 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v695[v702];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v703 = *(_QWORD *)(v223 + 40) + 1;
          *(_QWORD *)(v223 + 40) = v703;
          v702 += 2;
        }
        while (2 * v1095 != v702);
        v695 += 2 * v694;
        ++v701;
      }
      while (v701 != v693 - 1);
LABEL_1143:
      if (!(_DWORD)v1095 || v695)
      {
        if (!(_DWORD)v1095)
          goto LABEL_1747;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1146:
        abort();
      }
      v996 = *(_QWORD *)(v223 + 40);
      v997 = 2 * v1095;
      do
      {
        if (v996)
        {
          v998 = *(_QWORD **)(v223 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v223 + 32);
          sub_20AEC01D0(v998, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v223 + 24) + *(_QWORD *)(**(_QWORD **)(v223 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v695;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v996 = *(_QWORD *)(v223 + 40) + 1;
        *(_QWORD *)(v223 + 40) = v996;
        v695 += 2;
        v997 -= 2;
      }
      while (v997);
LABEL_1747:
      v1001 = v1115;
      v1115 = 0;
      if (v1001)
        (*(void (**)(uint64_t))(*(_QWORD *)v1001 + 8))(v1001);
      v484 = v1102;
      if (!v1102)
        return;
      v1002 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1002);
      while (__stlxr(v486 - 1, v1002));
      goto LABEL_2025;
    case 36:
      sub_20B37E704(a3, (uint64_t)&v1101);
      v212 = *a2;
      v213 = v1111;
      v214 = v1101;
      if (!v1101)
        goto LABEL_1093;
      v215 = v1102;
      if (v1102)
      {
        v216 = (unint64_t *)&v1102->__shared_owners_;
        do
          v217 = __ldxr(v216);
        while (__stxr(v217 + 1, v216));
        do
          v218 = __ldaxr(v216);
        while (__stlxr(v218 - 1, v216));
        if (!v218)
        {
          ((void (*)(std::__shared_weak_count *))v215->__on_zero_shared)(v215);
          std::__shared_weak_count::__release_weak(v215);
        }
        v214 = v1101;
        v219 = v1102;
        if (v1102)
        {
          v220 = (unint64_t *)&v1102->__shared_owners_;
          do
            v221 = __ldxr(v220);
          while (__stxr(v221 + 1, v220));
          do
            v222 = __ldaxr(v220);
          while (__stlxr(v222 - 1, v220));
          if (!v222)
          {
            ((void (*)(std::__shared_weak_count *))v219->__on_zero_shared)(v219);
            std::__shared_weak_count::__release_weak(v219);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v214 + 96))(&v1114, v214, 0);
      else
LABEL_1093:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1948;
      if (!v1105)
        goto LABEL_1948;
      v680 = v1106;
      if (!v1106)
        goto LABEL_1948;
      v681 = v1110;
      v682 = v1103;
      if (v1112 && v1103)
      {
        v683 = v1101;
        v684 = v1102;
        if (v1102)
        {
          v685 = (unint64_t *)&v1102->__shared_owners_;
          do
            v686 = __ldxr(v685);
          while (__stxr(v686 + 1, v685));
          do
            v687 = __ldaxr(v685);
          while (__stlxr(v687 - 1, v685));
          if (!v687)
          {
            ((void (*)(std::__shared_weak_count *))v684->__on_zero_shared)(v684);
            std::__shared_weak_count::__release_weak(v684);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v683 + 88))(v683, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v682 = v1103;
      }
      v688 = (4 * v213);
      if (v680 == 1)
        goto LABEL_1116;
      if ((_DWORD)v688)
      {
        v689 = 0;
        do
        {
          if (!v682
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2045;
          }
          v690 = 0;
          v691 = *(_QWORD *)(v212 + 40);
          do
          {
            if (v691)
            {
              v692 = *(_QWORD **)(v212 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v212 + 32);
              sub_20AEC01D0(v692, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v212 + 24) + *(_QWORD *)(**(_QWORD **)(v212 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v691 = *(_QWORD *)(v212 + 40) + 1;
            *(_QWORD *)(v212 + 40) = v691;
            v690 += 4;
          }
          while (4 * v688 != v690);
          v682 += 4 * v681;
          ++v689;
        }
        while (v689 != v680 - 1);
LABEL_1116:
        if ((_DWORD)v688 && !v682)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2045:
            abort();
          }
          v682 = 0;
        }
      }
      else
      {
        v682 += (4 * (v680 - 2) + 4) * v681;
      }
      v1115 = v688;
      v1116 = v682;
      sub_20B513208(v212, &v1115);
LABEL_1948:
      v1057 = v1114;
      v1114 = 0;
      if (v1057)
        (*(void (**)(uint64_t))(*(_QWORD *)v1057 + 8))(v1057);
      v484 = v1102;
      if (!v1102)
        return;
      v1058 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1058);
      while (__stlxr(v486 - 1, v1058));
      goto LABEL_2025;
    case 37:
      sub_20B37ED3C(a3, (uint64_t)&v1101);
      v332 = *a2;
      v333 = v1111;
      v334 = v1101;
      if (!v1101)
        goto LABEL_1421;
      v335 = v1102;
      if (v1102)
      {
        v336 = (unint64_t *)&v1102->__shared_owners_;
        do
          v337 = __ldxr(v336);
        while (__stxr(v337 + 1, v336));
        do
          v338 = __ldaxr(v336);
        while (__stlxr(v338 - 1, v336));
        if (!v338)
        {
          ((void (*)(std::__shared_weak_count *))v335->__on_zero_shared)(v335);
          std::__shared_weak_count::__release_weak(v335);
        }
        v334 = v1101;
        v339 = v1102;
        if (v1102)
        {
          v340 = (unint64_t *)&v1102->__shared_owners_;
          do
            v341 = __ldxr(v340);
          while (__stxr(v341 + 1, v340));
          do
            v342 = __ldaxr(v340);
          while (__stlxr(v342 - 1, v340));
          if (!v342)
          {
            ((void (*)(std::__shared_weak_count *))v339->__on_zero_shared)(v339);
            std::__shared_weak_count::__release_weak(v339);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v334 + 96))(&v1115, v334, 0);
      else
LABEL_1421:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1448;
      if (!v1105)
        goto LABEL_1448;
      v834 = v1106;
      if (!v1106)
        goto LABEL_1448;
      v835 = v1110;
      v836 = v1103;
      if (v1112 && v1103)
      {
        v837 = v1101;
        v838 = v1102;
        if (v1102)
        {
          v839 = (unint64_t *)&v1102->__shared_owners_;
          do
            v840 = __ldxr(v839);
          while (__stxr(v840 + 1, v839));
          do
            v841 = __ldaxr(v839);
          while (__stlxr(v841 - 1, v839));
          if (!v841)
          {
            ((void (*)(std::__shared_weak_count *))v838->__on_zero_shared)(v838);
            std::__shared_weak_count::__release_weak(v838);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v837 + 88))(v837, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v836 = v1103;
      }
      v842 = (4 * v333);
      if (v834 == 1)
        goto LABEL_1442;
      if (!(_DWORD)v842)
        goto LABEL_1448;
      v843 = 0;
      do
      {
        if (!v836
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2034;
        }
        for (jj = 0; jj != v842; ++jj)
          sub_20B512EB0(v332, &v836[jj]);
        v836 += v835;
        ++v843;
      }
      while (v843 != v834 - 1);
LABEL_1442:
      if ((_DWORD)v842 && !v836)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2034:
          abort();
        }
        v836 = 0;
      }
      if ((_DWORD)v842)
      {
        do
        {
          sub_20B512EB0(v332, v836++);
          --v842;
        }
        while (v842);
      }
LABEL_1448:
      v845 = v1115;
      v1115 = 0;
      if (v845)
        (*(void (**)(uint64_t))(*(_QWORD *)v845 + 8))(v845);
      v484 = v1102;
      if (!v1102)
        return;
      v846 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v846);
      while (__stlxr(v486 - 1, v846));
      goto LABEL_2025;
    case 38:
      sub_20B37F370(a3, (uint64_t)&v1101);
      v386 = *a2;
      v387 = v1111;
      v388 = v1101;
      if (!v1101)
        goto LABEL_1562;
      v389 = v1102;
      if (v1102)
      {
        v390 = (unint64_t *)&v1102->__shared_owners_;
        do
          v391 = __ldxr(v390);
        while (__stxr(v391 + 1, v390));
        do
          v392 = __ldaxr(v390);
        while (__stlxr(v392 - 1, v390));
        if (!v392)
        {
          ((void (*)(std::__shared_weak_count *))v389->__on_zero_shared)(v389);
          std::__shared_weak_count::__release_weak(v389);
        }
        v388 = v1101;
        v393 = v1102;
        if (v1102)
        {
          v394 = (unint64_t *)&v1102->__shared_owners_;
          do
            v395 = __ldxr(v394);
          while (__stxr(v395 + 1, v394));
          do
            v396 = __ldaxr(v394);
          while (__stlxr(v396 - 1, v394));
          if (!v396)
          {
            ((void (*)(std::__shared_weak_count *))v393->__on_zero_shared)(v393);
            std::__shared_weak_count::__release_weak(v393);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v388 + 96))(&v1114, v388, 0);
      else
LABEL_1562:
        v1114 = 0;
      if (!v1104)
        goto LABEL_2020;
      if (!v1105)
        goto LABEL_2020;
      v898 = v1106;
      if (!v1106)
        goto LABEL_2020;
      v899 = v1110;
      v900 = v1103;
      if (v1112 && v1103)
      {
        v901 = v1101;
        v902 = v1102;
        if (v1102)
        {
          v903 = (unint64_t *)&v1102->__shared_owners_;
          do
            v904 = __ldxr(v903);
          while (__stxr(v904 + 1, v903));
          do
            v905 = __ldaxr(v903);
          while (__stlxr(v905 - 1, v903));
          if (!v905)
          {
            ((void (*)(std::__shared_weak_count *))v902->__on_zero_shared)(v902);
            std::__shared_weak_count::__release_weak(v902);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v901 + 88))(v901, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v900 = v1103;
      }
      v906 = (4 * v387);
      if (v898 == 1)
        goto LABEL_1585;
      if ((_DWORD)v906)
      {
        v907 = 0;
        do
        {
          if (!v900
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2056;
          }
          v908 = 0;
          v909 = *(_QWORD *)(v386 + 40);
          do
          {
            if (v909)
            {
              v910 = *(_QWORD **)(v386 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v386 + 32);
              sub_20AEC01D0(v910, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v909 = *(_QWORD *)(v386 + 40) + 1;
            *(_QWORD *)(v386 + 40) = v909;
            v908 += 2;
          }
          while (2 * v906 != v908);
          v900 += 2 * v899;
          ++v907;
        }
        while (v907 != v898 - 1);
LABEL_1585:
        if ((_DWORD)v906 && !v900)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2056:
            abort();
          }
          v900 = 0;
        }
      }
      else
      {
        v900 += (2 * (v898 - 2) + 2) * v899;
      }
      v1115 = (4 * v387);
      v1116 = v900;
      sub_20B513184(v386, &v1115);
LABEL_2020:
      v1075 = v1114;
      v1114 = 0;
      if (v1075)
        (*(void (**)(uint64_t))(*(_QWORD *)v1075 + 8))(v1075);
      v484 = v1102;
      if (!v1102)
        return;
      v1076 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1076);
      while (__stlxr(v486 - 1, v1076));
      goto LABEL_2025;
    case 39:
      sub_20B37F9A8(a3, (uint64_t)&v1101);
      v135 = *a2;
      v136 = v1111;
      v137 = v1101;
      if (!v1101)
        goto LABEL_908;
      v138 = v1102;
      if (v1102)
      {
        v139 = (unint64_t *)&v1102->__shared_owners_;
        do
          v140 = __ldxr(v139);
        while (__stxr(v140 + 1, v139));
        do
          v141 = __ldaxr(v139);
        while (__stlxr(v141 - 1, v139));
        if (!v141)
        {
          ((void (*)(std::__shared_weak_count *))v138->__on_zero_shared)(v138);
          std::__shared_weak_count::__release_weak(v138);
        }
        v137 = v1101;
        v142 = v1102;
        if (v1102)
        {
          v143 = (unint64_t *)&v1102->__shared_owners_;
          do
            v144 = __ldxr(v143);
          while (__stxr(v144 + 1, v143));
          do
            v145 = __ldaxr(v143);
          while (__stlxr(v145 - 1, v143));
          if (!v145)
          {
            ((void (*)(std::__shared_weak_count *))v142->__on_zero_shared)(v142);
            std::__shared_weak_count::__release_weak(v142);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v137 + 96))(&v1115, v137, 0);
      else
LABEL_908:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1725;
      if (!v1105)
        goto LABEL_1725;
      v589 = v1106;
      if (!v1106)
        goto LABEL_1725;
      v590 = v1110;
      v591 = v1103;
      if (v1112 && v1103)
      {
        v592 = v1101;
        v593 = v1102;
        if (v1102)
        {
          v594 = (unint64_t *)&v1102->__shared_owners_;
          do
            v595 = __ldxr(v594);
          while (__stxr(v595 + 1, v594));
          do
            v596 = __ldaxr(v594);
          while (__stlxr(v596 - 1, v594));
          if (!v596)
          {
            ((void (*)(std::__shared_weak_count *))v593->__on_zero_shared)(v593);
            std::__shared_weak_count::__release_weak(v593);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v592 + 88))(v592, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v591 = v1103;
      }
      v1092 = (4 * v136);
      if (v589 == 1)
        goto LABEL_931;
      if (!(4 * v136))
        goto LABEL_1725;
      v597 = 0;
      do
      {
        if (!v591
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_934;
        }
        v598 = 0;
        v599 = *(_QWORD *)(v135 + 40);
        do
        {
          if (v599)
          {
            v600 = *(_QWORD **)(v135 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v135 + 32);
            sub_20AEC01D0(v600, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v135 + 24) + *(_QWORD *)(**(_QWORD **)(v135 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v591[v598];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v599 = *(_QWORD *)(v135 + 40) + 1;
          *(_QWORD *)(v135 + 40) = v599;
          v598 += 2;
        }
        while (2 * v1092 != v598);
        v591 += 2 * v590;
        ++v597;
      }
      while (v597 != v589 - 1);
LABEL_931:
      if (!(_DWORD)v1092 || v591)
      {
        if (!(_DWORD)v1092)
          goto LABEL_1725;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_934:
        abort();
      }
      v982 = *(_QWORD *)(v135 + 40);
      v983 = 2 * v1092;
      do
      {
        if (v982)
        {
          v984 = *(_QWORD **)(v135 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v135 + 32);
          sub_20AEC01D0(v984, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v135 + 24) + *(_QWORD *)(**(_QWORD **)(v135 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v591;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v982 = *(_QWORD *)(v135 + 40) + 1;
        *(_QWORD *)(v135 + 40) = v982;
        v591 += 2;
        v983 -= 2;
      }
      while (v983);
LABEL_1725:
      v987 = v1115;
      v1115 = 0;
      if (v987)
        (*(void (**)(uint64_t))(*(_QWORD *)v987 + 8))(v987);
      v484 = v1102;
      if (!v1102)
        return;
      v988 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v988);
      while (__stlxr(v486 - 1, v988));
      goto LABEL_2025;
    case 40:
      sub_20B37FFE0(a3, (uint64_t)&v1101);
      v102 = *a2;
      v103 = v1111;
      v104 = v1101;
      if (!v1101)
        goto LABEL_830;
      v105 = v1102;
      if (v1102)
      {
        v106 = (unint64_t *)&v1102->__shared_owners_;
        do
          v107 = __ldxr(v106);
        while (__stxr(v107 + 1, v106));
        do
          v108 = __ldaxr(v106);
        while (__stlxr(v108 - 1, v106));
        if (!v108)
        {
          ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
          std::__shared_weak_count::__release_weak(v105);
        }
        v104 = v1101;
        v109 = v1102;
        if (v1102)
        {
          v110 = (unint64_t *)&v1102->__shared_owners_;
          do
            v111 = __ldxr(v110);
          while (__stxr(v111 + 1, v110));
          do
            v112 = __ldaxr(v110);
          while (__stlxr(v112 - 1, v110));
          if (!v112)
          {
            ((void (*)(std::__shared_weak_count *))v109->__on_zero_shared)(v109);
            std::__shared_weak_count::__release_weak(v109);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v104 + 96))(&v1114, v104, 0);
      else
LABEL_830:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1892;
      if (!v1105)
        goto LABEL_1892;
      v550 = v1106;
      if (!v1106)
        goto LABEL_1892;
      v551 = v1110;
      v552 = v1103;
      if (v1112 && v1103)
      {
        v553 = v1101;
        v554 = v1102;
        if (v1102)
        {
          v555 = (unint64_t *)&v1102->__shared_owners_;
          do
            v556 = __ldxr(v555);
          while (__stxr(v556 + 1, v555));
          do
            v557 = __ldaxr(v555);
          while (__stlxr(v557 - 1, v555));
          if (!v557)
          {
            ((void (*)(std::__shared_weak_count *))v554->__on_zero_shared)(v554);
            std::__shared_weak_count::__release_weak(v554);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v553 + 88))(v553, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v552 = v1103;
      }
      v558 = (4 * v103);
      if (v550 == 1)
        goto LABEL_853;
      if ((_DWORD)v558)
      {
        v559 = 0;
        do
        {
          if (!v552
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2040;
          }
          v560 = 0;
          v561 = *(_QWORD *)(v102 + 40);
          do
          {
            if (v561)
            {
              v562 = *(_QWORD **)(v102 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v102 + 32);
              sub_20AEC01D0(v562, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v102 + 24) + *(_QWORD *)(**(_QWORD **)(v102 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v561 = *(_QWORD *)(v102 + 40) + 1;
            *(_QWORD *)(v102 + 40) = v561;
            v560 += 4;
          }
          while (4 * v558 != v560);
          v552 += 4 * v551;
          ++v559;
        }
        while (v559 != v550 - 1);
LABEL_853:
        if ((_DWORD)v558 && !v552)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2040:
            abort();
          }
          v552 = 0;
        }
      }
      else
      {
        v552 += (4 * (v550 - 2) + 4) * v551;
      }
      v1115 = v558;
      v1116 = v552;
      sub_20B513208(v102, &v1115);
LABEL_1892:
      v1043 = v1114;
      v1114 = 0;
      if (v1043)
        (*(void (**)(uint64_t))(*(_QWORD *)v1043 + 8))(v1043);
      v484 = v1102;
      if (!v1102)
        return;
      v1044 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1044);
      while (__stlxr(v486 - 1, v1044));
      goto LABEL_2025;
    default:
      return;
  }
}

void sub_20B3DD098(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  unint64_t *p_shared_owners;
  unint64_t v24;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v24 = __ldaxr(p_shared_owners);
    while (__stlxr(v24 - 1, p_shared_owners));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_20B3DDCE8(int a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  std::__shared_weak_count *v94;
  unint64_t *v95;
  unint64_t v96;
  unint64_t v97;
  std::__shared_weak_count *v98;
  unint64_t *v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  std::__shared_weak_count *v105;
  unint64_t *v106;
  unint64_t v107;
  unint64_t v108;
  std::__shared_weak_count *v109;
  unint64_t *v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  std::__shared_weak_count *v116;
  unint64_t *v117;
  unint64_t v118;
  unint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  unint64_t v130;
  std::__shared_weak_count *v131;
  unint64_t *v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  std::__shared_weak_count *v138;
  unint64_t *v139;
  unint64_t v140;
  unint64_t v141;
  std::__shared_weak_count *v142;
  unint64_t *v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  std::__shared_weak_count *v149;
  unint64_t *v150;
  unint64_t v151;
  unint64_t v152;
  std::__shared_weak_count *v153;
  unint64_t *v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  std::__shared_weak_count *v160;
  unint64_t *v161;
  unint64_t v162;
  unint64_t v163;
  std::__shared_weak_count *v164;
  unint64_t *v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  std::__shared_weak_count *v171;
  unint64_t *v172;
  unint64_t v173;
  unint64_t v174;
  std::__shared_weak_count *v175;
  unint64_t *v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  std::__shared_weak_count *v182;
  unint64_t *v183;
  unint64_t v184;
  unint64_t v185;
  std::__shared_weak_count *v186;
  unint64_t *v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  std::__shared_weak_count *v193;
  unint64_t *v194;
  unint64_t v195;
  unint64_t v196;
  std::__shared_weak_count *v197;
  unint64_t *v198;
  unint64_t v199;
  unint64_t v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  std::__shared_weak_count *v204;
  unint64_t *v205;
  unint64_t v206;
  unint64_t v207;
  std::__shared_weak_count *v208;
  unint64_t *v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  int v213;
  uint64_t v214;
  std::__shared_weak_count *v215;
  unint64_t *v216;
  unint64_t v217;
  unint64_t v218;
  std::__shared_weak_count *v219;
  unint64_t *v220;
  unint64_t v221;
  unint64_t v222;
  uint64_t v223;
  int v224;
  uint64_t v225;
  std::__shared_weak_count *v226;
  unint64_t *v227;
  unint64_t v228;
  unint64_t v229;
  std::__shared_weak_count *v230;
  unint64_t *v231;
  unint64_t v232;
  unint64_t v233;
  uint64_t v234;
  int v235;
  uint64_t v236;
  std::__shared_weak_count *v237;
  unint64_t *v238;
  unint64_t v239;
  unint64_t v240;
  std::__shared_weak_count *v241;
  unint64_t *v242;
  unint64_t v243;
  unint64_t v244;
  uint64_t v245;
  int v246;
  uint64_t v247;
  std::__shared_weak_count *v248;
  unint64_t *v249;
  unint64_t v250;
  unint64_t v251;
  std::__shared_weak_count *v252;
  unint64_t *v253;
  unint64_t v254;
  unint64_t v255;
  uint64_t v256;
  int v257;
  uint64_t v258;
  std::__shared_weak_count *v259;
  unint64_t *v260;
  unint64_t v261;
  unint64_t v262;
  std::__shared_weak_count *v263;
  unint64_t *v264;
  unint64_t v265;
  unint64_t v266;
  uint64_t v267;
  int v268;
  uint64_t v269;
  std::__shared_weak_count *v270;
  unint64_t *v271;
  unint64_t v272;
  unint64_t v273;
  std::__shared_weak_count *v274;
  unint64_t *v275;
  unint64_t v276;
  unint64_t v277;
  uint64_t v278;
  int v279;
  uint64_t v280;
  std::__shared_weak_count *v281;
  unint64_t *v282;
  unint64_t v283;
  unint64_t v284;
  std::__shared_weak_count *v285;
  unint64_t *v286;
  unint64_t v287;
  unint64_t v288;
  uint64_t v289;
  int v290;
  uint64_t v291;
  std::__shared_weak_count *v292;
  unint64_t *v293;
  unint64_t v294;
  unint64_t v295;
  std::__shared_weak_count *v296;
  unint64_t *v297;
  unint64_t v298;
  unint64_t v299;
  uint64_t v300;
  int v301;
  uint64_t v302;
  std::__shared_weak_count *v303;
  unint64_t *v304;
  unint64_t v305;
  unint64_t v306;
  std::__shared_weak_count *v307;
  unint64_t *v308;
  unint64_t v309;
  unint64_t v310;
  uint64_t v311;
  uint64_t v312;
  std::__shared_weak_count *v313;
  unint64_t *v314;
  unint64_t v315;
  unint64_t v316;
  std::__shared_weak_count *v317;
  unint64_t *v318;
  unint64_t v319;
  unint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  std::__shared_weak_count *v324;
  unint64_t *v325;
  unint64_t v326;
  unint64_t v327;
  std::__shared_weak_count *v328;
  unint64_t *v329;
  unint64_t v330;
  unint64_t v331;
  uint64_t v332;
  int v333;
  uint64_t v334;
  std::__shared_weak_count *v335;
  unint64_t *v336;
  unint64_t v337;
  unint64_t v338;
  std::__shared_weak_count *v339;
  unint64_t *v340;
  unint64_t v341;
  unint64_t v342;
  uint64_t v343;
  uint64_t v344;
  std::__shared_weak_count *v345;
  unint64_t *v346;
  unint64_t v347;
  unint64_t v348;
  std::__shared_weak_count *v349;
  unint64_t *v350;
  unint64_t v351;
  unint64_t v352;
  uint64_t v353;
  int v354;
  uint64_t v355;
  std::__shared_weak_count *v356;
  unint64_t *v357;
  unint64_t v358;
  unint64_t v359;
  std::__shared_weak_count *v360;
  unint64_t *v361;
  unint64_t v362;
  unint64_t v363;
  uint64_t v364;
  int v365;
  uint64_t v366;
  std::__shared_weak_count *v367;
  unint64_t *v368;
  unint64_t v369;
  unint64_t v370;
  std::__shared_weak_count *v371;
  unint64_t *v372;
  unint64_t v373;
  unint64_t v374;
  uint64_t v375;
  int v376;
  uint64_t v377;
  std::__shared_weak_count *v378;
  unint64_t *v379;
  unint64_t v380;
  unint64_t v381;
  std::__shared_weak_count *v382;
  unint64_t *v383;
  unint64_t v384;
  unint64_t v385;
  uint64_t v386;
  int v387;
  uint64_t v388;
  std::__shared_weak_count *v389;
  unint64_t *v390;
  unint64_t v391;
  unint64_t v392;
  std::__shared_weak_count *v393;
  unint64_t *v394;
  unint64_t v395;
  unint64_t v396;
  uint64_t v397;
  int v398;
  uint64_t v399;
  std::__shared_weak_count *v400;
  unint64_t *v401;
  unint64_t v402;
  unint64_t v403;
  std::__shared_weak_count *v404;
  unint64_t *v405;
  unint64_t v406;
  unint64_t v407;
  uint64_t v408;
  int v409;
  uint64_t v410;
  std::__shared_weak_count *v411;
  unint64_t *v412;
  unint64_t v413;
  unint64_t v414;
  std::__shared_weak_count *v415;
  unint64_t *v416;
  unint64_t v417;
  unint64_t v418;
  uint64_t v419;
  uint64_t v420;
  std::__shared_weak_count *v421;
  unint64_t *v422;
  unint64_t v423;
  unint64_t v424;
  std::__shared_weak_count *v425;
  unint64_t *v426;
  unint64_t v427;
  unint64_t v428;
  uint64_t v429;
  int v430;
  uint64_t v431;
  std::__shared_weak_count *v432;
  unint64_t *v433;
  unint64_t v434;
  unint64_t v435;
  std::__shared_weak_count *v436;
  unint64_t *v437;
  unint64_t v438;
  unint64_t v439;
  int v440;
  uint64_t v441;
  unsigned __int8 *v442;
  uint64_t v443;
  std::__shared_weak_count *v444;
  unint64_t *v445;
  unint64_t v446;
  unint64_t v447;
  int v448;
  uint64_t v449;
  uint64_t v450;
  _QWORD *v451;
  int v458;
  uint64_t v459;
  unsigned __int8 *v460;
  uint64_t v461;
  std::__shared_weak_count *v462;
  unint64_t *v463;
  unint64_t v464;
  unint64_t v465;
  int v466;
  uint64_t v467;
  uint64_t v468;
  _QWORD *v469;
  int v472;
  uint64_t v473;
  unsigned __int8 *v474;
  uint64_t v475;
  std::__shared_weak_count *v476;
  unint64_t *v477;
  unint64_t v478;
  unint64_t v479;
  uint64_t v480;
  int v481;
  uint64_t m;
  uint64_t v483;
  std::__shared_weak_count *v484;
  unint64_t *v485;
  unint64_t v486;
  int v487;
  uint64_t v488;
  unsigned __int8 *v489;
  uint64_t v490;
  std::__shared_weak_count *v491;
  unint64_t *v492;
  unint64_t v493;
  unint64_t v494;
  int v495;
  uint64_t v496;
  uint64_t v497;
  _QWORD *v498;
  int v499;
  uint64_t v500;
  unsigned __int8 *v501;
  uint64_t v502;
  std::__shared_weak_count *v503;
  unint64_t *v504;
  unint64_t v505;
  unint64_t v506;
  uint64_t v507;
  int v508;
  uint64_t n;
  uint64_t v510;
  unint64_t *v511;
  int v512;
  uint64_t v513;
  unsigned __int8 *v514;
  uint64_t v515;
  std::__shared_weak_count *v516;
  unint64_t *v517;
  unint64_t v518;
  unint64_t v519;
  int v520;
  uint64_t v521;
  uint64_t v522;
  _QWORD *v523;
  int v524;
  uint64_t v525;
  unsigned __int8 *v526;
  uint64_t v527;
  std::__shared_weak_count *v528;
  unint64_t *v529;
  unint64_t v530;
  unint64_t v531;
  uint64_t v532;
  int v533;
  uint64_t v534;
  uint64_t v535;
  _QWORD *v536;
  int v537;
  uint64_t v538;
  unsigned __int8 *v539;
  uint64_t v540;
  std::__shared_weak_count *v541;
  unint64_t *v542;
  unint64_t v543;
  unint64_t v544;
  uint64_t v545;
  int v546;
  uint64_t k;
  uint64_t v548;
  unint64_t *v549;
  int v550;
  uint64_t v551;
  unsigned __int8 *v552;
  uint64_t v553;
  std::__shared_weak_count *v554;
  unint64_t *v555;
  unint64_t v556;
  unint64_t v557;
  uint64_t v558;
  int v559;
  uint64_t v560;
  uint64_t v561;
  _QWORD *v562;
  int v563;
  uint64_t v564;
  unsigned __int8 *v565;
  uint64_t v566;
  std::__shared_weak_count *v567;
  unint64_t *v568;
  unint64_t v569;
  unint64_t v570;
  int v571;
  uint64_t v572;
  uint64_t v573;
  _QWORD *v574;
  int v575;
  uint64_t v576;
  unsigned __int8 *v577;
  uint64_t v578;
  std::__shared_weak_count *v579;
  unint64_t *v580;
  unint64_t v581;
  unint64_t v582;
  int v583;
  uint64_t v584;
  uint64_t v585;
  _QWORD *v586;
  int v589;
  uint64_t v590;
  unsigned __int8 *v591;
  uint64_t v592;
  std::__shared_weak_count *v593;
  unint64_t *v594;
  unint64_t v595;
  unint64_t v596;
  int v597;
  uint64_t v598;
  uint64_t v599;
  _QWORD *v600;
  int v603;
  uint64_t v604;
  unsigned __int8 *v605;
  uint64_t v606;
  std::__shared_weak_count *v607;
  unint64_t *v608;
  unint64_t v609;
  unint64_t v610;
  int v611;
  uint64_t v612;
  uint64_t v613;
  _QWORD *v614;
  int v615;
  uint64_t v616;
  unsigned __int8 *v617;
  uint64_t v618;
  std::__shared_weak_count *v619;
  unint64_t *v620;
  unint64_t v621;
  unint64_t v622;
  uint64_t v623;
  int v624;
  uint64_t v625;
  uint64_t v626;
  _QWORD *v627;
  int v628;
  uint64_t v629;
  unsigned __int8 *v630;
  uint64_t v631;
  std::__shared_weak_count *v632;
  unint64_t *v633;
  unint64_t v634;
  unint64_t v635;
  int v636;
  uint64_t v637;
  uint64_t v638;
  _QWORD *v639;
  int v642;
  uint64_t v643;
  unsigned __int8 *v644;
  uint64_t v645;
  std::__shared_weak_count *v646;
  unint64_t *v647;
  unint64_t v648;
  unint64_t v649;
  uint64_t v650;
  int v651;
  uint64_t v652;
  uint64_t v653;
  _QWORD *v654;
  int v655;
  uint64_t v656;
  unsigned __int8 *v657;
  uint64_t v658;
  std::__shared_weak_count *v659;
  unint64_t *v660;
  unint64_t v661;
  unint64_t v662;
  int v663;
  uint64_t v664;
  uint64_t v665;
  _QWORD *v666;
  int v667;
  uint64_t v668;
  unsigned __int8 *v669;
  uint64_t v670;
  std::__shared_weak_count *v671;
  unint64_t *v672;
  unint64_t v673;
  unint64_t v674;
  uint64_t v675;
  int v676;
  uint64_t v677;
  uint64_t v678;
  _QWORD *v679;
  int v680;
  uint64_t v681;
  unsigned __int8 *v682;
  uint64_t v683;
  std::__shared_weak_count *v684;
  unint64_t *v685;
  unint64_t v686;
  unint64_t v687;
  uint64_t v688;
  int v689;
  uint64_t v690;
  uint64_t v691;
  _QWORD *v692;
  int v693;
  uint64_t v694;
  unsigned __int8 *v695;
  uint64_t v696;
  std::__shared_weak_count *v697;
  unint64_t *v698;
  unint64_t v699;
  unint64_t v700;
  int v701;
  uint64_t v702;
  uint64_t v703;
  _QWORD *v704;
  int v707;
  uint64_t v708;
  unsigned __int8 *v709;
  uint64_t v710;
  std::__shared_weak_count *v711;
  unint64_t *v712;
  unint64_t v713;
  unint64_t v714;
  uint64_t v715;
  int v716;
  uint64_t v717;
  uint64_t v718;
  _QWORD *v719;
  int v720;
  uint64_t v721;
  unsigned __int8 *v722;
  uint64_t v723;
  std::__shared_weak_count *v724;
  unint64_t *v725;
  unint64_t v726;
  unint64_t v727;
  uint64_t v728;
  int v729;
  uint64_t v730;
  uint64_t v731;
  _QWORD *v732;
  int v733;
  uint64_t v734;
  unsigned __int8 *v735;
  uint64_t v736;
  std::__shared_weak_count *v737;
  unint64_t *v738;
  unint64_t v739;
  unint64_t v740;
  uint64_t v741;
  int v742;
  uint64_t v743;
  uint64_t v744;
  _QWORD *v745;
  int v746;
  uint64_t v747;
  unsigned __int8 *v748;
  uint64_t v749;
  std::__shared_weak_count *v750;
  unint64_t *v751;
  unint64_t v752;
  unint64_t v753;
  uint64_t v754;
  int v755;
  uint64_t v756;
  int v757;
  uint64_t v758;
  unsigned __int8 *v759;
  uint64_t v760;
  std::__shared_weak_count *v761;
  unint64_t *v762;
  unint64_t v763;
  unint64_t v764;
  uint64_t v765;
  int v766;
  uint64_t j;
  uint64_t v768;
  unint64_t *v769;
  int v770;
  uint64_t v771;
  unsigned __int8 *v772;
  uint64_t v773;
  std::__shared_weak_count *v774;
  unint64_t *v775;
  unint64_t v776;
  unint64_t v777;
  uint64_t v778;
  int v779;
  uint64_t v780;
  uint64_t v781;
  _QWORD *v782;
  int v783;
  uint64_t v784;
  unsigned __int8 *v785;
  uint64_t v786;
  std::__shared_weak_count *v787;
  unint64_t *v788;
  unint64_t v789;
  unint64_t v790;
  uint64_t v791;
  int v792;
  uint64_t v793;
  uint64_t v794;
  _QWORD *v795;
  int v796;
  uint64_t v797;
  unsigned __int8 *v798;
  uint64_t v799;
  std::__shared_weak_count *v800;
  unint64_t *v801;
  unint64_t v802;
  unint64_t v803;
  int v804;
  uint64_t v805;
  uint64_t v806;
  _QWORD *v807;
  int v810;
  uint64_t v811;
  unsigned __int8 *v812;
  uint64_t v813;
  std::__shared_weak_count *v814;
  unint64_t *v815;
  unint64_t v816;
  unint64_t v817;
  int v818;
  uint64_t v819;
  uint64_t v820;
  _QWORD *v821;
  int v822;
  uint64_t v823;
  unsigned __int8 *v824;
  uint64_t v825;
  std::__shared_weak_count *v826;
  unint64_t *v827;
  unint64_t v828;
  unint64_t v829;
  int v830;
  uint64_t i;
  uint64_t v832;
  unint64_t *v833;
  int v834;
  uint64_t v835;
  unsigned __int8 *v836;
  uint64_t v837;
  std::__shared_weak_count *v838;
  unint64_t *v839;
  unint64_t v840;
  unint64_t v841;
  uint64_t v842;
  int v843;
  uint64_t jj;
  uint64_t v845;
  unint64_t *v846;
  int v847;
  uint64_t v848;
  unsigned __int8 *v849;
  uint64_t v850;
  std::__shared_weak_count *v851;
  unint64_t *v852;
  unint64_t v853;
  unint64_t v854;
  int v855;
  uint64_t v856;
  uint64_t v857;
  _QWORD *v858;
  int v861;
  uint64_t v862;
  unsigned __int8 *v863;
  uint64_t v864;
  std::__shared_weak_count *v865;
  unint64_t *v866;
  unint64_t v867;
  unint64_t v868;
  int v869;
  uint64_t v870;
  uint64_t v871;
  _QWORD *v872;
  int v873;
  uint64_t v874;
  unsigned __int8 *v875;
  uint64_t v876;
  std::__shared_weak_count *v877;
  unint64_t *v878;
  unint64_t v879;
  unint64_t v880;
  uint64_t v881;
  int v882;
  uint64_t ii;
  uint64_t v884;
  unint64_t *v885;
  int v886;
  uint64_t v887;
  unsigned __int8 *v888;
  uint64_t v889;
  std::__shared_weak_count *v890;
  unint64_t *v891;
  unint64_t v892;
  unint64_t v893;
  int v894;
  uint64_t v895;
  uint64_t v896;
  _QWORD *v897;
  int v898;
  uint64_t v899;
  unsigned __int8 *v900;
  uint64_t v901;
  std::__shared_weak_count *v902;
  unint64_t *v903;
  unint64_t v904;
  unint64_t v905;
  uint64_t v906;
  int v907;
  uint64_t v908;
  uint64_t v909;
  _QWORD *v910;
  int v911;
  uint64_t v912;
  unsigned __int8 *v913;
  uint64_t v914;
  std::__shared_weak_count *v915;
  unint64_t *v916;
  unint64_t v917;
  unint64_t v918;
  int v919;
  uint64_t v920;
  uint64_t v921;
  _QWORD *v922;
  int v925;
  uint64_t v926;
  unsigned __int8 *v927;
  uint64_t v928;
  std::__shared_weak_count *v929;
  unint64_t *v930;
  unint64_t v931;
  unint64_t v932;
  uint64_t v933;
  int v934;
  uint64_t v935;
  int v936;
  uint64_t v937;
  unsigned __int8 *v938;
  uint64_t v939;
  std::__shared_weak_count *v940;
  unint64_t *v941;
  unint64_t v942;
  unint64_t v943;
  int v944;
  uint64_t v945;
  uint64_t v946;
  _QWORD *v947;
  int v950;
  uint64_t v951;
  unsigned __int8 *v952;
  uint64_t v953;
  std::__shared_weak_count *v954;
  unint64_t *v955;
  unint64_t v956;
  unint64_t v957;
  uint64_t v958;
  int v959;
  uint64_t v960;
  uint64_t v961;
  uint64_t v962;
  _QWORD *v963;
  uint64_t v966;
  unint64_t *v967;
  uint64_t v968;
  uint64_t v969;
  _QWORD *v970;
  uint64_t v973;
  unint64_t *v974;
  uint64_t v975;
  uint64_t v976;
  _QWORD *v977;
  uint64_t v980;
  unint64_t *v981;
  uint64_t v982;
  uint64_t v983;
  _QWORD *v984;
  uint64_t v987;
  unint64_t *v988;
  uint64_t v989;
  uint64_t v990;
  _QWORD *v991;
  uint64_t v994;
  unint64_t *v995;
  uint64_t v996;
  uint64_t v997;
  _QWORD *v998;
  uint64_t v1001;
  unint64_t *v1002;
  uint64_t v1003;
  uint64_t v1004;
  _QWORD *v1005;
  uint64_t v1008;
  unint64_t *v1009;
  uint64_t v1010;
  uint64_t v1011;
  _QWORD *v1012;
  uint64_t v1015;
  unint64_t *v1016;
  uint64_t v1017;
  uint64_t v1018;
  _QWORD *v1019;
  uint64_t v1022;
  unint64_t *v1023;
  uint64_t v1024;
  uint64_t v1025;
  _QWORD *v1026;
  uint64_t v1029;
  unint64_t *v1030;
  uint64_t v1031;
  unint64_t *v1032;
  uint64_t v1033;
  unint64_t *v1034;
  uint64_t v1035;
  unint64_t *v1036;
  uint64_t v1037;
  unint64_t *v1038;
  uint64_t v1039;
  unint64_t *v1040;
  uint64_t v1041;
  unint64_t *v1042;
  uint64_t v1043;
  unint64_t *v1044;
  uint64_t v1045;
  unint64_t *v1046;
  uint64_t v1047;
  unint64_t *v1048;
  uint64_t v1049;
  unint64_t *v1050;
  uint64_t v1051;
  unint64_t *v1052;
  uint64_t v1053;
  unint64_t *v1054;
  uint64_t v1055;
  unint64_t *v1056;
  uint64_t v1057;
  unint64_t *v1058;
  uint64_t v1059;
  unint64_t *v1060;
  uint64_t v1061;
  unint64_t *v1062;
  uint64_t v1063;
  unint64_t *v1064;
  uint64_t v1065;
  unint64_t *v1066;
  uint64_t v1067;
  unint64_t *v1068;
  uint64_t v1069;
  unint64_t *v1070;
  uint64_t v1071;
  unint64_t *v1072;
  uint64_t v1073;
  unint64_t *v1074;
  uint64_t v1075;
  unint64_t *v1076;
  uint64_t v1077;
  int v1078;
  int v1079;
  int v1080;
  int v1081;
  uint64_t v1082;
  int v1083;
  int v1084;
  uint64_t v1085;
  int v1086;
  uint64_t v1087;
  int v1088;
  int v1089;
  uint64_t v1090;
  uint64_t v1091;
  uint64_t v1092;
  uint64_t v1093;
  uint64_t v1094;
  uint64_t v1095;
  int v1096;
  uint64_t v1097;
  uint64_t v1098;
  int v1099;
  int v1100;
  uint64_t v1101;
  std::__shared_weak_count *v1102;
  unsigned __int8 *v1103;
  unsigned int v1104;
  int v1105;
  int v1106;
  unsigned int v1107;
  char v1108;
  char v1109;
  unsigned int v1110;
  int v1111;
  char v1112;
  char v1113;
  uint64_t v1114;
  uint64_t v1115;
  unsigned __int8 *v1116;

  switch(a1)
  {
    case 0:
      sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_20B532360);
      abort();
    case 1:
      sub_20B2D6D24(a3, (uint64_t)&v1101);
      v4 = *a2;
      v5 = v1104;
      v6 = v1101;
      if (!v1101)
        goto LABEL_1389;
      v7 = v1102;
      if (v1102)
      {
        p_shared_owners = (unint64_t *)&v1102->__shared_owners_;
        do
          v9 = __ldxr(p_shared_owners);
        while (__stxr(v9 + 1, p_shared_owners));
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        v6 = v1101;
        v11 = v1102;
        if (v1102)
        {
          v12 = (unint64_t *)&v1102->__shared_owners_;
          do
            v13 = __ldxr(v12);
          while (__stxr(v13 + 1, v12));
          do
            v14 = __ldaxr(v12);
          while (__stlxr(v14 - 1, v12));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
      }
      if (v1109)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v1115, v6, 0);
      else
LABEL_1389:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1415;
      v822 = v1105;
      if (!v1105)
        goto LABEL_1415;
      v823 = v1107;
      v824 = v1103;
      if (v1108 && v1103)
      {
        v825 = v1101;
        v826 = v1102;
        if (v1102)
        {
          v827 = (unint64_t *)&v1102->__shared_owners_;
          do
            v828 = __ldxr(v827);
          while (__stxr(v828 + 1, v827));
          do
            v829 = __ldaxr(v827);
          while (__stlxr(v829 - 1, v827));
          if (!v829)
          {
            ((void (*)(std::__shared_weak_count *))v826->__on_zero_shared)(v826);
            std::__shared_weak_count::__release_weak(v826);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v825 + 88))(v825, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v824 = v1103;
      }
      if (v822 == 1)
        goto LABEL_1409;
      if (!(_DWORD)v5)
        goto LABEL_1415;
      v830 = 0;
      do
      {
        if (!v824
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2032;
        }
        for (i = 0; i != v5; ++i)
          sub_20B512EB0(v4, &v824[i]);
        v824 += v823;
        ++v830;
      }
      while (v830 != v822 - 1);
LABEL_1409:
      if ((_DWORD)v5 && !v824)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2032:
          abort();
        }
        v824 = 0;
      }
      if ((_DWORD)v5)
      {
        do
        {
          sub_20B512EB0(v4, v824++);
          --v5;
        }
        while (v5);
      }
LABEL_1415:
      v832 = v1115;
      v1115 = 0;
      if (v832)
        (*(void (**)(uint64_t))(*(_QWORD *)v832 + 8))(v832);
      v484 = v1102;
      if (!v1102)
        return;
      v833 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v833);
      while (__stlxr(v486 - 1, v833));
      goto LABEL_2025;
    case 2:
      sub_20B2D7590(a3, (uint64_t)&v1101);
      v321 = *a2;
      v322 = v1104;
      v323 = v1101;
      if (!v1101)
        goto LABEL_1363;
      v324 = v1102;
      if (v1102)
      {
        v325 = (unint64_t *)&v1102->__shared_owners_;
        do
          v326 = __ldxr(v325);
        while (__stxr(v326 + 1, v325));
        do
          v327 = __ldaxr(v325);
        while (__stlxr(v327 - 1, v325));
        if (!v327)
        {
          ((void (*)(std::__shared_weak_count *))v324->__on_zero_shared)(v324);
          std::__shared_weak_count::__release_weak(v324);
        }
        v323 = v1101;
        v328 = v1102;
        if (v1102)
        {
          v329 = (unint64_t *)&v1102->__shared_owners_;
          do
            v330 = __ldxr(v329);
          while (__stxr(v330 + 1, v329));
          do
            v331 = __ldaxr(v329);
          while (__stlxr(v331 - 1, v329));
          if (!v331)
          {
            ((void (*)(std::__shared_weak_count *))v328->__on_zero_shared)(v328);
            std::__shared_weak_count::__release_weak(v328);
          }
        }
      }
      if (v1109)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v323 + 96))(&v1114, v323, 0);
      else
LABEL_1363:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1996;
      v810 = v1105;
      if (!v1105)
        goto LABEL_1996;
      v1097 = v322;
      v811 = v1107;
      v812 = v1103;
      if (v1108 && v1103)
      {
        v813 = v1101;
        v814 = v1102;
        if (v1102)
        {
          v815 = (unint64_t *)&v1102->__shared_owners_;
          do
            v816 = __ldxr(v815);
          while (__stxr(v816 + 1, v815));
          do
            v817 = __ldaxr(v815);
          while (__stlxr(v817 - 1, v815));
          if (!v817)
          {
            ((void (*)(std::__shared_weak_count *))v814->__on_zero_shared)(v814);
            std::__shared_weak_count::__release_weak(v814);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v813 + 88))(v813, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v812 = v1103;
      }
      if (v810 == 1)
        goto LABEL_1385;
      if ((_DWORD)v1097)
      {
        v818 = 0;
        do
        {
          if (!v812
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2054;
          }
          v819 = 0;
          v820 = *(_QWORD *)(v321 + 40);
          do
          {
            if (v820)
            {
              v821 = *(_QWORD **)(v321 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v321 + 32);
              sub_20AEC01D0(v821, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v820 = *(_QWORD *)(v321 + 40) + 1;
            *(_QWORD *)(v321 + 40) = v820;
            v819 += 2;
          }
          while (2 * v1097 != v819);
          v812 += 2 * v811;
          ++v818;
        }
        while (v818 != v810 - 1);
LABEL_1385:
        if ((_DWORD)v1097 && !v812)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2054:
            abort();
          }
          v812 = 0;
        }
      }
      else
      {
        v812 += (2 * (v810 - 2) + 2) * v811;
      }
      v1115 = v1097;
      v1116 = v812;
      sub_20B513184(v321, &v1115);
LABEL_1996:
      v1069 = v1114;
      v1114 = 0;
      if (v1069)
        (*(void (**)(uint64_t))(*(_QWORD *)v1069 + 8))(v1069);
      v484 = v1102;
      if (!v1102)
        return;
      v1070 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1070);
      while (__stlxr(v486 - 1, v1070));
      goto LABEL_2025;
    case 3:
      sub_20B372128(a3, (uint64_t)&v1101);
      v311 = *a2;
      v1087 = v1104;
      v312 = v1101;
      if (!v1101)
        goto LABEL_1337;
      v313 = v1102;
      if (v1102)
      {
        v314 = (unint64_t *)&v1102->__shared_owners_;
        do
          v315 = __ldxr(v314);
        while (__stxr(v315 + 1, v314));
        do
          v316 = __ldaxr(v314);
        while (__stlxr(v316 - 1, v314));
        if (!v316)
        {
          ((void (*)(std::__shared_weak_count *))v313->__on_zero_shared)(v313);
          std::__shared_weak_count::__release_weak(v313);
        }
        v312 = v1101;
        v317 = v1102;
        if (v1102)
        {
          v318 = (unint64_t *)&v1102->__shared_owners_;
          do
            v319 = __ldxr(v318);
          while (__stxr(v319 + 1, v318));
          do
            v320 = __ldaxr(v318);
          while (__stlxr(v320 - 1, v318));
          if (!v320)
          {
            ((void (*)(std::__shared_weak_count *))v317->__on_zero_shared)(v317);
            std::__shared_weak_count::__release_weak(v317);
          }
        }
      }
      if (v1109)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v312 + 96))(&v1115, v312, 0);
      else
LABEL_1337:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1758;
      v796 = v1105;
      if (!v1105)
        goto LABEL_1758;
      v797 = v1107;
      v798 = v1103;
      if (v1108 && v1103)
      {
        v799 = v1101;
        v800 = v1102;
        if (v1102)
        {
          v801 = (unint64_t *)&v1102->__shared_owners_;
          do
            v802 = __ldxr(v801);
          while (__stxr(v802 + 1, v801));
          do
            v803 = __ldaxr(v801);
          while (__stlxr(v803 - 1, v801));
          if (!v803)
          {
            ((void (*)(std::__shared_weak_count *))v800->__on_zero_shared)(v800);
            std::__shared_weak_count::__release_weak(v800);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v799 + 88))(v799, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v798 = v1103;
      }
      if (v796 == 1)
        goto LABEL_1359;
      if (!(_DWORD)v1087)
        goto LABEL_1758;
      v804 = 0;
      do
      {
        if (!v798
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1362;
        }
        v805 = 0;
        v806 = *(_QWORD *)(v311 + 40);
        do
        {
          if (v806)
          {
            v807 = *(_QWORD **)(v311 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v311 + 32);
            sub_20AEC01D0(v807, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v311 + 24) + *(_QWORD *)(**(_QWORD **)(v311 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v798[v805];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v806 = *(_QWORD *)(v311 + 40) + 1;
          *(_QWORD *)(v311 + 40) = v806;
          v805 += 2;
        }
        while (2 * v1087 != v805);
        v798 += 2 * v797;
        ++v804;
      }
      while (v804 != v796 - 1);
LABEL_1359:
      if (!(_DWORD)v1087 || v798)
      {
        if (!(_DWORD)v1087)
          goto LABEL_1758;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1362:
        abort();
      }
      v1003 = *(_QWORD *)(v311 + 40);
      v1004 = 2 * v1087;
      do
      {
        if (v1003)
        {
          v1005 = *(_QWORD **)(v311 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v311 + 32);
          sub_20AEC01D0(v1005, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v311 + 24) + *(_QWORD *)(**(_QWORD **)(v311 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v798;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v1003 = *(_QWORD *)(v311 + 40) + 1;
        *(_QWORD *)(v311 + 40) = v1003;
        v798 += 2;
        v1004 -= 2;
      }
      while (v1004);
LABEL_1758:
      v1008 = v1115;
      v1115 = 0;
      if (v1008)
        (*(void (**)(uint64_t))(*(_QWORD *)v1008 + 8))(v1008);
      v484 = v1102;
      if (!v1102)
        return;
      v1009 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1009);
      while (__stlxr(v486 - 1, v1009));
      goto LABEL_2025;
    case 4:
      sub_20B3726DC(a3, (uint64_t)&v1101);
      v190 = *a2;
      v191 = v1104;
      v192 = v1101;
      if (!v1101)
        goto LABEL_1040;
      v193 = v1102;
      if (v1102)
      {
        v194 = (unint64_t *)&v1102->__shared_owners_;
        do
          v195 = __ldxr(v194);
        while (__stxr(v195 + 1, v194));
        do
          v196 = __ldaxr(v194);
        while (__stlxr(v196 - 1, v194));
        if (!v196)
        {
          ((void (*)(std::__shared_weak_count *))v193->__on_zero_shared)(v193);
          std::__shared_weak_count::__release_weak(v193);
        }
        v192 = v1101;
        v197 = v1102;
        if (v1102)
        {
          v198 = (unint64_t *)&v1102->__shared_owners_;
          do
            v199 = __ldxr(v198);
          while (__stxr(v199 + 1, v198));
          do
            v200 = __ldaxr(v198);
          while (__stlxr(v200 - 1, v198));
          if (!v200)
          {
            ((void (*)(std::__shared_weak_count *))v197->__on_zero_shared)(v197);
            std::__shared_weak_count::__release_weak(v197);
          }
        }
      }
      if (v1109)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v192 + 96))(&v1114, v192, 0);
      else
LABEL_1040:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1932;
      v655 = v1105;
      if (!v1105)
        goto LABEL_1932;
      v1094 = v191;
      v656 = v1107;
      v657 = v1103;
      if (v1108 && v1103)
      {
        v658 = v1101;
        v659 = v1102;
        if (v1102)
        {
          v660 = (unint64_t *)&v1102->__shared_owners_;
          do
            v661 = __ldxr(v660);
          while (__stxr(v661 + 1, v660));
          do
            v662 = __ldaxr(v660);
          while (__stlxr(v662 - 1, v660));
          if (!v662)
          {
            ((void (*)(std::__shared_weak_count *))v659->__on_zero_shared)(v659);
            std::__shared_weak_count::__release_weak(v659);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v658 + 88))(v658, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v657 = v1103;
      }
      if (v655 == 1)
        goto LABEL_1062;
      if ((_DWORD)v1094)
      {
        v663 = 0;
        do
        {
          if (!v657
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2043;
          }
          v664 = 0;
          v665 = *(_QWORD *)(v190 + 40);
          do
          {
            if (v665)
            {
              v666 = *(_QWORD **)(v190 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v190 + 32);
              sub_20AEC01D0(v666, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v190 + 24) + *(_QWORD *)(**(_QWORD **)(v190 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v665 = *(_QWORD *)(v190 + 40) + 1;
            *(_QWORD *)(v190 + 40) = v665;
            v664 += 4;
          }
          while (4 * v1094 != v664);
          v657 += 4 * v656;
          ++v663;
        }
        while (v663 != v655 - 1);
LABEL_1062:
        if ((_DWORD)v1094 && !v657)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2043:
            abort();
          }
          v657 = 0;
        }
      }
      else
      {
        v657 += (4 * (v655 - 2) + 4) * v656;
      }
      v1115 = v1094;
      v1116 = v657;
      sub_20B513208(v190, &v1115);
LABEL_1932:
      v1053 = v1114;
      v1114 = 0;
      if (v1053)
        (*(void (**)(uint64_t))(*(_QWORD *)v1053 + 8))(v1053);
      v484 = v1102;
      if (!v1102)
        return;
      v1054 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1054);
      while (__stlxr(v486 - 1, v1054));
      goto LABEL_2025;
    case 5:
      sub_20B372C90(a3, (uint64_t)&v1101);
      v278 = *a2;
      v279 = v1111;
      v280 = v1101;
      if (!v1101)
        goto LABEL_1250;
      v281 = v1102;
      if (v1102)
      {
        v282 = (unint64_t *)&v1102->__shared_owners_;
        do
          v283 = __ldxr(v282);
        while (__stxr(v283 + 1, v282));
        do
          v284 = __ldaxr(v282);
        while (__stlxr(v284 - 1, v282));
        if (!v284)
        {
          ((void (*)(std::__shared_weak_count *))v281->__on_zero_shared)(v281);
          std::__shared_weak_count::__release_weak(v281);
        }
        v280 = v1101;
        v285 = v1102;
        if (v1102)
        {
          v286 = (unint64_t *)&v1102->__shared_owners_;
          do
            v287 = __ldxr(v286);
          while (__stxr(v287 + 1, v286));
          do
            v288 = __ldaxr(v286);
          while (__stlxr(v288 - 1, v286));
          if (!v288)
          {
            ((void (*)(std::__shared_weak_count *))v285->__on_zero_shared)(v285);
            std::__shared_weak_count::__release_weak(v285);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v280 + 96))(&v1115, v280, 0);
      else
LABEL_1250:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1277;
      if (!v1105)
        goto LABEL_1277;
      v757 = v1106;
      if (!v1106)
        goto LABEL_1277;
      v758 = v1110;
      v759 = v1103;
      if (v1112 && v1103)
      {
        v760 = v1101;
        v761 = v1102;
        if (v1102)
        {
          v762 = (unint64_t *)&v1102->__shared_owners_;
          do
            v763 = __ldxr(v762);
          while (__stxr(v763 + 1, v762));
          do
            v764 = __ldaxr(v762);
          while (__stlxr(v764 - 1, v762));
          if (!v764)
          {
            ((void (*)(std::__shared_weak_count *))v761->__on_zero_shared)(v761);
            std::__shared_weak_count::__release_weak(v761);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v760 + 88))(v760, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v759 = v1103;
      }
      v765 = (2 * v279);
      if (v757 == 1)
        goto LABEL_1271;
      if (!(_DWORD)v765)
        goto LABEL_1277;
      v766 = 0;
      do
      {
        if (!v759
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2031;
        }
        for (j = 0; j != v765; ++j)
          sub_20B512EB0(v278, &v759[j]);
        v759 += v758;
        ++v766;
      }
      while (v766 != v757 - 1);
LABEL_1271:
      if ((_DWORD)v765 && !v759)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2031:
          abort();
        }
        v759 = 0;
      }
      if ((_DWORD)v765)
      {
        do
        {
          sub_20B512EB0(v278, v759++);
          --v765;
        }
        while (v765);
      }
LABEL_1277:
      v768 = v1115;
      v1115 = 0;
      if (v768)
        (*(void (**)(uint64_t))(*(_QWORD *)v768 + 8))(v768);
      v484 = v1102;
      if (!v1102)
        return;
      v769 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v769);
      while (__stlxr(v486 - 1, v769));
      goto LABEL_2025;
    case 6:
      sub_20B3732C4(a3, (uint64_t)&v1101);
      v179 = *a2;
      v180 = v1111;
      v181 = v1101;
      if (!v1101)
        goto LABEL_1013;
      v182 = v1102;
      if (v1102)
      {
        v183 = (unint64_t *)&v1102->__shared_owners_;
        do
          v184 = __ldxr(v183);
        while (__stxr(v184 + 1, v183));
        do
          v185 = __ldaxr(v183);
        while (__stlxr(v185 - 1, v183));
        if (!v185)
        {
          ((void (*)(std::__shared_weak_count *))v182->__on_zero_shared)(v182);
          std::__shared_weak_count::__release_weak(v182);
        }
        v181 = v1101;
        v186 = v1102;
        if (v1102)
        {
          v187 = (unint64_t *)&v1102->__shared_owners_;
          do
            v188 = __ldxr(v187);
          while (__stxr(v188 + 1, v187));
          do
            v189 = __ldaxr(v187);
          while (__stlxr(v189 - 1, v187));
          if (!v189)
          {
            ((void (*)(std::__shared_weak_count *))v186->__on_zero_shared)(v186);
            std::__shared_weak_count::__release_weak(v186);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v181 + 96))(&v1114, v181, 0);
      else
LABEL_1013:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1924;
      if (!v1105)
        goto LABEL_1924;
      v642 = v1106;
      if (!v1106)
        goto LABEL_1924;
      v643 = v1110;
      v644 = v1103;
      if (v1112 && v1103)
      {
        v645 = v1101;
        v646 = v1102;
        if (v1102)
        {
          v647 = (unint64_t *)&v1102->__shared_owners_;
          do
            v648 = __ldxr(v647);
          while (__stxr(v648 + 1, v647));
          do
            v649 = __ldaxr(v647);
          while (__stlxr(v649 - 1, v647));
          if (!v649)
          {
            ((void (*)(std::__shared_weak_count *))v646->__on_zero_shared)(v646);
            std::__shared_weak_count::__release_weak(v646);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v645 + 88))(v645, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v644 = v1103;
      }
      v650 = (2 * v180);
      if (v642 == 1)
        goto LABEL_1036;
      if ((_DWORD)v650)
      {
        v651 = 0;
        do
        {
          if (!v644
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2042;
          }
          v652 = 0;
          v653 = *(_QWORD *)(v179 + 40);
          do
          {
            if (v653)
            {
              v654 = *(_QWORD **)(v179 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v179 + 32);
              sub_20AEC01D0(v654, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v653 = *(_QWORD *)(v179 + 40) + 1;
            *(_QWORD *)(v179 + 40) = v653;
            v652 += 2;
          }
          while (2 * v650 != v652);
          v644 += 2 * v643;
          ++v651;
        }
        while (v651 != v642 - 1);
LABEL_1036:
        if ((_DWORD)v650 && !v644)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2042:
            abort();
          }
          v644 = 0;
        }
      }
      else
      {
        v644 += (2 * (v642 - 2) + 2) * v643;
      }
      v1115 = (2 * v180);
      v1116 = v644;
      sub_20B513184(v179, &v1115);
LABEL_1924:
      v1051 = v1114;
      v1114 = 0;
      if (v1051)
        (*(void (**)(uint64_t))(*(_QWORD *)v1051 + 8))(v1051);
      v484 = v1102;
      if (!v1102)
        return;
      v1052 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1052);
      while (__stlxr(v486 - 1, v1052));
      goto LABEL_2025;
    case 7:
      sub_20B3738FC(a3, (uint64_t)&v1101);
      v124 = *a2;
      v125 = v1111;
      v126 = v1101;
      if (!v1101)
        goto LABEL_881;
      v127 = v1102;
      if (v1102)
      {
        v128 = (unint64_t *)&v1102->__shared_owners_;
        do
          v129 = __ldxr(v128);
        while (__stxr(v129 + 1, v128));
        do
          v130 = __ldaxr(v128);
        while (__stlxr(v130 - 1, v128));
        if (!v130)
        {
          ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
          std::__shared_weak_count::__release_weak(v127);
        }
        v126 = v1101;
        v131 = v1102;
        if (v1102)
        {
          v132 = (unint64_t *)&v1102->__shared_owners_;
          do
            v133 = __ldxr(v132);
          while (__stxr(v133 + 1, v132));
          do
            v134 = __ldaxr(v132);
          while (__stlxr(v134 - 1, v132));
          if (!v134)
          {
            ((void (*)(std::__shared_weak_count *))v131->__on_zero_shared)(v131);
            std::__shared_weak_count::__release_weak(v131);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v126 + 96))(&v1115, v126, 0);
      else
LABEL_881:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1714;
      if (!v1105)
        goto LABEL_1714;
      v575 = v1106;
      if (!v1106)
        goto LABEL_1714;
      v576 = v1110;
      v577 = v1103;
      if (v1112 && v1103)
      {
        v578 = v1101;
        v579 = v1102;
        if (v1102)
        {
          v580 = (unint64_t *)&v1102->__shared_owners_;
          do
            v581 = __ldxr(v580);
          while (__stxr(v581 + 1, v580));
          do
            v582 = __ldaxr(v580);
          while (__stlxr(v582 - 1, v580));
          if (!v582)
          {
            ((void (*)(std::__shared_weak_count *))v579->__on_zero_shared)(v579);
            std::__shared_weak_count::__release_weak(v579);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v578 + 88))(v578, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v577 = v1103;
      }
      v1091 = (2 * v125);
      if (v575 == 1)
        goto LABEL_904;
      if (!(2 * v125))
        goto LABEL_1714;
      v583 = 0;
      do
      {
        if (!v577
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_907;
        }
        v584 = 0;
        v585 = *(_QWORD *)(v124 + 40);
        do
        {
          if (v585)
          {
            v586 = *(_QWORD **)(v124 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v124 + 32);
            sub_20AEC01D0(v586, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v124 + 24) + *(_QWORD *)(**(_QWORD **)(v124 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v577[v584];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v585 = *(_QWORD *)(v124 + 40) + 1;
          *(_QWORD *)(v124 + 40) = v585;
          v584 += 2;
        }
        while (2 * v1091 != v584);
        v577 += 2 * v576;
        ++v583;
      }
      while (v583 != v575 - 1);
LABEL_904:
      if (!(_DWORD)v1091 || v577)
      {
        if (!(_DWORD)v1091)
          goto LABEL_1714;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_907:
        abort();
      }
      v975 = *(_QWORD *)(v124 + 40);
      v976 = 2 * v1091;
      do
      {
        if (v975)
        {
          v977 = *(_QWORD **)(v124 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v124 + 32);
          sub_20AEC01D0(v977, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v124 + 24) + *(_QWORD *)(**(_QWORD **)(v124 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v577;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v975 = *(_QWORD *)(v124 + 40) + 1;
        *(_QWORD *)(v124 + 40) = v975;
        v577 += 2;
        v976 -= 2;
      }
      while (v976);
LABEL_1714:
      v980 = v1115;
      v1115 = 0;
      if (v980)
        (*(void (**)(uint64_t))(*(_QWORD *)v980 + 8))(v980);
      v484 = v1102;
      if (!v1102)
        return;
      v981 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v981);
      while (__stlxr(v486 - 1, v981));
      goto LABEL_2025;
    case 8:
      sub_20B373F34(a3, (uint64_t)&v1101);
      v300 = *a2;
      v301 = v1111;
      v302 = v1101;
      if (!v1101)
        goto LABEL_1310;
      v303 = v1102;
      if (v1102)
      {
        v304 = (unint64_t *)&v1102->__shared_owners_;
        do
          v305 = __ldxr(v304);
        while (__stxr(v305 + 1, v304));
        do
          v306 = __ldaxr(v304);
        while (__stlxr(v306 - 1, v304));
        if (!v306)
        {
          ((void (*)(std::__shared_weak_count *))v303->__on_zero_shared)(v303);
          std::__shared_weak_count::__release_weak(v303);
        }
        v302 = v1101;
        v307 = v1102;
        if (v1102)
        {
          v308 = (unint64_t *)&v1102->__shared_owners_;
          do
            v309 = __ldxr(v308);
          while (__stxr(v309 + 1, v308));
          do
            v310 = __ldaxr(v308);
          while (__stlxr(v310 - 1, v308));
          if (!v310)
          {
            ((void (*)(std::__shared_weak_count *))v307->__on_zero_shared)(v307);
            std::__shared_weak_count::__release_weak(v307);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v302 + 96))(&v1114, v302, 0);
      else
LABEL_1310:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1988;
      if (!v1105)
        goto LABEL_1988;
      v783 = v1106;
      if (!v1106)
        goto LABEL_1988;
      v784 = v1110;
      v785 = v1103;
      if (v1112 && v1103)
      {
        v786 = v1101;
        v787 = v1102;
        if (v1102)
        {
          v788 = (unint64_t *)&v1102->__shared_owners_;
          do
            v789 = __ldxr(v788);
          while (__stxr(v789 + 1, v788));
          do
            v790 = __ldaxr(v788);
          while (__stlxr(v790 - 1, v788));
          if (!v790)
          {
            ((void (*)(std::__shared_weak_count *))v787->__on_zero_shared)(v787);
            std::__shared_weak_count::__release_weak(v787);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v786 + 88))(v786, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v785 = v1103;
      }
      v791 = (2 * v301);
      if (v783 == 1)
        goto LABEL_1333;
      if ((_DWORD)v791)
      {
        v792 = 0;
        do
        {
          if (!v785
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2053;
          }
          v793 = 0;
          v794 = *(_QWORD *)(v300 + 40);
          do
          {
            if (v794)
            {
              v795 = *(_QWORD **)(v300 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v300 + 32);
              sub_20AEC01D0(v795, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v300 + 24) + *(_QWORD *)(**(_QWORD **)(v300 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v794 = *(_QWORD *)(v300 + 40) + 1;
            *(_QWORD *)(v300 + 40) = v794;
            v793 += 4;
          }
          while (4 * v791 != v793);
          v785 += 4 * v784;
          ++v792;
        }
        while (v792 != v783 - 1);
LABEL_1333:
        if ((_DWORD)v791 && !v785)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2053:
            abort();
          }
          v785 = 0;
        }
      }
      else
      {
        v785 += (4 * (v783 - 2) + 4) * v784;
      }
      v1115 = v791;
      v1116 = v785;
      sub_20B513208(v300, &v1115);
LABEL_1988:
      v1067 = v1114;
      v1114 = 0;
      if (v1067)
        (*(void (**)(uint64_t))(*(_QWORD *)v1067 + 8))(v1067);
      v484 = v1102;
      if (!v1102)
        return;
      v1068 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1068);
      while (__stlxr(v486 - 1, v1068));
      goto LABEL_2025;
    case 9:
      sub_20B37456C(a3, (uint64_t)&v1101);
      v267 = *a2;
      v268 = v1111;
      v269 = v1101;
      if (!v1101)
        goto LABEL_1228;
      v270 = v1102;
      if (v1102)
      {
        v271 = (unint64_t *)&v1102->__shared_owners_;
        do
          v272 = __ldxr(v271);
        while (__stxr(v272 + 1, v271));
        do
          v273 = __ldaxr(v271);
        while (__stlxr(v273 - 1, v271));
        if (!v273)
        {
          ((void (*)(std::__shared_weak_count *))v270->__on_zero_shared)(v270);
          std::__shared_weak_count::__release_weak(v270);
        }
        v269 = v1101;
        v274 = v1102;
        if (v1102)
        {
          v275 = (unint64_t *)&v1102->__shared_owners_;
          do
            v276 = __ldxr(v275);
          while (__stxr(v276 + 1, v275));
          do
            v277 = __ldaxr(v275);
          while (__stlxr(v277 - 1, v275));
          if (!v277)
          {
            ((void (*)(std::__shared_weak_count *))v274->__on_zero_shared)(v274);
            std::__shared_weak_count::__release_weak(v274);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v269 + 96))(&v1115, v269, 0);
      else
LABEL_1228:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1824;
      if (!v1105)
        goto LABEL_1824;
      v746 = v1106;
      if (!v1106)
        goto LABEL_1824;
      v747 = v1110;
      v748 = v1103;
      if (v1112 && v1103)
      {
        v749 = v1101;
        v750 = v1102;
        if (v1102)
        {
          v751 = (unint64_t *)&v1102->__shared_owners_;
          do
            v752 = __ldxr(v751);
          while (__stxr(v752 + 1, v751));
          do
            v753 = __ldaxr(v751);
          while (__stlxr(v753 - 1, v751));
          if (!v753)
          {
            ((void (*)(std::__shared_weak_count *))v750->__on_zero_shared)(v750);
            std::__shared_weak_count::__release_weak(v750);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v749 + 88))(v749, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v748 = v1103;
      }
      v754 = (3 * v268);
      if (v746 == 1)
      {
        v1096 = v268;
LABEL_1818:
        if (v1096 && !v748)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2033;
          }
          v748 = 0;
        }
        if (v1096)
        {
          do
          {
            sub_20B512EB0(v267, v748++);
            --v754;
          }
          while (v754);
        }
      }
      else if (v268)
      {
        v1096 = v268;
        v755 = 0;
        while (v748
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v756 = 0;
          do
            sub_20B512EB0(v267, &v748[v756++]);
          while (v754 != v756);
          v748 += v747;
          if (++v755 == v746 - 1)
            goto LABEL_1818;
        }
LABEL_2033:
        abort();
      }
LABEL_1824:
      v1031 = v1115;
      v1115 = 0;
      if (v1031)
        (*(void (**)(uint64_t))(*(_QWORD *)v1031 + 8))(v1031);
      v484 = v1102;
      if (!v1102)
        return;
      v1032 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1032);
      while (__stlxr(v486 - 1, v1032));
      goto LABEL_2025;
    case 10:
      sub_20B374BA0(a3, (uint64_t)&v1101);
      v353 = *a2;
      v354 = v1111;
      v355 = v1101;
      if (!v1101)
        goto LABEL_1481;
      v356 = v1102;
      if (v1102)
      {
        v357 = (unint64_t *)&v1102->__shared_owners_;
        do
          v358 = __ldxr(v357);
        while (__stxr(v358 + 1, v357));
        do
          v359 = __ldaxr(v357);
        while (__stlxr(v359 - 1, v357));
        if (!v359)
        {
          ((void (*)(std::__shared_weak_count *))v356->__on_zero_shared)(v356);
          std::__shared_weak_count::__release_weak(v356);
        }
        v355 = v1101;
        v360 = v1102;
        if (v1102)
        {
          v361 = (unint64_t *)&v1102->__shared_owners_;
          do
            v362 = __ldxr(v361);
          while (__stxr(v362 + 1, v361));
          do
            v363 = __ldaxr(v361);
          while (__stlxr(v363 - 1, v361));
          if (!v363)
          {
            ((void (*)(std::__shared_weak_count *))v360->__on_zero_shared)(v360);
            std::__shared_weak_count::__release_weak(v360);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v355 + 96))(&v1114, v355, 0);
      else
LABEL_1481:
        v1114 = 0;
      if (!v1104)
        goto LABEL_2004;
      if (!v1105)
        goto LABEL_2004;
      v861 = v1106;
      if (!v1106)
        goto LABEL_2004;
      v862 = v1110;
      v863 = v1103;
      if (v1112 && v1103)
      {
        v864 = v1101;
        v865 = v1102;
        if (v1102)
        {
          v866 = (unint64_t *)&v1102->__shared_owners_;
          do
            v867 = __ldxr(v866);
          while (__stxr(v867 + 1, v866));
          do
            v868 = __ldaxr(v866);
          while (__stlxr(v868 - 1, v866));
          if (!v868)
          {
            ((void (*)(std::__shared_weak_count *))v865->__on_zero_shared)(v865);
            std::__shared_weak_count::__release_weak(v865);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v864 + 88))(v864, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v863 = v1103;
      }
      if (v861 == 1)
      {
        v1083 = v354;
LABEL_1831:
        if (v1083 && !v863)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2055;
          }
          v863 = 0;
        }
      }
      else
      {
        if (v354)
        {
          v1083 = v354;
          v869 = 0;
          while (v863
               || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v870 = 0;
            v871 = *(_QWORD *)(v353 + 40);
            do
            {
              if (v871)
              {
                v872 = *(_QWORD **)(v353 + 24);
                LOBYTE(v1115) = *(_BYTE *)(v353 + 32);
                sub_20AEC01D0(v872, (uint64_t)&v1115, 1);
              }
              std::ostream::operator<<();
              v871 = *(_QWORD *)(v353 + 40) + 1;
              *(_QWORD *)(v353 + 40) = v871;
              v870 += 2;
            }
            while (2 * (3 * v354) != v870);
            v863 += 2 * v862;
            if (++v869 == v861 - 1)
              goto LABEL_1831;
          }
LABEL_2055:
          abort();
        }
        v863 += (2 * (v861 - 2) + 2) * v862;
      }
      v1115 = (3 * v354);
      v1116 = v863;
      sub_20B513184(v353, &v1115);
LABEL_2004:
      v1071 = v1114;
      v1114 = 0;
      if (v1071)
        (*(void (**)(uint64_t))(*(_QWORD *)v1071 + 8))(v1071);
      v484 = v1102;
      if (!v1102)
        return;
      v1072 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1072);
      while (__stlxr(v486 - 1, v1072));
      goto LABEL_2025;
    case 11:
      sub_20B3751D8(a3, (uint64_t)&v1101);
      v343 = *a2;
      v1088 = v1111;
      v344 = v1101;
      if (!v1101)
        goto LABEL_1454;
      v345 = v1102;
      if (v1102)
      {
        v346 = (unint64_t *)&v1102->__shared_owners_;
        do
          v347 = __ldxr(v346);
        while (__stxr(v347 + 1, v346));
        do
          v348 = __ldaxr(v346);
        while (__stlxr(v348 - 1, v346));
        if (!v348)
        {
          ((void (*)(std::__shared_weak_count *))v345->__on_zero_shared)(v345);
          std::__shared_weak_count::__release_weak(v345);
        }
        v344 = v1101;
        v349 = v1102;
        if (v1102)
        {
          v350 = (unint64_t *)&v1102->__shared_owners_;
          do
            v351 = __ldxr(v350);
          while (__stxr(v351 + 1, v350));
          do
            v352 = __ldaxr(v350);
          while (__stlxr(v352 - 1, v350));
          if (!v352)
          {
            ((void (*)(std::__shared_weak_count *))v349->__on_zero_shared)(v349);
            std::__shared_weak_count::__release_weak(v349);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v344 + 96))(&v1115, v344, 0);
      else
LABEL_1454:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1769;
      if (!v1105)
        goto LABEL_1769;
      v847 = v1106;
      if (!v1106)
        goto LABEL_1769;
      v848 = v1110;
      v849 = v1103;
      if (v1112 && v1103)
      {
        v850 = v1101;
        v851 = v1102;
        if (v1102)
        {
          v852 = (unint64_t *)&v1102->__shared_owners_;
          do
            v853 = __ldxr(v852);
          while (__stxr(v853 + 1, v852));
          do
            v854 = __ldaxr(v852);
          while (__stlxr(v854 - 1, v852));
          if (!v854)
          {
            ((void (*)(std::__shared_weak_count *))v851->__on_zero_shared)(v851);
            std::__shared_weak_count::__release_weak(v851);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v850 + 88))(v850, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v849 = v1103;
      }
      v1082 = (3 * v1088);
      if (v847 == 1)
        goto LABEL_1477;
      if (!v1088)
        goto LABEL_1769;
      v855 = 0;
      do
      {
        if (!v849
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1480;
        }
        v856 = 0;
        v857 = *(_QWORD *)(v343 + 40);
        do
        {
          if (v857)
          {
            v858 = *(_QWORD **)(v343 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v343 + 32);
            sub_20AEC01D0(v858, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v343 + 24) + *(_QWORD *)(**(_QWORD **)(v343 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v849[v856];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v857 = *(_QWORD *)(v343 + 40) + 1;
          *(_QWORD *)(v343 + 40) = v857;
          v856 += 2;
        }
        while (2 * v1082 != v856);
        v849 += 2 * v848;
        ++v855;
      }
      while (v855 != v847 - 1);
LABEL_1477:
      if (!v1088 || v849)
      {
        if (!v1088)
          goto LABEL_1769;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1480:
        abort();
      }
      v1010 = *(_QWORD *)(v343 + 40);
      v1011 = 2 * v1082;
      do
      {
        if (v1010)
        {
          v1012 = *(_QWORD **)(v343 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v343 + 32);
          sub_20AEC01D0(v1012, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v343 + 24) + *(_QWORD *)(**(_QWORD **)(v343 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v849;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v1010 = *(_QWORD *)(v343 + 40) + 1;
        *(_QWORD *)(v343 + 40) = v1010;
        v849 += 2;
        v1011 -= 2;
      }
      while (v1011);
LABEL_1769:
      v1015 = v1115;
      v1115 = 0;
      if (v1015)
        (*(void (**)(uint64_t))(*(_QWORD *)v1015 + 8))(v1015);
      v484 = v1102;
      if (!v1102)
        return;
      v1016 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1016);
      while (__stlxr(v486 - 1, v1016));
      goto LABEL_2025;
    case 12:
      sub_20B375810(a3, (uint64_t)&v1101);
      v47 = *a2;
      v48 = v1111;
      v49 = v1101;
      if (!v1101)
        goto LABEL_689;
      v50 = v1102;
      if (v1102)
      {
        v51 = (unint64_t *)&v1102->__shared_owners_;
        do
          v52 = __ldxr(v51);
        while (__stxr(v52 + 1, v51));
        do
          v53 = __ldaxr(v51);
        while (__stlxr(v53 - 1, v51));
        if (!v53)
        {
          ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
          std::__shared_weak_count::__release_weak(v50);
        }
        v49 = v1101;
        v54 = v1102;
        if (v1102)
        {
          v55 = (unint64_t *)&v1102->__shared_owners_;
          do
            v56 = __ldxr(v55);
          while (__stxr(v56 + 1, v55));
          do
            v57 = __ldaxr(v55);
          while (__stlxr(v57 - 1, v55));
          if (!v57)
          {
            ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
            std::__shared_weak_count::__release_weak(v54);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v49 + 96))(&v1114, v49, 0);
      else
LABEL_689:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1868;
      if (!v1105)
        goto LABEL_1868;
      v487 = v1106;
      if (!v1106)
        goto LABEL_1868;
      v488 = v1110;
      v489 = v1103;
      if (v1112 && v1103)
      {
        v490 = v1101;
        v491 = v1102;
        if (v1102)
        {
          v492 = (unint64_t *)&v1102->__shared_owners_;
          do
            v493 = __ldxr(v492);
          while (__stxr(v493 + 1, v492));
          do
            v494 = __ldaxr(v492);
          while (__stlxr(v494 - 1, v492));
          if (!v494)
          {
            ((void (*)(std::__shared_weak_count *))v491->__on_zero_shared)(v491);
            std::__shared_weak_count::__release_weak(v491);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v490 + 88))(v490, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v489 = v1103;
      }
      if (v487 == 1)
      {
        v1078 = v48;
LABEL_1798:
        if (v1078 && !v489)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2038;
          }
          v489 = 0;
        }
      }
      else
      {
        if (v48)
        {
          v1078 = v48;
          v495 = 0;
          while (v489
               || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v496 = 0;
            v497 = *(_QWORD *)(v47 + 40);
            do
            {
              if (v497)
              {
                v498 = *(_QWORD **)(v47 + 24);
                LOBYTE(v1115) = *(_BYTE *)(v47 + 32);
                sub_20AEC01D0(v498, (uint64_t)&v1115, 1);
              }
              *(_QWORD *)(*(_QWORD *)(v47 + 24) + *(_QWORD *)(**(_QWORD **)(v47 + 24) - 24) + 16) = 9;
              std::ostream::operator<<();
              v497 = *(_QWORD *)(v47 + 40) + 1;
              *(_QWORD *)(v47 + 40) = v497;
              v496 += 4;
            }
            while (4 * (3 * v48) != v496);
            v489 += 4 * v488;
            if (++v495 == v487 - 1)
              goto LABEL_1798;
          }
LABEL_2038:
          abort();
        }
        v489 += (4 * (v487 - 2) + 4) * v488;
      }
      v1115 = (3 * v48);
      v1116 = v489;
      sub_20B513208(v47, &v1115);
LABEL_1868:
      v1037 = v1114;
      v1114 = 0;
      if (v1037)
        (*(void (**)(uint64_t))(*(_QWORD *)v1037 + 8))(v1037);
      v484 = v1102;
      if (!v1102)
        return;
      v1038 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1038);
      while (__stlxr(v486 - 1, v1038));
      goto LABEL_2025;
    case 13:
      sub_20B375E48(a3, (uint64_t)&v1101);
      v91 = *a2;
      v92 = v1111;
      v93 = v1101;
      if (!v1101)
        goto LABEL_797;
      v94 = v1102;
      if (v1102)
      {
        v95 = (unint64_t *)&v1102->__shared_owners_;
        do
          v96 = __ldxr(v95);
        while (__stxr(v96 + 1, v95));
        do
          v97 = __ldaxr(v95);
        while (__stlxr(v97 - 1, v95));
        if (!v97)
        {
          ((void (*)(std::__shared_weak_count *))v94->__on_zero_shared)(v94);
          std::__shared_weak_count::__release_weak(v94);
        }
        v93 = v1101;
        v98 = v1102;
        if (v1102)
        {
          v99 = (unint64_t *)&v1102->__shared_owners_;
          do
            v100 = __ldxr(v99);
          while (__stxr(v100 + 1, v99));
          do
            v101 = __ldaxr(v99);
          while (__stlxr(v101 - 1, v99));
          if (!v101)
          {
            ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
            std::__shared_weak_count::__release_weak(v98);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v93 + 96))(&v1115, v93, 0);
      else
LABEL_797:
        v1115 = 0;
      if (!v1104)
        goto LABEL_824;
      if (!v1105)
        goto LABEL_824;
      v537 = v1106;
      if (!v1106)
        goto LABEL_824;
      v538 = v1110;
      v539 = v1103;
      if (v1112 && v1103)
      {
        v540 = v1101;
        v541 = v1102;
        if (v1102)
        {
          v542 = (unint64_t *)&v1102->__shared_owners_;
          do
            v543 = __ldxr(v542);
          while (__stxr(v543 + 1, v542));
          do
            v544 = __ldaxr(v542);
          while (__stlxr(v544 - 1, v542));
          if (!v544)
          {
            ((void (*)(std::__shared_weak_count *))v541->__on_zero_shared)(v541);
            std::__shared_weak_count::__release_weak(v541);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v540 + 88))(v540, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v539 = v1103;
      }
      v545 = (4 * v92);
      if (v537 == 1)
        goto LABEL_818;
      if (!(_DWORD)v545)
        goto LABEL_824;
      v546 = 0;
      do
      {
        if (!v539
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2030;
        }
        for (k = 0; k != v545; ++k)
          sub_20B512EB0(v91, &v539[k]);
        v539 += v538;
        ++v546;
      }
      while (v546 != v537 - 1);
LABEL_818:
      if ((_DWORD)v545 && !v539)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2030:
          abort();
        }
        v539 = 0;
      }
      if ((_DWORD)v545)
      {
        do
        {
          sub_20B512EB0(v91, v539++);
          --v545;
        }
        while (v545);
      }
LABEL_824:
      v548 = v1115;
      v1115 = 0;
      if (v548)
        (*(void (**)(uint64_t))(*(_QWORD *)v548 + 8))(v548);
      v484 = v1102;
      if (!v1102)
        return;
      v549 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v549);
      while (__stlxr(v486 - 1, v549));
      goto LABEL_2025;
    case 14:
      sub_20B37647C(a3, (uint64_t)&v1101);
      v80 = *a2;
      v81 = v1111;
      v82 = v1101;
      if (!v1101)
        goto LABEL_770;
      v83 = v1102;
      if (v1102)
      {
        v84 = (unint64_t *)&v1102->__shared_owners_;
        do
          v85 = __ldxr(v84);
        while (__stxr(v85 + 1, v84));
        do
          v86 = __ldaxr(v84);
        while (__stlxr(v86 - 1, v84));
        if (!v86)
        {
          ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
          std::__shared_weak_count::__release_weak(v83);
        }
        v82 = v1101;
        v87 = v1102;
        if (v1102)
        {
          v88 = (unint64_t *)&v1102->__shared_owners_;
          do
            v89 = __ldxr(v88);
          while (__stxr(v89 + 1, v88));
          do
            v90 = __ldaxr(v88);
          while (__stlxr(v90 - 1, v88));
          if (!v90)
          {
            ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
            std::__shared_weak_count::__release_weak(v87);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v82 + 96))(&v1114, v82, 0);
      else
LABEL_770:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1884;
      if (!v1105)
        goto LABEL_1884;
      v524 = v1106;
      if (!v1106)
        goto LABEL_1884;
      v525 = v1110;
      v526 = v1103;
      if (v1112 && v1103)
      {
        v527 = v1101;
        v528 = v1102;
        if (v1102)
        {
          v529 = (unint64_t *)&v1102->__shared_owners_;
          do
            v530 = __ldxr(v529);
          while (__stxr(v530 + 1, v529));
          do
            v531 = __ldaxr(v529);
          while (__stlxr(v531 - 1, v529));
          if (!v531)
          {
            ((void (*)(std::__shared_weak_count *))v528->__on_zero_shared)(v528);
            std::__shared_weak_count::__release_weak(v528);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v527 + 88))(v527, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v526 = v1103;
      }
      v532 = (4 * v81);
      if (v524 == 1)
        goto LABEL_793;
      if ((_DWORD)v532)
      {
        v533 = 0;
        do
        {
          if (!v526
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2039;
          }
          v534 = 0;
          v535 = *(_QWORD *)(v80 + 40);
          do
          {
            if (v535)
            {
              v536 = *(_QWORD **)(v80 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v80 + 32);
              sub_20AEC01D0(v536, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v535 = *(_QWORD *)(v80 + 40) + 1;
            *(_QWORD *)(v80 + 40) = v535;
            v534 += 2;
          }
          while (2 * v532 != v534);
          v526 += 2 * v525;
          ++v533;
        }
        while (v533 != v524 - 1);
LABEL_793:
        if ((_DWORD)v532 && !v526)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2039:
            abort();
          }
          v526 = 0;
        }
      }
      else
      {
        v526 += (2 * (v524 - 2) + 2) * v525;
      }
      v1115 = (4 * v81);
      v1116 = v526;
      sub_20B513184(v80, &v1115);
LABEL_1884:
      v1041 = v1114;
      v1114 = 0;
      if (v1041)
        (*(void (**)(uint64_t))(*(_QWORD *)v1041 + 8))(v1041);
      v484 = v1102;
      if (!v1102)
        return;
      v1042 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1042);
      while (__stlxr(v486 - 1, v1042));
      goto LABEL_2025;
    case 15:
      sub_20B376AB4(a3, (uint64_t)&v1101);
      v397 = *a2;
      v398 = v1111;
      v399 = v1101;
      if (!v1101)
        goto LABEL_1589;
      v400 = v1102;
      if (v1102)
      {
        v401 = (unint64_t *)&v1102->__shared_owners_;
        do
          v402 = __ldxr(v401);
        while (__stxr(v402 + 1, v401));
        do
          v403 = __ldaxr(v401);
        while (__stlxr(v403 - 1, v401));
        if (!v403)
        {
          ((void (*)(std::__shared_weak_count *))v400->__on_zero_shared)(v400);
          std::__shared_weak_count::__release_weak(v400);
        }
        v399 = v1101;
        v404 = v1102;
        if (v1102)
        {
          v405 = (unint64_t *)&v1102->__shared_owners_;
          do
            v406 = __ldxr(v405);
          while (__stxr(v406 + 1, v405));
          do
            v407 = __ldaxr(v405);
          while (__stlxr(v407 - 1, v405));
          if (!v407)
          {
            ((void (*)(std::__shared_weak_count *))v404->__on_zero_shared)(v404);
            std::__shared_weak_count::__release_weak(v404);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v399 + 96))(&v1115, v399, 0);
      else
LABEL_1589:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1780;
      if (!v1105)
        goto LABEL_1780;
      v911 = v1106;
      if (!v1106)
        goto LABEL_1780;
      v912 = v1110;
      v913 = v1103;
      if (v1112 && v1103)
      {
        v914 = v1101;
        v915 = v1102;
        if (v1102)
        {
          v916 = (unint64_t *)&v1102->__shared_owners_;
          do
            v917 = __ldxr(v916);
          while (__stxr(v917 + 1, v916));
          do
            v918 = __ldaxr(v916);
          while (__stlxr(v918 - 1, v916));
          if (!v918)
          {
            ((void (*)(std::__shared_weak_count *))v915->__on_zero_shared)(v915);
            std::__shared_weak_count::__release_weak(v915);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v914 + 88))(v914, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v913 = v1103;
      }
      v1098 = (4 * v398);
      if (v911 == 1)
        goto LABEL_1612;
      if (!(4 * v398))
        goto LABEL_1780;
      v919 = 0;
      do
      {
        if (!v913
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1615;
        }
        v920 = 0;
        v921 = *(_QWORD *)(v397 + 40);
        do
        {
          if (v921)
          {
            v922 = *(_QWORD **)(v397 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v397 + 32);
            sub_20AEC01D0(v922, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v397 + 24) + *(_QWORD *)(**(_QWORD **)(v397 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v913[v920];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v921 = *(_QWORD *)(v397 + 40) + 1;
          *(_QWORD *)(v397 + 40) = v921;
          v920 += 2;
        }
        while (2 * v1098 != v920);
        v913 += 2 * v912;
        ++v919;
      }
      while (v919 != v911 - 1);
LABEL_1612:
      if (!(_DWORD)v1098 || v913)
      {
        if (!(_DWORD)v1098)
          goto LABEL_1780;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1615:
        abort();
      }
      v1017 = *(_QWORD *)(v397 + 40);
      v1018 = 2 * v1098;
      do
      {
        if (v1017)
        {
          v1019 = *(_QWORD **)(v397 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v397 + 32);
          sub_20AEC01D0(v1019, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v397 + 24) + *(_QWORD *)(**(_QWORD **)(v397 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v913;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v1017 = *(_QWORD *)(v397 + 40) + 1;
        *(_QWORD *)(v397 + 40) = v1017;
        v913 += 2;
        v1018 -= 2;
      }
      while (v1018);
LABEL_1780:
      v1022 = v1115;
      v1115 = 0;
      if (v1022)
        (*(void (**)(uint64_t))(*(_QWORD *)v1022 + 8))(v1022);
      v484 = v1102;
      if (!v1102)
        return;
      v1023 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1023);
      while (__stlxr(v486 - 1, v1023));
      goto LABEL_2025;
    case 16:
      sub_20B3770EC(a3, (uint64_t)&v1101);
      v289 = *a2;
      v290 = v1111;
      v291 = v1101;
      if (!v1101)
        goto LABEL_1283;
      v292 = v1102;
      if (v1102)
      {
        v293 = (unint64_t *)&v1102->__shared_owners_;
        do
          v294 = __ldxr(v293);
        while (__stxr(v294 + 1, v293));
        do
          v295 = __ldaxr(v293);
        while (__stlxr(v295 - 1, v293));
        if (!v295)
        {
          ((void (*)(std::__shared_weak_count *))v292->__on_zero_shared)(v292);
          std::__shared_weak_count::__release_weak(v292);
        }
        v291 = v1101;
        v296 = v1102;
        if (v1102)
        {
          v297 = (unint64_t *)&v1102->__shared_owners_;
          do
            v298 = __ldxr(v297);
          while (__stxr(v298 + 1, v297));
          do
            v299 = __ldaxr(v297);
          while (__stlxr(v299 - 1, v297));
          if (!v299)
          {
            ((void (*)(std::__shared_weak_count *))v296->__on_zero_shared)(v296);
            std::__shared_weak_count::__release_weak(v296);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v291 + 96))(&v1114, v291, 0);
      else
LABEL_1283:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1980;
      if (!v1105)
        goto LABEL_1980;
      v770 = v1106;
      if (!v1106)
        goto LABEL_1980;
      v771 = v1110;
      v772 = v1103;
      if (v1112 && v1103)
      {
        v773 = v1101;
        v774 = v1102;
        if (v1102)
        {
          v775 = (unint64_t *)&v1102->__shared_owners_;
          do
            v776 = __ldxr(v775);
          while (__stxr(v776 + 1, v775));
          do
            v777 = __ldaxr(v775);
          while (__stlxr(v777 - 1, v775));
          if (!v777)
          {
            ((void (*)(std::__shared_weak_count *))v774->__on_zero_shared)(v774);
            std::__shared_weak_count::__release_weak(v774);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v773 + 88))(v773, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v772 = v1103;
      }
      v778 = (4 * v290);
      if (v770 == 1)
        goto LABEL_1306;
      if ((_DWORD)v778)
      {
        v779 = 0;
        do
        {
          if (!v772
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2052;
          }
          v780 = 0;
          v781 = *(_QWORD *)(v289 + 40);
          do
          {
            if (v781)
            {
              v782 = *(_QWORD **)(v289 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v289 + 32);
              sub_20AEC01D0(v782, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v289 + 24) + *(_QWORD *)(**(_QWORD **)(v289 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v781 = *(_QWORD *)(v289 + 40) + 1;
            *(_QWORD *)(v289 + 40) = v781;
            v780 += 4;
          }
          while (4 * v778 != v780);
          v772 += 4 * v771;
          ++v779;
        }
        while (v779 != v770 - 1);
LABEL_1306:
        if ((_DWORD)v778 && !v772)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2052:
            abort();
          }
          v772 = 0;
        }
      }
      else
      {
        v772 += (4 * (v770 - 2) + 4) * v771;
      }
      v1115 = v778;
      v1116 = v772;
      sub_20B513208(v289, &v1115);
LABEL_1980:
      v1065 = v1114;
      v1114 = 0;
      if (v1065)
        (*(void (**)(uint64_t))(*(_QWORD *)v1065 + 8))(v1065);
      v484 = v1102;
      if (!v1102)
        return;
      v1066 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1066);
      while (__stlxr(v486 - 1, v1066));
      goto LABEL_2025;
    case 17:
      sub_20B377724(a3, (uint64_t)&v1101);
      v408 = *a2;
      v409 = v1111;
      v410 = v1101;
      if (!v1101)
        goto LABEL_1616;
      v411 = v1102;
      if (v1102)
      {
        v412 = (unint64_t *)&v1102->__shared_owners_;
        do
          v413 = __ldxr(v412);
        while (__stxr(v413 + 1, v412));
        do
          v414 = __ldaxr(v412);
        while (__stlxr(v414 - 1, v412));
        if (!v414)
        {
          ((void (*)(std::__shared_weak_count *))v411->__on_zero_shared)(v411);
          std::__shared_weak_count::__release_weak(v411);
        }
        v410 = v1101;
        v415 = v1102;
        if (v1102)
        {
          v416 = (unint64_t *)&v1102->__shared_owners_;
          do
            v417 = __ldxr(v416);
          while (__stxr(v417 + 1, v416));
          do
            v418 = __ldaxr(v416);
          while (__stlxr(v418 - 1, v416));
          if (!v418)
          {
            ((void (*)(std::__shared_weak_count *))v415->__on_zero_shared)(v415);
            std::__shared_weak_count::__release_weak(v415);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v410 + 96))(&v1115, v410, 0);
      else
LABEL_1616:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1847;
      if (!v1105)
        goto LABEL_1847;
      v925 = v1106;
      if (!v1106)
        goto LABEL_1847;
      v926 = v1110;
      v927 = v1103;
      if (v1112 && v1103)
      {
        v928 = v1101;
        v929 = v1102;
        if (v1102)
        {
          v930 = (unint64_t *)&v1102->__shared_owners_;
          do
            v931 = __ldxr(v930);
          while (__stxr(v931 + 1, v930));
          do
            v932 = __ldaxr(v930);
          while (__stlxr(v932 - 1, v930));
          if (!v932)
          {
            ((void (*)(std::__shared_weak_count *))v929->__on_zero_shared)(v929);
            std::__shared_weak_count::__release_weak(v929);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v928 + 88))(v928, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v927 = v1103;
      }
      v933 = (3 * v409);
      if (v925 == 1)
      {
        v1099 = v409;
LABEL_1841:
        if (v1099 && !v927)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2036;
          }
          v927 = 0;
        }
        if (v1099)
        {
          do
          {
            sub_20B512EB0(v408, v927++);
            --v933;
          }
          while (v933);
        }
      }
      else if (v409)
      {
        v1099 = v409;
        v934 = 0;
        while (v927
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v935 = 0;
          do
            sub_20B512EB0(v408, &v927[v935++]);
          while (v933 != v935);
          v927 += v926;
          if (++v934 == v925 - 1)
            goto LABEL_1841;
        }
LABEL_2036:
        abort();
      }
LABEL_1847:
      v1033 = v1115;
      v1115 = 0;
      if (v1033)
        (*(void (**)(uint64_t))(*(_QWORD *)v1033 + 8))(v1033);
      v484 = v1102;
      if (!v1102)
        return;
      v1034 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1034);
      while (__stlxr(v486 - 1, v1034));
      goto LABEL_2025;
    case 18:
      sub_20B377D58(a3, (uint64_t)&v1101);
      v113 = *a2;
      v114 = v1111;
      v115 = v1101;
      if (!v1101)
        goto LABEL_857;
      v116 = v1102;
      if (v1102)
      {
        v117 = (unint64_t *)&v1102->__shared_owners_;
        do
          v118 = __ldxr(v117);
        while (__stxr(v118 + 1, v117));
        do
          v119 = __ldaxr(v117);
        while (__stlxr(v119 - 1, v117));
        if (!v119)
        {
          ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
          std::__shared_weak_count::__release_weak(v116);
        }
        v115 = v1101;
        v120 = v1102;
        if (v1102)
        {
          v121 = (unint64_t *)&v1102->__shared_owners_;
          do
            v122 = __ldxr(v121);
          while (__stxr(v122 + 1, v121));
          do
            v123 = __ldaxr(v121);
          while (__stlxr(v123 - 1, v121));
          if (!v123)
          {
            ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
            std::__shared_weak_count::__release_weak(v120);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v115 + 96))(&v1114, v115, 0);
      else
LABEL_857:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1900;
      if (!v1105)
        goto LABEL_1900;
      v563 = v1106;
      if (!v1106)
        goto LABEL_1900;
      v564 = v1110;
      v565 = v1103;
      if (v1112 && v1103)
      {
        v566 = v1101;
        v567 = v1102;
        if (v1102)
        {
          v568 = (unint64_t *)&v1102->__shared_owners_;
          do
            v569 = __ldxr(v568);
          while (__stxr(v569 + 1, v568));
          do
            v570 = __ldaxr(v568);
          while (__stlxr(v570 - 1, v568));
          if (!v570)
          {
            ((void (*)(std::__shared_weak_count *))v567->__on_zero_shared)(v567);
            std::__shared_weak_count::__release_weak(v567);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v566 + 88))(v566, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v565 = v1103;
      }
      if (v563 == 1)
      {
        v1080 = v114;
LABEL_1808:
        if (v1080 && !v565)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2047;
          }
          v565 = 0;
        }
      }
      else
      {
        if (v114)
        {
          v1080 = v114;
          v571 = 0;
          while (v565
               || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v572 = 0;
            v573 = *(_QWORD *)(v113 + 40);
            do
            {
              if (v573)
              {
                v574 = *(_QWORD **)(v113 + 24);
                LOBYTE(v1115) = *(_BYTE *)(v113 + 32);
                sub_20AEC01D0(v574, (uint64_t)&v1115, 1);
              }
              std::ostream::operator<<();
              v573 = *(_QWORD *)(v113 + 40) + 1;
              *(_QWORD *)(v113 + 40) = v573;
              v572 += 2;
            }
            while (2 * (3 * v114) != v572);
            v565 += 2 * v564;
            if (++v571 == v563 - 1)
              goto LABEL_1808;
          }
LABEL_2047:
          abort();
        }
        v565 += (2 * (v563 - 2) + 2) * v564;
      }
      v1115 = (3 * v114);
      v1116 = v565;
      sub_20B513184(v113, &v1115);
LABEL_1900:
      v1045 = v1114;
      v1114 = 0;
      if (v1045)
        (*(void (**)(uint64_t))(*(_QWORD *)v1045 + 8))(v1045);
      v484 = v1102;
      if (!v1102)
        return;
      v1046 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1046);
      while (__stlxr(v486 - 1, v1046));
      goto LABEL_2025;
    case 19:
      sub_20B378390(a3, (uint64_t)&v1101);
      v26 = *a2;
      v1086 = v1111;
      v27 = v1101;
      if (!v1101)
        goto LABEL_629;
      v28 = v1102;
      if (v1102)
      {
        v29 = (unint64_t *)&v1102->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
        v27 = v1101;
        v32 = v1102;
        if (v1102)
        {
          v33 = (unint64_t *)&v1102->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v27 + 96))(&v1115, v27, 0);
      else
LABEL_629:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1703;
      if (!v1105)
        goto LABEL_1703;
      v458 = v1106;
      if (!v1106)
        goto LABEL_1703;
      v459 = v1110;
      v460 = v1103;
      if (v1112 && v1103)
      {
        v461 = v1101;
        v462 = v1102;
        if (v1102)
        {
          v463 = (unint64_t *)&v1102->__shared_owners_;
          do
            v464 = __ldxr(v463);
          while (__stxr(v464 + 1, v463));
          do
            v465 = __ldaxr(v463);
          while (__stlxr(v465 - 1, v463));
          if (!v465)
          {
            ((void (*)(std::__shared_weak_count *))v462->__on_zero_shared)(v462);
            std::__shared_weak_count::__release_weak(v462);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v461 + 88))(v461, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v460 = v1103;
      }
      v1077 = (3 * v1086);
      if (v458 == 1)
        goto LABEL_652;
      if (!v1086)
        goto LABEL_1703;
      v466 = 0;
      do
      {
        if (!v460
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_655;
        }
        v467 = 0;
        v468 = *(_QWORD *)(v26 + 40);
        do
        {
          if (v468)
          {
            v469 = *(_QWORD **)(v26 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v26 + 32);
            sub_20AEC01D0(v469, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v26 + 24) + *(_QWORD *)(**(_QWORD **)(v26 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v460[v467];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v468 = *(_QWORD *)(v26 + 40) + 1;
          *(_QWORD *)(v26 + 40) = v468;
          v467 += 2;
        }
        while (2 * v1077 != v467);
        v460 += 2 * v459;
        ++v466;
      }
      while (v466 != v458 - 1);
LABEL_652:
      if (!v1086 || v460)
      {
        if (!v1086)
          goto LABEL_1703;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_655:
        abort();
      }
      v968 = *(_QWORD *)(v26 + 40);
      v969 = 2 * v1077;
      do
      {
        if (v968)
        {
          v970 = *(_QWORD **)(v26 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v26 + 32);
          sub_20AEC01D0(v970, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v26 + 24) + *(_QWORD *)(**(_QWORD **)(v26 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v460;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v968 = *(_QWORD *)(v26 + 40) + 1;
        *(_QWORD *)(v26 + 40) = v968;
        v460 += 2;
        v969 -= 2;
      }
      while (v969);
LABEL_1703:
      v973 = v1115;
      v1115 = 0;
      if (v973)
        (*(void (**)(uint64_t))(*(_QWORD *)v973 + 8))(v973);
      v484 = v1102;
      if (!v1102)
        return;
      v974 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v974);
      while (__stlxr(v486 - 1, v974));
      goto LABEL_2025;
    case 20:
      sub_20B3789C8(a3, (uint64_t)&v1101);
      v375 = *a2;
      v376 = v1111;
      v377 = v1101;
      if (!v1101)
        goto LABEL_1538;
      v378 = v1102;
      if (v1102)
      {
        v379 = (unint64_t *)&v1102->__shared_owners_;
        do
          v380 = __ldxr(v379);
        while (__stxr(v380 + 1, v379));
        do
          v381 = __ldaxr(v379);
        while (__stlxr(v381 - 1, v379));
        if (!v381)
        {
          ((void (*)(std::__shared_weak_count *))v378->__on_zero_shared)(v378);
          std::__shared_weak_count::__release_weak(v378);
        }
        v377 = v1101;
        v382 = v1102;
        if (v1102)
        {
          v383 = (unint64_t *)&v1102->__shared_owners_;
          do
            v384 = __ldxr(v383);
          while (__stxr(v384 + 1, v383));
          do
            v385 = __ldaxr(v383);
          while (__stlxr(v385 - 1, v383));
          if (!v385)
          {
            ((void (*)(std::__shared_weak_count *))v382->__on_zero_shared)(v382);
            std::__shared_weak_count::__release_weak(v382);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v377 + 96))(&v1114, v377, 0);
      else
LABEL_1538:
        v1114 = 0;
      if (!v1104)
        goto LABEL_2012;
      if (!v1105)
        goto LABEL_2012;
      v886 = v1106;
      if (!v1106)
        goto LABEL_2012;
      v887 = v1110;
      v888 = v1103;
      if (v1112 && v1103)
      {
        v889 = v1101;
        v890 = v1102;
        if (v1102)
        {
          v891 = (unint64_t *)&v1102->__shared_owners_;
          do
            v892 = __ldxr(v891);
          while (__stxr(v892 + 1, v891));
          do
            v893 = __ldaxr(v891);
          while (__stlxr(v893 - 1, v891));
          if (!v893)
          {
            ((void (*)(std::__shared_weak_count *))v890->__on_zero_shared)(v890);
            std::__shared_weak_count::__release_weak(v890);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v889 + 88))(v889, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v888 = v1103;
      }
      if (v886 == 1)
      {
        v1084 = v376;
LABEL_1836:
        if (v1084 && !v888)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2057;
          }
          v888 = 0;
        }
      }
      else
      {
        if (v376)
        {
          v1084 = v376;
          v894 = 0;
          while (v888
               || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v895 = 0;
            v896 = *(_QWORD *)(v375 + 40);
            do
            {
              if (v896)
              {
                v897 = *(_QWORD **)(v375 + 24);
                LOBYTE(v1115) = *(_BYTE *)(v375 + 32);
                sub_20AEC01D0(v897, (uint64_t)&v1115, 1);
              }
              *(_QWORD *)(*(_QWORD *)(v375 + 24) + *(_QWORD *)(**(_QWORD **)(v375 + 24) - 24) + 16) = 9;
              std::ostream::operator<<();
              v896 = *(_QWORD *)(v375 + 40) + 1;
              *(_QWORD *)(v375 + 40) = v896;
              v895 += 4;
            }
            while (4 * (3 * v376) != v895);
            v888 += 4 * v887;
            if (++v894 == v886 - 1)
              goto LABEL_1836;
          }
LABEL_2057:
          abort();
        }
        v888 += (4 * (v886 - 2) + 4) * v887;
      }
      v1115 = (3 * v376);
      v1116 = v888;
      sub_20B513208(v375, &v1115);
LABEL_2012:
      v1073 = v1114;
      v1114 = 0;
      if (v1073)
        (*(void (**)(uint64_t))(*(_QWORD *)v1073 + 8))(v1073);
      v484 = v1102;
      if (!v1102)
        return;
      v1074 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1074);
      while (__stlxr(v486 - 1, v1074));
      goto LABEL_2025;
    case 21:
      sub_20B2D7B44(a3, (uint64_t)&v1101);
      v429 = *a2;
      v430 = v1111;
      v431 = v1101;
      if (!v1101)
        goto LABEL_1665;
      v432 = v1102;
      if (v1102)
      {
        v433 = (unint64_t *)&v1102->__shared_owners_;
        do
          v434 = __ldxr(v433);
        while (__stxr(v434 + 1, v433));
        do
          v435 = __ldaxr(v433);
        while (__stlxr(v435 - 1, v433));
        if (!v435)
        {
          ((void (*)(std::__shared_weak_count *))v432->__on_zero_shared)(v432);
          std::__shared_weak_count::__release_weak(v432);
        }
        v431 = v1101;
        v436 = v1102;
        if (v1102)
        {
          v437 = (unint64_t *)&v1102->__shared_owners_;
          do
            v438 = __ldxr(v437);
          while (__stxr(v438 + 1, v437));
          do
            v439 = __ldaxr(v437);
          while (__stlxr(v439 - 1, v437));
          if (!v439)
          {
            ((void (*)(std::__shared_weak_count *))v436->__on_zero_shared)(v436);
            std::__shared_weak_count::__release_weak(v436);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v431 + 96))(&v1115, v431, 0);
      else
LABEL_1665:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1860;
      if (!v1105)
        goto LABEL_1860;
      v950 = v1106;
      if (!v1106)
        goto LABEL_1860;
      v951 = v1110;
      v952 = v1103;
      if (v1112 && v1103)
      {
        v953 = v1101;
        v954 = v1102;
        if (v1102)
        {
          v955 = (unint64_t *)&v1102->__shared_owners_;
          do
            v956 = __ldxr(v955);
          while (__stxr(v956 + 1, v955));
          do
            v957 = __ldaxr(v955);
          while (__stlxr(v957 - 1, v955));
          if (!v957)
          {
            ((void (*)(std::__shared_weak_count *))v954->__on_zero_shared)(v954);
            std::__shared_weak_count::__release_weak(v954);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v953 + 88))(v953, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v952 = v1103;
      }
      v958 = (3 * v430);
      if (v950 == 1)
      {
        v1100 = v430;
LABEL_1854:
        if (v1100 && !v952)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2037;
          }
          v952 = 0;
        }
        if (v1100)
        {
          do
          {
            sub_20B512EB0(v429, v952++);
            --v958;
          }
          while (v958);
        }
      }
      else if (v430)
      {
        v1100 = v430;
        v959 = 0;
        while (v952
             || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v960 = 0;
          do
            sub_20B512EB0(v429, &v952[v960++]);
          while (v958 != v960);
          v952 += v951;
          if (++v959 == v950 - 1)
            goto LABEL_1854;
        }
LABEL_2037:
        abort();
      }
LABEL_1860:
      v1035 = v1115;
      v1115 = 0;
      if (v1035)
        (*(void (**)(uint64_t))(*(_QWORD *)v1035 + 8))(v1035);
      v484 = v1102;
      if (!v1102)
        return;
      v1036 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1036);
      while (__stlxr(v486 - 1, v1036));
      goto LABEL_2025;
    case 22:
      sub_20B379000(a3, (uint64_t)&v1101);
      v146 = *a2;
      v147 = v1111;
      v148 = v1101;
      if (!v1101)
        goto LABEL_935;
      v149 = v1102;
      if (v1102)
      {
        v150 = (unint64_t *)&v1102->__shared_owners_;
        do
          v151 = __ldxr(v150);
        while (__stxr(v151 + 1, v150));
        do
          v152 = __ldaxr(v150);
        while (__stlxr(v152 - 1, v150));
        if (!v152)
        {
          ((void (*)(std::__shared_weak_count *))v149->__on_zero_shared)(v149);
          std::__shared_weak_count::__release_weak(v149);
        }
        v148 = v1101;
        v153 = v1102;
        if (v1102)
        {
          v154 = (unint64_t *)&v1102->__shared_owners_;
          do
            v155 = __ldxr(v154);
          while (__stxr(v155 + 1, v154));
          do
            v156 = __ldaxr(v154);
          while (__stlxr(v156 - 1, v154));
          if (!v156)
          {
            ((void (*)(std::__shared_weak_count *))v153->__on_zero_shared)(v153);
            std::__shared_weak_count::__release_weak(v153);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v148 + 96))(&v1114, v148, 0);
      else
LABEL_935:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1908;
      if (!v1105)
        goto LABEL_1908;
      v603 = v1106;
      if (!v1106)
        goto LABEL_1908;
      v604 = v1110;
      v605 = v1103;
      if (v1112 && v1103)
      {
        v606 = v1101;
        v607 = v1102;
        if (v1102)
        {
          v608 = (unint64_t *)&v1102->__shared_owners_;
          do
            v609 = __ldxr(v608);
          while (__stxr(v609 + 1, v608));
          do
            v610 = __ldaxr(v608);
          while (__stlxr(v610 - 1, v608));
          if (!v610)
          {
            ((void (*)(std::__shared_weak_count *))v607->__on_zero_shared)(v607);
            std::__shared_weak_count::__release_weak(v607);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v606 + 88))(v606, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v605 = v1103;
      }
      if (v603 == 1)
      {
        v1081 = v147;
LABEL_1813:
        if (v1081 && !v605)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2048;
          }
          v605 = 0;
        }
      }
      else
      {
        if (v147)
        {
          v1081 = v147;
          v611 = 0;
          while (v605
               || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v612 = 0;
            v613 = *(_QWORD *)(v146 + 40);
            do
            {
              if (v613)
              {
                v614 = *(_QWORD **)(v146 + 24);
                LOBYTE(v1115) = *(_BYTE *)(v146 + 32);
                sub_20AEC01D0(v614, (uint64_t)&v1115, 1);
              }
              std::ostream::operator<<();
              v613 = *(_QWORD *)(v146 + 40) + 1;
              *(_QWORD *)(v146 + 40) = v613;
              v612 += 2;
            }
            while (2 * (3 * v147) != v612);
            v605 += 2 * v604;
            if (++v611 == v603 - 1)
              goto LABEL_1813;
          }
LABEL_2048:
          abort();
        }
        v605 += (2 * (v603 - 2) + 2) * v604;
      }
      v1115 = (3 * v147);
      v1116 = v605;
      sub_20B513184(v146, &v1115);
LABEL_1908:
      v1047 = v1114;
      v1114 = 0;
      if (v1047)
        (*(void (**)(uint64_t))(*(_QWORD *)v1047 + 8))(v1047);
      v484 = v1102;
      if (!v1102)
        return;
      v1048 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1048);
      while (__stlxr(v486 - 1, v1048));
      goto LABEL_2025;
    case 23:
      sub_20B379638(a3, (uint64_t)&v1101);
      v419 = *a2;
      v1089 = v1111;
      v420 = v1101;
      if (!v1101)
        goto LABEL_1638;
      v421 = v1102;
      if (v1102)
      {
        v422 = (unint64_t *)&v1102->__shared_owners_;
        do
          v423 = __ldxr(v422);
        while (__stxr(v423 + 1, v422));
        do
          v424 = __ldaxr(v422);
        while (__stlxr(v424 - 1, v422));
        if (!v424)
        {
          ((void (*)(std::__shared_weak_count *))v421->__on_zero_shared)(v421);
          std::__shared_weak_count::__release_weak(v421);
        }
        v420 = v1101;
        v425 = v1102;
        if (v1102)
        {
          v426 = (unint64_t *)&v1102->__shared_owners_;
          do
            v427 = __ldxr(v426);
          while (__stxr(v427 + 1, v426));
          do
            v428 = __ldaxr(v426);
          while (__stlxr(v428 - 1, v426));
          if (!v428)
          {
            ((void (*)(std::__shared_weak_count *))v425->__on_zero_shared)(v425);
            std::__shared_weak_count::__release_weak(v425);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v420 + 96))(&v1115, v420, 0);
      else
LABEL_1638:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1791;
      if (!v1105)
        goto LABEL_1791;
      v936 = v1106;
      if (!v1106)
        goto LABEL_1791;
      v937 = v1110;
      v938 = v1103;
      if (v1112 && v1103)
      {
        v939 = v1101;
        v940 = v1102;
        if (v1102)
        {
          v941 = (unint64_t *)&v1102->__shared_owners_;
          do
            v942 = __ldxr(v941);
          while (__stxr(v942 + 1, v941));
          do
            v943 = __ldaxr(v941);
          while (__stlxr(v943 - 1, v941));
          if (!v943)
          {
            ((void (*)(std::__shared_weak_count *))v940->__on_zero_shared)(v940);
            std::__shared_weak_count::__release_weak(v940);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v939 + 88))(v939, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v938 = v1103;
      }
      v1085 = (3 * v1089);
      if (v936 == 1)
        goto LABEL_1661;
      if (!v1089)
        goto LABEL_1791;
      v944 = 0;
      do
      {
        if (!v938
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1664;
        }
        v945 = 0;
        v946 = *(_QWORD *)(v419 + 40);
        do
        {
          if (v946)
          {
            v947 = *(_QWORD **)(v419 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v419 + 32);
            sub_20AEC01D0(v947, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v419 + 24) + *(_QWORD *)(**(_QWORD **)(v419 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v938[v945];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v946 = *(_QWORD *)(v419 + 40) + 1;
          *(_QWORD *)(v419 + 40) = v946;
          v945 += 2;
        }
        while (2 * v1085 != v945);
        v938 += 2 * v937;
        ++v944;
      }
      while (v944 != v936 - 1);
LABEL_1661:
      if (!v1089 || v938)
      {
        if (!v1089)
          goto LABEL_1791;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1664:
        abort();
      }
      v1024 = *(_QWORD *)(v419 + 40);
      v1025 = 2 * v1085;
      do
      {
        if (v1024)
        {
          v1026 = *(_QWORD **)(v419 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v419 + 32);
          sub_20AEC01D0(v1026, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v419 + 24) + *(_QWORD *)(**(_QWORD **)(v419 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v938;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v1024 = *(_QWORD *)(v419 + 40) + 1;
        *(_QWORD *)(v419 + 40) = v1024;
        v938 += 2;
        v1025 -= 2;
      }
      while (v1025);
LABEL_1791:
      v1029 = v1115;
      v1115 = 0;
      if (v1029)
        (*(void (**)(uint64_t))(*(_QWORD *)v1029 + 8))(v1029);
      v484 = v1102;
      if (!v1102)
        return;
      v1030 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1030);
      while (__stlxr(v486 - 1, v1030));
      goto LABEL_2025;
    case 24:
      sub_20B379C70(a3, (uint64_t)&v1101);
      v69 = *a2;
      v70 = v1111;
      v71 = v1101;
      if (!v1101)
        goto LABEL_746;
      v72 = v1102;
      if (v1102)
      {
        v73 = (unint64_t *)&v1102->__shared_owners_;
        do
          v74 = __ldxr(v73);
        while (__stxr(v74 + 1, v73));
        do
          v75 = __ldaxr(v73);
        while (__stlxr(v75 - 1, v73));
        if (!v75)
        {
          ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
          std::__shared_weak_count::__release_weak(v72);
        }
        v71 = v1101;
        v76 = v1102;
        if (v1102)
        {
          v77 = (unint64_t *)&v1102->__shared_owners_;
          do
            v78 = __ldxr(v77);
          while (__stxr(v78 + 1, v77));
          do
            v79 = __ldaxr(v77);
          while (__stlxr(v79 - 1, v77));
          if (!v79)
          {
            ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
            std::__shared_weak_count::__release_weak(v76);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v71 + 96))(&v1114, v71, 0);
      else
LABEL_746:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1876;
      if (!v1105)
        goto LABEL_1876;
      v512 = v1106;
      if (!v1106)
        goto LABEL_1876;
      v513 = v1110;
      v514 = v1103;
      if (v1112 && v1103)
      {
        v515 = v1101;
        v516 = v1102;
        if (v1102)
        {
          v517 = (unint64_t *)&v1102->__shared_owners_;
          do
            v518 = __ldxr(v517);
          while (__stxr(v518 + 1, v517));
          do
            v519 = __ldaxr(v517);
          while (__stlxr(v519 - 1, v517));
          if (!v519)
          {
            ((void (*)(std::__shared_weak_count *))v516->__on_zero_shared)(v516);
            std::__shared_weak_count::__release_weak(v516);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v515 + 88))(v515, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v514 = v1103;
      }
      if (v512 == 1)
      {
        v1079 = v70;
LABEL_1803:
        if (v1079 && !v514)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2046;
          }
          v514 = 0;
        }
      }
      else
      {
        if (v70)
        {
          v1079 = v70;
          v520 = 0;
          while (v514
               || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            v521 = 0;
            v522 = *(_QWORD *)(v69 + 40);
            do
            {
              if (v522)
              {
                v523 = *(_QWORD **)(v69 + 24);
                LOBYTE(v1115) = *(_BYTE *)(v69 + 32);
                sub_20AEC01D0(v523, (uint64_t)&v1115, 1);
              }
              *(_QWORD *)(*(_QWORD *)(v69 + 24) + *(_QWORD *)(**(_QWORD **)(v69 + 24) - 24) + 16) = 9;
              std::ostream::operator<<();
              v522 = *(_QWORD *)(v69 + 40) + 1;
              *(_QWORD *)(v69 + 40) = v522;
              v521 += 4;
            }
            while (4 * (3 * v70) != v521);
            v514 += 4 * v513;
            if (++v520 == v512 - 1)
              goto LABEL_1803;
          }
LABEL_2046:
          abort();
        }
        v514 += (4 * (v512 - 2) + 4) * v513;
      }
      v1115 = (3 * v70);
      v1116 = v514;
      sub_20B513208(v69, &v1115);
LABEL_1876:
      v1039 = v1114;
      v1114 = 0;
      if (v1039)
        (*(void (**)(uint64_t))(*(_QWORD *)v1039 + 8))(v1039);
      v484 = v1102;
      if (v1102)
      {
        v1040 = (unint64_t *)&v1102->__shared_owners_;
        do
          v486 = __ldaxr(v1040);
        while (__stlxr(v486 - 1, v1040));
LABEL_2025:
        if (!v486)
        {
          ((void (*)(std::__shared_weak_count *))v484->__on_zero_shared)(v484);
          std::__shared_weak_count::__release_weak(v484);
        }
      }
      return;
    case 25:
      sub_20B37A2A8(a3, (uint64_t)&v1101);
      v36 = *a2;
      v37 = v1111;
      v38 = v1101;
      if (!v1101)
        goto LABEL_656;
      v39 = v1102;
      if (v1102)
      {
        v40 = (unint64_t *)&v1102->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
        }
        v38 = v1101;
        v43 = v1102;
        if (v1102)
        {
          v44 = (unint64_t *)&v1102->__shared_owners_;
          do
            v45 = __ldxr(v44);
          while (__stxr(v45 + 1, v44));
          do
            v46 = __ldaxr(v44);
          while (__stlxr(v46 - 1, v44));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
            std::__shared_weak_count::__release_weak(v43);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v38 + 96))(&v1115, v38, 0);
      else
LABEL_656:
        v1115 = 0;
      if (!v1104)
        goto LABEL_683;
      if (!v1105)
        goto LABEL_683;
      v472 = v1106;
      if (!v1106)
        goto LABEL_683;
      v473 = v1110;
      v474 = v1103;
      if (v1112 && v1103)
      {
        v475 = v1101;
        v476 = v1102;
        if (v1102)
        {
          v477 = (unint64_t *)&v1102->__shared_owners_;
          do
            v478 = __ldxr(v477);
          while (__stxr(v478 + 1, v477));
          do
            v479 = __ldaxr(v477);
          while (__stlxr(v479 - 1, v477));
          if (!v479)
          {
            ((void (*)(std::__shared_weak_count *))v476->__on_zero_shared)(v476);
            std::__shared_weak_count::__release_weak(v476);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v475 + 88))(v475, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v474 = v1103;
      }
      v480 = (4 * v37);
      if (v472 == 1)
        goto LABEL_677;
      if (!(_DWORD)v480)
        goto LABEL_683;
      v481 = 0;
      do
      {
        if (!v474
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2028;
        }
        for (m = 0; m != v480; ++m)
          sub_20B512EB0(v36, &v474[m]);
        v474 += v473;
        ++v481;
      }
      while (v481 != v472 - 1);
LABEL_677:
      if ((_DWORD)v480 && !v474)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2028:
          abort();
        }
        v474 = 0;
      }
      if ((_DWORD)v480)
      {
        do
        {
          sub_20B512EB0(v36, v474++);
          --v480;
        }
        while (v480);
      }
LABEL_683:
      v483 = v1115;
      v1115 = 0;
      if (v483)
        (*(void (**)(uint64_t))(*(_QWORD *)v483 + 8))(v483);
      v484 = v1102;
      if (!v1102)
        return;
      v485 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v485);
      while (__stlxr(v486 - 1, v485));
      goto LABEL_2025;
    case 26:
      sub_20B37A8DC(a3, (uint64_t)&v1101);
      v157 = *a2;
      v158 = v1111;
      v159 = v1101;
      if (!v1101)
        goto LABEL_959;
      v160 = v1102;
      if (v1102)
      {
        v161 = (unint64_t *)&v1102->__shared_owners_;
        do
          v162 = __ldxr(v161);
        while (__stxr(v162 + 1, v161));
        do
          v163 = __ldaxr(v161);
        while (__stlxr(v163 - 1, v161));
        if (!v163)
        {
          ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
          std::__shared_weak_count::__release_weak(v160);
        }
        v159 = v1101;
        v164 = v1102;
        if (v1102)
        {
          v165 = (unint64_t *)&v1102->__shared_owners_;
          do
            v166 = __ldxr(v165);
          while (__stxr(v166 + 1, v165));
          do
            v167 = __ldaxr(v165);
          while (__stlxr(v167 - 1, v165));
          if (!v167)
          {
            ((void (*)(std::__shared_weak_count *))v164->__on_zero_shared)(v164);
            std::__shared_weak_count::__release_weak(v164);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v159 + 96))(&v1114, v159, 0);
      else
LABEL_959:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1916;
      if (!v1105)
        goto LABEL_1916;
      v615 = v1106;
      if (!v1106)
        goto LABEL_1916;
      v616 = v1110;
      v617 = v1103;
      if (v1112 && v1103)
      {
        v618 = v1101;
        v619 = v1102;
        if (v1102)
        {
          v620 = (unint64_t *)&v1102->__shared_owners_;
          do
            v621 = __ldxr(v620);
          while (__stxr(v621 + 1, v620));
          do
            v622 = __ldaxr(v620);
          while (__stlxr(v622 - 1, v620));
          if (!v622)
          {
            ((void (*)(std::__shared_weak_count *))v619->__on_zero_shared)(v619);
            std::__shared_weak_count::__release_weak(v619);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v618 + 88))(v618, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v617 = v1103;
      }
      v623 = (4 * v158);
      if (v615 == 1)
        goto LABEL_982;
      if ((_DWORD)v623)
      {
        v624 = 0;
        do
        {
          if (!v617
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2041;
          }
          v625 = 0;
          v626 = *(_QWORD *)(v157 + 40);
          do
          {
            if (v626)
            {
              v627 = *(_QWORD **)(v157 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v157 + 32);
              sub_20AEC01D0(v627, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v626 = *(_QWORD *)(v157 + 40) + 1;
            *(_QWORD *)(v157 + 40) = v626;
            v625 += 2;
          }
          while (2 * v623 != v625);
          v617 += 2 * v616;
          ++v624;
        }
        while (v624 != v615 - 1);
LABEL_982:
        if ((_DWORD)v623 && !v617)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2041:
            abort();
          }
          v617 = 0;
        }
      }
      else
      {
        v617 += (2 * (v615 - 2) + 2) * v616;
      }
      v1115 = (4 * v158);
      v1116 = v617;
      sub_20B513184(v157, &v1115);
LABEL_1916:
      v1049 = v1114;
      v1114 = 0;
      if (v1049)
        (*(void (**)(uint64_t))(*(_QWORD *)v1049 + 8))(v1049);
      v484 = v1102;
      if (!v1102)
        return;
      v1050 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1050);
      while (__stlxr(v486 - 1, v1050));
      goto LABEL_2025;
    case 27:
      sub_20B37AF14(a3, (uint64_t)&v1101);
      v15 = *a2;
      v16 = v1111;
      v17 = v1101;
      if (!v1101)
        goto LABEL_602;
      v18 = v1102;
      if (v1102)
      {
        v19 = (unint64_t *)&v1102->__shared_owners_;
        do
          v20 = __ldxr(v19);
        while (__stxr(v20 + 1, v19));
        do
          v21 = __ldaxr(v19);
        while (__stlxr(v21 - 1, v19));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
        v17 = v1101;
        v22 = v1102;
        if (v1102)
        {
          v23 = (unint64_t *)&v1102->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
            std::__shared_weak_count::__release_weak(v22);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v17 + 96))(&v1115, v17, 0);
      else
LABEL_602:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1692;
      if (!v1105)
        goto LABEL_1692;
      v440 = v1106;
      if (!v1106)
        goto LABEL_1692;
      v441 = v1110;
      v442 = v1103;
      if (v1112 && v1103)
      {
        v443 = v1101;
        v444 = v1102;
        if (v1102)
        {
          v445 = (unint64_t *)&v1102->__shared_owners_;
          do
            v446 = __ldxr(v445);
          while (__stxr(v446 + 1, v445));
          do
            v447 = __ldaxr(v445);
          while (__stlxr(v447 - 1, v445));
          if (!v447)
          {
            ((void (*)(std::__shared_weak_count *))v444->__on_zero_shared)(v444);
            std::__shared_weak_count::__release_weak(v444);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v443 + 88))(v443, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v442 = v1103;
      }
      v1090 = (4 * v16);
      if (v440 == 1)
        goto LABEL_625;
      if (!(4 * v16))
        goto LABEL_1692;
      v448 = 0;
      do
      {
        if (!v442
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_628;
        }
        v449 = 0;
        v450 = *(_QWORD *)(v15 + 40);
        do
        {
          if (v450)
          {
            v451 = *(_QWORD **)(v15 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v15 + 32);
            sub_20AEC01D0(v451, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v15 + 24) + *(_QWORD *)(**(_QWORD **)(v15 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v442[v449];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v450 = *(_QWORD *)(v15 + 40) + 1;
          *(_QWORD *)(v15 + 40) = v450;
          v449 += 2;
        }
        while (2 * v1090 != v449);
        v442 += 2 * v441;
        ++v448;
      }
      while (v448 != v440 - 1);
LABEL_625:
      if (!(_DWORD)v1090 || v442)
      {
        if (!(_DWORD)v1090)
          goto LABEL_1692;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_628:
        abort();
      }
      v961 = *(_QWORD *)(v15 + 40);
      v962 = 2 * v1090;
      do
      {
        if (v961)
        {
          v963 = *(_QWORD **)(v15 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v15 + 32);
          sub_20AEC01D0(v963, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v15 + 24) + *(_QWORD *)(**(_QWORD **)(v15 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v442;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v961 = *(_QWORD *)(v15 + 40) + 1;
        *(_QWORD *)(v15 + 40) = v961;
        v442 += 2;
        v962 -= 2;
      }
      while (v962);
LABEL_1692:
      v966 = v1115;
      v1115 = 0;
      if (v966)
        (*(void (**)(uint64_t))(*(_QWORD *)v966 + 8))(v966);
      v484 = v1102;
      if (!v1102)
        return;
      v967 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v967);
      while (__stlxr(v486 - 1, v967));
      goto LABEL_2025;
    case 28:
      sub_20B37B54C(a3, (uint64_t)&v1101);
      v201 = *a2;
      v202 = v1111;
      v203 = v1101;
      if (!v1101)
        goto LABEL_1066;
      v204 = v1102;
      if (v1102)
      {
        v205 = (unint64_t *)&v1102->__shared_owners_;
        do
          v206 = __ldxr(v205);
        while (__stxr(v206 + 1, v205));
        do
          v207 = __ldaxr(v205);
        while (__stlxr(v207 - 1, v205));
        if (!v207)
        {
          ((void (*)(std::__shared_weak_count *))v204->__on_zero_shared)(v204);
          std::__shared_weak_count::__release_weak(v204);
        }
        v203 = v1101;
        v208 = v1102;
        if (v1102)
        {
          v209 = (unint64_t *)&v1102->__shared_owners_;
          do
            v210 = __ldxr(v209);
          while (__stxr(v210 + 1, v209));
          do
            v211 = __ldaxr(v209);
          while (__stlxr(v211 - 1, v209));
          if (!v211)
          {
            ((void (*)(std::__shared_weak_count *))v208->__on_zero_shared)(v208);
            std::__shared_weak_count::__release_weak(v208);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v203 + 96))(&v1114, v203, 0);
      else
LABEL_1066:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1940;
      if (!v1105)
        goto LABEL_1940;
      v667 = v1106;
      if (!v1106)
        goto LABEL_1940;
      v668 = v1110;
      v669 = v1103;
      if (v1112 && v1103)
      {
        v670 = v1101;
        v671 = v1102;
        if (v1102)
        {
          v672 = (unint64_t *)&v1102->__shared_owners_;
          do
            v673 = __ldxr(v672);
          while (__stxr(v673 + 1, v672));
          do
            v674 = __ldaxr(v672);
          while (__stlxr(v674 - 1, v672));
          if (!v674)
          {
            ((void (*)(std::__shared_weak_count *))v671->__on_zero_shared)(v671);
            std::__shared_weak_count::__release_weak(v671);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v670 + 88))(v670, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v669 = v1103;
      }
      v675 = (4 * v202);
      if (v667 == 1)
        goto LABEL_1089;
      if ((_DWORD)v675)
      {
        v676 = 0;
        do
        {
          if (!v669
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2044;
          }
          v677 = 0;
          v678 = *(_QWORD *)(v201 + 40);
          do
          {
            if (v678)
            {
              v679 = *(_QWORD **)(v201 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v201 + 32);
              sub_20AEC01D0(v679, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v201 + 24) + *(_QWORD *)(**(_QWORD **)(v201 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v678 = *(_QWORD *)(v201 + 40) + 1;
            *(_QWORD *)(v201 + 40) = v678;
            v677 += 4;
          }
          while (4 * v675 != v677);
          v669 += 4 * v668;
          ++v676;
        }
        while (v676 != v667 - 1);
LABEL_1089:
        if ((_DWORD)v675 && !v669)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2044:
            abort();
          }
          v669 = 0;
        }
      }
      else
      {
        v669 += (4 * (v667 - 2) + 4) * v668;
      }
      v1115 = v675;
      v1116 = v669;
      sub_20B513208(v201, &v1115);
LABEL_1940:
      v1055 = v1114;
      v1114 = 0;
      if (v1055)
        (*(void (**)(uint64_t))(*(_QWORD *)v1055 + 8))(v1055);
      v484 = v1102;
      if (!v1102)
        return;
      v1056 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1056);
      while (__stlxr(v486 - 1, v1056));
      goto LABEL_2025;
    case 29:
      sub_20B37BB84(a3, (uint64_t)&v1101);
      v58 = *a2;
      v59 = v1111;
      v60 = v1101;
      if (!v1101)
        goto LABEL_713;
      v61 = v1102;
      if (v1102)
      {
        v62 = (unint64_t *)&v1102->__shared_owners_;
        do
          v63 = __ldxr(v62);
        while (__stxr(v63 + 1, v62));
        do
          v64 = __ldaxr(v62);
        while (__stlxr(v64 - 1, v62));
        if (!v64)
        {
          ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
          std::__shared_weak_count::__release_weak(v61);
        }
        v60 = v1101;
        v65 = v1102;
        if (v1102)
        {
          v66 = (unint64_t *)&v1102->__shared_owners_;
          do
            v67 = __ldxr(v66);
          while (__stxr(v67 + 1, v66));
          do
            v68 = __ldaxr(v66);
          while (__stlxr(v68 - 1, v66));
          if (!v68)
          {
            ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
            std::__shared_weak_count::__release_weak(v65);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v60 + 96))(&v1115, v60, 0);
      else
LABEL_713:
        v1115 = 0;
      if (!v1104)
        goto LABEL_740;
      if (!v1105)
        goto LABEL_740;
      v499 = v1106;
      if (!v1106)
        goto LABEL_740;
      v500 = v1110;
      v501 = v1103;
      if (v1112 && v1103)
      {
        v502 = v1101;
        v503 = v1102;
        if (v1102)
        {
          v504 = (unint64_t *)&v1102->__shared_owners_;
          do
            v505 = __ldxr(v504);
          while (__stxr(v505 + 1, v504));
          do
            v506 = __ldaxr(v504);
          while (__stlxr(v506 - 1, v504));
          if (!v506)
          {
            ((void (*)(std::__shared_weak_count *))v503->__on_zero_shared)(v503);
            std::__shared_weak_count::__release_weak(v503);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v502 + 88))(v502, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v501 = v1103;
      }
      v507 = (4 * v59);
      if (v499 == 1)
        goto LABEL_734;
      if (!(_DWORD)v507)
        goto LABEL_740;
      v508 = 0;
      do
      {
        if (!v501
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2029;
        }
        for (n = 0; n != v507; ++n)
          sub_20B512EB0(v58, &v501[n]);
        v501 += v500;
        ++v508;
      }
      while (v508 != v499 - 1);
LABEL_734:
      if ((_DWORD)v507 && !v501)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2029:
          abort();
        }
        v501 = 0;
      }
      if ((_DWORD)v507)
      {
        do
        {
          sub_20B512EB0(v58, v501++);
          --v507;
        }
        while (v507);
      }
LABEL_740:
      v510 = v1115;
      v1115 = 0;
      if (v510)
        (*(void (**)(uint64_t))(*(_QWORD *)v510 + 8))(v510);
      v484 = v1102;
      if (!v1102)
        return;
      v511 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v511);
      while (__stlxr(v486 - 1, v511));
      goto LABEL_2025;
    case 30:
      sub_20B37C1B8(a3, (uint64_t)&v1101);
      v234 = *a2;
      v235 = v1111;
      v236 = v1101;
      if (!v1101)
        goto LABEL_1147;
      v237 = v1102;
      if (v1102)
      {
        v238 = (unint64_t *)&v1102->__shared_owners_;
        do
          v239 = __ldxr(v238);
        while (__stxr(v239 + 1, v238));
        do
          v240 = __ldaxr(v238);
        while (__stlxr(v240 - 1, v238));
        if (!v240)
        {
          ((void (*)(std::__shared_weak_count *))v237->__on_zero_shared)(v237);
          std::__shared_weak_count::__release_weak(v237);
        }
        v236 = v1101;
        v241 = v1102;
        if (v1102)
        {
          v242 = (unint64_t *)&v1102->__shared_owners_;
          do
            v243 = __ldxr(v242);
          while (__stxr(v243 + 1, v242));
          do
            v244 = __ldaxr(v242);
          while (__stlxr(v244 - 1, v242));
          if (!v244)
          {
            ((void (*)(std::__shared_weak_count *))v241->__on_zero_shared)(v241);
            std::__shared_weak_count::__release_weak(v241);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v236 + 96))(&v1114, v236, 0);
      else
LABEL_1147:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1956;
      if (!v1105)
        goto LABEL_1956;
      v707 = v1106;
      if (!v1106)
        goto LABEL_1956;
      v708 = v1110;
      v709 = v1103;
      if (v1112 && v1103)
      {
        v710 = v1101;
        v711 = v1102;
        if (v1102)
        {
          v712 = (unint64_t *)&v1102->__shared_owners_;
          do
            v713 = __ldxr(v712);
          while (__stxr(v713 + 1, v712));
          do
            v714 = __ldaxr(v712);
          while (__stlxr(v714 - 1, v712));
          if (!v714)
          {
            ((void (*)(std::__shared_weak_count *))v711->__on_zero_shared)(v711);
            std::__shared_weak_count::__release_weak(v711);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v710 + 88))(v710, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v709 = v1103;
      }
      v715 = (4 * v235);
      if (v707 == 1)
        goto LABEL_1170;
      if ((_DWORD)v715)
      {
        v716 = 0;
        do
        {
          if (!v709
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2049;
          }
          v717 = 0;
          v718 = *(_QWORD *)(v234 + 40);
          do
          {
            if (v718)
            {
              v719 = *(_QWORD **)(v234 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v234 + 32);
              sub_20AEC01D0(v719, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v718 = *(_QWORD *)(v234 + 40) + 1;
            *(_QWORD *)(v234 + 40) = v718;
            v717 += 2;
          }
          while (2 * v715 != v717);
          v709 += 2 * v708;
          ++v716;
        }
        while (v716 != v707 - 1);
LABEL_1170:
        if ((_DWORD)v715 && !v709)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2049:
            abort();
          }
          v709 = 0;
        }
      }
      else
      {
        v709 += (2 * (v707 - 2) + 2) * v708;
      }
      v1115 = (4 * v235);
      v1116 = v709;
      sub_20B513184(v234, &v1115);
LABEL_1956:
      v1059 = v1114;
      v1114 = 0;
      if (v1059)
        (*(void (**)(uint64_t))(*(_QWORD *)v1059 + 8))(v1059);
      v484 = v1102;
      if (!v1102)
        return;
      v1060 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1060);
      while (__stlxr(v486 - 1, v1060));
      goto LABEL_2025;
    case 31:
      sub_20B37C7F0(a3, (uint64_t)&v1101);
      v168 = *a2;
      v169 = v1111;
      v170 = v1101;
      if (!v1101)
        goto LABEL_986;
      v171 = v1102;
      if (v1102)
      {
        v172 = (unint64_t *)&v1102->__shared_owners_;
        do
          v173 = __ldxr(v172);
        while (__stxr(v173 + 1, v172));
        do
          v174 = __ldaxr(v172);
        while (__stlxr(v174 - 1, v172));
        if (!v174)
        {
          ((void (*)(std::__shared_weak_count *))v171->__on_zero_shared)(v171);
          std::__shared_weak_count::__release_weak(v171);
        }
        v170 = v1101;
        v175 = v1102;
        if (v1102)
        {
          v176 = (unint64_t *)&v1102->__shared_owners_;
          do
            v177 = __ldxr(v176);
          while (__stxr(v177 + 1, v176));
          do
            v178 = __ldaxr(v176);
          while (__stlxr(v178 - 1, v176));
          if (!v178)
          {
            ((void (*)(std::__shared_weak_count *))v175->__on_zero_shared)(v175);
            std::__shared_weak_count::__release_weak(v175);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v170 + 96))(&v1115, v170, 0);
      else
LABEL_986:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1736;
      if (!v1105)
        goto LABEL_1736;
      v628 = v1106;
      if (!v1106)
        goto LABEL_1736;
      v629 = v1110;
      v630 = v1103;
      if (v1112 && v1103)
      {
        v631 = v1101;
        v632 = v1102;
        if (v1102)
        {
          v633 = (unint64_t *)&v1102->__shared_owners_;
          do
            v634 = __ldxr(v633);
          while (__stxr(v634 + 1, v633));
          do
            v635 = __ldaxr(v633);
          while (__stlxr(v635 - 1, v633));
          if (!v635)
          {
            ((void (*)(std::__shared_weak_count *))v632->__on_zero_shared)(v632);
            std::__shared_weak_count::__release_weak(v632);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v631 + 88))(v631, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v630 = v1103;
      }
      v1093 = (4 * v169);
      if (v628 == 1)
        goto LABEL_1009;
      if (!(4 * v169))
        goto LABEL_1736;
      v636 = 0;
      do
      {
        if (!v630
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1012;
        }
        v637 = 0;
        v638 = *(_QWORD *)(v168 + 40);
        do
        {
          if (v638)
          {
            v639 = *(_QWORD **)(v168 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v168 + 32);
            sub_20AEC01D0(v639, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v168 + 24) + *(_QWORD *)(**(_QWORD **)(v168 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v630[v637];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v638 = *(_QWORD *)(v168 + 40) + 1;
          *(_QWORD *)(v168 + 40) = v638;
          v637 += 2;
        }
        while (2 * v1093 != v637);
        v630 += 2 * v629;
        ++v636;
      }
      while (v636 != v628 - 1);
LABEL_1009:
      if (!(_DWORD)v1093 || v630)
      {
        if (!(_DWORD)v1093)
          goto LABEL_1736;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1012:
        abort();
      }
      v989 = *(_QWORD *)(v168 + 40);
      v990 = 2 * v1093;
      do
      {
        if (v989)
        {
          v991 = *(_QWORD **)(v168 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v168 + 32);
          sub_20AEC01D0(v991, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v168 + 24) + *(_QWORD *)(**(_QWORD **)(v168 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v630;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v989 = *(_QWORD *)(v168 + 40) + 1;
        *(_QWORD *)(v168 + 40) = v989;
        v630 += 2;
        v990 -= 2;
      }
      while (v990);
LABEL_1736:
      v994 = v1115;
      v1115 = 0;
      if (v994)
        (*(void (**)(uint64_t))(*(_QWORD *)v994 + 8))(v994);
      v484 = v1102;
      if (!v1102)
        return;
      v995 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v995);
      while (__stlxr(v486 - 1, v995));
      goto LABEL_2025;
    case 32:
      sub_20B37CE28(a3, (uint64_t)&v1101);
      v256 = *a2;
      v257 = v1111;
      v258 = v1101;
      if (!v1101)
        goto LABEL_1201;
      v259 = v1102;
      if (v1102)
      {
        v260 = (unint64_t *)&v1102->__shared_owners_;
        do
          v261 = __ldxr(v260);
        while (__stxr(v261 + 1, v260));
        do
          v262 = __ldaxr(v260);
        while (__stlxr(v262 - 1, v260));
        if (!v262)
        {
          ((void (*)(std::__shared_weak_count *))v259->__on_zero_shared)(v259);
          std::__shared_weak_count::__release_weak(v259);
        }
        v258 = v1101;
        v263 = v1102;
        if (v1102)
        {
          v264 = (unint64_t *)&v1102->__shared_owners_;
          do
            v265 = __ldxr(v264);
          while (__stxr(v265 + 1, v264));
          do
            v266 = __ldaxr(v264);
          while (__stlxr(v266 - 1, v264));
          if (!v266)
          {
            ((void (*)(std::__shared_weak_count *))v263->__on_zero_shared)(v263);
            std::__shared_weak_count::__release_weak(v263);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v258 + 96))(&v1114, v258, 0);
      else
LABEL_1201:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1972;
      if (!v1105)
        goto LABEL_1972;
      v733 = v1106;
      if (!v1106)
        goto LABEL_1972;
      v734 = v1110;
      v735 = v1103;
      if (v1112 && v1103)
      {
        v736 = v1101;
        v737 = v1102;
        if (v1102)
        {
          v738 = (unint64_t *)&v1102->__shared_owners_;
          do
            v739 = __ldxr(v738);
          while (__stxr(v739 + 1, v738));
          do
            v740 = __ldaxr(v738);
          while (__stlxr(v740 - 1, v738));
          if (!v740)
          {
            ((void (*)(std::__shared_weak_count *))v737->__on_zero_shared)(v737);
            std::__shared_weak_count::__release_weak(v737);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v736 + 88))(v736, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v735 = v1103;
      }
      v741 = (4 * v257);
      if (v733 == 1)
        goto LABEL_1224;
      if ((_DWORD)v741)
      {
        v742 = 0;
        do
        {
          if (!v735
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2051;
          }
          v743 = 0;
          v744 = *(_QWORD *)(v256 + 40);
          do
          {
            if (v744)
            {
              v745 = *(_QWORD **)(v256 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v256 + 32);
              sub_20AEC01D0(v745, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v256 + 24) + *(_QWORD *)(**(_QWORD **)(v256 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v744 = *(_QWORD *)(v256 + 40) + 1;
            *(_QWORD *)(v256 + 40) = v744;
            v743 += 4;
          }
          while (4 * v741 != v743);
          v735 += 4 * v734;
          ++v742;
        }
        while (v742 != v733 - 1);
LABEL_1224:
        if ((_DWORD)v741 && !v735)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2051:
            abort();
          }
          v735 = 0;
        }
      }
      else
      {
        v735 += (4 * (v733 - 2) + 4) * v734;
      }
      v1115 = v741;
      v1116 = v735;
      sub_20B513208(v256, &v1115);
LABEL_1972:
      v1063 = v1114;
      v1114 = 0;
      if (v1063)
        (*(void (**)(uint64_t))(*(_QWORD *)v1063 + 8))(v1063);
      v484 = v1102;
      if (!v1102)
        return;
      v1064 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1064);
      while (__stlxr(v486 - 1, v1064));
      goto LABEL_2025;
    case 33:
      sub_20B37D460(a3, (uint64_t)&v1101);
      v364 = *a2;
      v365 = v1111;
      v366 = v1101;
      if (!v1101)
        goto LABEL_1505;
      v367 = v1102;
      if (v1102)
      {
        v368 = (unint64_t *)&v1102->__shared_owners_;
        do
          v369 = __ldxr(v368);
        while (__stxr(v369 + 1, v368));
        do
          v370 = __ldaxr(v368);
        while (__stlxr(v370 - 1, v368));
        if (!v370)
        {
          ((void (*)(std::__shared_weak_count *))v367->__on_zero_shared)(v367);
          std::__shared_weak_count::__release_weak(v367);
        }
        v366 = v1101;
        v371 = v1102;
        if (v1102)
        {
          v372 = (unint64_t *)&v1102->__shared_owners_;
          do
            v373 = __ldxr(v372);
          while (__stxr(v373 + 1, v372));
          do
            v374 = __ldaxr(v372);
          while (__stlxr(v374 - 1, v372));
          if (!v374)
          {
            ((void (*)(std::__shared_weak_count *))v371->__on_zero_shared)(v371);
            std::__shared_weak_count::__release_weak(v371);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v366 + 96))(&v1115, v366, 0);
      else
LABEL_1505:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1532;
      if (!v1105)
        goto LABEL_1532;
      v873 = v1106;
      if (!v1106)
        goto LABEL_1532;
      v874 = v1110;
      v875 = v1103;
      if (v1112 && v1103)
      {
        v876 = v1101;
        v877 = v1102;
        if (v1102)
        {
          v878 = (unint64_t *)&v1102->__shared_owners_;
          do
            v879 = __ldxr(v878);
          while (__stxr(v879 + 1, v878));
          do
            v880 = __ldaxr(v878);
          while (__stlxr(v880 - 1, v878));
          if (!v880)
          {
            ((void (*)(std::__shared_weak_count *))v877->__on_zero_shared)(v877);
            std::__shared_weak_count::__release_weak(v877);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v876 + 88))(v876, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v875 = v1103;
      }
      v881 = (4 * v365);
      if (v873 == 1)
        goto LABEL_1526;
      if (!(_DWORD)v881)
        goto LABEL_1532;
      v882 = 0;
      do
      {
        if (!v875
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2035;
        }
        for (ii = 0; ii != v881; ++ii)
          sub_20B512EB0(v364, &v875[ii]);
        v875 += v874;
        ++v882;
      }
      while (v882 != v873 - 1);
LABEL_1526:
      if ((_DWORD)v881 && !v875)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2035:
          abort();
        }
        v875 = 0;
      }
      if ((_DWORD)v881)
      {
        do
        {
          sub_20B512EB0(v364, v875++);
          --v881;
        }
        while (v881);
      }
LABEL_1532:
      v884 = v1115;
      v1115 = 0;
      if (v884)
        (*(void (**)(uint64_t))(*(_QWORD *)v884 + 8))(v884);
      v484 = v1102;
      if (!v1102)
        return;
      v885 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v885);
      while (__stlxr(v486 - 1, v885));
      goto LABEL_2025;
    case 34:
      sub_20B37DA94(a3, (uint64_t)&v1101);
      v245 = *a2;
      v246 = v1111;
      v247 = v1101;
      if (!v1101)
        goto LABEL_1174;
      v248 = v1102;
      if (v1102)
      {
        v249 = (unint64_t *)&v1102->__shared_owners_;
        do
          v250 = __ldxr(v249);
        while (__stxr(v250 + 1, v249));
        do
          v251 = __ldaxr(v249);
        while (__stlxr(v251 - 1, v249));
        if (!v251)
        {
          ((void (*)(std::__shared_weak_count *))v248->__on_zero_shared)(v248);
          std::__shared_weak_count::__release_weak(v248);
        }
        v247 = v1101;
        v252 = v1102;
        if (v1102)
        {
          v253 = (unint64_t *)&v1102->__shared_owners_;
          do
            v254 = __ldxr(v253);
          while (__stxr(v254 + 1, v253));
          do
            v255 = __ldaxr(v253);
          while (__stlxr(v255 - 1, v253));
          if (!v255)
          {
            ((void (*)(std::__shared_weak_count *))v252->__on_zero_shared)(v252);
            std::__shared_weak_count::__release_weak(v252);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v247 + 96))(&v1114, v247, 0);
      else
LABEL_1174:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1964;
      if (!v1105)
        goto LABEL_1964;
      v720 = v1106;
      if (!v1106)
        goto LABEL_1964;
      v721 = v1110;
      v722 = v1103;
      if (v1112 && v1103)
      {
        v723 = v1101;
        v724 = v1102;
        if (v1102)
        {
          v725 = (unint64_t *)&v1102->__shared_owners_;
          do
            v726 = __ldxr(v725);
          while (__stxr(v726 + 1, v725));
          do
            v727 = __ldaxr(v725);
          while (__stlxr(v727 - 1, v725));
          if (!v727)
          {
            ((void (*)(std::__shared_weak_count *))v724->__on_zero_shared)(v724);
            std::__shared_weak_count::__release_weak(v724);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v723 + 88))(v723, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v722 = v1103;
      }
      v728 = (4 * v246);
      if (v720 == 1)
        goto LABEL_1197;
      if ((_DWORD)v728)
      {
        v729 = 0;
        do
        {
          if (!v722
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2050;
          }
          v730 = 0;
          v731 = *(_QWORD *)(v245 + 40);
          do
          {
            if (v731)
            {
              v732 = *(_QWORD **)(v245 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v245 + 32);
              sub_20AEC01D0(v732, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v731 = *(_QWORD *)(v245 + 40) + 1;
            *(_QWORD *)(v245 + 40) = v731;
            v730 += 2;
          }
          while (2 * v728 != v730);
          v722 += 2 * v721;
          ++v729;
        }
        while (v729 != v720 - 1);
LABEL_1197:
        if ((_DWORD)v728 && !v722)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2050:
            abort();
          }
          v722 = 0;
        }
      }
      else
      {
        v722 += (2 * (v720 - 2) + 2) * v721;
      }
      v1115 = (4 * v246);
      v1116 = v722;
      sub_20B513184(v245, &v1115);
LABEL_1964:
      v1061 = v1114;
      v1114 = 0;
      if (v1061)
        (*(void (**)(uint64_t))(*(_QWORD *)v1061 + 8))(v1061);
      v484 = v1102;
      if (!v1102)
        return;
      v1062 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1062);
      while (__stlxr(v486 - 1, v1062));
      goto LABEL_2025;
    case 35:
      sub_20B37E0CC(a3, (uint64_t)&v1101);
      v223 = *a2;
      v224 = v1111;
      v225 = v1101;
      if (!v1101)
        goto LABEL_1120;
      v226 = v1102;
      if (v1102)
      {
        v227 = (unint64_t *)&v1102->__shared_owners_;
        do
          v228 = __ldxr(v227);
        while (__stxr(v228 + 1, v227));
        do
          v229 = __ldaxr(v227);
        while (__stlxr(v229 - 1, v227));
        if (!v229)
        {
          ((void (*)(std::__shared_weak_count *))v226->__on_zero_shared)(v226);
          std::__shared_weak_count::__release_weak(v226);
        }
        v225 = v1101;
        v230 = v1102;
        if (v1102)
        {
          v231 = (unint64_t *)&v1102->__shared_owners_;
          do
            v232 = __ldxr(v231);
          while (__stxr(v232 + 1, v231));
          do
            v233 = __ldaxr(v231);
          while (__stlxr(v233 - 1, v231));
          if (!v233)
          {
            ((void (*)(std::__shared_weak_count *))v230->__on_zero_shared)(v230);
            std::__shared_weak_count::__release_weak(v230);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v225 + 96))(&v1115, v225, 0);
      else
LABEL_1120:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1747;
      if (!v1105)
        goto LABEL_1747;
      v693 = v1106;
      if (!v1106)
        goto LABEL_1747;
      v694 = v1110;
      v695 = v1103;
      if (v1112 && v1103)
      {
        v696 = v1101;
        v697 = v1102;
        if (v1102)
        {
          v698 = (unint64_t *)&v1102->__shared_owners_;
          do
            v699 = __ldxr(v698);
          while (__stxr(v699 + 1, v698));
          do
            v700 = __ldaxr(v698);
          while (__stlxr(v700 - 1, v698));
          if (!v700)
          {
            ((void (*)(std::__shared_weak_count *))v697->__on_zero_shared)(v697);
            std::__shared_weak_count::__release_weak(v697);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v696 + 88))(v696, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v695 = v1103;
      }
      v1095 = (4 * v224);
      if (v693 == 1)
        goto LABEL_1143;
      if (!(4 * v224))
        goto LABEL_1747;
      v701 = 0;
      do
      {
        if (!v695
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1146;
        }
        v702 = 0;
        v703 = *(_QWORD *)(v223 + 40);
        do
        {
          if (v703)
          {
            v704 = *(_QWORD **)(v223 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v223 + 32);
            sub_20AEC01D0(v704, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v223 + 24) + *(_QWORD *)(**(_QWORD **)(v223 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v695[v702];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v703 = *(_QWORD *)(v223 + 40) + 1;
          *(_QWORD *)(v223 + 40) = v703;
          v702 += 2;
        }
        while (2 * v1095 != v702);
        v695 += 2 * v694;
        ++v701;
      }
      while (v701 != v693 - 1);
LABEL_1143:
      if (!(_DWORD)v1095 || v695)
      {
        if (!(_DWORD)v1095)
          goto LABEL_1747;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1146:
        abort();
      }
      v996 = *(_QWORD *)(v223 + 40);
      v997 = 2 * v1095;
      do
      {
        if (v996)
        {
          v998 = *(_QWORD **)(v223 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v223 + 32);
          sub_20AEC01D0(v998, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v223 + 24) + *(_QWORD *)(**(_QWORD **)(v223 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v695;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v996 = *(_QWORD *)(v223 + 40) + 1;
        *(_QWORD *)(v223 + 40) = v996;
        v695 += 2;
        v997 -= 2;
      }
      while (v997);
LABEL_1747:
      v1001 = v1115;
      v1115 = 0;
      if (v1001)
        (*(void (**)(uint64_t))(*(_QWORD *)v1001 + 8))(v1001);
      v484 = v1102;
      if (!v1102)
        return;
      v1002 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1002);
      while (__stlxr(v486 - 1, v1002));
      goto LABEL_2025;
    case 36:
      sub_20B37E704(a3, (uint64_t)&v1101);
      v212 = *a2;
      v213 = v1111;
      v214 = v1101;
      if (!v1101)
        goto LABEL_1093;
      v215 = v1102;
      if (v1102)
      {
        v216 = (unint64_t *)&v1102->__shared_owners_;
        do
          v217 = __ldxr(v216);
        while (__stxr(v217 + 1, v216));
        do
          v218 = __ldaxr(v216);
        while (__stlxr(v218 - 1, v216));
        if (!v218)
        {
          ((void (*)(std::__shared_weak_count *))v215->__on_zero_shared)(v215);
          std::__shared_weak_count::__release_weak(v215);
        }
        v214 = v1101;
        v219 = v1102;
        if (v1102)
        {
          v220 = (unint64_t *)&v1102->__shared_owners_;
          do
            v221 = __ldxr(v220);
          while (__stxr(v221 + 1, v220));
          do
            v222 = __ldaxr(v220);
          while (__stlxr(v222 - 1, v220));
          if (!v222)
          {
            ((void (*)(std::__shared_weak_count *))v219->__on_zero_shared)(v219);
            std::__shared_weak_count::__release_weak(v219);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v214 + 96))(&v1114, v214, 0);
      else
LABEL_1093:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1948;
      if (!v1105)
        goto LABEL_1948;
      v680 = v1106;
      if (!v1106)
        goto LABEL_1948;
      v681 = v1110;
      v682 = v1103;
      if (v1112 && v1103)
      {
        v683 = v1101;
        v684 = v1102;
        if (v1102)
        {
          v685 = (unint64_t *)&v1102->__shared_owners_;
          do
            v686 = __ldxr(v685);
          while (__stxr(v686 + 1, v685));
          do
            v687 = __ldaxr(v685);
          while (__stlxr(v687 - 1, v685));
          if (!v687)
          {
            ((void (*)(std::__shared_weak_count *))v684->__on_zero_shared)(v684);
            std::__shared_weak_count::__release_weak(v684);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v683 + 88))(v683, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v682 = v1103;
      }
      v688 = (4 * v213);
      if (v680 == 1)
        goto LABEL_1116;
      if ((_DWORD)v688)
      {
        v689 = 0;
        do
        {
          if (!v682
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2045;
          }
          v690 = 0;
          v691 = *(_QWORD *)(v212 + 40);
          do
          {
            if (v691)
            {
              v692 = *(_QWORD **)(v212 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v212 + 32);
              sub_20AEC01D0(v692, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v212 + 24) + *(_QWORD *)(**(_QWORD **)(v212 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v691 = *(_QWORD *)(v212 + 40) + 1;
            *(_QWORD *)(v212 + 40) = v691;
            v690 += 4;
          }
          while (4 * v688 != v690);
          v682 += 4 * v681;
          ++v689;
        }
        while (v689 != v680 - 1);
LABEL_1116:
        if ((_DWORD)v688 && !v682)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2045:
            abort();
          }
          v682 = 0;
        }
      }
      else
      {
        v682 += (4 * (v680 - 2) + 4) * v681;
      }
      v1115 = v688;
      v1116 = v682;
      sub_20B513208(v212, &v1115);
LABEL_1948:
      v1057 = v1114;
      v1114 = 0;
      if (v1057)
        (*(void (**)(uint64_t))(*(_QWORD *)v1057 + 8))(v1057);
      v484 = v1102;
      if (!v1102)
        return;
      v1058 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1058);
      while (__stlxr(v486 - 1, v1058));
      goto LABEL_2025;
    case 37:
      sub_20B37ED3C(a3, (uint64_t)&v1101);
      v332 = *a2;
      v333 = v1111;
      v334 = v1101;
      if (!v1101)
        goto LABEL_1421;
      v335 = v1102;
      if (v1102)
      {
        v336 = (unint64_t *)&v1102->__shared_owners_;
        do
          v337 = __ldxr(v336);
        while (__stxr(v337 + 1, v336));
        do
          v338 = __ldaxr(v336);
        while (__stlxr(v338 - 1, v336));
        if (!v338)
        {
          ((void (*)(std::__shared_weak_count *))v335->__on_zero_shared)(v335);
          std::__shared_weak_count::__release_weak(v335);
        }
        v334 = v1101;
        v339 = v1102;
        if (v1102)
        {
          v340 = (unint64_t *)&v1102->__shared_owners_;
          do
            v341 = __ldxr(v340);
          while (__stxr(v341 + 1, v340));
          do
            v342 = __ldaxr(v340);
          while (__stlxr(v342 - 1, v340));
          if (!v342)
          {
            ((void (*)(std::__shared_weak_count *))v339->__on_zero_shared)(v339);
            std::__shared_weak_count::__release_weak(v339);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v334 + 96))(&v1115, v334, 0);
      else
LABEL_1421:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1448;
      if (!v1105)
        goto LABEL_1448;
      v834 = v1106;
      if (!v1106)
        goto LABEL_1448;
      v835 = v1110;
      v836 = v1103;
      if (v1112 && v1103)
      {
        v837 = v1101;
        v838 = v1102;
        if (v1102)
        {
          v839 = (unint64_t *)&v1102->__shared_owners_;
          do
            v840 = __ldxr(v839);
          while (__stxr(v840 + 1, v839));
          do
            v841 = __ldaxr(v839);
          while (__stlxr(v841 - 1, v839));
          if (!v841)
          {
            ((void (*)(std::__shared_weak_count *))v838->__on_zero_shared)(v838);
            std::__shared_weak_count::__release_weak(v838);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v837 + 88))(v837, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v836 = v1103;
      }
      v842 = (4 * v333);
      if (v834 == 1)
        goto LABEL_1442;
      if (!(_DWORD)v842)
        goto LABEL_1448;
      v843 = 0;
      do
      {
        if (!v836
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_2034;
        }
        for (jj = 0; jj != v842; ++jj)
          sub_20B512EB0(v332, &v836[jj]);
        v836 += v835;
        ++v843;
      }
      while (v843 != v834 - 1);
LABEL_1442:
      if ((_DWORD)v842 && !v836)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
LABEL_2034:
          abort();
        }
        v836 = 0;
      }
      if ((_DWORD)v842)
      {
        do
        {
          sub_20B512EB0(v332, v836++);
          --v842;
        }
        while (v842);
      }
LABEL_1448:
      v845 = v1115;
      v1115 = 0;
      if (v845)
        (*(void (**)(uint64_t))(*(_QWORD *)v845 + 8))(v845);
      v484 = v1102;
      if (!v1102)
        return;
      v846 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v846);
      while (__stlxr(v486 - 1, v846));
      goto LABEL_2025;
    case 38:
      sub_20B37F370(a3, (uint64_t)&v1101);
      v386 = *a2;
      v387 = v1111;
      v388 = v1101;
      if (!v1101)
        goto LABEL_1562;
      v389 = v1102;
      if (v1102)
      {
        v390 = (unint64_t *)&v1102->__shared_owners_;
        do
          v391 = __ldxr(v390);
        while (__stxr(v391 + 1, v390));
        do
          v392 = __ldaxr(v390);
        while (__stlxr(v392 - 1, v390));
        if (!v392)
        {
          ((void (*)(std::__shared_weak_count *))v389->__on_zero_shared)(v389);
          std::__shared_weak_count::__release_weak(v389);
        }
        v388 = v1101;
        v393 = v1102;
        if (v1102)
        {
          v394 = (unint64_t *)&v1102->__shared_owners_;
          do
            v395 = __ldxr(v394);
          while (__stxr(v395 + 1, v394));
          do
            v396 = __ldaxr(v394);
          while (__stlxr(v396 - 1, v394));
          if (!v396)
          {
            ((void (*)(std::__shared_weak_count *))v393->__on_zero_shared)(v393);
            std::__shared_weak_count::__release_weak(v393);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v388 + 96))(&v1114, v388, 0);
      else
LABEL_1562:
        v1114 = 0;
      if (!v1104)
        goto LABEL_2020;
      if (!v1105)
        goto LABEL_2020;
      v898 = v1106;
      if (!v1106)
        goto LABEL_2020;
      v899 = v1110;
      v900 = v1103;
      if (v1112 && v1103)
      {
        v901 = v1101;
        v902 = v1102;
        if (v1102)
        {
          v903 = (unint64_t *)&v1102->__shared_owners_;
          do
            v904 = __ldxr(v903);
          while (__stxr(v904 + 1, v903));
          do
            v905 = __ldaxr(v903);
          while (__stlxr(v905 - 1, v903));
          if (!v905)
          {
            ((void (*)(std::__shared_weak_count *))v902->__on_zero_shared)(v902);
            std::__shared_weak_count::__release_weak(v902);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v901 + 88))(v901, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v900 = v1103;
      }
      v906 = (4 * v387);
      if (v898 == 1)
        goto LABEL_1585;
      if ((_DWORD)v906)
      {
        v907 = 0;
        do
        {
          if (!v900
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2056;
          }
          v908 = 0;
          v909 = *(_QWORD *)(v386 + 40);
          do
          {
            if (v909)
            {
              v910 = *(_QWORD **)(v386 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v386 + 32);
              sub_20AEC01D0(v910, (uint64_t)&v1115, 1);
            }
            std::ostream::operator<<();
            v909 = *(_QWORD *)(v386 + 40) + 1;
            *(_QWORD *)(v386 + 40) = v909;
            v908 += 2;
          }
          while (2 * v906 != v908);
          v900 += 2 * v899;
          ++v907;
        }
        while (v907 != v898 - 1);
LABEL_1585:
        if ((_DWORD)v906 && !v900)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2056:
            abort();
          }
          v900 = 0;
        }
      }
      else
      {
        v900 += (2 * (v898 - 2) + 2) * v899;
      }
      v1115 = (4 * v387);
      v1116 = v900;
      sub_20B513184(v386, &v1115);
LABEL_2020:
      v1075 = v1114;
      v1114 = 0;
      if (v1075)
        (*(void (**)(uint64_t))(*(_QWORD *)v1075 + 8))(v1075);
      v484 = v1102;
      if (!v1102)
        return;
      v1076 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1076);
      while (__stlxr(v486 - 1, v1076));
      goto LABEL_2025;
    case 39:
      sub_20B37F9A8(a3, (uint64_t)&v1101);
      v135 = *a2;
      v136 = v1111;
      v137 = v1101;
      if (!v1101)
        goto LABEL_908;
      v138 = v1102;
      if (v1102)
      {
        v139 = (unint64_t *)&v1102->__shared_owners_;
        do
          v140 = __ldxr(v139);
        while (__stxr(v140 + 1, v139));
        do
          v141 = __ldaxr(v139);
        while (__stlxr(v141 - 1, v139));
        if (!v141)
        {
          ((void (*)(std::__shared_weak_count *))v138->__on_zero_shared)(v138);
          std::__shared_weak_count::__release_weak(v138);
        }
        v137 = v1101;
        v142 = v1102;
        if (v1102)
        {
          v143 = (unint64_t *)&v1102->__shared_owners_;
          do
            v144 = __ldxr(v143);
          while (__stxr(v144 + 1, v143));
          do
            v145 = __ldaxr(v143);
          while (__stlxr(v145 - 1, v143));
          if (!v145)
          {
            ((void (*)(std::__shared_weak_count *))v142->__on_zero_shared)(v142);
            std::__shared_weak_count::__release_weak(v142);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v137 + 96))(&v1115, v137, 0);
      else
LABEL_908:
        v1115 = 0;
      if (!v1104)
        goto LABEL_1725;
      if (!v1105)
        goto LABEL_1725;
      v589 = v1106;
      if (!v1106)
        goto LABEL_1725;
      v590 = v1110;
      v591 = v1103;
      if (v1112 && v1103)
      {
        v592 = v1101;
        v593 = v1102;
        if (v1102)
        {
          v594 = (unint64_t *)&v1102->__shared_owners_;
          do
            v595 = __ldxr(v594);
          while (__stxr(v595 + 1, v594));
          do
            v596 = __ldaxr(v594);
          while (__stlxr(v596 - 1, v594));
          if (!v596)
          {
            ((void (*)(std::__shared_weak_count *))v593->__on_zero_shared)(v593);
            std::__shared_weak_count::__release_weak(v593);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v592 + 88))(v592, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v591 = v1103;
      }
      v1092 = (4 * v136);
      if (v589 == 1)
        goto LABEL_931;
      if (!(4 * v136))
        goto LABEL_1725;
      v597 = 0;
      do
      {
        if (!v591
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_934;
        }
        v598 = 0;
        v599 = *(_QWORD *)(v135 + 40);
        do
        {
          if (v599)
          {
            v600 = *(_QWORD **)(v135 + 24);
            LOBYTE(v1114) = *(_BYTE *)(v135 + 32);
            sub_20AEC01D0(v600, (uint64_t)&v1114, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v135 + 24) + *(_QWORD *)(**(_QWORD **)(v135 + 24) - 24) + 16) = 5;
          _H0 = *(_WORD *)&v591[v598];
          __asm { FCVT            S0, H0 }
          std::ostream::operator<<();
          v599 = *(_QWORD *)(v135 + 40) + 1;
          *(_QWORD *)(v135 + 40) = v599;
          v598 += 2;
        }
        while (2 * v1092 != v598);
        v591 += 2 * v590;
        ++v597;
      }
      while (v597 != v589 - 1);
LABEL_931:
      if (!(_DWORD)v1092 || v591)
      {
        if (!(_DWORD)v1092)
          goto LABEL_1725;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_934:
        abort();
      }
      v982 = *(_QWORD *)(v135 + 40);
      v983 = 2 * v1092;
      do
      {
        if (v982)
        {
          v984 = *(_QWORD **)(v135 + 24);
          LOBYTE(v1114) = *(_BYTE *)(v135 + 32);
          sub_20AEC01D0(v984, (uint64_t)&v1114, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v135 + 24) + *(_QWORD *)(**(_QWORD **)(v135 + 24) - 24) + 16) = 5;
        _H0 = *(_WORD *)v591;
        __asm { FCVT            S0, H0 }
        std::ostream::operator<<();
        v982 = *(_QWORD *)(v135 + 40) + 1;
        *(_QWORD *)(v135 + 40) = v982;
        v591 += 2;
        v983 -= 2;
      }
      while (v983);
LABEL_1725:
      v987 = v1115;
      v1115 = 0;
      if (v987)
        (*(void (**)(uint64_t))(*(_QWORD *)v987 + 8))(v987);
      v484 = v1102;
      if (!v1102)
        return;
      v988 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v988);
      while (__stlxr(v486 - 1, v988));
      goto LABEL_2025;
    case 40:
      sub_20B37FFE0(a3, (uint64_t)&v1101);
      v102 = *a2;
      v103 = v1111;
      v104 = v1101;
      if (!v1101)
        goto LABEL_830;
      v105 = v1102;
      if (v1102)
      {
        v106 = (unint64_t *)&v1102->__shared_owners_;
        do
          v107 = __ldxr(v106);
        while (__stxr(v107 + 1, v106));
        do
          v108 = __ldaxr(v106);
        while (__stlxr(v108 - 1, v106));
        if (!v108)
        {
          ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
          std::__shared_weak_count::__release_weak(v105);
        }
        v104 = v1101;
        v109 = v1102;
        if (v1102)
        {
          v110 = (unint64_t *)&v1102->__shared_owners_;
          do
            v111 = __ldxr(v110);
          while (__stxr(v111 + 1, v110));
          do
            v112 = __ldaxr(v110);
          while (__stlxr(v112 - 1, v110));
          if (!v112)
          {
            ((void (*)(std::__shared_weak_count *))v109->__on_zero_shared)(v109);
            std::__shared_weak_count::__release_weak(v109);
          }
        }
      }
      if (v1113)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v104 + 96))(&v1114, v104, 0);
      else
LABEL_830:
        v1114 = 0;
      if (!v1104)
        goto LABEL_1892;
      if (!v1105)
        goto LABEL_1892;
      v550 = v1106;
      if (!v1106)
        goto LABEL_1892;
      v551 = v1110;
      v552 = v1103;
      if (v1112 && v1103)
      {
        v553 = v1101;
        v554 = v1102;
        if (v1102)
        {
          v555 = (unint64_t *)&v1102->__shared_owners_;
          do
            v556 = __ldxr(v555);
          while (__stxr(v556 + 1, v555));
          do
            v557 = __ldaxr(v555);
          while (__stlxr(v557 - 1, v555));
          if (!v557)
          {
            ((void (*)(std::__shared_weak_count *))v554->__on_zero_shared)(v554);
            std::__shared_weak_count::__release_weak(v554);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v553 + 88))(v553, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v552 = v1103;
      }
      v558 = (4 * v103);
      if (v550 == 1)
        goto LABEL_853;
      if ((_DWORD)v558)
      {
        v559 = 0;
        do
        {
          if (!v552
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
            goto LABEL_2040;
          }
          v560 = 0;
          v561 = *(_QWORD *)(v102 + 40);
          do
          {
            if (v561)
            {
              v562 = *(_QWORD **)(v102 + 24);
              LOBYTE(v1115) = *(_BYTE *)(v102 + 32);
              sub_20AEC01D0(v562, (uint64_t)&v1115, 1);
            }
            *(_QWORD *)(*(_QWORD *)(v102 + 24) + *(_QWORD *)(**(_QWORD **)(v102 + 24) - 24) + 16) = 9;
            std::ostream::operator<<();
            v561 = *(_QWORD *)(v102 + 40) + 1;
            *(_QWORD *)(v102 + 40) = v561;
            v560 += 4;
          }
          while (4 * v558 != v560);
          v552 += 4 * v551;
          ++v559;
        }
        while (v559 != v550 - 1);
LABEL_853:
        if ((_DWORD)v558 && !v552)
        {
          if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
          {
LABEL_2040:
            abort();
          }
          v552 = 0;
        }
      }
      else
      {
        v552 += (4 * (v550 - 2) + 4) * v551;
      }
      v1115 = v558;
      v1116 = v552;
      sub_20B513208(v102, &v1115);
LABEL_1892:
      v1043 = v1114;
      v1114 = 0;
      if (v1043)
        (*(void (**)(uint64_t))(*(_QWORD *)v1043 + 8))(v1043);
      v484 = v1102;
      if (!v1102)
        return;
      v1044 = (unint64_t *)&v1102->__shared_owners_;
      do
        v486 = __ldaxr(v1044);
      while (__stlxr(v486 - 1, v1044));
      goto LABEL_2025;
    default:
      return;
  }
}

void sub_20B3E517C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  unint64_t *p_shared_owners;
  unint64_t v24;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v24 = __ldaxr(p_shared_owners);
    while (__stlxr(v24 - 1, p_shared_owners));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_20B3E5DCC(int a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  unint64_t v84;
  std::__shared_weak_count *v85;
  unint64_t *v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  std::__shared_weak_count *v92;
  unint64_t *v93;
  unint64_t v94;
  unint64_t v95;
  std::__shared_weak_count *v96;
  unint64_t *v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  unint64_t *v104;
  unint64_t v105;
  unint64_t v106;
  std::__shared_weak_count *v107;
  unint64_t *v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  std::__shared_weak_count *v113;
  unint64_t *v114;
  unint64_t v115;
  unint64_t v116;
  std::__shared_weak_count *v117;
  unint64_t *v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  std::__shared_weak_count *v124;
  unint64_t *v125;
  unint64_t v126;
  unint64_t v127;
  std::__shared_weak_count *v128;
  unint64_t *v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  std::__shared_weak_count *v135;
  unint64_t *v136;
  unint64_t v137;
  unint64_t v138;
  std::__shared_weak_count *v139;
  unint64_t *v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  std::__shared_weak_count *v145;
  unint64_t *v146;
  unint64_t v147;
  unint64_t v148;
  std::__shared_weak_count *v149;
  unint64_t *v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  int v154;
  uint64_t v155;
  std::__shared_weak_count *v156;
  unint64_t *v157;
  unint64_t v158;
  unint64_t v159;
  std::__shared_weak_count *v160;
  unint64_t *v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  std::__shared_weak_count *v167;
  unint64_t *v168;
  unint64_t v169;
  unint64_t v170;
  std::__shared_weak_count *v171;
  unint64_t *v172;
  unint64_t v173;
  unint64_t v174;
  uint64_t v175;
  int v176;
  uint64_t v177;
  std::__shared_weak_count *v178;
  unint64_t *v179;
  unint64_t v180;
  unint64_t v181;
  std::__shared_weak_count *v182;
  unint64_t *v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  std::__shared_weak_count *v188;
  unint64_t *v189;
  unint64_t v190;
  unint64_t v191;
  std::__shared_weak_count *v192;
  unint64_t *v193;
  unint64_t v194;
  unint64_t v195;
  uint64_t v196;
  int v197;
  uint64_t v198;
  std::__shared_weak_count *v199;
  unint64_t *v200;
  unint64_t v201;
  unint64_t v202;
  std::__shared_weak_count *v203;
  unint64_t *v204;
  unint64_t v205;
  unint64_t v206;
  uint64_t v207;
  int v208;
  uint64_t v209;
  std::__shared_weak_count *v210;
  unint64_t *v211;
  unint64_t v212;
  unint64_t v213;
  std::__shared_weak_count *v214;
  unint64_t *v215;
  unint64_t v216;
  unint64_t v217;
  uint64_t v218;
  int v219;
  uint64_t v220;
  std::__shared_weak_count *v221;
  unint64_t *v222;
  unint64_t v223;
  unint64_t v224;
  std::__shared_weak_count *v225;
  unint64_t *v226;
  unint64_t v227;
  unint64_t v228;
  uint64_t v229;
  int v230;
  uint64_t v231;
  std::__shared_weak_count *v232;
  unint64_t *v233;
  unint64_t v234;
  unint64_t v235;
  std::__shared_weak_count *v236;
  unint64_t *v237;
  unint64_t v238;
  unint64_t v239;
  uint64_t v240;
  int v241;
  uint64_t v242;
  std::__shared_weak_count *v243;
  unint64_t *v244;
  unint64_t v245;
  unint64_t v246;
  std::__shared_weak_count *v247;
  unint64_t *v248;
  unint64_t v249;
  unint64_t v250;
  uint64_t v251;
  int v252;
  uint64_t v253;
  std::__shared_weak_count *v254;
  unint64_t *v255;
  unint64_t v256;
  unint64_t v257;
  std::__shared_weak_count *v258;
  unint64_t *v259;
  unint64_t v260;
  unint64_t v261;
  uint64_t v262;
  uint64_t v263;
  std::__shared_weak_count *v264;
  unint64_t *v265;
  unint64_t v266;
  unint64_t v267;
  std::__shared_weak_count *v268;
  unint64_t *v269;
  unint64_t v270;
  unint64_t v271;
  uint64_t v272;
  int v273;
  uint64_t v274;
  std::__shared_weak_count *v275;
  unint64_t *v276;
  unint64_t v277;
  unint64_t v278;
  std::__shared_weak_count *v279;
  unint64_t *v280;
  unint64_t v281;
  unint64_t v282;
  uint64_t v283;
  int v284;
  uint64_t v285;
  std::__shared_weak_count *v286;
  unint64_t *v287;
  unint64_t v288;
  unint64_t v289;
  std::__shared_weak_count *v290;
  unint64_t *v291;
  unint64_t v292;
  unint64_t v293;
  uint64_t v294;
  int v295;
  uint64_t v296;
  std::__shared_weak_count *v297;
  unint64_t *v298;
  unint64_t v299;
  unint64_t v300;
  std::__shared_weak_count *v301;
  unint64_t *v302;
  unint64_t v303;
  unint64_t v304;
  uint64_t v305;
  uint64_t v306;
  std::__shared_weak_count *v307;
  unint64_t *v308;
  unint64_t v309;
  unint64_t v310;
  std::__shared_weak_count *v311;
  unint64_t *v312;
  unint64_t v313;
  unint64_t v314;
  uint64_t v315;
  uint64_t v316;
  std::__shared_weak_count *v317;
  unint64_t *v318;
  unint64_t v319;
  unint64_t v320;
  std::__shared_weak_count *v321;
  unint64_t *v322;
  unint64_t v323;
  unint64_t v324;
  uint64_t v325;
  int v326;
  uint64_t v327;
  std::__shared_weak_count *v328;
  unint64_t *v329;
  unint64_t v330;
  unint64_t v331;
  std::__shared_weak_count *v332;
  unint64_t *v333;
  unint64_t v334;
  unint64_t v335;
  uint64_t v336;
  uint64_t v337;
  std::__shared_weak_count *v338;
  unint64_t *v339;
  unint64_t v340;
  unint64_t v341;
  std::__shared_weak_count *v342;
  unint64_t *v343;
  unint64_t v344;
  unint64_t v345;
  uint64_t v346;
  uint64_t v347;
  std::__shared_weak_count *v348;
  unint64_t *v349;
  unint64_t v350;
  unint64_t v351;
  std::__shared_weak_count *v352;
  unint64_t *v353;
  unint64_t v354;
  unint64_t v355;
  uint64_t v356;
  int v357;
  uint64_t v358;
  std::__shared_weak_count *v359;
  unint64_t *v360;
  unint64_t v361;
  unint64_t v362;
  std::__shared_weak_count *v363;
  unint64_t *v364;
  unint64_t v365;
  unint64_t v366;
  uint64_t v367;
  uint64_t v368;
  std::__shared_weak_count *v369;
  unint64_t *v370;
  unint64_t v371;
  unint64_t v372;
  std::__shared_weak_count *v373;
  unint64_t *v374;
  unint64_t v375;
  unint64_t v376;
  uint64_t v377;
  int v378;
  uint64_t v379;
  std::__shared_weak_count *v380;
  unint64_t *v381;
  unint64_t v382;
  unint64_t v383;
  std::__shared_weak_count *v384;
  unint64_t *v385;
  unint64_t v386;
  unint64_t v387;
  uint64_t v388;
  int v389;
  uint64_t v390;
  std::__shared_weak_count *v391;
  unint64_t *v392;
  unint64_t v393;
  unint64_t v394;
  std::__shared_weak_count *v395;
  unint64_t *v396;
  unint64_t v397;
  unint64_t v398;
  uint64_t v399;
  uint64_t v400;
  std::__shared_weak_count *v401;
  unint64_t *v402;
  unint64_t v403;
  unint64_t v404;
  std::__shared_weak_count *v405;
  unint64_t *v406;
  unint64_t v407;
  unint64_t v408;
  uint64_t v409;
  uint64_t v410;
  std::__shared_weak_count *v411;
  unint64_t *v412;
  unint64_t v413;
  unint64_t v414;
  std::__shared_weak_count *v415;
  unint64_t *v416;
  unint64_t v417;
  unint64_t v418;
  uint64_t v419;
  uint64_t v420;
  std::__shared_weak_count *v421;
  unint64_t *v422;
  unint64_t v423;
  unint64_t v424;
  std::__shared_weak_count *v425;
  unint64_t *v426;
  unint64_t v427;
  unint64_t v428;
  int v429;
  uint64_t v430;
  __int16 *v431;
  uint64_t v432;
  std::__shared_weak_count *v433;
  unint64_t *v434;
  unint64_t v435;
  unint64_t v436;
  int v437;
  int mm;
  uint64_t v439;
  int v440;
  uint64_t v441;
  __int16 *v442;
  uint64_t v443;
  std::__shared_weak_count *v444;
  unint64_t *v445;
  unint64_t v446;
  unint64_t v447;
  int v448;
  uint64_t v449;
  int v450;
  uint64_t v451;
  _WORD *v452;
  uint64_t v453;
  std::__shared_weak_count *v454;
  unint64_t *v455;
  unint64_t v456;
  unint64_t v457;
  uint64_t v458;
  int v459;
  uint64_t kk;
  int v461;
  uint64_t v462;
  _WORD *v463;
  uint64_t v464;
  std::__shared_weak_count *v465;
  unint64_t *v466;
  unint64_t v467;
  unint64_t v468;
  int v469;
  uint64_t v470;
  int v471;
  uint64_t v472;
  _WORD *v473;
  uint64_t v474;
  std::__shared_weak_count *v475;
  unint64_t *v476;
  unint64_t v477;
  unint64_t v478;
  uint64_t v479;
  int v480;
  uint64_t nn;
  int v482;
  uint64_t v483;
  _WORD *v484;
  uint64_t v485;
  std::__shared_weak_count *v486;
  unint64_t *v487;
  unint64_t v488;
  unint64_t v489;
  int v490;
  uint64_t v491;
  int v492;
  uint64_t v493;
  _WORD *v494;
  uint64_t v495;
  std::__shared_weak_count *v496;
  unint64_t *v497;
  unint64_t v498;
  unint64_t v499;
  int v500;
  uint64_t v501;
  int v502;
  uint64_t v503;
  _WORD *v504;
  uint64_t v505;
  std::__shared_weak_count *v506;
  unint64_t *v507;
  unint64_t v508;
  unint64_t v509;
  uint64_t v510;
  int v511;
  uint64_t ii;
  int v513;
  uint64_t v514;
  _WORD *v515;
  uint64_t v516;
  std::__shared_weak_count *v517;
  unint64_t *v518;
  unint64_t v519;
  unint64_t v520;
  int v521;
  uint64_t v522;
  int v523;
  uint64_t v524;
  _WORD *v525;
  uint64_t v526;
  std::__shared_weak_count *v527;
  unint64_t *v528;
  unint64_t v529;
  unint64_t v530;
  int v531;
  uint64_t v532;
  int v533;
  uint64_t v534;
  __int16 *v535;
  uint64_t v536;
  std::__shared_weak_count *v537;
  unint64_t *v538;
  unint64_t v539;
  unint64_t v540;
  int v541;
  int n;
  uint64_t v543;
  int v544;
  uint64_t v545;
  __int16 *v546;
  uint64_t v547;
  std::__shared_weak_count *v548;
  unint64_t *v549;
  unint64_t v550;
  unint64_t v551;
  int v552;
  int i5;
  uint64_t v554;
  int v555;
  uint64_t v556;
  _WORD *v557;
  uint64_t v558;
  std::__shared_weak_count *v559;
  unint64_t *v560;
  unint64_t v561;
  unint64_t v562;
  int v563;
  uint64_t v564;
  int v565;
  uint64_t v566;
  _WORD *v567;
  uint64_t v568;
  std::__shared_weak_count *v569;
  unint64_t *v570;
  unint64_t v571;
  unint64_t v572;
  int v573;
  uint64_t v574;
  int v575;
  uint64_t v576;
  __int16 *v577;
  uint64_t v578;
  std::__shared_weak_count *v579;
  unint64_t *v580;
  unint64_t v581;
  unint64_t v582;
  int v583;
  int i1;
  uint64_t v585;
  int v586;
  uint64_t v587;
  _WORD *v588;
  uint64_t v589;
  std::__shared_weak_count *v590;
  unint64_t *v591;
  unint64_t v592;
  unint64_t v593;
  int v594;
  uint64_t v595;
  int v596;
  uint64_t v597;
  _WORD *v598;
  uint64_t v599;
  std::__shared_weak_count *v600;
  unint64_t *v601;
  unint64_t v602;
  unint64_t v603;
  int v604;
  uint64_t v605;
  int v606;
  uint64_t v607;
  _WORD *v608;
  uint64_t v609;
  std::__shared_weak_count *v610;
  unint64_t *v611;
  unint64_t v612;
  unint64_t v613;
  int v614;
  uint64_t v615;
  int v616;
  uint64_t v617;
  _WORD *v618;
  uint64_t v619;
  std::__shared_weak_count *v620;
  unint64_t *v621;
  unint64_t v622;
  unint64_t v623;
  int v624;
  uint64_t v625;
  int v626;
  uint64_t v627;
  __int16 *v628;
  uint64_t v629;
  std::__shared_weak_count *v630;
  unint64_t *v631;
  unint64_t v632;
  unint64_t v633;
  int v634;
  int i3;
  uint64_t v636;
  int v637;
  uint64_t v638;
  _WORD *v639;
  uint64_t v640;
  std::__shared_weak_count *v641;
  unint64_t *v642;
  unint64_t v643;
  unint64_t v644;
  int v645;
  uint64_t v646;
  int v647;
  uint64_t v648;
  _WORD *v649;
  uint64_t v650;
  std::__shared_weak_count *v651;
  unint64_t *v652;
  unint64_t v653;
  unint64_t v654;
  int v655;
  uint64_t v656;
  int v657;
  uint64_t v658;
  _WORD *v659;
  uint64_t v660;
  std::__shared_weak_count *v661;
  unint64_t *v662;
  unint64_t v663;
  unint64_t v664;
  int v665;
  uint64_t v666;
  int v667;
  uint64_t v668;
  _WORD *v669;
  uint64_t v670;
  std::__shared_weak_count *v671;
  unint64_t *v672;
  unint64_t v673;
  unint64_t v674;
  uint64_t v675;
  int v676;
  uint64_t v677;
  int v678;
  uint64_t v679;
  _WORD *v680;
  uint64_t v681;
  std::__shared_weak_count *v682;
  unint64_t *v683;
  unint64_t v684;
  unint64_t v685;
  uint64_t v686;
  int v687;
  uint64_t m;
  int v689;
  uint64_t v690;
  _WORD *v691;
  uint64_t v692;
  std::__shared_weak_count *v693;
  unint64_t *v694;
  unint64_t v695;
  unint64_t v696;
  int v697;
  uint64_t v698;
  int v699;
  uint64_t v700;
  _WORD *v701;
  uint64_t v702;
  std::__shared_weak_count *v703;
  unint64_t *v704;
  unint64_t v705;
  unint64_t v706;
  int v707;
  uint64_t v708;
  int v709;
  uint64_t v710;
  __int16 *v711;
  uint64_t v712;
  std::__shared_weak_count *v713;
  unint64_t *v714;
  unint64_t v715;
  unint64_t v716;
  int v717;
  uint64_t k;
  int v719;
  uint64_t v720;
  _WORD *v721;
  uint64_t v722;
  std::__shared_weak_count *v723;
  unint64_t *v724;
  unint64_t v725;
  unint64_t v726;
  int v727;
  uint64_t j;
  int v729;
  uint64_t v730;
  _WORD *v731;
  uint64_t v732;
  std::__shared_weak_count *v733;
  unint64_t *v734;
  unint64_t v735;
  unint64_t v736;
  int v737;
  uint64_t i;
  int v739;
  uint64_t v740;
  _WORD *v741;
  uint64_t v742;
  std::__shared_weak_count *v743;
  unint64_t *v744;
  unint64_t v745;
  unint64_t v746;
  uint64_t v747;
  int v748;
  uint64_t i4;
  int v750;
  uint64_t v751;
  __int16 *v752;
  uint64_t v753;
  std::__shared_weak_count *v754;
  unint64_t *v755;
  unint64_t v756;
  unint64_t v757;
  int v758;
  uint64_t v759;
  int v760;
  uint64_t v761;
  _WORD *v762;
  uint64_t v763;
  std::__shared_weak_count *v764;
  unint64_t *v765;
  unint64_t v766;
  unint64_t v767;
  int v768;
  uint64_t v769;
  int v770;
  uint64_t v771;
  _WORD *v772;
  uint64_t v773;
  std::__shared_weak_count *v774;
  unint64_t *v775;
  unint64_t v776;
  unint64_t v777;
  uint64_t v778;
  int v779;
  uint64_t i2;
  int v781;
  uint64_t v782;
  _WORD *v783;
  uint64_t v784;
  std::__shared_weak_count *v785;
  unint64_t *v786;
  unint64_t v787;
  unint64_t v788;
  int v789;
  uint64_t v790;
  int v791;
  uint64_t v792;
  _WORD *v793;
  uint64_t v794;
  std::__shared_weak_count *v795;
  unint64_t *v796;
  unint64_t v797;
  unint64_t v798;
  int v799;
  uint64_t v800;
  int v801;
  uint64_t v802;
  __int16 *v803;
  uint64_t v804;
  std::__shared_weak_count *v805;
  unint64_t *v806;
  unint64_t v807;
  unint64_t v808;
  int v809;
  int jj;
  uint64_t v811;
  int v812;
  uint64_t v813;
  _WORD *v814;
  uint64_t v815;
  std::__shared_weak_count *v816;
  unint64_t *v817;
  unint64_t v818;
  unint64_t v819;
  uint64_t v820;
  int v821;
  uint64_t v822;
  int v823;
  uint64_t v824;
  __int16 *v825;
  uint64_t v826;
  std::__shared_weak_count *v827;
  unint64_t *v828;
  unint64_t v829;
  unint64_t v830;
  int v831;
  uint64_t v832;
  int v833;
  uint64_t v834;
  _WORD *v835;
  uint64_t v836;
  std::__shared_weak_count *v837;
  unint64_t *v838;
  unint64_t v839;
  unint64_t v840;
  uint64_t v841;
  int v842;
  uint64_t v843;
  uint64_t v844;
  uint64_t v845;
  std::__shared_weak_count *v846;
  unint64_t *v847;
  unint64_t v848;
  uint64_t v849;
  uint64_t v850;
  unint64_t *v851;
  uint64_t v852;
  unint64_t *v853;
  uint64_t v854;
  uint64_t v855;
  unint64_t *v856;
  uint64_t v857;
  unint64_t *v858;
  uint64_t v859;
  uint64_t v860;
  unint64_t *v861;
  uint64_t v862;
  uint64_t v863;
  unint64_t *v864;
  uint64_t v865;
  unint64_t *v866;
  uint64_t v867;
  uint64_t v868;
  unint64_t *v869;
  uint64_t v870;
  uint64_t v871;
  unint64_t *v872;
  uint64_t v873;
  uint64_t v874;
  unint64_t *v875;
  uint64_t v876;
  uint64_t v877;
  unint64_t *v878;
  uint64_t v879;
  uint64_t v880;
  unint64_t *v881;
  uint64_t v882;
  uint64_t v883;
  unint64_t *v884;
  uint64_t v885;
  uint64_t v886;
  unint64_t *v887;
  uint64_t v888;
  uint64_t v889;
  unint64_t *v890;
  uint64_t v891;
  uint64_t v892;
  unint64_t *v893;
  uint64_t v894;
  uint64_t v895;
  unint64_t *v896;
  uint64_t v897;
  uint64_t v898;
  unint64_t *v899;
  uint64_t v900;
  uint64_t v901;
  unint64_t *v902;
  uint64_t v903;
  uint64_t v904;
  unint64_t *v905;
  uint64_t v906;
  uint64_t v907;
  unint64_t *v908;
  uint64_t v909;
  uint64_t v910;
  unint64_t *v911;
  uint64_t v912;
  unint64_t *v913;
  uint64_t v914;
  unint64_t *v915;
  uint64_t v916;
  uint64_t v917;
  unint64_t *v918;
  uint64_t v919;
  uint64_t v920;
  unint64_t *v921;
  uint64_t v922;
  uint64_t v923;
  unint64_t *v924;
  uint64_t v925;
  uint64_t v926;
  unint64_t *v927;
  uint64_t v928;
  unint64_t *v929;
  uint64_t v930;
  unint64_t *v931;
  uint64_t v932;
  uint64_t v933;
  unint64_t *v934;
  uint64_t v935;
  uint64_t v936;
  unint64_t *v937;
  uint64_t v938;
  unint64_t *v939;
  uint64_t v940;
  uint64_t v941;
  unint64_t *v942;
  uint64_t v943;
  uint64_t v944;
  unint64_t *v945;
  uint64_t v946;
  uint64_t v947;
  unint64_t *v948;
  uint64_t v949;
  unint64_t *v950;
  uint64_t v951;
  uint64_t v952;
  unint64_t *v953;
  uint64_t v954;
  unint64_t *v955;
  uint64_t v956;
  uint64_t v957;
  uint64_t v958;
  uint64_t v959;
  uint64_t v960;
  uint64_t v961;
  uint64_t v962;
  uint64_t v963;
  uint64_t v964;
  int v965;
  int v966;
  int v967;
  int v968;
  int v969;
  uint64_t v970;
  int v971;
  uint64_t v972;
  uint64_t v973;
  int v974;
  int v975;
  int v976;
  int v977;
  int v978;
  int v979;
  uint64_t v980;
  uint64_t v981;
  uint64_t v982;
  uint64_t v983;
  uint64_t v984;
  uint64_t v985;
  uint64_t v986;
  uint64_t v987;
  uint64_t v988;
  uint64_t v989;
  uint64_t v990;
  uint64_t v991;
  uint64_t v992;
  uint64_t v993;
  uint64_t v994;
  uint64_t v995;
  uint64_t v996;
  uint64_t v997;
  __int16 v998;
  uint64_t (**v999)();
  uint64_t v1000;
  std::__shared_weak_count *v1001;
  _WORD *v1002;
  unsigned int v1003;
  int v1004;
  int v1005;
  unsigned int v1006;
  char v1007;
  char v1008;
  unsigned int v1009;
  int v1010;
  char v1011;
  char v1012;
  uint64_t v1013;

  switch(a1)
  {
    case 0:
      sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_20B532360);
      abort();
    case 1:
      v999 = &off_24C4051D0;
      sub_20B2D6D24(a3, (uint64_t)&v1000);
      v4 = *a2;
      v5 = v1003;
      v6 = v1000;
      if (!v1000)
        goto LABEL_1324;
      v7 = v1001;
      if (v1001)
      {
        p_shared_owners = (unint64_t *)&v1001->__shared_owners_;
        do
          v9 = __ldxr(p_shared_owners);
        while (__stxr(v9 + 1, p_shared_owners));
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        v6 = v1000;
        v11 = v1001;
        if (v1001)
        {
          v12 = (unint64_t *)&v1001->__shared_owners_;
          do
            v13 = __ldxr(v12);
          while (__stxr(v13 + 1, v12));
          do
            v14 = __ldaxr(v12);
          while (__stlxr(v14 - 1, v12));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
      }
      if (v1008)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v1013, v6, 0);
      else
LABEL_1324:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1856;
      v729 = v1004;
      if (!v1004)
        goto LABEL_1856;
      v730 = v1006;
      v731 = v1002;
      if (v1007 && v1002)
      {
        v732 = v1000;
        v733 = v1001;
        if (v1001)
        {
          v734 = (unint64_t *)&v1001->__shared_owners_;
          do
            v735 = __ldxr(v734);
          while (__stxr(v735 + 1, v734));
          do
            v736 = __ldaxr(v734);
          while (__stlxr(v736 - 1, v734));
          if (!v736)
          {
            ((void (*)(std::__shared_weak_count *))v733->__on_zero_shared)(v733);
            std::__shared_weak_count::__release_weak(v733);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v732 + 88))(v732, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v731 = v1002;
      }
      if (v729 == 1)
        goto LABEL_1344;
      if (!(_DWORD)v5)
        goto LABEL_1856;
      v737 = 0;
      do
      {
        if (!v731
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1347;
        }
        for (i = 0; i != v5; ++i)
          (*(void (**)(uint64_t, char *))(*(_QWORD *)v4 + 80))(v4, (char *)v731 + i);
        v731 = (_WORD *)((char *)v731 + v730);
        ++v737;
      }
      while (v737 != v729 - 1);
LABEL_1344:
      if (!(_DWORD)v5 || v731)
      {
        if (!(_DWORD)v5)
          goto LABEL_1856;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1347:
        abort();
      }
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v4 + 80))(v4, v731);
        v731 = (_WORD *)((char *)v731 + 1);
        --v5;
      }
      while (v5);
LABEL_1856:
      v928 = v1013;
      v1013 = 0;
      if (v928)
        (*(void (**)(uint64_t))(*(_QWORD *)v928 + 8))(v928);
      v846 = v1001;
      if (!v1001)
        return;
      v929 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v929);
      while (__stlxr(v848 - 1, v929));
      goto LABEL_1947;
    case 2:
      v999 = &off_24C405448;
      sub_20B2D7590(a3, (uint64_t)&v1000);
      v315 = *a2;
      v973 = v1003;
      v316 = v1000;
      if (!v1000)
        goto LABEL_1300;
      v317 = v1001;
      if (v1001)
      {
        v318 = (unint64_t *)&v1001->__shared_owners_;
        do
          v319 = __ldxr(v318);
        while (__stxr(v319 + 1, v318));
        do
          v320 = __ldaxr(v318);
        while (__stlxr(v320 - 1, v318));
        if (!v320)
        {
          ((void (*)(std::__shared_weak_count *))v317->__on_zero_shared)(v317);
          std::__shared_weak_count::__release_weak(v317);
        }
        v316 = v1000;
        v321 = v1001;
        if (v1001)
        {
          v322 = (unint64_t *)&v1001->__shared_owners_;
          do
            v323 = __ldxr(v322);
          while (__stxr(v323 + 1, v322));
          do
            v324 = __ldaxr(v322);
          while (__stlxr(v324 - 1, v322));
          if (!v324)
          {
            ((void (*)(std::__shared_weak_count *))v321->__on_zero_shared)(v321);
            std::__shared_weak_count::__release_weak(v321);
          }
        }
      }
      if (v1008)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v316 + 96))(&v1013, v316, 0);
      else
LABEL_1300:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1848;
      v719 = v1004;
      if (!v1004)
        goto LABEL_1848;
      v720 = v1006;
      v721 = v1002;
      if (v1007 && v1002)
      {
        v722 = v1000;
        v723 = v1001;
        if (v1001)
        {
          v724 = (unint64_t *)&v1001->__shared_owners_;
          do
            v725 = __ldxr(v724);
          while (__stxr(v725 + 1, v724));
          do
            v726 = __ldaxr(v724);
          while (__stlxr(v726 - 1, v724));
          if (!v726)
          {
            ((void (*)(std::__shared_weak_count *))v723->__on_zero_shared)(v723);
            std::__shared_weak_count::__release_weak(v723);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v722 + 88))(v722, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v721 = v1002;
      }
      if (v719 == 1)
        goto LABEL_1320;
      if (!(_DWORD)v973)
        goto LABEL_1848;
      v727 = 0;
      do
      {
        if (!v721
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1323;
        }
        for (j = 0; j != v973; ++j)
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v315 + 96))(v315, &v721[j]);
        v721 += v720;
        ++v727;
      }
      while (v727 != v719 - 1);
LABEL_1320:
      if (!(_DWORD)v973 || v721)
      {
        if (!(_DWORD)v973)
          goto LABEL_1848;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1323:
        abort();
      }
      v925 = 2 * v973;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v315 + 96))(v315, v721++);
        v925 -= 2;
      }
      while (v925);
LABEL_1848:
      v926 = v1013;
      v1013 = 0;
      if (v926)
        (*(void (**)(uint64_t))(*(_QWORD *)v926 + 8))(v926);
      v846 = v1001;
      if (!v1001)
        return;
      v927 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v927);
      while (__stlxr(v848 - 1, v927));
      goto LABEL_1947;
    case 3:
      v999 = &off_24C405688;
      sub_20B372128(a3, (uint64_t)&v1000);
      v305 = *a2;
      v972 = v1003;
      v306 = v1000;
      if (!v1000)
        goto LABEL_1276;
      v307 = v1001;
      if (v1001)
      {
        v308 = (unint64_t *)&v1001->__shared_owners_;
        do
          v309 = __ldxr(v308);
        while (__stxr(v309 + 1, v308));
        do
          v310 = __ldaxr(v308);
        while (__stlxr(v310 - 1, v308));
        if (!v310)
        {
          ((void (*)(std::__shared_weak_count *))v307->__on_zero_shared)(v307);
          std::__shared_weak_count::__release_weak(v307);
        }
        v306 = v1000;
        v311 = v1001;
        if (v1001)
        {
          v312 = (unint64_t *)&v1001->__shared_owners_;
          do
            v313 = __ldxr(v312);
          while (__stxr(v313 + 1, v312));
          do
            v314 = __ldaxr(v312);
          while (__stlxr(v314 - 1, v312));
          if (!v314)
          {
            ((void (*)(std::__shared_weak_count *))v311->__on_zero_shared)(v311);
            std::__shared_weak_count::__release_weak(v311);
          }
        }
      }
      if (v1008)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v306 + 96))(&v1013, v306, 0);
      else
LABEL_1276:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1839;
      v709 = v1004;
      if (!v1004)
        goto LABEL_1839;
      v710 = v1006;
      v711 = v1002;
      if (v1007 && v1002)
      {
        v712 = v1000;
        v713 = v1001;
        if (v1001)
        {
          v714 = (unint64_t *)&v1001->__shared_owners_;
          do
            v715 = __ldxr(v714);
          while (__stxr(v715 + 1, v714));
          do
            v716 = __ldaxr(v714);
          while (__stlxr(v716 - 1, v714));
          if (!v716)
          {
            ((void (*)(std::__shared_weak_count *))v713->__on_zero_shared)(v713);
            std::__shared_weak_count::__release_weak(v713);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v712 + 88))(v712, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v711 = v1002;
      }
      if (v709 == 1)
        goto LABEL_1296;
      if (!(_DWORD)v972)
        goto LABEL_1839;
      v717 = 0;
      do
      {
        if (!v711
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1299;
        }
        for (k = 0; k != v972; ++k)
        {
          v998 = v711[k];
          (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v305 + 96))(v305, &v998);
        }
        v711 += v710;
        ++v717;
      }
      while (v717 != v709 - 1);
LABEL_1296:
      if (!(_DWORD)v972 || v711)
      {
        if (!(_DWORD)v972)
          goto LABEL_1839;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1299:
        abort();
      }
      v922 = 2 * v972;
      do
      {
        v998 = *v711;
        (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v305 + 96))(v305, &v998);
        ++v711;
        v922 -= 2;
      }
      while (v922);
LABEL_1839:
      v923 = v1013;
      v1013 = 0;
      if (v923)
        (*(void (**)(uint64_t))(*(_QWORD *)v923 + 8))(v923);
      v846 = v1001;
      if (!v1001)
        return;
      v924 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v924);
      while (__stlxr(v848 - 1, v924));
      goto LABEL_1947;
    case 4:
      v999 = &off_24C405900;
      sub_20B3726DC(a3, (uint64_t)&v1000);
      v186 = *a2;
      v970 = v1003;
      v187 = v1000;
      if (!v1000)
        goto LABEL_1002;
      v188 = v1001;
      if (v1001)
      {
        v189 = (unint64_t *)&v1001->__shared_owners_;
        do
          v190 = __ldxr(v189);
        while (__stxr(v190 + 1, v189));
        do
          v191 = __ldaxr(v189);
        while (__stlxr(v191 - 1, v189));
        if (!v191)
        {
          ((void (*)(std::__shared_weak_count *))v188->__on_zero_shared)(v188);
          std::__shared_weak_count::__release_weak(v188);
        }
        v187 = v1000;
        v192 = v1001;
        if (v1001)
        {
          v193 = (unint64_t *)&v1001->__shared_owners_;
          do
            v194 = __ldxr(v193);
          while (__stxr(v194 + 1, v193));
          do
            v195 = __ldaxr(v193);
          while (__stlxr(v195 - 1, v193));
          if (!v195)
          {
            ((void (*)(std::__shared_weak_count *))v192->__on_zero_shared)(v192);
            std::__shared_weak_count::__release_weak(v192);
          }
        }
      }
      if (v1008)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v187 + 96))(&v1013, v187, 0);
      else
LABEL_1002:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1742;
      v596 = v1004;
      if (!v1004)
        goto LABEL_1742;
      v597 = v1006;
      v598 = v1002;
      if (v1007 && v1002)
      {
        v599 = v1000;
        v600 = v1001;
        if (v1001)
        {
          v601 = (unint64_t *)&v1001->__shared_owners_;
          do
            v602 = __ldxr(v601);
          while (__stxr(v602 + 1, v601));
          do
            v603 = __ldaxr(v601);
          while (__stlxr(v603 - 1, v601));
          if (!v603)
          {
            ((void (*)(std::__shared_weak_count *))v600->__on_zero_shared)(v600);
            std::__shared_weak_count::__release_weak(v600);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v599 + 88))(v599, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v598 = v1002;
      }
      if (v596 == 1)
        goto LABEL_1022;
      if (!(_DWORD)v970)
        goto LABEL_1742;
      v604 = 0;
      do
      {
        if (!v598
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1025;
        }
        v605 = 0;
        do
        {
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v186 + 128))(v186, &v598[v605]);
          v605 += 2;
        }
        while (2 * v970 != v605);
        v598 += 2 * v597;
        ++v604;
      }
      while (v604 != v596 - 1);
LABEL_1022:
      if (!(_DWORD)v970 || v598)
      {
        if (!(_DWORD)v970)
          goto LABEL_1742;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1025:
        abort();
      }
      v891 = 4 * v970;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v186 + 128))(v186, v598);
        v598 += 2;
        v891 -= 4;
      }
      while (v891);
LABEL_1742:
      v892 = v1013;
      v1013 = 0;
      if (v892)
        (*(void (**)(uint64_t))(*(_QWORD *)v892 + 8))(v892);
      v846 = v1001;
      if (!v1001)
        return;
      v893 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v893);
      while (__stlxr(v848 - 1, v893));
      goto LABEL_1947;
    case 5:
      v999 = &off_24C405B78;
      sub_20B372C90(a3, (uint64_t)&v1000);
      v272 = *a2;
      v273 = v1010;
      v274 = v1000;
      if (!v1000)
        goto LABEL_1201;
      v275 = v1001;
      if (v1001)
      {
        v276 = (unint64_t *)&v1001->__shared_owners_;
        do
          v277 = __ldxr(v276);
        while (__stxr(v277 + 1, v276));
        do
          v278 = __ldaxr(v276);
        while (__stlxr(v278 - 1, v276));
        if (!v278)
        {
          ((void (*)(std::__shared_weak_count *))v275->__on_zero_shared)(v275);
          std::__shared_weak_count::__release_weak(v275);
        }
        v274 = v1000;
        v279 = v1001;
        if (v1001)
        {
          v280 = (unint64_t *)&v1001->__shared_owners_;
          do
            v281 = __ldxr(v280);
          while (__stxr(v281 + 1, v280));
          do
            v282 = __ldaxr(v280);
          while (__stlxr(v282 - 1, v280));
          if (!v282)
          {
            ((void (*)(std::__shared_weak_count *))v279->__on_zero_shared)(v279);
            std::__shared_weak_count::__release_weak(v279);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v274 + 96))(&v1013, v274, 0);
      else
LABEL_1201:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1812;
      if (!v1004)
        goto LABEL_1812;
      v678 = v1005;
      if (!v1005)
        goto LABEL_1812;
      v679 = v1009;
      v680 = v1002;
      if (v1011 && v1002)
      {
        v681 = v1000;
        v682 = v1001;
        if (v1001)
        {
          v683 = (unint64_t *)&v1001->__shared_owners_;
          do
            v684 = __ldxr(v683);
          while (__stxr(v684 + 1, v683));
          do
            v685 = __ldaxr(v683);
          while (__stlxr(v685 - 1, v683));
          if (!v685)
          {
            ((void (*)(std::__shared_weak_count *))v682->__on_zero_shared)(v682);
            std::__shared_weak_count::__release_weak(v682);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v681 + 88))(v681, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v680 = v1002;
      }
      v686 = (2 * v273);
      if (v678 == 1)
        goto LABEL_1222;
      if (!(_DWORD)v686)
        goto LABEL_1812;
      v687 = 0;
      do
      {
        if (!v680
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1225;
        }
        for (m = 0; m != v686; ++m)
          (*(void (**)(uint64_t, char *))(*(_QWORD *)v272 + 80))(v272, (char *)v680 + m);
        v680 = (_WORD *)((char *)v680 + v679);
        ++v687;
      }
      while (v687 != v678 - 1);
LABEL_1222:
      if (!(_DWORD)v686 || v680)
      {
        if (!(_DWORD)v686)
          goto LABEL_1812;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1225:
        abort();
      }
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v272 + 80))(v272, v680);
        v680 = (_WORD *)((char *)v680 + 1);
        --v686;
      }
      while (v686);
LABEL_1812:
      v914 = v1013;
      v1013 = 0;
      if (v914)
        (*(void (**)(uint64_t))(*(_QWORD *)v914 + 8))(v914);
      v846 = v1001;
      if (!v1001)
        return;
      v915 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v915);
      while (__stlxr(v848 - 1, v915));
      goto LABEL_1947;
    case 6:
      v999 = &off_24C405DF0;
      sub_20B3732C4(a3, (uint64_t)&v1000);
      v175 = *a2;
      v176 = v1010;
      v177 = v1000;
      if (!v1000)
        goto LABEL_977;
      v178 = v1001;
      if (v1001)
      {
        v179 = (unint64_t *)&v1001->__shared_owners_;
        do
          v180 = __ldxr(v179);
        while (__stxr(v180 + 1, v179));
        do
          v181 = __ldaxr(v179);
        while (__stlxr(v181 - 1, v179));
        if (!v181)
        {
          ((void (*)(std::__shared_weak_count *))v178->__on_zero_shared)(v178);
          std::__shared_weak_count::__release_weak(v178);
        }
        v177 = v1000;
        v182 = v1001;
        if (v1001)
        {
          v183 = (unint64_t *)&v1001->__shared_owners_;
          do
            v184 = __ldxr(v183);
          while (__stxr(v184 + 1, v183));
          do
            v185 = __ldaxr(v183);
          while (__stlxr(v185 - 1, v183));
          if (!v185)
          {
            ((void (*)(std::__shared_weak_count *))v182->__on_zero_shared)(v182);
            std::__shared_weak_count::__release_weak(v182);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v177 + 96))(&v1013, v177, 0);
      else
LABEL_977:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1733;
      if (!v1004)
        goto LABEL_1733;
      v586 = v1005;
      if (!v1005)
        goto LABEL_1733;
      v587 = v1009;
      v588 = v1002;
      if (v1011 && v1002)
      {
        v589 = v1000;
        v590 = v1001;
        if (v1001)
        {
          v591 = (unint64_t *)&v1001->__shared_owners_;
          do
            v592 = __ldxr(v591);
          while (__stxr(v592 + 1, v591));
          do
            v593 = __ldaxr(v591);
          while (__stlxr(v593 - 1, v591));
          if (!v593)
          {
            ((void (*)(std::__shared_weak_count *))v590->__on_zero_shared)(v590);
            std::__shared_weak_count::__release_weak(v590);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v589 + 88))(v589, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v588 = v1002;
      }
      v987 = (2 * v176);
      if (v586 == 1)
        goto LABEL_998;
      if (!(2 * v176))
        goto LABEL_1733;
      v594 = 0;
      do
      {
        if (!v588
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1001;
        }
        v595 = 0;
        do
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v175 + 96))(v175, &v588[v595++]);
        while (v987 != v595);
        v588 += v587;
        ++v594;
      }
      while (v594 != v586 - 1);
LABEL_998:
      if (!(_DWORD)v987 || v588)
      {
        if (!(_DWORD)v987)
          goto LABEL_1733;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1001:
        abort();
      }
      v888 = 2 * v987;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v175 + 96))(v175, v588++);
        v888 -= 2;
      }
      while (v888);
LABEL_1733:
      v889 = v1013;
      v1013 = 0;
      if (v889)
        (*(void (**)(uint64_t))(*(_QWORD *)v889 + 8))(v889);
      v846 = v1001;
      if (!v1001)
        return;
      v890 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v890);
      while (__stlxr(v848 - 1, v890));
      goto LABEL_1947;
    case 7:
      v999 = &off_24C406068;
      sub_20B3738FC(a3, (uint64_t)&v1000);
      v121 = *a2;
      v122 = v1010;
      v123 = v1000;
      if (!v1000)
        goto LABEL_852;
      v124 = v1001;
      if (v1001)
      {
        v125 = (unint64_t *)&v1001->__shared_owners_;
        do
          v126 = __ldxr(v125);
        while (__stxr(v126 + 1, v125));
        do
          v127 = __ldaxr(v125);
        while (__stlxr(v127 - 1, v125));
        if (!v127)
        {
          ((void (*)(std::__shared_weak_count *))v124->__on_zero_shared)(v124);
          std::__shared_weak_count::__release_weak(v124);
        }
        v123 = v1000;
        v128 = v1001;
        if (v1001)
        {
          v129 = (unint64_t *)&v1001->__shared_owners_;
          do
            v130 = __ldxr(v129);
          while (__stxr(v130 + 1, v129));
          do
            v131 = __ldaxr(v129);
          while (__stlxr(v131 - 1, v129));
          if (!v131)
          {
            ((void (*)(std::__shared_weak_count *))v128->__on_zero_shared)(v128);
            std::__shared_weak_count::__release_weak(v128);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v123 + 96))(&v1013, v123, 0);
      else
LABEL_852:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1688;
      if (!v1004)
        goto LABEL_1688;
      v533 = v1005;
      if (!v1005)
        goto LABEL_1688;
      v534 = v1009;
      v535 = v1002;
      if (v1011 && v1002)
      {
        v536 = v1000;
        v537 = v1001;
        if (v1001)
        {
          v538 = (unint64_t *)&v1001->__shared_owners_;
          do
            v539 = __ldxr(v538);
          while (__stxr(v539 + 1, v538));
          do
            v540 = __ldaxr(v538);
          while (__stlxr(v540 - 1, v538));
          if (!v540)
          {
            ((void (*)(std::__shared_weak_count *))v537->__on_zero_shared)(v537);
            std::__shared_weak_count::__release_weak(v537);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v536 + 88))(v536, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v535 = v1002;
      }
      v541 = v533 - 1;
      v983 = (2 * v122);
      if (!v541)
        goto LABEL_873;
      if (!(2 * v122))
        goto LABEL_1688;
      for (n = 0; n != v541; ++n)
      {
        if (!v535
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_876;
        }
        v543 = 0;
        do
        {
          v998 = v535[v543];
          (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v121 + 96))(v121, &v998);
          ++v543;
        }
        while (v983 != v543);
        v535 += v534;
      }
LABEL_873:
      if (!(_DWORD)v983 || v535)
      {
        if (!(_DWORD)v983)
          goto LABEL_1688;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_876:
        abort();
      }
      v873 = 2 * v983;
      do
      {
        v998 = *v535;
        (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v121 + 96))(v121, &v998);
        ++v535;
        v873 -= 2;
      }
      while (v873);
LABEL_1688:
      v874 = v1013;
      v1013 = 0;
      if (v874)
        (*(void (**)(uint64_t))(*(_QWORD *)v874 + 8))(v874);
      v846 = v1001;
      if (!v1001)
        return;
      v875 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v875);
      while (__stlxr(v848 - 1, v875));
      goto LABEL_1947;
    case 8:
      v999 = &off_24C4062E0;
      sub_20B373F34(a3, (uint64_t)&v1000);
      v294 = *a2;
      v295 = v1010;
      v296 = v1000;
      if (!v1000)
        goto LABEL_1251;
      v297 = v1001;
      if (v1001)
      {
        v298 = (unint64_t *)&v1001->__shared_owners_;
        do
          v299 = __ldxr(v298);
        while (__stxr(v299 + 1, v298));
        do
          v300 = __ldaxr(v298);
        while (__stlxr(v300 - 1, v298));
        if (!v300)
        {
          ((void (*)(std::__shared_weak_count *))v297->__on_zero_shared)(v297);
          std::__shared_weak_count::__release_weak(v297);
        }
        v296 = v1000;
        v301 = v1001;
        if (v1001)
        {
          v302 = (unint64_t *)&v1001->__shared_owners_;
          do
            v303 = __ldxr(v302);
          while (__stxr(v303 + 1, v302));
          do
            v304 = __ldaxr(v302);
          while (__stlxr(v304 - 1, v302));
          if (!v304)
          {
            ((void (*)(std::__shared_weak_count *))v301->__on_zero_shared)(v301);
            std::__shared_weak_count::__release_weak(v301);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v296 + 96))(&v1013, v296, 0);
      else
LABEL_1251:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1830;
      if (!v1004)
        goto LABEL_1830;
      v699 = v1005;
      if (!v1005)
        goto LABEL_1830;
      v700 = v1009;
      v701 = v1002;
      if (v1011 && v1002)
      {
        v702 = v1000;
        v703 = v1001;
        if (v1001)
        {
          v704 = (unint64_t *)&v1001->__shared_owners_;
          do
            v705 = __ldxr(v704);
          while (__stxr(v705 + 1, v704));
          do
            v706 = __ldaxr(v704);
          while (__stlxr(v706 - 1, v704));
          if (!v706)
          {
            ((void (*)(std::__shared_weak_count *))v703->__on_zero_shared)(v703);
            std::__shared_weak_count::__release_weak(v703);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v702 + 88))(v702, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v701 = v1002;
      }
      v995 = (2 * v295);
      if (v699 == 1)
        goto LABEL_1272;
      if (!(2 * v295))
        goto LABEL_1830;
      v707 = 0;
      do
      {
        if (!v701
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1275;
        }
        v708 = 0;
        do
        {
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v294 + 128))(v294, &v701[v708]);
          v708 += 2;
        }
        while (2 * v995 != v708);
        v701 += 2 * v700;
        ++v707;
      }
      while (v707 != v699 - 1);
LABEL_1272:
      if (!(_DWORD)v995 || v701)
      {
        if (!(_DWORD)v995)
          goto LABEL_1830;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1275:
        abort();
      }
      v919 = 4 * v995;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v294 + 128))(v294, v701);
        v701 += 2;
        v919 -= 4;
      }
      while (v919);
LABEL_1830:
      v920 = v1013;
      v1013 = 0;
      if (v920)
        (*(void (**)(uint64_t))(*(_QWORD *)v920 + 8))(v920);
      v846 = v1001;
      if (!v1001)
        return;
      v921 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v921);
      while (__stlxr(v848 - 1, v921));
      goto LABEL_1947;
    case 9:
      v999 = &off_24C406558;
      sub_20B37456C(a3, (uint64_t)&v1000);
      v262 = *a2;
      v971 = v1010;
      v263 = v1000;
      if (!v1000)
        goto LABEL_1176;
      v264 = v1001;
      if (v1001)
      {
        v265 = (unint64_t *)&v1001->__shared_owners_;
        do
          v266 = __ldxr(v265);
        while (__stxr(v266 + 1, v265));
        do
          v267 = __ldaxr(v265);
        while (__stlxr(v267 - 1, v265));
        if (!v267)
        {
          ((void (*)(std::__shared_weak_count *))v264->__on_zero_shared)(v264);
          std::__shared_weak_count::__release_weak(v264);
        }
        v263 = v1000;
        v268 = v1001;
        if (v1001)
        {
          v269 = (unint64_t *)&v1001->__shared_owners_;
          do
            v270 = __ldxr(v269);
          while (__stxr(v270 + 1, v269));
          do
            v271 = __ldaxr(v269);
          while (__stlxr(v271 - 1, v269));
          if (!v271)
          {
            ((void (*)(std::__shared_weak_count *))v268->__on_zero_shared)(v268);
            std::__shared_weak_count::__release_weak(v268);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v263 + 96))(&v1013, v263, 0);
      else
LABEL_1176:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1804;
      if (!v1004)
        goto LABEL_1804;
      v667 = v1005;
      if (!v1005)
        goto LABEL_1804;
      v668 = v1009;
      v669 = v1002;
      if (v1011 && v1002)
      {
        v670 = v1000;
        v671 = v1001;
        if (v1001)
        {
          v672 = (unint64_t *)&v1001->__shared_owners_;
          do
            v673 = __ldxr(v672);
          while (__stxr(v673 + 1, v672));
          do
            v674 = __ldaxr(v672);
          while (__stlxr(v674 - 1, v672));
          if (!v674)
          {
            ((void (*)(std::__shared_weak_count *))v671->__on_zero_shared)(v671);
            std::__shared_weak_count::__release_weak(v671);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v670 + 88))(v670, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v669 = v1002;
      }
      v675 = (3 * v971);
      if (v667 == 1)
        goto LABEL_1197;
      if (!v971)
        goto LABEL_1804;
      v676 = 0;
      do
      {
        if (!v669
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1200;
        }
        v677 = 0;
        do
          (*(void (**)(uint64_t, char *))(*(_QWORD *)v262 + 80))(v262, (char *)v669 + v677++);
        while (v675 != v677);
        v669 = (_WORD *)((char *)v669 + v668);
        ++v676;
      }
      while (v676 != v667 - 1);
LABEL_1197:
      if (!v971 || v669)
      {
        if (!v971)
          goto LABEL_1804;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1200:
        abort();
      }
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v262 + 80))(v262, v669);
        v669 = (_WORD *)((char *)v669 + 1);
        --v675;
      }
      while (v675);
LABEL_1804:
      v912 = v1013;
      v1013 = 0;
      if (v912)
        (*(void (**)(uint64_t))(*(_QWORD *)v912 + 8))(v912);
      v846 = v1001;
      if (!v1001)
        return;
      v913 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v913);
      while (__stlxr(v848 - 1, v913));
      goto LABEL_1947;
    case 10:
      v999 = &off_24C4067D0;
      sub_20B374BA0(a3, (uint64_t)&v1000);
      v346 = *a2;
      v975 = v1010;
      v347 = v1000;
      if (!v1000)
        goto LABEL_1398;
      v348 = v1001;
      if (v1001)
      {
        v349 = (unint64_t *)&v1001->__shared_owners_;
        do
          v350 = __ldxr(v349);
        while (__stxr(v350 + 1, v349));
        do
          v351 = __ldaxr(v349);
        while (__stlxr(v351 - 1, v349));
        if (!v351)
        {
          ((void (*)(std::__shared_weak_count *))v348->__on_zero_shared)(v348);
          std::__shared_weak_count::__release_weak(v348);
        }
        v347 = v1000;
        v352 = v1001;
        if (v1001)
        {
          v353 = (unint64_t *)&v1001->__shared_owners_;
          do
            v354 = __ldxr(v353);
          while (__stxr(v354 + 1, v353));
          do
            v355 = __ldaxr(v353);
          while (__stlxr(v355 - 1, v353));
          if (!v355)
          {
            ((void (*)(std::__shared_weak_count *))v352->__on_zero_shared)(v352);
            std::__shared_weak_count::__release_weak(v352);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v347 + 96))(&v1013, v347, 0);
      else
LABEL_1398:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1882;
      if (!v1004)
        goto LABEL_1882;
      v760 = v1005;
      if (!v1005)
        goto LABEL_1882;
      v761 = v1009;
      v762 = v1002;
      if (v1011 && v1002)
      {
        v763 = v1000;
        v764 = v1001;
        if (v1001)
        {
          v765 = (unint64_t *)&v1001->__shared_owners_;
          do
            v766 = __ldxr(v765);
          while (__stxr(v766 + 1, v765));
          do
            v767 = __ldaxr(v765);
          while (__stlxr(v767 - 1, v765));
          if (!v767)
          {
            ((void (*)(std::__shared_weak_count *))v764->__on_zero_shared)(v764);
            std::__shared_weak_count::__release_weak(v764);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v763 + 88))(v763, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v762 = v1002;
      }
      v962 = (3 * v975);
      if (v760 == 1)
        goto LABEL_1419;
      if (!v975)
        goto LABEL_1882;
      v768 = 0;
      do
      {
        if (!v762
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1422;
        }
        v769 = 0;
        do
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v346 + 96))(v346, &v762[v769++]);
        while (v962 != v769);
        v762 += v761;
        ++v768;
      }
      while (v768 != v760 - 1);
LABEL_1419:
      if (!v975 || v762)
      {
        if (!v975)
          goto LABEL_1882;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1422:
        abort();
      }
      v935 = 2 * v962;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v346 + 96))(v346, v762++);
        v935 -= 2;
      }
      while (v935);
LABEL_1882:
      v936 = v1013;
      v1013 = 0;
      if (v936)
        (*(void (**)(uint64_t))(*(_QWORD *)v936 + 8))(v936);
      v846 = v1001;
      if (!v1001)
        return;
      v937 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v937);
      while (__stlxr(v848 - 1, v937));
      goto LABEL_1947;
    case 11:
      v999 = &off_24C406A48;
      sub_20B3751D8(a3, (uint64_t)&v1000);
      v336 = *a2;
      v974 = v1010;
      v337 = v1000;
      if (!v1000)
        goto LABEL_1373;
      v338 = v1001;
      if (v1001)
      {
        v339 = (unint64_t *)&v1001->__shared_owners_;
        do
          v340 = __ldxr(v339);
        while (__stxr(v340 + 1, v339));
        do
          v341 = __ldaxr(v339);
        while (__stlxr(v341 - 1, v339));
        if (!v341)
        {
          ((void (*)(std::__shared_weak_count *))v338->__on_zero_shared)(v338);
          std::__shared_weak_count::__release_weak(v338);
        }
        v337 = v1000;
        v342 = v1001;
        if (v1001)
        {
          v343 = (unint64_t *)&v1001->__shared_owners_;
          do
            v344 = __ldxr(v343);
          while (__stxr(v344 + 1, v343));
          do
            v345 = __ldaxr(v343);
          while (__stlxr(v345 - 1, v343));
          if (!v345)
          {
            ((void (*)(std::__shared_weak_count *))v342->__on_zero_shared)(v342);
            std::__shared_weak_count::__release_weak(v342);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v337 + 96))(&v1013, v337, 0);
      else
LABEL_1373:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1873;
      if (!v1004)
        goto LABEL_1873;
      v750 = v1005;
      if (!v1005)
        goto LABEL_1873;
      v751 = v1009;
      v752 = v1002;
      if (v1011 && v1002)
      {
        v753 = v1000;
        v754 = v1001;
        if (v1001)
        {
          v755 = (unint64_t *)&v1001->__shared_owners_;
          do
            v756 = __ldxr(v755);
          while (__stxr(v756 + 1, v755));
          do
            v757 = __ldaxr(v755);
          while (__stlxr(v757 - 1, v755));
          if (!v757)
          {
            ((void (*)(std::__shared_weak_count *))v754->__on_zero_shared)(v754);
            std::__shared_weak_count::__release_weak(v754);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v753 + 88))(v753, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v752 = v1002;
      }
      v961 = (3 * v974);
      if (v750 == 1)
        goto LABEL_1394;
      if (!v974)
        goto LABEL_1873;
      v758 = 0;
      do
      {
        if (!v752
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1397;
        }
        v759 = 0;
        do
        {
          v998 = v752[v759];
          (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v336 + 96))(v336, &v998);
          ++v759;
        }
        while (v961 != v759);
        v752 += v751;
        ++v758;
      }
      while (v758 != v750 - 1);
LABEL_1394:
      if (!v974 || v752)
      {
        if (!v974)
          goto LABEL_1873;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1397:
        abort();
      }
      v932 = 2 * v961;
      do
      {
        v998 = *v752;
        (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v336 + 96))(v336, &v998);
        ++v752;
        v932 -= 2;
      }
      while (v932);
LABEL_1873:
      v933 = v1013;
      v1013 = 0;
      if (v933)
        (*(void (**)(uint64_t))(*(_QWORD *)v933 + 8))(v933);
      v846 = v1001;
      if (!v1001)
        return;
      v934 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v934);
      while (__stlxr(v848 - 1, v934));
      goto LABEL_1947;
    case 12:
      v999 = &off_24C406CC0;
      sub_20B375810(a3, (uint64_t)&v1000);
      v47 = *a2;
      v966 = v1010;
      v48 = v1000;
      if (!v1000)
        goto LABEL_677;
      v49 = v1001;
      if (v1001)
      {
        v50 = (unint64_t *)&v1001->__shared_owners_;
        do
          v51 = __ldxr(v50);
        while (__stxr(v51 + 1, v50));
        do
          v52 = __ldaxr(v50);
        while (__stlxr(v52 - 1, v50));
        if (!v52)
        {
          ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
          std::__shared_weak_count::__release_weak(v49);
        }
        v48 = v1000;
        v53 = v1001;
        if (v1001)
        {
          v54 = (unint64_t *)&v1001->__shared_owners_;
          do
            v55 = __ldxr(v54);
          while (__stxr(v55 + 1, v54));
          do
            v56 = __ldaxr(v54);
          while (__stlxr(v56 - 1, v54));
          if (!v56)
          {
            ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
            std::__shared_weak_count::__release_weak(v53);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v48 + 96))(&v1013, v48, 0);
      else
LABEL_677:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1627;
      if (!v1004)
        goto LABEL_1627;
      v461 = v1005;
      if (!v1005)
        goto LABEL_1627;
      v462 = v1009;
      v463 = v1002;
      if (v1011 && v1002)
      {
        v464 = v1000;
        v465 = v1001;
        if (v1001)
        {
          v466 = (unint64_t *)&v1001->__shared_owners_;
          do
            v467 = __ldxr(v466);
          while (__stxr(v467 + 1, v466));
          do
            v468 = __ldaxr(v466);
          while (__stlxr(v468 - 1, v466));
          if (!v468)
          {
            ((void (*)(std::__shared_weak_count *))v465->__on_zero_shared)(v465);
            std::__shared_weak_count::__release_weak(v465);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v464 + 88))(v464, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v463 = v1002;
      }
      v957 = (3 * v966);
      if (v461 == 1)
        goto LABEL_698;
      if (!v966)
        goto LABEL_1627;
      v469 = 0;
      do
      {
        if (!v463
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_701;
        }
        v470 = 0;
        do
        {
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v47 + 128))(v47, &v463[v470]);
          v470 += 2;
        }
        while (2 * v957 != v470);
        v463 += 2 * v462;
        ++v469;
      }
      while (v469 != v461 - 1);
LABEL_698:
      if (!v966 || v463)
      {
        if (!v966)
          goto LABEL_1627;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_701:
        abort();
      }
      v854 = 4 * v957;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v47 + 128))(v47, v463);
        v463 += 2;
        v854 -= 4;
      }
      while (v854);
LABEL_1627:
      v855 = v1013;
      v1013 = 0;
      if (v855)
        (*(void (**)(uint64_t))(*(_QWORD *)v855 + 8))(v855);
      v846 = v1001;
      if (!v1001)
        return;
      v856 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v856);
      while (__stlxr(v848 - 1, v856));
      goto LABEL_1947;
    case 13:
      v999 = &off_24C406F38;
      sub_20B375E48(a3, (uint64_t)&v1000);
      v89 = *a2;
      v90 = v1010;
      v91 = v1000;
      if (!v1000)
        goto LABEL_777;
      v92 = v1001;
      if (v1001)
      {
        v93 = (unint64_t *)&v1001->__shared_owners_;
        do
          v94 = __ldxr(v93);
        while (__stxr(v94 + 1, v93));
        do
          v95 = __ldaxr(v93);
        while (__stlxr(v95 - 1, v93));
        if (!v95)
        {
          ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
          std::__shared_weak_count::__release_weak(v92);
        }
        v91 = v1000;
        v96 = v1001;
        if (v1001)
        {
          v97 = (unint64_t *)&v1001->__shared_owners_;
          do
            v98 = __ldxr(v97);
          while (__stxr(v98 + 1, v97));
          do
            v99 = __ldaxr(v97);
          while (__stlxr(v99 - 1, v97));
          if (!v99)
          {
            ((void (*)(std::__shared_weak_count *))v96->__on_zero_shared)(v96);
            std::__shared_weak_count::__release_weak(v96);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v91 + 96))(&v1013, v91, 0);
      else
LABEL_777:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1661;
      if (!v1004)
        goto LABEL_1661;
      v502 = v1005;
      if (!v1005)
        goto LABEL_1661;
      v503 = v1009;
      v504 = v1002;
      if (v1011 && v1002)
      {
        v505 = v1000;
        v506 = v1001;
        if (v1001)
        {
          v507 = (unint64_t *)&v1001->__shared_owners_;
          do
            v508 = __ldxr(v507);
          while (__stxr(v508 + 1, v507));
          do
            v509 = __ldaxr(v507);
          while (__stlxr(v509 - 1, v507));
          if (!v509)
          {
            ((void (*)(std::__shared_weak_count *))v506->__on_zero_shared)(v506);
            std::__shared_weak_count::__release_weak(v506);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v505 + 88))(v505, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v504 = v1002;
      }
      v510 = (4 * v90);
      if (v502 == 1)
        goto LABEL_798;
      if (!(_DWORD)v510)
        goto LABEL_1661;
      v511 = 0;
      do
      {
        if (!v504
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_801;
        }
        for (ii = 0; ii != v510; ++ii)
          (*(void (**)(uint64_t, char *))(*(_QWORD *)v89 + 80))(v89, (char *)v504 + ii);
        v504 = (_WORD *)((char *)v504 + v503);
        ++v511;
      }
      while (v511 != v502 - 1);
LABEL_798:
      if (!(_DWORD)v510 || v504)
      {
        if (!(_DWORD)v510)
          goto LABEL_1661;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_801:
        abort();
      }
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v89 + 80))(v89, v504);
        v504 = (_WORD *)((char *)v504 + 1);
        --v510;
      }
      while (v510);
LABEL_1661:
      v865 = v1013;
      v1013 = 0;
      if (v865)
        (*(void (**)(uint64_t))(*(_QWORD *)v865 + 8))(v865);
      v846 = v1001;
      if (!v1001)
        return;
      v866 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v866);
      while (__stlxr(v848 - 1, v866));
      goto LABEL_1947;
    case 14:
      v999 = &off_24C4071B0;
      sub_20B37647C(a3, (uint64_t)&v1000);
      v78 = *a2;
      v79 = v1010;
      v80 = v1000;
      if (!v1000)
        goto LABEL_752;
      v81 = v1001;
      if (v1001)
      {
        v82 = (unint64_t *)&v1001->__shared_owners_;
        do
          v83 = __ldxr(v82);
        while (__stxr(v83 + 1, v82));
        do
          v84 = __ldaxr(v82);
        while (__stlxr(v84 - 1, v82));
        if (!v84)
        {
          ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
          std::__shared_weak_count::__release_weak(v81);
        }
        v80 = v1000;
        v85 = v1001;
        if (v1001)
        {
          v86 = (unint64_t *)&v1001->__shared_owners_;
          do
            v87 = __ldxr(v86);
          while (__stxr(v87 + 1, v86));
          do
            v88 = __ldaxr(v86);
          while (__stlxr(v88 - 1, v86));
          if (!v88)
          {
            ((void (*)(std::__shared_weak_count *))v85->__on_zero_shared)(v85);
            std::__shared_weak_count::__release_weak(v85);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v80 + 96))(&v1013, v80, 0);
      else
LABEL_752:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1653;
      if (!v1004)
        goto LABEL_1653;
      v492 = v1005;
      if (!v1005)
        goto LABEL_1653;
      v493 = v1009;
      v494 = v1002;
      if (v1011 && v1002)
      {
        v495 = v1000;
        v496 = v1001;
        if (v1001)
        {
          v497 = (unint64_t *)&v1001->__shared_owners_;
          do
            v498 = __ldxr(v497);
          while (__stxr(v498 + 1, v497));
          do
            v499 = __ldaxr(v497);
          while (__stlxr(v499 - 1, v497));
          if (!v499)
          {
            ((void (*)(std::__shared_weak_count *))v496->__on_zero_shared)(v496);
            std::__shared_weak_count::__release_weak(v496);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v495 + 88))(v495, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v494 = v1002;
      }
      v981 = (4 * v79);
      if (v492 == 1)
        goto LABEL_773;
      if (!(4 * v79))
        goto LABEL_1653;
      v500 = 0;
      do
      {
        if (!v494
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_776;
        }
        v501 = 0;
        do
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v78 + 96))(v78, &v494[v501++]);
        while (v981 != v501);
        v494 += v493;
        ++v500;
      }
      while (v500 != v492 - 1);
LABEL_773:
      if (!(_DWORD)v981 || v494)
      {
        if (!(_DWORD)v981)
          goto LABEL_1653;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_776:
        abort();
      }
      v862 = 2 * v981;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v78 + 96))(v78, v494++);
        v862 -= 2;
      }
      while (v862);
LABEL_1653:
      v863 = v1013;
      v1013 = 0;
      if (v863)
        (*(void (**)(uint64_t))(*(_QWORD *)v863 + 8))(v863);
      v846 = v1001;
      if (!v1001)
        return;
      v864 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v864);
      while (__stlxr(v848 - 1, v864));
      goto LABEL_1947;
    case 15:
      v999 = &off_24C407428;
      sub_20B376AB4(a3, (uint64_t)&v1000);
      v388 = *a2;
      v389 = v1010;
      v390 = v1000;
      if (!v1000)
        goto LABEL_1498;
      v391 = v1001;
      if (v1001)
      {
        v392 = (unint64_t *)&v1001->__shared_owners_;
        do
          v393 = __ldxr(v392);
        while (__stxr(v393 + 1, v392));
        do
          v394 = __ldaxr(v392);
        while (__stlxr(v394 - 1, v392));
        if (!v394)
        {
          ((void (*)(std::__shared_weak_count *))v391->__on_zero_shared)(v391);
          std::__shared_weak_count::__release_weak(v391);
        }
        v390 = v1000;
        v395 = v1001;
        if (v1001)
        {
          v396 = (unint64_t *)&v1001->__shared_owners_;
          do
            v397 = __ldxr(v396);
          while (__stxr(v397 + 1, v396));
          do
            v398 = __ldaxr(v396);
          while (__stlxr(v398 - 1, v396));
          if (!v398)
          {
            ((void (*)(std::__shared_weak_count *))v395->__on_zero_shared)(v395);
            std::__shared_weak_count::__release_weak(v395);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v390 + 96))(&v1013, v390, 0);
      else
LABEL_1498:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1917;
      if (!v1004)
        goto LABEL_1917;
      v801 = v1005;
      if (!v1005)
        goto LABEL_1917;
      v802 = v1009;
      v803 = v1002;
      if (v1011 && v1002)
      {
        v804 = v1000;
        v805 = v1001;
        if (v1001)
        {
          v806 = (unint64_t *)&v1001->__shared_owners_;
          do
            v807 = __ldxr(v806);
          while (__stxr(v807 + 1, v806));
          do
            v808 = __ldaxr(v806);
          while (__stlxr(v808 - 1, v806));
          if (!v808)
          {
            ((void (*)(std::__shared_weak_count *))v805->__on_zero_shared)(v805);
            std::__shared_weak_count::__release_weak(v805);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v804 + 88))(v804, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v803 = v1002;
      }
      v809 = v801 - 1;
      v997 = (4 * v389);
      if (!v809)
        goto LABEL_1519;
      if (!(4 * v389))
        goto LABEL_1917;
      for (jj = 0; jj != v809; ++jj)
      {
        if (!v803
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1522;
        }
        v811 = 0;
        do
        {
          v998 = v803[v811];
          (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v388 + 96))(v388, &v998);
          ++v811;
        }
        while (v997 != v811);
        v803 += v802;
      }
LABEL_1519:
      if (!(_DWORD)v997 || v803)
      {
        if (!(_DWORD)v997)
          goto LABEL_1917;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1522:
        abort();
      }
      v946 = 2 * v997;
      do
      {
        v998 = *v803;
        (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v388 + 96))(v388, &v998);
        ++v803;
        v946 -= 2;
      }
      while (v946);
LABEL_1917:
      v947 = v1013;
      v1013 = 0;
      if (v947)
        (*(void (**)(uint64_t))(*(_QWORD *)v947 + 8))(v947);
      v846 = v1001;
      if (!v1001)
        return;
      v948 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v948);
      while (__stlxr(v848 - 1, v948));
      goto LABEL_1947;
    case 16:
      v999 = &off_24C4076A0;
      sub_20B3770EC(a3, (uint64_t)&v1000);
      v283 = *a2;
      v284 = v1010;
      v285 = v1000;
      if (!v1000)
        goto LABEL_1226;
      v286 = v1001;
      if (v1001)
      {
        v287 = (unint64_t *)&v1001->__shared_owners_;
        do
          v288 = __ldxr(v287);
        while (__stxr(v288 + 1, v287));
        do
          v289 = __ldaxr(v287);
        while (__stlxr(v289 - 1, v287));
        if (!v289)
        {
          ((void (*)(std::__shared_weak_count *))v286->__on_zero_shared)(v286);
          std::__shared_weak_count::__release_weak(v286);
        }
        v285 = v1000;
        v290 = v1001;
        if (v1001)
        {
          v291 = (unint64_t *)&v1001->__shared_owners_;
          do
            v292 = __ldxr(v291);
          while (__stxr(v292 + 1, v291));
          do
            v293 = __ldaxr(v291);
          while (__stlxr(v293 - 1, v291));
          if (!v293)
          {
            ((void (*)(std::__shared_weak_count *))v290->__on_zero_shared)(v290);
            std::__shared_weak_count::__release_weak(v290);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v285 + 96))(&v1013, v285, 0);
      else
LABEL_1226:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1821;
      if (!v1004)
        goto LABEL_1821;
      v689 = v1005;
      if (!v1005)
        goto LABEL_1821;
      v690 = v1009;
      v691 = v1002;
      if (v1011 && v1002)
      {
        v692 = v1000;
        v693 = v1001;
        if (v1001)
        {
          v694 = (unint64_t *)&v1001->__shared_owners_;
          do
            v695 = __ldxr(v694);
          while (__stxr(v695 + 1, v694));
          do
            v696 = __ldaxr(v694);
          while (__stlxr(v696 - 1, v694));
          if (!v696)
          {
            ((void (*)(std::__shared_weak_count *))v693->__on_zero_shared)(v693);
            std::__shared_weak_count::__release_weak(v693);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v692 + 88))(v692, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v691 = v1002;
      }
      v994 = (4 * v284);
      if (v689 == 1)
        goto LABEL_1247;
      if (!(4 * v284))
        goto LABEL_1821;
      v697 = 0;
      do
      {
        if (!v691
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1250;
        }
        v698 = 0;
        do
        {
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v283 + 128))(v283, &v691[v698]);
          v698 += 2;
        }
        while (2 * v994 != v698);
        v691 += 2 * v690;
        ++v697;
      }
      while (v697 != v689 - 1);
LABEL_1247:
      if (!(_DWORD)v994 || v691)
      {
        if (!(_DWORD)v994)
          goto LABEL_1821;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1250:
        abort();
      }
      v916 = 4 * v994;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v283 + 128))(v283, v691);
        v691 += 2;
        v916 -= 4;
      }
      while (v916);
LABEL_1821:
      v917 = v1013;
      v1013 = 0;
      if (v917)
        (*(void (**)(uint64_t))(*(_QWORD *)v917 + 8))(v917);
      v846 = v1001;
      if (!v1001)
        return;
      v918 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v918);
      while (__stlxr(v848 - 1, v918));
      goto LABEL_1947;
    case 17:
      v999 = &off_24C407918;
      sub_20B377724(a3, (uint64_t)&v1000);
      v399 = *a2;
      v977 = v1010;
      v400 = v1000;
      if (!v1000)
        goto LABEL_1523;
      v401 = v1001;
      if (v1001)
      {
        v402 = (unint64_t *)&v1001->__shared_owners_;
        do
          v403 = __ldxr(v402);
        while (__stxr(v403 + 1, v402));
        do
          v404 = __ldaxr(v402);
        while (__stlxr(v404 - 1, v402));
        if (!v404)
        {
          ((void (*)(std::__shared_weak_count *))v401->__on_zero_shared)(v401);
          std::__shared_weak_count::__release_weak(v401);
        }
        v400 = v1000;
        v405 = v1001;
        if (v1001)
        {
          v406 = (unint64_t *)&v1001->__shared_owners_;
          do
            v407 = __ldxr(v406);
          while (__stxr(v407 + 1, v406));
          do
            v408 = __ldaxr(v406);
          while (__stlxr(v408 - 1, v406));
          if (!v408)
          {
            ((void (*)(std::__shared_weak_count *))v405->__on_zero_shared)(v405);
            std::__shared_weak_count::__release_weak(v405);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v400 + 96))(&v1013, v400, 0);
      else
LABEL_1523:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1925;
      if (!v1004)
        goto LABEL_1925;
      v812 = v1005;
      if (!v1005)
        goto LABEL_1925;
      v813 = v1009;
      v814 = v1002;
      if (v1011 && v1002)
      {
        v815 = v1000;
        v816 = v1001;
        if (v1001)
        {
          v817 = (unint64_t *)&v1001->__shared_owners_;
          do
            v818 = __ldxr(v817);
          while (__stxr(v818 + 1, v817));
          do
            v819 = __ldaxr(v817);
          while (__stlxr(v819 - 1, v817));
          if (!v819)
          {
            ((void (*)(std::__shared_weak_count *))v816->__on_zero_shared)(v816);
            std::__shared_weak_count::__release_weak(v816);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v815 + 88))(v815, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v814 = v1002;
      }
      v820 = (3 * v977);
      if (v812 == 1)
        goto LABEL_1544;
      if (!v977)
        goto LABEL_1925;
      v821 = 0;
      do
      {
        if (!v814
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1547;
        }
        v822 = 0;
        do
          (*(void (**)(uint64_t, char *))(*(_QWORD *)v399 + 80))(v399, (char *)v814 + v822++);
        while (v820 != v822);
        v814 = (_WORD *)((char *)v814 + v813);
        ++v821;
      }
      while (v821 != v812 - 1);
LABEL_1544:
      if (!v977 || v814)
      {
        if (!v977)
          goto LABEL_1925;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1547:
        abort();
      }
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v399 + 80))(v399, v814);
        v814 = (_WORD *)((char *)v814 + 1);
        --v820;
      }
      while (v820);
LABEL_1925:
      v949 = v1013;
      v1013 = 0;
      if (v949)
        (*(void (**)(uint64_t))(*(_QWORD *)v949 + 8))(v949);
      v846 = v1001;
      if (!v1001)
        return;
      v950 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v950);
      while (__stlxr(v848 - 1, v950));
      goto LABEL_1947;
    case 18:
      v999 = &off_24C407B90;
      sub_20B377D58(a3, (uint64_t)&v1000);
      v111 = *a2;
      v968 = v1010;
      v112 = v1000;
      if (!v1000)
        goto LABEL_827;
      v113 = v1001;
      if (v1001)
      {
        v114 = (unint64_t *)&v1001->__shared_owners_;
        do
          v115 = __ldxr(v114);
        while (__stxr(v115 + 1, v114));
        do
          v116 = __ldaxr(v114);
        while (__stlxr(v116 - 1, v114));
        if (!v116)
        {
          ((void (*)(std::__shared_weak_count *))v113->__on_zero_shared)(v113);
          std::__shared_weak_count::__release_weak(v113);
        }
        v112 = v1000;
        v117 = v1001;
        if (v1001)
        {
          v118 = (unint64_t *)&v1001->__shared_owners_;
          do
            v119 = __ldxr(v118);
          while (__stxr(v119 + 1, v118));
          do
            v120 = __ldaxr(v118);
          while (__stlxr(v120 - 1, v118));
          if (!v120)
          {
            ((void (*)(std::__shared_weak_count *))v117->__on_zero_shared)(v117);
            std::__shared_weak_count::__release_weak(v117);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v112 + 96))(&v1013, v112, 0);
      else
LABEL_827:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1679;
      if (!v1004)
        goto LABEL_1679;
      v523 = v1005;
      if (!v1005)
        goto LABEL_1679;
      v524 = v1009;
      v525 = v1002;
      if (v1011 && v1002)
      {
        v526 = v1000;
        v527 = v1001;
        if (v1001)
        {
          v528 = (unint64_t *)&v1001->__shared_owners_;
          do
            v529 = __ldxr(v528);
          while (__stxr(v529 + 1, v528));
          do
            v530 = __ldaxr(v528);
          while (__stlxr(v530 - 1, v528));
          if (!v530)
          {
            ((void (*)(std::__shared_weak_count *))v527->__on_zero_shared)(v527);
            std::__shared_weak_count::__release_weak(v527);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v526 + 88))(v526, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v525 = v1002;
      }
      v959 = (3 * v968);
      if (v523 == 1)
        goto LABEL_848;
      if (!v968)
        goto LABEL_1679;
      v531 = 0;
      do
      {
        if (!v525
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_851;
        }
        v532 = 0;
        do
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v111 + 96))(v111, &v525[v532++]);
        while (v959 != v532);
        v525 += v524;
        ++v531;
      }
      while (v531 != v523 - 1);
LABEL_848:
      if (!v968 || v525)
      {
        if (!v968)
          goto LABEL_1679;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_851:
        abort();
      }
      v870 = 2 * v959;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v111 + 96))(v111, v525++);
        v870 -= 2;
      }
      while (v870);
LABEL_1679:
      v871 = v1013;
      v1013 = 0;
      if (v871)
        (*(void (**)(uint64_t))(*(_QWORD *)v871 + 8))(v871);
      v846 = v1001;
      if (!v1001)
        return;
      v872 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v872);
      while (__stlxr(v848 - 1, v872));
      goto LABEL_1947;
    case 19:
      v999 = &off_24C407E08;
      sub_20B378390(a3, (uint64_t)&v1000);
      v26 = *a2;
      v965 = v1010;
      v27 = v1000;
      if (!v1000)
        goto LABEL_627;
      v28 = v1001;
      if (v1001)
      {
        v29 = (unint64_t *)&v1001->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
        v27 = v1000;
        v32 = v1001;
        if (v1001)
        {
          v33 = (unint64_t *)&v1001->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v27 + 96))(&v1013, v27, 0);
      else
LABEL_627:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1610;
      if (!v1004)
        goto LABEL_1610;
      v440 = v1005;
      if (!v1005)
        goto LABEL_1610;
      v441 = v1009;
      v442 = v1002;
      if (v1011 && v1002)
      {
        v443 = v1000;
        v444 = v1001;
        if (v1001)
        {
          v445 = (unint64_t *)&v1001->__shared_owners_;
          do
            v446 = __ldxr(v445);
          while (__stxr(v446 + 1, v445));
          do
            v447 = __ldaxr(v445);
          while (__stlxr(v447 - 1, v445));
          if (!v447)
          {
            ((void (*)(std::__shared_weak_count *))v444->__on_zero_shared)(v444);
            std::__shared_weak_count::__release_weak(v444);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v443 + 88))(v443, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v442 = v1002;
      }
      v956 = (3 * v965);
      if (v440 == 1)
        goto LABEL_648;
      if (!v965)
        goto LABEL_1610;
      v448 = 0;
      do
      {
        if (!v442
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_651;
        }
        v449 = 0;
        do
        {
          v998 = v442[v449];
          (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v26 + 96))(v26, &v998);
          ++v449;
        }
        while (v956 != v449);
        v442 += v441;
        ++v448;
      }
      while (v448 != v440 - 1);
LABEL_648:
      if (!v965 || v442)
      {
        if (!v965)
          goto LABEL_1610;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_651:
        abort();
      }
      v849 = 2 * v956;
      do
      {
        v998 = *v442;
        (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v26 + 96))(v26, &v998);
        ++v442;
        v849 -= 2;
      }
      while (v849);
LABEL_1610:
      v850 = v1013;
      v1013 = 0;
      if (v850)
        (*(void (**)(uint64_t))(*(_QWORD *)v850 + 8))(v850);
      v846 = v1001;
      if (!v1001)
        return;
      v851 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v851);
      while (__stlxr(v848 - 1, v851));
      goto LABEL_1947;
    case 20:
      v999 = &off_24C408080;
      sub_20B3789C8(a3, (uint64_t)&v1000);
      v367 = *a2;
      v976 = v1010;
      v368 = v1000;
      if (!v1000)
        goto LABEL_1448;
      v369 = v1001;
      if (v1001)
      {
        v370 = (unint64_t *)&v1001->__shared_owners_;
        do
          v371 = __ldxr(v370);
        while (__stxr(v371 + 1, v370));
        do
          v372 = __ldaxr(v370);
        while (__stlxr(v372 - 1, v370));
        if (!v372)
        {
          ((void (*)(std::__shared_weak_count *))v369->__on_zero_shared)(v369);
          std::__shared_weak_count::__release_weak(v369);
        }
        v368 = v1000;
        v373 = v1001;
        if (v1001)
        {
          v374 = (unint64_t *)&v1001->__shared_owners_;
          do
            v375 = __ldxr(v374);
          while (__stxr(v375 + 1, v374));
          do
            v376 = __ldaxr(v374);
          while (__stlxr(v376 - 1, v374));
          if (!v376)
          {
            ((void (*)(std::__shared_weak_count *))v373->__on_zero_shared)(v373);
            std::__shared_weak_count::__release_weak(v373);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v368 + 96))(&v1013, v368, 0);
      else
LABEL_1448:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1899;
      if (!v1004)
        goto LABEL_1899;
      v781 = v1005;
      if (!v1005)
        goto LABEL_1899;
      v782 = v1009;
      v783 = v1002;
      if (v1011 && v1002)
      {
        v784 = v1000;
        v785 = v1001;
        if (v1001)
        {
          v786 = (unint64_t *)&v1001->__shared_owners_;
          do
            v787 = __ldxr(v786);
          while (__stxr(v787 + 1, v786));
          do
            v788 = __ldaxr(v786);
          while (__stlxr(v788 - 1, v786));
          if (!v788)
          {
            ((void (*)(std::__shared_weak_count *))v785->__on_zero_shared)(v785);
            std::__shared_weak_count::__release_weak(v785);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v784 + 88))(v784, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v783 = v1002;
      }
      v963 = (3 * v976);
      if (v781 == 1)
        goto LABEL_1469;
      if (!v976)
        goto LABEL_1899;
      v789 = 0;
      do
      {
        if (!v783
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1472;
        }
        v790 = 0;
        do
        {
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v367 + 128))(v367, &v783[v790]);
          v790 += 2;
        }
        while (2 * v963 != v790);
        v783 += 2 * v782;
        ++v789;
      }
      while (v789 != v781 - 1);
LABEL_1469:
      if (!v976 || v783)
      {
        if (!v976)
          goto LABEL_1899;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1472:
        abort();
      }
      v940 = 4 * v963;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v367 + 128))(v367, v783);
        v783 += 2;
        v940 -= 4;
      }
      while (v940);
LABEL_1899:
      v941 = v1013;
      v1013 = 0;
      if (v941)
        (*(void (**)(uint64_t))(*(_QWORD *)v941 + 8))(v941);
      v846 = v1001;
      if (!v1001)
        return;
      v942 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v942);
      while (__stlxr(v848 - 1, v942));
      goto LABEL_1947;
    case 21:
      v999 = &off_24C4082F8;
      sub_20B2D7B44(a3, (uint64_t)&v1000);
      v419 = *a2;
      v979 = v1010;
      v420 = v1000;
      if (!v1000)
        goto LABEL_1573;
      v421 = v1001;
      if (v1001)
      {
        v422 = (unint64_t *)&v1001->__shared_owners_;
        do
          v423 = __ldxr(v422);
        while (__stxr(v423 + 1, v422));
        do
          v424 = __ldaxr(v422);
        while (__stlxr(v424 - 1, v422));
        if (!v424)
        {
          ((void (*)(std::__shared_weak_count *))v421->__on_zero_shared)(v421);
          std::__shared_weak_count::__release_weak(v421);
        }
        v420 = v1000;
        v425 = v1001;
        if (v1001)
        {
          v426 = (unint64_t *)&v1001->__shared_owners_;
          do
            v427 = __ldxr(v426);
          while (__stxr(v427 + 1, v426));
          do
            v428 = __ldaxr(v426);
          while (__stlxr(v428 - 1, v426));
          if (!v428)
          {
            ((void (*)(std::__shared_weak_count *))v425->__on_zero_shared)(v425);
            std::__shared_weak_count::__release_weak(v425);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v420 + 96))(&v1013, v420, 0);
      else
LABEL_1573:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1942;
      if (!v1004)
        goto LABEL_1942;
      v833 = v1005;
      if (!v1005)
        goto LABEL_1942;
      v834 = v1009;
      v835 = v1002;
      if (v1011 && v1002)
      {
        v836 = v1000;
        v837 = v1001;
        if (v1001)
        {
          v838 = (unint64_t *)&v1001->__shared_owners_;
          do
            v839 = __ldxr(v838);
          while (__stxr(v839 + 1, v838));
          do
            v840 = __ldaxr(v838);
          while (__stlxr(v840 - 1, v838));
          if (!v840)
          {
            ((void (*)(std::__shared_weak_count *))v837->__on_zero_shared)(v837);
            std::__shared_weak_count::__release_weak(v837);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v836 + 88))(v836, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v835 = v1002;
      }
      v841 = (3 * v979);
      if (v833 == 1)
        goto LABEL_1594;
      if (!v979)
        goto LABEL_1942;
      v842 = 0;
      do
      {
        if (!v835
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1597;
        }
        v843 = 0;
        do
          (*(void (**)(uint64_t, char *))(*(_QWORD *)v419 + 80))(v419, (char *)v835 + v843++);
        while (v841 != v843);
        v835 = (_WORD *)((char *)v835 + v834);
        ++v842;
      }
      while (v842 != v833 - 1);
LABEL_1594:
      if (!v979 || v835)
      {
        if (!v979)
          goto LABEL_1942;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1597:
        abort();
      }
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v419 + 80))(v419, v835);
        v835 = (_WORD *)((char *)v835 + 1);
        --v841;
      }
      while (v841);
LABEL_1942:
      v954 = v1013;
      v1013 = 0;
      if (v954)
        (*(void (**)(uint64_t))(*(_QWORD *)v954 + 8))(v954);
      v846 = v1001;
      if (!v1001)
        return;
      v955 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v955);
      while (__stlxr(v848 - 1, v955));
      goto LABEL_1947;
    case 22:
      v999 = &off_24C408570;
      sub_20B379000(a3, (uint64_t)&v1000);
      v143 = *a2;
      v969 = v1010;
      v144 = v1000;
      if (!v1000)
        goto LABEL_902;
      v145 = v1001;
      if (v1001)
      {
        v146 = (unint64_t *)&v1001->__shared_owners_;
        do
          v147 = __ldxr(v146);
        while (__stxr(v147 + 1, v146));
        do
          v148 = __ldaxr(v146);
        while (__stlxr(v148 - 1, v146));
        if (!v148)
        {
          ((void (*)(std::__shared_weak_count *))v145->__on_zero_shared)(v145);
          std::__shared_weak_count::__release_weak(v145);
        }
        v144 = v1000;
        v149 = v1001;
        if (v1001)
        {
          v150 = (unint64_t *)&v1001->__shared_owners_;
          do
            v151 = __ldxr(v150);
          while (__stxr(v151 + 1, v150));
          do
            v152 = __ldaxr(v150);
          while (__stlxr(v152 - 1, v150));
          if (!v152)
          {
            ((void (*)(std::__shared_weak_count *))v149->__on_zero_shared)(v149);
            std::__shared_weak_count::__release_weak(v149);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v144 + 96))(&v1013, v144, 0);
      else
LABEL_902:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1706;
      if (!v1004)
        goto LABEL_1706;
      v555 = v1005;
      if (!v1005)
        goto LABEL_1706;
      v556 = v1009;
      v557 = v1002;
      if (v1011 && v1002)
      {
        v558 = v1000;
        v559 = v1001;
        if (v1001)
        {
          v560 = (unint64_t *)&v1001->__shared_owners_;
          do
            v561 = __ldxr(v560);
          while (__stxr(v561 + 1, v560));
          do
            v562 = __ldaxr(v560);
          while (__stlxr(v562 - 1, v560));
          if (!v562)
          {
            ((void (*)(std::__shared_weak_count *))v559->__on_zero_shared)(v559);
            std::__shared_weak_count::__release_weak(v559);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v558 + 88))(v558, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v557 = v1002;
      }
      v960 = (3 * v969);
      if (v555 == 1)
        goto LABEL_923;
      if (!v969)
        goto LABEL_1706;
      v563 = 0;
      do
      {
        if (!v557
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_926;
        }
        v564 = 0;
        do
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v143 + 96))(v143, &v557[v564++]);
        while (v960 != v564);
        v557 += v556;
        ++v563;
      }
      while (v563 != v555 - 1);
LABEL_923:
      if (!v969 || v557)
      {
        if (!v969)
          goto LABEL_1706;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_926:
        abort();
      }
      v879 = 2 * v960;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v143 + 96))(v143, v557++);
        v879 -= 2;
      }
      while (v879);
LABEL_1706:
      v880 = v1013;
      v1013 = 0;
      if (v880)
        (*(void (**)(uint64_t))(*(_QWORD *)v880 + 8))(v880);
      v846 = v1001;
      if (!v1001)
        return;
      v881 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v881);
      while (__stlxr(v848 - 1, v881));
      goto LABEL_1947;
    case 23:
      v999 = &off_24C4087E8;
      sub_20B379638(a3, (uint64_t)&v1000);
      v409 = *a2;
      v978 = v1010;
      v410 = v1000;
      if (!v1000)
        goto LABEL_1548;
      v411 = v1001;
      if (v1001)
      {
        v412 = (unint64_t *)&v1001->__shared_owners_;
        do
          v413 = __ldxr(v412);
        while (__stxr(v413 + 1, v412));
        do
          v414 = __ldaxr(v412);
        while (__stlxr(v414 - 1, v412));
        if (!v414)
        {
          ((void (*)(std::__shared_weak_count *))v411->__on_zero_shared)(v411);
          std::__shared_weak_count::__release_weak(v411);
        }
        v410 = v1000;
        v415 = v1001;
        if (v1001)
        {
          v416 = (unint64_t *)&v1001->__shared_owners_;
          do
            v417 = __ldxr(v416);
          while (__stxr(v417 + 1, v416));
          do
            v418 = __ldaxr(v416);
          while (__stlxr(v418 - 1, v416));
          if (!v418)
          {
            ((void (*)(std::__shared_weak_count *))v415->__on_zero_shared)(v415);
            std::__shared_weak_count::__release_weak(v415);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v410 + 96))(&v1013, v410, 0);
      else
LABEL_1548:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1934;
      if (!v1004)
        goto LABEL_1934;
      v823 = v1005;
      if (!v1005)
        goto LABEL_1934;
      v824 = v1009;
      v825 = v1002;
      if (v1011 && v1002)
      {
        v826 = v1000;
        v827 = v1001;
        if (v1001)
        {
          v828 = (unint64_t *)&v1001->__shared_owners_;
          do
            v829 = __ldxr(v828);
          while (__stxr(v829 + 1, v828));
          do
            v830 = __ldaxr(v828);
          while (__stlxr(v830 - 1, v828));
          if (!v830)
          {
            ((void (*)(std::__shared_weak_count *))v827->__on_zero_shared)(v827);
            std::__shared_weak_count::__release_weak(v827);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v826 + 88))(v826, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v825 = v1002;
      }
      v964 = (3 * v978);
      if (v823 == 1)
        goto LABEL_1569;
      if (!v978)
        goto LABEL_1934;
      v831 = 0;
      do
      {
        if (!v825
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1572;
        }
        v832 = 0;
        do
        {
          v998 = v825[v832];
          (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v409 + 96))(v409, &v998);
          ++v832;
        }
        while (v964 != v832);
        v825 += v824;
        ++v831;
      }
      while (v831 != v823 - 1);
LABEL_1569:
      if (!v978 || v825)
      {
        if (!v978)
          goto LABEL_1934;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1572:
        abort();
      }
      v951 = 2 * v964;
      do
      {
        v998 = *v825;
        (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v409 + 96))(v409, &v998);
        ++v825;
        v951 -= 2;
      }
      while (v951);
LABEL_1934:
      v952 = v1013;
      v1013 = 0;
      if (v952)
        (*(void (**)(uint64_t))(*(_QWORD *)v952 + 8))(v952);
      v846 = v1001;
      if (!v1001)
        return;
      v953 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v953);
      while (__stlxr(v848 - 1, v953));
      goto LABEL_1947;
    case 24:
      v999 = &off_24C408A60;
      sub_20B379C70(a3, (uint64_t)&v1000);
      v68 = *a2;
      v967 = v1010;
      v69 = v1000;
      if (!v1000)
        goto LABEL_727;
      v70 = v1001;
      if (v1001)
      {
        v71 = (unint64_t *)&v1001->__shared_owners_;
        do
          v72 = __ldxr(v71);
        while (__stxr(v72 + 1, v71));
        do
          v73 = __ldaxr(v71);
        while (__stlxr(v73 - 1, v71));
        if (!v73)
        {
          ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
          std::__shared_weak_count::__release_weak(v70);
        }
        v69 = v1000;
        v74 = v1001;
        if (v1001)
        {
          v75 = (unint64_t *)&v1001->__shared_owners_;
          do
            v76 = __ldxr(v75);
          while (__stxr(v76 + 1, v75));
          do
            v77 = __ldaxr(v75);
          while (__stlxr(v77 - 1, v75));
          if (!v77)
          {
            ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
            std::__shared_weak_count::__release_weak(v74);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v69 + 96))(&v1013, v69, 0);
      else
LABEL_727:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1644;
      if (!v1004)
        goto LABEL_1644;
      v482 = v1005;
      if (!v1005)
        goto LABEL_1644;
      v483 = v1009;
      v484 = v1002;
      if (v1011 && v1002)
      {
        v485 = v1000;
        v486 = v1001;
        if (v1001)
        {
          v487 = (unint64_t *)&v1001->__shared_owners_;
          do
            v488 = __ldxr(v487);
          while (__stxr(v488 + 1, v487));
          do
            v489 = __ldaxr(v487);
          while (__stlxr(v489 - 1, v487));
          if (!v489)
          {
            ((void (*)(std::__shared_weak_count *))v486->__on_zero_shared)(v486);
            std::__shared_weak_count::__release_weak(v486);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v485 + 88))(v485, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v484 = v1002;
      }
      v958 = (3 * v967);
      if (v482 == 1)
        goto LABEL_748;
      if (!v967)
        goto LABEL_1644;
      v490 = 0;
      do
      {
        if (!v484
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_751;
        }
        v491 = 0;
        do
        {
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v68 + 128))(v68, &v484[v491]);
          v491 += 2;
        }
        while (2 * v958 != v491);
        v484 += 2 * v483;
        ++v490;
      }
      while (v490 != v482 - 1);
LABEL_748:
      if (!v967 || v484)
      {
        if (!v967)
          goto LABEL_1644;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_751:
        abort();
      }
      v859 = 4 * v958;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v68 + 128))(v68, v484);
        v484 += 2;
        v859 -= 4;
      }
      while (v859);
LABEL_1644:
      v860 = v1013;
      v1013 = 0;
      if (v860)
        (*(void (**)(uint64_t))(*(_QWORD *)v860 + 8))(v860);
      v846 = v1001;
      if (!v1001)
        return;
      v861 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v861);
      while (__stlxr(v848 - 1, v861));
      goto LABEL_1947;
    case 25:
      v999 = &off_24C408CD8;
      sub_20B37A2A8(a3, (uint64_t)&v1000);
      v36 = *a2;
      v37 = v1010;
      v38 = v1000;
      if (!v1000)
        goto LABEL_652;
      v39 = v1001;
      if (v1001)
      {
        v40 = (unint64_t *)&v1001->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
        }
        v38 = v1000;
        v43 = v1001;
        if (v1001)
        {
          v44 = (unint64_t *)&v1001->__shared_owners_;
          do
            v45 = __ldxr(v44);
          while (__stxr(v45 + 1, v44));
          do
            v46 = __ldaxr(v44);
          while (__stlxr(v46 - 1, v44));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
            std::__shared_weak_count::__release_weak(v43);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v38 + 96))(&v1013, v38, 0);
      else
LABEL_652:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1618;
      if (!v1004)
        goto LABEL_1618;
      v450 = v1005;
      if (!v1005)
        goto LABEL_1618;
      v451 = v1009;
      v452 = v1002;
      if (v1011 && v1002)
      {
        v453 = v1000;
        v454 = v1001;
        if (v1001)
        {
          v455 = (unint64_t *)&v1001->__shared_owners_;
          do
            v456 = __ldxr(v455);
          while (__stxr(v456 + 1, v455));
          do
            v457 = __ldaxr(v455);
          while (__stlxr(v457 - 1, v455));
          if (!v457)
          {
            ((void (*)(std::__shared_weak_count *))v454->__on_zero_shared)(v454);
            std::__shared_weak_count::__release_weak(v454);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v453 + 88))(v453, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v452 = v1002;
      }
      v458 = (4 * v37);
      if (v450 == 1)
        goto LABEL_673;
      if (!(_DWORD)v458)
        goto LABEL_1618;
      v459 = 0;
      do
      {
        if (!v452
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_676;
        }
        for (kk = 0; kk != v458; ++kk)
          (*(void (**)(uint64_t, char *))(*(_QWORD *)v36 + 80))(v36, (char *)v452 + kk);
        v452 = (_WORD *)((char *)v452 + v451);
        ++v459;
      }
      while (v459 != v450 - 1);
LABEL_673:
      if (!(_DWORD)v458 || v452)
      {
        if (!(_DWORD)v458)
          goto LABEL_1618;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_676:
        abort();
      }
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v36 + 80))(v36, v452);
        v452 = (_WORD *)((char *)v452 + 1);
        --v458;
      }
      while (v458);
LABEL_1618:
      v852 = v1013;
      v1013 = 0;
      if (v852)
        (*(void (**)(uint64_t))(*(_QWORD *)v852 + 8))(v852);
      v846 = v1001;
      if (!v1001)
        return;
      v853 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v853);
      while (__stlxr(v848 - 1, v853));
      goto LABEL_1947;
    case 26:
      v999 = &off_24C408F50;
      sub_20B37A8DC(a3, (uint64_t)&v1000);
      v153 = *a2;
      v154 = v1010;
      v155 = v1000;
      if (!v1000)
        goto LABEL_927;
      v156 = v1001;
      if (v1001)
      {
        v157 = (unint64_t *)&v1001->__shared_owners_;
        do
          v158 = __ldxr(v157);
        while (__stxr(v158 + 1, v157));
        do
          v159 = __ldaxr(v157);
        while (__stlxr(v159 - 1, v157));
        if (!v159)
        {
          ((void (*)(std::__shared_weak_count *))v156->__on_zero_shared)(v156);
          std::__shared_weak_count::__release_weak(v156);
        }
        v155 = v1000;
        v160 = v1001;
        if (v1001)
        {
          v161 = (unint64_t *)&v1001->__shared_owners_;
          do
            v162 = __ldxr(v161);
          while (__stxr(v162 + 1, v161));
          do
            v163 = __ldaxr(v161);
          while (__stlxr(v163 - 1, v161));
          if (!v163)
          {
            ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
            std::__shared_weak_count::__release_weak(v160);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v155 + 96))(&v1013, v155, 0);
      else
LABEL_927:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1715;
      if (!v1004)
        goto LABEL_1715;
      v565 = v1005;
      if (!v1005)
        goto LABEL_1715;
      v566 = v1009;
      v567 = v1002;
      if (v1011 && v1002)
      {
        v568 = v1000;
        v569 = v1001;
        if (v1001)
        {
          v570 = (unint64_t *)&v1001->__shared_owners_;
          do
            v571 = __ldxr(v570);
          while (__stxr(v571 + 1, v570));
          do
            v572 = __ldaxr(v570);
          while (__stlxr(v572 - 1, v570));
          if (!v572)
          {
            ((void (*)(std::__shared_weak_count *))v569->__on_zero_shared)(v569);
            std::__shared_weak_count::__release_weak(v569);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v568 + 88))(v568, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v567 = v1002;
      }
      v985 = (4 * v154);
      if (v565 == 1)
        goto LABEL_948;
      if (!(4 * v154))
        goto LABEL_1715;
      v573 = 0;
      do
      {
        if (!v567
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_951;
        }
        v574 = 0;
        do
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v153 + 96))(v153, &v567[v574++]);
        while (v985 != v574);
        v567 += v566;
        ++v573;
      }
      while (v573 != v565 - 1);
LABEL_948:
      if (!(_DWORD)v985 || v567)
      {
        if (!(_DWORD)v985)
          goto LABEL_1715;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_951:
        abort();
      }
      v882 = 2 * v985;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v153 + 96))(v153, v567++);
        v882 -= 2;
      }
      while (v882);
LABEL_1715:
      v883 = v1013;
      v1013 = 0;
      if (v883)
        (*(void (**)(uint64_t))(*(_QWORD *)v883 + 8))(v883);
      v846 = v1001;
      if (!v1001)
        return;
      v884 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v884);
      while (__stlxr(v848 - 1, v884));
      goto LABEL_1947;
    case 27:
      v999 = &off_24C4091C8;
      sub_20B37AF14(a3, (uint64_t)&v1000);
      v15 = *a2;
      v16 = v1010;
      v17 = v1000;
      if (!v1000)
        goto LABEL_602;
      v18 = v1001;
      if (v1001)
      {
        v19 = (unint64_t *)&v1001->__shared_owners_;
        do
          v20 = __ldxr(v19);
        while (__stxr(v20 + 1, v19));
        do
          v21 = __ldaxr(v19);
        while (__stlxr(v21 - 1, v19));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
        v17 = v1000;
        v22 = v1001;
        if (v1001)
        {
          v23 = (unint64_t *)&v1001->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
            std::__shared_weak_count::__release_weak(v22);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v17 + 96))(&v1013, v17, 0);
      else
LABEL_602:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1601;
      if (!v1004)
        goto LABEL_1601;
      v429 = v1005;
      if (!v1005)
        goto LABEL_1601;
      v430 = v1009;
      v431 = v1002;
      if (v1011 && v1002)
      {
        v432 = v1000;
        v433 = v1001;
        if (v1001)
        {
          v434 = (unint64_t *)&v1001->__shared_owners_;
          do
            v435 = __ldxr(v434);
          while (__stxr(v435 + 1, v434));
          do
            v436 = __ldaxr(v434);
          while (__stlxr(v436 - 1, v434));
          if (!v436)
          {
            ((void (*)(std::__shared_weak_count *))v433->__on_zero_shared)(v433);
            std::__shared_weak_count::__release_weak(v433);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v432 + 88))(v432, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v431 = v1002;
      }
      v437 = v429 - 1;
      v980 = (4 * v16);
      if (!v437)
        goto LABEL_623;
      if (!(4 * v16))
        goto LABEL_1601;
      for (mm = 0; mm != v437; ++mm)
      {
        if (!v431
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_626;
        }
        v439 = 0;
        do
        {
          v998 = v431[v439];
          (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v15 + 96))(v15, &v998);
          ++v439;
        }
        while (v980 != v439);
        v431 += v430;
      }
LABEL_623:
      if (!(_DWORD)v980 || v431)
      {
        if (!(_DWORD)v980)
          goto LABEL_1601;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_626:
        abort();
      }
      v844 = 2 * v980;
      do
      {
        v998 = *v431;
        (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v15 + 96))(v15, &v998);
        ++v431;
        v844 -= 2;
      }
      while (v844);
LABEL_1601:
      v845 = v1013;
      v1013 = 0;
      if (v845)
        (*(void (**)(uint64_t))(*(_QWORD *)v845 + 8))(v845);
      v846 = v1001;
      if (!v1001)
        return;
      v847 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v847);
      while (__stlxr(v848 - 1, v847));
      goto LABEL_1947;
    case 28:
      v999 = &off_24C409440;
      sub_20B37B54C(a3, (uint64_t)&v1000);
      v196 = *a2;
      v197 = v1010;
      v198 = v1000;
      if (!v1000)
        goto LABEL_1026;
      v199 = v1001;
      if (v1001)
      {
        v200 = (unint64_t *)&v1001->__shared_owners_;
        do
          v201 = __ldxr(v200);
        while (__stxr(v201 + 1, v200));
        do
          v202 = __ldaxr(v200);
        while (__stlxr(v202 - 1, v200));
        if (!v202)
        {
          ((void (*)(std::__shared_weak_count *))v199->__on_zero_shared)(v199);
          std::__shared_weak_count::__release_weak(v199);
        }
        v198 = v1000;
        v203 = v1001;
        if (v1001)
        {
          v204 = (unint64_t *)&v1001->__shared_owners_;
          do
            v205 = __ldxr(v204);
          while (__stxr(v205 + 1, v204));
          do
            v206 = __ldaxr(v204);
          while (__stlxr(v206 - 1, v204));
          if (!v206)
          {
            ((void (*)(std::__shared_weak_count *))v203->__on_zero_shared)(v203);
            std::__shared_weak_count::__release_weak(v203);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v198 + 96))(&v1013, v198, 0);
      else
LABEL_1026:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1751;
      if (!v1004)
        goto LABEL_1751;
      v606 = v1005;
      if (!v1005)
        goto LABEL_1751;
      v607 = v1009;
      v608 = v1002;
      if (v1011 && v1002)
      {
        v609 = v1000;
        v610 = v1001;
        if (v1001)
        {
          v611 = (unint64_t *)&v1001->__shared_owners_;
          do
            v612 = __ldxr(v611);
          while (__stxr(v612 + 1, v611));
          do
            v613 = __ldaxr(v611);
          while (__stlxr(v613 - 1, v611));
          if (!v613)
          {
            ((void (*)(std::__shared_weak_count *))v610->__on_zero_shared)(v610);
            std::__shared_weak_count::__release_weak(v610);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v609 + 88))(v609, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v608 = v1002;
      }
      v988 = (4 * v197);
      if (v606 == 1)
        goto LABEL_1047;
      if (!(4 * v197))
        goto LABEL_1751;
      v614 = 0;
      do
      {
        if (!v608
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1050;
        }
        v615 = 0;
        do
        {
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v196 + 128))(v196, &v608[v615]);
          v615 += 2;
        }
        while (2 * v988 != v615);
        v608 += 2 * v607;
        ++v614;
      }
      while (v614 != v606 - 1);
LABEL_1047:
      if (!(_DWORD)v988 || v608)
      {
        if (!(_DWORD)v988)
          goto LABEL_1751;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1050:
        abort();
      }
      v894 = 4 * v988;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v196 + 128))(v196, v608);
        v608 += 2;
        v894 -= 4;
      }
      while (v894);
LABEL_1751:
      v895 = v1013;
      v1013 = 0;
      if (v895)
        (*(void (**)(uint64_t))(*(_QWORD *)v895 + 8))(v895);
      v846 = v1001;
      if (!v1001)
        return;
      v896 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v896);
      while (__stlxr(v848 - 1, v896));
      goto LABEL_1947;
    case 29:
      v999 = &off_24C4096B8;
      sub_20B37BB84(a3, (uint64_t)&v1000);
      v57 = *a2;
      v58 = v1010;
      v59 = v1000;
      if (!v1000)
        goto LABEL_702;
      v60 = v1001;
      if (v1001)
      {
        v61 = (unint64_t *)&v1001->__shared_owners_;
        do
          v62 = __ldxr(v61);
        while (__stxr(v62 + 1, v61));
        do
          v63 = __ldaxr(v61);
        while (__stlxr(v63 - 1, v61));
        if (!v63)
        {
          ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
          std::__shared_weak_count::__release_weak(v60);
        }
        v59 = v1000;
        v64 = v1001;
        if (v1001)
        {
          v65 = (unint64_t *)&v1001->__shared_owners_;
          do
            v66 = __ldxr(v65);
          while (__stxr(v66 + 1, v65));
          do
            v67 = __ldaxr(v65);
          while (__stlxr(v67 - 1, v65));
          if (!v67)
          {
            ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
            std::__shared_weak_count::__release_weak(v64);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v59 + 96))(&v1013, v59, 0);
      else
LABEL_702:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1635;
      if (!v1004)
        goto LABEL_1635;
      v471 = v1005;
      if (!v1005)
        goto LABEL_1635;
      v472 = v1009;
      v473 = v1002;
      if (v1011 && v1002)
      {
        v474 = v1000;
        v475 = v1001;
        if (v1001)
        {
          v476 = (unint64_t *)&v1001->__shared_owners_;
          do
            v477 = __ldxr(v476);
          while (__stxr(v477 + 1, v476));
          do
            v478 = __ldaxr(v476);
          while (__stlxr(v478 - 1, v476));
          if (!v478)
          {
            ((void (*)(std::__shared_weak_count *))v475->__on_zero_shared)(v475);
            std::__shared_weak_count::__release_weak(v475);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v474 + 88))(v474, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v473 = v1002;
      }
      v479 = (4 * v58);
      if (v471 == 1)
        goto LABEL_723;
      if (!(_DWORD)v479)
        goto LABEL_1635;
      v480 = 0;
      do
      {
        if (!v473
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_726;
        }
        for (nn = 0; nn != v479; ++nn)
          (*(void (**)(uint64_t, char *))(*(_QWORD *)v57 + 80))(v57, (char *)v473 + nn);
        v473 = (_WORD *)((char *)v473 + v472);
        ++v480;
      }
      while (v480 != v471 - 1);
LABEL_723:
      if (!(_DWORD)v479 || v473)
      {
        if (!(_DWORD)v479)
          goto LABEL_1635;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_726:
        abort();
      }
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v57 + 80))(v57, v473);
        v473 = (_WORD *)((char *)v473 + 1);
        --v479;
      }
      while (v479);
LABEL_1635:
      v857 = v1013;
      v1013 = 0;
      if (v857)
        (*(void (**)(uint64_t))(*(_QWORD *)v857 + 8))(v857);
      v846 = v1001;
      if (!v1001)
        return;
      v858 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v858);
      while (__stlxr(v848 - 1, v858));
      goto LABEL_1947;
    case 30:
      v999 = &off_24C409930;
      sub_20B37C1B8(a3, (uint64_t)&v1000);
      v229 = *a2;
      v230 = v1010;
      v231 = v1000;
      if (!v1000)
        goto LABEL_1101;
      v232 = v1001;
      if (v1001)
      {
        v233 = (unint64_t *)&v1001->__shared_owners_;
        do
          v234 = __ldxr(v233);
        while (__stxr(v234 + 1, v233));
        do
          v235 = __ldaxr(v233);
        while (__stlxr(v235 - 1, v233));
        if (!v235)
        {
          ((void (*)(std::__shared_weak_count *))v232->__on_zero_shared)(v232);
          std::__shared_weak_count::__release_weak(v232);
        }
        v231 = v1000;
        v236 = v1001;
        if (v1001)
        {
          v237 = (unint64_t *)&v1001->__shared_owners_;
          do
            v238 = __ldxr(v237);
          while (__stxr(v238 + 1, v237));
          do
            v239 = __ldaxr(v237);
          while (__stlxr(v239 - 1, v237));
          if (!v239)
          {
            ((void (*)(std::__shared_weak_count *))v236->__on_zero_shared)(v236);
            std::__shared_weak_count::__release_weak(v236);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v231 + 96))(&v1013, v231, 0);
      else
LABEL_1101:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1778;
      if (!v1004)
        goto LABEL_1778;
      v637 = v1005;
      if (!v1005)
        goto LABEL_1778;
      v638 = v1009;
      v639 = v1002;
      if (v1011 && v1002)
      {
        v640 = v1000;
        v641 = v1001;
        if (v1001)
        {
          v642 = (unint64_t *)&v1001->__shared_owners_;
          do
            v643 = __ldxr(v642);
          while (__stxr(v643 + 1, v642));
          do
            v644 = __ldaxr(v642);
          while (__stlxr(v644 - 1, v642));
          if (!v644)
          {
            ((void (*)(std::__shared_weak_count *))v641->__on_zero_shared)(v641);
            std::__shared_weak_count::__release_weak(v641);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v640 + 88))(v640, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v639 = v1002;
      }
      v991 = (4 * v230);
      if (v637 == 1)
        goto LABEL_1122;
      if (!(4 * v230))
        goto LABEL_1778;
      v645 = 0;
      do
      {
        if (!v639
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1125;
        }
        v646 = 0;
        do
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v229 + 96))(v229, &v639[v646++]);
        while (v991 != v646);
        v639 += v638;
        ++v645;
      }
      while (v645 != v637 - 1);
LABEL_1122:
      if (!(_DWORD)v991 || v639)
      {
        if (!(_DWORD)v991)
          goto LABEL_1778;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1125:
        abort();
      }
      v903 = 2 * v991;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v229 + 96))(v229, v639++);
        v903 -= 2;
      }
      while (v903);
LABEL_1778:
      v904 = v1013;
      v1013 = 0;
      if (v904)
        (*(void (**)(uint64_t))(*(_QWORD *)v904 + 8))(v904);
      v846 = v1001;
      if (!v1001)
        return;
      v905 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v905);
      while (__stlxr(v848 - 1, v905));
      goto LABEL_1947;
    case 31:
      v999 = &off_24C409BA8;
      sub_20B37C7F0(a3, (uint64_t)&v1000);
      v164 = *a2;
      v165 = v1010;
      v166 = v1000;
      if (!v1000)
        goto LABEL_952;
      v167 = v1001;
      if (v1001)
      {
        v168 = (unint64_t *)&v1001->__shared_owners_;
        do
          v169 = __ldxr(v168);
        while (__stxr(v169 + 1, v168));
        do
          v170 = __ldaxr(v168);
        while (__stlxr(v170 - 1, v168));
        if (!v170)
        {
          ((void (*)(std::__shared_weak_count *))v167->__on_zero_shared)(v167);
          std::__shared_weak_count::__release_weak(v167);
        }
        v166 = v1000;
        v171 = v1001;
        if (v1001)
        {
          v172 = (unint64_t *)&v1001->__shared_owners_;
          do
            v173 = __ldxr(v172);
          while (__stxr(v173 + 1, v172));
          do
            v174 = __ldaxr(v172);
          while (__stlxr(v174 - 1, v172));
          if (!v174)
          {
            ((void (*)(std::__shared_weak_count *))v171->__on_zero_shared)(v171);
            std::__shared_weak_count::__release_weak(v171);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v166 + 96))(&v1013, v166, 0);
      else
LABEL_952:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1724;
      if (!v1004)
        goto LABEL_1724;
      v575 = v1005;
      if (!v1005)
        goto LABEL_1724;
      v576 = v1009;
      v577 = v1002;
      if (v1011 && v1002)
      {
        v578 = v1000;
        v579 = v1001;
        if (v1001)
        {
          v580 = (unint64_t *)&v1001->__shared_owners_;
          do
            v581 = __ldxr(v580);
          while (__stxr(v581 + 1, v580));
          do
            v582 = __ldaxr(v580);
          while (__stlxr(v582 - 1, v580));
          if (!v582)
          {
            ((void (*)(std::__shared_weak_count *))v579->__on_zero_shared)(v579);
            std::__shared_weak_count::__release_weak(v579);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v578 + 88))(v578, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v577 = v1002;
      }
      v583 = v575 - 1;
      v986 = (4 * v165);
      if (!v583)
        goto LABEL_973;
      if (!(4 * v165))
        goto LABEL_1724;
      for (i1 = 0; i1 != v583; ++i1)
      {
        if (!v577
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_976;
        }
        v585 = 0;
        do
        {
          v998 = v577[v585];
          (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v164 + 96))(v164, &v998);
          ++v585;
        }
        while (v986 != v585);
        v577 += v576;
      }
LABEL_973:
      if (!(_DWORD)v986 || v577)
      {
        if (!(_DWORD)v986)
          goto LABEL_1724;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_976:
        abort();
      }
      v885 = 2 * v986;
      do
      {
        v998 = *v577;
        (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v164 + 96))(v164, &v998);
        ++v577;
        v885 -= 2;
      }
      while (v885);
LABEL_1724:
      v886 = v1013;
      v1013 = 0;
      if (v886)
        (*(void (**)(uint64_t))(*(_QWORD *)v886 + 8))(v886);
      v846 = v1001;
      if (!v1001)
        return;
      v887 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v887);
      while (__stlxr(v848 - 1, v887));
      goto LABEL_1947;
    case 32:
      v999 = &off_24C409E20;
      sub_20B37CE28(a3, (uint64_t)&v1000);
      v251 = *a2;
      v252 = v1010;
      v253 = v1000;
      if (!v1000)
        goto LABEL_1151;
      v254 = v1001;
      if (v1001)
      {
        v255 = (unint64_t *)&v1001->__shared_owners_;
        do
          v256 = __ldxr(v255);
        while (__stxr(v256 + 1, v255));
        do
          v257 = __ldaxr(v255);
        while (__stlxr(v257 - 1, v255));
        if (!v257)
        {
          ((void (*)(std::__shared_weak_count *))v254->__on_zero_shared)(v254);
          std::__shared_weak_count::__release_weak(v254);
        }
        v253 = v1000;
        v258 = v1001;
        if (v1001)
        {
          v259 = (unint64_t *)&v1001->__shared_owners_;
          do
            v260 = __ldxr(v259);
          while (__stxr(v260 + 1, v259));
          do
            v261 = __ldaxr(v259);
          while (__stlxr(v261 - 1, v259));
          if (!v261)
          {
            ((void (*)(std::__shared_weak_count *))v258->__on_zero_shared)(v258);
            std::__shared_weak_count::__release_weak(v258);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v253 + 96))(&v1013, v253, 0);
      else
LABEL_1151:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1796;
      if (!v1004)
        goto LABEL_1796;
      v657 = v1005;
      if (!v1005)
        goto LABEL_1796;
      v658 = v1009;
      v659 = v1002;
      if (v1011 && v1002)
      {
        v660 = v1000;
        v661 = v1001;
        if (v1001)
        {
          v662 = (unint64_t *)&v1001->__shared_owners_;
          do
            v663 = __ldxr(v662);
          while (__stxr(v663 + 1, v662));
          do
            v664 = __ldaxr(v662);
          while (__stlxr(v664 - 1, v662));
          if (!v664)
          {
            ((void (*)(std::__shared_weak_count *))v661->__on_zero_shared)(v661);
            std::__shared_weak_count::__release_weak(v661);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v660 + 88))(v660, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v659 = v1002;
      }
      v993 = (4 * v252);
      if (v657 == 1)
        goto LABEL_1172;
      if (!(4 * v252))
        goto LABEL_1796;
      v665 = 0;
      do
      {
        if (!v659
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1175;
        }
        v666 = 0;
        do
        {
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v251 + 128))(v251, &v659[v666]);
          v666 += 2;
        }
        while (2 * v993 != v666);
        v659 += 2 * v658;
        ++v665;
      }
      while (v665 != v657 - 1);
LABEL_1172:
      if (!(_DWORD)v993 || v659)
      {
        if (!(_DWORD)v993)
          goto LABEL_1796;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1175:
        abort();
      }
      v909 = 4 * v993;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v251 + 128))(v251, v659);
        v659 += 2;
        v909 -= 4;
      }
      while (v909);
LABEL_1796:
      v910 = v1013;
      v1013 = 0;
      if (v910)
        (*(void (**)(uint64_t))(*(_QWORD *)v910 + 8))(v910);
      v846 = v1001;
      if (!v1001)
        return;
      v911 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v911);
      while (__stlxr(v848 - 1, v911));
      goto LABEL_1947;
    case 33:
      v999 = &off_24C40A098;
      sub_20B37D460(a3, (uint64_t)&v1000);
      v356 = *a2;
      v357 = v1010;
      v358 = v1000;
      if (!v1000)
        goto LABEL_1423;
      v359 = v1001;
      if (v1001)
      {
        v360 = (unint64_t *)&v1001->__shared_owners_;
        do
          v361 = __ldxr(v360);
        while (__stxr(v361 + 1, v360));
        do
          v362 = __ldaxr(v360);
        while (__stlxr(v362 - 1, v360));
        if (!v362)
        {
          ((void (*)(std::__shared_weak_count *))v359->__on_zero_shared)(v359);
          std::__shared_weak_count::__release_weak(v359);
        }
        v358 = v1000;
        v363 = v1001;
        if (v1001)
        {
          v364 = (unint64_t *)&v1001->__shared_owners_;
          do
            v365 = __ldxr(v364);
          while (__stxr(v365 + 1, v364));
          do
            v366 = __ldaxr(v364);
          while (__stlxr(v366 - 1, v364));
          if (!v366)
          {
            ((void (*)(std::__shared_weak_count *))v363->__on_zero_shared)(v363);
            std::__shared_weak_count::__release_weak(v363);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v358 + 96))(&v1013, v358, 0);
      else
LABEL_1423:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1890;
      if (!v1004)
        goto LABEL_1890;
      v770 = v1005;
      if (!v1005)
        goto LABEL_1890;
      v771 = v1009;
      v772 = v1002;
      if (v1011 && v1002)
      {
        v773 = v1000;
        v774 = v1001;
        if (v1001)
        {
          v775 = (unint64_t *)&v1001->__shared_owners_;
          do
            v776 = __ldxr(v775);
          while (__stxr(v776 + 1, v775));
          do
            v777 = __ldaxr(v775);
          while (__stlxr(v777 - 1, v775));
          if (!v777)
          {
            ((void (*)(std::__shared_weak_count *))v774->__on_zero_shared)(v774);
            std::__shared_weak_count::__release_weak(v774);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v773 + 88))(v773, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v772 = v1002;
      }
      v778 = (4 * v357);
      if (v770 == 1)
        goto LABEL_1444;
      if (!(_DWORD)v778)
        goto LABEL_1890;
      v779 = 0;
      do
      {
        if (!v772
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1447;
        }
        for (i2 = 0; i2 != v778; ++i2)
          (*(void (**)(uint64_t, char *))(*(_QWORD *)v356 + 80))(v356, (char *)v772 + i2);
        v772 = (_WORD *)((char *)v772 + v771);
        ++v779;
      }
      while (v779 != v770 - 1);
LABEL_1444:
      if (!(_DWORD)v778 || v772)
      {
        if (!(_DWORD)v778)
          goto LABEL_1890;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1447:
        abort();
      }
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v356 + 80))(v356, v772);
        v772 = (_WORD *)((char *)v772 + 1);
        --v778;
      }
      while (v778);
LABEL_1890:
      v938 = v1013;
      v1013 = 0;
      if (v938)
        (*(void (**)(uint64_t))(*(_QWORD *)v938 + 8))(v938);
      v846 = v1001;
      if (!v1001)
        return;
      v939 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v939);
      while (__stlxr(v848 - 1, v939));
      goto LABEL_1947;
    case 34:
      v999 = &off_24C40A310;
      sub_20B37DA94(a3, (uint64_t)&v1000);
      v240 = *a2;
      v241 = v1010;
      v242 = v1000;
      if (!v1000)
        goto LABEL_1126;
      v243 = v1001;
      if (v1001)
      {
        v244 = (unint64_t *)&v1001->__shared_owners_;
        do
          v245 = __ldxr(v244);
        while (__stxr(v245 + 1, v244));
        do
          v246 = __ldaxr(v244);
        while (__stlxr(v246 - 1, v244));
        if (!v246)
        {
          ((void (*)(std::__shared_weak_count *))v243->__on_zero_shared)(v243);
          std::__shared_weak_count::__release_weak(v243);
        }
        v242 = v1000;
        v247 = v1001;
        if (v1001)
        {
          v248 = (unint64_t *)&v1001->__shared_owners_;
          do
            v249 = __ldxr(v248);
          while (__stxr(v249 + 1, v248));
          do
            v250 = __ldaxr(v248);
          while (__stlxr(v250 - 1, v248));
          if (!v250)
          {
            ((void (*)(std::__shared_weak_count *))v247->__on_zero_shared)(v247);
            std::__shared_weak_count::__release_weak(v247);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v242 + 96))(&v1013, v242, 0);
      else
LABEL_1126:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1787;
      if (!v1004)
        goto LABEL_1787;
      v647 = v1005;
      if (!v1005)
        goto LABEL_1787;
      v648 = v1009;
      v649 = v1002;
      if (v1011 && v1002)
      {
        v650 = v1000;
        v651 = v1001;
        if (v1001)
        {
          v652 = (unint64_t *)&v1001->__shared_owners_;
          do
            v653 = __ldxr(v652);
          while (__stxr(v653 + 1, v652));
          do
            v654 = __ldaxr(v652);
          while (__stlxr(v654 - 1, v652));
          if (!v654)
          {
            ((void (*)(std::__shared_weak_count *))v651->__on_zero_shared)(v651);
            std::__shared_weak_count::__release_weak(v651);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v650 + 88))(v650, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v649 = v1002;
      }
      v992 = (4 * v241);
      if (v647 == 1)
        goto LABEL_1147;
      if (!(4 * v241))
        goto LABEL_1787;
      v655 = 0;
      do
      {
        if (!v649
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1150;
        }
        v656 = 0;
        do
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v240 + 96))(v240, &v649[v656++]);
        while (v992 != v656);
        v649 += v648;
        ++v655;
      }
      while (v655 != v647 - 1);
LABEL_1147:
      if (!(_DWORD)v992 || v649)
      {
        if (!(_DWORD)v992)
          goto LABEL_1787;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1150:
        abort();
      }
      v906 = 2 * v992;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v240 + 96))(v240, v649++);
        v906 -= 2;
      }
      while (v906);
LABEL_1787:
      v907 = v1013;
      v1013 = 0;
      if (v907)
        (*(void (**)(uint64_t))(*(_QWORD *)v907 + 8))(v907);
      v846 = v1001;
      if (!v1001)
        return;
      v908 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v908);
      while (__stlxr(v848 - 1, v908));
      goto LABEL_1947;
    case 35:
      v999 = &off_24C40A588;
      sub_20B37E0CC(a3, (uint64_t)&v1000);
      v218 = *a2;
      v219 = v1010;
      v220 = v1000;
      if (!v1000)
        goto LABEL_1076;
      v221 = v1001;
      if (v1001)
      {
        v222 = (unint64_t *)&v1001->__shared_owners_;
        do
          v223 = __ldxr(v222);
        while (__stxr(v223 + 1, v222));
        do
          v224 = __ldaxr(v222);
        while (__stlxr(v224 - 1, v222));
        if (!v224)
        {
          ((void (*)(std::__shared_weak_count *))v221->__on_zero_shared)(v221);
          std::__shared_weak_count::__release_weak(v221);
        }
        v220 = v1000;
        v225 = v1001;
        if (v1001)
        {
          v226 = (unint64_t *)&v1001->__shared_owners_;
          do
            v227 = __ldxr(v226);
          while (__stxr(v227 + 1, v226));
          do
            v228 = __ldaxr(v226);
          while (__stlxr(v228 - 1, v226));
          if (!v228)
          {
            ((void (*)(std::__shared_weak_count *))v225->__on_zero_shared)(v225);
            std::__shared_weak_count::__release_weak(v225);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v220 + 96))(&v1013, v220, 0);
      else
LABEL_1076:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1769;
      if (!v1004)
        goto LABEL_1769;
      v626 = v1005;
      if (!v1005)
        goto LABEL_1769;
      v627 = v1009;
      v628 = v1002;
      if (v1011 && v1002)
      {
        v629 = v1000;
        v630 = v1001;
        if (v1001)
        {
          v631 = (unint64_t *)&v1001->__shared_owners_;
          do
            v632 = __ldxr(v631);
          while (__stxr(v632 + 1, v631));
          do
            v633 = __ldaxr(v631);
          while (__stlxr(v633 - 1, v631));
          if (!v633)
          {
            ((void (*)(std::__shared_weak_count *))v630->__on_zero_shared)(v630);
            std::__shared_weak_count::__release_weak(v630);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v629 + 88))(v629, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v628 = v1002;
      }
      v634 = v626 - 1;
      v990 = (4 * v219);
      if (!v634)
        goto LABEL_1097;
      if (!(4 * v219))
        goto LABEL_1769;
      for (i3 = 0; i3 != v634; ++i3)
      {
        if (!v628
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1100;
        }
        v636 = 0;
        do
        {
          v998 = v628[v636];
          (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v218 + 96))(v218, &v998);
          ++v636;
        }
        while (v990 != v636);
        v628 += v627;
      }
LABEL_1097:
      if (!(_DWORD)v990 || v628)
      {
        if (!(_DWORD)v990)
          goto LABEL_1769;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1100:
        abort();
      }
      v900 = 2 * v990;
      do
      {
        v998 = *v628;
        (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v218 + 96))(v218, &v998);
        ++v628;
        v900 -= 2;
      }
      while (v900);
LABEL_1769:
      v901 = v1013;
      v1013 = 0;
      if (v901)
        (*(void (**)(uint64_t))(*(_QWORD *)v901 + 8))(v901);
      v846 = v1001;
      if (!v1001)
        return;
      v902 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v902);
      while (__stlxr(v848 - 1, v902));
      goto LABEL_1947;
    case 36:
      v999 = &off_24C40A800;
      sub_20B37E704(a3, (uint64_t)&v1000);
      v207 = *a2;
      v208 = v1010;
      v209 = v1000;
      if (!v1000)
        goto LABEL_1051;
      v210 = v1001;
      if (v1001)
      {
        v211 = (unint64_t *)&v1001->__shared_owners_;
        do
          v212 = __ldxr(v211);
        while (__stxr(v212 + 1, v211));
        do
          v213 = __ldaxr(v211);
        while (__stlxr(v213 - 1, v211));
        if (!v213)
        {
          ((void (*)(std::__shared_weak_count *))v210->__on_zero_shared)(v210);
          std::__shared_weak_count::__release_weak(v210);
        }
        v209 = v1000;
        v214 = v1001;
        if (v1001)
        {
          v215 = (unint64_t *)&v1001->__shared_owners_;
          do
            v216 = __ldxr(v215);
          while (__stxr(v216 + 1, v215));
          do
            v217 = __ldaxr(v215);
          while (__stlxr(v217 - 1, v215));
          if (!v217)
          {
            ((void (*)(std::__shared_weak_count *))v214->__on_zero_shared)(v214);
            std::__shared_weak_count::__release_weak(v214);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v209 + 96))(&v1013, v209, 0);
      else
LABEL_1051:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1760;
      if (!v1004)
        goto LABEL_1760;
      v616 = v1005;
      if (!v1005)
        goto LABEL_1760;
      v617 = v1009;
      v618 = v1002;
      if (v1011 && v1002)
      {
        v619 = v1000;
        v620 = v1001;
        if (v1001)
        {
          v621 = (unint64_t *)&v1001->__shared_owners_;
          do
            v622 = __ldxr(v621);
          while (__stxr(v622 + 1, v621));
          do
            v623 = __ldaxr(v621);
          while (__stlxr(v623 - 1, v621));
          if (!v623)
          {
            ((void (*)(std::__shared_weak_count *))v620->__on_zero_shared)(v620);
            std::__shared_weak_count::__release_weak(v620);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v619 + 88))(v619, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v618 = v1002;
      }
      v989 = (4 * v208);
      if (v616 == 1)
        goto LABEL_1072;
      if (!(4 * v208))
        goto LABEL_1760;
      v624 = 0;
      do
      {
        if (!v618
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1075;
        }
        v625 = 0;
        do
        {
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v207 + 128))(v207, &v618[v625]);
          v625 += 2;
        }
        while (2 * v989 != v625);
        v618 += 2 * v617;
        ++v624;
      }
      while (v624 != v616 - 1);
LABEL_1072:
      if (!(_DWORD)v989 || v618)
      {
        if (!(_DWORD)v989)
          goto LABEL_1760;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1075:
        abort();
      }
      v897 = 4 * v989;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v207 + 128))(v207, v618);
        v618 += 2;
        v897 -= 4;
      }
      while (v897);
LABEL_1760:
      v898 = v1013;
      v1013 = 0;
      if (v898)
        (*(void (**)(uint64_t))(*(_QWORD *)v898 + 8))(v898);
      v846 = v1001;
      if (!v1001)
        return;
      v899 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v899);
      while (__stlxr(v848 - 1, v899));
      goto LABEL_1947;
    case 37:
      v999 = &off_24C40AA78;
      sub_20B37ED3C(a3, (uint64_t)&v1000);
      v325 = *a2;
      v326 = v1010;
      v327 = v1000;
      if (!v1000)
        goto LABEL_1348;
      v328 = v1001;
      if (v1001)
      {
        v329 = (unint64_t *)&v1001->__shared_owners_;
        do
          v330 = __ldxr(v329);
        while (__stxr(v330 + 1, v329));
        do
          v331 = __ldaxr(v329);
        while (__stlxr(v331 - 1, v329));
        if (!v331)
        {
          ((void (*)(std::__shared_weak_count *))v328->__on_zero_shared)(v328);
          std::__shared_weak_count::__release_weak(v328);
        }
        v327 = v1000;
        v332 = v1001;
        if (v1001)
        {
          v333 = (unint64_t *)&v1001->__shared_owners_;
          do
            v334 = __ldxr(v333);
          while (__stxr(v334 + 1, v333));
          do
            v335 = __ldaxr(v333);
          while (__stlxr(v335 - 1, v333));
          if (!v335)
          {
            ((void (*)(std::__shared_weak_count *))v332->__on_zero_shared)(v332);
            std::__shared_weak_count::__release_weak(v332);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v327 + 96))(&v1013, v327, 0);
      else
LABEL_1348:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1864;
      if (!v1004)
        goto LABEL_1864;
      v739 = v1005;
      if (!v1005)
        goto LABEL_1864;
      v740 = v1009;
      v741 = v1002;
      if (v1011 && v1002)
      {
        v742 = v1000;
        v743 = v1001;
        if (v1001)
        {
          v744 = (unint64_t *)&v1001->__shared_owners_;
          do
            v745 = __ldxr(v744);
          while (__stxr(v745 + 1, v744));
          do
            v746 = __ldaxr(v744);
          while (__stlxr(v746 - 1, v744));
          if (!v746)
          {
            ((void (*)(std::__shared_weak_count *))v743->__on_zero_shared)(v743);
            std::__shared_weak_count::__release_weak(v743);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v742 + 88))(v742, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v741 = v1002;
      }
      v747 = (4 * v326);
      if (v739 == 1)
        goto LABEL_1369;
      if (!(_DWORD)v747)
        goto LABEL_1864;
      v748 = 0;
      do
      {
        if (!v741
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1372;
        }
        for (i4 = 0; i4 != v747; ++i4)
          (*(void (**)(uint64_t, char *))(*(_QWORD *)v325 + 80))(v325, (char *)v741 + i4);
        v741 = (_WORD *)((char *)v741 + v740);
        ++v748;
      }
      while (v748 != v739 - 1);
LABEL_1369:
      if (!(_DWORD)v747 || v741)
      {
        if (!(_DWORD)v747)
          goto LABEL_1864;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1372:
        abort();
      }
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v325 + 80))(v325, v741);
        v741 = (_WORD *)((char *)v741 + 1);
        --v747;
      }
      while (v747);
LABEL_1864:
      v930 = v1013;
      v1013 = 0;
      if (v930)
        (*(void (**)(uint64_t))(*(_QWORD *)v930 + 8))(v930);
      v846 = v1001;
      if (!v1001)
        return;
      v931 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v931);
      while (__stlxr(v848 - 1, v931));
      goto LABEL_1947;
    case 38:
      v999 = &off_24C40ACF0;
      sub_20B37F370(a3, (uint64_t)&v1000);
      v377 = *a2;
      v378 = v1010;
      v379 = v1000;
      if (!v1000)
        goto LABEL_1473;
      v380 = v1001;
      if (v1001)
      {
        v381 = (unint64_t *)&v1001->__shared_owners_;
        do
          v382 = __ldxr(v381);
        while (__stxr(v382 + 1, v381));
        do
          v383 = __ldaxr(v381);
        while (__stlxr(v383 - 1, v381));
        if (!v383)
        {
          ((void (*)(std::__shared_weak_count *))v380->__on_zero_shared)(v380);
          std::__shared_weak_count::__release_weak(v380);
        }
        v379 = v1000;
        v384 = v1001;
        if (v1001)
        {
          v385 = (unint64_t *)&v1001->__shared_owners_;
          do
            v386 = __ldxr(v385);
          while (__stxr(v386 + 1, v385));
          do
            v387 = __ldaxr(v385);
          while (__stlxr(v387 - 1, v385));
          if (!v387)
          {
            ((void (*)(std::__shared_weak_count *))v384->__on_zero_shared)(v384);
            std::__shared_weak_count::__release_weak(v384);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v379 + 96))(&v1013, v379, 0);
      else
LABEL_1473:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1908;
      if (!v1004)
        goto LABEL_1908;
      v791 = v1005;
      if (!v1005)
        goto LABEL_1908;
      v792 = v1009;
      v793 = v1002;
      if (v1011 && v1002)
      {
        v794 = v1000;
        v795 = v1001;
        if (v1001)
        {
          v796 = (unint64_t *)&v1001->__shared_owners_;
          do
            v797 = __ldxr(v796);
          while (__stxr(v797 + 1, v796));
          do
            v798 = __ldaxr(v796);
          while (__stlxr(v798 - 1, v796));
          if (!v798)
          {
            ((void (*)(std::__shared_weak_count *))v795->__on_zero_shared)(v795);
            std::__shared_weak_count::__release_weak(v795);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v794 + 88))(v794, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v793 = v1002;
      }
      v996 = (4 * v378);
      if (v791 == 1)
        goto LABEL_1494;
      if (!(4 * v378))
        goto LABEL_1908;
      v799 = 0;
      do
      {
        if (!v793
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_1497;
        }
        v800 = 0;
        do
          (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v377 + 96))(v377, &v793[v800++]);
        while (v996 != v800);
        v793 += v792;
        ++v799;
      }
      while (v799 != v791 - 1);
LABEL_1494:
      if (!(_DWORD)v996 || v793)
      {
        if (!(_DWORD)v996)
          goto LABEL_1908;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_1497:
        abort();
      }
      v943 = 2 * v996;
      do
      {
        (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v377 + 96))(v377, v793++);
        v943 -= 2;
      }
      while (v943);
LABEL_1908:
      v944 = v1013;
      v1013 = 0;
      if (v944)
        (*(void (**)(uint64_t))(*(_QWORD *)v944 + 8))(v944);
      v846 = v1001;
      if (!v1001)
        return;
      v945 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v945);
      while (__stlxr(v848 - 1, v945));
      goto LABEL_1947;
    case 39:
      v999 = &off_24C40AF68;
      sub_20B37F9A8(a3, (uint64_t)&v1000);
      v132 = *a2;
      v133 = v1010;
      v134 = v1000;
      if (!v1000)
        goto LABEL_877;
      v135 = v1001;
      if (v1001)
      {
        v136 = (unint64_t *)&v1001->__shared_owners_;
        do
          v137 = __ldxr(v136);
        while (__stxr(v137 + 1, v136));
        do
          v138 = __ldaxr(v136);
        while (__stlxr(v138 - 1, v136));
        if (!v138)
        {
          ((void (*)(std::__shared_weak_count *))v135->__on_zero_shared)(v135);
          std::__shared_weak_count::__release_weak(v135);
        }
        v134 = v1000;
        v139 = v1001;
        if (v1001)
        {
          v140 = (unint64_t *)&v1001->__shared_owners_;
          do
            v141 = __ldxr(v140);
          while (__stxr(v141 + 1, v140));
          do
            v142 = __ldaxr(v140);
          while (__stlxr(v142 - 1, v140));
          if (!v142)
          {
            ((void (*)(std::__shared_weak_count *))v139->__on_zero_shared)(v139);
            std::__shared_weak_count::__release_weak(v139);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v134 + 96))(&v1013, v134, 0);
      else
LABEL_877:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1697;
      if (!v1004)
        goto LABEL_1697;
      v544 = v1005;
      if (!v1005)
        goto LABEL_1697;
      v545 = v1009;
      v546 = v1002;
      if (v1011 && v1002)
      {
        v547 = v1000;
        v548 = v1001;
        if (v1001)
        {
          v549 = (unint64_t *)&v1001->__shared_owners_;
          do
            v550 = __ldxr(v549);
          while (__stxr(v550 + 1, v549));
          do
            v551 = __ldaxr(v549);
          while (__stlxr(v551 - 1, v549));
          if (!v551)
          {
            ((void (*)(std::__shared_weak_count *))v548->__on_zero_shared)(v548);
            std::__shared_weak_count::__release_weak(v548);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v547 + 88))(v547, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v546 = v1002;
      }
      v552 = v544 - 1;
      v984 = (4 * v133);
      if (!v552)
        goto LABEL_898;
      if (!(4 * v133))
        goto LABEL_1697;
      for (i5 = 0; i5 != v552; ++i5)
      {
        if (!v546
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_901;
        }
        v554 = 0;
        do
        {
          v998 = v546[v554];
          (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v132 + 96))(v132, &v998);
          ++v554;
        }
        while (v984 != v554);
        v546 += v545;
      }
LABEL_898:
      if (!(_DWORD)v984 || v546)
      {
        if (!(_DWORD)v984)
          goto LABEL_1697;
      }
      else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
LABEL_901:
        abort();
      }
      v876 = 2 * v984;
      do
      {
        v998 = *v546;
        (*(void (**)(uint64_t, __int16 *))(*(_QWORD *)v132 + 96))(v132, &v998);
        ++v546;
        v876 -= 2;
      }
      while (v876);
LABEL_1697:
      v877 = v1013;
      v1013 = 0;
      if (v877)
        (*(void (**)(uint64_t))(*(_QWORD *)v877 + 8))(v877);
      v846 = v1001;
      if (!v1001)
        return;
      v878 = (unint64_t *)&v1001->__shared_owners_;
      do
        v848 = __ldaxr(v878);
      while (__stlxr(v848 - 1, v878));
      goto LABEL_1947;
    case 40:
      v999 = &off_24C40B1E0;
      sub_20B37FFE0(a3, (uint64_t)&v1000);
      v100 = *a2;
      v101 = v1010;
      v102 = v1000;
      if (!v1000)
        goto LABEL_802;
      v103 = v1001;
      if (v1001)
      {
        v104 = (unint64_t *)&v1001->__shared_owners_;
        do
          v105 = __ldxr(v104);
        while (__stxr(v105 + 1, v104));
        do
          v106 = __ldaxr(v104);
        while (__stlxr(v106 - 1, v104));
        if (!v106)
        {
          ((void (*)(std::__shared_weak_count *))v103->__on_zero_shared)(v103);
          std::__shared_weak_count::__release_weak(v103);
        }
        v102 = v1000;
        v107 = v1001;
        if (v1001)
        {
          v108 = (unint64_t *)&v1001->__shared_owners_;
          do
            v109 = __ldxr(v108);
          while (__stxr(v109 + 1, v108));
          do
            v110 = __ldaxr(v108);
          while (__stlxr(v110 - 1, v108));
          if (!v110)
          {
            ((void (*)(std::__shared_weak_count *))v107->__on_zero_shared)(v107);
            std::__shared_weak_count::__release_weak(v107);
          }
        }
      }
      if (v1012)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v102 + 96))(&v1013, v102, 0);
      else
LABEL_802:
        v1013 = 0;
      if (!v1003)
        goto LABEL_1670;
      if (!v1004)
        goto LABEL_1670;
      v513 = v1005;
      if (!v1005)
        goto LABEL_1670;
      v514 = v1009;
      v515 = v1002;
      if (v1011 && v1002)
      {
        v516 = v1000;
        v517 = v1001;
        if (v1001)
        {
          v518 = (unint64_t *)&v1001->__shared_owners_;
          do
            v519 = __ldxr(v518);
          while (__stxr(v519 + 1, v518));
          do
            v520 = __ldaxr(v518);
          while (__stlxr(v520 - 1, v518));
          if (!v520)
          {
            ((void (*)(std::__shared_weak_count *))v517->__on_zero_shared)(v517);
            std::__shared_weak_count::__release_weak(v517);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v516 + 88))(v516, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v515 = v1002;
      }
      v982 = (4 * v101);
      if (v513 == 1)
        goto LABEL_823;
      if (!(4 * v101))
        goto LABEL_1670;
      v521 = 0;
      break;
    default:
      return;
  }
  do
  {
    if (!v515
      && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
    {
      goto LABEL_826;
    }
    v522 = 0;
    do
    {
      (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v100 + 128))(v100, &v515[v522]);
      v522 += 2;
    }
    while (2 * v982 != v522);
    v515 += 2 * v514;
    ++v521;
  }
  while (v521 != v513 - 1);
LABEL_823:
  if (!(_DWORD)v982 || v515)
  {
    if (!(_DWORD)v982)
      goto LABEL_1670;
  }
  else if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
  {
LABEL_826:
    abort();
  }
  v867 = 4 * v982;
  do
  {
    (*(void (**)(uint64_t, _WORD *))(*(_QWORD *)v100 + 128))(v100, v515);
    v515 += 2;
    v867 -= 4;
  }
  while (v867);
LABEL_1670:
  v868 = v1013;
  v1013 = 0;
  if (v868)
    (*(void (**)(uint64_t))(*(_QWORD *)v868 + 8))(v868);
  v846 = v1001;
  if (v1001)
  {
    v869 = (unint64_t *)&v1001->__shared_owners_;
    do
      v848 = __ldaxr(v869);
    while (__stlxr(v848 - 1, v869));
LABEL_1947:
    if (!v848)
    {
      ((void (*)(std::__shared_weak_count *))v846->__on_zero_shared)(v846);
      std::__shared_weak_count::__release_weak(v846);
    }
  }
}

void sub_20B3ECC5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_20B3ED8FC(_QWORD *a1@<X8>)
{
  CGColorSpaceRef DeviceGray;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  CGColorSpaceRef v7;
  std::__shared_weak_count *v8;

  DeviceGray = CGColorSpaceCreateDeviceGray();
  v7 = DeviceGray;
  v3 = (std::__shared_weak_count *)operator new();
  v3->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41A5D8;
  v3->__shared_owners_ = 0;
  v3->__shared_weak_owners_ = 0;
  v3[1].__vftable = (std::__shared_weak_count_vtbl *)DeviceGray;
  v8 = v3;
  sub_20B3ED9EC((uint64_t)&v7, a1);
  v4 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_20B3ED9AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AEC147C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B3ED9C0(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B3ED9D8(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_20B3ED9EC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  const void *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;

  v3 = *(const void **)a1;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  v15 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  sub_20B3EDE90(&v16, v3);
  v7 = v17;
  *a2 = v16;
  a2[1] = v7;
  if (v7)
  {
    v8 = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
    v10 = v17;
    if (v17)
    {
      v11 = (unint64_t *)&v17->__shared_owners_;
      do
        v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
  if (v15)
  {
    v13 = (unint64_t *)&v15->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_20B3EDAD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AEC147C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B3EDAEC(_QWORD *a1@<X8>)
{
  CGColorSpaceRef DeviceRGB;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  CGColorSpaceRef v7;
  std::__shared_weak_count *v8;

  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  v7 = DeviceRGB;
  v3 = (std::__shared_weak_count *)operator new();
  v3->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41A5D8;
  v3->__shared_owners_ = 0;
  v3->__shared_weak_owners_ = 0;
  v3[1].__vftable = (std::__shared_weak_count_vtbl *)DeviceRGB;
  v8 = v3;
  sub_20B3ED9EC((uint64_t)&v7, a1);
  v4 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_20B3EDB9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AEC147C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B3EDBB0(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B3EDBC8(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_20B3EDBDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20AEC0BD8(v5);
  v21[0] = v5;
  sub_20AEC01D0((_QWORD *)(v5 + 16), (uint64_t)(&off_24C41A520)[2 * *a3 + 2], (uint64_t)(&off_24C41A520)[2 * *a3 + 3]);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_20AEC0138();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v14 + 128);
    MEMORY[0x20BD3583C](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_20AECFAB8();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24C41A5B0[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_20B3EDE3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20B3EDE60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B3EDE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B52CE84((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B3EDE90(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_24C41A5D8;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_20B3EDEF0(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B3EDF08(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_20B3EDF20(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B3EDF44(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_20B3EDF64(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP12CGColorSpaceEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP12CGColorSpaceEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP12CGColorSpaceEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP12CGColorSpaceEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

std::__shared_weak_count_vtbl **sub_20B3EDFD4(std::__shared_weak_count_vtbl **a1, std::__shared_weak_count_vtbl *cf, int a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  if (a3)
  {
    sub_20B3EE100(&v12, cf);
    v5 = v13;
    *a1 = v12;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
    if (!v5)
      return a1;
  }
  else
  {
    v12 = cf;
    v5 = (std::__shared_weak_count *)operator new();
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41A638;
    v5->__shared_owners_ = 0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = cf;
    v13 = v5;
    *a1 = cf;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  v9 = v13;
  if (!v13)
    return a1;
  v10 = (unint64_t *)&v13->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_20B3EE0B0(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B3EE0C8(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_20B3EE0DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::ostream::write();
  return a3;
}

_QWORD *sub_20B3EE100(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_24C41A638;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_20B3EE160(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B3EE178(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_20B3EE190(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B3EE1B4(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_20B3EE1D4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP14CGDataConsumerEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP14CGDataConsumerEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP14CGDataConsumerEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP14CGDataConsumerEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

std::__shared_weak_count_vtbl **sub_20B3EE244(std::__shared_weak_count_vtbl **a1, std::__shared_weak_count_vtbl *cf, int a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  if (a3)
  {
    sub_20B2CC464(&v12, cf);
    v5 = v13;
    *a1 = v12;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
    if (!v5)
      return a1;
  }
  else
  {
    v12 = cf;
    v5 = (std::__shared_weak_count *)operator new();
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_24C4185A8;
    v5->__shared_owners_ = 0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = cf;
    v13 = v5;
    *a1 = cf;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  v9 = v13;
  if (!v13)
    return a1;
  v10 = (unint64_t *)&v13->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_20B3EE320(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B3EE338(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_20B3EE34C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *exception;

  if ((*((_BYTE *)a1 + *(_QWORD *)(*a1 - 24) + 32) & 2) != 0)
    return 0;
  std::istream::tellg();
  std::istream::seekg();
  if (a3 < 0)
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24C41FEF0;
    __cxa_throw(exception, (struct type_info *)&unk_24C41FF08, (void (*)(void *))std::exception::~exception);
  }
  std::istream::read();
  return a1[1];
}

uint64_t sub_20B3EE420(_QWORD *a1, uint64_t a2)
{
  uint64_t v5;
  uint64_t v6;

  if ((*((_BYTE *)a1 + *(_QWORD *)(*a1 - 24) + 32) & 2) != 0)
    return 0;
  std::istream::tellg();
  std::istream::seekg();
  if ((*((_BYTE *)a1 + *(_QWORD *)(*a1 - 24) + 32) & 2) == 0)
  {
    std::istream::tellg();
    return v5 - v6;
  }
  return a2;
}

void sub_20B3EE4E0(_QWORD *a1)
{
  std::istream::seekg();
  std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), 0);
}

unint64_t sub_20B3EE518(uint64_t a1)
{
  std::__shared_weak_count *v2;
  CGImageRef v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  CGImageRef v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int Width;
  std::__shared_weak_count *v13;
  CGImageRef v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;

  v3 = *(CGImageRef *)a1;
  v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v2)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v5 = __ldxr(p_shared_owners);
  while (__stxr(v5 + 1, p_shared_owners));
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (!v6)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    if (v3)
      goto LABEL_10;
  }
  else
  {
LABEL_6:
    if (v3)
      goto LABEL_10;
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 223, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_26;
  }
LABEL_10:
  v8 = *(CGImageRef *)a1;
  v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v7)
    goto LABEL_15;
  v9 = (unint64_t *)&v7->__shared_owners_;
  do
    v10 = __ldxr(v9);
  while (__stxr(v10 + 1, v9));
  do
    v11 = __ldaxr(v9);
  while (__stlxr(v11 - 1, v9));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (v8)
      goto LABEL_19;
  }
  else
  {
LABEL_15:
    if (v8)
      goto LABEL_19;
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 169, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
  {
LABEL_26:
    abort();
  }
LABEL_19:
  Width = CGImageGetWidth(*(CGImageRef *)a1);
  v14 = *(CGImageRef *)a1;
  v13 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v13)
    goto LABEL_24;
  v15 = (unint64_t *)&v13->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
    if (v14)
      return Width | ((unint64_t)CGImageGetHeight(*(CGImageRef *)a1) << 32);
  }
  else
  {
LABEL_24:
    if (v14)
      return Width | ((unint64_t)CGImageGetHeight(*(CGImageRef *)a1) << 32);
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 174, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_26;
  }
  return Width | ((unint64_t)CGImageGetHeight(*(CGImageRef *)a1) << 32);
}

void sub_20B3EE6F0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  CGImageRef v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  size_t BitsPerComponent;
  std::__shared_weak_count *v10;
  CGImageRef v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  CGColorSpaceRef ColorSpace;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *size;
  unint64_t *v19;
  unint64_t v20;
  CGColorSpace *v21;
  CGImageByteOrderInfo ByteOrderInfo;
  CGImageByteOrderInfo v23;
  int v24;
  char *v25;
  char *v26;
  char *v27;
  int v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  BOOL v35;
  BOOL v36;
  char *v37;
  std::string *v38;
  char *v39;
  __int128 v40;
  char *v41;
  char *v42;
  __int128 v43;
  CGImageAlphaInfo AlphaInfo;
  __int16 BitmapInfo;
  size_t NumberOfComponents;
  std::__shared_weak_count *v47;
  CGImageRef v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  size_t BitsPerPixel;
  int64x2_t v53;
  int8x16_t v54;
  unint64_t v55;
  int v56;
  int v57;
  char v58;
  int v59;
  char *v60;
  char *v61;
  const char *v62;
  const char *v63;
  size_t v64;
  std::string *v65;
  __int128 v66;
  char *v67;
  __int128 v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  char *v78;
  char *v79;
  _BOOL4 v81;
  BOOL v82;
  char *v83;
  char *v84;
  char *v85;
  std::string *v86;
  char *v87;
  __int128 v88;
  char *v89;
  BOOL v90;
  int v91;
  BOOL v92;
  int v93;
  BOOL v94;
  int v95;
  BOOL v96;
  int v97;
  BOOL v98;
  BOOL v100;
  BOOL v102;
  BOOL v104;
  const char *v106;
  char *v107;
  __int128 v108;
  __int128 v109;
  int v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  char *v114;
  char *v115;
  void *v116;
  int v117;
  int v118;
  int v119;
  _BYTE v120[7];
  __int16 v121;
  char v122;
  CGColorSpaceModel Model;
  __int128 space;
  void *v125;
  char *v126;
  unint64_t v127;
  void *v128[2];
  uint64_t v129;
  std::string v130;
  int v131;
  std::string __p;
  std::string *v133;
  std::string v134;
  std::string *p_p;
  std::string *v136;

  v5 = *(CGImageRef *)a1;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v4)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    if (v5)
      goto LABEL_10;
  }
  else
  {
LABEL_6:
    if (v5)
      goto LABEL_10;
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 179, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_10:
  BitsPerComponent = CGImageGetBitsPerComponent(*(CGImageRef *)a1);
  v125 = 0;
  v126 = 0;
  v127 = 0;
  v11 = *(CGImageRef *)a1;
  v10 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v10)
    goto LABEL_15;
  v12 = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
    if (v11)
      goto LABEL_19;
  }
  else
  {
LABEL_15:
    if (v11)
      goto LABEL_19;
  }
  if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 194, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
LABEL_19:
  ColorSpace = CGImageGetColorSpace(*(CGImageRef *)a1);
  sub_20B3EDE90(&v134, ColorSpace);
  space = *(_OWORD *)&v134.__r_.__value_.__l.__data_;
  if (v134.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v134.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    size = (std::__shared_weak_count *)v134.__r_.__value_.__l.__size_;
    if (v134.__r_.__value_.__l.__size_)
    {
      v19 = (unint64_t *)(v134.__r_.__value_.__l.__size_ + 8);
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 - 1, v19));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
        std::__shared_weak_count::__release_weak(size);
      }
    }
  }
  v21 = (CGColorSpace *)space;
  Model = CGColorSpaceGetModel((CGColorSpaceRef)space);
  ByteOrderInfo = CGImageGetByteOrderInfo(*(CGImageRef *)a1);
  v23 = ByteOrderInfo;
  if (BitsPerComponent == 8 && ByteOrderInfo == kCGImageByteOrderDefault
    || BitsPerComponent == 8 && ByteOrderInfo == kCGImageByteOrder32Little)
  {
    v24 = 0;
  }
  else
  {
    v24 = 0;
    v35 = BitsPerComponent == 32 && ByteOrderInfo == kCGImageByteOrder32Little;
    v36 = ByteOrderInfo == kCGImageByteOrder16Little && BitsPerComponent == 16;
    if (!v36 && !v35)
    {
      v79 = sub_20B2CEDE0(&v125, "Byte order is incompatible.");
      v81 = BitsPerComponent == 16 && v23 == kCGImageByteOrder16Big;
      v82 = v23 == kCGImageByteOrder32Big && BitsPerComponent == 32;
      v126 = v79;
      if (v82 || v81)
      {
        if ((unint64_t)v79 >= v127)
        {
          v84 = sub_20AF5B114(&v125, "Byte order is inverted.");
        }
        else
        {
          v83 = (char *)operator new(0x19uLL);
          *(_QWORD *)v79 = v83;
          *(_OWORD *)(v79 + 8) = xmmword_20B5B03D0;
          strcpy(v83, "Byte order is inverted.");
          v84 = v79 + 24;
        }
        v126 = v84;
        v24 = 1;
      }
      else
      {
        if (BitsPerComponent == 8)
          sub_20B40C288((char ***)&v125);
        else
          sub_20B40C090((char ***)&v125);
        v24 = 5;
      }
    }
  }
  if (CGImageGetPixelFormatInfo(*(CGImageRef *)a1))
  {
    v25 = v126;
    if ((unint64_t)v126 >= v127)
    {
      v29 = (char *)v125;
      v30 = 0xAAAAAAAAAAAAAAABLL * ((v126 - (_BYTE *)v125) >> 3);
      v31 = v30 + 1;
      if (v30 + 1 > 0xAAAAAAAAAAAAAAALL)
        sub_20AEC60B8();
      if (0x5555555555555556 * ((uint64_t)(v127 - (_QWORD)v125) >> 3) > v31)
        v31 = 0x5555555555555556 * ((uint64_t)(v127 - (_QWORD)v125) >> 3);
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v127 - (_QWORD)v125) >> 3) >= 0x555555555555555)
        v32 = 0xAAAAAAAAAAAAAAALL;
      else
        v32 = v31;
      v136 = (std::string *)&v127;
      if (v32)
      {
        if (v32 > 0xAAAAAAAAAAAAAAALL)
          sub_20AEC60CC();
        v33 = (char *)operator new(24 * v32);
      }
      else
      {
        v33 = 0;
      }
      v37 = &v33[24 * v30];
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)v33;
      v134.__r_.__value_.__l.__size_ = (std::string::size_type)v37;
      v38 = (std::string *)&v33[24 * v32];
      v134.__r_.__value_.__r.__words[2] = (std::string::size_type)v37;
      p_p = v38;
      v39 = (char *)operator new(0x30uLL);
      *(_QWORD *)v37 = v39;
      *(_OWORD *)(v37 + 8) = xmmword_20B5F91E0;
      strcpy(v39, "Pixel format is not kCGImagePixelFormatPacked.");
      v27 = v37 + 24;
      if (v25 == v29)
      {
        v125 = v37;
        v126 = v37 + 24;
        v127 = (unint64_t)v38;
      }
      else
      {
        do
        {
          v40 = *(_OWORD *)(v25 - 24);
          *((_QWORD *)v37 - 1) = *((_QWORD *)v25 - 1);
          *(_OWORD *)(v37 - 24) = v40;
          v37 -= 24;
          *((_QWORD *)v25 - 2) = 0;
          *((_QWORD *)v25 - 1) = 0;
          *((_QWORD *)v25 - 3) = 0;
          v25 -= 24;
        }
        while (v25 != v29);
        v25 = (char *)v125;
        v41 = v126;
        v125 = v37;
        v126 = v27;
        v127 = (unint64_t)v38;
        while (v41 != v25)
        {
          if (*(v41 - 1) < 0)
            operator delete(*((void **)v41 - 3));
          v41 -= 24;
        }
      }
      if (v25)
        operator delete(v25);
    }
    else
    {
      v26 = (char *)operator new(0x30uLL);
      *(_QWORD *)v25 = v26;
      *(_OWORD *)(v25 + 8) = xmmword_20B5F91E0;
      strcpy(v26, "Pixel format is not kCGImagePixelFormatPacked.");
      v27 = v25 + 24;
    }
    v126 = v27;
    v28 = 5;
  }
  else
  {
    v28 = 0;
  }
  v119 = v28;
  if (Model >= kCGColorSpaceModelCMYK)
  {
    v131 = 0;
    sub_20B012374(&v130, "Color space model ");
    sub_20B3EDBDC((uint64_t)&v133, (uint64_t)&v130, (int *)&Model);
    v134.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
    v134.__r_.__value_.__l.__size_ = (std::string::size_type)" not yet supported.";
    v134.__r_.__value_.__r.__words[2] = (std::string::size_type)&v130;
    p_p = (std::string *)" not yet supported.";
    v136 = (std::string *)" not yet supported.";
    if (v131 == -1)
      sub_20AECFAB8();
    v128[0] = &v134;
    ((void (*)(void **, std::string *))off_24C41A6D0[v131])(v128, &v130);
    if (v131 == -1)
      sub_20AECFAB8();
    v134.__r_.__value_.__r.__words[0] = (std::string::size_type)v128;
    ((void (*)(std::string *__return_ptr, std::string *, std::string *))off_24C41A6E8[v131])(&__p, &v134, &v130);
    if (v131 != -1)
      ((void (*)(std::string *, std::string *))off_24C41A6A0[v131])(&v134, &v130);
    v42 = v126;
    if ((unint64_t)v126 >= v127)
    {
      v126 = sub_20AED6838(&v125, (uint64_t)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    else
    {
      v43 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
      *((_QWORD *)v126 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
      *(_OWORD *)v42 = v43;
      v126 = v42 + 24;
    }
    v118 = 5;
  }
  else
  {
    v118 = 0;
  }
  AlphaInfo = CGImageGetAlphaInfo(*(CGImageRef *)a1);
  BitmapInfo = CGImageGetBitmapInfo(*(CGImageRef *)a1);
  NumberOfComponents = CGColorSpaceGetNumberOfComponents(v21);
  v48 = *(CGImageRef *)a1;
  v47 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v47)
    goto LABEL_85;
  v49 = (unint64_t *)&v47->__shared_owners_;
  do
    v50 = __ldxr(v49);
  while (__stxr(v50 + 1, v49));
  do
    v51 = __ldaxr(v49);
  while (__stlxr(v51 - 1, v49));
  if (!v51)
  {
    ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
    std::__shared_weak_count::__release_weak(v47);
    if (!v48)
    {
LABEL_86:
      if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 184, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
    }
  }
  else
  {
LABEL_85:
    if (!v48)
      goto LABEL_86;
  }
  BitsPerPixel = CGImageGetBitsPerPixel(*(CGImageRef *)a1);
  v55 = BitsPerPixel;
  v56 = BitmapInfo & 0xF00;
  switch(AlphaInfo)
  {
    case kCGImageAlphaNone:
      if (NumberOfComponents == 3)
      {
        if (BitsPerComponent == 8 && BitsPerPixel == 24)
        {
          v57 = 0;
          v59 = 21;
          v58 = 1;
        }
        else
        {
          v92 = BitsPerComponent == 16 && BitsPerPixel == 48;
          v93 = !v92;
          if (!v92 || (BitmapInfo & 0xF00) != 0)
          {
            v100 = v56 == 0;
            if ((BitmapInfo & 0xF00) == 0)
              v93 = 1;
            if (v93 == 1)
            {
              if (BitsPerComponent != 32 || BitsPerPixel != 96)
                v100 = 1;
              if (v100)
                goto LABEL_264;
              v57 = 0;
              v59 = 24;
              v58 = 1;
            }
            else
            {
              v57 = 0;
              v59 = 23;
              v58 = 1;
            }
          }
          else
          {
            v57 = 0;
            v59 = 22;
            v58 = 1;
          }
        }
      }
      else
      {
        if (NumberOfComponents != 1)
          goto LABEL_264;
        if (BitsPerComponent == 8 && BitsPerPixel == 8)
        {
          v57 = 0;
          v58 = 1;
          v59 = 1;
        }
        else
        {
          v90 = BitsPerComponent == 16 && BitsPerPixel == 16;
          v91 = !v90;
          if (!v90 || (BitmapInfo & 0xF00) != 0)
          {
            v98 = v56 == 0;
            if ((BitmapInfo & 0xF00) == 0)
              v91 = 1;
            if (v91 == 1)
            {
              if (BitsPerComponent != 32 || BitsPerPixel != 32)
                v98 = 1;
              if (v98)
                goto LABEL_264;
              v57 = 0;
              v59 = 4;
              v58 = 1;
            }
            else
            {
              v57 = 0;
              v59 = 3;
              v58 = 1;
            }
          }
          else
          {
            v57 = 0;
            v59 = 2;
            v58 = 1;
          }
        }
      }
      goto LABEL_287;
    case kCGImageAlphaPremultipliedLast:
      v69 = v126;
      if ((unint64_t)v126 < v127)
      {
        v70 = (char *)operator new(0x30uLL);
        *(_QWORD *)v69 = v70;
        *(_OWORD *)(v69 + 8) = xmmword_20B5F91F0;
        strcpy(v70, "Color values are premultiplied with alpha.");
        v71 = v69 + 24;
        goto LABEL_181;
      }
      v74 = (char *)v125;
      v75 = 0xAAAAAAAAAAAAAAABLL * ((v126 - (_BYTE *)v125) >> 3);
      v76 = v75 + 1;
      if (v75 + 1 > 0xAAAAAAAAAAAAAAALL)
        sub_20AEC60B8();
      if (0x5555555555555556 * ((uint64_t)(v127 - (_QWORD)v125) >> 3) > v76)
        v76 = 0x5555555555555556 * ((uint64_t)(v127 - (_QWORD)v125) >> 3);
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v127 - (_QWORD)v125) >> 3) >= 0x555555555555555)
        v77 = 0xAAAAAAAAAAAAAAALL;
      else
        v77 = v76;
      v136 = (std::string *)&v127;
      v117 = v24;
      if (v77)
      {
        if (v77 > 0xAAAAAAAAAAAAAAALL)
          sub_20AEC60CC();
        v78 = (char *)operator new(24 * v77);
      }
      else
      {
        v78 = 0;
      }
      v85 = &v78[24 * v75];
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)v78;
      v134.__r_.__value_.__l.__size_ = (std::string::size_type)v85;
      v86 = (std::string *)&v78[24 * v77];
      v134.__r_.__value_.__r.__words[2] = (std::string::size_type)v85;
      p_p = v86;
      v87 = (char *)operator new(0x30uLL);
      *(_QWORD *)v85 = v87;
      *(_OWORD *)(v85 + 8) = xmmword_20B5F91F0;
      strcpy(v87, "Color values are premultiplied with alpha.");
      v71 = v85 + 24;
      if (v69 == v74)
      {
        v125 = v85;
        v126 = v85 + 24;
        v127 = (unint64_t)v86;
LABEL_178:
        v24 = v117;
        goto LABEL_179;
      }
      do
      {
        v88 = *(_OWORD *)(v69 - 24);
        *((_QWORD *)v85 - 1) = *((_QWORD *)v69 - 1);
        *(_OWORD *)(v85 - 24) = v88;
        v85 -= 24;
        *((_QWORD *)v69 - 2) = 0;
        *((_QWORD *)v69 - 1) = 0;
        *((_QWORD *)v69 - 3) = 0;
        v69 -= 24;
      }
      while (v69 != v74);
      v69 = (char *)v125;
      v89 = v126;
      v125 = v85;
      v126 = v71;
      v127 = (unint64_t)v86;
      if (v89 == v69)
        goto LABEL_178;
      v24 = v117;
      do
      {
        if (*(v89 - 1) < 0)
          operator delete(*((void **)v89 - 3));
        v89 -= 24;
      }
      while (v89 != v69);
LABEL_179:
      if (v69)
        operator delete(v69);
LABEL_181:
      v126 = v71;
      if (BitsPerComponent != 8 || NumberOfComponents != 3 || v55 != 32)
        goto LABEL_264;
      v59 = 29;
      v58 = 1;
      v57 = 4;
LABEL_287:
      sub_20AECFBC8((uint64_t)v125, (uint64_t)v126, " ", 1uLL, &v134, v53, v54);
      v109 = *(_OWORD *)&v134.__r_.__value_.__l.__data_;
      *(_DWORD *)v120 = v134.__r_.__value_.__r.__words[2];
      *(_DWORD *)&v120[3] = *(_DWORD *)((char *)&v134.__r_.__value_.__r.__words[2] + 3);
      v110 = SHIBYTE(v134.__r_.__value_.__r.__words[2]);
      *(_BYTE *)(a2 + 4) = v58;
      *(_DWORD *)a2 = v59;
      *(_WORD *)(a2 + 5) = v121;
      *(_BYTE *)(a2 + 7) = v122;
      *(_DWORD *)(a2 + 8) = v24;
      *(_DWORD *)(a2 + 12) = v119;
      *(_DWORD *)(a2 + 16) = v118;
      *(_DWORD *)(a2 + 20) = v57;
      if (v110 < 0)
      {
        sub_20AEC60F4((_BYTE *)(a2 + 24), (void *)v109, *((unint64_t *)&v109 + 1));
        operator delete((void *)v109);
        v111 = (std::__shared_weak_count *)*((_QWORD *)&space + 1);
        if (!*((_QWORD *)&space + 1))
          goto LABEL_295;
      }
      else
      {
        *(_OWORD *)(a2 + 24) = v109;
        *(_DWORD *)(a2 + 40) = *(_DWORD *)v120;
        *(_DWORD *)(a2 + 43) = *(_DWORD *)&v120[3];
        *(_BYTE *)(a2 + 47) = v110;
        v111 = (std::__shared_weak_count *)*((_QWORD *)&space + 1);
        if (!*((_QWORD *)&space + 1))
          goto LABEL_295;
      }
      v112 = (unint64_t *)&v111->__shared_owners_;
      do
        v113 = __ldaxr(v112);
      while (__stlxr(v113 - 1, v112));
      if (!v113)
      {
        ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
        std::__shared_weak_count::__release_weak(v111);
      }
LABEL_295:
      v114 = (char *)v125;
      if (v125)
      {
        v115 = v126;
        v116 = v125;
        if (v126 != v125)
        {
          do
          {
            if (*(v115 - 1) < 0)
              operator delete(*((void **)v115 - 3));
            v115 -= 24;
          }
          while (v115 != v114);
          v116 = v125;
        }
        v126 = v114;
        operator delete(v116);
      }
      return;
    case kCGImageAlphaLast:
      if (NumberOfComponents != 3)
        goto LABEL_264;
      if (BitsPerComponent == 8 && BitsPerPixel == 32 && (BitmapInfo & 0x2000) != 0)
      {
        v57 = 0;
        v59 = 33;
        v58 = 1;
      }
      else if (BitsPerComponent == 8 && BitsPerPixel == 32)
      {
        v57 = 0;
        v59 = 29;
        v58 = 1;
      }
      else
      {
        v94 = BitsPerComponent == 16 && BitsPerPixel == 64;
        v95 = !v94;
        if (!v94 || (BitmapInfo & 0xF00) != 0)
        {
          v102 = v56 == 0;
          if ((BitmapInfo & 0xF00) == 0)
            v95 = 1;
          if (v95 == 1)
          {
            if (BitsPerComponent != 32 || BitsPerPixel != 128)
              v102 = 1;
            if (v102)
              goto LABEL_264;
            v57 = 0;
            v59 = 32;
            v58 = 1;
          }
          else
          {
            v57 = 0;
            v59 = 31;
            v58 = 1;
          }
        }
        else
        {
          v57 = 0;
          v59 = 30;
          v58 = 1;
        }
      }
      goto LABEL_287;
    case kCGImageAlphaFirst:
      if (NumberOfComponents != 3)
        goto LABEL_264;
      if (BitsPerComponent == 8 && BitsPerPixel == 32 && (BitmapInfo & 0x2000) != 0)
      {
        v57 = 0;
        v59 = 25;
        v58 = 1;
      }
      else if (BitsPerComponent == 8 && BitsPerPixel == 32)
      {
        v57 = 0;
        v59 = 37;
        v58 = 1;
      }
      else
      {
        v96 = BitsPerComponent == 16 && BitsPerPixel == 64;
        v97 = !v96;
        if (!v96 || (BitmapInfo & 0xF00) != 0)
        {
          v104 = v56 == 0;
          if ((BitmapInfo & 0xF00) == 0)
            v97 = 1;
          if (v97 == 1)
          {
            if (BitsPerComponent != 32 || BitsPerPixel != 128)
              v104 = 1;
            if (v104)
              goto LABEL_264;
            v57 = 0;
            v59 = 40;
            v58 = 1;
          }
          else
          {
            v57 = 0;
            v59 = 39;
            v58 = 1;
          }
        }
        else
        {
          v57 = 0;
          v59 = 38;
          v58 = 1;
        }
      }
      goto LABEL_287;
    case kCGImageAlphaNoneSkipLast:
      v72 = v126;
      if ((unint64_t)v126 >= v127)
      {
        v73 = sub_20B209754(&v125, "Skips last component.");
      }
      else
      {
        v126[23] = 21;
        strcpy(v72, "Skips last component.");
        v73 = v72 + 24;
      }
      v126 = v73;
      if (BitsPerComponent != 8 || NumberOfComponents != 3 || v55 != 32)
        goto LABEL_264;
      v59 = 21;
      v58 = 1;
      v57 = 2;
      goto LABEL_287;
    case kCGImageAlphaNoneSkipFirst:
      v60 = v126;
      if ((unint64_t)v126 >= v127)
      {
        v61 = sub_20B00260C(&v125, "Skips first component.");
      }
      else
      {
        *(_OWORD *)v126 = *(_OWORD *)"Skips first component.";
        *(_QWORD *)(v60 + 14) = *(_QWORD *)"mponent.";
        *((_WORD *)v60 + 11) = 5632;
        v61 = v60 + 24;
      }
      v126 = v61;
      if (BitsPerComponent != 8 || NumberOfComponents != 3 || v55 != 32)
        goto LABEL_264;
      v59 = 21;
      v58 = 1;
      v57 = 3;
      goto LABEL_287;
    default:
      v130.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x19uLL);
      *(_OWORD *)&v130.__r_.__value_.__r.__words[1] = xmmword_20B5B03D0;
      strcpy(v130.__r_.__value_.__l.__data_, "Unsupported alpha info ");
      v62 = "invalid alpha";
      if (AlphaInfo == kCGImageAlphaOnly)
        v62 = "kCGImageAlphaOnly";
      if (AlphaInfo == kCGImageAlphaPremultipliedFirst)
        v63 = "kCGImageAlphaPremultipliedFirst";
      else
        v63 = v62;
      v64 = strlen(v63);
      v65 = std::string::append(&v130, v63, v64);
      v66 = *(_OWORD *)&v65->__r_.__value_.__l.__data_;
      v134.__r_.__value_.__r.__words[2] = v65->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v134.__r_.__value_.__l.__data_ = v66;
      v65->__r_.__value_.__l.__size_ = 0;
      v65->__r_.__value_.__r.__words[2] = 0;
      v65->__r_.__value_.__r.__words[0] = 0;
      v67 = v126;
      if ((unint64_t)v126 >= v127)
      {
        v126 = sub_20AED6838(&v125, (uint64_t)&v134);
        if (SHIBYTE(v134.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v134.__r_.__value_.__l.__data_);
      }
      else
      {
        v68 = *(_OWORD *)&v134.__r_.__value_.__l.__data_;
        *((_QWORD *)v126 + 2) = *((_QWORD *)&v134.__r_.__value_.__l + 2);
        *(_OWORD *)v67 = v68;
        memset(&v134, 0, sizeof(v134));
        v126 = v67 + 24;
      }
      if (SHIBYTE(v130.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v130.__r_.__value_.__l.__data_);
LABEL_264:
      v131 = 0;
      sub_20AF71210(&v130, "For channels=");
      std::to_string(&__p, NumberOfComponents);
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
      v134.__r_.__value_.__l.__size_ = (std::string::size_type)&__p;
      v134.__r_.__value_.__r.__words[2] = (std::string::size_type)&v130;
      p_p = &__p;
      v136 = &__p;
      if (v131 == -1)
        sub_20AECFAB8();
      v133 = &v134;
      ((void (*)(std::string **, std::string *))off_24C41A6B8[v131])(&v133, &v130);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
      v134.__r_.__value_.__l.__size_ = (std::string::size_type)", bits_per_component=";
      v134.__r_.__value_.__r.__words[2] = (std::string::size_type)&v130;
      p_p = (std::string *)", bits_per_component=";
      v136 = (std::string *)", bits_per_component=";
      if (v131 == -1)
        sub_20AECFAB8();
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v134;
      ((void (*)(std::string *, std::string *))off_24C41A700[v131])(&__p, &v130);
      std::to_string(&__p, BitsPerComponent);
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
      v134.__r_.__value_.__l.__size_ = (std::string::size_type)&__p;
      v134.__r_.__value_.__r.__words[2] = (std::string::size_type)&v130;
      p_p = &__p;
      v136 = &__p;
      if (v131 == -1)
        sub_20AECFAB8();
      v133 = &v134;
      ((void (*)(std::string **, std::string *))off_24C41A6B8[v131])(&v133, &v130);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
      v134.__r_.__value_.__l.__size_ = (std::string::size_type)", bits_per_pixel=";
      v134.__r_.__value_.__r.__words[2] = (std::string::size_type)&v130;
      p_p = (std::string *)", bits_per_pixel=";
      v136 = (std::string *)", bits_per_pixel=";
      if (v131 == -1)
        sub_20AECFAB8();
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v134;
      ((void (*)(std::string *, std::string *))off_24C41A718[v131])(&__p, &v130);
      std::to_string(&__p, v55);
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
      v134.__r_.__value_.__l.__size_ = (std::string::size_type)&__p;
      v134.__r_.__value_.__r.__words[2] = (std::string::size_type)&v130;
      p_p = &__p;
      v136 = &__p;
      if (v131 == -1)
        sub_20AECFAB8();
      v133 = &v134;
      ((void (*)(std::string **, std::string *))off_24C41A6B8[v131])(&v133, &v130);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
      v134.__r_.__value_.__l.__size_ = (std::string::size_type)", float_components=";
      v134.__r_.__value_.__r.__words[2] = (std::string::size_type)&v130;
      p_p = (std::string *)", float_components=";
      v136 = (std::string *)", float_components=";
      if (v131 == -1)
        sub_20AECFAB8();
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v134;
      ((void (*)(std::string *, std::string *))off_24C41A6D0[v131])(&__p, &v130);
      v106 = "false";
      if (v56)
        v106 = "true";
      v133 = (std::string *)v106;
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
      v134.__r_.__value_.__l.__size_ = (std::string::size_type)&v133;
      v134.__r_.__value_.__r.__words[2] = (std::string::size_type)&v130;
      p_p = (std::string *)&v133;
      v136 = (std::string *)&v133;
      if (v131 == -1)
        sub_20AECFAB8();
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v134;
      ((void (*)(std::string *, std::string *))off_24C41A730[v131])(&__p, &v130);
      if (v131 == -1)
        sub_20AECFAB8();
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
      ((void (*)(void **__return_ptr, std::string *, std::string *))off_24C41A6E8[v131])(v128, &v134, &v130);
      if (v131 != -1)
        ((void (*)(std::string *, std::string *))off_24C41A6A0[v131])(&v134, &v130);
      v107 = v126;
      if ((unint64_t)v126 >= v127)
      {
        v126 = sub_20AED6838(&v125, (uint64_t)v128);
        if (SHIBYTE(v129) < 0)
          operator delete(v128[0]);
      }
      else
      {
        v108 = *(_OWORD *)v128;
        *((_QWORD *)v126 + 2) = v129;
        *(_OWORD *)v107 = v108;
        v126 = v107 + 24;
      }
      v58 = 0;
      v59 = 0;
      v57 = 5;
      goto LABEL_287;
  }
}

void sub_20B3EF89C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  uint64_t v36;

  sub_20AEC65A4(v36 - 128);
  sub_20AEC147C((uint64_t)&a13);
  sub_20AEC2E90(&a15);
  _Unwind_Resume(a1);
}

void sub_20B3EF924()
{
  JUMPOUT(0x20B3EF92CLL);
}

void sub_20B3EF948(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20AECFA60((uint64_t)&a21);
  sub_20AEC147C((uint64_t)&a13);
  sub_20AEC2E90(&a15);
  _Unwind_Resume(a1);
}

void sub_20B3EF9C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_20AEC2E90((void **)va);
  _Unwind_Resume(a1);
}

void sub_20B3EFA10(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  int v6;
  __int16 v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  int v18;
  char v19;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    v5 = *(_QWORD *)(a1 + 40);
    v6 = *(_DWORD *)(a1 + 48);
    v7 = *(_WORD *)(a1 + 52);
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v5 = *(_QWORD *)(a1 + 40);
    v6 = *(_DWORD *)(a1 + 48);
    v7 = *(_WORD *)(a1 + 52);
  }
  v15 = v1;
  v16 = v2;
  v17 = v5;
  v18 = v6;
  v19 = v7;
  if (!v2)
    goto LABEL_12;
  v9 = (unint64_t *)&v2->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v11 = v17;
    if (!v19)
      goto LABEL_21;
  }
  else
  {
LABEL_12:
    v11 = v17;
    if (!(_BYTE)v7)
      goto LABEL_21;
  }
  if (v11)
  {
    if (v16)
    {
      v12 = (unint64_t *)&v16->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
  }
LABEL_21:
  __asm { BR              X10 }
}

void sub_20B3EFBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24C40ACF0;
  sub_20B37F370((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = 2 * ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      sub_20B4EEC24(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_20B3EE244(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_20B2CC354(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_20B2CC354((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_20B407C6C(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
        {
          abort();
        }
        JUMPOUT(0x20B3F0670);
      }
      JUMPOUT(0x20B3F0654);
    }
    JUMPOUT(0x20B3F072CLL);
  }
  JUMPOUT(0x20B3F0634);
}

void sub_20B3EFC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24C409E20;
  sub_20B37CE28((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = 4 * ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      sub_20B4EEC24(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_20B3EE244(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_20B2CC354(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_20B2CC354((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_20B407C6C(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
        {
          abort();
        }
        JUMPOUT(0x20B3F0670);
      }
      JUMPOUT(0x20B3F0654);
    }
    JUMPOUT(0x20B3F072CLL);
  }
  JUMPOUT(0x20B3F0634);
}

void sub_20B3EFCF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24C408CD8;
  sub_20B37A2A8((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      sub_20B4EEC24(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_20B3EE244(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_20B2CC354(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_20B2CC354((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_20B407C6C(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
        {
          abort();
        }
        JUMPOUT(0x20B3F0670);
      }
      JUMPOUT(0x20B3F0654);
    }
    JUMPOUT(0x20B3F072CLL);
  }
  JUMPOUT(0x20B3F0634);
}

void sub_20B3EFD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24C40AA78;
  sub_20B37ED3C((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      sub_20B4EEC24(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_20B3EE244(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_20B2CC354(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_20B2CC354((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_20B407C6C(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
        {
          abort();
        }
        JUMPOUT(0x20B3F0670);
      }
      JUMPOUT(0x20B3F0654);
    }
    JUMPOUT(0x20B3F072CLL);
  }
  JUMPOUT(0x20B3F0634);
}

void sub_20B3EFDF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24C408A60;
  sub_20B379C70((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = 4 * ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      sub_20B4EEC24(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_20B3EE244(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_20B2CC354(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_20B2CC354((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_20B407C6C(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
        {
          abort();
        }
        JUMPOUT(0x20B3F0670);
      }
      JUMPOUT(0x20B3F0654);
    }
    JUMPOUT(0x20B3F072CLL);
  }
  JUMPOUT(0x20B3F0634);
}

void sub_20B3EFE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24C4096B8;
  sub_20B37BB84((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      sub_20B4EEC24(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_20B3EE244(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_20B2CC354(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_20B2CC354((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_20B407C6C(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
        {
          abort();
        }
        JUMPOUT(0x20B3F0670);
      }
      JUMPOUT(0x20B3F0654);
    }
    JUMPOUT(0x20B3F072CLL);
  }
  JUMPOUT(0x20B3F0634);
}

void sub_20B3EFEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24C409BA8;
  sub_20B37C7F0((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = 2 * ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      sub_20B4EEC24(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_20B3EE244(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_20B2CC354(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_20B2CC354((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_20B407C6C(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
        {
          abort();
        }
        JUMPOUT(0x20B3F0670);
      }
      JUMPOUT(0x20B3F0654);
    }
    JUMPOUT(0x20B3F072CLL);
  }
  JUMPOUT(0x20B3F0634);
}

void sub_20B3EFF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24C4082F8;
  sub_20B2D7B44((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      sub_20B4EEC24(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_20B3EE244(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_20B2CC354(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_20B2CC354((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_20B407C6C(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
        {
          abort();
        }
        JUMPOUT(0x20B3F0670);
      }
      JUMPOUT(0x20B3F0654);
    }
    JUMPOUT(0x20B3F072CLL);
  }
  JUMPOUT(0x20B3F0634);
}

void sub_20B3F0000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27)
{
  uint64_t *v27;
  uint64_t v28;
  const UInt8 *v29;
  uint64_t v30;
  CFIndex v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count_vtbl *v34;
  std::__shared_weak_count *v35;
  unint64_t *p_shared_owners;
  unint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD v50[4];
  std::__shared_weak_count *v51;
  std::__shared_weak_count_vtbl *v52[2];
  CFDataRef v53;
  std::__shared_weak_count *v54;
  uint64_t v55;

  a20 = &off_24C405688;
  sub_20B372128((uint64_t)&a11, (uint64_t)&a21);
  v31 = 0;
  if (a24 && a25)
    v31 = 2 * ((a25 - 1) * a27 + (a24 - 1) * a26 + 1);
  if (!a22)
    goto LABEL_46;
  v32 = (unint64_t *)(a22 + 8);
  do
    v33 = __ldaxr(v32);
  while (__stlxr(v33 - 1, v32));
  if (v33)
  {
LABEL_46:
    if (v29
      || !v31
      || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      sub_20B4EEC24(v29, v31, &v53);
      v34 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v53);
      sub_20B3EE244(v52, v34, 0);
      v35 = v54;
      if (v54)
      {
        p_shared_owners = (unint64_t *)&v54->__shared_owners_;
        do
          v37 = __ldaxr(p_shared_owners);
        while (__stlxr(v37 - 1, p_shared_owners));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
      if (v51)
      {
        v38 = &v51->__shared_owners_;
        do
          v39 = __ldaxr((unint64_t *)v38);
        while (__stlxr(v39 - 1, (unint64_t *)v38));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
          std::__shared_weak_count::__release_weak(v51);
        }
      }
      sub_20B2CC354(v50, (uint64_t)v52);
      v40 = *(_DWORD *)(v28 + 48);
      v41 = *(unsigned int *)(v28 + 32);
      sub_20B2CC354((_QWORD *)(v30 - 104), (uint64_t)v50);
      *(_QWORD *)(v30 - 72) = v41 | 0x100000000;
      v53 = (CFDataRef)(v30 - 104);
      v55 = v30 - 72;
      sub_20B407C6C(v30 - 88, v40);
      v43 = *(_QWORD *)(v30 - 88);
      v42 = *(_QWORD *)(v30 - 80);
      *v27 = v43;
      v27[1] = v42;
      *(_QWORD *)(v30 - 88) = 0;
      *(_QWORD *)(v30 - 80) = 0;
      v44 = *(std::__shared_weak_count **)(v30 - 96);
      if (v44)
      {
        v45 = (unint64_t *)&v44->__shared_owners_;
        do
          v46 = __ldaxr(v45);
        while (__stlxr(v46 - 1, v45));
        if (!v46)
        {
          ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
          std::__shared_weak_count::__release_weak(v44);
        }
        v43 = *v27;
        v42 = v27[1];
      }
      if (!v42)
        goto LABEL_32;
      v47 = (unint64_t *)(v42 + 8);
      do
        v48 = __ldxr(v47);
      while (__stxr(v48 + 1, v47));
      do
        v49 = __ldaxr(v47);
      while (__stlxr(v49 - 1, v47));
      if (v49)
      {
LABEL_32:
        if (!v43
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
        {
          abort();
        }
        JUMPOUT(0x20B3F0670);
      }
      JUMPOUT(0x20B3F0654);
    }
    JUMPOUT(0x20B3F072CLL);
  }
  JUMPOUT(0x20B3F0634);
}

void sub_20B3F0070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27)
{
  uint64_t *v27;
  uint64_t v28;
  const UInt8 *v29;
  uint64_t v30;
  CFIndex v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count_vtbl *v34;
  std::__shared_weak_count *v35;
  unint64_t *p_shared_owners;
  unint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD v50[4];
  std::__shared_weak_count *v51;
  std::__shared_weak_count_vtbl *v52[2];
  CFDataRef v53;
  std::__shared_weak_count *v54;
  uint64_t v55;

  a20 = &off_24C405448;
  sub_20B2D7590((uint64_t)&a11, (uint64_t)&a21);
  v31 = 0;
  if (a24 && a25)
    v31 = 2 * ((a25 - 1) * a27 + (a24 - 1) * a26 + 1);
  if (!a22)
    goto LABEL_46;
  v32 = (unint64_t *)(a22 + 8);
  do
    v33 = __ldaxr(v32);
  while (__stlxr(v33 - 1, v32));
  if (v33)
  {
LABEL_46:
    if (v29
      || !v31
      || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      sub_20B4EEC24(v29, v31, &v53);
      v34 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v53);
      sub_20B3EE244(v52, v34, 0);
      v35 = v54;
      if (v54)
      {
        p_shared_owners = (unint64_t *)&v54->__shared_owners_;
        do
          v37 = __ldaxr(p_shared_owners);
        while (__stlxr(v37 - 1, p_shared_owners));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
      if (v51)
      {
        v38 = &v51->__shared_owners_;
        do
          v39 = __ldaxr((unint64_t *)v38);
        while (__stlxr(v39 - 1, (unint64_t *)v38));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
          std::__shared_weak_count::__release_weak(v51);
        }
      }
      sub_20B2CC354(v50, (uint64_t)v52);
      v40 = *(_DWORD *)(v28 + 48);
      v41 = *(unsigned int *)(v28 + 32);
      sub_20B2CC354((_QWORD *)(v30 - 104), (uint64_t)v50);
      *(_QWORD *)(v30 - 72) = v41 | 0x100000000;
      v53 = (CFDataRef)(v30 - 104);
      v55 = v30 - 72;
      sub_20B407C6C(v30 - 88, v40);
      v43 = *(_QWORD *)(v30 - 88);
      v42 = *(_QWORD *)(v30 - 80);
      *v27 = v43;
      v27[1] = v42;
      *(_QWORD *)(v30 - 88) = 0;
      *(_QWORD *)(v30 - 80) = 0;
      v44 = *(std::__shared_weak_count **)(v30 - 96);
      if (v44)
      {
        v45 = (unint64_t *)&v44->__shared_owners_;
        do
          v46 = __ldaxr(v45);
        while (__stlxr(v46 - 1, v45));
        if (!v46)
        {
          ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
          std::__shared_weak_count::__release_weak(v44);
        }
        v43 = *v27;
        v42 = v27[1];
      }
      if (!v42)
        goto LABEL_32;
      v47 = (unint64_t *)(v42 + 8);
      do
        v48 = __ldxr(v47);
      while (__stxr(v48 + 1, v47));
      do
        v49 = __ldaxr(v47);
      while (__stlxr(v49 - 1, v47));
      if (v49)
      {
LABEL_32:
        if (!v43
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
        {
          abort();
        }
        JUMPOUT(0x20B3F0670);
      }
      JUMPOUT(0x20B3F0654);
    }
    JUMPOUT(0x20B3F072CLL);
  }
  JUMPOUT(0x20B3F0634);
}

void sub_20B3F00E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24C409930;
  sub_20B37C1B8((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = 2 * ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      sub_20B4EEC24(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_20B3EE244(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_20B2CC354(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_20B2CC354((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_20B407C6C(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
        {
          abort();
        }
        JUMPOUT(0x20B3F0670);
      }
      JUMPOUT(0x20B3F0654);
    }
    JUMPOUT(0x20B3F072CLL);
  }
  JUMPOUT(0x20B3F0634);
}

void sub_20B3F0164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24C4087E8;
  sub_20B379638((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = 2 * ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      sub_20B4EEC24(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_20B3EE244(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_20B2CC354(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_20B2CC354((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_20B407C6C(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
        {
          abort();
        }
        JUMPOUT(0x20B3F0670);
      }
      JUMPOUT(0x20B3F0654);
    }
    JUMPOUT(0x20B3F072CLL);
  }
  JUMPOUT(0x20B3F0634);
}

void sub_20B3F01E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27)
{
  uint64_t *v27;
  uint64_t v28;
  const UInt8 *v29;
  uint64_t v30;
  CFIndex v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count_vtbl *v34;
  std::__shared_weak_count *v35;
  unint64_t *p_shared_owners;
  unint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD v50[4];
  std::__shared_weak_count *v51;
  std::__shared_weak_count_vtbl *v52[2];
  CFDataRef v53;
  std::__shared_weak_count *v54;
  uint64_t v55;

  a20 = &off_24C405900;
  sub_20B3726DC((uint64_t)&a11, (uint64_t)&a21);
  v31 = 0;
  if (a24 && a25)
    v31 = 4 * ((a25 - 1) * a27 + (a24 - 1) * a26 + 1);
  if (!a22)
    goto LABEL_46;
  v32 = (unint64_t *)(a22 + 8);
  do
    v33 = __ldaxr(v32);
  while (__stlxr(v33 - 1, v32));
  if (v33)
  {
LABEL_46:
    if (v29
      || !v31
      || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      sub_20B4EEC24(v29, v31, &v53);
      v34 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v53);
      sub_20B3EE244(v52, v34, 0);
      v35 = v54;
      if (v54)
      {
        p_shared_owners = (unint64_t *)&v54->__shared_owners_;
        do
          v37 = __ldaxr(p_shared_owners);
        while (__stlxr(v37 - 1, p_shared_owners));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
      if (v51)
      {
        v38 = &v51->__shared_owners_;
        do
          v39 = __ldaxr((unint64_t *)v38);
        while (__stlxr(v39 - 1, (unint64_t *)v38));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
          std::__shared_weak_count::__release_weak(v51);
        }
      }
      sub_20B2CC354(v50, (uint64_t)v52);
      v40 = *(_DWORD *)(v28 + 48);
      v41 = *(unsigned int *)(v28 + 32);
      sub_20B2CC354((_QWORD *)(v30 - 104), (uint64_t)v50);
      *(_QWORD *)(v30 - 72) = v41 | 0x100000000;
      v53 = (CFDataRef)(v30 - 104);
      v55 = v30 - 72;
      sub_20B407C6C(v30 - 88, v40);
      v43 = *(_QWORD *)(v30 - 88);
      v42 = *(_QWORD *)(v30 - 80);
      *v27 = v43;
      v27[1] = v42;
      *(_QWORD *)(v30 - 88) = 0;
      *(_QWORD *)(v30 - 80) = 0;
      v44 = *(std::__shared_weak_count **)(v30 - 96);
      if (v44)
      {
        v45 = (unint64_t *)&v44->__shared_owners_;
        do
          v46 = __ldaxr(v45);
        while (__stlxr(v46 - 1, v45));
        if (!v46)
        {
          ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
          std::__shared_weak_count::__release_weak(v44);
        }
        v43 = *v27;
        v42 = v27[1];
      }
      if (!v42)
        goto LABEL_32;
      v47 = (unint64_t *)(v42 + 8);
      do
        v48 = __ldxr(v47);
      while (__stxr(v48 + 1, v47));
      do
        v49 = __ldaxr(v47);
      while (__stlxr(v49 - 1, v47));
      if (v49)
      {
LABEL_32:
        if (!v43
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
        {
          abort();
        }
        JUMPOUT(0x20B3F0670);
      }
      JUMPOUT(0x20B3F0654);
    }
    JUMPOUT(0x20B3F072CLL);
  }
  JUMPOUT(0x20B3F0634);
}

void sub_20B3F0258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24C408570;
  sub_20B379000((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = 2 * ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      sub_20B4EEC24(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_20B3EE244(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_20B2CC354(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_20B2CC354((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_20B407C6C(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
        {
          abort();
        }
        JUMPOUT(0x20B3F0670);
      }
      JUMPOUT(0x20B3F0654);
    }
    JUMPOUT(0x20B3F072CLL);
  }
  JUMPOUT(0x20B3F0634);
}

void sub_20B3F02DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24C40AF68;
  sub_20B37F9A8((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = 2 * ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      sub_20B4EEC24(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_20B3EE244(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_20B2CC354(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_20B2CC354((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_20B407C6C(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
        {
          abort();
        }
        JUMPOUT(0x20B3F0670);
      }
      JUMPOUT(0x20B3F0654);
    }
    JUMPOUT(0x20B3F072CLL);
  }
  JUMPOUT(0x20B3F0634);
}

void sub_20B3F0360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  uint64_t *v29;
  uint64_t v30;
  const UInt8 *v31;
  uint64_t v32;
  CFIndex v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count_vtbl *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  std::__shared_weak_count *v53;
  std::__shared_weak_count_vtbl *v54[2];
  CFDataRef v55;
  std::__shared_weak_count *v56;
  uint64_t v57;

  a20 = &off_24C40A098;
  sub_20B37D460((uint64_t)&a11, (uint64_t)&a21);
  v33 = 0;
  if (a24 && a25 && a26)
    v33 = ((a25 - 1) * a28 + (a24 - 1) * a27 + a29 * (a26 - 1) + 1);
  if (!a22)
    goto LABEL_47;
  v34 = (unint64_t *)(a22 + 8);
  do
    v35 = __ldaxr(v34);
  while (__stlxr(v35 - 1, v34));
  if (v35)
  {
LABEL_47:
    if (v31
      || !v33
      || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      sub_20B4EEC24(v31, v33, &v55);
      v36 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateWithCFData(v55);
      sub_20B3EE244(v54, v36, 0);
      v37 = v56;
      if (v56)
      {
        p_shared_owners = (unint64_t *)&v56->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      if (v53)
      {
        v40 = &v53->__shared_owners_;
        do
          v41 = __ldaxr((unint64_t *)v40);
        while (__stlxr(v41 - 1, (unint64_t *)v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
      sub_20B2CC354(v52, (uint64_t)v54);
      v42 = *(_DWORD *)(v30 + 48);
      v43 = *(unsigned int *)(v30 + 32);
      sub_20B2CC354((_QWORD *)(v32 - 104), (uint64_t)v52);
      *(_QWORD *)(v32 - 72) = v43 | 0x100000000;
      v55 = (CFDataRef)(v32 - 104);
      v57 = v32 - 72;
      sub_20B407C6C(v32 - 88, v42);
      v45 = *(_QWORD *)(v32 - 88);
      v44 = *(_QWORD *)(v32 - 80);
      *v29 = v45;
      v29[1] = v44;
      *(_QWORD *)(v32 - 88) = 0;
      *(_QWORD *)(v32 - 80) = 0;
      v46 = *(std::__shared_weak_count **)(v32 - 96);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
        v45 = *v29;
        v44 = v29[1];
      }
      if (!v44)
        goto LABEL_33;
      v49 = (unint64_t *)(v44 + 8);
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (v51)
      {
LABEL_33:
        if (!v45
          && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 165, (uint64_t)"IsValid()", 9, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
        {
          abort();
        }
        JUMPOUT(0x20B3F0670);
      }
      JUMPOUT(0x20B3F0654);
    }
    JUMPOUT(0x20B3F072CLL);
  }
  JUMPOUT(0x20B3F0634);
}

void sub_20B3F03E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (**a20)(),uint64_t a21,uint64_t a22)
{
  unint64_t *v22;
  unint64_t v23;

  a20 = &off_24C40B1E0;
  sub_20B37FFE0((uint64_t)&a11, (uint64_t)&a21);
  if (a22)
  {
    v22 = (unint64_t *)(a22 + 8);
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    JUMPOUT(0x20B3F0460);
  }
  JUMPOUT(0x20B3F0464);
}

void sub_20B3F06FC()
{
  sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)&unk_20B5AC231, 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_20B532360);
  JUMPOUT(0x20B3F072CLL);
}

void sub_20B3F0734(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  uint64_t v18;

  sub_20AEC147C(v18);
  sub_20AEC147C((uint64_t)&a9);
  sub_20AEC147C((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_20B3F0758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  uint64_t v18;

  sub_20AEC147C(v18 - 104);
  sub_20AEC147C((uint64_t)&a9);
  sub_20AEC147C((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_20B3F077C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  sub_20AEC147C((uint64_t)&a9);
  sub_20AEC147C((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_20B3F0798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_20AEC147C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B3F07AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  sub_20AEC147C((uint64_t)va1);
  sub_20AF9E0BC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B3F07C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AF9E0BC((uint64_t)va);
  _Unwind_Resume(a1);
}

#error "20B3F07DC: too big function (funcsize=0)"

void sub_20B405360(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,std::__shared_weak_count *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48,uint64_t a49,int a50,__int16 a51,char a52,char a53)
{
  uint64_t v53;
  uint64_t v54;
  std::__shared_weak_count *v56;
  unint64_t *p_shared_owners;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  unint64_t *v61;
  unint64_t v62;

  if (a23)
    (*(void (**)(uint64_t))(*(_QWORD *)a23 + 8))(a23);
  sub_20B041384((uint64_t)&a38);
  sub_20B27D614((uint64_t)&a48);
  sub_20AEC147C(v54 - 176);
  v56 = *(std::__shared_weak_count **)(v53 + 8);
  if (v56)
  {
    p_shared_owners = (unint64_t *)&v56->__shared_owners_;
    do
      v58 = __ldaxr(p_shared_owners);
    while (__stlxr(v58 - 1, p_shared_owners));
    if (!v58)
    {
      ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
      std::__shared_weak_count::__release_weak(v56);
    }
  }
  v59 = *(_QWORD **)(v53 + 272);
  if (v59 == (_QWORD *)(v54 - 144))
  {
    v60 = 4;
    v59 = (_QWORD *)(v54 - 144);
  }
  else
  {
    if (!v59)
    {
LABEL_13:
      if (a27)
      {
        v61 = (unint64_t *)&a27->__shared_owners_;
        do
          v62 = __ldaxr(v61);
        while (__stlxr(v62 - 1, v61));
        if (!v62)
        {
          ((void (*)(std::__shared_weak_count *))a27->__on_zero_shared)(a27);
          std::__shared_weak_count::__release_weak(a27);
        }
      }
      if (a22 < 0)
        operator delete(__p);
      _Unwind_Resume(a1);
    }
    v60 = 5;
  }
  (*(void (**)(void))(*v59 + 8 * v60))();
  goto LABEL_13;
}

uint64_t sub_20B407AF4(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  uint64_t result;
  char v6;
  _DWORD v7[6];
  int v8;
  _QWORD v9[5];
  _QWORD *v10;

  v8 = 0;
  sub_20AF810D0(v7, "Cannot copy CGImage of format ");
  sub_20AF86710((uint64_t)&v6, (uint64_t)v7, a2);
  v9[0] = v7;
  v9[1] = " into Image of format ";
  v9[2] = v7;
  v9[3] = " into Image of format ";
  v9[4] = " into Image of format ";
  if (v8 == -1)
    sub_20AECFAB8();
  v10 = v9;
  ((void (*)(_QWORD **, _DWORD *))off_24C41B168[v8])(&v10, v7);
  sub_20AF86710((uint64_t)v9, (uint64_t)v7, a3);
  if (v8 == -1)
    sub_20AECFAB8();
  v9[0] = &v10;
  result = ((uint64_t (*)(_QWORD *, _DWORD *))off_24C41A6E8[v8])(v9, v7);
  if (v8 != -1)
    return ((uint64_t (*)(_QWORD *, _DWORD *))off_24C41A6A0[v8])(v9, v7);
  return result;
}

void sub_20B407C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B407C1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B407C30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B407C44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B407C58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B407C6C(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

void sub_20B407CA8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, CGFloat *decode, BOOL shouldInterpolate, CGColorRenderingIntent intent, CGDataProviderRef provider, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  _QWORD *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  CGImageRef v29;
  std::__shared_weak_count *v30;
  unint64_t *p_shared_owners;
  unint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  CGDataProviderRef v38;
  std::__shared_weak_count *v39;
  CGColorSpaceRef v40[10];

  sub_20B2CC354(&v38, *(_QWORD *)v24);
  v25 = *(unint64_t **)(v24 + 8);
  v26 = **(_QWORD **)(v24 + 16);
  v27 = *v25;
  if ((v26 & 0xFF00000000) != 0)
  {
    if (v26 < v27
      && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 105, (uint64_t)"bytes_per_row >= min_bytes_per_row", 34, (uint64_t)"stride must not overlap internally", 34, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
  }
  else
  {
    v26 = *v25;
  }
  sub_20B3ED8FC(v40);
  v28 = (std::__shared_weak_count *)v40[1];
  v29 = CGImageCreate(v27, HIDWORD(v27), 8uLL, 8uLL, v26, v40[0], 0, v38, 0, 0, kCGRenderingIntentDefault);
  v30 = (std::__shared_weak_count *)operator new();
  v30->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v30->__shared_owners_;
  v30->__vftable = (std::__shared_weak_count_vtbl *)&off_24C418558;
  v30->__shared_weak_owners_ = 0;
  v30[1].__vftable = (std::__shared_weak_count_vtbl *)v29;
  sub_20B40BF94(v23, v29, v30);
  do
    v32 = __ldaxr(p_shared_owners);
  while (__stlxr(v32 - 1, p_shared_owners));
  if (!v32)
  {
    ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
    std::__shared_weak_count::__release_weak(v30);
  }
  if (v28)
  {
    v33 = (unint64_t *)&v28->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v35 = v39;
  if (v39)
  {
    v36 = (unint64_t *)&v39->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
}

void sub_20B409B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v5;
  va_list va;

  va_start(va, a4);
  sub_20B2CC354((uint64_t *)va, *(_QWORD *)v4);
  v5 = **(_QWORD **)(v4 + 16);
  if ((v5 & 0xFF00000000) == 0
    || (16 * (unint64_t)**(_QWORD **)(v4 + 8) <= v5
     || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 105, (uint64_t)"bytes_per_row >= min_bytes_per_row", 34, (uint64_t)"stride must not overlap internally", 34, (void (*)(void **))sub_20B532360))&& ((v5 & 0xF) == 0|| !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 107, (uint64_t)"(bytes_per_row % bytes_per_pixel == 0)", 38, (uint64_t)"stride must be multiple of pixel size", 37, (void (*)(void **))sub_20B532360)))
  {
    sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 136, (uint64_t)&unk_20B5AC231, 0, (uint64_t)"not implemented", 15, (void (*)(void **))sub_20B532360);
  }
  abort();
}

void sub_20B409C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v5;
  va_list va;

  va_start(va, a4);
  sub_20B2CC354((uint64_t *)va, *(_QWORD *)v4);
  v5 = **(_QWORD **)(v4 + 16);
  if ((v5 & 0xFF00000000) == 0
    || (8 * (unint64_t)**(_QWORD **)(v4 + 8) <= v5
     || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 105, (uint64_t)"bytes_per_row >= min_bytes_per_row", 34, (uint64_t)"stride must not overlap internally", 34, (void (*)(void **))sub_20B532360))&& ((v5 & 7) == 0|| !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 107, (uint64_t)"(bytes_per_row % bytes_per_pixel == 0)", 38, (uint64_t)"stride must be multiple of pixel size", 37, (void (*)(void **))sub_20B532360)))
  {
    sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 136, (uint64_t)&unk_20B5AC231, 0, (uint64_t)"not implemented", 15, (void (*)(void **))sub_20B532360);
  }
  abort();
}

void sub_20B40AF24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_20B40AF58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40AF8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40AFC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40AFF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40B028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40B05C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40B090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40B0C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40B0F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40B12C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40B160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40B194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40B1C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40B1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v18 = (unint64_t *)(a12 + 8);
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    JUMPOUT(0x20B40BF70);
  }
  JUMPOUT(0x20B40BF8CLL);
}

void sub_20B40B230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40B264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40B298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (a12)
  {
    v19 = (unint64_t *)&a12->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40B2CC(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B40B2E4()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x20B40BD5CLL);
}

void sub_20B40B2F4(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B40B30C()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x20B40BD80);
}

void sub_20B40B31C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B40B334()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x20B40BDA4);
}

void sub_20B40B344(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B40B35C()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x20B40BDC8);
}

void sub_20B40B36C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B40B384()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x20B40BDECLL);
}

void sub_20B40B394(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B40B3AC()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x20B40BE10);
}

void sub_20B40B3BC(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B40B3D4()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x20B40BE34);
}

void sub_20B40B3E4(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B40B3FC()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x20B40BE58);
}

void sub_20B40B40C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B40B424()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x20B40BE7CLL);
}

void sub_20B40B434(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B40B44C()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x20B40BEA0);
}

void sub_20B40B45C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B40B474()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x20B40BEC4);
}

void sub_20B40B484(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B40B49C()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x20B40BEE8);
}

void sub_20B40B4AC(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B40B4C4()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x20B40BF0CLL);
}

void sub_20B40B4D4(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B40B4EC()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x20B40BF30);
}

void sub_20B40B4FC(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B40B514()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x20B40BF54);
}

void sub_20B40B524(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B40B53C()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x20B40BD14);
}

void sub_20B40B54C(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B40B564()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x20B40BD38);
}

void sub_20B40B574(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B40B58C()
{
  std::__shared_weak_count *v0;
  unint64_t *p_shared_owners;
  unint64_t v2;

  __cxa_end_catch();
  if (v0)
  {
    p_shared_owners = (unint64_t *)&v0->__shared_owners_;
    do
      v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }
  JUMPOUT(0x20B40BCF0);
}

void sub_20B40B9D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40B9F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BA1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BA40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BA64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BA88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BAAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BAD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BAF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BB18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BB3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BB60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BB84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BBA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BBCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BBF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BC14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BC38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BC5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BC80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BCA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BCC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B40BF94(_QWORD *a1, const void *a2, std::__shared_weak_count *a3)
{
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v15;
  std::__shared_weak_count *v16;

  if (a3)
  {
    p_shared_owners = (unint64_t *)&a3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_20B2CD5C4(&v15, a2);
  v6 = v16;
  *a1 = v15;
  a1[1] = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
    v9 = v16;
    if (v16)
    {
      v10 = (unint64_t *)&v16->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  if (a3)
  {
    v12 = (unint64_t *)&a3->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a3->__on_zero_shared)(a3);
      std::__shared_weak_count::__release_weak(a3);
    }
  }
}

void sub_20B40C07C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AEC147C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B40C090(char ***a1)
{
  unint64_t v2;
  char **v3;
  char *v4;
  char **v5;
  char **v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  char **v13;
  char *v14;
  __int128 v15;
  char **v16;

  v2 = (unint64_t)a1[2];
  v3 = a1[1];
  if ((unint64_t)v3 >= v2)
  {
    v6 = *a1;
    v7 = 0xAAAAAAAAAAAAAAABLL * (v3 - *a1);
    v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60B8();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v2 - (_QWORD)v6) >> 3);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x555555555555555)
      v10 = 0xAAAAAAAAAAAAAAALL;
    else
      v10 = v8;
    if (v10)
    {
      if (v10 > 0xAAAAAAAAAAAAAAALL)
        sub_20AEC60CC();
      v11 = (char *)operator new(24 * v10);
    }
    else
    {
      v11 = 0;
    }
    v12 = &v11[24 * v7];
    v13 = (char **)&v11[24 * v10];
    v14 = (char *)operator new(0x50uLL);
    *(_QWORD *)v12 = v14;
    *(_OWORD *)(v12 + 8) = xmmword_20B5F9200;
    strcpy(v14, "Byte order size for non-8 bits per component does not match bits per component.");
    v5 = (char **)(v12 + 24);
    if (v3 == v6)
    {
      *a1 = (char **)v12;
      a1[1] = v5;
      a1[2] = v13;
    }
    else
    {
      do
      {
        v15 = *(_OWORD *)(v3 - 3);
        *((_QWORD *)v12 - 1) = *(v3 - 1);
        *(_OWORD *)(v12 - 24) = v15;
        v12 -= 24;
        *(v3 - 2) = 0;
        *(v3 - 1) = 0;
        *(v3 - 3) = 0;
        v3 -= 3;
      }
      while (v3 != v6);
      v3 = *a1;
      v16 = a1[1];
      *a1 = (char **)v12;
      a1[1] = v5;
      a1[2] = v13;
      while (v16 != v3)
      {
        if (*((char *)v16 - 1) < 0)
          operator delete(*(v16 - 3));
        v16 -= 3;
      }
    }
    if (v3)
      operator delete(v3);
  }
  else
  {
    v4 = (char *)operator new(0x50uLL);
    *v3 = v4;
    *(_OWORD *)(v3 + 1) = xmmword_20B5F9200;
    strcpy(v4, "Byte order size for non-8 bits per component does not match bits per component.");
    v5 = v3 + 3;
    a1[1] = v3 + 3;
  }
  a1[1] = v5;
}

void sub_20B40C274(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC65A4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B40C288(char ***a1)
{
  unint64_t v2;
  char **v3;
  char *v4;
  char **v5;
  char **v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  char **v13;
  char *v14;
  __int128 v15;
  char **v16;

  v2 = (unint64_t)a1[2];
  v3 = a1[1];
  if ((unint64_t)v3 >= v2)
  {
    v6 = *a1;
    v7 = 0xAAAAAAAAAAAAAAABLL * (v3 - *a1);
    v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60B8();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v2 - (_QWORD)v6) >> 3);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x555555555555555)
      v10 = 0xAAAAAAAAAAAAAAALL;
    else
      v10 = v8;
    if (v10)
    {
      if (v10 > 0xAAAAAAAAAAAAAAALL)
        sub_20AEC60CC();
      v11 = (char *)operator new(24 * v10);
    }
    else
    {
      v11 = 0;
    }
    v12 = &v11[24 * v7];
    v13 = (char **)&v11[24 * v10];
    v14 = (char *)operator new(0x50uLL);
    *(_QWORD *)v12 = v14;
    *(_OWORD *)(v12 + 8) = xmmword_20B5F9210;
    strcpy(v14, "Byte order and bits per component do not correspond to a supported format.");
    v5 = (char **)(v12 + 24);
    if (v3 == v6)
    {
      *a1 = (char **)v12;
      a1[1] = v5;
      a1[2] = v13;
    }
    else
    {
      do
      {
        v15 = *(_OWORD *)(v3 - 3);
        *((_QWORD *)v12 - 1) = *(v3 - 1);
        *(_OWORD *)(v12 - 24) = v15;
        v12 -= 24;
        *(v3 - 2) = 0;
        *(v3 - 1) = 0;
        *(v3 - 3) = 0;
        v3 -= 3;
      }
      while (v3 != v6);
      v3 = *a1;
      v16 = a1[1];
      *a1 = (char **)v12;
      a1[1] = v5;
      a1[2] = v13;
      while (v16 != v3)
      {
        if (*((char *)v16 - 1) < 0)
          operator delete(*(v16 - 3));
        v16 -= 3;
      }
    }
    if (v3)
      operator delete(v3);
  }
  else
  {
    v4 = (char *)operator new(0x50uLL);
    *v3 = v4;
    *(_OWORD *)(v3 + 1) = xmmword_20B5F9210;
    strcpy(v4, "Byte order and bits per component do not correspond to a supported format.");
    v5 = v3 + 3;
    a1[1] = v3 + 3;
  }
  a1[1] = v5;
}

void sub_20B40C46C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AEC65A4((uint64_t)va);
  _Unwind_Resume(a1);
}

size_t sub_20B40C480(_QWORD **a1)
{
  _DWORD *v1;
  const char **v2;
  uint64_t v3;
  const char *v4;
  size_t result;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v1 = (_DWORD *)**a1;
  v2 = (const char **)(*a1)[1];
  v3 = v1[6];
  if ((_DWORD)v3 != -1)
    ((void (*)(char *, _DWORD *))off_24C41A6A0[v3])(&v10, v1);
  v1[6] = -1;
  v4 = *v2;
  result = strlen(*v2);
  if (result >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v6 = result;
  if (result >= 0x17)
  {
    v8 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17)
      v8 = result | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)v1 + 1) = v6;
    *((_QWORD *)v1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)v1 = v7;
  }
  else
  {
    *((_BYTE *)v1 + 23) = result;
    v7 = v1;
    if (!result)
      goto LABEL_11;
  }
  result = (size_t)memmove(v7, v4, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  v1[6] = 1;
  return result;
}

void sub_20B40C570(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  void *v6;
  const char *v7;
  size_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  _BYTE v15[15];
  char v16;
  void *__p[2];
  unint64_t v18;
  _QWORD v19[3];

  v19[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 16);
  *(_QWORD *)((char *)v19 + 7) = *(_QWORD *)(a2 + 15);
  v4 = *(void **)a2;
  v19[0] = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v14 = v4;
  *(_QWORD *)v15 = v19[0];
  *(_QWORD *)&v15[7] = *(_QWORD *)((char *)v19 + 7);
  v16 = v5;
  memset(v19, 0, 15);
  v6 = __p;
  v7 = **(const char ***)(v2 + 24);
  v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v11 = v8 | 7;
    v12 = v11 + 1;
    v6 = operator new(v11 + 1);
    __p[1] = v9;
    v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((_BYTE *)v9 + (_QWORD)v6) = 0;
    v10 = *(unsigned int *)(v3 + 24);
    if ((_DWORD)v10 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v10 = *(unsigned int *)(v3 + 24);
  if ((_DWORD)v10 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24C41A6A0[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_20AEC7620((_QWORD *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0)
    goto LABEL_15;
}

void sub_20B40C72C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B40C770(uint64_t a1, void **a2)
{
  const char **v3;
  _BYTE *v4;
  _QWORD *v5;
  const char *v6;
  size_t v7;
  size_t v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  size_t v19;
  size_t v20;
  void *v21;
  char *v22;
  void **v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  void **v28;

  v3 = *(const char ***)(*(_QWORD *)a1 + 32);
  v5 = a2[1];
  v4 = a2[2];
  v6 = *v3;
  if (v5 < (_QWORD *)v4)
  {
    v7 = strlen(*v3);
    if (v7 > 0x7FFFFFFFFFFFFFF7)
      sub_20AEC0138();
    v8 = v7;
    if (v7 >= 0x17)
    {
      v15 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17)
        v15 = v7 | 7;
      v16 = v15 + 1;
      v9 = operator new(v15 + 1);
      v5[1] = v8;
      v5[2] = v16 | 0x8000000000000000;
      *v5 = v9;
    }
    else
    {
      *((_BYTE *)v5 + 23) = v7;
      v9 = v5;
      if (!v7)
        goto LABEL_19;
    }
    memmove(v9, v6, v8);
LABEL_19:
    *((_BYTE *)v9 + v8) = 0;
    v17 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  v10 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (_BYTE *)*a2) >> 3);
  if (v10 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20AEC60B8();
  v11 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (_BYTE *)*a2) >> 3);
  v12 = 2 * v11;
  if (2 * v11 <= v10 + 1)
    v12 = v10 + 1;
  if (v11 >= 0x555555555555555)
    v13 = 0xAAAAAAAAAAAAAAALL;
  else
    v13 = v12;
  if (v13)
  {
    if (v13 > 0xAAAAAAAAAAAAAAALL)
      sub_20AEC60CC();
    v14 = (char *)operator new(24 * v13);
  }
  else
  {
    v14 = 0;
  }
  v18 = &v14[24 * v10];
  v19 = strlen(v6);
  if (v19 > 0x7FFFFFFFFFFFFFF7)
    sub_20AEC0138();
  v20 = v19;
  if (v19 >= 0x17)
  {
    v25 = (v19 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v19 | 7) != 0x17)
      v25 = v19 | 7;
    v26 = v25 + 1;
    v21 = operator new(v25 + 1);
    *((_QWORD *)v18 + 1) = v20;
    *((_QWORD *)v18 + 2) = v26 | 0x8000000000000000;
    *(_QWORD *)v18 = v21;
  }
  else
  {
    v18[23] = v19;
    v21 = v18;
    if (!v19)
    {
      v22 = &v14[24 * v13];
      *v18 = 0;
      v17 = v18 + 24;
      v23 = (void **)*a2;
      v24 = (void **)a2[1];
      if (v24 == *a2)
        goto LABEL_36;
      do
      {
LABEL_30:
        v27 = *(_OWORD *)(v24 - 3);
        *((_QWORD *)v18 - 1) = *(v24 - 1);
        *(_OWORD *)(v18 - 24) = v27;
        v18 -= 24;
        *(v24 - 2) = 0;
        *(v24 - 1) = 0;
        *(v24 - 3) = 0;
        v24 -= 3;
      }
      while (v24 != v23);
      v24 = (void **)*a2;
      v28 = (void **)a2[1];
      *a2 = v18;
      a2[1] = v17;
      a2[2] = v22;
      while (v28 != v24)
      {
        if (*((char *)v28 - 1) < 0)
          operator delete(*(v28 - 3));
        v28 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v21, v6, v20);
  v22 = &v14[24 * v13];
  *((_BYTE *)v21 + v20) = 0;
  v17 = v18 + 24;
  v23 = (void **)*a2;
  v24 = (void **)a2[1];
  if (v24 != *a2)
    goto LABEL_30;
LABEL_36:
  *a2 = v18;
  a2[1] = v17;
  a2[2] = v22;
LABEL_37:
  if (v24)
    operator delete(v24);
LABEL_39:
  a2[1] = v17;
}

void sub_20B40CA04(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

void sub_20B40CA1C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

_QWORD *sub_20B40CA24(_QWORD *a1, uint64_t a2, _DWORD *a3, unsigned int *a4)
{
  BOOL v5;
  unint64_t v6;
  unint64_t v8;
  uint64_t v9;

  *a1 = &off_24C4051D0;
  if (a3[1])
    v5 = *a3 == 0;
  else
    v5 = 1;
  v6 = (unint64_t)*a4 << 32;
  if (v5)
    v6 = 0;
  v8 = v6 | (*a3 != 0);
  v9 = a2;
  sub_20B036F00(&v9, a3, (uint64_t *)&v8, (uint64_t)(a1 + 1));
  return a1;
}

void sub_20B40CA9C()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B40CAB0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C41A758;
  result[1] = v3;
  return result;
}

uint64_t sub_20B40CAE4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C41A758;
  a2[1] = v2;
  return result;
}

void sub_20B40CB00(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int16 v16;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 32) != *a2 || *(_DWORD *)(v5 + 36) != a2[1])
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24C415B50;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 48);
    v11 = v5 + 24;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_OWORD *)(a3 + 24) = *(_OWORD *)v11;
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v11 + 16);
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 48) = v10;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v16 = *(_WORD *)(v5 + 48);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v5 + 40);
    *(_WORD *)(a3 + 48) = v16;
  }
}

uint64_t sub_20B40CC80(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_1ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_1ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Siz"
                                "eTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_1ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_1ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B40CCEC()
{
  return &unk_24C41A7C8;
}

void sub_20B40CCFC()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B40CD10(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C41A7E8;
  result[1] = v3;
  return result;
}

uint64_t sub_20B40CD44(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C41A7E8;
  a2[1] = v2;
  return result;
}

void sub_20B40CD60(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int16 v16;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 32) != *a2 || *(_DWORD *)(v5 + 36) != a2[1])
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24C415C48;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 48);
    v11 = v5 + 24;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_OWORD *)(a3 + 24) = *(_OWORD *)v11;
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v11 + 16);
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 48) = v10;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v16 = *(_WORD *)(v5 + 48);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v5 + 40);
    *(_WORD *)(a3 + 48) = v16;
  }
}

uint64_t sub_20B40CEE0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_2ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_2ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Siz"
                                "eTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_2ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_2ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B40CF4C()
{
  return &unk_24C41A858;
}

void sub_20B40CF5C()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B40CF70(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C41A878;
  result[1] = v3;
  return result;
}

uint64_t sub_20B40CFA4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C41A878;
  a2[1] = v2;
  return result;
}

void sub_20B40CFC0(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int16 v16;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 32) != *a2 || *(_DWORD *)(v5 + 36) != a2[1])
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24C415D40;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 48);
    v11 = v5 + 24;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_OWORD *)(a3 + 24) = *(_OWORD *)v11;
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v11 + 16);
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 48) = v10;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v16 = *(_WORD *)(v5 + 48);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v5 + 40);
    *(_WORD *)(a3 + 48) = v16;
  }
}

uint64_t sub_20B40D140(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_3ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_3ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Siz"
                                "eTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_3ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_3ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B40D1AC()
{
  return &unk_24C41A8E8;
}

void sub_20B40D1B8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  _BOOL4 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int16 v17;
  std::__shared_weak_count *size;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::logic_error *exception;
  std::string v23;

  if (*(_DWORD *)(a1 + 48) != 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B40D438(a1);
    std::logic_error::logic_error(exception, &v23);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v23.__r_.__value_.__r.__words[0] = v4;
      v23.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v4;
    }
  }
  else
  {
    *(_OWORD *)&v23.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v12 = v11 != 0;
  v13 = v11 == 0;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  if (v13)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  if (v13)
    v15 = 0;
  else
    v15 = *(_QWORD *)(a1 + 24);
  if (HIDWORD(v15) * HIDWORD(v14) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v16 = v14 | v12;
  v17 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v23.__r_.__value_.__l.__size_;
  if (v23.__r_.__value_.__l.__size_)
  {
    v19 = (unint64_t *)(v23.__r_.__value_.__l.__size_ + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    *(_QWORD *)a2 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 8) = size;
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v16;
    *(_WORD *)(a2 + 40) = v17;
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  else
  {
    *(_OWORD *)a2 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v16;
    *(_WORD *)(a2 + 40) = v17;
  }
}

void sub_20B40D3EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_20B40D438(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2EC914();
  v3 = sub_20B2D8728();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_20B40D4B4()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B40D4C8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C41A908;
  result[1] = v3;
  return result;
}

uint64_t sub_20B40D4FC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C41A908;
  a2[1] = v2;
  return result;
}

void sub_20B40D518(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int16 v16;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 32) != *a2 || *(_DWORD *)(v5 + 36) != a2[1])
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24C415E38;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 48);
    v11 = v5 + 24;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    *(_OWORD *)(a3 + 24) = *(_OWORD *)v11;
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v11 + 16);
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 48) = v10;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v16 = *(_WORD *)(v5 + 48);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_QWORD *)(a3 + 40) = *(_QWORD *)(v5 + 40);
    *(_WORD *)(a3 + 48) = v16;
  }
}

uint64_t sub_20B40D698(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_4ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_4ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Siz"
                                "eTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_4ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_4ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B40D704()
{
  return &unk_24C41A978;
}

void sub_20B40D710(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  _BOOL4 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int16 v17;
  std::__shared_weak_count *size;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::logic_error *exception;
  std::string v23;

  if (*(_DWORD *)(a1 + 48) != 4)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B40D990(a1);
    std::logic_error::logic_error(exception, &v23);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v23.__r_.__value_.__r.__words[0] = v4;
      v23.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v4;
    }
  }
  else
  {
    *(_OWORD *)&v23.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v12 = v11 != 0;
  v13 = v11 == 0;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  if (v13)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  if (v13)
    v15 = 0;
  else
    v15 = *(_QWORD *)(a1 + 24);
  if (HIDWORD(v15) * HIDWORD(v14) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v16 = v14 | v12;
  v17 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v23.__r_.__value_.__l.__size_;
  if (v23.__r_.__value_.__l.__size_)
  {
    v19 = (unint64_t *)(v23.__r_.__value_.__l.__size_ + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    *(_QWORD *)a2 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 8) = size;
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v16;
    *(_WORD *)(a2 + 40) = v17;
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  else
  {
    *(_OWORD *)a2 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v16;
    *(_WORD *)(a2 + 40) = v17;
  }
}

void sub_20B40D944(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_20B40D990(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2ECF58();
  v3 = sub_20B2D8728();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_20B40DA08(_QWORD *a1, uint64_t a2, _DWORD *a3, unsigned int *a4)
{
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  unint64_t v9;
  uint64_t v10;

  *a1 = &off_24C4082F8;
  v5 = 3;
  if (!*a3)
    v5 = 0;
  if (a3[1])
    v6 = *a3 == 0;
  else
    v6 = 1;
  v7 = (unint64_t)*a4 << 32;
  if (v6)
    v7 = 0;
  v9 = v7 | v5;
  v10 = a2;
  sub_20B048004(&v10, a3, &v9, (uint64_t)(a1 + 1));
  return a1;
}

void sub_20B40DA84()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B40DA98(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C41A998;
  result[1] = v3;
  return result;
}

uint64_t sub_20B40DACC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C41A998;
  a2[1] = v2;
  return result;
}

void sub_20B40DAE8(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24C416218;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_20B40DC74(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_21ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_21ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_21ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_21ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B40DCE0()
{
  return &unk_24C41AA08;
}

void sub_20B40DCF0()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B40DD04(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C41AA28;
  result[1] = v3;
  return result;
}

uint64_t sub_20B40DD38(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C41AA28;
  a2[1] = v2;
  return result;
}

void sub_20B40DD54(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24C416310;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_20B40DEE0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_22ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_22ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_22ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_22ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B40DF4C()
{
  return &unk_24C41AA98;
}

void sub_20B40DF58(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 22)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B40E25C(a1);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v14 | v12;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v22 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a2 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v21;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20B40E210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20B40E25C(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2F4A2C();
  v3 = sub_20B2D8728();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_20B40E2D8()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B40E2EC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C41AAB8;
  result[1] = v3;
  return result;
}

uint64_t sub_20B40E320(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C41AAB8;
  a2[1] = v2;
  return result;
}

void sub_20B40E33C(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24C419A88;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_20B40E4C8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_23ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_23ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_23ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_23ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B40E534()
{
  return &unk_24C41AB28;
}

void sub_20B40E540(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 23)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B40E844(a1);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v14 | v12;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v22 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a2 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v21;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20B40E7F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20B40E844(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2F51EC();
  v3 = sub_20B2D8728();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_20B40E8C0()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B40E8D4(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C41AB48;
  result[1] = v3;
  return result;
}

uint64_t sub_20B40E908(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C41AB48;
  a2[1] = v2;
  return result;
}

void sub_20B40E924(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24C419B80;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_20B40EAB0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_24ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_24ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_24ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_24ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B40EB1C()
{
  return &unk_24C41ABB8;
}

void sub_20B40EB28(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 24)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B40EE2C(a1);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v14 | v12;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v22 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a2 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v21;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20B40EDE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20B40EE2C(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2F59AC();
  v3 = sub_20B2D8728();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_20B40EEA4(_QWORD *a1, uint64_t a2, _DWORD *a3, unsigned int *a4)
{
  BOOL v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;

  *a1 = &off_24C408CD8;
  if (a3[1])
    v5 = *a3 == 0;
  else
    v5 = 1;
  v6 = (unint64_t)*a4 << 32;
  if (v5)
    v6 = 0;
  v8 = v6 | (4 * (*a3 != 0));
  v9 = a2;
  sub_20B04BB34(&v9, a3, &v8, (uint64_t)(a1 + 1));
  return a1;
}

void sub_20B40EF1C()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B40EF30(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C41ABD8;
  result[1] = v3;
  return result;
}

uint64_t sub_20B40EF64(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C41ABD8;
  a2[1] = v2;
  return result;
}

void sub_20B40EF80(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24C416408;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_20B40F10C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_25ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_25ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_25ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_25ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B40F178()
{
  return &unk_24C41AC48;
}

void sub_20B40F184(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 25)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B40F484(a1);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v23 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a2 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 36) = v21;
  *(_DWORD *)(a2 + 44) = v22;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20B40F438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20B40F484(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2F5FF0();
  v3 = sub_20B2D8728();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_20B40F4FC(_QWORD *a1, uint64_t a2, _DWORD *a3, unsigned int *a4)
{
  BOOL v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;

  *a1 = &off_24C4096B8;
  if (a3[1])
    v5 = *a3 == 0;
  else
    v5 = 1;
  v6 = (unint64_t)*a4 << 32;
  if (v5)
    v6 = 0;
  v8 = v6 | (4 * (*a3 != 0));
  v9 = a2;
  sub_20B04F1FC(&v9, a3, &v8, (uint64_t)(a1 + 1));
  return a1;
}

_QWORD *sub_20B40F570(_QWORD *result, unsigned __int8 *a2, _DWORD **a3)
{
  _DWORD *v3;
  uint64_t v4;
  int v5;
  float v6;
  float v7;
  char *v8;
  unsigned int v9;
  float v10;
  int v11;
  unsigned int v12;
  unsigned int v14;
  float v15;
  int v16;
  unsigned int v17;
  unsigned int v19;
  float v20;
  int v21;
  unsigned int v22;

  *result = a2;
  v3 = *a3;
  result[2] = *a3;
  v4 = a2[3];
  if ((_DWORD)v4 != 255)
  {
    if (!a2[3])
    {
      if (v3
        || (result = (_QWORD *)sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360), !(_DWORD)result))
      {
        *v3 = 0;
        return result;
      }
LABEL_43:
      abort();
    }
    v6 = 255.0;
    v7 = 255.0 / (float)v4;
    v8 = (char *)&unk_20B5FBF70 + 256 * v4;
    v9 = *a2;
    v10 = floorf(v7 * (float)v9);
    if (v10 <= 255.0)
      v6 = v10;
    v11 = (int)v6;
    v12 = v8[v6];
    if (v12 != v9)
    {
      if (v12 >= v9 || v11 == 255)
      {
        if (v12 <= v9 || v11 == 0)
          goto LABEL_44;
        LOBYTE(v11) = v11 - 1;
      }
      else
      {
        LOBYTE(v11) = v11 + 1;
      }
    }
    *(_BYTE *)v3 = v11;
    v14 = *(unsigned __int8 *)(*result + 1);
    v15 = floorf(v7 * (float)v14);
    if (v15 > 255.0)
      v15 = 255.0;
    v16 = (int)v15;
    v17 = v8[v15];
    if (v17 != v14)
    {
      if (v17 >= v14 || v16 == 255)
      {
        if (v17 <= v14 || v16 == 0)
          goto LABEL_44;
        LOBYTE(v16) = v16 - 1;
      }
      else
      {
        LOBYTE(v16) = v16 + 1;
      }
    }
    *(_BYTE *)(result[2] + 1) = v16;
    v19 = *(unsigned __int8 *)(*result + 2);
    v20 = floorf(v7 * (float)v19);
    if (v20 > 255.0)
      v20 = 255.0;
    v21 = (int)v20;
    v22 = v8[v20];
    if (v22 == v19)
      goto LABEL_42;
    if (v22 < v19 && v21 != 255)
    {
      LOBYTE(v21) = v21 + 1;
LABEL_42:
      *(_BYTE *)(result[2] + 2) = v21;
      *(_BYTE *)(result[2] + 3) = *(_BYTE *)(*result + 3);
      return result;
    }
    if (v22 > v19 && v21 != 0)
    {
      LOBYTE(v21) = v21 - 1;
      goto LABEL_42;
    }
LABEL_44:
    sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 69, (uint64_t)&unk_20B5AC231, 0, (uint64_t)"Should not happen", 17, (void (*)(void **))sub_20B532360);
    abort();
  }
  v5 = *(_DWORD *)a2;
  if (!v3)
  {
    result = (_QWORD *)sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360);
    if ((_DWORD)result)
      goto LABEL_43;
  }
  *v3 = v5;
  return result;
}

void sub_20B40F7B0()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B40F7C4(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C41AC68;
  result[1] = v3;
  return result;
}

uint64_t sub_20B40F7F8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C41AC68;
  a2[1] = v2;
  return result;
}

void sub_20B40F814(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24C418270;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_20B40F9A0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_29ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_29ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_29ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_29ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B40FA0C()
{
  return &unk_24C41ACD8;
}

void sub_20B40FA18(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 29)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B40FD18(a1);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v23 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a2 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 36) = v21;
  *(_DWORD *)(a2 + 44) = v22;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20B40FCCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20B40FD18(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2F7C84();
  v3 = sub_20B2D8728();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_20B40FD94()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B40FDA8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C41ACF8;
  result[1] = v3;
  return result;
}

uint64_t sub_20B40FDDC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C41ACF8;
  a2[1] = v2;
  return result;
}

void sub_20B40FDF8(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24C419F60;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_20B40FF84(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_30ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_30ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_30ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_30ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B40FFF0()
{
  return &unk_24C41AD68;
}

void sub_20B40FFFC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 30)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B410300(a1);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v23 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a2 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 36) = v21;
  *(_DWORD *)(a2 + 44) = v22;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20B4102B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20B410300(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2F8444();
  v3 = sub_20B2D8728();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_20B41037C()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B410390(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C41AD88;
  result[1] = v3;
  return result;
}

uint64_t sub_20B4103C4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C41AD88;
  a2[1] = v2;
  return result;
}

void sub_20B4103E0(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24C416500;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_20B41056C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_31ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_31ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_31ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_31ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B4105D8()
{
  return &unk_24C41ADF8;
}

void sub_20B4105E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 31)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B4108E8(a1);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v23 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a2 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 36) = v21;
  *(_DWORD *)(a2 + 44) = v22;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20B41089C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20B4108E8(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2F8A88();
  v3 = sub_20B2D8728();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_20B410964()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B410978(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C41AE18;
  result[1] = v3;
  return result;
}

uint64_t sub_20B4109AC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C41AE18;
  a2[1] = v2;
  return result;
}

void sub_20B4109C8(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24C4165F8;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_20B410B54(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_32ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_32ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_32ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_32ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B410BC0()
{
  return &unk_24C41AE88;
}

void sub_20B410BCC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 32)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B410ED0(a1);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v23 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a2 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 36) = v21;
  *(_DWORD *)(a2 + 44) = v22;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20B410E84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20B410ED0(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2F90CC();
  v3 = sub_20B2D8728();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_20B410F48(_QWORD *a1, uint64_t a2, _DWORD *a3, unsigned int *a4)
{
  BOOL v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;

  *a1 = &off_24C40A098;
  if (a3[1])
    v5 = *a3 == 0;
  else
    v5 = 1;
  v6 = (unint64_t)*a4 << 32;
  if (v5)
    v6 = 0;
  v8 = v6 | (4 * (*a3 != 0));
  v9 = a2;
  sub_20B052D2C(&v9, a3, &v8, (uint64_t)(a1 + 1));
  return a1;
}

void sub_20B410FC0()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B410FD4(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C41AEA8;
  result[1] = v3;
  return result;
}

uint64_t sub_20B411008(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C41AEA8;
  a2[1] = v2;
  return result;
}

void sub_20B411024(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24C418368;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_20B4111B0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_33ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_33ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_33ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_33ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B41121C()
{
  return &unk_24C41AF18;
}

void sub_20B411228(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 33)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B411528(a1);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v23 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a2 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 36) = v21;
  *(_DWORD *)(a2 + 44) = v22;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20B4114DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20B411528(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2F9710();
  v3 = sub_20B2D8728();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

_QWORD *sub_20B4115A0(_QWORD *a1, uint64_t a2, _DWORD *a3, unsigned int *a4)
{
  BOOL v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;

  *a1 = &off_24C40AA78;
  if (a3[1])
    v5 = *a3 == 0;
  else
    v5 = 1;
  v6 = (unint64_t)*a4 << 32;
  if (v5)
    v6 = 0;
  v8 = v6 | (4 * (*a3 != 0));
  v9 = a2;
  sub_20B0563F4(&v9, a3, &v8, (uint64_t)(a1 + 1));
  return a1;
}

void sub_20B411618()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B41162C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C41AF38;
  result[1] = v3;
  return result;
}

uint64_t sub_20B411660(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C41AF38;
  a2[1] = v2;
  return result;
}

void sub_20B41167C(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24C4166F0;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_20B411808(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_37ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_37ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_37ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_37ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B411874()
{
  return &unk_24C41AFA8;
}

void sub_20B411880(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 37)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B411B80(a1);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v23 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a2 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 36) = v21;
  *(_DWORD *)(a2 + 44) = v22;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20B411B34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20B411B80(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2FB3A4();
  v3 = sub_20B2D8728();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_20B411BFC()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B411C10(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C41AFC8;
  result[1] = v3;
  return result;
}

uint64_t sub_20B411C44(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C41AFC8;
  a2[1] = v2;
  return result;
}

void sub_20B411C60(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24C4167E8;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_20B411DEC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_38ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_38ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_38ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_38ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B411E58()
{
  return &unk_24C41B038;
}

void sub_20B411E64(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 38)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B412168(a1);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v23 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a2 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 36) = v21;
  *(_DWORD *)(a2 + 44) = v22;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20B41211C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20B412168(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2FB9E8();
  v3 = sub_20B2D8728();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_20B4121E4()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B4121F8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C41B058;
  result[1] = v3;
  return result;
}

uint64_t sub_20B41222C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C41B058;
  a2[1] = v2;
  return result;
}

void sub_20B412248(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24C41A340;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_20B4123D4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_39ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_39ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_39ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_39ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B412440()
{
  return &unk_24C41B0C8;
}

void sub_20B41244C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 39)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B412750(a1);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v23 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a2 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 36) = v21;
  *(_DWORD *)(a2 + 44) = v22;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20B412704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20B412750(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2FC1A8();
  v3 = sub_20B2D8728();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_20B4127CC()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B4127E0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C41B0E8;
  result[1] = v3;
  return result;
}

uint64_t sub_20B412814(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C41B0E8;
  a2[1] = v2;
  return result;
}

void sub_20B412830(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  _OWORD *v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;

  v5 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v5 + 56) != *a2 || *(_DWORD *)(v5 + 60) != a2[1])
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/CoreGraphics/src/ImageRef.cpp", 541, (uint64_t)"size == image.Size()", 20, (uint64_t)&unk_20B5AC231, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  *(_QWORD *)a3 = &off_24C41A438;
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(std::__shared_weak_count **)(v5 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *(_WORD *)(v5 + 72);
    v11 = (_OWORD *)(v5 + 24);
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = v11[1];
    *(_OWORD *)(a3 + 24) = *v11;
    *(_OWORD *)(a3 + 40) = v13;
    *(_OWORD *)(a3 + 56) = v11[2];
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_WORD *)(a3 + 72) = v10;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  else
  {
    v17 = *(_WORD *)(v5 + 72);
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v5 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v5 + 40);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)(v5 + 56);
    *(_WORD *)(a3 + 72) = v17;
  }
}

uint64_t sub_20B4129BC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3"
                     "_10MutabilityE1EEEENK3$_0clINS4_ILS5_40ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13Dynamic"
                                "BufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_40ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5Si"
                                "zeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_40ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZNK4cv3d3kit2cg8ImageRef13CopyIntoImageENS0_3img9ImageViewILNS3_6FormatE0ENS3_13DynamicBufferELNS3_10MutabilityE1EEEENK3$_0clINS4_ILS5_40ES6_LS7_1EEEEEvRKT_EUlRKNS_3esn3arr5SizeTILj2ELNSG_8SizeTypeE0EvEEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B412A28()
{
  return &unk_24C41B158;
}

void sub_20B412A34(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  int v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int16 v23;
  std::__shared_weak_count *size;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::logic_error *exception;
  std::string v30;
  _BYTE v31[12];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 40)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B412D38(a1);
    std::logic_error::logic_error(exception, &v30);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v30.__r_.__value_.__r.__words[0] = v4;
      v30.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v14 = v11 == 0;
  v12 = v11 != 0;
  v13 = v14;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  v14 = v13 == 0;
  if (v13)
    v15 = 0;
  else
    v15 = ((unint64_t)*(unsigned int *)(a1 + 32) << 30) & 0x3FFFFFFF00000000;
  v16 = v15 | (4 * v12);
  v17 = *(_QWORD *)(a1 + 24);
  if (!v14)
    v17 = 0;
  *(_DWORD *)v31 = 4;
  *(_QWORD *)&v31[4] = v17;
  v18 = v17;
  v19 = *(_QWORD *)v31;
  v20 = HIDWORD(v17);
  *(_DWORD *)v31 = 1;
  *(_QWORD *)&v31[4] = v16;
  v21 = *(_QWORD *)v31;
  v22 = HIDWORD(v15);
  if (HIDWORD(v17) * HIDWORD(v15) == -1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v23 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v30.__r_.__value_.__l.__size_;
  if (v30.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v30.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
  *(_QWORD *)a2 = v30.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 36) = v21;
  *(_DWORD *)(a2 + 44) = v22;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = v16;
  *(_WORD *)(a2 + 64) = v23;
  if (size)
  {
    v27 = (unint64_t *)&size->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20B412CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20B412D38(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20B2FC968();
  v3 = sub_20B2D8728();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20AF864AC("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_20B412DB0(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  __int16 v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  BOOL v17;
  int v18;
  uint64_t v19[2];
  std::__shared_weak_count *v20;
  uint64_t v21;

  sub_20B413014(a1, v19);
  v3 = v19[0];
  v19[1] = v19[0];
  if (v19[0])
  {
    v4 = (std::__shared_weak_count *)operator new();
    v5 = v19[0];
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C405638;
    v4->__shared_weak_owners_ = 0;
    v4[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
    v20 = v4;
    v19[0] = 0;
    *a2 = v3;
    a2[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v19[0] = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v21, v3, 3);
  v8 = *(_QWORD *)(v21 + 16);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v21;
  a2[5] = v8;
  v21 = 0;
  MEMORY[0x20BD3583C]();
  a2[6] = a2[3];
  *(_OWORD *)(a2 + 7) = *((_OWORD *)a2 + 2);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v10 = v9;
  if ((v9 & 0xFFFFFF) <= 0x10000)
    v10 = 0;
  v11 = v9 & 0xFF00;
  if ((v9 & 0xFF0000) == 0)
    v11 = 0;
  *((_WORD *)a2 + 36) = v11 & 0xFF00 | v10;
  v12 = v20;
  if (!v20)
    goto LABEL_14;
  v13 = (unint64_t *)&v20->__shared_owners_;
  do
    v14 = __ldaxr(v13);
  while (__stlxr(v14 - 1, v13));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
    v15 = v19[0];
    v19[0] = 0;
    if (!v15)
      return;
  }
  else
  {
LABEL_14:
    v15 = v19[0];
    v19[0] = 0;
    if (!v15)
      return;
  }
  v16 = *(void **)(v15 + 48);
  if (v16)
  {
    v17 = !*(_DWORD *)(v15 + 68) || *(_DWORD *)(v15 + 64) == 0;
    v18 = v17 ? 0 : *(_DWORD *)(v15 + 68);
    if (v18 * (*(_QWORD *)(v15 + 72) >> 33) != -1)
      goto LABEL_25;
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v16 = *(void **)(v15 + 48);
    if (v16)
LABEL_25:
      free(v16);
  }
  *(_QWORD *)(v15 + 48) = 0;
  MEMORY[0x20BD3583C](v15, 0x1091C406A8758A4);
}

void sub_20B412FB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B039518(&a9);
  _Unwind_Resume(a1);
}

void sub_20B412FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  sub_20AEC147C(v10);
  sub_20AEC147C((uint64_t)&a10);
  sub_20B039518(&a9);
  _Unwind_Resume(a1);
}

void sub_20B412FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  sub_20AEC147C(v10);
  sub_20AEC147C((uint64_t)&a10);
  sub_20B039518(&a9);
  _Unwind_Resume(a1);
}

double sub_20B413014@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  BOOL v3;
  unint64_t v4;
  unint64_t v5;
  _BOOL8 v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  double result;
  __int128 v14;
  __int128 v15;
  _BYTE v16[28];
  unint64_t v17[3];
  __int128 v18;
  unint64_t v19;
  uint64_t v20;

  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  v5 = v4 << 32;
  if (!HIDWORD(v4))
    v5 = 0;
  v6 = v4 != 0;
  if ((_DWORD)v4)
    v7 = HIDWORD(v4) == 0;
  else
    v7 = 1;
  *(_QWORD *)v16 = v4;
  *(_QWORD *)&v16[8] = v5 | v6;
  v16[16] = 0;
  v16[24] = 0;
  if (v7)
    v4 = 0;
  v19 = v4;
  v20 = v5 | v6;
  if (((v5 >> 31) & ((v5 >> 31) - 1)) != 0)
    v8 = 2;
  else
    v8 = v5 >> 31;
  sub_20B4C76D0(v17, &v19, (unint64_t *)&v20, 1, 0, 0, v8);
  v14 = *(_OWORD *)v16;
  HIDWORD(v14) = *(_DWORD *)&v16[12];
  v9 = v17[0];
  v10 = v17[1];
  v11 = v17[2];
  v15 = v18;
  v12 = operator new();
  *(_QWORD *)v12 = &off_24C3FCD50;
  *(_OWORD *)(v12 + 8) = v14;
  *(_OWORD *)(v12 + 20) = *(_OWORD *)&v16[12];
  *(_QWORD *)(v12 + 40) = v9;
  *(_QWORD *)(v12 + 48) = v10;
  *(_QWORD *)(v12 + 56) = v11;
  result = *(double *)&v15;
  *(_OWORD *)(v12 + 64) = v15;
  *a2 = v12;
  return result;
}

void sub_20B413140(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B49F888((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B413154(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  __int16 v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD v13[3];
  uint64_t v14;
  __int128 v15;
  uint64_t (**v16)();

  v16 = &off_24C405878;
  sub_20B4B2FEC(a1, (uint64_t)&v12);
  v3 = operator new();
  *(_QWORD *)v3 = &off_24C3FCDD0;
  *(_OWORD *)(v3 + 8) = v13[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v13 + 12);
  *(_OWORD *)(v3 + 40) = v13[2];
  *(_QWORD *)(v3 + 56) = v14;
  *(_OWORD *)(v3 + 64) = v15;
  v4 = (std::__shared_weak_count *)operator new();
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C4058B0;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)v3;
  *a2 = v3;
  a2[1] = (uint64_t)v4;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v12, v3, 4);
  v7 = *(_QWORD *)(v12 + 16);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v12;
  a2[5] = v7;
  v12 = 0;
  MEMORY[0x20BD3583C]();
  a2[6] = a2[3];
  *(_OWORD *)(a2 + 7) = *((_OWORD *)a2 + 2);
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v9 = v8;
  if ((v8 & 0xFFFFFF) <= 0x10000)
    v9 = 0;
  v10 = v8 & 0xFF00;
  if ((v8 & 0xFF0000) == 0)
    v10 = 0;
  *((_WORD *)a2 + 36) = v10 & 0xFF00 | v9;
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_20B413324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  sub_20AEC147C(v10);
  sub_20AEC147C((uint64_t)&a10);
  sub_20B037888(&a9);
  _Unwind_Resume(a1);
}

void sub_20B413358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B037888(&a9);
  _Unwind_Resume(a1);
}

void sub_20B41336C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  if (a18)
    free(a18);
  _Unwind_Resume(exception_object);
}

void sub_20B413384(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _OWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  sub_20B4C9C90((uint64_t)v23, a1);
  v19 = v23[0];
  v20 = v23[1];
  v21 = v23[2];
  v3 = v25;
  v22 = v24;
  v4 = v26;
  v5 = v27;
  v17 = v28;
  v18 = v29;
  v6 = operator new();
  *(_OWORD *)(v6 + 8) = v19;
  *(_QWORD *)v6 = &off_24C3FD6D0;
  *(_OWORD *)(v6 + 24) = v20;
  *(_OWORD *)(v6 + 40) = v21;
  *(_QWORD *)(v6 + 56) = v22;
  *(_QWORD *)(v6 + 64) = v3;
  *(_QWORD *)(v6 + 72) = v4;
  *(_QWORD *)(v6 + 80) = v5;
  *(_OWORD *)(v6 + 88) = v17;
  *(_QWORD *)(v6 + 104) = v18;
  v7 = (std::__shared_weak_count *)operator new();
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24C408520;
  v7->__shared_weak_owners_ = 0;
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
  *a2 = v6;
  a2[1] = (uint64_t)v7;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 64))(v23, v6, 22);
  v11 = *(_OWORD *)(*(_QWORD *)&v23[0] + 16);
  v10 = *(_OWORD *)(*(_QWORD *)&v23[0] + 32);
  *(_OWORD *)(a2 + 3) = **(_OWORD **)&v23[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  *(_QWORD *)&v23[0] = 0;
  MEMORY[0x20BD3583C]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  do
    v16 = __ldaxr(p_shared_owners);
  while (__stlxr(v16 - 1, p_shared_owners));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
}

void sub_20B413594(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_20AEC147C(v2);
  sub_20AEC147C((uint64_t)va1);
  sub_20B03B030((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B4135C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B03B030((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B4135DC(_Unwind_Exception *exception_object)
{
  void *v1;
  void *v2;

  v2 = v1;
  if (v2)
    free(v2);
  _Unwind_Resume(exception_object);
}

void sub_20B4135F8(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unsigned __int8 v11;
  __int16 v12;
  unint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t (**v23)();

  v23 = &off_24C408760;
  sub_20B4B7AAC(a1, (uint64_t)&v14);
  v3 = operator new();
  *(_QWORD *)v3 = &off_24C3FD750;
  *(_OWORD *)(v3 + 8) = v15;
  *(_OWORD *)(v3 + 24) = v16;
  *(_OWORD *)(v3 + 40) = v17;
  *(_QWORD *)(v3 + 56) = v18;
  *(_OWORD *)(v3 + 64) = v19;
  *(_QWORD *)(v3 + 80) = v20;
  *(_QWORD *)(v3 + 104) = v22;
  *(_OWORD *)(v3 + 88) = v21;
  v4 = (std::__shared_weak_count *)operator new();
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C408798;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)v3;
  *a2 = v3;
  a2[1] = (uint64_t)v4;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v14, v3, 23);
  v8 = v14[1];
  v7 = v14[2];
  *(_OWORD *)(a2 + 3) = *v14;
  *(_OWORD *)(a2 + 5) = v8;
  *(_OWORD *)(a2 + 7) = v7;
  v14 = 0;
  MEMORY[0x20BD3583C]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v9 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v9;
  v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v11 = v10;
  if ((v10 & 0xFFFFFF) <= 0x10000)
    v11 = 0;
  v12 = v10 & 0xFF00;
  if ((v10 & 0xFF0000) == 0)
    v12 = 0;
  *((_WORD *)a2 + 60) = v12 & 0xFF00 | v11;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_20B413884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  sub_20AEC147C(v10);
  sub_20AEC147C((uint64_t)&a10);
  sub_20B04A788(&a9);
  _Unwind_Resume(a1);
}

void sub_20B4138B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B04A788(&a9);
  _Unwind_Resume(a1);
}

void sub_20B4138CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4A9A3C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B4138E0(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _OWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  sub_20B4C9E44((uint64_t)v23, a1);
  v19 = v23[0];
  v20 = v23[1];
  v21 = v23[2];
  v3 = v25;
  v22 = v24;
  v4 = v26;
  v5 = v27;
  v17 = v28;
  v18 = v29;
  v6 = operator new();
  *(_OWORD *)(v6 + 8) = v19;
  *(_QWORD *)v6 = &off_24C3FD7D0;
  *(_OWORD *)(v6 + 24) = v20;
  *(_OWORD *)(v6 + 40) = v21;
  *(_QWORD *)(v6 + 56) = v22;
  *(_QWORD *)(v6 + 64) = v3;
  *(_QWORD *)(v6 + 72) = v4;
  *(_QWORD *)(v6 + 80) = v5;
  *(_OWORD *)(v6 + 88) = v17;
  *(_QWORD *)(v6 + 104) = v18;
  v7 = (std::__shared_weak_count *)operator new();
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24C408A10;
  v7->__shared_weak_owners_ = 0;
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
  *a2 = v6;
  a2[1] = (uint64_t)v7;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 64))(v23, v6, 24);
  v11 = *(_OWORD *)(*(_QWORD *)&v23[0] + 16);
  v10 = *(_OWORD *)(*(_QWORD *)&v23[0] + 32);
  *(_OWORD *)(a2 + 3) = **(_OWORD **)&v23[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  *(_QWORD *)&v23[0] = 0;
  MEMORY[0x20BD3583C]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  do
    v16 = __ldaxr(p_shared_owners);
  while (__stlxr(v16 - 1, p_shared_owners));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
}

void sub_20B413AF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_20AEC147C(v2);
  sub_20AEC147C((uint64_t)va1);
  sub_20B03B030((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B413B24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B03B030((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B413B38(_Unwind_Exception *exception_object)
{
  void *v1;
  void *v2;

  v2 = v1;
  if (v2)
    free(v2);
  _Unwind_Resume(exception_object);
}

void sub_20B413B54(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unsigned __int8 v11;
  __int16 v12;
  unint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t (**v23)();

  v23 = &off_24C408C50;
  sub_20B4B827C(a1, (uint64_t)&v14);
  v3 = operator new();
  *(_QWORD *)v3 = &off_24C3FD850;
  *(_OWORD *)(v3 + 8) = v15;
  *(_OWORD *)(v3 + 24) = v16;
  *(_OWORD *)(v3 + 40) = v17;
  *(_QWORD *)(v3 + 56) = v18;
  *(_OWORD *)(v3 + 64) = v19;
  *(_QWORD *)(v3 + 80) = v20;
  *(_QWORD *)(v3 + 104) = v22;
  *(_OWORD *)(v3 + 88) = v21;
  v4 = (std::__shared_weak_count *)operator new();
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C408C88;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)v3;
  *a2 = v3;
  a2[1] = (uint64_t)v4;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v14, v3, 25);
  v8 = v14[1];
  v7 = v14[2];
  *(_OWORD *)(a2 + 3) = *v14;
  *(_OWORD *)(a2 + 5) = v8;
  *(_OWORD *)(a2 + 7) = v7;
  v14 = 0;
  MEMORY[0x20BD3583C]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v9 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v9;
  v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v11 = v10;
  if ((v10 & 0xFFFFFF) <= 0x10000)
    v11 = 0;
  v12 = v10 & 0xFF00;
  if ((v10 & 0xFF0000) == 0)
    v12 = 0;
  *((_WORD *)a2 + 60) = v12 & 0xFF00 | v11;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_20B413D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  sub_20AEC147C(v10);
  sub_20AEC147C((uint64_t)&a10);
  sub_20B03B030(&a9);
  _Unwind_Resume(a1);
}

void sub_20B413D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B03B030(&a9);
  _Unwind_Resume(a1);
}

void sub_20B413D90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  if (a21)
    free(a21);
  _Unwind_Resume(exception_object);
}

void sub_20B413DA8(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unsigned __int8 v11;
  __int16 v12;
  unint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t (**v23)();

  v23 = &off_24C409630;
  sub_20B4B9244(a1, (uint64_t)&v14);
  v3 = operator new();
  *(_QWORD *)v3 = &off_24C3FDA50;
  *(_OWORD *)(v3 + 8) = v15;
  *(_OWORD *)(v3 + 24) = v16;
  *(_OWORD *)(v3 + 40) = v17;
  *(_QWORD *)(v3 + 56) = v18;
  *(_OWORD *)(v3 + 64) = v19;
  *(_QWORD *)(v3 + 80) = v20;
  *(_QWORD *)(v3 + 104) = v22;
  *(_OWORD *)(v3 + 88) = v21;
  v4 = (std::__shared_weak_count *)operator new();
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C409668;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)v3;
  *a2 = v3;
  a2[1] = (uint64_t)v4;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v14, v3, 29);
  v8 = v14[1];
  v7 = v14[2];
  *(_OWORD *)(a2 + 3) = *v14;
  *(_OWORD *)(a2 + 5) = v8;
  *(_OWORD *)(a2 + 7) = v7;
  v14 = 0;
  MEMORY[0x20BD3583C]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v9 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v9;
  v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v11 = v10;
  if ((v10 & 0xFFFFFF) <= 0x10000)
    v11 = 0;
  v12 = v10 & 0xFF00;
  if ((v10 & 0xFF0000) == 0)
    v12 = 0;
  *((_WORD *)a2 + 60) = v12 & 0xFF00 | v11;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_20B413F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  sub_20AEC147C(v10);
  sub_20AEC147C((uint64_t)&a10);
  sub_20B03B030(&a9);
  _Unwind_Resume(a1);
}

void sub_20B413FD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B03B030(&a9);
  _Unwind_Resume(a1);
}

void sub_20B413FE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  if (a21)
    free(a21);
  _Unwind_Resume(exception_object);
}

void sub_20B413FFC(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _OWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  sub_20B4C9FF8((uint64_t)v23, a1);
  v19 = v23[0];
  v20 = v23[1];
  v21 = v23[2];
  v3 = v25;
  v22 = v24;
  v4 = v26;
  v5 = v27;
  v17 = v28;
  v18 = v29;
  v6 = operator new();
  *(_OWORD *)(v6 + 8) = v19;
  *(_QWORD *)v6 = &off_24C3FDAD0;
  *(_OWORD *)(v6 + 24) = v20;
  *(_OWORD *)(v6 + 40) = v21;
  *(_QWORD *)(v6 + 56) = v22;
  *(_QWORD *)(v6 + 64) = v3;
  *(_QWORD *)(v6 + 72) = v4;
  *(_QWORD *)(v6 + 80) = v5;
  *(_OWORD *)(v6 + 88) = v17;
  *(_QWORD *)(v6 + 104) = v18;
  v7 = (std::__shared_weak_count *)operator new();
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24C4098E0;
  v7->__shared_weak_owners_ = 0;
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
  *a2 = v6;
  a2[1] = (uint64_t)v7;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 64))(v23, v6, 30);
  v11 = *(_OWORD *)(*(_QWORD *)&v23[0] + 16);
  v10 = *(_OWORD *)(*(_QWORD *)&v23[0] + 32);
  *(_OWORD *)(a2 + 3) = **(_OWORD **)&v23[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  *(_QWORD *)&v23[0] = 0;
  MEMORY[0x20BD3583C]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  do
    v16 = __ldaxr(p_shared_owners);
  while (__stlxr(v16 - 1, p_shared_owners));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
}

void sub_20B41420C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_20AEC147C(v2);
  sub_20AEC147C((uint64_t)va1);
  sub_20B03B030((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B414240(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B03B030((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B414254(_Unwind_Exception *exception_object)
{
  void *v1;
  void *v2;

  v2 = v1;
  if (v2)
    free(v2);
  _Unwind_Resume(exception_object);
}

void sub_20B414270(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unsigned __int8 v11;
  __int16 v12;
  unint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t (**v23)();

  v23 = &off_24C409B20;
  sub_20B4B9A2C(a1, (uint64_t)&v14);
  v3 = operator new();
  *(_QWORD *)v3 = &off_24C3FDB50;
  *(_OWORD *)(v3 + 8) = v15;
  *(_OWORD *)(v3 + 24) = v16;
  *(_OWORD *)(v3 + 40) = v17;
  *(_QWORD *)(v3 + 56) = v18;
  *(_OWORD *)(v3 + 64) = v19;
  *(_QWORD *)(v3 + 80) = v20;
  *(_QWORD *)(v3 + 104) = v22;
  *(_OWORD *)(v3 + 88) = v21;
  v4 = (std::__shared_weak_count *)operator new();
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C409B58;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)v3;
  *a2 = v3;
  a2[1] = (uint64_t)v4;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v14, v3, 31);
  v8 = v14[1];
  v7 = v14[2];
  *(_OWORD *)(a2 + 3) = *v14;
  *(_OWORD *)(a2 + 5) = v8;
  *(_OWORD *)(a2 + 7) = v7;
  v14 = 0;
  MEMORY[0x20BD3583C]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v9 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v9;
  v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v11 = v10;
  if ((v10 & 0xFFFFFF) <= 0x10000)
    v11 = 0;
  v12 = v10 & 0xFF00;
  if ((v10 & 0xFF0000) == 0)
    v12 = 0;
  *((_WORD *)a2 + 60) = v12 & 0xFF00 | v11;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_20B4144FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  sub_20AEC147C(v10);
  sub_20AEC147C((uint64_t)&a10);
  sub_20B051980(&a9);
  _Unwind_Resume(a1);
}

void sub_20B414530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B051980(&a9);
  _Unwind_Resume(a1);
}

void sub_20B414544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4ADB70((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B414558(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _OWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  sub_20B4CA1B4((uint64_t)v23, a1);
  v19 = v23[0];
  v20 = v23[1];
  v21 = v23[2];
  v3 = v25;
  v22 = v24;
  v4 = v26;
  v5 = v27;
  v17 = v28;
  v18 = v29;
  v6 = operator new();
  *(_OWORD *)(v6 + 8) = v19;
  *(_QWORD *)v6 = &off_24C3FDBD0;
  *(_OWORD *)(v6 + 24) = v20;
  *(_OWORD *)(v6 + 40) = v21;
  *(_QWORD *)(v6 + 56) = v22;
  *(_QWORD *)(v6 + 64) = v3;
  *(_QWORD *)(v6 + 72) = v4;
  *(_QWORD *)(v6 + 80) = v5;
  *(_OWORD *)(v6 + 88) = v17;
  *(_QWORD *)(v6 + 104) = v18;
  v7 = (std::__shared_weak_count *)operator new();
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24C409DD0;
  v7->__shared_weak_owners_ = 0;
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
  *a2 = v6;
  a2[1] = (uint64_t)v7;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 64))(v23, v6, 32);
  v11 = *(_OWORD *)(*(_QWORD *)&v23[0] + 16);
  v10 = *(_OWORD *)(*(_QWORD *)&v23[0] + 32);
  *(_OWORD *)(a2 + 3) = **(_OWORD **)&v23[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  *(_QWORD *)&v23[0] = 0;
  MEMORY[0x20BD3583C]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  do
    v16 = __ldaxr(p_shared_owners);
  while (__stlxr(v16 - 1, p_shared_owners));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
}

void sub_20B414768(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_20AEC147C(v2);
  sub_20AEC147C((uint64_t)va1);
  sub_20B03B030((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B41479C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B03B030((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B4147B0(_Unwind_Exception *exception_object)
{
  void *v1;
  void *v2;

  v2 = v1;
  if (v2)
    free(v2);
  _Unwind_Resume(exception_object);
}

void sub_20B4147CC(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unsigned __int8 v11;
  __int16 v12;
  unint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t (**v23)();

  v23 = &off_24C40A010;
  sub_20B4BA20C(a1, (uint64_t)&v14);
  v3 = operator new();
  *(_QWORD *)v3 = &off_24C3FDC50;
  *(_OWORD *)(v3 + 8) = v15;
  *(_OWORD *)(v3 + 24) = v16;
  *(_OWORD *)(v3 + 40) = v17;
  *(_QWORD *)(v3 + 56) = v18;
  *(_OWORD *)(v3 + 64) = v19;
  *(_QWORD *)(v3 + 80) = v20;
  *(_QWORD *)(v3 + 104) = v22;
  *(_OWORD *)(v3 + 88) = v21;
  v4 = (std::__shared_weak_count *)operator new();
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C40A048;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)v3;
  *a2 = v3;
  a2[1] = (uint64_t)v4;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v14, v3, 33);
  v8 = v14[1];
  v7 = v14[2];
  *(_OWORD *)(a2 + 3) = *v14;
  *(_OWORD *)(a2 + 5) = v8;
  *(_OWORD *)(a2 + 7) = v7;
  v14 = 0;
  MEMORY[0x20BD3583C]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v9 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v9;
  v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v11 = v10;
  if ((v10 & 0xFFFFFF) <= 0x10000)
    v11 = 0;
  v12 = v10 & 0xFF00;
  if ((v10 & 0xFF0000) == 0)
    v12 = 0;
  *((_WORD *)a2 + 60) = v12 & 0xFF00 | v11;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_20B4149C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  sub_20AEC147C(v10);
  sub_20AEC147C((uint64_t)&a10);
  sub_20B03B030(&a9);
  _Unwind_Resume(a1);
}

void sub_20B4149F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B03B030(&a9);
  _Unwind_Resume(a1);
}

void sub_20B414A08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  if (a21)
    free(a21);
  _Unwind_Resume(exception_object);
}

void sub_20B414A20(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unsigned __int8 v11;
  __int16 v12;
  unint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t (**v23)();

  v23 = &off_24C40A9F0;
  sub_20B4BB1D4(a1, (uint64_t)&v14);
  v3 = operator new();
  *(_QWORD *)v3 = &off_24C3FDE50;
  *(_OWORD *)(v3 + 8) = v15;
  *(_OWORD *)(v3 + 24) = v16;
  *(_OWORD *)(v3 + 40) = v17;
  *(_QWORD *)(v3 + 56) = v18;
  *(_OWORD *)(v3 + 64) = v19;
  *(_QWORD *)(v3 + 80) = v20;
  *(_QWORD *)(v3 + 104) = v22;
  *(_OWORD *)(v3 + 88) = v21;
  v4 = (std::__shared_weak_count *)operator new();
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C40AA28;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)v3;
  *a2 = v3;
  a2[1] = (uint64_t)v4;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v14, v3, 37);
  v8 = v14[1];
  v7 = v14[2];
  *(_OWORD *)(a2 + 3) = *v14;
  *(_OWORD *)(a2 + 5) = v8;
  *(_OWORD *)(a2 + 7) = v7;
  v14 = 0;
  MEMORY[0x20BD3583C]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v9 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v9;
  v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v11 = v10;
  if ((v10 & 0xFFFFFF) <= 0x10000)
    v11 = 0;
  v12 = v10 & 0xFF00;
  if ((v10 & 0xFF0000) == 0)
    v12 = 0;
  *((_WORD *)a2 + 60) = v12 & 0xFF00 | v11;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_20B414C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  sub_20AEC147C(v10);
  sub_20AEC147C((uint64_t)&a10);
  sub_20B03B030(&a9);
  _Unwind_Resume(a1);
}

void sub_20B414C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B03B030(&a9);
  _Unwind_Resume(a1);
}

void sub_20B414C5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  if (a21)
    free(a21);
  _Unwind_Resume(exception_object);
}

void sub_20B414C74(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _OWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  sub_20B4C9FF8((uint64_t)v23, a1);
  v19 = v23[0];
  v20 = v23[1];
  v21 = v23[2];
  v3 = v25;
  v22 = v24;
  v4 = v26;
  v5 = v27;
  v17 = v28;
  v18 = v29;
  v6 = operator new();
  *(_OWORD *)(v6 + 8) = v19;
  *(_QWORD *)v6 = &off_24C3FDED0;
  *(_OWORD *)(v6 + 24) = v20;
  *(_OWORD *)(v6 + 40) = v21;
  *(_QWORD *)(v6 + 56) = v22;
  *(_QWORD *)(v6 + 64) = v3;
  *(_QWORD *)(v6 + 72) = v4;
  *(_QWORD *)(v6 + 80) = v5;
  *(_OWORD *)(v6 + 88) = v17;
  *(_QWORD *)(v6 + 104) = v18;
  v7 = (std::__shared_weak_count *)operator new();
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24C40ACA0;
  v7->__shared_weak_owners_ = 0;
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
  *a2 = v6;
  a2[1] = (uint64_t)v7;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 64))(v23, v6, 38);
  v11 = *(_OWORD *)(*(_QWORD *)&v23[0] + 16);
  v10 = *(_OWORD *)(*(_QWORD *)&v23[0] + 32);
  *(_OWORD *)(a2 + 3) = **(_OWORD **)&v23[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  *(_QWORD *)&v23[0] = 0;
  MEMORY[0x20BD3583C]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  do
    v16 = __ldaxr(p_shared_owners);
  while (__stlxr(v16 - 1, p_shared_owners));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
}

void sub_20B414E84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_20AEC147C(v2);
  sub_20AEC147C((uint64_t)va1);
  sub_20B03B030((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B414EB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B03B030((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B414ECC(_Unwind_Exception *exception_object)
{
  void *v1;
  void *v2;

  v2 = v1;
  if (v2)
    free(v2);
  _Unwind_Resume(exception_object);
}

void sub_20B414EE8(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unsigned __int8 v11;
  __int16 v12;
  unint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t (**v23)();

  v23 = &off_24C40AEE0;
  sub_20B4BB9BC(a1, (uint64_t)&v14);
  v3 = operator new();
  *(_QWORD *)v3 = &off_24C3FDF50;
  *(_OWORD *)(v3 + 8) = v15;
  *(_OWORD *)(v3 + 24) = v16;
  *(_OWORD *)(v3 + 40) = v17;
  *(_QWORD *)(v3 + 56) = v18;
  *(_OWORD *)(v3 + 64) = v19;
  *(_QWORD *)(v3 + 80) = v20;
  *(_QWORD *)(v3 + 104) = v22;
  *(_OWORD *)(v3 + 88) = v21;
  v4 = (std::__shared_weak_count *)operator new();
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C40AF18;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)v3;
  *a2 = v3;
  a2[1] = (uint64_t)v4;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v14, v3, 39);
  v8 = v14[1];
  v7 = v14[2];
  *(_OWORD *)(a2 + 3) = *v14;
  *(_OWORD *)(a2 + 5) = v8;
  *(_OWORD *)(a2 + 7) = v7;
  v14 = 0;
  MEMORY[0x20BD3583C]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v9 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v9;
  v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v11 = v10;
  if ((v10 & 0xFFFFFF) <= 0x10000)
    v11 = 0;
  v12 = v10 & 0xFF00;
  if ((v10 & 0xFF0000) == 0)
    v12 = 0;
  *((_WORD *)a2 + 60) = v12 & 0xFF00 | v11;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_20B415174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  sub_20AEC147C(v10);
  sub_20AEC147C((uint64_t)&a10);
  sub_20B058B78(&a9);
  _Unwind_Resume(a1);
}

void sub_20B4151A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20B058B78(&a9);
  _Unwind_Resume(a1);
}

void sub_20B4151BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20B4B1B98((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B4151D0(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _OWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  sub_20B4CA1B4((uint64_t)v23, a1);
  v19 = v23[0];
  v20 = v23[1];
  v21 = v23[2];
  v3 = v25;
  v22 = v24;
  v4 = v26;
  v5 = v27;
  v17 = v28;
  v18 = v29;
  v6 = operator new();
  *(_OWORD *)(v6 + 8) = v19;
  *(_QWORD *)v6 = &off_24C3FDFD0;
  *(_OWORD *)(v6 + 24) = v20;
  *(_OWORD *)(v6 + 40) = v21;
  *(_QWORD *)(v6 + 56) = v22;
  *(_QWORD *)(v6 + 64) = v3;
  *(_QWORD *)(v6 + 72) = v4;
  *(_QWORD *)(v6 + 80) = v5;
  *(_OWORD *)(v6 + 88) = v17;
  *(_QWORD *)(v6 + 104) = v18;
  v7 = (std::__shared_weak_count *)operator new();
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24C40B190;
  v7->__shared_weak_owners_ = 0;
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
  *a2 = v6;
  a2[1] = (uint64_t)v7;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 64))(v23, v6, 40);
  v11 = *(_OWORD *)(*(_QWORD *)&v23[0] + 16);
  v10 = *(_OWORD *)(*(_QWORD *)&v23[0] + 32);
  *(_OWORD *)(a2 + 3) = **(_OWORD **)&v23[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  *(_QWORD *)&v23[0] = 0;
  MEMORY[0x20BD3583C]();
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  do
    v16 = __ldaxr(p_shared_owners);
  while (__stlxr(v16 - 1, p_shared_owners));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
}

void sub_20B4153E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  sub_20AEC147C(v2);
  sub_20AEC147C((uint64_t)va1);
  sub_20B03B030((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B415414(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B03B030((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B415428(_Unwind_Exception *exception_object)
{
  void *v1;
  void *v2;

  v2 = v1;
  if (v2)
    free(v2);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B415444(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v7;
  char **v8;
  char *v9;

  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 0;
  v3 = *a2;
  v4 = operator new();
  *(_BYTE *)v4 = *(_BYTE *)v3;
  *(_QWORD *)(v4 + 8) = *(_QWORD *)(v3 + 8);
  *(_BYTE *)v3 = 0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = 1;
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_BYTE *)(a1 + 96) = 1;
  *(_QWORD *)(a1 + 104) = 850045863;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 176) = 0;
  *(_QWORD *)(a1 + 168) = a1 + 176;
  *(_QWORD *)(a1 + 184) = 0;
  v5 = atomic_load((unint64_t *)(a1 + 80));
  if (v5 != -1)
  {
    v9 = &v7;
    v8 = &v9;
    std::__call_once((std::once_flag::_State_type *)(a1 + 80), &v8, (void (__cdecl *)(void *))nullsub_286);
  }
  return a1;
}

void sub_20B415554(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  std::mutex *v4;
  void ****v5;
  uint64_t v6;
  uint64_t v7;

  v7 = v6;
  sub_20B4176B4(v7, *(_QWORD **)(v1 + 176));
  std::mutex::~mutex(v4);
  sub_20B2845E8(v3);
  sub_20AEC147C(v2);
  if (*(_BYTE *)(v1 + 24))
  {
    sub_20B4F9938(v5);
    if (!*(_BYTE *)(v1 + 8))
LABEL_3:
      _Unwind_Resume(a1);
  }
  else if (!*(_BYTE *)(v1 + 8))
  {
    goto LABEL_3;
  }
  sub_20B4F96AC((uint64_t **)v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B4155C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v7;
  char **v8;
  char *v9;

  v3 = *a2;
  v4 = operator new();
  *(_BYTE *)v4 = *(_BYTE *)v3;
  *(_QWORD *)(v4 + 8) = *(_QWORD *)(v3 + 8);
  *(_BYTE *)v3 = 0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = 1;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 104) = 850045863;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_BYTE *)(a1 + 96) = 0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 176) = 0;
  *(_QWORD *)(a1 + 184) = 0;
  *(_QWORD *)(a1 + 168) = a1 + 176;
  v5 = atomic_load((unint64_t *)(a1 + 72));
  if (v5 != -1)
  {
    v9 = &v7;
    v8 = &v9;
    std::__call_once((std::once_flag::_State_type *)(a1 + 72), &v8, (void (__cdecl *)(void *))nullsub_285);
  }
  return a1;
}

void sub_20B4156D4(_Unwind_Exception *a1)
{
  uint64_t v1;
  void ****v2;
  uint64_t v3;
  uint64_t v4;
  std::mutex *v5;
  uint64_t v6;
  uint64_t v7;

  v7 = v6;
  sub_20B4176B4(v7, *(_QWORD **)(v1 + 176));
  std::mutex::~mutex(v5);
  sub_20B2845E8(v4);
  sub_20AEC147C(v3);
  if (*(_BYTE *)(v1 + 24))
  {
    sub_20B4F9938(v2);
    if (!*(_BYTE *)(v1 + 8))
LABEL_3:
      _Unwind_Resume(a1);
  }
  else if (!*(_BYTE *)(v1 + 8))
  {
    goto LABEL_3;
  }
  sub_20B4F96AC((uint64_t **)v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B415738(uint64_t a1, uint64_t a2, int a3, int a4)
{
  char *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t **v15;
  uint64_t *v16;

  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  v8 = (char *)operator new(0x30uLL);
  *((_QWORD *)v8 + 2) = 0;
  *(_QWORD *)v8 = &unk_24C40D7F8;
  *((_QWORD *)v8 + 1) = 0;
  *(_OWORD *)(v8 + 24) = *(_OWORD *)a2;
  *((_QWORD *)v8 + 5) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a1 + 176) = 0;
  *(_QWORD *)(a1 + 168) = a1 + 176;
  *(_QWORD *)(a1 + 32) = v8 + 24;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_BYTE *)(a1 + 96) = a3;
  *(_QWORD *)(a1 + 104) = 850045863;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 184) = 0;
  if (a4 == 1)
  {
    if (a3)
    {
      v12 = a1;
      v13 = &v14;
      v14 = 0;
      v9 = atomic_load((unint64_t *)(a1 + 80));
      if (v9 != -1)
      {
        v16 = &v12;
        v15 = &v16;
        std::__call_once((std::once_flag::_State_type *)(a1 + 80), &v15, (void (__cdecl *)(void *))sub_20B417AF0);
      }
    }
    else
    {
      v12 = a1;
      v13 = &v14;
      v14 = 0;
      v10 = atomic_load((unint64_t *)(a1 + 72));
      if (v10 != -1)
      {
        v16 = &v12;
        v15 = &v16;
        std::__call_once((std::once_flag::_State_type *)(a1 + 72), &v15, (void (__cdecl *)(void *))sub_20B4177D4);
      }
    }
  }
  return a1;
}

void sub_20B4158C0(_Unwind_Exception *a1)
{
  uint64_t v1;
  void ****v2;
  uint64_t v3;
  uint64_t v4;
  std::mutex *v5;
  uint64_t v6;

  sub_20B4176B4(v4, *(_QWORD **)(v1 + 176));
  std::mutex::~mutex(v5);
  sub_20B2845E8(v3);
  sub_20AEC147C(v6);
  if (*(_BYTE *)(v1 + 24))
  {
    sub_20B4F9938(v2);
    if (!*(_BYTE *)(v1 + 8))
LABEL_3:
      _Unwind_Resume(a1);
  }
  else if (!*(_BYTE *)(v1 + 8))
  {
    goto LABEL_3;
  }
  sub_20B4F96AC((uint64_t **)v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B415930(uint64_t a1, uint64_t a2, int a3)
{
  CFDictionaryRef *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  CFTypeID v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  CFTypeID v26;
  std::logic_error *exception;
  std::__shared_weak_count_vtbl *v28;
  std::__shared_weak_count_vtbl *v29;
  std::string v30;
  char *v31;
  __int128 v32;
  std::string v33;

  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)a2;
  v5 = (CFDictionaryRef *)(a1 + 48);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  v6 = a1 + 88;
  *(_QWORD *)(v6 + 16) = 850045863;
  *(_BYTE *)(v6 - 24) = 1;
  *(_QWORD *)(v6 - 16) = 0;
  *(_QWORD *)(v6 - 8) = 0;
  *(_BYTE *)(v6 + 8) = 0;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_QWORD *)(v6 + 72) = 0;
  *(_QWORD *)(v6 + 88) = 0;
  *(_QWORD *)(v6 + 80) = v6 + 88;
  *(_QWORD *)(v6 + 96) = 0;
  v7 = atomic_load((unint64_t *)v6);
  if (v7 != -1)
  {
    v30.__r_.__value_.__r.__words[0] = (std::string::size_type)&v31;
    v33.__r_.__value_.__r.__words[0] = (std::string::size_type)&v30;
    std::__call_once((std::once_flag::_State_type *)v6, &v33, (void (__cdecl *)(void *))nullsub_287);
  }
  if (a3 == 1)
  {
    v8 = sub_20B44FC58();
    if (!sub_20B4EF920((uint64_t)v5, v8, v9))
    {
      v26 = v10;
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      v31 = (char *)operator new(0xA0uLL);
      v32 = xmmword_20B60BF70;
      strcpy(v31, "CFDictionary cannot be used to create dict::Dictionary. It must only hold trivially serializable types: Boolean, Number, String, Array or Dictionary values");
      v28 = (std::__shared_weak_count_vtbl *)CFCopyTypeIDDescription(v26);
      sub_20B415F0C(&v29, v28, 0);
      sub_20B4EE3FC((CFIndex)v29, &v30);
      sub_20B415D3C((uint64_t)&v33, (__int128 *)&v31, (uint64_t)&v30);
      std::logic_error::logic_error(exception, &v33);
      exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
      __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
    }
  }
  v12 = *(_QWORD *)(a1 + 48);
  v11 = *(std::__shared_weak_count **)(a1 + 56);
  if (!v11)
    goto LABEL_10;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldxr(p_shared_owners);
  while (__stxr(v14 + 1, p_shared_owners));
  do
    v15 = __ldaxr(p_shared_owners);
  while (__stlxr(v15 - 1, p_shared_owners));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    if (!v12)
      return a1;
  }
  else
  {
LABEL_10:
    if (!v12)
      return a1;
  }
  v17 = *(_QWORD *)(a1 + 48);
  v16 = *(std::__shared_weak_count **)(a1 + 56);
  if (!v16)
    goto LABEL_16;
  v18 = (unint64_t *)&v16->__shared_owners_;
  do
    v19 = __ldxr(v18);
  while (__stxr(v19 + 1, v18));
  do
    v20 = __ldaxr(v18);
  while (__stlxr(v20 - 1, v18));
  if (!v20)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    if (v17)
    {
LABEL_17:
      if (CFDictionaryGetCount(*v5))
        return a1;
    }
  }
  else
  {
LABEL_16:
    if (v17)
      goto LABEL_17;
  }
  v21 = (char *)operator new(0x30uLL);
  *((_QWORD *)v21 + 2) = 0;
  *(_QWORD *)v21 = &unk_24C40D7F8;
  *((_QWORD *)v21 + 1) = 0;
  v21[47] = 2;
  strcpy(v21 + 24, "{}");
  v22 = *(std::__shared_weak_count **)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v21 + 24;
  *(_QWORD *)(a1 + 40) = v21;
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  return a1;
}

void sub_20B415C50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  uint64_t v26;
  void ****v27;
  uint64_t v28;
  uint64_t v29;
  std::mutex *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  int v34;

  if (a26 < 0)
    operator delete(__p);
  if (a17 && a16 < 0)
    operator delete(a11);
  sub_20AEC147C((uint64_t)&a9);
  operator delete(v33);
  if (v34)
    __cxa_free_exception(v32);
  sub_20B4176B4(v31, *(_QWORD **)(v26 + 176));
  std::mutex::~mutex(v30);
  sub_20B2845E8(v29);
  sub_20AEC147C(v28);
  if (*(_BYTE *)(v26 + 24))
  {
    sub_20B4F9938(v27);
    if (!*(_BYTE *)(v26 + 8))
LABEL_10:
      _Unwind_Resume(a1);
  }
  else if (!*(_BYTE *)(v26 + 8))
  {
    goto LABEL_10;
  }
  sub_20B4F96AC((uint64_t **)v26);
  _Unwind_Resume(a1);
}

uint64_t sub_20B415D3C(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t result;
  __int128 v5;
  uint64_t v6;
  int v7;
  __int128 *v8;
  const char *v9;
  __int128 *v10;
  const char *v11;
  const char *v12;
  __int128 **v13;

  v7 = -1;
  if (*((char *)a2 + 23) < 0)
  {
    sub_20AEC60F4(&v5, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v5 = *a2;
    v6 = *((_QWORD *)a2 + 2);
  }
  v7 = 1;
  v8 = &v5;
  v9 = ", but contains ";
  v10 = &v5;
  v11 = ", but contains ";
  v12 = ", but contains ";
  sub_20B1E49C0((uint64_t *)&v10, (uint64_t)&v5);
  if (*(_BYTE *)(a3 + 24))
  {
    v8 = &v5;
    v9 = (const char *)a3;
    v10 = &v5;
    v11 = (const char *)a3;
    v12 = (const char *)a3;
    if (v7 != -1)
    {
      v13 = &v8;
      ((void (*)(__int128 ***, __int128 *))off_24C41B180[v7])(&v13, &v5);
      goto LABEL_9;
    }
LABEL_13:
    sub_20AECFAB8();
  }
  v8 = &v5;
  v9 = "nullopt";
  v10 = &v5;
  v11 = "nullopt";
  v12 = "nullopt";
  if (v7 == -1)
    goto LABEL_13;
  v13 = &v8;
  ((void (*)(__int128 ***, __int128 *))off_24C41B1B0[v7])(&v13, &v5);
LABEL_9:
  if (v7 == -1)
    sub_20AECFAB8();
  v8 = (__int128 *)&v13;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C41B1C8[v7])(&v8, &v5);
  if (v7 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C41B198[v7])(&v8, &v5);
  return result;
}

void sub_20B415EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B415ED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B415EE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B415EF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AECFA60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

std::__shared_weak_count_vtbl **sub_20B415F0C(std::__shared_weak_count_vtbl **a1, std::__shared_weak_count_vtbl *cf, int a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count_vtbl *v12;
  std::__shared_weak_count *v13;

  if (a3)
  {
    sub_20B417748(&v12, cf);
    v5 = v13;
    *a1 = v12;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
    if (!v5)
      return a1;
  }
  else
  {
    v12 = cf;
    v5 = (std::__shared_weak_count *)operator new();
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_24C418888;
    v5->__shared_owners_ = 0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = cf;
    v13 = v5;
    *a1 = cf;
    a1[1] = (std::__shared_weak_count_vtbl *)v5;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  v9 = v13;
  if (!v13)
    return a1;
  v10 = (unint64_t *)&v13->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
    return a1;
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_20B415FE8(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B416000(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_20B416014(uint64_t a1, std::mutex **a2)
{
  int v4;
  uint64_t v5;
  BOOL v6;
  std::mutex **v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  _QWORD v12[2];
  char v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  std::mutex *v16;
  char v17;
  char v18;

  if (a2)
  {
    v4 = 0;
    LOBYTE(v16) = 0;
    v18 = 0;
    v5 = *(_QWORD *)(a1 + 32);
    if (v5)
      goto LABEL_3;
  }
  else
  {
    std::mutex::lock((std::mutex *)(a1 + 104));
    v16 = (std::mutex *)(a1 + 104);
    v4 = 1;
    v17 = 1;
    v18 = 1;
    v5 = *(_QWORD *)(a1 + 32);
    if (v5)
    {
LABEL_3:
      v6 = 0;
      if (!v4)
        return v5;
      goto LABEL_18;
    }
  }
  if (*(_QWORD *)(a1 + 184))
  {
    v6 = 0;
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 168) + 56);
    if (!v4)
      return v5;
  }
  else
  {
    v12[0] = 0;
    v12[1] = 0;
    v13 = 1;
    if (a2)
      v8 = a2;
    else
      v8 = &v16;
    sub_20B416164(&v14, a1, (uint64_t)v12, (uint64_t)v8);
    v5 = v14;
    v9 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
    v6 = v17 == 0;
    if (!v18)
      return v5;
  }
LABEL_18:
  if (v6)
    return v5;
  std::mutex::unlock(v16);
  return v5;
}

void sub_20B416140(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::mutex *a14, char a15, int a16, __int16 a17, char a18, char a19)
{
  if ((_BYTE)a17)
  {
    if (a15)
      std::mutex::unlock(a14);
  }
  _Unwind_Resume(exception_object);
}

void sub_20B416164(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t *v11;
  uint64_t **v12;
  uint64_t *v13;
  unsigned int v14;
  char v15;
  unint64_t v16;
  unsigned int v17;
  BOOL v18;
  char v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  std::__shared_count v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  std::__shared_weak_count *v35;
  std::__shared_weak_count *v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t **v41;
  uint64_t *v42;

  if (*(_BYTE *)(a2 + 96) || *(_BYTE *)(a2 + 24))
  {
    v38 = a2;
    v39 = &v40;
    v40 = a4;
    v7 = atomic_load((unint64_t *)(a2 + 80));
    if (v7 != -1)
    {
      v42 = &v38;
      v41 = &v42;
      std::__call_once((std::once_flag::_State_type *)(a2 + 80), &v41, (void (__cdecl *)(void *))sub_20B417AF0);
    }
    sub_20B4F7E88(*(unsigned __int8 **)(a2 + 16), a3, &v32);
  }
  else
  {
    v38 = a2;
    v39 = &v40;
    v40 = a4;
    v31 = atomic_load((unint64_t *)(a2 + 72));
    if (v31 != -1)
    {
      v42 = &v38;
      v41 = &v42;
      std::__call_once((std::once_flag::_State_type *)(a2 + 72), &v41, (void (__cdecl *)(void *))sub_20B4177D4);
    }
    sub_20B4F7668(*(unsigned __int8 **)a2, a3, &v32);
  }
  v8 = (std::__shared_weak_count *)operator new(0x30uLL);
  v8->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  v8->__shared_weak_owners_ = 0;
  v8->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41B1F0;
  v8[1].std::__shared_count = v32;
  v8[1].__shared_weak_owners_ = v33;
  v36 = v8 + 1;
  v37 = v8;
  v32 = *(std::__shared_count *)a3;
  v33 = *(_QWORD *)(a3 + 16);
  v34 = v8 + 1;
  v35 = v8;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  v12 = (uint64_t **)(a2 + 176);
  v11 = *(uint64_t **)(a2 + 176);
  if (v11)
  {
    if (LOBYTE(v32.__shared_owners_))
    {
      while (1)
      {
        while (1)
        {
          v13 = v11;
          if (!*((_BYTE *)v11 + 40))
            goto LABEL_21;
          v16 = v11[4];
          if (v32.__vftable == (std::__shared_count_vtbl *)v16)
            break;
          if (v32.__vftable >= (std::__shared_count_vtbl *)v16)
          {
            if ((std::__shared_count_vtbl *)v16 >= v32.__vftable)
              v15 = 1;
            else
              v15 = -1;
            if ((v15 & 0x80) == 0)
              goto LABEL_55;
            goto LABEL_21;
          }
LABEL_33:
          v11 = (uint64_t *)*v13;
          v12 = (uint64_t **)v13;
          if (!*v13)
            goto LABEL_36;
        }
        v17 = *((unsigned __int8 *)v13 + 48);
        if (v33 < v17)
          goto LABEL_33;
        v18 = v17 == v33;
        if (v17 >= v33)
          v19 = 1;
        else
          v19 = -1;
        if (v18)
          v19 = 0;
        if ((v19 & 0x80) == 0)
          goto LABEL_55;
LABEL_21:
        v11 = (uint64_t *)v13[1];
        if (!v11)
          goto LABEL_16;
      }
    }
    while (1)
    {
      while (1)
      {
        v13 = v11;
        if (!*((_BYTE *)v11 + 40))
        {
          v14 = *((unsigned __int8 *)v11 + 48);
          if (v33 >= v14)
            break;
        }
        v11 = (uint64_t *)*v11;
        v12 = (uint64_t **)v13;
        if (!*v13)
          goto LABEL_36;
      }
      if (v14 >= v33)
        break;
      v11 = (uint64_t *)v11[1];
      if (!v11)
      {
LABEL_16:
        v12 = (uint64_t **)(v13 + 1);
        goto LABEL_36;
      }
    }
LABEL_55:
    v20 = v13;
    goto LABEL_39;
  }
  v13 = (uint64_t *)(a2 + 176);
LABEL_36:
  v20 = operator new(0x48uLL);
  v20[2] = *(_OWORD *)a3;
  *((_QWORD *)v20 + 6) = *(_QWORD *)(a3 + 16);
  *((_QWORD *)v20 + 7) = v8 + 1;
  *((_QWORD *)v20 + 8) = v8;
  v34 = 0;
  v35 = 0;
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  *((_QWORD *)v20 + 2) = v13;
  *v12 = (uint64_t *)v20;
  v21 = **(_QWORD **)(a2 + 168);
  v22 = (uint64_t *)v20;
  if (v21)
  {
    *(_QWORD *)(a2 + 168) = v21;
    v22 = *v12;
  }
  sub_20AEC84C8(*(uint64_t **)(a2 + 176), v22);
  ++*(_QWORD *)(a2 + 184);
  v8 = v35;
  if (v35)
  {
LABEL_39:
    v23 = (unint64_t *)&v8->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  *a1 = *((_QWORD *)v20 + 7);
  v25 = *((_QWORD *)v20 + 8);
  a1[1] = v25;
  if (v25)
  {
    v26 = (unint64_t *)(v25 + 8);
    do
      v27 = __ldxr(v26);
    while (__stxr(v27 + 1, v26));
  }
  v28 = v37;
  if (v37)
  {
    v29 = (unint64_t *)&v37->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
}

void sub_20B416484(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  sub_20B416820((uint64_t)&a9);
  sub_20AEC147C((uint64_t)&a14);
  _Unwind_Resume(a1);
}

void sub_20B4164A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B4164BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  BOOL v9;
  uint64_t *v10;
  unint64_t v11;
  BOOL v12;
  unsigned int v13;
  BOOL v14;
  unsigned int v15;
  BOOL v16;
  char v17;
  BOOL v18;
  uint64_t *v19;
  int v20;
  unint64_t v21;
  BOOL v22;
  char v23;
  unsigned int v24;
  BOOL v25;
  BOOL v26;
  char v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  uint64_t v33;
  std::__shared_weak_count *v34;
  std::mutex *v35;
  char v36;

  v35 = (std::mutex *)(a1 + 104);
  v36 = 1;
  std::mutex::lock((std::mutex *)(a1 + 104));
  v4 = *(_QWORD *)(a1 + 176);
  if (!v4)
    goto LABEL_55;
  v5 = *(_QWORD *)a2;
  v6 = *(unsigned __int8 *)(a2 + 16);
  v7 = a1 + 176;
  if (*(_BYTE *)(a2 + 8))
  {
    do
    {
      if (*(_BYTE *)(v4 + 40))
      {
        v11 = *(_QWORD *)(v4 + 32);
        v12 = v11 == v5;
        if (v11 >= v5)
          v8 = 1;
        else
          v8 = -1;
        if (v12)
        {
          v13 = *(unsigned __int8 *)(v4 + 48);
          v14 = v13 == v6;
          v8 = v13 >= v6 ? 1 : -1;
          if (v14)
            v8 = 0;
        }
      }
      else
      {
        v8 = -1;
      }
      v9 = (v8 & 0x80) == 0;
      if (v8 < 0)
        v10 = (uint64_t *)(v4 + 8);
      else
        v10 = (uint64_t *)v4;
      if (v9)
        v7 = v4;
      v4 = *v10;
    }
    while (*v10);
  }
  else
  {
    do
    {
      if (*(_BYTE *)(v4 + 40))
      {
        v17 = 1;
      }
      else
      {
        v15 = *(unsigned __int8 *)(v4 + 48);
        v16 = v15 == v6;
        if (v15 >= v6)
          v17 = 1;
        else
          v17 = -1;
        if (v16)
          v17 = 0;
      }
      v18 = (v17 & 0x80) == 0;
      if (v17 < 0)
        v19 = (uint64_t *)(v4 + 8);
      else
        v19 = (uint64_t *)v4;
      if (v18)
        v7 = v4;
      v4 = *v19;
    }
    while (*v19);
  }
  if (v7 == a1 + 176)
    goto LABEL_55;
  v20 = *(unsigned __int8 *)(v7 + 40);
  if (*(_BYTE *)(a2 + 8) && *(_BYTE *)(v7 + 40))
  {
    v21 = *(_QWORD *)(v7 + 32);
    v22 = v5 == v21;
    if (v5 >= v21)
      v23 = 1;
    else
      v23 = -1;
    if (!v22)
      goto LABEL_53;
    goto LABEL_47;
  }
  v23 = -1;
  if (v20 == 0 || *(_BYTE *)(a2 + 8) != 0)
    v23 = 1;
  if ((*(_BYTE *)(a2 + 8) != 0) == (v20 != 0))
  {
LABEL_47:
    v24 = *(unsigned __int8 *)(v7 + 48);
    v25 = v6 >= v24;
    v26 = v6 == v24;
    v27 = -1;
    if (v25)
      v27 = 1;
    if (v26)
      v23 = 0;
    else
      v23 = v27;
  }
LABEL_53:
  if ((v23 & 0x80) == 0)
  {
    v28 = *(_QWORD *)(v7 + 56);
LABEL_61:
    std::mutex::unlock(v35);
    return v28;
  }
LABEL_55:
  sub_20B416164(&v33, a1, a2, (uint64_t)&v35);
  v28 = v33;
  v29 = v34;
  if (v34)
  {
    p_shared_owners = (unint64_t *)&v34->__shared_owners_;
    do
      v31 = __ldaxr(p_shared_owners);
    while (__stlxr(v31 - 1, p_shared_owners));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  if (v36)
    goto LABEL_61;
  return v28;
}

void sub_20B41667C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::mutex *a11, char a12)
{
  if (a12)
    std::mutex::unlock(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B416698(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  BOOL v5;
  std::once_flag::_State_type *v6;
  unint64_t v7;
  unint64_t v8;
  std::once_flag::_State_type *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t **v16;
  uint64_t *v17;

  if (*(_BYTE *)(a1 + 96))
    v4 = *(_BYTE *)(a2 + 96) == 0;
  else
    v4 = 1;
  if (v4)
  {
    if (*(_BYTE *)(a1 + 64))
      v5 = *(_BYTE *)(a2 + 64) == 0;
    else
      v5 = 1;
    if (v5)
    {
      v6 = (std::once_flag::_State_type *)(a1 + 72);
      v13 = a1;
      v14 = &v15;
      v15 = 0;
      v7 = atomic_load((unint64_t *)(a1 + 72));
      if (v7 != -1)
      {
        v17 = &v13;
        v16 = &v17;
        std::__call_once(v6, &v16, (void (__cdecl *)(void *))sub_20B4177D4);
      }
      v14 = &v15;
      v15 = 0;
      v13 = a2;
      v8 = atomic_load((unint64_t *)(a2 + 72));
      if (v8 != -1)
      {
        v17 = &v13;
        v16 = &v17;
        std::__call_once((std::once_flag::_State_type *)(a2 + 72), &v16, (void (__cdecl *)(void *))sub_20B4177D4);
      }
      return sub_20B4F9988(*(uint64_t **)a1, *(uint64_t **)a2);
    }
    else
    {
      return sub_20B284658((const void **)(a1 + 48), a2 + 48);
    }
  }
  else
  {
    v9 = (std::once_flag::_State_type *)(a1 + 80);
    v13 = a1;
    v14 = &v15;
    v15 = 0;
    v10 = atomic_load((unint64_t *)(a1 + 80));
    if (v10 != -1)
    {
      v17 = &v13;
      v16 = &v17;
      std::__call_once(v9, &v16, (void (__cdecl *)(void *))sub_20B417AF0);
    }
    v14 = &v15;
    v15 = 0;
    v13 = a2;
    v11 = atomic_load((unint64_t *)(a2 + 80));
    if (v11 != -1)
    {
      v17 = &v13;
      v16 = &v17;
      std::__call_once((std::once_flag::_State_type *)(a2 + 80), &v16, (void (__cdecl *)(void *))sub_20B417AF0);
    }
    return sub_20B4F9D04(*(uint64_t **)(a1 + 16), *(uint64_t **)(a2 + 16));
  }
}

uint64_t sub_20B416820(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 32);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t *sub_20B416888(uint64_t *a1)
{
  uint64_t v2;
  unsigned __int8 *v3;
  _QWORD *v4;
  unsigned __int8 *v6;

  v2 = operator new();
  v3 = (unsigned __int8 *)operator new();
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v6 = v3;
  sub_20B415444(v2, (uint64_t *)&v6);
  sub_20B4181DC((void ***)v3 + 1, *v3);
  MEMORY[0x20BD3583C](v3, 0x1022C40B06DCE69);
  *a1 = v2;
  v4 = (_QWORD *)operator new();
  *v4 = &off_24C41B240;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = v2;
  a1[1] = (uint64_t)v4;
  return a1;
}

void sub_20B41695C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t **a9)
{
  sub_20B4169A4(&a9);
  _Unwind_Resume(a1);
}

void sub_20B416970(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20B4F9938((void ****)va);
  MEMORY[0x20BD3583C](v2, 0x10E2C40590DAB7CLL);
  _Unwind_Resume(a1);
}

uint64_t ***sub_20B4169A4(uint64_t ***a1)
{
  uint64_t **v2;
  uint64_t **v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_20B416CE0(v2);
    MEMORY[0x20BD3583C](v3, 0x10E2C40590DAB7CLL);
  }
  return a1;
}

uint64_t *sub_20B4169E8(uint64_t *a1, uint64_t a2, int a3, int a4)
{
  uint64_t v8;
  _QWORD *v9;
  void *__p[2];
  uint64_t v12;

  v8 = operator new();
  if (*(char *)(a2 + 23) < 0)
  {
    sub_20AEC60F4(__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a2;
    v12 = *(_QWORD *)(a2 + 16);
  }
  sub_20B415738(v8, (uint64_t)__p, a3, a4);
  if (SHIBYTE(v12) < 0)
    operator delete(__p[0]);
  *a1 = v8;
  v9 = (_QWORD *)operator new();
  *v9 = &off_24C41B240;
  v9[1] = 0;
  v9[2] = 0;
  v9[3] = v8;
  a1[1] = (uint64_t)v9;
  return a1;
}

void sub_20B416AC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  uint64_t v16;

  MEMORY[0x20BD3583C](v16, 0x10E2C40590DAB7CLL);
  _Unwind_Resume(a1);
}

uint64_t *sub_20B416B18(uint64_t *a1, uint64_t a2, int a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;

  sub_20AEEC2D8(&v14, a2);
  v5 = operator new();
  v16 = v14;
  v14 = 0uLL;
  sub_20B415930(v5, (uint64_t)&v16, a3);
  v15 = v5;
  v6 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (v8)
    {
      v5 = v15;
      *a1 = v15;
      if (!v5)
      {
LABEL_11:
        a1[1] = 0;
        v15 = 0;
        v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
        if (*((_QWORD *)&v14 + 1))
          goto LABEL_12;
        return a1;
      }
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
      v5 = v15;
      *a1 = v15;
      if (!v5)
        goto LABEL_11;
    }
  }
  else
  {
    *a1 = v5;
  }
  v9 = (_QWORD *)operator new();
  *v9 = &off_24C41B240;
  v9[1] = 0;
  v9[2] = 0;
  v9[3] = v5;
  a1[1] = (uint64_t)v9;
  v15 = 0;
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (!*((_QWORD *)&v14 + 1))
    return a1;
LABEL_12:
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (v13)
    return a1;
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return a1;
}

void sub_20B416C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t **a12)
{
  sub_20B4169A4(&a12);
  sub_20AEC147C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B416C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v13;

  sub_20AEC147C((uint64_t)&a13);
  MEMORY[0x20BD3583C](v13, 0x10E2C40590DAB7CLL);
  sub_20AEC147C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20B416CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20AEC147C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t **sub_20B416CE0(uint64_t **a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  void ***v8;
  uint64_t *v9;

  sub_20B4176B4((uint64_t)(a1 + 21), a1[22]);
  std::mutex::~mutex((std::mutex *)(a1 + 13));
  if (*((_BYTE *)a1 + 64))
  {
    v2 = (std::__shared_weak_count *)a1[7];
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = (std::__shared_weak_count *)a1[5];
  if (!v5)
    goto LABEL_11;
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!*((_BYTE *)a1 + 24))
      goto LABEL_14;
  }
  else
  {
LABEL_11:
    if (!*((_BYTE *)a1 + 24))
      goto LABEL_14;
  }
  v8 = (void ***)a1[2];
  a1[2] = 0;
  if (v8)
  {
    sub_20B4181DC(v8 + 1, *(unsigned __int8 *)v8);
    MEMORY[0x20BD3583C](v8, 0x1022C40B06DCE69);
  }
LABEL_14:
  if (*((_BYTE *)a1 + 8))
  {
    v9 = *a1;
    *a1 = 0;
    if (v9)
    {
      sub_20B416E08(v9 + 1, *(unsigned __int8 *)v9);
      MEMORY[0x20BD3583C](v9, 0x1022C40B06DCE69);
    }
  }
  return a1;
}

void sub_20B416E08(uint64_t *a1, int a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  BOOL v12;
  char *v13;
  char *v14;
  char *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char v45;
  char *v46;
  char *v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  void **v53;
  void *v54;
  void *v55;
  void *v56;
  uint64_t v57;
  void *v58;
  void *v59;
  char *v60;
  char *v61;
  int v62;
  unsigned __int8 v63;
  _QWORD *v64;
  void *__p;
  char *v66;
  char *v67;

  __p = 0;
  v66 = 0;
  v67 = 0;
  v3 = a2 - 1;
  if (a2 == 1)
  {
    sub_20B417428((uint64_t)&__p, *(_QWORD *)(*a1 + 16));
    v7 = *a1 + 8;
    v8 = *(char **)*a1;
    if (v8 != (char *)v7)
    {
      v9 = v66;
      do
      {
        if (v9 >= v67)
        {
          v9 = sub_20B417520(&__p, v8 + 56);
        }
        else
        {
          *v9 = v8[56];
          *((_QWORD *)v9 + 1) = *((_QWORD *)v8 + 8);
          v8[56] = 0;
          *((_QWORD *)v8 + 8) = 0;
          v9 += 16;
        }
        v66 = v9;
        v10 = (char *)*((_QWORD *)v8 + 1);
        if (v10)
        {
          do
          {
            v11 = v10;
            v10 = *(char **)v10;
          }
          while (v10);
        }
        else
        {
          do
          {
            v11 = (char *)*((_QWORD *)v8 + 2);
            v12 = *(_QWORD *)v11 == (_QWORD)v8;
            v8 = v11;
          }
          while (!v12);
        }
        v8 = v11;
      }
      while (v11 != (char *)v7);
    }
  }
  else if (a2 == 2)
  {
    sub_20B417428((uint64_t)&__p, (uint64_t)(*(_QWORD *)(*a1 + 8) - *(_QWORD *)*a1) >> 4);
    v4 = *(_QWORD *)*a1;
    v5 = *(_QWORD *)(*a1 + 8);
    if (v4 != v5)
    {
      v6 = v66;
      do
      {
        if (v6 < v67)
        {
          *v6 = *(_BYTE *)v4;
          *((_QWORD *)v6 + 1) = *(_QWORD *)(v4 + 8);
          *(_BYTE *)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
          v6 += 16;
        }
        else
        {
          v6 = sub_20B417520(&__p, (char *)v4);
        }
        v66 = v6;
        v4 += 16;
      }
      while (v4 != v5);
    }
  }
  v14 = (char *)__p;
  v13 = v66;
  if (__p != v66)
  {
    v62 = v3;
    while (1)
    {
      v63 = *(v13 - 16);
      v64 = (_QWORD *)*((_QWORD *)v13 - 1);
      *(v13 - 16) = 0;
      *((_QWORD *)v13 - 1) = 0;
      v15 = v66 - 16;
      sub_20B416E08(v66 - 8, *(v66 - 16));
      v66 = v15;
      if (v63 == 1)
        break;
      if (v63 == 2)
      {
        v16 = (_QWORD *)*v64;
        v17 = v64 + 1;
        v18 = (_QWORD *)v64[1];
        if ((_QWORD *)*v64 != v18)
        {
          do
          {
            if (v15 < v67)
            {
              *v15 = *(_BYTE *)v16;
              *((_QWORD *)v15 + 1) = v16[1];
              *(_BYTE *)v16 = 0;
              v16[1] = 0;
              v15 += 16;
            }
            else
            {
              v19 = (char *)__p;
              v20 = (v15 - (_BYTE *)__p) >> 4;
              v21 = v20 + 1;
              if ((unint64_t)(v20 + 1) >> 60)
                goto LABEL_105;
              v22 = v67 - (_BYTE *)__p;
              if ((v67 - (_BYTE *)__p) >> 3 > v21)
                v21 = v22 >> 3;
              if ((unint64_t)v22 >= 0x7FFFFFFFFFFFFFF0)
                v23 = 0xFFFFFFFFFFFFFFFLL;
              else
                v23 = v21;
              if (v23 >> 60)
                goto LABEL_106;
              v24 = (char *)operator new(16 * v23);
              v25 = &v24[16 * v20];
              *v25 = *(_BYTE *)v16;
              *((_QWORD *)v25 + 1) = v16[1];
              *(_BYTE *)v16 = 0;
              v16[1] = 0;
              v26 = v66;
              v27 = v25;
              if (v66 != v19)
              {
                do
                {
                  v28 = *(v26 - 16);
                  v26 -= 16;
                  *(v27 - 16) = v28;
                  v27 -= 16;
                  *((_QWORD *)v27 + 1) = *((_QWORD *)v26 + 1);
                  *v26 = 0;
                  *((_QWORD *)v26 + 1) = 0;
                }
                while (v26 != v19);
                v19 = v66;
              }
              v29 = &v24[16 * v23];
              v30 = (char *)__p;
              v15 = v25 + 16;
              __p = v27;
              v66 = v25 + 16;
              v67 = v29;
              if (v19 != v30)
              {
                v31 = v19 - 8;
                do
                {
                  v32 = v31 - 8;
                  sub_20B416E08(v31, *(v31 - 8));
                  v31 -= 16;
                }
                while (v32 != v30);
              }
              if (v30)
                operator delete(v30);
            }
            v66 = v15;
            v16 += 2;
          }
          while (v16 != v18);
          v16 = (_QWORD *)*v64;
          v17 = v64 + 1;
          v50 = v64[1];
          if (v50 == *v64)
          {
            *v17 = v50;
            goto LABEL_24;
          }
          v51 = v50 - 8;
          do
          {
            v52 = (_QWORD *)(v51 - 8);
            sub_20B416E08(v51, *(unsigned __int8 *)(v51 - 8));
            v51 -= 16;
          }
          while (v52 != v16);
        }
        *v17 = v16;
      }
LABEL_24:
      sub_20B416E08(&v64, v63);
      v14 = (char *)__p;
      v13 = v66;
      if (__p == v66)
      {
        v3 = v62;
        goto LABEL_83;
      }
    }
    v33 = (uint64_t)v64;
    v34 = v64 + 1;
    v35 = (_QWORD *)*v64;
    if ((_QWORD *)*v64 == v64 + 1)
    {
LABEL_80:
      sub_20B417648(v33, *(char **)(v33 + 8));
      *(_QWORD *)v33 = v33 + 8;
      *(_QWORD *)(v33 + 16) = 0;
      *(_QWORD *)(v33 + 8) = 0;
      goto LABEL_24;
    }
    while (1)
    {
      if (v15 < v67)
      {
        *v15 = *((_BYTE *)v35 + 56);
        *((_QWORD *)v15 + 1) = v35[8];
        *((_BYTE *)v35 + 56) = 0;
        v35[8] = 0;
        v15 += 16;
        v66 = v15;
        v36 = (_QWORD *)v35[1];
        if (v36)
          goto LABEL_70;
        goto LABEL_72;
      }
      v37 = (char *)__p;
      v38 = (v15 - (_BYTE *)__p) >> 4;
      v39 = v38 + 1;
      if ((unint64_t)(v38 + 1) >> 60)
LABEL_105:
        sub_20B41750C();
      v40 = v67 - (_BYTE *)__p;
      if ((v67 - (_BYTE *)__p) >> 3 > v39)
        v39 = v40 >> 3;
      if ((unint64_t)v40 >= 0x7FFFFFFFFFFFFFF0)
        v41 = 0xFFFFFFFFFFFFFFFLL;
      else
        v41 = v39;
      if (v41 >> 60)
LABEL_106:
        sub_20AEC60CC();
      v42 = (char *)operator new(16 * v41);
      v43 = &v42[16 * v38];
      *v43 = *((_BYTE *)v35 + 56);
      *((_QWORD *)v43 + 1) = v35[8];
      *((_BYTE *)v35 + 56) = 0;
      v35[8] = 0;
      v44 = v43 + 16;
      if (v15 == v37)
      {
        __p = v43;
        v66 = v43 + 16;
        v67 = &v42[16 * v41];
      }
      else
      {
        do
        {
          v45 = *(v15 - 16);
          v15 -= 16;
          *(v43 - 16) = v45;
          v43 -= 16;
          *((_QWORD *)v43 + 1) = *((_QWORD *)v15 + 1);
          *v15 = 0;
          *((_QWORD *)v15 + 1) = 0;
        }
        while (v15 != v37);
        v15 = (char *)__p;
        v46 = v66;
        __p = v43;
        v66 = v44;
        v67 = &v42[16 * v41];
        if (v46 != v15)
        {
          v47 = v46 - 8;
          do
          {
            v48 = v47 - 8;
            sub_20B416E08(v47, *(v47 - 8));
            v47 -= 16;
          }
          while (v48 != v15);
        }
        if (!v15)
        {
          v15 = v44;
          v66 = v44;
          v36 = (_QWORD *)v35[1];
          if (v36)
            goto LABEL_70;
          goto LABEL_72;
        }
      }
      operator delete(v15);
      v15 = v44;
      v66 = v44;
      v36 = (_QWORD *)v35[1];
      if (v36)
      {
        do
        {
LABEL_70:
          v49 = v36;
          v36 = (_QWORD *)*v36;
        }
        while (v36);
        goto LABEL_49;
      }
      do
      {
LABEL_72:
        v49 = (_QWORD *)v35[2];
        v12 = *v49 == (_QWORD)v35;
        v35 = v49;
      }
      while (!v12);
LABEL_49:
      v35 = v49;
      if (v49 == v34)
      {
        v33 = (uint64_t)v64;
        goto LABEL_80;
      }
    }
  }
LABEL_83:
  switch(v3)
  {
    case 0:
      sub_20B417648(*a1, *(char **)(*a1 + 8));
      goto LABEL_96;
    case 1:
      v53 = (void **)*a1;
      v55 = *(void **)*a1;
      if (!v55)
        goto LABEL_97;
      v56 = v53[1];
      v54 = *(void **)*a1;
      if (v56 != v55)
      {
        v57 = (uint64_t)v56 - 8;
        do
        {
          v58 = (void *)(v57 - 8);
          sub_20B416E08(v57, *(unsigned __int8 *)(v57 - 8));
          v57 -= 16;
        }
        while (v58 != v55);
        v54 = *v53;
      }
      v53[1] = v55;
      break;
    case 2:
      v53 = (void **)*a1;
      if ((*(char *)(*a1 + 23) & 0x80000000) == 0)
        goto LABEL_97;
      v54 = *v53;
      break;
    case 7:
      v53 = (void **)*a1;
      v54 = *(void **)*a1;
      if (!v54)
        goto LABEL_97;
      v53[1] = v54;
      break;
    default:
      goto LABEL_98;
  }
  operator delete(v54);
LABEL_96:
  v53 = (void **)*a1;
LABEL_97:
  operator delete(v53);
  v14 = (char *)__p;
LABEL_98:
  if (v14)
  {
    v59 = v14;
    if (v66 != v14)
    {
      v60 = v66 - 8;
      do
      {
        v61 = v60 - 8;
        sub_20B416E08(v60, *(v60 - 8));
        v60 -= 16;
      }
      while (v61 != v14);
      v59 = __p;
    }
    v66 = v14;
    operator delete(v59);
  }
}

void sub_20B417428(uint64_t a1, unint64_t a2)
{
  char *v2;
  _BYTE *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char v10;
  char *v11;
  char *v12;
  char *v13;

  v2 = *(char **)a1;
  if (a2 > (uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 4)
  {
    if (a2 >> 60)
      sub_20B41750C();
    v4 = *(_BYTE **)(a1 + 8);
    v5 = 16 * a2;
    v6 = (char *)operator new(16 * a2);
    v7 = &v6[v5];
    v8 = &v6[v4 - v2];
    if (v4 == v2)
    {
      *(_QWORD *)a1 = v8;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v7;
      if (v2)
LABEL_10:
        operator delete(v2);
    }
    else
    {
      v9 = &v6[v4 - v2];
      do
      {
        v10 = *(v4 - 16);
        v4 -= 16;
        *(v9 - 16) = v10;
        v9 -= 16;
        *((_QWORD *)v9 + 1) = *((_QWORD *)v4 + 1);
        *v4 = 0;
        *((_QWORD *)v4 + 1) = 0;
      }
      while (v4 != v2);
      v2 = *(char **)a1;
      v11 = *(char **)(a1 + 8);
      *(_QWORD *)a1 = v9;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v7;
      if (v11 != v2)
      {
        v12 = v11 - 8;
        do
        {
          v13 = v12 - 8;
          sub_20B416E08(v12, *(v12 - 8));
          v12 -= 16;
        }
        while (v13 != v2);
      }
      if (v2)
        goto LABEL_10;
    }
  }
}

void sub_20B41750C()
{
  sub_20AEC014C("vector");
}

char *sub_20B417520(void **a1, char *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char v16;
  char *v17;
  char *v18;
  char *v19;

  v3 = ((_BYTE *)a1[1] - (_BYTE *)*a1) >> 4;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 60)
    sub_20B41750C();
  v5 = (_BYTE *)a1[2] - (_BYTE *)*a1;
  if (v5 >> 3 > v4)
    v4 = v5 >> 3;
  v6 = (unint64_t)v5 >= 0x7FFFFFFFFFFFFFF0;
  v7 = 0xFFFFFFFFFFFFFFFLL;
  if (!v6)
    v7 = v4;
  if (v7 >> 60)
    sub_20AEC60CC();
  v9 = 16 * v7;
  v10 = (char *)operator new(16 * v7);
  v11 = &v10[16 * v3];
  v12 = &v10[v9];
  *v11 = *a2;
  *((_QWORD *)v11 + 1) = *((_QWORD *)a2 + 1);
  *a2 = 0;
  *((_QWORD *)a2 + 1) = 0;
  v13 = v11 + 16;
  v14 = (char *)*a1;
  v15 = (char *)a1[1];
  if (v15 == *a1)
  {
    *a1 = v11;
    a1[1] = v13;
    a1[2] = v12;
    if (!v15)
      return v13;
    goto LABEL_13;
  }
  do
  {
    v16 = *(v15 - 16);
    v15 -= 16;
    *(v11 - 16) = v16;
    v11 -= 16;
    *((_QWORD *)v11 + 1) = *((_QWORD *)v15 + 1);
    *v15 = 0;
    *((_QWORD *)v15 + 1) = 0;
  }
  while (v15 != v14);
  v15 = (char *)*a1;
  v17 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v13;
  a1[2] = v12;
  if (v17 != v15)
  {
    v18 = v17 - 8;
    do
    {
      v19 = v18 - 8;
      sub_20B416E08(v18, *(v18 - 8));
      v18 -= 16;
    }
    while (v19 != v15);
  }
  if (v15)
LABEL_13:
    operator delete(v15);
  return v13;
}

void sub_20B417648(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_20B417648(a1, *(_QWORD *)a2);
    sub_20B417648(a1, *((_QWORD *)a2 + 1));
    sub_20B416E08(a2 + 64, a2[56]);
    if (a2[55] < 0)
      operator delete(*((void **)a2 + 4));
    operator delete(a2);
  }
}

void sub_20B4176B4(uint64_t a1, _QWORD *a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  if (a2)
  {
    sub_20B4176B4(a1, *a2);
    sub_20B4176B4(a1, a2[1]);
    v4 = (std::__shared_weak_count *)a2[8];
    if (!v4)
      goto LABEL_6;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      operator delete(a2);
    }
    else
    {
LABEL_6:
      operator delete(a2);
    }
  }
}

_QWORD *sub_20B417748(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_24C418888;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_20B4177A8(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20B4177C0(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_20B4177D4(uint64_t ****a1)
{
  uint64_t **v1;
  std::mutex ***v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t *v21;
  std::__shared_weak_count *v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  std::__shared_weak_count *v27;
  unsigned __int8 *v28;
  char v29;
  uint64_t v30;

  v1 = **a1;
  v3 = *v1;
  v2 = (std::mutex ***)v1[1];
  if (!v3[4] && !*((_BYTE *)v3 + 24))
  {
    sub_20AEEC2D8(&v26, (uint64_t)(v3 + 6));
    sub_20B44F0B0((uint64_t)&v26, (uint64_t *)&v28);
    v14 = v28;
    if (*((_BYTE *)v3 + 8))
    {
      v15 = (unsigned __int8 *)operator new();
      sub_20B456794((uint64_t)v15, v14);
      v16 = *v15;
      v17 = *((_QWORD *)v15 + 1);
      *v15 = 0;
      *((_QWORD *)v15 + 1) = 0;
      v18 = *v3;
      v19 = *(unsigned __int8 *)*v3;
      *(_BYTE *)v18 = v16;
      v29 = v19;
      v20 = *(_QWORD *)(v18 + 8);
      *(_QWORD *)(v18 + 8) = v17;
      v30 = v20;
      sub_20B416E08(&v30, v19);
      sub_20B416E08((uint64_t *)v15 + 1, *v15);
      MEMORY[0x20BD3583C](v15, 0x1022C40B06DCE69);
      v21 = (uint64_t *)v28;
      v28 = 0;
      if (!v21)
        goto LABEL_11;
    }
    else
    {
      v25 = operator new();
      sub_20B456794(v25, v14);
      *v3 = v25;
      *((_BYTE *)v3 + 8) = 1;
      v21 = (uint64_t *)v28;
      v28 = 0;
      if (!v21)
      {
LABEL_11:
        v22 = v27;
        if (v27)
        {
          p_shared_owners = (unint64_t *)&v27->__shared_owners_;
          do
            v24 = __ldaxr(p_shared_owners);
          while (__stlxr(v24 - 1, p_shared_owners));
          if (!v24)
          {
            ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
            std::__shared_weak_count::__release_weak(v22);
          }
        }
        return;
      }
    }
    sub_20B416E08(v21 + 1, *(unsigned __int8 *)v21);
    MEMORY[0x20BD3583C](v21, 0x1022C40B06DCE69);
    goto LABEL_11;
  }
  v4 = (uint64_t *)sub_20B416014((uint64_t)v3, *v2);
  sub_20B4F88E0(v4, (uint64_t *)&v26);
  if (*((_BYTE *)v3 + 8))
  {
    v5 = (uint64_t)v26;
    v6 = *v26;
    v7 = *((_QWORD *)v26 + 1);
    *v26 = 0;
    *(_QWORD *)(v5 + 8) = 0;
    v8 = *v3;
    v9 = *(unsigned __int8 *)*v3;
    *(_BYTE *)v8 = v6;
    v29 = v9;
    v10 = *(_QWORD *)(v8 + 8);
    *(_QWORD *)(v8 + 8) = v7;
    v30 = v10;
    sub_20B416E08(&v30, v9);
    v11 = (uint64_t *)v26;
    v26 = 0;
    if (!v11)
      return;
LABEL_7:
    sub_20B416E08(v11 + 1, *(unsigned __int8 *)v11);
    MEMORY[0x20BD3583C](v11, 0x1022C40B06DCE69);
    return;
  }
  v12 = (uint64_t)v26;
  v13 = operator new();
  *(_BYTE *)v13 = *(_BYTE *)v12;
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v12 + 8);
  *(_BYTE *)v12 = 0;
  *(_QWORD *)(v12 + 8) = 0;
  *v3 = v13;
  *((_BYTE *)v3 + 8) = 1;
  v11 = (uint64_t *)v26;
  v26 = 0;
  if (v11)
    goto LABEL_7;
}

void sub_20B417A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, std::__shared_weak_count *a4, ...)
{
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v7;
  va_list va;

  va_start(va, a4);
  MEMORY[0x20BD3583C](v4, 0x1022C40B06DCE69);
  sub_20B4F96AC((uint64_t **)va);
  if (a4)
  {
    p_shared_owners = (unint64_t *)&a4->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))a4->__on_zero_shared)(a4);
      std::__shared_weak_count::__release_weak(a4);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B417ADC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4F96AC((uint64_t **)va);
  _Unwind_Resume(a1);
}

void sub_20B417AF0(uint64_t ***a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  unsigned __int8 *v8;
  int v9;
  void **v10;
  void ***v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  unsigned __int8 v16;
  uint64_t v17;
  unsigned __int8 *v18;
  int v19;
  void **v20;
  void ***v21;
  std::__shared_weak_count *v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  std::__shared_weak_count *v27;
  unsigned __int8 *v28;
  char v29;
  void **v30;

  v1 = **a1;
  v3 = *v1;
  v2 = (_QWORD *)v1[1];
  if (!*(_QWORD *)(v3 + 32) && !*(_BYTE *)(v3 + 8))
  {
    sub_20AEEC2D8(&v26, v3 + 48);
    sub_20B44F420((uint64_t)&v26, (uint64_t *)&v28);
    v14 = v28;
    if (*(_BYTE *)(v3 + 24))
    {
      v15 = (unsigned __int8 *)operator new();
      sub_20B4541AC((uint64_t)v15, v14);
      v16 = *v15;
      v17 = *((_QWORD *)v15 + 1);
      *v15 = 0;
      *((_QWORD *)v15 + 1) = 0;
      v18 = *(unsigned __int8 **)(v3 + 16);
      v19 = *v18;
      *v18 = v16;
      v29 = v19;
      v20 = (void **)*((_QWORD *)v18 + 1);
      *((_QWORD *)v18 + 1) = v17;
      v30 = v20;
      sub_20B4181DC(&v30, v19);
      sub_20B4181DC((void ***)v15 + 1, *v15);
      MEMORY[0x20BD3583C](v15, 0x1022C40B06DCE69);
      v21 = (void ***)v28;
      v28 = 0;
      if (!v21)
        goto LABEL_11;
    }
    else
    {
      v25 = operator new();
      sub_20B4541AC(v25, v14);
      *(_QWORD *)(v3 + 16) = v25;
      *(_BYTE *)(v3 + 24) = 1;
      v21 = (void ***)v28;
      v28 = 0;
      if (!v21)
      {
LABEL_11:
        v22 = v27;
        if (v27)
        {
          p_shared_owners = (unint64_t *)&v27->__shared_owners_;
          do
            v24 = __ldaxr(p_shared_owners);
          while (__stlxr(v24 - 1, p_shared_owners));
          if (!v24)
          {
            ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
            std::__shared_weak_count::__release_weak(v22);
          }
        }
        return;
      }
    }
    sub_20B4181DC(v21 + 1, *(unsigned __int8 *)v21);
    MEMORY[0x20BD3583C](v21, 0x1022C40B06DCE69);
    goto LABEL_11;
  }
  v4 = (uint64_t *)sub_20B416014(v3, *v2);
  sub_20B4F8A14(v4, (uint64_t *)&v26);
  if (*(_BYTE *)(v3 + 24))
  {
    v5 = (uint64_t)v26;
    v6 = *v26;
    v7 = *((_QWORD *)v26 + 1);
    *v26 = 0;
    *(_QWORD *)(v5 + 8) = 0;
    v8 = *(unsigned __int8 **)(v3 + 16);
    v9 = *v8;
    *v8 = v6;
    v29 = v9;
    v10 = (void **)*((_QWORD *)v8 + 1);
    *((_QWORD *)v8 + 1) = v7;
    v30 = v10;
    sub_20B4181DC(&v30, v9);
    v11 = (void ***)v26;
    v26 = 0;
    if (!v11)
      return;
LABEL_7:
    sub_20B4181DC(v11 + 1, *(unsigned __int8 *)v11);
    MEMORY[0x20BD3583C](v11, 0x1022C40B06DCE69);
    return;
  }
  v12 = (uint64_t)v26;
  v13 = operator new();
  *(_BYTE *)v13 = *(_BYTE *)v12;
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v12 + 8);
  *(_BYTE *)v12 = 0;
  *(_QWORD *)(v12 + 8) = 0;
  *(_QWORD *)(v3 + 16) = v13;
  *(_BYTE *)(v3 + 24) = 1;
  v11 = (void ***)v26;
  v26 = 0;
  if (v11)
    goto LABEL_7;
}

void sub_20B417D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, std::__shared_weak_count *a4, ...)
{
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v7;
  va_list va;

  va_start(va, a4);
  MEMORY[0x20BD3583C](v4, 0x1022C40B06DCE69);
  sub_20B4F9938((void ****)va);
  if (a4)
  {
    p_shared_owners = (unint64_t *)&a4->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))a4->__on_zero_shared)(a4);
      std::__shared_weak_count::__release_weak(a4);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20B417DF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B4F9938((void ****)va);
  _Unwind_Resume(a1);
}

void sub_20B417E0C(uint64_t ***a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  uint64_t **v24;
  uint64_t *v25;

  v1 = ***a1;
  if (*(_BYTE *)(v1 + 96))
  {
    v21 = ***a1;
    v22 = (std::__shared_weak_count *)&v23;
    v23 = 0;
    v2 = atomic_load((unint64_t *)(v1 + 80));
    if (v2 != -1)
    {
      v25 = &v21;
      v24 = &v25;
      std::__call_once((std::once_flag::_State_type *)(v1 + 80), &v24, (void (__cdecl *)(void *))sub_20B417AF0);
    }
    v25 = *(uint64_t **)(v1 + 16);
    sub_20B4515F4((uint64_t *)&v25, &v21);
    v3 = v21;
    if (*(_BYTE *)(v1 + 64))
    {
      v4 = v22;
      v21 = 0;
      v22 = 0;
      v5 = *(std::__shared_weak_count **)(v1 + 56);
      *(_QWORD *)(v1 + 48) = v3;
      *(_QWORD *)(v1 + 56) = v4;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldaxr(p_shared_owners);
        while (__stlxr(v7 - 1, p_shared_owners));
        if (!v7)
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
      }
    }
    else
    {
      v14 = v22;
      *(_QWORD *)(v1 + 48) = v21;
      *(_QWORD *)(v1 + 56) = v14;
      v21 = 0;
      v22 = 0;
      *(_BYTE *)(v1 + 64) = 1;
    }
    v15 = v22;
    if (!v22)
      return;
    v16 = (unint64_t *)&v22->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (v17)
      return;
LABEL_29:
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
    return;
  }
  v21 = ***a1;
  v22 = (std::__shared_weak_count *)&v23;
  v23 = 0;
  v8 = atomic_load((unint64_t *)(v1 + 72));
  if (v8 != -1)
  {
    v25 = &v21;
    v24 = &v25;
    std::__call_once((std::once_flag::_State_type *)(v1 + 72), &v24, (void (__cdecl *)(void *))sub_20B4177D4);
  }
  v25 = *(uint64_t **)v1;
  sub_20B4514FC((uint64_t *)&v25, &v21);
  v9 = v21;
  if (*(_BYTE *)(v1 + 64))
  {
    v10 = v22;
    v21 = 0;
    v22 = 0;
    v11 = *(std::__shared_weak_count **)(v1 + 56);
    *(_QWORD *)(v1 + 48) = v9;
    *(_QWORD *)(v1 + 56) = v10;
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  else
  {
    v18 = v22;
    *(_QWORD *)(v1 + 48) = v21;
    *(_QWORD *)(v1 + 56) = v18;
    v21 = 0;
    v22 = 0;
    *(_BYTE *)(v1 + 64) = 1;
  }
  v15 = v22;
  if (v22)
  {
    v19 = (unint64_t *)&v22->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
      goto LABEL_29;
  }
}

void sub_20B418018(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41B1F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B418028(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41B1F0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B418058(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
}

void sub_20B418074(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t **sub_20B418098(uint64_t a1)
{
  uint64_t **result;

  result = *(uint64_t ***)(a1 + 24);
  if (result)
  {
    sub_20B416CE0(result);
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20B4180CC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit4dict10Dictionary7PrivateEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit4dict10Dictionary7PrivateEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit4dict10Dictionary7PrivateEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit4dict10Dictionary7PrivateEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void ***sub_20B41813C(void ***result)
{
  void ***v1;
  void **v2;
  void ***v3;
  void ***v4;
  void *v5;

  v1 = result;
  if (!*((_BYTE *)result + 8))
  {
    v2 = *result;
    v3 = (void ***)**result;
    if (v3)
    {
      v4 = (void ***)v2[1];
      v5 = **result;
      if (v4 != v3)
      {
        do
        {
          sub_20B4181DC(v4 - 1, *((unsigned __int8 *)v4 - 16));
          if (*((char *)v4 - 17) < 0)
            operator delete(*(v4 - 5));
          v4 -= 5;
        }
        while (v4 != v3);
        v5 = **v1;
      }
      v2[1] = v3;
      operator delete(v5);
      return v1;
    }
  }
  return result;
}

void sub_20B4181DC(void ***a1, int a2)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  char v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void **v51;
  void **v52;
  void **v53;
  void *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  void *v59;
  char *v60;
  char *v61;
  int v62;
  unsigned __int8 v63;
  uint64_t *v64;
  void *__p;
  char *v66;
  char *v67;

  __p = 0;
  v66 = 0;
  v67 = 0;
  v3 = a2 - 1;
  if (a2 == 1)
  {
    sub_20B41880C((uint64_t)&__p, 0xCCCCCCCCCCCCCCCDLL * (((_BYTE *)(*a1)[1] - (_BYTE *)**a1) >> 3));
    v7 = (char *)**a1;
    v8 = (char *)(*a1)[1];
    if (v7 != v8)
    {
      v9 = v66;
      v10 = v7 + 24;
      do
      {
        if (v9 < v67)
        {
          *v9 = *v10;
          *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
          *v10 = 0;
          *((_QWORD *)v10 + 1) = 0;
          v9 += 16;
        }
        else
        {
          v9 = sub_20B4188F0(&__p, v10);
        }
        v66 = v9;
        v11 = v10 + 16;
        v10 += 40;
      }
      while (v11 != v8);
    }
  }
  else if (a2 == 2)
  {
    sub_20B41880C((uint64_t)&__p, ((_BYTE *)(*a1)[1] - (_BYTE *)**a1) >> 4);
    v4 = (char *)**a1;
    v5 = (char *)(*a1)[1];
    if (v4 != v5)
    {
      v6 = v66;
      do
      {
        if (v6 < v67)
        {
          *v6 = *v4;
          *((_QWORD *)v6 + 1) = *((_QWORD *)v4 + 1);
          *v4 = 0;
          *((_QWORD *)v4 + 1) = 0;
          v6 += 16;
        }
        else
        {
          v6 = sub_20B4188F0(&__p, v4);
        }
        v66 = v6;
        v4 += 16;
      }
      while (v4 != v5);
    }
  }
  v13 = (char *)__p;
  v12 = v66;
  if (__p != v66)
  {
    v62 = v3;
    while (1)
    {
      v63 = *(v12 - 16);
      v64 = (uint64_t *)*((_QWORD *)v12 - 1);
      *(v12 - 16) = 0;
      *((_QWORD *)v12 - 1) = 0;
      v15 = v66 - 16;
      sub_20B4181DC(v66 - 8, *(v66 - 16));
      v66 = v15;
      if (v63 != 1)
      {
        if (v63 != 2)
          goto LABEL_19;
        v16 = *v64;
        v17 = v64 + 1;
        v18 = v64[1];
        if (*v64 != v18)
        {
          do
          {
            if (v15 < v67)
            {
              *v15 = *(_BYTE *)v16;
              *((_QWORD *)v15 + 1) = *(_QWORD *)(v16 + 8);
              *(_BYTE *)v16 = 0;
              *(_QWORD *)(v16 + 8) = 0;
              v15 += 16;
            }
            else
            {
              v19 = (char *)__p;
              v20 = (v15 - (_BYTE *)__p) >> 4;
              v21 = v20 + 1;
              if ((unint64_t)(v20 + 1) >> 60)
                goto LABEL_102;
              v22 = v67 - (_BYTE *)__p;
              if ((v67 - (_BYTE *)__p) >> 3 > v21)
                v21 = v22 >> 3;
              if ((unint64_t)v22 >= 0x7FFFFFFFFFFFFFF0)
                v23 = 0xFFFFFFFFFFFFFFFLL;
              else
                v23 = v21;
              if (v23 >> 60)
                goto LABEL_103;
              v24 = (char *)operator new(16 * v23);
              v25 = &v24[16 * v20];
              *v25 = *(_BYTE *)v16;
              *((_QWORD *)v25 + 1) = *(_QWORD *)(v16 + 8);
              *(_BYTE *)v16 = 0;
              *(_QWORD *)(v16 + 8) = 0;
              v26 = v66;
              v27 = v25;
              if (v66 != v19)
              {
                do
                {
                  v28 = *(v26 - 16);
                  v26 -= 16;
                  *(v27 - 16) = v28;
                  v27 -= 16;
                  *((_QWORD *)v27 + 1) = *((_QWORD *)v26 + 1);
                  *v26 = 0;
                  *((_QWORD *)v26 + 1) = 0;
                }
                while (v26 != v19);
                v19 = v66;
              }
              v29 = &v24[16 * v23];
              v30 = (char *)__p;
              v15 = v25 + 16;
              __p = v27;
              v66 = v25 + 16;
              v67 = v29;
              if (v19 != v30)
              {
                v31 = v19 - 8;
                do
                {
                  v32 = v31 - 8;
                  sub_20B4181DC(v31, *(v31 - 8));
                  v31 -= 16;
                }
                while (v32 != v30);
              }
              if (v30)
                operator delete(v30);
            }
            v66 = v15;
            v16 += 16;
          }
          while (v16 != v18);
          v16 = *v64;
          v17 = v64 + 1;
          v47 = v64[1];
          if (v47 == *v64)
          {
            *v17 = v47;
            goto LABEL_19;
          }
          v48 = v47 - 8;
          do
          {
            v49 = v48 - 8;
            sub_20B4181DC(v48, *(unsigned __int8 *)(v48 - 8));
            v48 -= 16;
          }
          while (v49 != v16);
        }
        *v17 = v16;
        goto LABEL_19;
      }
      v14 = *v64;
      v33 = v64 + 1;
      v34 = v64[1];
      if (*v64 == v34)
        goto LABEL_18;
      do
      {
        if (v15 < v67)
        {
          *v15 = *(_BYTE *)(v14 + 24);
          *((_QWORD *)v15 + 1) = *(_QWORD *)(v14 + 32);
          *(_BYTE *)(v14 + 24) = 0;
          *(_QWORD *)(v14 + 32) = 0;
          v35 = v15 + 16;
          goto LABEL_45;
        }
        v36 = (char *)__p;
        v37 = (v15 - (_BYTE *)__p) >> 4;
        v38 = v37 + 1;
        if ((unint64_t)(v37 + 1) >> 60)
LABEL_102:
          sub_20B41750C();
        v39 = v67 - (_BYTE *)__p;
        if ((v67 - (_BYTE *)__p) >> 3 > v38)
          v38 = v39 >> 3;
        if ((unint64_t)v39 >= 0x7FFFFFFFFFFFFFF0)
          v40 = 0xFFFFFFFFFFFFFFFLL;
        else
          v40 = v38;
        if (v40 >> 60)
LABEL_103:
          sub_20AEC60CC();
        v41 = (char *)operator new(16 * v40);
        v42 = &v41[16 * v37];
        *v42 = *(_BYTE *)(v14 + 24);
        *((_QWORD *)v42 + 1) = *(_QWORD *)(v14 + 32);
        *(_BYTE *)(v14 + 24) = 0;
        *(_QWORD *)(v14 + 32) = 0;
        v35 = v42 + 16;
        if (v15 == v36)
        {
          __p = v42;
          v66 = v42 + 16;
          v67 = &v41[16 * v40];
LABEL_62:
          operator delete(v15);
          goto LABEL_45;
        }
        do
        {
          v43 = *(v15 - 16);
          v15 -= 16;
          *(v42 - 16) = v43;
          v42 -= 16;
          *((_QWORD *)v42 + 1) = *((_QWORD *)v15 + 1);
          *v15 = 0;
          *((_QWORD *)v15 + 1) = 0;
        }
        while (v15 != v36);
        v15 = (char *)__p;
        v44 = v66;
        __p = v42;
        v66 = v35;
        v67 = &v41[16 * v40];
        if (v44 != v15)
        {
          v45 = v44 - 8;
          do
          {
            v46 = v45 - 8;
            sub_20B4181DC(v45, *(v45 - 8));
            v45 -= 16;
          }
          while (v46 != v15);
        }
        if (v15)
          goto LABEL_62;
LABEL_45:
        v66 = v35;
        v14 += 40;
        v15 = v35;
      }
      while (v14 != v34);
      v50 = *v64;
      v33 = v64 + 1;
      v14 = v64[1];
      if (v14 != *v64)
      {
        do
        {
          sub_20B4181DC(v14 - 8, *(unsigned __int8 *)(v14 - 16));
          if (*(char *)(v14 - 17) < 0)
            operator delete(*(void **)(v14 - 40));
          v14 -= 40;
        }
        while (v14 != v50);
        v14 = v50;
      }
LABEL_18:
      *v33 = v14;
LABEL_19:
      sub_20B4181DC(&v64, v63);
      v13 = (char *)__p;
      v12 = v66;
      if (__p == v66)
      {
        v3 = v62;
        break;
      }
    }
  }
  switch(v3)
  {
    case 0:
      v51 = *a1;
      v52 = (void **)**a1;
      if (!v52)
        goto LABEL_94;
      v53 = (void **)v51[1];
      v54 = **a1;
      if (v53 != v52)
      {
        do
        {
          sub_20B4181DC(v53 - 1, *((unsigned __int8 *)v53 - 16));
          if (*((char *)v53 - 17) < 0)
            operator delete(*(v53 - 5));
          v53 -= 5;
        }
        while (v53 != v52);
        v54 = *v51;
      }
      v51[1] = v52;
      break;
    case 1:
      v51 = *a1;
      v55 = (char *)**a1;
      if (!v55)
        goto LABEL_94;
      v56 = (char *)v51[1];
      v54 = **a1;
      if (v56 != v55)
      {
        v57 = v56 - 8;
        do
        {
          v58 = v57 - 8;
          sub_20B4181DC(v57, *(v57 - 8));
          v57 -= 16;
        }
        while (v58 != v55);
        v54 = *v51;
      }
      v51[1] = v55;
      break;
    case 2:
      v51 = *a1;
      if ((*((char *)*a1 + 23) & 0x80000000) == 0)
        goto LABEL_94;
      v54 = *v51;
      break;
    case 7:
      v51 = *a1;
      v54 = **a1;
      if (!v54)
        goto LABEL_94;
      v51[1] = v54;
      break;
    default:
      goto LABEL_95;
  }
  operator delete(v54);
  v51 = *a1;
LABEL_94:
  operator delete(v51);
  v13 = (char *)__p;
LABEL_95:
  if (v13)
  {
    v59 = v13;
    if (v66 != v13)
    {
      v60 = v66 - 8;
      do
      {
        v61 = v60 - 8;
        sub_20B4181DC(v60, *(v60 - 8));
        v60 -= 16;
      }
      while (v61 != v13);
      v59 = __p;
    }
    v66 = v13;
    operator delete(v59);
  }
}

void sub_20B41880C(uint64_t a1, unint64_t a2)
{
  char *v2;
  _BYTE *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char v10;
  char *v11;
  char *v12;
  char *v13;

  v2 = *(char **)a1;
  if (a2 > (uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 4)
  {
    if (a2 >> 60)
      sub_20B41750C();
    v4 = *(_BYTE **)(a1 + 8);
    v5 = 16 * a2;
    v6 = (char *)operator new(16 * a2);
    v7 = &v6[v5];
    v8 = &v6[v4 - v2];
    if (v4 == v2)
    {
      *(_QWORD *)a1 = v8;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v7;
      if (v2)
LABEL_10:
        operator delete(v2);
    }
    else
    {
      v9 = &v6[v4 - v2];
      do
      {
        v10 = *(v4 - 16);
        v4 -= 16;
        *(v9 - 16) = v10;
        v9 -= 16;
        *((_QWORD *)v9 + 1) = *((_QWORD *)v4 + 1);
        *v4 = 0;
        *((_QWORD *)v4 + 1) = 0;
      }
      while (v4 != v2);
      v2 = *(char **)a1;
      v11 = *(char **)(a1 + 8);
      *(_QWORD *)a1 = v9;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v7;
      if (v11 != v2)
      {
        v12 = v11 - 8;
        do
        {
          v13 = v12 - 8;
          sub_20B4181DC(v12, *(v12 - 8));
          v12 -= 16;
        }
        while (v13 != v2);
      }
      if (v2)
        goto LABEL_10;
    }
  }
}

char *sub_20B4188F0(void **a1, char *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char v16;
  char *v17;
  char *v18;
  char *v19;

  v3 = ((_BYTE *)a1[1] - (_BYTE *)*a1) >> 4;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 60)
    sub_20B41750C();
  v5 = (_BYTE *)a1[2] - (_BYTE *)*a1;
  if (v5 >> 3 > v4)
    v4 = v5 >> 3;
  v6 = (unint64_t)v5 >= 0x7FFFFFFFFFFFFFF0;
  v7 = 0xFFFFFFFFFFFFFFFLL;
  if (!v6)
    v7 = v4;
  if (v7 >> 60)
    sub_20AEC60CC();
  v9 = 16 * v7;
  v10 = (char *)operator new(16 * v7);
  v11 = &v10[16 * v3];
  v12 = &v10[v9];
  *v11 = *a2;
  *((_QWORD *)v11 + 1) = *((_QWORD *)a2 + 1);
  *a2 = 0;
  *((_QWORD *)a2 + 1) = 0;
  v13 = v11 + 16;
  v14 = (char *)*a1;
  v15 = (char *)a1[1];
  if (v15 == *a1)
  {
    *a1 = v11;
    a1[1] = v13;
    a1[2] = v12;
    if (!v15)
      return v13;
    goto LABEL_13;
  }
  do
  {
    v16 = *(v15 - 16);
    v15 -= 16;
    *(v11 - 16) = v16;
    v11 -= 16;
    *((_QWORD *)v11 + 1) = *((_QWORD *)v15 + 1);
    *v15 = 0;
    *((_QWORD *)v15 + 1) = 0;
  }
  while (v15 != v14);
  v15 = (char *)*a1;
  v17 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v13;
  a1[2] = v12;
  if (v17 != v15)
  {
    v18 = v17 - 8;
    do
    {
      v19 = v18 - 8;
      sub_20B4181DC(v18, *(v18 - 8));
      v18 -= 16;
    }
    while (v19 != v15);
  }
  if (v15)
LABEL_13:
    operator delete(v15);
  return v13;
}

uint64_t sub_20B418A18(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v17;

  v3 = *a1;
  v4 = (std::__shared_weak_count *)a1[1];
  v17 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  v7 = *a2;
  v8 = (std::__shared_weak_count *)a2[1];
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  v11 = sub_20B416698(v3, v7);
  if (v8)
  {
    v12 = (unint64_t *)&v8->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (!v17)
    return v11;
  v14 = (unint64_t *)&v17->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
    return v11;
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  return v11;
}

void sub_20B418B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_20AEC147C((uint64_t)&a9);
  sub_20AEC147C((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_20B418B2C(uint64_t *a1, _DWORD *a2)
{
  _OWORD *v3;
  __int128 v4;
  _OWORD *v5;
  __int128 v6;
  _OWORD *v7;
  __int128 v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t *v13;
  void **v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t **v17;
  uint64_t *v18;
  uint64_t **v19;
  BOOL v20;
  int v21;
  uint64_t **v22;
  uint64_t *v23;
  int v24;
  void **v25;
  uint64_t *v26;
  size_t v27;
  int v28;
  uint64_t **v29;
  uint64_t **v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  size_t v35;
  int v36;
  int v37;
  uint64_t ***v38;
  char *v39;
  uint64_t v40;
  uint64_t *v41;
  char v42;
  __int128 *v43;
  size_t v44;
  uint64_t **v45;
  int v46;
  const void *v47;
  size_t v48;
  size_t v49;
  int v50;
  int v51;
  uint64_t *v52;
  size_t v53;
  size_t v54;
  int v55;
  _DWORD *v57;
  char *__p;
  char *v60;
  uint64_t v61;
  uint64_t **v62;
  uint64_t *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  __int128 v71;
  uint64_t v72;

  v68 = (char *)operator new(0x48uLL);
  v69 = v68;
  v70 = v68 + 72;
  sub_20B41A51C((uint64_t)&v71, dword_20B60C0AC);
  v3 = v68;
  if (v68 >= v68 + 72)
  {
    v69 = sub_20AEC81D4((void **)&v68, (uint64_t)&v71);
    if (SHIBYTE(v72) < 0)
      operator delete((void *)v71);
  }
  else
  {
    v4 = v71;
    *((_QWORD *)v69 + 2) = v72;
    *v3 = v4;
    v69 = (char *)v3 + 24;
  }
  sub_20B41A51C((uint64_t)&v71, &dword_20B60C0B0);
  v5 = v69;
  if (v69 >= v70)
  {
    v69 = sub_20AEC81D4((void **)&v68, (uint64_t)&v71);
    if (SHIBYTE(v72) < 0)
      operator delete((void *)v71);
  }
  else
  {
    v6 = v71;
    *((_QWORD *)v69 + 2) = v72;
    *v5 = v6;
    v69 = (char *)v5 + 24;
  }
  sub_20B41A51C((uint64_t)&v71, &dword_20B60C0B4);
  v7 = v69;
  v57 = a2;
  if (v69 >= v70)
  {
    v9 = sub_20AEC81D4((void **)&v68, (uint64_t)&v71);
    v69 = v9;
    if (SHIBYTE(v72) < 0)
    {
      operator delete((void *)v71);
      v9 = v69;
    }
  }
  else
  {
    v8 = v71;
    *((_QWORD *)v69 + 2) = v72;
    *v7 = v8;
    v9 = (char *)v7 + 24;
    v69 = (char *)v7 + 24;
  }
  v10 = 0;
  v11 = v68;
  v65 = v68;
  v66 = v9;
  v67 = v70;
  v63 = 0;
  v64 = 0;
  v62 = &v63;
  __p = v68;
  v60 = v9;
  while (1)
  {
LABEL_15:
    v12 = (char *)operator new(0x40uLL);
    v13 = (uint64_t *)v12;
    *(_QWORD *)&v71 = v12;
    *((_QWORD *)&v71 + 1) = &v63;
    LOBYTE(v72) = 0;
    v14 = (void **)(v12 + 32);
    if (v11[23] < 0)
    {
      sub_20AEC60F4(v12 + 32, *(void **)v11, *((_QWORD *)v11 + 1));
    }
    else
    {
      v15 = *(_OWORD *)v11;
      *((_QWORD *)v12 + 6) = *((_QWORD *)v11 + 2);
      *(_OWORD *)v14 = v15;
    }
    v61 = v10;
    *((_DWORD *)v13 + 14) = dword_20B60C0AC[v10];
    v16 = v63;
    v17 = &v63;
    if (v62 == &v63)
    {
LABEL_63:
      v29 = v17 + 1;
      if (v16)
        v30 = v17;
      else
        v30 = &v63;
      v38 = &v62;
      if (v16)
        v38 = (uint64_t ***)v17;
      else
        v29 = &v63;
      if (!v38[1])
        goto LABEL_73;
      v39 = v60;
      v40 = v61;
      if ((*((_BYTE *)v13 + 55) & 0x80) != 0)
        goto LABEL_78;
      goto LABEL_71;
    }
    v18 = v63;
    v19 = &v63;
    if (v63)
    {
      do
      {
        v17 = (uint64_t **)v18;
        v18 = (uint64_t *)v18[1];
      }
      while (v18);
    }
    else
    {
      do
      {
        v17 = (uint64_t **)v19[2];
        v20 = *v17 == (uint64_t *)v19;
        v19 = v17;
      }
      while (v20);
    }
    v21 = *((char *)v17 + 55);
    v22 = v21 >= 0 ? v17 + 4 : (uint64_t **)v17[4];
    v23 = v21 >= 0 ? (uint64_t *)*((unsigned __int8 *)v17 + 55) : v17[5];
    v24 = *((char *)v13 + 55);
    v25 = v24 >= 0 ? v14 : (void **)v13[4];
    v26 = v24 >= 0 ? (uint64_t *)*((unsigned __int8 *)v13 + 55) : (uint64_t *)v13[5];
    v27 = (size_t)(v26 >= v23 ? v23 : v26);
    v28 = memcmp(v22, v25, v27);
    if (v28)
    {
      if (v28 < 0)
        goto LABEL_63;
    }
    else if (v23 < v26)
    {
      goto LABEL_63;
    }
    v29 = &v63;
    v30 = &v63;
    if (v16)
      break;
LABEL_73:
    *v13 = 0;
    v13[1] = 0;
    v13[2] = (uint64_t)v30;
    *v29 = v13;
    if (*v62)
    {
      v62 = (uint64_t **)*v62;
      v13 = *v29;
    }
    sub_20AEC84C8(v63, v13);
    ++v64;
    v39 = v60;
    v11 += 24;
    v10 = v61 + 1;
    if (v11 == v60)
      goto LABEL_14;
  }
  while (1)
  {
    while (1)
    {
      v30 = (uint64_t **)v16;
      v31 = *((unsigned __int8 *)v16 + 55);
      v32 = v16[5];
      v33 = (v31 & 0x80u) == 0 ? v16 + 4 : (uint64_t *)v16[4];
      v34 = (uint64_t *)((v31 & 0x80u) == 0 ? v31 : v32);
      v35 = (size_t)(v34 >= v26 ? v26 : v34);
      v36 = memcmp(v25, v33, v35);
      if (v36)
        break;
      if (v26 >= v34)
        goto LABEL_56;
LABEL_42:
      v16 = *v30;
      v29 = v30;
      if (!*v30)
        goto LABEL_73;
    }
    if (v36 < 0)
      goto LABEL_42;
LABEL_56:
    v37 = memcmp(v33, v25, v35);
    if (!v37)
      break;
    if ((v37 & 0x80000000) == 0)
      goto LABEL_77;
LABEL_60:
    v16 = v30[1];
    if (!v16)
    {
      v29 = v30 + 1;
      goto LABEL_73;
    }
  }
  if (v34 < v26)
    goto LABEL_60;
LABEL_77:
  v39 = v60;
  v40 = v61;
  if ((v24 & 0x80) == 0)
  {
LABEL_71:
    operator delete(v13);
    v11 += 24;
    v10 = v40 + 1;
    if (v11 != v39)
      goto LABEL_15;
    goto LABEL_14;
  }
LABEL_78:
  operator delete(*v14);
  operator delete(v13);
  v11 += 24;
  v10 = v40 + 1;
  if (v11 != v39)
    goto LABEL_15;
LABEL_14:
  if (v10 != 3)
    goto LABEL_15;
  if (__p)
  {
    while (v39 != __p)
    {
      if (*(v39 - 1) < 0)
        operator delete(*((void **)v39 - 3));
      v39 -= 24;
    }
    operator delete(__p);
  }
  v71 = 0uLL;
  v72 = 0;
  sub_20B1C68C0(a1, (uint64_t)&v71);
  v41 = v63;
  if (!v63)
    goto LABEL_125;
  v42 = HIBYTE(v72);
  if (v72 >= 0)
    v43 = &v71;
  else
    v43 = (__int128 *)v71;
  if (v72 >= 0)
    v44 = HIBYTE(v72);
  else
    v44 = *((_QWORD *)&v71 + 1);
  v45 = &v63;
  while (2)
  {
    while (2)
    {
      v46 = *((char *)v41 + 55);
      if (v46 >= 0)
        v47 = v41 + 4;
      else
        v47 = (const void *)v41[4];
      if (v46 >= 0)
        v48 = *((unsigned __int8 *)v41 + 55);
      else
        v48 = v41[5];
      if (v44 >= v48)
        v49 = v48;
      else
        v49 = v44;
      v50 = memcmp(v47, v43, v49);
      if (v50)
      {
        if ((v50 & 0x80000000) == 0)
          break;
        goto LABEL_95;
      }
      if (v48 < v44)
      {
LABEL_95:
        v41 = (uint64_t *)v41[1];
        if (!v41)
          goto LABEL_110;
        continue;
      }
      break;
    }
    v45 = (uint64_t **)v41;
    v41 = (uint64_t *)*v41;
    if (v41)
      continue;
    break;
  }
LABEL_110:
  if (v45 == &v63)
    goto LABEL_125;
  v51 = *((char *)v45 + 55);
  if (v51 >= 0)
    v52 = (uint64_t *)(v45 + 4);
  else
    v52 = v45[4];
  if (v51 >= 0)
    v53 = *((unsigned __int8 *)v45 + 55);
  else
    v53 = (size_t)v45[5];
  if (v53 >= v44)
    v54 = v44;
  else
    v54 = v53;
  v55 = memcmp(v43, v52, v54);
  if (v55)
  {
    if ((v55 & 0x80000000) == 0)
      goto LABEL_122;
LABEL_125:
    std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32) | 4);
    if (v72 < 0)
LABEL_126:
      operator delete((void *)v71);
  }
  else
  {
    if (v44 < v53)
      goto LABEL_125;
LABEL_122:
    *v57 = *((_DWORD *)v45 + 14);
    if (v42 < 0)
      goto LABEL_126;
  }
  sub_20B231C6C((char *)v63);
  return a1;
}

void sub_20B419098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char *a16)
{
  uint64_t v16;

  if (*(char *)(v16 - 81) < 0)
    operator delete(*(void **)(v16 - 104));
  sub_20B231C6C(a16);
  _Unwind_Resume(a1);
}

void sub_20B4190C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_20AEC2E90((void **)va);
  _Unwind_Resume(a1);
}

void sub_20B4190FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, uint64_t a10, ...)
{
  uint64_t v10;
  va_list va;

  va_start(va, a10);
  sub_20B41A8C0((uint64_t *)(v10 - 104));
  sub_20B231C6C(a9);
  sub_20AEC2E90((void **)va);
  _Unwind_Resume(a1);
}

void sub_20B419120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_20B231C6C(a9);
  sub_20AEC2E90((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B41913C(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  if (a2 == 1)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    v2 = 0x100000000;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0x100000000;
    *(_QWORD *)(result + 32) = 0;
    *(_QWORD *)(result + 40) = 0;
    *(_QWORD *)(result + 48) = 0;
    *(_QWORD *)(result + 56) = 0x100000000;
    *(_DWORD *)(result + 64) = 0;
    *(_QWORD *)(result + 72) = 0;
    *(_QWORD *)(result + 80) = 0;
    *(_QWORD *)(result + 88) = 0;
    *(_QWORD *)(result + 96) = 0x100000000;
    *(_DWORD *)(result + 104) = 0;
    *(_QWORD *)(result + 112) = 0;
    *(_QWORD *)(result + 120) = 0;
    *(_QWORD *)(result + 128) = 0;
    *(_QWORD *)(result + 136) = 0x100000000;
    *(_QWORD *)(result + 144) = 0;
    *(_QWORD *)(result + 152) = 0;
    *(_QWORD *)(result + 160) = 0;
    *(_QWORD *)(result + 168) = 0x100000000;
    *(_QWORD *)(result + 176) = 0;
    *(_QWORD *)(result + 184) = 0;
    *(_QWORD *)(result + 192) = 0;
    *(_QWORD *)(result + 200) = 0x100000000;
    *(_QWORD *)(result + 208) = 0;
    *(_QWORD *)(result + 216) = 0;
    *(_QWORD *)(result + 224) = 0;
    *(_QWORD *)(result + 232) = 0x100000000;
    *(_QWORD *)(result + 240) = 0;
    *(_QWORD *)(result + 248) = 0;
    *(_QWORD *)(result + 256) = 0;
    *(_QWORD *)(result + 264) = 0x100000000;
    *(_DWORD *)(result + 272) = 0;
    *(_QWORD *)(result + 280) = 0;
    *(_QWORD *)(result + 288) = 0;
    *(_QWORD *)(result + 296) = 0;
    *(_QWORD *)(result + 304) = 0x100000000;
  }
  else
  {
    if (a2 == 2)
    {
      sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Mesh/include/Kit/Mesh/TriMeshAllocator.h", 151, (uint64_t)&unk_20B5AC6D6, 0, (uint64_t)"Invalid mode", 12, (void (*)(void **))sub_20B532360);
      abort();
    }
    v2 = 0;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_DWORD *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_DWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 256) = 0u;
    *(_DWORD *)(result + 272) = 0;
  }
  *(_DWORD *)(result + 312) = 0;
  *(_QWORD *)(result + 320) = 0;
  *(_QWORD *)(result + 328) = 0;
  *(_QWORD *)(result + 336) = 0;
  *(_QWORD *)(result + 344) = v2;
  *(_DWORD *)(result + 352) = 0;
  *(_BYTE *)(result + 356) = 0;
  *(_BYTE *)(result + 380) = 0;
  return result;
}

_QWORD *sub_20B41924C(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  void *p_p;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  void ***v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  void ***v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t *v31;
  void *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t *v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  void *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  void ***v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  void *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  void ***v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  float *v63;
  float *v64;
  float *v65;
  void *v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  void ***v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  void *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v78;
  void *v79;
  uint64_t v80;
  unsigned __int8 v81;
  void *v82;
  uint64_t v83;
  unsigned __int8 v84;
  int v85;
  void *v86[2];
  char v87;
  void *__p;
  uint64_t v89;
  uint64_t *v90;
  int v91;
  uint64_t v92;
  void ***v93;
  void **v94;
  const char *v95;
  void **v96;
  const char *v97;
  const char *v98;

  v3 = a1;
  sub_20AEC01D0(a1, (uint64_t)"TriMeshData{\n", 13);
  v4 = sub_20AEC01D0(v3, (uint64_t)"vertices={", 10);
  LODWORD(v97) = 0;
  sub_20B41A90C((uint64_t)&v94, (uint64_t **)a2);
  if ((_DWORD)v97 == -1)
    sub_20AECFAB8();
  v82 = v86;
  ((void (*)(void **__return_ptr, void **, void ***))off_24C41B2B0[v97])(&__p, &v82, &v94);
  if ((_DWORD)v97 != -1)
    ((void (*)(void **, void ***))off_24C41B298[v97])(&v82, &v94);
  if (SHIBYTE(v90) >= 0)
    p_p = &__p;
  else
    p_p = __p;
  if (SHIBYTE(v90) >= 0)
    v6 = HIBYTE(v90);
  else
    v6 = v89;
  v7 = sub_20AEC01D0(v4, (uint64_t)p_p, v6);
  sub_20AEC01D0(v7, (uint64_t)"}\n", 2);
  if (SHIBYTE(v90) < 0)
    operator delete(__p);
  v8 = sub_20AEC01D0(v3, (uint64_t)"faces={", 7);
  LODWORD(v97) = 0;
  sub_20B41ABC0((uint64_t)&v94, (uint64_t **)(a2 + 112));
  if ((_DWORD)v97 == -1)
    sub_20AECFAB8();
  v82 = v86;
  ((void (*)(void **__return_ptr, void **, void ***))off_24C41B2B0[v97])(&__p, &v82, &v94);
  if ((_DWORD)v97 != -1)
    ((void (*)(void **, void ***))off_24C41B298[v97])(&v82, &v94);
  if (SHIBYTE(v90) >= 0)
    v9 = &__p;
  else
    v9 = __p;
  if (SHIBYTE(v90) >= 0)
    v10 = HIBYTE(v90);
  else
    v10 = v89;
  v11 = sub_20AEC01D0(v8, (uint64_t)v9, v10);
  sub_20AEC01D0(v11, (uint64_t)"}\n", 2);
  if (SHIBYTE(v90) < 0)
    operator delete(__p);
  v12 = sub_20AEC01D0(v3, (uint64_t)"normals={", 9);
  LODWORD(v97) = 0;
  sub_20B41A90C((uint64_t)&v94, (uint64_t **)(a2 + 72));
  if ((_DWORD)v97 == -1)
    sub_20AECFAB8();
  v82 = v86;
  ((void (*)(void **__return_ptr, void **, void ***))off_24C41B2B0[v97])(&__p, &v82, &v94);
  if ((_DWORD)v97 != -1)
    ((void (*)(void **, void ***))off_24C41B298[v97])(&v82, &v94);
  if (SHIBYTE(v90) >= 0)
    v13 = &__p;
  else
    v13 = __p;
  if (SHIBYTE(v90) >= 0)
    v14 = HIBYTE(v90);
  else
    v14 = v89;
  v15 = sub_20AEC01D0(v12, (uint64_t)v13, v14);
  sub_20AEC01D0(v15, (uint64_t)"}\n", 2);
  if (SHIBYTE(v90) < 0)
    operator delete(__p);
  v16 = sub_20AEC01D0(v3, (uint64_t)"normals_type=", 13);
  sub_20B41A51C((uint64_t)&v94, (_DWORD *)(a2 + 104));
  if (SHIBYTE(v96) >= 0)
    v17 = &v94;
  else
    v17 = (void ***)v94;
  if (SHIBYTE(v96) >= 0)
    v18 = HIBYTE(v96);
  else
    v18 = (uint64_t)v95;
  v19 = sub_20AEC01D0(v16, (uint64_t)v17, v18);
  sub_20AEC01D0(v19, (uint64_t)"\n", 1);
  if (SHIBYTE(v96) < 0)
    operator delete(v94);
  v20 = sub_20AEC01D0(v3, (uint64_t)"colors={", 8);
  LODWORD(v97) = 0;
  sub_20B41A90C((uint64_t)&v94, (uint64_t **)(a2 + 32));
  if ((_DWORD)v97 == -1)
    sub_20AECFAB8();
  v82 = v86;
  ((void (*)(void **__return_ptr, void **, void ***))off_24C41B2B0[v97])(&__p, &v82, &v94);
  if ((_DWORD)v97 != -1)
    ((void (*)(void **, void ***))off_24C41B298[v97])(&v82, &v94);
  if (SHIBYTE(v90) >= 0)
    v21 = &__p;
  else
    v21 = __p;
  if (SHIBYTE(v90) >= 0)
    v22 = HIBYTE(v90);
  else
    v22 = v89;
  v23 = sub_20AEC01D0(v20, (uint64_t)v21, v22);
  sub_20AEC01D0(v23, (uint64_t)"}\n", 2);
  if (SHIBYTE(v90) < 0)
    operator delete(__p);
  v24 = sub_20AEC01D0(v3, (uint64_t)"colors_type=", 12);
  sub_20B41A51C((uint64_t)&v94, (_DWORD *)(a2 + 64));
  if (SHIBYTE(v96) >= 0)
    v25 = &v94;
  else
    v25 = (void ***)v94;
  if (SHIBYTE(v96) >= 0)
    v26 = HIBYTE(v96);
  else
    v26 = (uint64_t)v95;
  v27 = sub_20AEC01D0(v24, (uint64_t)v25, v26);
  sub_20AEC01D0(v27, (uint64_t)"\n", 1);
  if (SHIBYTE(v96) < 0)
    operator delete(v94);
  v28 = sub_20AEC01D0(v3, (uint64_t)"edges={", 7);
  v85 = 0;
  v78 = v3;
  if ((uint64_t)(*(_QWORD *)(a2 + 152) - *(_QWORD *)(a2 + 144)) <= 7)
  {
    sub_20AEF9DBC(&v82, "{}");
    goto LABEL_76;
  }
  sub_20AED5B5C(&v82, "{");
  v29 = *(uint64_t **)(a2 + 144);
  v92 = *v29;
  __p = (void *)0x100000002;
  LODWORD(v89) = 2;
  v90 = &v92;
  v91 = 0;
  sub_20B44AD04((unsigned int *)&__p, v86);
  v94 = &v82;
  v95 = (const char *)v86;
  v96 = &v82;
  v97 = (const char *)v86;
  v98 = (const char *)v86;
  if (v85 == -1)
    sub_20AECFAB8();
  v93 = &v94;
  ((void (*)(void ****, void **))off_24C41B280[v85])(&v93, &v82);
  if (v87 < 0)
  {
    operator delete(v86[0]);
    v30 = *(uint64_t **)(a2 + 152);
    v31 = v29 + 1;
    if (v29 + 1 != v30)
    {
LABEL_70:
      while (1)
      {
        v94 = &v82;
        v95 = ",";
        v96 = &v82;
        v97 = ",";
        v98 = ",";
        if (v85 == -1)
          break;
        __p = &v94;
        ((void (*)(void **, void **))off_24C41B2E0[v85])(&__p, &v82);
        v92 = *v31;
        __p = (void *)0x100000002;
        LODWORD(v89) = 2;
        v90 = &v92;
        v91 = 0;
        sub_20B44AD04((unsigned int *)&__p, v86);
        v94 = &v82;
        v95 = (const char *)v86;
        v96 = &v82;
        v97 = (const char *)v86;
        v98 = (const char *)v86;
        if (v85 == -1)
          sub_20AECFAB8();
        v93 = &v94;
        ((void (*)(void ****, void **))off_24C41B280[v85])(&v93, &v82);
        if (v87 < 0)
          operator delete(v86[0]);
        if (++v31 == v30)
          goto LABEL_74;
      }
LABEL_204:
      sub_20AECFAB8();
    }
  }
  else
  {
    v30 = *(uint64_t **)(a2 + 152);
    v31 = v29 + 1;
    if (v29 + 1 != v30)
      goto LABEL_70;
  }
LABEL_74:
  v94 = &v82;
  v95 = "}";
  v96 = &v82;
  v97 = "}";
  v98 = "}";
  if (v85 == -1)
    goto LABEL_204;
  __p = &v94;
  ((void (*)(void **, void **))off_24C41B2E0[v85])(&__p, &v82);
  v3 = v78;
LABEL_76:
  if (v85 == -1)
    sub_20AECFAB8();
  v94 = &__p;
  ((void (*)(void **__return_ptr, void ***, void **))off_24C41B2B0[v85])(&v79, &v94, &v82);
  if (v85 != -1)
    ((void (*)(void ***, void **))off_24C41B298[v85])(&v94, &v82);
  if ((v81 & 0x80u) == 0)
    v32 = &v79;
  else
    v32 = v79;
  if ((v81 & 0x80u) == 0)
    v33 = v81;
  else
    v33 = v80;
  v34 = sub_20AEC01D0(v28, (uint64_t)v32, v33);
  sub_20AEC01D0(v34, (uint64_t)"}\n", 2);
  if ((char)v81 < 0)
    operator delete(v79);
  v35 = sub_20AEC01D0(v3, (uint64_t)"tex_coords={", 12);
  v85 = 0;
  if ((uint64_t)(*(_QWORD *)(a2 + 184) - *(_QWORD *)(a2 + 176)) <= 7)
  {
    sub_20AEF9DBC(&v82, "{}");
    goto LABEL_102;
  }
  sub_20AED5B5C(&v82, "{");
  v36 = *(uint64_t **)(a2 + 176);
  v92 = *v36;
  __p = (void *)0x100000002;
  LODWORD(v89) = 2;
  v90 = &v92;
  v91 = 0;
  sub_20B44AFEC((unsigned int *)&__p, v86);
  v94 = &v82;
  v95 = (const char *)v86;
  v96 = &v82;
  v97 = (const char *)v86;
  v98 = (const char *)v86;
  if (v85 == -1)
    sub_20AECFAB8();
  v93 = &v94;
  ((void (*)(void ****, void **))off_24C41B280[v85])(&v93, &v82);
  if (v87 < 0)
  {
    operator delete(v86[0]);
    v37 = *(uint64_t **)(a2 + 184);
    v38 = v36 + 1;
    if (v36 + 1 != v37)
    {
LABEL_96:
      while (1)
      {
        v94 = &v82;
        v95 = ",";
        v96 = &v82;
        v97 = ",";
        v98 = ",";
        if (v85 == -1)
          break;
        __p = &v94;
        ((void (*)(void **, void **))off_24C41B2E0[v85])(&__p, &v82);
        v92 = *v38;
        __p = (void *)0x100000002;
        LODWORD(v89) = 2;
        v90 = &v92;
        v91 = 0;
        sub_20B44AFEC((unsigned int *)&__p, v86);
        v94 = &v82;
        v95 = (const char *)v86;
        v96 = &v82;
        v97 = (const char *)v86;
        v98 = (const char *)v86;
        if (v85 == -1)
          sub_20AECFAB8();
        v93 = &v94;
        ((void (*)(void ****, void **))off_24C41B280[v85])(&v93, &v82);
        if (v87 < 0)
          operator delete(v86[0]);
        if (++v38 == v37)
          goto LABEL_100;
      }
LABEL_205:
      sub_20AECFAB8();
    }
  }
  else
  {
    v37 = *(uint64_t **)(a2 + 184);
    v38 = v36 + 1;
    if (v36 + 1 != v37)
      goto LABEL_96;
  }
LABEL_100:
  v94 = &v82;
  v95 = "}";
  v96 = &v82;
  v97 = "}";
  v98 = "}";
  if (v85 == -1)
    goto LABEL_205;
  __p = &v94;
  ((void (*)(void **, void **))off_24C41B2E0[v85])(&__p, &v82);
  v3 = v78;
LABEL_102:
  if (v85 == -1)
    sub_20AECFAB8();
  v94 = &__p;
  ((void (*)(void **__return_ptr, void ***, void **))off_24C41B2B0[v85])(&v79, &v94, &v82);
  if (v85 != -1)
    ((void (*)(void ***, void **))off_24C41B298[v85])(&v94, &v82);
  if ((v81 & 0x80u) == 0)
    v39 = &v79;
  else
    v39 = v79;
  if ((v81 & 0x80u) == 0)
    v40 = v81;
  else
    v40 = v80;
  v41 = sub_20AEC01D0(v35, (uint64_t)v39, v40);
  sub_20AEC01D0(v41, (uint64_t)"}\n", 2);
  if ((char)v81 < 0)
    operator delete(v79);
  v42 = sub_20AEC01D0(v3, (uint64_t)"tex_faces={", 11);
  LODWORD(v97) = 0;
  sub_20B41ABC0((uint64_t)&v94, (uint64_t **)(a2 + 208));
  if ((_DWORD)v97 == -1)
    sub_20AECFAB8();
  v82 = v86;
  ((void (*)(void **__return_ptr, void **, void ***))off_24C41B2B0[v97])(&__p, &v82, &v94);
  if ((_DWORD)v97 != -1)
    ((void (*)(void **, void ***))off_24C41B298[v97])(&v82, &v94);
  if (SHIBYTE(v90) >= 0)
    v43 = &__p;
  else
    v43 = __p;
  if (SHIBYTE(v90) >= 0)
    v44 = HIBYTE(v90);
  else
    v44 = v89;
  v45 = sub_20AEC01D0(v42, (uint64_t)v43, v44);
  sub_20AEC01D0(v45, (uint64_t)"}\n", 2);
  if (SHIBYTE(v90) < 0)
    operator delete(__p);
  v46 = sub_20AEC01D0(v3, (uint64_t)"semantics={", 11);
  LODWORD(v97) = 0;
  sub_20B41AE74((uint64_t)&v94, (unsigned __int8 **)(a2 + 240));
  if ((_DWORD)v97 == -1)
    sub_20AECFAB8();
  v82 = v86;
  ((void (*)(void **__return_ptr, void **, void ***))off_24C41B2B0[v97])(&__p, &v82, &v94);
  if ((_DWORD)v97 != -1)
    ((void (*)(void **, void ***))off_24C41B298[v97])(&v82, &v94);
  if (SHIBYTE(v90) >= 0)
    v47 = &__p;
  else
    v47 = __p;
  if (SHIBYTE(v90) >= 0)
    v48 = HIBYTE(v90);
  else
    v48 = v89;
  v49 = sub_20AEC01D0(v46, (uint64_t)v47, v48);
  sub_20AEC01D0(v49, (uint64_t)"}\n", 2);
  if (SHIBYTE(v90) < 0)
    operator delete(__p);
  v50 = sub_20AEC01D0(v3, (uint64_t)"semantics_type=", 15);
  sub_20B41A51C((uint64_t)&v94, (_DWORD *)(a2 + 272));
  if (SHIBYTE(v96) >= 0)
    v51 = &v94;
  else
    v51 = (void ***)v94;
  if (SHIBYTE(v96) >= 0)
    v52 = HIBYTE(v96);
  else
    v52 = (uint64_t)v95;
  v53 = sub_20AEC01D0(v50, (uint64_t)v51, v52);
  sub_20AEC01D0(v53, (uint64_t)"\n", 1);
  if (SHIBYTE(v96) < 0)
    operator delete(v94);
  v54 = sub_20AEC01D0(v3, (uint64_t)"materials={", 11);
  LODWORD(v97) = 0;
  sub_20B41AE74((uint64_t)&v94, (unsigned __int8 **)(a2 + 280));
  if ((_DWORD)v97 == -1)
    sub_20AECFAB8();
  v82 = v86;
  ((void (*)(void **__return_ptr, void **, void ***))off_24C41B2B0[v97])(&__p, &v82, &v94);
  if ((_DWORD)v97 != -1)
    ((void (*)(void **, void ***))off_24C41B298[v97])(&v82, &v94);
  if (SHIBYTE(v90) >= 0)
    v55 = &__p;
  else
    v55 = __p;
  if (SHIBYTE(v90) >= 0)
    v56 = HIBYTE(v90);
  else
    v56 = v89;
  v57 = sub_20AEC01D0(v54, (uint64_t)v55, v56);
  sub_20AEC01D0(v57, (uint64_t)"}\n", 2);
  if (SHIBYTE(v90) < 0)
    operator delete(__p);
  v58 = sub_20AEC01D0(v3, (uint64_t)"materials_type=", 15);
  sub_20B41A51C((uint64_t)&v94, (_DWORD *)(a2 + 312));
  if (SHIBYTE(v96) >= 0)
    v59 = &v94;
  else
    v59 = (void ***)v94;
  if (SHIBYTE(v96) >= 0)
    v60 = HIBYTE(v96);
  else
    v60 = (uint64_t)v95;
  v61 = sub_20AEC01D0(v58, (uint64_t)v59, v60);
  sub_20AEC01D0(v61, (uint64_t)"\n", 1);
  if (SHIBYTE(v96) < 0)
    operator delete(v94);
  v62 = sub_20AEC01D0(v3, (uint64_t)"confidences={", 13);
  v91 = 0;
  if ((uint64_t)(*(_QWORD *)(a2 + 328) - *(_QWORD *)(a2 + 320)) <= 3)
  {
    sub_20AEF9DBC(&__p, "{}");
    goto LABEL_169;
  }
  sub_20AED5B5C(&__p, "{");
  v63 = *(float **)(a2 + 320);
  sub_20AF57AB0((uint64_t)&v94, (uint64_t)&__p, v63);
  v64 = *(float **)(a2 + 328);
  v65 = v63 + 1;
  if (v65 != v64)
  {
    while (1)
    {
      v94 = &__p;
      v95 = ",";
      v96 = &__p;
      v97 = ",";
      v98 = ",";
      if (v91 == -1)
        break;
      v86[0] = &v94;
      ((void (*)(void **, void **))off_24C41B2E0[v91])(v86, &__p);
      sub_20AF57AB0((uint64_t)&v94, (uint64_t)&__p, v65++);
      if (v65 == v64)
        goto LABEL_167;
    }
LABEL_206:
    sub_20AECFAB8();
  }
LABEL_167:
  v94 = &__p;
  v95 = "}";
  v96 = &__p;
  v97 = "}";
  v98 = "}";
  if (v91 == -1)
    goto LABEL_206;
  v86[0] = &v94;
  ((void (*)(void **, void **))off_24C41B2E0[v91])(v86, &__p);
LABEL_169:
  if (v91 == -1)
    sub_20AECFAB8();
  v94 = v86;
  ((void (*)(void **__return_ptr, void ***, void **))off_24C41B2B0[v91])(&v82, &v94, &__p);
  if (v91 != -1)
    ((void (*)(void ***, void **))off_24C41B298[v91])(&v94, &__p);
  if ((v84 & 0x80u) == 0)
    v66 = &v82;
  else
    v66 = v82;
  if ((v84 & 0x80u) == 0)
    v67 = v84;
  else
    v67 = v83;
  v68 = sub_20AEC01D0(v62, (uint64_t)v66, v67);
  sub_20AEC01D0(v68, (uint64_t)"}\n", 2);
  if ((char)v84 < 0)
    operator delete(v82);
  v69 = sub_20AEC01D0(v3, (uint64_t)"confidences_type=", 17);
  sub_20B41A51C((uint64_t)&v94, (_DWORD *)(a2 + 352));
  if (SHIBYTE(v96) >= 0)
    v70 = &v94;
  else
    v70 = (void ***)v94;
  if (SHIBYTE(v96) >= 0)
    v71 = HIBYTE(v96);
  else
    v71 = (uint64_t)v95;
  v72 = sub_20AEC01D0(v69, (uint64_t)v70, v71);
  sub_20AEC01D0(v72, (uint64_t)"\n", 1);
  if (SHIBYTE(v96) < 0)
    operator delete(v94);
  v73 = sub_20AEC01D0(v3, (uint64_t)"bbox={", 6);
  v91 = 0;
  if (*(_BYTE *)(a2 + 380))
  {
    sub_20AED5B5C(&__p, "{");
    LOBYTE(v94) = 1;
    v95 = (const char *)&__p;
    v96 = &v79;
    sub_20B41B0C0((uint64_t)&v94, (uint64_t *)(a2 + 356));
    sub_20B41B0C0((uint64_t)&v94, (uint64_t *)(a2 + 368));
    v94 = &__p;
    v95 = "}";
    v96 = &__p;
    v97 = "}";
    v98 = "}";
    if (v91 == -1)
      sub_20AECFAB8();
    v86[0] = &v94;
    ((void (*)(void **, void **))off_24C41B2E0[v91])(v86, &__p);
  }
  else
  {
    sub_20AED0170(&__p, "nullopt");
  }
  if (v91 == -1)
    sub_20AECFAB8();
  v94 = v86;
  ((void (*)(void **__return_ptr, void ***, void **))off_24C41B2B0[v91])(&v82, &v94, &__p);
  if (v91 != -1)
    ((void (*)(void ***, void **))off_24C41B298[v91])(&v94, &__p);
  if ((v84 & 0x80u) == 0)
    v74 = &v82;
  else
    v74 = v82;
  if ((v84 & 0x80u) == 0)
    v75 = v84;
  else
    v75 = v83;
  v76 = sub_20AEC01D0(v73, (uint64_t)v74, v75);
  sub_20AEC01D0(v76, (uint64_t)"}\n", 2);
  if ((char)v84 < 0)
    operator delete(v82);
  LOBYTE(v94) = 125;
  sub_20AEC01D0(v3, (uint64_t)&v94, 1);
  return v3;
}

void sub_20B41A2B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 144);
  _Unwind_Resume(a1);
}

void sub_20B41A2CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 144);
  _Unwind_Resume(a1);
}

void sub_20B41A2E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AECFA60(v1 - 144);
  _Unwind_Resume(a1);
}

void sub_20B41A2F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a31 < 0)
  {
    operator delete(__p);
    sub_20AECFA60((uint64_t)&a19);
    _Unwind_Resume(a1);
  }
  sub_20AECFA60((uint64_t)&a19);
  _Unwind_Resume(a1);
}

uint64_t sub_20B41A51C(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _BYTE v19[24];
  int v20;
  void *__dst[2];
  unint64_t v22;
  _QWORD v23[5];
  _QWORD *v24;

  v20 = 0;
  v3 = operator new();
  *(_QWORD *)(v3 + 272) = 0;
  *(_OWORD *)(v3 + 240) = 0u;
  *(_OWORD *)(v3 + 256) = 0u;
  *(_OWORD *)(v3 + 208) = 0u;
  *(_OWORD *)(v3 + 224) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_OWORD *)(v3 + 192) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)v3 = 0u;
  sub_20AEC0BD8(v3);
  v23[0] = v3;
  v4 = "unknown";
  v5 = 7;
  switch(*a2)
  {
    case 0:
      goto LABEL_4;
    case 1:
      v4 = "per-vertex";
      v5 = 10;
      goto LABEL_4;
    case 2:
      v4 = "per-face";
      v5 = 8;
LABEL_4:
      sub_20AEC01D0((_QWORD *)(v3 + 16), (uint64_t)v4, v5);
      break;
    case 3:
      sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Mesh/src/TriMesh.cpp", 46, (uint64_t)&unk_20B5AC6D6, 0, (uint64_t)"Unsupported type", 16, (void (*)(void **))sub_20B532360);
      abort();
    default:
      break;
  }
  v6 = *(_DWORD *)(v3 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v3 + 112);
    v10 = *(_QWORD *)(v3 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v3 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v3 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_30;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v22) = 0;
      v8 = __dst;
      goto LABEL_18;
    }
    v11 = *(const void **)(v3 + 40);
    v7 = *(_QWORD *)(v3 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_30:
      sub_20AEC0138();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v22 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_17;
  }
  HIBYTE(v22) = v7;
  v8 = __dst;
  if (v7)
LABEL_17:
    memmove(v8, v11, v7);
LABEL_18:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v23[0];
  if (v23[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v23[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v14 + 128);
    MEMORY[0x20BD3583C](v14, 0x10B2C40EED050F3);
  }
  v23[0] = v19;
  v23[1] = __dst;
  v23[2] = v19;
  v23[3] = __dst;
  v23[4] = __dst;
  if (v20 == -1)
    sub_20AECFAB8();
  v24 = v23;
  ((void (*)(_QWORD **, _BYTE *, uint64_t))off_24C41B280[v20])(&v24, v19, v5);
  if (SHIBYTE(v22) < 0)
    operator delete(__dst[0]);
  if (v20 == -1)
    sub_20AECFAB8();
  v23[0] = __dst;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24C41B2B0[v20])(v23, v19);
  if (v20 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24C41B298[v20])(v23, v19);
  return result;
}

void sub_20B41A83C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  MEMORY[0x20BD3583C](v2, 0x10B2C40EED050F3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B41A868(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B41A880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_20AECFA60((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_20AECFA60((uint64_t)&a10);
  _Unwind_Resume(a1);
}

uint64_t *sub_20B41A8C0(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((_BYTE *)a1 + 16) && *(char *)(v2 + 55) < 0)
      operator delete(*(void **)(v2 + 32));
    operator delete((void *)v2);
  }
  return a1;
}

uint64_t sub_20B41A90C(uint64_t a1, uint64_t **a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *__p[2];
  char v17;
  uint64_t v18;
  int v19;
  uint64_t *v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  const char *v27;
  const char *v28;
  uint64_t *v29;

  if ((char *)a2[1] - (char *)*a2 <= 11)
  {
    v24 = a1;
    v25 = "{}";
    v26 = a1;
    v27 = "{}";
    v28 = "{}";
    v3 = *(unsigned int *)(a1 + 24);
    if ((_DWORD)v3 != -1)
    {
      v18 = (uint64_t)&v24;
      return ((uint64_t (*)(uint64_t *, uint64_t))off_24C41B2C8[v3])(&v18, a1);
    }
LABEL_18:
    sub_20AECFAB8();
  }
  v24 = a1;
  v25 = "{";
  v26 = a1;
  v27 = "{";
  v28 = "{";
  v5 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v5 == -1)
    goto LABEL_18;
  v18 = (uint64_t)&v24;
  ((void (*)(uint64_t *, uint64_t))off_24C41B2E0[v5])(&v18, a1);
  v7 = *a2;
  v8 = **a2;
  v23 = *((_DWORD *)*a2 + 2);
  v22 = v8;
  v18 = 0x100000003;
  v19 = 3;
  v20 = &v22;
  v21 = 0;
  sub_20B44AFEC((unsigned int *)&v18, __p);
  v24 = a1;
  v25 = (const char *)__p;
  v26 = a1;
  v27 = (const char *)__p;
  v28 = (const char *)__p;
  v9 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v9 == -1)
    sub_20AECFAB8();
  v29 = &v24;
  ((void (*)(uint64_t **, uint64_t))off_24C41B280[v9])(&v29, a1);
  if (v17 < 0)
  {
    operator delete(__p[0]);
    v10 = a2[1];
    v11 = (uint64_t *)((char *)v7 + 12);
    if (v11 != v10)
    {
LABEL_12:
      do
      {
        v24 = a1;
        v25 = ",";
        v26 = a1;
        v27 = ",";
        v28 = ",";
        v12 = *(unsigned int *)(a1 + 24);
        if ((_DWORD)v12 == -1)
          goto LABEL_18;
        v18 = (uint64_t)&v24;
        ((void (*)(uint64_t *, uint64_t))off_24C41B2E0[v12])(&v18, a1);
        v13 = *v11;
        v23 = *((_DWORD *)v11 + 2);
        v22 = v13;
        v18 = 0x100000003;
        v19 = 3;
        v20 = &v22;
        v21 = 0;
        sub_20B44AFEC((unsigned int *)&v18, __p);
        v24 = a1;
        v25 = (const char *)__p;
        v26 = a1;
        v27 = (const char *)__p;
        v28 = (const char *)__p;
        v14 = *(unsigned int *)(a1 + 24);
        if ((_DWORD)v14 == -1)
          sub_20AECFAB8();
        v29 = &v24;
        ((void (*)(uint64_t **, uint64_t))off_24C41B280[v14])(&v29, a1);
        if (v17 < 0)
          operator delete(__p[0]);
        v11 = (uint64_t *)((char *)v11 + 12);
      }
      while (v11 != v10);
    }
  }
  else
  {
    v10 = a2[1];
    v11 = (uint64_t *)((char *)v7 + 12);
    if (v11 != v10)
      goto LABEL_12;
  }
  v24 = a1;
  v25 = "}";
  v26 = a1;
  v27 = "}";
  v28 = "}";
  v15 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v15 == -1)
    goto LABEL_18;
  v18 = (uint64_t)&v24;
  return ((uint64_t (*)(uint64_t *, uint64_t))off_24C41B2E0[v15])(&v18, a1);
}

void sub_20B41AB9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B41ABC0(uint64_t a1, uint64_t **a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *__p[2];
  char v17;
  uint64_t v18;
  int v19;
  uint64_t *v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  const char *v27;
  const char *v28;
  uint64_t *v29;

  if ((char *)a2[1] - (char *)*a2 <= 11)
  {
    v24 = a1;
    v25 = "{}";
    v26 = a1;
    v27 = "{}";
    v28 = "{}";
    v3 = *(unsigned int *)(a1 + 24);
    if ((_DWORD)v3 != -1)
    {
      v18 = (uint64_t)&v24;
      return ((uint64_t (*)(uint64_t *, uint64_t))off_24C41B2C8[v3])(&v18, a1);
    }
LABEL_18:
    sub_20AECFAB8();
  }
  v24 = a1;
  v25 = "{";
  v26 = a1;
  v27 = "{";
  v28 = "{";
  v5 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v5 == -1)
    goto LABEL_18;
  v18 = (uint64_t)&v24;
  ((void (*)(uint64_t *, uint64_t))off_24C41B2E0[v5])(&v18, a1);
  v7 = *a2;
  v8 = **a2;
  v23 = *((_DWORD *)*a2 + 2);
  v22 = v8;
  v18 = 0x100000003;
  v19 = 3;
  v20 = &v22;
  v21 = 0;
  sub_20B44AD04((unsigned int *)&v18, __p);
  v24 = a1;
  v25 = (const char *)__p;
  v26 = a1;
  v27 = (const char *)__p;
  v28 = (const char *)__p;
  v9 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v9 == -1)
    sub_20AECFAB8();
  v29 = &v24;
  ((void (*)(uint64_t **, uint64_t))off_24C41B280[v9])(&v29, a1);
  if (v17 < 0)
  {
    operator delete(__p[0]);
    v10 = a2[1];
    v11 = (uint64_t *)((char *)v7 + 12);
    if (v11 != v10)
    {
LABEL_12:
      do
      {
        v24 = a1;
        v25 = ",";
        v26 = a1;
        v27 = ",";
        v28 = ",";
        v12 = *(unsigned int *)(a1 + 24);
        if ((_DWORD)v12 == -1)
          goto LABEL_18;
        v18 = (uint64_t)&v24;
        ((void (*)(uint64_t *, uint64_t))off_24C41B2E0[v12])(&v18, a1);
        v13 = *v11;
        v23 = *((_DWORD *)v11 + 2);
        v22 = v13;
        v18 = 0x100000003;
        v19 = 3;
        v20 = &v22;
        v21 = 0;
        sub_20B44AD04((unsigned int *)&v18, __p);
        v24 = a1;
        v25 = (const char *)__p;
        v26 = a1;
        v27 = (const char *)__p;
        v28 = (const char *)__p;
        v14 = *(unsigned int *)(a1 + 24);
        if ((_DWORD)v14 == -1)
          sub_20AECFAB8();
        v29 = &v24;
        ((void (*)(uint64_t **, uint64_t))off_24C41B280[v14])(&v29, a1);
        if (v17 < 0)
          operator delete(__p[0]);
        v11 = (uint64_t *)((char *)v11 + 12);
      }
      while (v11 != v10);
    }
  }
  else
  {
    v10 = a2[1];
    v11 = (uint64_t *)((char *)v7 + 12);
    if (v11 != v10)
      goto LABEL_12;
  }
  v24 = a1;
  v25 = "}";
  v26 = a1;
  v27 = "}";
  v28 = "}";
  v15 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v15 == -1)
    goto LABEL_18;
  v18 = (uint64_t)&v24;
  return ((uint64_t (*)(uint64_t *, uint64_t))off_24C41B2E0[v15])(&v18, a1);
}

void sub_20B41AE50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B41AE74(uint64_t a1, unsigned __int8 **a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  std::string v14;
  uint64_t v15;
  std::string *v16;
  uint64_t v17;
  std::string *v18;
  std::string *v19;
  uint64_t *v20;

  if (a2[1] - *a2 <= 0)
  {
    v15 = a1;
    v16 = (std::string *)"{}";
    v17 = a1;
    v18 = (std::string *)"{}";
    v19 = (std::string *)"{}";
    v9 = *(unsigned int *)(a1 + 24);
    if ((_DWORD)v9 != -1)
    {
      v14.__r_.__value_.__r.__words[0] = (std::string::size_type)&v15;
      return ((uint64_t (*)(std::string *, uint64_t))off_24C41B2C8[v9])(&v14, a1);
    }
    goto LABEL_19;
  }
  v15 = a1;
  v16 = (std::string *)"{";
  v17 = a1;
  v18 = (std::string *)"{";
  v19 = (std::string *)"{";
  v3 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_19;
  v14.__r_.__value_.__r.__words[0] = (std::string::size_type)&v15;
  ((void (*)(std::string *, uint64_t))off_24C41B2E0[v3])(&v14, a1);
  v5 = (uint64_t)*a2;
  std::to_string(&v14, **a2);
  v15 = a1;
  v16 = &v14;
  v17 = a1;
  v18 = &v14;
  v19 = &v14;
  v6 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v6 == -1)
    sub_20AECFAB8();
  v20 = &v15;
  ((void (*)(uint64_t **, uint64_t))off_24C41B280[v6])(&v20, a1);
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v14.__r_.__value_.__l.__data_);
    v7 = a2[1];
    v8 = (unsigned __int8 *)(v5 + 1);
    if (v8 == v7)
      goto LABEL_16;
LABEL_12:
    while (1)
    {
      v15 = a1;
      v16 = (std::string *)",";
      v17 = a1;
      v18 = (std::string *)",";
      v19 = (std::string *)",";
      v11 = *(unsigned int *)(a1 + 24);
      if ((_DWORD)v11 == -1)
        break;
      v14.__r_.__value_.__r.__words[0] = (std::string::size_type)&v15;
      ((void (*)(std::string *, uint64_t))off_24C41B2E0[v11])(&v14, a1);
      std::to_string(&v14, *v8);
      v15 = a1;
      v16 = &v14;
      v17 = a1;
      v18 = &v14;
      v19 = &v14;
      v12 = *(unsigned int *)(a1 + 24);
      if ((_DWORD)v12 == -1)
        sub_20AECFAB8();
      v20 = &v15;
      ((void (*)(uint64_t **, uint64_t))off_24C41B280[v12])(&v20, a1);
      if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v14.__r_.__value_.__l.__data_);
      if (++v8 == v7)
        goto LABEL_16;
    }
LABEL_19:
    sub_20AECFAB8();
  }
  v7 = a2[1];
  v8 = (unsigned __int8 *)(v5 + 1);
  if (v8 != v7)
    goto LABEL_12;
LABEL_16:
  v15 = a1;
  v16 = (std::string *)"}";
  v17 = a1;
  v18 = (std::string *)"}";
  v19 = (std::string *)"}";
  v13 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v13 == -1)
    goto LABEL_19;
  v14.__r_.__value_.__r.__words[0] = (std::string::size_type)&v15;
  return ((uint64_t (*)(std::string *, uint64_t))off_24C41B2E0[v13])(&v14, a1);
}

void sub_20B41B09C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B41B0C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *__p[2];
  char v8;
  uint64_t v9;
  int v10;
  uint64_t *v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  void **v18;
  void **v19;
  uint64_t *v20;

  if (!*(_BYTE *)a1)
  {
    v15 = *(_QWORD *)(a1 + 8);
    v16 = (void **)",";
    v17 = v15;
    v18 = (void **)",";
    v19 = (void **)",";
    v4 = *(unsigned int *)(v15 + 24);
    if ((_DWORD)v4 == -1)
      sub_20AECFAB8();
    v9 = (uint64_t)&v15;
    ((void (*)(uint64_t *))off_24C41B2E0[v4])(&v9);
  }
  *(_BYTE *)a1 = 0;
  v5 = *(_QWORD *)(a1 + 8);
  v13 = *a2;
  v14 = *((_DWORD *)a2 + 2);
  v9 = 0x100000003;
  v10 = 3;
  v11 = &v13;
  v12 = 0;
  sub_20B44AFEC((unsigned int *)&v9, __p);
  v15 = v5;
  v16 = __p;
  v17 = v5;
  v18 = __p;
  v19 = __p;
  v6 = *(unsigned int *)(v5 + 24);
  if ((_DWORD)v6 == -1)
    sub_20AECFAB8();
  v20 = &v15;
  ((void (*)(uint64_t **, uint64_t))off_24C41B280[v6])(&v20, v5);
  if (v8 < 0)
    operator delete(__p[0]);
}

void sub_20B41B1DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

const char *sub_20B41B1FC()
{
  return "Mesh IO";
}

double sub_20B41B208@<D0>(int a1@<W1>, uint64_t a2@<X8>)
{
  double result;
  char *v4;
  char *v5;

  switch(a1)
  {
    case 0:
      *(_BYTE *)(a2 + 23) = 8;
      strcpy((char *)a2, "no error");
      break;
    case 1:
      *(_BYTE *)(a2 + 23) = 21;
      result = *(double *)"failed to open stream";
      strcpy((char *)a2, "failed to open stream");
      break;
    case 2:
      *(_BYTE *)(a2 + 23) = 14;
      strcpy((char *)a2, "index overflow");
      break;
    case 3:
      *(_BYTE *)(a2 + 23) = 18;
      result = *(double *)"unsupported format";
      strcpy((char *)a2, "unsupported format");
      break;
    case 4:
      v4 = (char *)operator new(0x20uLL);
      *(_QWORD *)a2 = v4;
      *(_OWORD *)(a2 + 8) = xmmword_20B5B37B0;
      strcpy(v4, "failed to read from stream");
      result = *(double *)"read from stream";
      break;
    case 5:
      v5 = (char *)operator new(0x20uLL);
      *(_QWORD *)a2 = v5;
      *(_OWORD *)(a2 + 8) = xmmword_20B5E35D0;
      strcpy(v5, "failed to write to stream");
      result = *(double *)" write to stream";
      break;
    default:
      *(_BYTE *)(a2 + 23) = 18;
      result = *(double *)"unknown error code";
      strcpy((char *)a2, "unknown error code");
      break;
  }
  return result;
}

uint64_t sub_20B41B3A8(unsigned __int8 *a1)
{
  unsigned __int8 *v1;
  int v2;
  unsigned __int8 *v3;
  std::string::size_type v4;
  std::string::value_type v5;
  std::string::size_type size;
  std::string *v7;
  uint64_t v8;
  std::string v10;

  v1 = a1;
  v2 = (char)a1[23];
  v3 = *(unsigned __int8 **)a1;
  if (v2 >= 0)
    v4 = a1[23];
  else
    v4 = *((_QWORD *)a1 + 1);
  memset(&v10, 0, sizeof(v10));
  std::string::reserve(&v10, v4);
  if (v2 < 0)
    v1 = v3;
  for (; v4; --v4)
  {
    v5 = __tolower(*v1);
    std::string::push_back(&v10, v5);
    ++v1;
  }
  size = HIBYTE(v10.__r_.__value_.__r.__words[2]);
  if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v10.__r_.__value_.__l.__size_;
  if (size != 4)
    goto LABEL_14;
  v7 = (std::string *)v10.__r_.__value_.__r.__words[0];
  if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v7 = &v10;
  if (LODWORD(v7->__r_.__value_.__l.__data_) == 1784835886)
  {
    v8 = 0x100000000;
    if ((SHIBYTE(v10.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return v8;
  }
  else
  {
LABEL_14:
    v8 = 0;
    if ((SHIBYTE(v10.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return v8;
  }
  operator delete(v10.__r_.__value_.__l.__data_);
  return v8;
}

void sub_20B41B49C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B41B4BC(uint64_t a1, unsigned int a2, __int128 *a3)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  unsigned __int8 v9;
  uint64_t v10;
  int v11;
  void *v12;
  int v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  char v20;
  char v21;
  void *v22;
  char v23;
  void *v24;
  char v25;
  char v26;
  char v27;
  void *__p;
  __int128 v29;
  unsigned __int8 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  unsigned __int8 v36;
  char v37;
  _QWORD v38[2];
  _QWORD v39[2];
  _QWORD v40[4];

  v40[2] = *MEMORY[0x24BDAC8D0];
  sub_20AECEBD0(__dst, a3);
  v9 = atomic_load((unsigned __int8 *)&qword_25463CB10);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_25463CB10))
  {
    __cxa_atexit((void (*)(void *))std::error_category::~error_category, &off_253EC31B8, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463CB10);
  }
  sub_20AECEBD0(&__p, (__int128 *)__dst);
  v10 = a2;
  if (!v37)
  {
    *(_QWORD *)a1 = a2;
    *(_QWORD *)(a1 + 8) = &off_253EC31B8;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    goto LABEL_19;
  }
  v11 = v30;
  if (v30)
  {
    v12 = __p;
    v40[0] = v29;
    *(_QWORD *)((char *)v40 + 7) = *(_QWORD *)((char *)&v29 + 7);
    LOBYTE(a2) = HIBYTE(v29);
    v29 = 0uLL;
    __p = 0;
    v13 = v36;
    if (v36)
      goto LABEL_5;
  }
  else
  {
    v12 = 0;
    v13 = v36;
    if (v36)
    {
LABEL_5:
      v14 = v31;
      v39[0] = v32;
      *(_QWORD *)((char *)v39 + 7) = *(_QWORD *)((char *)&v32 + 7);
      v6 = HIBYTE(v32);
      v31 = 0;
      v32 = 0uLL;
      v5 = v33;
      v3 = v34;
      v38[0] = v35;
      *(_QWORD *)((char *)v38 + 7) = *(_QWORD *)((char *)&v35 + 7);
      v4 = HIBYTE(v35);
      v34 = 0;
      v35 = 0uLL;
      if (!v30)
        goto LABEL_12;
      goto LABEL_10;
    }
  }
  v14 = 0;
  if (!v30)
    goto LABEL_12;
LABEL_10:
  if (SHIBYTE(v29) < 0)
  {
    v18 = v10;
    operator delete(__p);
    *(_QWORD *)a1 = v18;
    *(_QWORD *)(a1 + 8) = &off_253EC31B8;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    v15 = (_BYTE *)(a1 + 112);
    *(_BYTE *)(a1 + 40) = 0;
LABEL_13:
    v16 = v40[0];
    *(_QWORD *)(a1 + 16) = v12;
    *(_QWORD *)(a1 + 24) = v16;
    *(_QWORD *)(a1 + 31) = *(_QWORD *)((char *)v40 + 7);
    *(_BYTE *)(a1 + 39) = a2;
    v40[0] = 0;
    *(_QWORD *)((char *)v40 + 7) = 0;
    *(_BYTE *)(a1 + 40) = 1;
    LOBYTE(a2) = 0;
    v12 = 0;
    goto LABEL_14;
  }
LABEL_12:
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = &off_253EC31B8;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  v15 = (_BYTE *)(a1 + 112);
  *(_BYTE *)(a1 + 40) = 0;
  if (v11)
    goto LABEL_13;
LABEL_14:
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 104) = 0;
  if (v13)
  {
    v17 = v39[0];
    *(_QWORD *)(a1 + 48) = v14;
    *(_QWORD *)(a1 + 56) = v17;
    *(_QWORD *)(a1 + 63) = *(_QWORD *)((char *)v39 + 7);
    *(_BYTE *)(a1 + 71) = v6;
    v39[0] = 0;
    *(_QWORD *)((char *)v39 + 7) = 0;
    *(_QWORD *)(a1 + 72) = v5;
    *(_QWORD *)(a1 + 80) = v3;
    *(_QWORD *)(a1 + 88) = v38[0];
    *(_QWORD *)(a1 + 95) = *(_QWORD *)((char *)v38 + 7);
    *(_BYTE *)(a1 + 103) = v4;
    v38[0] = 0;
    *(_QWORD *)((char *)v38 + 7) = 0;
    *(_BYTE *)(a1 + 104) = 1;
  }
  *v15 = 1;
  if (v11 && (a2 & 0x80) != 0)
    operator delete(v12);
LABEL_19:
  if (!v27)
    return;
  if (v26)
  {
    if ((v25 & 0x80000000) == 0)
    {
      if ((v23 & 0x80000000) == 0)
        goto LABEL_23;
LABEL_28:
      operator delete(v22);
      if (!v21)
        return;
      goto LABEL_24;
    }
    operator delete(v24);
    if (v23 < 0)
      goto LABEL_28;
  }
LABEL_23:
  if (!v21)
    return;
LABEL_24:
  if (v20 < 0)
    operator delete(__dst[0]);
}

void sub_20B41B78C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECCDB4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B41B7A4(char *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char *v6;
  _BOOL4 v8;
  char *v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  std::string::size_type v33;
  std::__fs::filesystem::path *p_p;
  unint64_t v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  std::__fs::filesystem::path *v39;
  std::string::size_type size;
  uint64_t v41;
  uint64_t i;
  _QWORD *v43;
  _QWORD *v44;
  std::string::size_type v45;
  std::__fs::filesystem::path *v46;
  unint64_t v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  std::__fs::filesystem::path *v51;
  std::string::size_type v52;
  uint64_t v53;
  uint64_t j;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  std::string::size_type v58;
  std::__fs::filesystem::path *v59;
  unint64_t v60;
  const void *v61;
  uint64_t v62;
  uint64_t v63;
  std::__fs::filesystem::path *v64;
  std::string::size_type v65;
  uint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  _QWORD *v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  unint64_t v75;
  std::string::size_type v76;
  std::__fs::filesystem::path *v77;
  unint64_t v78;
  const void *v79;
  uint64_t v80;
  uint64_t v81;
  std::__fs::filesystem::path *v82;
  std::string::size_type v83;
  int v84;
  uint64_t v85;
  unint64_t *p_shared_owners;
  unint64_t v87;
  int v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  __int128 v97;
  char v98;
  char v99;
  void *v100;
  char v101;
  void *v102;
  char v103;
  char v104;
  char v105;
  uint64_t (**v106)();
  __int128 v107;
  std::__fs::filesystem::path __p;
  _BYTE v109[32];
  uint64_t v110;
  const void *v111;
  __int128 v112;
  const void *v113;
  unint64_t v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  int v119;
  uint64_t v120;

  v6 = a1;
  if (a1[23] < 0)
  {
    v6 = *(char **)a1;
    if (!*(_QWORD *)a1)
    {
      v8 = sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Mesh/src/TriMeshIO.cpp", 242, (uint64_t)"filepath", 8, (uint64_t)"", 0, (void (*)(void **))sub_20B532360);
      v6 = 0;
      if (v8)
        abort();
    }
  }
  v107 = 0uLL;
  v106 = &off_24C41B880;
  memset(&__p, 0, sizeof(__p));
  v9 = v6 - 1;
  while (*++v9)
    ;
  sub_20AF08074((unint64_t)&__p, v6, v9);
  sub_20B422114(&__p, 0x30u, a3, v109);
  v11 = *(_OWORD *)&v109[8];
  *(_QWORD *)&v109[8] = 0;
  *(_QWORD *)&v109[16] = 0;
  v107 = v11;
  if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    v12 = v11;
    if ((_QWORD)v11)
      goto LABEL_8;
LABEL_20:
    v14 = 1;
    v15 = (std::__shared_weak_count *)*((_QWORD *)&v107 + 1);
    if (!*((_QWORD *)&v107 + 1))
      goto LABEL_142;
    goto LABEL_138;
  }
  v96 = v11;
  operator delete(__p.__pn_.__r_.__value_.__l.__data_);
  v12 = v96;
  if (!v96)
    goto LABEL_20;
LABEL_8:
  v94 = a4;
  v95 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 16))(v12);
  if (*((_DWORD *)a2 + 26) >= 2u
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Mesh/src/TriMeshIO.cpp", 168, (uint64_t)"(mesh.normals_type == TriMeshMetadataType::PerVertex || mesh.normals_type == TriMeshMetadataType::Unknown)", 106, (uint64_t)"obj export requires per-vertex normals", 38, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_173;
  }
  if (*((_DWORD *)a2 + 16) >= 2u
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Mesh/src/TriMeshIO.cpp", 171, (uint64_t)"(mesh.colors_type == TriMeshMetadataType::PerVertex || mesh.colors_type == TriMeshMetadataType::Unknown)", 104, (uint64_t)"obj export requires per-vertex colors", 37, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_173;
  }
  v13 = a2[5] - a2[4];
  if (v13)
  {
    if (v13 != a2[1] - *a2
      && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Mesh/src/TriMeshIO.cpp", 173, (uint64_t)"(mesh.colors.size() == 0 || mesh.colors.size() == mesh.vertices.size())", 71, (uint64_t)"mesh's #colors must be either zero or equal to #vertices", 56, (void (*)(void **))sub_20B532360))
    {
      goto LABEL_173;
    }
  }
  if (a2[22] == a2[23])
  {
    if (a2[26] == a2[27]
      || !sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Mesh/src/TriMeshIO.cpp", 179, (uint64_t)"(mesh.tex_faces.empty())", 24, (uint64_t)"for meshes without texture coords, mesh's #tex_faces must be zero", 65, (void (*)(void **))sub_20B532360))
    {
      goto LABEL_24;
    }
LABEL_173:
    abort();
  }
  if (a2[27] - a2[26] != a2[15] - a2[14]
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Mesh/src/TriMeshIO.cpp", 176, (uint64_t)"(mesh.tex_faces.size() == mesh.faces.size())", 44, (uint64_t)"for meshes with texture coords, mesh's #tex_faces must be equal to #faces", 73, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_173;
  }
LABEL_24:
  v92 = a2[26];
  v93 = a2[27];
  v90 = a2[14];
  v91 = a2[15];
  v17 = *a2;
  v16 = a2[1];
  v19 = a2[4];
  v18 = a2[5];
  sub_20AEC0BD8((uint64_t)v109);
  *(_QWORD *)&v109[*(_QWORD *)(*(_QWORD *)&v109[16] - 24) + 32] = 8;
  if (v16 - v17 == v18 - v19)
  {
    if (a2[1] != *a2)
    {
      v20 = 0;
      v21 = 0;
      do
      {
        sub_20AEC01D0(&v109[16], (uint64_t)"v ", 2);
        v22 = (_QWORD *)std::ostream::operator<<();
        sub_20AEC01D0(v22, (uint64_t)" ", 1);
        v23 = (_QWORD *)std::ostream::operator<<();
        sub_20AEC01D0(v23, (uint64_t)" ", 1);
        v24 = (_QWORD *)std::ostream::operator<<();
        sub_20AEC01D0(v24, (uint64_t)" ", 1);
        v25 = (_QWORD *)std::ostream::operator<<();
        sub_20AEC01D0(v25, (uint64_t)" ", 1);
        v26 = (_QWORD *)std::ostream::operator<<();
        sub_20AEC01D0(v26, (uint64_t)" ", 1);
        v27 = (_QWORD *)std::ostream::operator<<();
        sub_20AEC01D0(v27, (uint64_t)"\n", 1);
        ++v21;
        v20 += 12;
      }
      while (v21 < 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 2));
    }
  }
  else
  {
    v28 = *a2;
    v29 = a2[1];
    if (*a2 != v29)
    {
      do
      {
        sub_20AEC01D0(&v109[16], (uint64_t)"v ", 2);
        v30 = (_QWORD *)std::ostream::operator<<();
        sub_20AEC01D0(v30, (uint64_t)" ", 1);
        v31 = (_QWORD *)std::ostream::operator<<();
        sub_20AEC01D0(v31, (uint64_t)" ", 1);
        v32 = (_QWORD *)std::ostream::operator<<();
        sub_20AEC01D0(v32, (uint64_t)"\n", 1);
        v28 += 12;
      }
      while (v28 != v29);
    }
  }
  if ((v119 & 0x10) != 0)
  {
    v35 = v118;
    if (v118 < v114)
    {
      v118 = v114;
      v35 = v114;
    }
    v36 = v113;
    v33 = v35 - (_QWORD)v113;
    if (v35 - (unint64_t)v113 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_163;
  }
  else
  {
    if ((v119 & 8) == 0)
    {
      v33 = 0;
      *((_BYTE *)&__p.__pn_.__r_.__value_.__s + 23) = 0;
      p_p = &__p;
      goto LABEL_44;
    }
    v36 = v111;
    v33 = *((_QWORD *)&v112 + 1) - (_QWORD)v111;
    if (*((_QWORD *)&v112 + 1) - (_QWORD)v111 > 0x7FFFFFFFFFFFFFF7uLL)
LABEL_163:
      sub_20AEC0138();
  }
  if (v33 >= 0x17)
  {
    v37 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v33 | 7) != 0x17)
      v37 = v33 | 7;
    v38 = v37 + 1;
    p_p = (std::__fs::filesystem::path *)operator new(v37 + 1);
    __p.__pn_.__r_.__value_.__l.__size_ = v33;
    __p.__pn_.__r_.__value_.__r.__words[2] = v38 | 0x8000000000000000;
    __p.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
    goto LABEL_43;
  }
  *((_BYTE *)&__p.__pn_.__r_.__value_.__s + 23) = v33;
  p_p = &__p;
  if (v33)
LABEL_43:
    memmove(p_p, v36, v33);
LABEL_44:
  p_p->__pn_.__r_.__value_.__s.__data_[v33] = 0;
  if ((__p.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v39 = &__p;
  else
    v39 = (std::__fs::filesystem::path *)__p.__pn_.__r_.__value_.__r.__words[0];
  if ((__p.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]);
  else
    size = __p.__pn_.__r_.__value_.__l.__size_;
  sub_20AEC01D0(v95, (uint64_t)v39, size);
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v117) & 0x80000000) == 0)
      goto LABEL_52;
  }
  else if ((SHIBYTE(v117) & 0x80000000) == 0)
  {
    goto LABEL_52;
  }
  operator delete(*((void **)&v115 + 1));
LABEL_52:
  *((_QWORD *)&v115 + 1) = 0;
  v116 = 0;
  v117 = 0;
  sub_20AEC8D2C((uint64_t)&v109[24]);
  *(_QWORD *)&v109[*(_QWORD *)(*(_QWORD *)&v109[16] - 24) + 32] = 8;
  v41 = a2[22];
  for (i = a2[23]; v41 != i; v41 += 8)
  {
    sub_20AEC01D0(&v109[16], (uint64_t)"vt ", 3);
    v43 = (_QWORD *)std::ostream::operator<<();
    sub_20AEC01D0(v43, (uint64_t)" ", 1);
    v44 = (_QWORD *)std::ostream::operator<<();
    sub_20AEC01D0(v44, (uint64_t)"\n", 1);
  }
  if ((v119 & 0x10) != 0)
  {
    v47 = v118;
    if (v118 < v114)
    {
      v118 = v114;
      v47 = v114;
    }
    v48 = v113;
    v45 = v47 - (_QWORD)v113;
    if (v47 - (unint64_t)v113 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_165;
  }
  else
  {
    if ((v119 & 8) == 0)
    {
      v45 = 0;
      *((_BYTE *)&__p.__pn_.__r_.__value_.__s + 23) = 0;
      v46 = &__p;
      goto LABEL_69;
    }
    v48 = v111;
    v45 = *((_QWORD *)&v112 + 1) - (_QWORD)v111;
    if (*((_QWORD *)&v112 + 1) - (_QWORD)v111 > 0x7FFFFFFFFFFFFFF7uLL)
LABEL_165:
      sub_20AEC0138();
  }
  if (v45 >= 0x17)
  {
    v49 = (v45 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v45 | 7) != 0x17)
      v49 = v45 | 7;
    v50 = v49 + 1;
    v46 = (std::__fs::filesystem::path *)operator new(v49 + 1);
    __p.__pn_.__r_.__value_.__l.__size_ = v45;
    __p.__pn_.__r_.__value_.__r.__words[2] = v50 | 0x8000000000000000;
    __p.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v46;
    goto LABEL_68;
  }
  *((_BYTE *)&__p.__pn_.__r_.__value_.__s + 23) = v45;
  v46 = &__p;
  if (v45)
LABEL_68:
    memmove(v46, v48, v45);
LABEL_69:
  v46->__pn_.__r_.__value_.__s.__data_[v45] = 0;
  if ((__p.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v51 = &__p;
  else
    v51 = (std::__fs::filesystem::path *)__p.__pn_.__r_.__value_.__r.__words[0];
  if ((__p.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v52 = HIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]);
  else
    v52 = __p.__pn_.__r_.__value_.__l.__size_;
  sub_20AEC01D0(v95, (uint64_t)v51, v52);
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v117) & 0x80000000) == 0)
      goto LABEL_77;
  }
  else if ((SHIBYTE(v117) & 0x80000000) == 0)
  {
    goto LABEL_77;
  }
  operator delete(*((void **)&v115 + 1));
LABEL_77:
  *((_QWORD *)&v115 + 1) = 0;
  v116 = 0;
  v117 = 0;
  sub_20AEC8D2C((uint64_t)&v109[24]);
  *(_QWORD *)&v109[*(_QWORD *)(*(_QWORD *)&v109[16] - 24) + 32] = 8;
  v53 = a2[9];
  for (j = a2[10]; v53 != j; v53 += 12)
  {
    sub_20AEC01D0(&v109[16], (uint64_t)"vn ", 3);
    v55 = (_QWORD *)std::ostream::operator<<();
    sub_20AEC01D0(v55, (uint64_t)" ", 1);
    v56 = (_QWORD *)std::ostream::operator<<();
    sub_20AEC01D0(v56, (uint64_t)" ", 1);
    v57 = (_QWORD *)std::ostream::operator<<();
    sub_20AEC01D0(v57, (uint64_t)"\n", 1);
  }
  if ((v119 & 0x10) != 0)
  {
    v60 = v118;
    if (v118 < v114)
    {
      v118 = v114;
      v60 = v114;
    }
    v61 = v113;
    v58 = v60 - (_QWORD)v113;
    if (v60 - (unint64_t)v113 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_167;
  }
  else
  {
    if ((v119 & 8) == 0)
    {
      v58 = 0;
      *((_BYTE *)&__p.__pn_.__r_.__value_.__s + 23) = 0;
      v59 = &__p;
      goto LABEL_94;
    }
    v61 = v111;
    v58 = *((_QWORD *)&v112 + 1) - (_QWORD)v111;
    if (*((_QWORD *)&v112 + 1) - (_QWORD)v111 > 0x7FFFFFFFFFFFFFF7uLL)
LABEL_167:
      sub_20AEC0138();
  }
  if (v58 >= 0x17)
  {
    v62 = (v58 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v58 | 7) != 0x17)
      v62 = v58 | 7;
    v63 = v62 + 1;
    v59 = (std::__fs::filesystem::path *)operator new(v62 + 1);
    __p.__pn_.__r_.__value_.__l.__size_ = v58;
    __p.__pn_.__r_.__value_.__r.__words[2] = v63 | 0x8000000000000000;
    __p.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v59;
    goto LABEL_93;
  }
  *((_BYTE *)&__p.__pn_.__r_.__value_.__s + 23) = v58;
  v59 = &__p;
  if (v58)
LABEL_93:
    memmove(v59, v61, v58);
LABEL_94:
  v59->__pn_.__r_.__value_.__s.__data_[v58] = 0;
  if ((__p.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v64 = &__p;
  else
    v64 = (std::__fs::filesystem::path *)__p.__pn_.__r_.__value_.__r.__words[0];
  if ((__p.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v65 = HIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]);
  else
    v65 = __p.__pn_.__r_.__value_.__l.__size_;
  sub_20AEC01D0(v95, (uint64_t)v64, v65);
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v117) & 0x80000000) == 0)
      goto LABEL_102;
  }
  else if ((SHIBYTE(v117) & 0x80000000) == 0)
  {
    goto LABEL_102;
  }
  operator delete(*((void **)&v115 + 1));
LABEL_102:
  *((_QWORD *)&v115 + 1) = 0;
  v116 = 0;
  v117 = 0;
  sub_20AEC8D2C((uint64_t)&v109[24]);
  *(_QWORD *)&v109[*(_QWORD *)(*(_QWORD *)&v109[16] - 24) + 32] = 8;
  if (a2[15] != a2[14])
  {
    if (v93 - v92 == v91 - v90)
    {
      v66 = 0;
      v67 = 0;
      do
      {
        sub_20AEC01D0(&v109[16], (uint64_t)"f", 1);
        sub_20AEC01D0(&v109[16], (uint64_t)" ", 1);
        v68 = (_QWORD *)std::ostream::operator<<();
        sub_20AEC01D0(v68, (uint64_t)"/", 1);
        v69 = (_QWORD *)std::ostream::operator<<();
        sub_20AEC01D0(v69, (uint64_t)"/", 1);
        std::ostream::operator<<();
        sub_20AEC01D0(&v109[16], (uint64_t)" ", 1);
        v70 = (_QWORD *)std::ostream::operator<<();
        sub_20AEC01D0(v70, (uint64_t)"/", 1);
        v71 = (_QWORD *)std::ostream::operator<<();
        sub_20AEC01D0(v71, (uint64_t)"/", 1);
        std::ostream::operator<<();
        sub_20AEC01D0(&v109[16], (uint64_t)" ", 1);
        v72 = (_QWORD *)std::ostream::operator<<();
        sub_20AEC01D0(v72, (uint64_t)"/", 1);
        v73 = (_QWORD *)std::ostream::operator<<();
        sub_20AEC01D0(v73, (uint64_t)"/", 1);
        std::ostream::operator<<();
        sub_20AEC01D0(&v109[16], (uint64_t)"\n", 1);
        ++v67;
        v66 += 12;
      }
      while (v67 < 0xAAAAAAAAAAAAAAABLL * ((a2[15] - a2[14]) >> 2));
    }
    else
    {
      v74 = 0;
      v75 = 0;
      do
      {
        sub_20AEC01D0(&v109[16], (uint64_t)"f", 1);
        sub_20AEC01D0(&v109[16], (uint64_t)" ", 1);
        std::ostream::operator<<();
        sub_20AEC01D0(&v109[16], (uint64_t)" ", 1);
        std::ostream::operator<<();
        sub_20AEC01D0(&v109[16], (uint64_t)" ", 1);
        std::ostream::operator<<();
        sub_20AEC01D0(&v109[16], (uint64_t)"\n", 1);
        ++v75;
        v74 += 12;
      }
      while (v75 < 0xAAAAAAAAAAAAAAABLL * ((a2[15] - a2[14]) >> 2));
    }
  }
  if ((v119 & 0x10) != 0)
  {
    v78 = v118;
    if (v118 < v114)
    {
      v118 = v114;
      v78 = v114;
    }
    v79 = v113;
    v76 = v78 - (_QWORD)v113;
    if (v78 - (unint64_t)v113 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_169;
  }
  else
  {
    if ((v119 & 8) == 0)
    {
      v76 = 0;
      *((_BYTE *)&__p.__pn_.__r_.__value_.__s + 23) = 0;
      v77 = &__p;
      goto LABEL_124;
    }
    v79 = v111;
    v76 = *((_QWORD *)&v112 + 1) - (_QWORD)v111;
    if (*((_QWORD *)&v112 + 1) - (_QWORD)v111 > 0x7FFFFFFFFFFFFFF7uLL)
LABEL_169:
      sub_20AEC0138();
  }
  if (v76 >= 0x17)
  {
    v80 = (v76 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v76 | 7) != 0x17)
      v80 = v76 | 7;
    v81 = v80 + 1;
    v77 = (std::__fs::filesystem::path *)operator new(v80 + 1);
    __p.__pn_.__r_.__value_.__l.__size_ = v76;
    __p.__pn_.__r_.__value_.__r.__words[2] = v81 | 0x8000000000000000;
    __p.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v77;
    goto LABEL_123;
  }
  *((_BYTE *)&__p.__pn_.__r_.__value_.__s + 23) = v76;
  v77 = &__p;
  if (v76)
LABEL_123:
    memmove(v77, v79, v76);
LABEL_124:
  v77->__pn_.__r_.__value_.__s.__data_[v76] = 0;
  if ((__p.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v82 = &__p;
  else
    v82 = (std::__fs::filesystem::path *)__p.__pn_.__r_.__value_.__r.__words[0];
  if ((__p.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v83 = HIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]);
  else
    v83 = __p.__pn_.__r_.__value_.__l.__size_;
  sub_20AEC01D0(v95, (uint64_t)v82, v83);
  a4 = v94;
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
  v84 = *(_DWORD *)((char *)v95 + *(_QWORD *)(*v95 - 24) + 32);
  *(_QWORD *)v109 = *MEMORY[0x24BEDB7F0];
  v85 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)&v109[*(_QWORD *)(*(_QWORD *)v109 - 24)] = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  *(_QWORD *)&v109[16] = v85;
  *(_QWORD *)&v109[24] = MEMORY[0x24BEDB848] + 16;
  if (SHIBYTE(v117) < 0)
    operator delete(*((void **)&v115 + 1));
  if ((v84 & 5) != 0)
    v14 = 5;
  else
    v14 = 0;
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x20BD35758](&v120);
  v15 = (std::__shared_weak_count *)*((_QWORD *)&v107 + 1);
  if (*((_QWORD *)&v107 + 1))
  {
LABEL_138:
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v87 = __ldaxr(p_shared_owners);
    while (__stlxr(v87 - 1, p_shared_owners));
    if (!v87)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
LABEL_142:
  if (!v14)
  {
    *(_BYTE *)(a4 + 120) = 1;
    return;
  }
  LOBYTE(v97) = 0;
  v105 = 0;
  sub_20B41B4BC((uint64_t)v109, v14, &v97);
  *(_OWORD *)a4 = *(_OWORD *)v109;
  *(_BYTE *)(a4 + 16) = 0;
  *(_BYTE *)(a4 + 112) = 0;
  if (!(_BYTE)v118)
  {
    *(_BYTE *)(a4 + 120) = 0;
    if (!v105)
      return;
LABEL_155:
    if (!v104)
      goto LABEL_158;
    if (v103 < 0)
    {
      operator delete(v102);
      if ((v101 & 0x80000000) == 0)
      {
LABEL_158:
        if (!v99)
          return;
LABEL_159:
        if (v98 < 0)
          operator delete((void *)v97);
        return;
      }
    }
    else if ((v101 & 0x80000000) == 0)
    {
      goto LABEL_158;
    }
    operator delete(v100);
    if (!v99)
      return;
    goto LABEL_159;
  }
  *(_BYTE *)(a4 + 40) = 0;
  v88 = v111;
  if ((_BYTE)v111)
  {
    *(_OWORD *)(a4 + 16) = *(_OWORD *)&v109[16];
    *(_QWORD *)(a4 + 32) = v110;
    *(_QWORD *)&v109[24] = 0;
    v110 = 0;
    *(_QWORD *)&v109[16] = 0;
    *(_BYTE *)(a4 + 40) = 1;
  }
  *(_BYTE *)(a4 + 48) = 0;
  *(_BYTE *)(a4 + 104) = 0;
  if ((_BYTE)v117)
  {
    *(_OWORD *)(a4 + 48) = v112;
    v89 = v114;
    *(_QWORD *)(a4 + 64) = v113;
    *(_QWORD *)(a4 + 72) = v89;
    *(_OWORD *)(a4 + 80) = v115;
    *(_QWORD *)(a4 + 96) = v116;
    *(_BYTE *)(a4 + 104) = 1;
  }
  *(_BYTE *)(a4 + 112) = 1;
  *(_BYTE *)(a4 + 120) = 0;
  if (v88 && SHIBYTE(v110) < 0)
    operator delete(*(void **)&v109[16]);
  if (v105)
    goto LABEL_155;
}

void sub_20B41C674(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39,char a40)
{
  if (a39 < 0)
  {
    operator delete(__p);
    sub_20AEC2E08((uint64_t)&a40);
    sub_20B4224E8((uint64_t)&a31);
    _Unwind_Resume(a1);
  }
  sub_20AEC2E08((uint64_t)&a40);
  sub_20B4224E8((uint64_t)&a31);
  _Unwind_Resume(a1);
}

void sub_20B41C778(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  std::__fs::filesystem::path::__string_view v9;
  __int128 *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v11;
  std::basic_string_view<_CharT, _Traits>::size_type v12;
  void *v13;
  void *v14;
  int v15;
  void **v16;
  unsigned __int8 v17;
  int v18;
  std::string::size_type v19;
  std::string::value_type v20;
  std::string::size_type size;
  std::string *v22;
  _BOOL4 v23;
  int v24;
  int v25;
  _BOOL4 v26;
  _QWORD *v27;
  _BYTE *v28;
  int v29;
  std::locale::id *v30;
  const std::locale::facet *v31;
  unsigned __int8 v32;
  _QWORD *v33;
  __int128 *v34;
  std::ios_base *v35;
  const char *v36;
  int v37;
  uint64_t v38;
  _DWORD *v39;
  const char *v40;
  _DWORD *v41;
  uint64_t v42;
  const char *v43;
  void ***v44;
  _DWORD *v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  std::string *v53;
  std::string::size_type v54;
  uint64_t v55;
  std::string *v56;
  uint64_t v57;
  void ***v58;
  void ***v59;
  void ***v60;
  void ***v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void ***v65;
  char *v66;
  void ***v67;
  uint64_t v68;
  __int128 v69;
  void **v70;
  unint64_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int8x16_t *v74;
  int64x2_t v75;
  unint64_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int8x16_t v90;
  uint8x16_t v91;
  uint16x8_t v92;
  uint32x4_t v93;
  int8x16_t v94;
  int8x16_t v95;
  int64x2_t v96;
  uint32x4_t v97;
  int64x2_t v98;
  uint16x8_t v99;
  uint32x4_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int64x2_t v103;
  uint32x4_t v104;
  int64x2_t v105;
  int64x2_t v106;
  uint8x16_t v107;
  uint16x8_t v108;
  uint32x4_t v109;
  int64x2_t v110;
  int64x2_t v111;
  uint32x4_t v112;
  int64x2_t v113;
  uint16x8_t v114;
  uint32x4_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  uint32x4_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int8x8_t *v123;
  std::string::size_type v124;
  int64x2_t v125;
  int64x2_t v126;
  int8x8_t v127;
  uint16x8_t v128;
  uint32x4_t v129;
  int8x16_t v130;
  int64x2_t v131;
  int64x2_t v132;
  uint32x4_t v133;
  int64x2_t v134;
  unsigned __int8 *v135;
  int v136;
  uint64_t v137;
  unint64_t v138;
  std::string *v139;
  _BYTE *v140;
  size_t v141;
  std::string *v142;
  _BYTE *v143;
  unint64_t v144;
  std::string::size_type v145;
  uint64_t v146;
  char *v147;
  size_t v148;
  _BYTE *v149;
  _BYTE *p_str;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  std::string::size_type v154;
  std::string::size_type v155;
  std::string *v156;
  std::string::size_type v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  unint64_t v163;
  std::string::size_type v164;
  std::string *v165;
  unint64_t v166;
  std::string::size_type v167;
  std::string::size_type v168;
  std::string::size_type v169;
  _BYTE *v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  char *v175;
  unint64_t v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  uint64_t v181;
  unint64_t v182;
  unint64_t v183;
  _BYTE *v184;
  _DWORD *v185;
  int64_t v186;
  unint64_t v187;
  char *v188;
  int v189;
  _DWORD *v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  __int128 v197;
  uint64_t v198;
  int v199;
  int v200;
  _DWORD *v201;
  _DWORD *v202;
  unint64_t v203;
  unint64_t v204;
  unint64_t v205;
  char v206;
  int v207;
  _DWORD *v208;
  _DWORD *v209;
  int v210;
  int v211;
  _DWORD *v212;
  _DWORD *v213;
  unint64_t v214;
  unint64_t v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  char *v219;
  unsigned int v220;
  char *v221;
  _QWORD *v222;
  unint64_t v223;
  unint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t v229;
  _DWORD *v230;
  _DWORD *v231;
  unint64_t v232;
  uint64_t v233;
  int v234;
  uint64_t v235;
  __int128 v236;
  void *v237;
  uint64_t v238;
  unsigned int v239;
  int v240;
  uint64_t v241;
  int v242;
  uint64_t v243;
  void *v244;
  int v245;
  uint64_t v246;
  std::__shared_weak_count *v247;
  unint64_t *p_shared_owners;
  unint64_t v249;
  int v250;
  uint64_t v251;
  void *v252;
  int v253;
  uint64_t v254;
  int v255;
  int v256;
  unint64_t v257;
  std::string::size_type v258;
  uint64_t v259;
  _BYTE *v260;
  int64x2_t v261;
  unint64_t v262;
  unint64_t v263;
  int v264;
  int v265;
  int8x16_t v266;
  void *v267;
  void *v268;
  uint64_t v269;
  uint64_t v270;
  void *v271;
  void *v272;
  uint64_t v273;
  void *v274[2];
  uint64_t v275;
  char v276;
  void *v277;
  char v278;
  void *v279;
  char v280;
  char v281;
  char v282;
  uint64_t v283;
  uint64_t v284;
  std::__shared_weak_count *v285;
  void *v286[2];
  char *v287;
  char v288;
  void *v289;
  char v290;
  void *v291;
  char v292;
  char v293;
  char v294;
  __int128 v295;
  char *v296;
  char v297;
  void *v298;
  char v299;
  void *v300;
  char v301;
  char v302;
  char v303;
  void *v304[2];
  void *v305;
  char v306;
  void *v307;
  char v308;
  void *v309;
  char v310;
  char v311;
  char v312;
  std::string v313;
  uint64_t v314;
  void *__src[2];
  void *v316;
  _QWORD v317[3];
  char v318;
  void *v319;
  char v320;
  char v321;
  char v322;
  __int128 __dst;
  __int128 v324;
  _DWORD *v325;
  _DWORD *v326;
  __int128 v327;
  uint64_t v328;
  _BYTE v329[24];
  uint64_t v330;
  int v331;
  _DWORD *v332;
  _DWORD *v333;
  unint64_t v334;
  uint64_t v335;
  uint64_t v336;
  void ***v337;
  void ***v338;
  unint64_t v339;
  _BYTE v340[4];
  int v341;
  _DWORD *v342;
  _DWORD *v343;
  unint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  char v351;
  int v352;
  int v353;
  std::string __str;
  std::string v355;
  void *v356[2];
  uint64_t v357;
  void *__p[2];
  __int128 v359;
  std::string *v360;
  unsigned __int8 v361;
  __int128 v362;
  uint64_t v363;
  uint64_t v364;
  void *v365[2];
  __int128 v366;
  int v367;
  uint64_t v368[19];
  void **v369;
  int v370;
  int v371;
  int v372;
  int v373;
  __int128 v374;
  uint64_t v375;
  __int128 v376;
  char *v377;
  uint64_t v378;
  uint64_t v379;
  int v380;
  _DWORD v381[2];
  int v382;
  int v383;
  uint64_t v384;

  v384 = *MEMORY[0x24BDAC8D0];
  v314 = a2;
  v9 = std::__fs::filesystem::path::__extension((const std::__fs::filesystem::path *)a1);
  if (v9.__size_ > 0x7FFFFFFFFFFFFFF7)
    sub_20AEC0138();
  if (v9.__size_ >= 0x17)
  {
    v11 = (v9.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9.__size_ | 7) != 0x17)
      v11 = v9.__size_ | 7;
    v12 = v11 + 1;
    p_dst = (__int128 *)operator new(v11 + 1);
    *(_QWORD *)&v324 = v12 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
    *((_QWORD *)&__dst + 1) = v9.__size_;
    goto LABEL_8;
  }
  BYTE7(v324) = v9.__size_;
  p_dst = &__dst;
  if (v9.__size_)
LABEL_8:
    memmove(p_dst, v9.__data_, v9.__size_);
  *((_BYTE *)p_dst + v9.__size_) = 0;
  v13 = (void *)*((_QWORD *)&__dst + 1);
  v14 = (void *)__dst;
  LODWORD(__src[0]) = v324;
  *(_DWORD *)((char *)__src + 3) = *(_DWORD *)((char *)&v324 + 3);
  v15 = SBYTE7(v324);
  if (SBYTE7(v324) < 0)
  {
    sub_20AEC60F4(__p, (void *)__dst, *((unint64_t *)&__dst + 1));
    v17 = BYTE7(v359);
    v16 = (void **)__p[0];
    v13 = __p[1];
  }
  else
  {
    *(_OWORD *)__p = __dst;
    LODWORD(v359) = __src[0];
    *(_DWORD *)((char *)&v359 + 3) = *(_DWORD *)((char *)__src + 3);
    BYTE7(v359) = BYTE7(v324);
    v16 = (void **)__dst;
    v17 = BYTE7(v324);
  }
  v18 = (char)v17;
  if ((v17 & 0x80u) == 0)
    v19 = v17;
  else
    v19 = (std::string::size_type)v13;
  memset(&v313, 0, sizeof(v313));
  std::string::reserve(&v313, v19);
  if (v18 >= 0)
    v16 = __p;
  for (; v19; --v19)
  {
    v20 = __tolower(*(unsigned __int8 *)v16);
    std::string::push_back(&v313, v20);
    v16 = (void **)((char *)v16 + 1);
  }
  if (SBYTE7(v359) < 0)
  {
    operator delete(__p[0]);
    if ((v15 & 0x80000000) == 0)
      goto LABEL_21;
  }
  else if ((v15 & 0x80000000) == 0)
  {
    goto LABEL_21;
  }
  operator delete(v14);
LABEL_21:
  size = HIBYTE(v313.__r_.__value_.__r.__words[2]);
  if ((v313.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v313.__r_.__value_.__l.__size_;
  if (size == 4)
  {
    v22 = &v313;
    if ((v313.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v22 = (std::string *)v313.__r_.__value_.__r.__words[0];
    v23 = LODWORD(v22->__r_.__value_.__l.__data_) == 1784835886;
    v24 = BYTE4(v314);
    v25 = v314;
    if (!BYTE4(v314))
      goto LABEL_31;
  }
  else
  {
    v23 = 0;
    v24 = BYTE4(v314);
    v25 = v314;
    if (!BYTE4(v314))
      goto LABEL_31;
  }
  if (!v25)
  {
    v26 = 1;
    goto LABEL_32;
  }
LABEL_31:
  v26 = v25 == 1;
  if (!v24)
  {
    if (!v23)
    {
      DWORD2(v359) = 0;
      sub_20B209358(__p, "could not determine mesh format from file extension of path ");
      sub_20AFF447C((uint64_t)&v376, (uint64_t)__p, a1);
      if (DWORD2(v359) == -1)
        sub_20AECFAB8();
      *(_QWORD *)&v376 = &v374;
      ((void (*)(void **__return_ptr, __int128 *, void **))off_24C41B408[DWORD2(v359)])(__src, &v376, __p);
      if (DWORD2(v359) != -1)
        ((void (*)(__int128 *, void **))off_24C41B3D8[DWORD2(v359)])(&v376, __p);
      if (SHIBYTE(v316) < 0)
      {
        sub_20AEC60F4(v304, __src[0], (unint64_t)__src[1]);
      }
      else
      {
        *(_OWORD *)v304 = *(_OWORD *)__src;
        v305 = v316;
      }
      v306 = 1;
      LOBYTE(v307) = 0;
      v311 = 0;
      v312 = 1;
      sub_20B52280C((uint64_t)v304, (uint64_t)&__dst);
      *(_OWORD *)a5 = __dst;
      *(_BYTE *)(a5 + 16) = 0;
      *(_BYTE *)(a5 + 112) = 0;
      if ((_BYTE)v332)
      {
        *(_BYTE *)(a5 + 40) = 0;
        v253 = v326;
        if ((_BYTE)v326)
        {
          *(_OWORD *)(a5 + 16) = v324;
          *(_QWORD *)(a5 + 32) = v325;
          v325 = 0;
          v324 = 0uLL;
          *(_BYTE *)(a5 + 40) = 1;
        }
        *(_BYTE *)(a5 + 48) = 0;
        *(_BYTE *)(a5 + 104) = 0;
        if ((_BYTE)v331)
        {
          v254 = *(_QWORD *)v329;
          *(_QWORD *)(a5 + 64) = v328;
          *(_OWORD *)(a5 + 48) = v327;
          v327 = 0uLL;
          *(_QWORD *)(a5 + 72) = v254;
          *(_OWORD *)(a5 + 80) = *(_OWORD *)&v329[8];
          *(_QWORD *)(a5 + 96) = v330;
          v328 = 0;
          *(_OWORD *)&v329[8] = 0uLL;
          v330 = 0;
          *(_BYTE *)(a5 + 104) = 1;
        }
        *(_BYTE *)(a5 + 112) = 1;
        *(_BYTE *)(a5 + 384) = 0;
        if (v253 && SHIBYTE(v325) < 0)
          operator delete((void *)v324);
      }
      else
      {
        *(_BYTE *)(a5 + 384) = 0;
      }
      if (v312)
      {
        if (v311)
        {
          if (v310 < 0)
            operator delete(v309);
          if (v308 < 0)
            operator delete(v307);
        }
        if (v306 && SHIBYTE(v305) < 0)
          operator delete(v304[0]);
      }
      if (SHIBYTE(v316) < 0)
      {
        v252 = __src[0];
LABEL_423:
        operator delete(v252);
        goto LABEL_444;
      }
      goto LABEL_444;
    }
    v25 = 0;
    LODWORD(v314) = 0;
    BYTE4(v314) = 1;
    goto LABEL_54;
  }
LABEL_32:
  if (size)
  {
    if (v23 && !v26)
    {
      LODWORD(v317[0]) = 0;
      sub_20AEDBB6C(__src, "cannot load ");
      __p[0] = __src;
      __p[1] = &v313;
      *(_QWORD *)&v359 = __src;
      *((_QWORD *)&v359 + 1) = &v313;
      v360 = &v313;
      if (LODWORD(v317[0]) == -1)
        sub_20AECFAB8();
      *(_QWORD *)&v374 = __p;
      ((void (*)(__int128 *, void **))off_24C41B420[LODWORD(v317[0])])(&v374, __src);
      __p[0] = __src;
      __p[1] = " file with format ";
      *(_QWORD *)&v359 = __src;
      *((_QWORD *)&v359 + 1) = " file with format ";
      v360 = (std::string *)" file with format ";
      if (LODWORD(v317[0]) == -1)
        sub_20AECFAB8();
      *(_QWORD *)&v374 = __p;
      ((void (*)(__int128 *, void **))off_24C41B438[LODWORD(v317[0])])(&v374, __src);
      sub_20B41F1B0((uint64_t)__src, (int *)&v314);
      if (LODWORD(v317[0]) == -1)
        sub_20AECFAB8();
      __p[0] = &v374;
      ((void (*)(__int128 *__return_ptr, void **, void **))off_24C41B408[LODWORD(v317[0])])(&v376, __p, __src);
      if (LODWORD(v317[0]) != -1)
        ((void (*)(void **, void **))off_24C41B3D8[LODWORD(v317[0])])(__p, __src);
      if (SHIBYTE(v377) < 0)
      {
        sub_20AEC60F4(&v295, (void *)v376, *((unint64_t *)&v376 + 1));
      }
      else
      {
        v295 = v376;
        v296 = v377;
      }
      v297 = 1;
      LOBYTE(v298) = 0;
      v302 = 0;
      v303 = 1;
      sub_20B52280C((uint64_t)&v295, (uint64_t)&__dst);
      *(_OWORD *)a5 = __dst;
      *(_BYTE *)(a5 + 16) = 0;
      *(_BYTE *)(a5 + 112) = 0;
      if ((_BYTE)v332)
      {
        *(_BYTE *)(a5 + 40) = 0;
        v242 = v326;
        if ((_BYTE)v326)
        {
          *(_OWORD *)(a5 + 16) = v324;
          *(_QWORD *)(a5 + 32) = v325;
          v325 = 0;
          v324 = 0uLL;
          *(_BYTE *)(a5 + 40) = 1;
        }
        *(_BYTE *)(a5 + 48) = 0;
        *(_BYTE *)(a5 + 104) = 0;
        if ((_BYTE)v331)
        {
          v243 = *(_QWORD *)v329;
          *(_QWORD *)(a5 + 64) = v328;
          *(_OWORD *)(a5 + 48) = v327;
          v327 = 0uLL;
          *(_QWORD *)(a5 + 72) = v243;
          *(_OWORD *)(a5 + 80) = *(_OWORD *)&v329[8];
          *(_QWORD *)(a5 + 96) = v330;
          v328 = 0;
          *(_OWORD *)&v329[8] = 0uLL;
          v330 = 0;
          *(_BYTE *)(a5 + 104) = 1;
        }
        *(_BYTE *)(a5 + 112) = 1;
        *(_BYTE *)(a5 + 384) = 0;
        if (v242 && SHIBYTE(v325) < 0)
          operator delete((void *)v324);
      }
      else
      {
        *(_BYTE *)(a5 + 384) = 0;
      }
      if (!v303)
        goto LABEL_421;
      if (v302)
      {
        if (v301 < 0)
          operator delete(v300);
        if (v299 < 0)
          operator delete(v298);
      }
      if (!v297 || (SHIBYTE(v296) & 0x80000000) == 0)
        goto LABEL_421;
      v244 = (void *)v295;
      goto LABEL_420;
    }
    if (!v23 && v26)
    {
      LODWORD(v317[0]) = 0;
      sub_20AEDBB6C(__src, "cannot load ");
      sub_20B41F1B0((uint64_t)__src, (int *)&v314);
      __p[0] = __src;
      __p[1] = " format from ";
      *(_QWORD *)&v359 = __src;
      *((_QWORD *)&v359 + 1) = " format from ";
      v360 = (std::string *)" format from ";
      if (LODWORD(v317[0]) == -1)
        sub_20AECFAB8();
      *(_QWORD *)&v374 = __p;
      ((void (*)(__int128 *, void **))off_24C41B450[LODWORD(v317[0])])(&v374, __src);
      __p[0] = __src;
      __p[1] = &v313;
      *(_QWORD *)&v359 = __src;
      *((_QWORD *)&v359 + 1) = &v313;
      v360 = &v313;
      if (LODWORD(v317[0]) == -1)
        sub_20AECFAB8();
      *(_QWORD *)&v374 = __p;
      ((void (*)(__int128 *, void **))off_24C41B420[LODWORD(v317[0])])(&v374, __src);
      __p[0] = __src;
      __p[1] = " file";
      *(_QWORD *)&v359 = __src;
      *((_QWORD *)&v359 + 1) = " file";
      v360 = (std::string *)" file";
      if (LODWORD(v317[0]) == -1)
        sub_20AECFAB8();
      *(_QWORD *)&v374 = __p;
      ((void (*)(__int128 *, void **))off_24C41B468[LODWORD(v317[0])])(&v374, __src);
      if (LODWORD(v317[0]) == -1)
        sub_20AECFAB8();
      __p[0] = &v374;
      ((void (*)(__int128 *__return_ptr, void **, void **))off_24C41B408[LODWORD(v317[0])])(&v376, __p, __src);
      if (LODWORD(v317[0]) != -1)
        ((void (*)(void **, void **))off_24C41B3D8[LODWORD(v317[0])])(__p, __src);
      if (SHIBYTE(v377) < 0)
      {
        sub_20AEC60F4(v286, (void *)v376, *((unint64_t *)&v376 + 1));
      }
      else
      {
        *(_OWORD *)v286 = v376;
        v287 = v377;
      }
      v288 = 1;
      LOBYTE(v289) = 0;
      v293 = 0;
      v294 = 1;
      sub_20B52280C((uint64_t)v286, (uint64_t)&__dst);
      *(_OWORD *)a5 = __dst;
      *(_BYTE *)(a5 + 16) = 0;
      *(_BYTE *)(a5 + 112) = 0;
      if ((_BYTE)v332)
      {
        *(_BYTE *)(a5 + 40) = 0;
        v250 = v326;
        if ((_BYTE)v326)
        {
          *(_OWORD *)(a5 + 16) = v324;
          *(_QWORD *)(a5 + 32) = v325;
          v325 = 0;
          v324 = 0uLL;
          *(_BYTE *)(a5 + 40) = 1;
        }
        *(_BYTE *)(a5 + 48) = 0;
        *(_BYTE *)(a5 + 104) = 0;
        if ((_BYTE)v331)
        {
          v251 = *(_QWORD *)v329;
          *(_QWORD *)(a5 + 64) = v328;
          *(_OWORD *)(a5 + 48) = v327;
          v327 = 0uLL;
          *(_QWORD *)(a5 + 72) = v251;
          *(_OWORD *)(a5 + 80) = *(_OWORD *)&v329[8];
          *(_QWORD *)(a5 + 96) = v330;
          v328 = 0;
          *(_OWORD *)&v329[8] = 0uLL;
          v330 = 0;
          *(_BYTE *)(a5 + 104) = 1;
        }
        *(_BYTE *)(a5 + 112) = 1;
        *(_BYTE *)(a5 + 384) = 0;
        if (v250 && SHIBYTE(v325) < 0)
          operator delete((void *)v324);
      }
      else
      {
        *(_BYTE *)(a5 + 384) = 0;
      }
      if (!v294)
        goto LABEL_421;
      if (v293)
      {
        if (v292 < 0)
          operator delete(v291);
        if (v290 < 0)
          operator delete(v289);
      }
      if (!v288 || (SHIBYTE(v287) & 0x80000000) == 0)
        goto LABEL_421;
      v244 = v286[0];
LABEL_420:
      operator delete(v244);
LABEL_421:
      if ((SHIBYTE(v377) & 0x80000000) == 0)
        goto LABEL_444;
      v252 = (void *)v376;
      goto LABEL_423;
    }
  }
LABEL_54:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(*(_QWORD *)a4 + 368))(&v283, a4, a1, 8);
  if (!v284)
  {
    if (*(char *)(a1 + 23) < 0)
    {
      sub_20AEC60F4(__p, *(void **)a1, *(_QWORD *)(a1 + 8));
    }
    else
    {
      *(_OWORD *)__p = *(_OWORD *)a1;
      *(_QWORD *)&v359 = *(_QWORD *)(a1 + 16);
    }
    if (SBYTE7(v359) < 0)
    {
      sub_20AEC60F4(v274, __p[0], (unint64_t)__p[1]);
    }
    else
    {
      *(_OWORD *)v274 = *(_OWORD *)__p;
      v275 = v359;
    }
    v276 = 1;
    LOBYTE(v277) = 0;
    v281 = 0;
    v282 = 1;
    sub_20B41B4BC((uint64_t)&__dst, 1u, (__int128 *)v274);
    *(_OWORD *)a5 = __dst;
    *(_BYTE *)(a5 + 16) = 0;
    *(_BYTE *)(a5 + 112) = 0;
    if ((_BYTE)v332)
    {
      *(_BYTE *)(a5 + 40) = 0;
      v245 = v326;
      if ((_BYTE)v326)
      {
        *(_OWORD *)(a5 + 16) = v324;
        *(_QWORD *)(a5 + 32) = v325;
        v325 = 0;
        v324 = 0uLL;
        *(_BYTE *)(a5 + 40) = 1;
      }
      *(_BYTE *)(a5 + 48) = 0;
      *(_BYTE *)(a5 + 104) = 0;
      if ((_BYTE)v331)
      {
        v246 = *(_QWORD *)v329;
        *(_QWORD *)(a5 + 64) = v328;
        *(_OWORD *)(a5 + 48) = v327;
        v327 = 0uLL;
        *(_QWORD *)(a5 + 72) = v246;
        *(_OWORD *)(a5 + 80) = *(_OWORD *)&v329[8];
        *(_QWORD *)(a5 + 96) = v330;
        v328 = 0;
        *(_OWORD *)&v329[8] = 0uLL;
        v330 = 0;
        *(_BYTE *)(a5 + 104) = 1;
      }
      *(_BYTE *)(a5 + 112) = 1;
      *(_BYTE *)(a5 + 384) = 0;
      if (v245 && SHIBYTE(v325) < 0)
        operator delete((void *)v324);
    }
    else
    {
      *(_BYTE *)(a5 + 384) = 0;
    }
    if (v282)
    {
      if (v281)
      {
        if (v280 < 0)
          operator delete(v279);
        if (v278 < 0)
          operator delete(v277);
      }
      if (v276 && SHIBYTE(v275) < 0)
        operator delete(v274[0]);
    }
    if (SBYTE7(v359) < 0)
      operator delete(__p[0]);
    goto LABEL_395;
  }
  v27 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v284 + 16))(v284);
  sub_20B41913C((uint64_t)&__dst, a3);
  *((_QWORD *)&__dst + 1) = __dst;
  v326 = v325;
  v28 = v329;
  *(_QWORD *)&v329[8] = *(_QWORD *)v329;
  v333 = v332;
  v336 = v335;
  v338 = v337;
  v343 = v342;
  v346 = v345;
  v348 = v347;
  v350 = v349;
  if (v351)
    v351 = 0;
  v29 = 0;
  __src[0] = 0;
  __src[1] = 0;
  v316 = 0;
  v317[0] = v330;
  v30 = (std::locale::id *)MEMORY[0x24BEDB350];
  v376 = 0uLL;
  v377 = 0;
  v374 = 0uLL;
  v375 = 0;
  v266 = (int8x16_t)vdupq_n_s64(1uLL);
  v267 = *(void **)(MEMORY[0x24BEDB7F8] + 24);
  v268 = (void *)*MEMORY[0x24BEDB7F8];
  v271 = *(void **)(MEMORY[0x24BEDB7F8] + 16);
  v272 = *(void **)(MEMORY[0x24BEDB7F8] + 8);
  v270 = MEMORY[0x24BEDB868] + 64;
  v269 = MEMORY[0x24BEDB848] + 16;
  v273 = a5;
  while (1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)v27 + *(_QWORD *)(*v27 - 24)));
    v31 = std::locale::use_facet((const std::locale *)__p, v30);
    v32 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v31->__vftable[2].~facet_0)(v31, 10);
    std::locale::~locale((std::locale *)__p);
    v33 = sub_20AEC2C84(v27, (uint64_t)&v374, v32);
    if ((*((_BYTE *)v33 + *(_QWORD *)(*v33 - 24) + 32) & 5) != 0)
      break;
    if (SHIBYTE(v375) < 0)
    {
      if (*((_QWORD *)&v374 + 1) >= 2uLL)
      {
        v34 = (__int128 *)v374;
        if (*(_BYTE *)v374 != 35)
          goto LABEL_65;
      }
    }
    else if (SHIBYTE(v375) >= 2 && v374 != 35)
    {
      v34 = &v374;
LABEL_65:
      switch(*(_WORD *)v34)
      {
        case 0x2076:
          v36 = (const char *)&v374;
          if (v375 < 0)
            v36 = (const char *)v374;
          v37 = sscanf(v36 + 2, "%f %f %f %f %f %f", &v369, (char *)&v369 + 4, &v370, &v371, &v372, &v373);
          if (v25 || v37 != 6)
          {
            if (v37 != 3
              && v37 != 6
              && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Mesh/src/TriMeshIO.cpp", 289, (uint64_t)"read_count == 3 || read_count == 6", 34, (uint64_t)"Wrong v fields for reading position", 35, (void (*)(void **))sub_20B532360))
            {
              abort();
            }
            v42 = *((_QWORD *)&__dst + 1);
            if (*((_QWORD *)&__dst + 1) >= (unint64_t)v324)
            {
              *((_QWORD *)&__dst + 1) = sub_20B41EE70((uint64_t)&__dst, &v369, (_DWORD *)&v369 + 1, &v370);
            }
            else
            {
              **((_QWORD **)&__dst + 1) = v369;
              *(_DWORD *)(v42 + 8) = v370;
              *((_QWORD *)&__dst + 1) = v42 + 12;
            }
          }
          else
          {
            v38 = *((_QWORD *)&__dst + 1);
            if (*((_QWORD *)&__dst + 1) >= (unint64_t)v324)
            {
              v39 = sub_20B41EE70((uint64_t)&__dst, &v369, (_DWORD *)&v369 + 1, &v370);
            }
            else
            {
              **((_QWORD **)&__dst + 1) = v369;
              *(_DWORD *)(v38 + 8) = v370;
              v39 = (_DWORD *)(v38 + 12);
            }
            *((_QWORD *)&__dst + 1) = v39;
            v45 = v326;
            if ((unint64_t)v326 >= (unint64_t)v327)
            {
              v326 = sub_20B41EE70((uint64_t)&v325, &v371, &v372, &v373);
            }
            else
            {
              *v326 = v371;
              v45[1] = v372;
              v45[2] = v373;
              v326 = v45 + 3;
            }
          }
          break;
        case 0x6E76:
          if (v375 >= 0)
            v40 = (char *)&v374 + 3;
          else
            v40 = (const char *)(v374 + 3);
          if (sscanf(v40, "%f %f %f", &v369, (char *)&v369 + 4, &v370) != 3
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Mesh/src/TriMeshIO.cpp", 294, (uint64_t)"read_count == 3", 15, (uint64_t)"Wrong vn fields for reading position", 36, (void (*)(void **))sub_20B532360))
          {
            abort();
          }
          v41 = __src[1];
          if (__src[1] >= v316)
          {
            __src[1] = sub_20B41EE70((uint64_t)__src, &v369, (_DWORD *)&v369 + 1, &v370);
          }
          else
          {
            *(_QWORD *)__src[1] = v369;
            v41[2] = v370;
            __src[1] = v41 + 3;
          }
          break;
        case 0x7476:
          if (v375 >= 0)
            v43 = (char *)&v374 + 3;
          else
            v43 = (const char *)(v374 + 3);
          if (sscanf(v43, "%f %f", &v369, (char *)&v369 + 4) != 2
            && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Mesh/src/TriMeshIO.cpp", 298, (uint64_t)"read_count == 2", 15, (uint64_t)"Wrong vt fields for reading position", 36, (void (*)(void **))sub_20B532360))
          {
            abort();
          }
          v44 = v338;
          if ((unint64_t)v338 >= v339)
          {
            v46 = (char *)((char *)v338 - (char *)v337);
            v47 = v338 - v337;
            if ((unint64_t)(v47 + 1) >> 61)
              sub_20AEC60B8();
            v48 = (uint64_t)(v339 - (_QWORD)v337) >> 2;
            if (v48 <= v47 + 1)
              v48 = v47 + 1;
            v49 = 0x1FFFFFFFFFFFFFFFLL;
            if (v339 - (unint64_t)v337 < 0x7FFFFFFFFFFFFFF8)
              v49 = v48;
            if (v49)
            {
              LODWORD(v356[0]) = v49;
              if (v341 == -1)
                sub_20AECFAB8();
              __p[0] = v356;
              v50 = ((uint64_t (*)(void **, _BYTE *))off_24C41B3B8[v341])(__p, v340);
            }
            else
            {
              v50 = 0;
              v51 = 0;
            }
            v58 = (void ***)(v50 + 8 * v47);
            *v58 = v369;
            v59 = v58 + 1;
            v60 = v338;
            v61 = v337;
            if (v338 != v337)
            {
              v62 = (char *)v338 - (char *)v337 - 8;
              if (v62 < 0x58)
                goto LABEL_477;
              if ((unint64_t)((char *)v338 - &v46[v50]) < 0x20)
                goto LABEL_477;
              v63 = (v62 >> 3) + 1;
              v64 = 8 * (v63 & 0x3FFFFFFFFFFFFFFCLL);
              v65 = &v338[v64 / 0xFFFFFFFFFFFFFFF8];
              v58 = (void ***)((char *)v58 - v64);
              v66 = &v46[v50 - 16];
              v67 = v338 - 2;
              v68 = v63 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v69 = *(_OWORD *)v67;
                *((_OWORD *)v66 - 1) = *((_OWORD *)v67 - 1);
                *(_OWORD *)v66 = v69;
                v66 -= 32;
                v67 -= 4;
                v68 -= 4;
              }
              while (v68);
              v60 = v65;
              if (v63 != (v63 & 0x3FFFFFFFFFFFFFFCLL))
              {
LABEL_477:
                do
                {
                  v70 = *--v60;
                  *--v58 = v70;
                }
                while (v60 != v61);
              }
              v60 = v337;
            }
            v337 = v58;
            v338 = v59;
            v71 = v339;
            v339 = v50 + 8 * v51;
            if (v60)
            {
              __p[0] = v60;
              LODWORD(__p[1]) = (v71 - (unint64_t)v60) >> 3;
              if (v341 == -1)
                sub_20AECFAB8();
              v356[0] = __p;
              ((void (*)(void **, _BYTE *))off_24C41B388[v341])(v356, v340);
            }
            v338 = v59;
          }
          else
          {
            *v338 = v369;
            v338 = v44 + 1;
          }
          break;
        case 0x2066:
          v264 = v29;
          v368[0] = v270;
          __p[0] = v272;
          *(void **)((char *)__p + *((_QWORD *)v272 - 3)) = v271;
          __p[1] = 0;
          v35 = (std::ios_base *)((char *)__p + *((_QWORD *)__p[0] - 3));
          std::ios_base::init(v35, &v359);
          v35[1].__vftable = 0;
          v35[1].__fmtflags_ = -1;
          __p[0] = (void *)(MEMORY[0x24BEDB868] + 24);
          v368[0] = MEMORY[0x24BEDB868] + 64;
          std::streambuf::basic_streambuf();
          *(_QWORD *)&v359 = v269;
          *(_OWORD *)v365 = 0u;
          v366 = 0u;
          v367 = 8;
          if (SHIBYTE(v375) < 0)
          {
            sub_20AEC7FCC(v365, (void *)v374, *((size_t *)&v374 + 1));
          }
          else
          {
            *(_OWORD *)v365 = v374;
            *(_QWORD *)&v366 = v375;
          }
          sub_20AEC8D2C((uint64_t)&v359);
          v356[1] = 0;
          v356[0] = 0;
          v357 = 0;
          memset(&v355, 0, sizeof(v355));
          v52 = sub_20B1C68C0((uint64_t *)__p, (uint64_t)v356);
          sub_20B1C68C0(v52, (uint64_t)&v355);
          v53 = (std::string *)v355.__r_.__value_.__r.__words[0];
          if ((v355.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v53 = &v355;
          v54 = HIBYTE(v355.__r_.__value_.__r.__words[2]);
          if ((v355.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v54 = v355.__r_.__value_.__l.__size_;
          v260 = v28;
          if (!v54)
            goto LABEL_261;
          if (v54 >= 8)
          {
            if (v54 < 0x20)
            {
              v55 = 0;
              v57 = 0;
LABEL_139:
              v56 = (std::string *)((char *)v53 + (v54 & 0xFFFFFFFFFFFFFFF8));
              v121 = 0uLL;
              v122 = (int64x2_t)(unint64_t)v55;
              v123 = (int8x8_t *)((char *)v53 + v57);
              v124 = v57 - (v54 & 0xFFFFFFFFFFFFFFF8);
              v125 = 0uLL;
              v126 = 0uLL;
              do
              {
                v127 = *v123++;
                v128 = vmovl_u8((uint8x8_t)vceq_s8(v127, (int8x8_t)0x2F2F2F2F2F2F2F2FLL));
                v129 = vmovl_u16(*(uint16x4_t *)v128.i8);
                v130.i64[0] = v129.u32[0];
                v130.i64[1] = v129.u32[1];
                v131 = (int64x2_t)vandq_s8(v130, v266);
                v130.i64[0] = v129.u32[2];
                v130.i64[1] = v129.u32[3];
                v132 = (int64x2_t)vandq_s8(v130, v266);
                v133 = vmovl_high_u16(v128);
                v130.i64[0] = v133.u32[0];
                v130.i64[1] = v133.u32[1];
                v134 = (int64x2_t)vandq_s8(v130, v266);
                v130.i64[0] = v133.u32[2];
                v130.i64[1] = v133.u32[3];
                v126 = vaddq_s64(v126, (int64x2_t)vandq_s8(v130, v266));
                v125 = vaddq_s64(v125, v134);
                v121 = vaddq_s64(v121, v132);
                v122 = vaddq_s64(v122, v131);
                v124 += 8;
              }
              while (v124);
              v55 = vaddvq_s64(vaddq_s64(vaddq_s64(v122, v125), vaddq_s64(v121, v126)));
              if (v54 == (v54 & 0xFFFFFFFFFFFFFFF8))
                goto LABEL_148;
              goto LABEL_144;
            }
            v72 = 0uLL;
            v57 = v54 & 0xFFFFFFFFFFFFFFE0;
            v73 = 0uLL;
            v74 = (int8x16_t *)&v53->__r_.__value_.__r.__words[2];
            v75 = 0uLL;
            v76 = v54 & 0xFFFFFFFFFFFFFFE0;
            v77 = 0uLL;
            v78 = 0uLL;
            v79 = 0uLL;
            v80 = 0uLL;
            v81 = 0uLL;
            v82 = 0uLL;
            v83 = 0uLL;
            v84 = 0uLL;
            v85 = 0uLL;
            v86 = 0uLL;
            v87 = 0uLL;
            v88 = 0uLL;
            v89 = 0uLL;
            do
            {
              v90.i64[0] = 0x2F2F2F2F2F2F2F2FLL;
              v90.i64[1] = 0x2F2F2F2F2F2F2F2FLL;
              v91 = (uint8x16_t)vceqq_s8(v74[-1], v90);
              v92 = vmovl_u8(*(uint8x8_t *)v91.i8);
              v93 = vmovl_u16(*(uint16x4_t *)v92.i8);
              v94.i64[0] = v93.u32[0];
              v94.i64[1] = v93.u32[1];
              v95 = (int8x16_t)vdupq_n_s64(1uLL);
              v261 = (int64x2_t)vandq_s8(v94, v95);
              v94.i64[0] = v93.u32[2];
              v94.i64[1] = v93.u32[3];
              v96 = (int64x2_t)vandq_s8(v94, v95);
              v97 = vmovl_high_u16(v92);
              v94.i64[0] = v97.u32[0];
              v94.i64[1] = v97.u32[1];
              v98 = (int64x2_t)vandq_s8(v94, v95);
              v99 = vmovl_high_u8(v91);
              v100 = vmovl_u16(*(uint16x4_t *)v99.i8);
              v94.i64[0] = v100.u32[0];
              v94.i64[1] = v100.u32[1];
              v101 = (int64x2_t)vandq_s8(v94, v95);
              v94.i64[0] = v97.u32[2];
              v94.i64[1] = v97.u32[3];
              v102 = (int64x2_t)vandq_s8(v94, v95);
              v94.i64[0] = v100.u32[2];
              v94.i64[1] = v100.u32[3];
              v103 = (int64x2_t)vandq_s8(v94, v95);
              v104 = vmovl_high_u16(v99);
              v94.i64[0] = v104.u32[0];
              v94.i64[1] = v104.u32[1];
              v105 = (int64x2_t)vandq_s8(v94, v95);
              v94.i64[0] = v104.u32[2];
              v94.i64[1] = v104.u32[3];
              v106 = (int64x2_t)vandq_s8(v94, v95);
              v107 = (uint8x16_t)vceqq_s8(*v74, v90);
              v108 = vmovl_u8(*(uint8x8_t *)v107.i8);
              v109 = vmovl_u16(*(uint16x4_t *)v108.i8);
              v94.i64[0] = v109.u32[0];
              v94.i64[1] = v109.u32[1];
              v110 = (int64x2_t)vandq_s8(v94, v95);
              v94.i64[0] = v109.u32[2];
              v94.i64[1] = v109.u32[3];
              v111 = (int64x2_t)vandq_s8(v94, v95);
              v112 = vmovl_high_u16(v108);
              v94.i64[0] = v112.u32[0];
              v94.i64[1] = v112.u32[1];
              v113 = (int64x2_t)vandq_s8(v94, v95);
              v114 = vmovl_high_u8(v107);
              v115 = vmovl_u16(*(uint16x4_t *)v114.i8);
              v94.i64[0] = v115.u32[0];
              v94.i64[1] = v115.u32[1];
              v116 = (int64x2_t)vandq_s8(v94, v95);
              v94.i64[0] = v112.u32[2];
              v94.i64[1] = v112.u32[3];
              v117 = (int64x2_t)vandq_s8(v94, v95);
              v94.i64[0] = v115.u32[2];
              v94.i64[1] = v115.u32[3];
              v118 = (int64x2_t)vandq_s8(v94, v95);
              v119 = vmovl_high_u16(v114);
              v94.i64[0] = v119.u32[0];
              v94.i64[1] = v119.u32[1];
              v120 = (int64x2_t)vandq_s8(v94, v95);
              v94.i64[0] = v119.u32[2];
              v94.i64[1] = v119.u32[3];
              v81 = vaddq_s64(v81, v106);
              v80 = vaddq_s64(v80, v105);
              v79 = vaddq_s64(v79, v103);
              v77 = vaddq_s64(v77, v102);
              v78 = vaddq_s64(v78, v101);
              v75 = vaddq_s64(v75, v98);
              v73 = vaddq_s64(v73, v96);
              v72 = vaddq_s64(v72, v261);
              v89 = vaddq_s64(v89, (int64x2_t)vandq_s8(v94, v95));
              v88 = vaddq_s64(v88, v120);
              v87 = vaddq_s64(v87, v118);
              v85 = vaddq_s64(v85, v117);
              v86 = vaddq_s64(v86, v116);
              v84 = vaddq_s64(v84, v113);
              v83 = vaddq_s64(v83, v111);
              v82 = vaddq_s64(v82, v110);
              v74 += 2;
              v76 -= 32;
            }
            while (v76);
            v55 = vaddvq_s64(vaddq_s64(vaddq_s64(vaddq_s64(vaddq_s64(v82, v72), vaddq_s64(v86, v78)), vaddq_s64(vaddq_s64(v84, v75), vaddq_s64(v88, v80))), vaddq_s64(vaddq_s64(vaddq_s64(v83, v73), vaddq_s64(v87, v79)), vaddq_s64(vaddq_s64(v85, v77), vaddq_s64(v89, v81)))));
            if (v54 == v57)
              goto LABEL_148;
            if ((v54 & 0x18) != 0)
              goto LABEL_139;
            v56 = (std::string *)((char *)v53 + v57);
          }
          else
          {
            v55 = 0;
            v56 = v53;
          }
LABEL_144:
          v135 = (unsigned __int8 *)v53 + v54;
          do
          {
            v136 = v56->__r_.__value_.__s.__data_[0];
            v56 = (std::string *)((char *)v56 + 1);
            if (v136 == 47)
              ++v55;
          }
          while (v56 != (std::string *)v135);
LABEL_148:
          if (v55)
          {
            if (v55 != 2)
            {
              v206 = 0;
              v255 = 3;
              goto LABEL_272;
            }
            v137 = 0;
            v256 = v25;
            while (1)
            {
              v259 = v137;
              v265 = v29;
              if ((v355.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v138 = HIBYTE(v355.__r_.__value_.__r.__words[2]);
              else
                v138 = v355.__r_.__value_.__l.__size_;
              if ((v355.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v139 = &v355;
              else
                v139 = (std::string *)v355.__r_.__value_.__r.__words[0];
              v140 = (char *)v139 + v138;
              if ((uint64_t)v138 >= 1)
              {
                v141 = v138;
                v142 = v139;
                do
                {
                  v143 = memchr(v142, 47, v141);
                  if (!v143)
                    break;
                  if (*v143 == 47)
                    goto LABEL_163;
                  v142 = (std::string *)(v143 + 1);
                  v141 = v140 - (_BYTE *)v142;
                }
                while (v140 - (_BYTE *)v142 > 0);
              }
              v143 = (char *)v139 + v138;
LABEL_163:
              v144 = v143 - (_BYTE *)v139;
              if (v143 == v140)
                v144 = -1;
              v145 = v144 + 1;
              v262 = v144;
              if (v138 >= v144 + 1)
              {
                v147 = (char *)v139 + v145;
                v148 = v138 - v145;
                if ((uint64_t)(v138 - v145) >= 1)
                {
                  do
                  {
                    v149 = memchr(v147, 47, v148);
                    if (!v149)
                      break;
                    if (*v149 == 47)
                      goto LABEL_172;
                    v147 = v149 + 1;
                    v148 = v140 - v147;
                  }
                  while (v140 - v147 > 0);
                }
                v149 = (char *)v139 + v138;
LABEL_172:
                v146 = v149 == v140 ? -1 : v149 - (_BYTE *)v139;
                v144 = v262;
              }
              else
              {
                v146 = -1;
              }
              if (v138 >= v144)
                v138 = v144;
              if (v138 > 0x7FFFFFFFFFFFFFF7)
                sub_20AEC0138();
              if (v138 >= 0x17)
                break;
              *((_BYTE *)&__str.__r_.__value_.__s + 23) = v138;
              p_str = &__str;
              if (v138)
                goto LABEL_185;
LABEL_186:
              p_str[v138] = 0;
              v153 = std::stoull(&__str, 0, 10);
              v258 = v145;
              if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
                operator delete(__str.__r_.__value_.__l.__data_);
              v154 = v146 + 1;
              if (SHIBYTE(v355.__r_.__value_.__r.__words[2]) < 0)
              {
                v155 = v355.__r_.__value_.__l.__size_;
                if (v355.__r_.__value_.__l.__size_ < v154)
LABEL_465:
                  sub_20AEC73F8();
                v156 = (std::string *)v355.__r_.__value_.__r.__words[0];
              }
              else
              {
                v155 = HIBYTE(v355.__r_.__value_.__r.__words[2]);
                if (v154 > HIBYTE(v355.__r_.__value_.__r.__words[2]))
                  goto LABEL_465;
                v156 = &v355;
              }
              v157 = v155 - v154;
              if (v155 - v154 > 0x7FFFFFFFFFFFFFF7)
                sub_20AEC0138();
              if (v157 >= 0x17)
              {
                v159 = (v157 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v157 | 7) != 0x17)
                  v159 = v157 | 7;
                v160 = v159 + 1;
                v158 = operator new(v159 + 1);
                __str.__r_.__value_.__r.__words[2] = v160 | 0x8000000000000000;
                __str.__r_.__value_.__r.__words[0] = (std::string::size_type)v158;
                __str.__r_.__value_.__l.__size_ = v157;
                v25 = v256;
LABEL_200:
                memmove(v158, (char *)v156 + v154, v157);
                goto LABEL_201;
              }
              *((_BYTE *)&__str.__r_.__value_.__s + 23) = v155 - v154;
              v158 = &__str;
              v25 = v256;
              if (v155 != v154)
                goto LABEL_200;
LABEL_201:
              *((_BYTE *)v158 + v157) = 0;
              v161 = std::stoull(&__str, 0, 10);
              v29 = v265;
              v162 = v259;
              if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
                operator delete(__str.__r_.__value_.__l.__data_);
              v163 = v146 - v262;
              v257 = v161;
              if (v146 - v262 >= 2)
              {
                a5 = v273;
                if (SHIBYTE(v355.__r_.__value_.__r.__words[2]) < 0)
                {
                  v164 = v355.__r_.__value_.__l.__size_;
                  if (v355.__r_.__value_.__l.__size_ < v258)
LABEL_467:
                    sub_20AEC73F8();
                  v165 = (std::string *)v355.__r_.__value_.__r.__words[0];
                }
                else
                {
                  v164 = HIBYTE(v355.__r_.__value_.__r.__words[2]);
                  if (v258 > HIBYTE(v355.__r_.__value_.__r.__words[2]))
                    goto LABEL_467;
                  v165 = &v355;
                }
                v167 = v163 - 1;
                v168 = v164 - v258;
                if (v168 >= v167)
                  v169 = v167;
                else
                  v169 = v168;
                if (v169 > 0x7FFFFFFFFFFFFFF7)
                  sub_20AEC0138();
                if (v169 >= 0x17)
                {
                  v171 = (v169 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v169 | 7) != 0x17)
                    v171 = v169 | 7;
                  v172 = v171 + 1;
                  v170 = operator new(v171 + 1);
                  __str.__r_.__value_.__r.__words[2] = v172 | 0x8000000000000000;
                  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)v170;
                  __str.__r_.__value_.__l.__size_ = v169;
                  a5 = v273;
                  v162 = v259;
                }
                else
                {
                  *((_BYTE *)&__str.__r_.__value_.__s + 23) = v169;
                  v170 = &__str;
                  if (!v169)
                  {
LABEL_221:
                    v170[v169] = 0;
                    v166 = std::stoull(&__str, 0, 10);
                    v29 = v265;
                    v161 = v257;
                    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
                    {
                      v173 = v166;
                      operator delete(__str.__r_.__value_.__l.__data_);
                      v166 = v173;
                      v29 = v265;
                    }
                    goto LABEL_223;
                  }
                }
                memmove(v170, (char *)v165 + v258, v169);
                goto LABEL_221;
              }
              v166 = 0;
              a5 = v273;
LABEL_223:
              if (HIDWORD(v153) || HIDWORD(v161) || HIDWORD(v166))
              {
                v206 = 0;
                v255 = 2;
                goto LABEL_272;
              }
              v263 = v166;
              if (v153 == v161)
                goto LABEL_258;
              v175 = (char *)*((_QWORD *)&v376 + 1);
              v174 = v376;
              v176 = (*((_QWORD *)&v376 + 1) - (_QWORD)v376) >> 2;
              if (v153 <= v176)
                goto LABEL_257;
              v177 = v377;
              do
              {
                if (v175 < v177)
                {
                  *(_DWORD *)v175 = v176;
                  v178 = v175 + 4;
                  goto LABEL_230;
                }
                v179 = (char *)v376;
                v180 = &v175[-v376];
                v181 = (uint64_t)&v175[-v376] >> 2;
                v182 = v181 + 1;
                if ((unint64_t)(v181 + 1) >> 62)
                  sub_20AF6E1D0();
                if ((uint64_t)&v177[-v376] >> 1 > v182)
                  v182 = (uint64_t)&v177[-v376] >> 1;
                if ((unint64_t)&v177[-v376] >= 0x7FFFFFFFFFFFFFFCLL)
                  v183 = 0x3FFFFFFFFFFFFFFFLL;
                else
                  v183 = v182;
                if (v183)
                {
                  if (v183 >> 62)
                    sub_20AEC60CC();
                  v184 = operator new(4 * v183);
                  v185 = &v184[4 * v181];
                  *v185 = v176;
                  v178 = (char *)(v185 + 1);
                  v186 = v175 - v179;
                  if (v175 == v179)
                  {
LABEL_247:
                    v177 = &v184[4 * v183];
                    *(_QWORD *)&v376 = v185;
                    v377 = v177;
                    if (!v179)
                      goto LABEL_230;
LABEL_248:
                    operator delete(v179);
                    goto LABEL_230;
                  }
                }
                else
                {
                  v184 = 0;
                  v185 = (_DWORD *)(4 * v181);
                  v190 = (_DWORD *)(4 * v181);
                  *v190 = v176;
                  v178 = (char *)(v190 + 1);
                  v186 = v175 - v179;
                  if (v175 == v179)
                    goto LABEL_247;
                }
                v187 = v186 - 4;
                if (v187 < 0xBC
                  || (v191 = (v175 - 4 - v179) & 0xFFFFFFFFFFFFFFFCLL,
                      &v180[(_QWORD)v184 - 4 - v191] > &v180[(_QWORD)v184 - 4])
                  || &v175[-v191 - 4] > v175 - 4
                  || (unint64_t)(v179 - v184) < 0x20)
                {
                  v188 = v175;
                  do
                  {
LABEL_243:
                    v189 = *((_DWORD *)v188 - 1);
                    v188 -= 4;
                    *--v185 = v189;
                  }
                  while (v188 != v179);
                  goto LABEL_244;
                }
                v192 = (v187 >> 2) + 1;
                v193 = 4 * (v192 & 0x7FFFFFFFFFFFFFF8);
                v188 = &v175[-v193];
                v185 = (_DWORD *)((char *)v185 - v193);
                v194 = &v180[(_QWORD)v184 - 16];
                v195 = v175 - 16;
                v196 = v192 & 0x7FFFFFFFFFFFFFF8;
                do
                {
                  v197 = *(_OWORD *)v195;
                  *((_OWORD *)v194 - 1) = *((_OWORD *)v195 - 1);
                  *(_OWORD *)v194 = v197;
                  v194 -= 32;
                  v195 -= 32;
                  v196 -= 8;
                }
                while (v196);
                if (v192 != (v192 & 0x7FFFFFFFFFFFFFF8))
                  goto LABEL_243;
LABEL_244:
                v177 = &v184[4 * v183];
                *(_QWORD *)&v376 = v185;
                v377 = v177;
                if (v179)
                  goto LABEL_248;
LABEL_230:
                *((_QWORD *)&v376 + 1) = v178;
                v176 = (v176 + 1);
                v175 = v178;
              }
              while (v153 > v176);
              v174 = v376;
              v25 = v256;
              v162 = v259;
LABEL_257:
              *(_DWORD *)(v174 + 4 * v153 - 4) = v257 - 1;
              v29 = 1;
              a5 = v273;
LABEL_258:
              v198 = 2 * v162;
              *(_QWORD *)&v381[v198] = v153;
              *(uint64_t *)((char *)&v378 + v198 * 4) = v263;
              sub_20B1C68C0((uint64_t *)__p, (uint64_t)&v355);
              v137 = v162 + 1;
              if (v137 == 3)
              {
                LODWORD(__str.__r_.__value_.__l.__data_) = v381[0] - 1;
                v199 = v382 - 1;
                v353 = v382 - 1;
                v200 = v383 - 1;
                v352 = v383 - 1;
                v201 = v333;
                if ((unint64_t)v333 >= v334)
                {
                  v202 = sub_20B41F010((uint64_t)&v332, &__str, &v353, &v352);
                }
                else
                {
                  *v333 = v381[0] - 1;
                  v201[1] = v199;
                  v202 = v201 + 3;
                  v201[2] = v200;
                }
                v333 = v202;
                if (v378 != v379)
                {
                  LODWORD(__str.__r_.__value_.__l.__data_) = v378 - 1;
                  v210 = v379 - 1;
                  v353 = v379 - 1;
                  v211 = v380 - 1;
                  v352 = v380 - 1;
                  v212 = v343;
                  if ((unint64_t)v343 >= v344)
                  {
                    v213 = sub_20B41F010((uint64_t)&v342, &__str, &v353, &v352);
                  }
                  else
                  {
                    *v343 = v378 - 1;
                    v212[1] = v210;
                    v213 = v212 + 3;
                    v212[2] = v211;
                  }
                  v343 = v213;
                }
LABEL_270:
                v206 = 1;
                goto LABEL_272;
              }
            }
            v151 = (v138 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v138 | 7) != 0x17)
              v151 = v138 | 7;
            v152 = v151 + 1;
            p_str = operator new(v151 + 1);
            __str.__r_.__value_.__r.__words[2] = v152 | 0x8000000000000000;
            __str.__r_.__value_.__r.__words[0] = (std::string::size_type)p_str;
            __str.__r_.__value_.__l.__size_ = v138;
LABEL_185:
            memmove(p_str, v139, v138);
            goto LABEL_186;
          }
LABEL_261:
          v203 = std::stoull(&v355, 0, 10);
          sub_20B1C68C0((uint64_t *)__p, (uint64_t)&v355);
          v204 = std::stoull(&v355, 0, 10);
          sub_20B1C68C0((uint64_t *)__p, (uint64_t)&v355);
          v205 = std::stoull(&v355, 0, 10);
          v206 = 0;
          if (!HIDWORD(v203) && !HIDWORD(v204) && !HIDWORD(v205))
          {
            v381[0] = v203 - 1;
            LODWORD(v378) = v204 - 1;
            v207 = v205 - 1;
            LODWORD(__str.__r_.__value_.__l.__data_) = v205 - 1;
            v208 = v333;
            if ((unint64_t)v333 >= v334)
            {
              v209 = sub_20B41F010((uint64_t)&v332, v381, &v378, &__str);
            }
            else
            {
              *v333 = v203 - 1;
              v208[1] = v204 - 1;
              v209 = v208 + 3;
              v208[2] = v207;
            }
            v29 = v264;
            v333 = v209;
            goto LABEL_270;
          }
          v255 = 2;
          v29 = v264;
LABEL_272:
          if (SHIBYTE(v355.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v355.__r_.__value_.__l.__data_);
          if (SHIBYTE(v357) < 0)
            operator delete(v356[0]);
          __p[0] = v268;
          *(void **)((char *)__p + *((_QWORD *)v268 - 3)) = v267;
          *(_QWORD *)&v359 = MEMORY[0x24BEDB848] + 16;
          if (SBYTE7(v366) < 0)
            operator delete(v365[0]);
          std::streambuf::~streambuf();
          std::istream::~istream();
          MEMORY[0x20BD35758](v368);
          if ((v206 & 1) == 0)
          {
            v239 = v255;
            goto LABEL_319;
          }
          v28 = v260;
          break;
      }
    }
  }
  if ((v29 & 1) == 0)
  {
    v236 = *(_OWORD *)__src;
    *(_OWORD *)__src = *(_OWORD *)v329;
    *(_OWORD *)v329 = v236;
    v237 = v316;
    v238 = v317[0];
    v316 = *(void **)&v329[16];
    v317[0] = v330;
    *(_QWORD *)&v329[16] = v237;
    v330 = v238;
    goto LABEL_314;
  }
  if (*((_QWORD *)&__dst + 1) == (_QWORD)__dst)
  {
LABEL_314:
    if (v325 != v326)
      LODWORD(v328) = 1;
    a5 = v273;
    if (*(_QWORD *)v329 != *(_QWORD *)&v329[8])
      v331 = 1;
    v239 = ~(2 * *(_DWORD *)((char *)v27 + *(_QWORD *)(*v27 - 24) + 32)) & 4;
    goto LABEL_319;
  }
  v214 = 0;
  v215 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)&__dst + 1) - __dst) >> 2);
  v216 = v376;
  v217 = (uint64_t)(*((_QWORD *)&v376 + 1) - v376) >> 2;
  while (1)
  {
    v220 = v214;
    if (v214 < v217)
      v220 = *(_DWORD *)(v216 + 4 * v214);
    if (v220 >= 0xAAAAAAAAAAAAAAABLL * (((char *)__src[1] - (char *)__src[0]) >> 2))
      break;
    v221 = (char *)__src[0] + 12 * v220;
    v222 = *(_QWORD **)&v329[8];
    if (*(_QWORD *)&v329[8] < *(_QWORD *)&v329[16])
    {
      v218 = *(_QWORD *)v221;
      *(_DWORD *)(*(_QWORD *)&v329[8] + 8) = *((_DWORD *)v221 + 2);
      *v222 = v218;
      v219 = (char *)v222 + 12;
    }
    else
    {
      v223 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)&v329[8] - *(_QWORD *)v329) >> 2);
      v224 = v223 + 1;
      if (v223 + 1 > 0x1555555555555555)
        sub_20AEC60B8();
      if (0x5555555555555556 * ((uint64_t)(*(_QWORD *)&v329[16] - *(_QWORD *)v329) >> 2) > v224)
        v224 = 0x5555555555555556 * ((uint64_t)(*(_QWORD *)&v329[16] - *(_QWORD *)v329) >> 2);
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)&v329[16] - *(_QWORD *)v329) >> 2) >= 0xAAAAAAAAAAAAAAALL)
        v225 = 0x1555555555555555;
      else
        v225 = v224;
      if (v225)
      {
        LODWORD(v369) = v225;
        if (HIDWORD(v330) == -1)
          sub_20AECFAB8();
        __p[0] = &v369;
        v226 = ((uint64_t (*)(void **, uint64_t *))off_24C41B398[HIDWORD(v330)])(__p, &v330);
      }
      else
      {
        v226 = 0;
        v227 = 0;
      }
      v228 = v226 + 12 * v223;
      v229 = *(_QWORD *)v221;
      *(_DWORD *)(v228 + 8) = *((_DWORD *)v221 + 2);
      *(_QWORD *)v228 = v229;
      v230 = *(_DWORD **)&v329[8];
      v231 = *(_DWORD **)v329;
      v232 = v228;
      if (*(_QWORD *)&v329[8] != *(_QWORD *)v329)
      {
        do
        {
          v233 = *(_QWORD *)(v230 - 3);
          v230 -= 3;
          v234 = v230[2];
          *(_QWORD *)(v232 - 12) = v233;
          v232 -= 12;
          *(_DWORD *)(v232 + 8) = v234;
        }
        while (v230 != v231);
        v230 = *(_DWORD **)v329;
      }
      v219 = (char *)(v228 + 12);
      *(_QWORD *)v329 = v232;
      *(_QWORD *)&v329[8] = v228 + 12;
      v235 = *(_QWORD *)&v329[16];
      *(_QWORD *)&v329[16] = v226 + 12 * v227;
      if (v230)
      {
        __p[0] = v230;
        LODWORD(__p[1]) = -1431655765 * ((unint64_t)(v235 - (_QWORD)v230) >> 2);
        if (HIDWORD(v330) == -1)
          sub_20AECFAB8();
        v369 = __p;
        ((void (*)(void ***, uint64_t *))off_24C41B3A8[HIDWORD(v330)])(&v369, &v330);
      }
    }
    *(_QWORD *)&v329[8] = v219;
    if (++v214 == v215)
      goto LABEL_314;
  }
  v239 = 3;
  a5 = v273;
LABEL_319:
  if (SHIBYTE(v375) < 0)
    operator delete((void *)v374);
  if ((_QWORD)v376)
    operator delete((void *)v376);
  if (__src[0])
  {
    __src[1] = __src[0];
    __p[0] = __src[0];
    LODWORD(__p[1]) = -1431655765 * (((unint64_t)v316 - (unint64_t)__src[0]) >> 2);
    if (HIDWORD(v317[0]) == -1)
      sub_20AECFAB8();
    *(_QWORD *)&v376 = __p;
    ((void (*)(__int128 *, _QWORD *))off_24C41B3A8[HIDWORD(v317[0])])(&v376, v317);
  }
  if (v239)
  {
    LOBYTE(__src[0]) = 0;
    v322 = 0;
    sub_20B41B4BC((uint64_t)__p, v239, (__int128 *)__src);
    *(_OWORD *)a5 = *(_OWORD *)__p;
    *(_BYTE *)(a5 + 16) = 0;
    *(_BYTE *)(a5 + 112) = 0;
    if ((_BYTE)v367)
    {
      *(_BYTE *)(a5 + 40) = 0;
      v240 = v361;
      if (v361)
      {
        *(_OWORD *)(a5 + 16) = v359;
        *(_QWORD *)(a5 + 32) = v360;
        v360 = 0;
        v359 = 0uLL;
        *(_BYTE *)(a5 + 40) = 1;
      }
      *(_BYTE *)(a5 + 48) = 0;
      *(_BYTE *)(a5 + 104) = 0;
      if (BYTE8(v366))
      {
        *(_OWORD *)(a5 + 48) = v362;
        v241 = v364;
        *(_QWORD *)(a5 + 64) = v363;
        *(_QWORD *)(a5 + 72) = v241;
        *(_OWORD *)(a5 + 80) = *(_OWORD *)v365;
        *(_QWORD *)(a5 + 96) = v366;
        *(_BYTE *)(a5 + 104) = 1;
      }
      *(_BYTE *)(a5 + 112) = 1;
      *(_BYTE *)(a5 + 384) = 0;
      if (v240 && SHIBYTE(v360) < 0)
        operator delete((void *)v359);
    }
    else
    {
      *(_BYTE *)(a5 + 384) = 0;
    }
    if (v322)
    {
      if (v321)
      {
        if (v320 < 0)
          operator delete(v319);
        if (v318 < 0)
          operator delete((void *)v317[1]);
      }
      if (LOBYTE(v317[0]) && SHIBYTE(v316) < 0)
        operator delete(__src[0]);
    }
  }
  else
  {
    sub_20B1FA014(a5, (uint64_t)&__dst);
    *(_BYTE *)(a5 + 384) = 1;
  }
  sub_20B088C38((uint64_t *)&__dst);
LABEL_395:
  v247 = v285;
  if (v285)
  {
    p_shared_owners = (unint64_t *)&v285->__shared_owners_;
    do
      v249 = __ldaxr(p_shared_owners);
    while (__stlxr(v249 - 1, p_shared_owners));
    if (!v249)
    {
      ((void (*)(std::__shared_weak_count *))v247->__on_zero_shared)(v247);
      std::__shared_weak_count::__release_weak(v247);
    }
  }
LABEL_444:
  if (SHIBYTE(v313.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v313.__r_.__value_.__l.__data_);
}

void sub_20B41EAC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
  uint64_t v62;
  void *v64;

  if (SLOBYTE(STACK[0x557]) < 0)
  {
    operator delete((void *)STACK[0x540]);
    if ((SLOBYTE(STACK[0x56F]) & 0x80000000) == 0)
    {
LABEL_7:
      sub_20B41EDC8((uint64_t)&STACK[0x570]);
      if (SLOBYTE(STACK[0x6AF]) < 0)
        operator delete((void *)STACK[0x698]);
      v64 = *(void **)(v62 - 240);
      if (v64)
      {
        *(_QWORD *)(v62 - 232) = v64;
        operator delete(v64);
      }
      sub_20B24B87C((uint64_t *)&STACK[0x330]);
      sub_20B088C38((uint64_t *)&STACK[0x3A0]);
      sub_20B422408((uint64_t)&a62);
      if (SLOBYTE(STACK[0x327]) < 0)
      {
        operator delete((void *)STACK[0x310]);
        _Unwind_Resume(a1);
      }
      _Unwind_Resume(a1);
    }
  }
  else if ((SLOBYTE(STACK[0x56F]) & 0x80000000) == 0)
  {
    goto LABEL_7;
  }
  operator delete((void *)STACK[0x558]);
  goto LABEL_7;
}

uint64_t sub_20B41EDC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x24BEDB7F8];
  v3 = *MEMORY[0x24BEDB7F8];
  *(_QWORD *)a1 = *MEMORY[0x24BEDB7F8];
  *(_QWORD *)(a1 + *(_QWORD *)(v3 - 24)) = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEDB848] + 16;
  if (*(char *)(a1 + 103) < 0)
    operator delete(*(void **)(a1 + 80));
  std::streambuf::~streambuf();
  std::istream::~istream();
  MEMORY[0x20BD35758](a1 + 120);
  return a1;
}

void sub_20B41EE4C(std::error_category *a1)
{
  std::error_category::~error_category(a1);
  JUMPOUT(0x20BD3583CLL);
}

_DWORD *sub_20B41EE70(uint64_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4)
{
  uint64_t v5;
  _QWORD **v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD **v23;
  int v24;
  _QWORD *v25;

  v5 = 0x1555555555555555;
  v6 = *(_QWORD ***)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *(_QWORD *)a1) >> 2);
  v9 = v8 + 1;
  if (v8 + 1 > 0x1555555555555555)
    sub_20AEC60B8();
  if (0x5555555555555556 * ((uint64_t)(*(_QWORD *)(a1 + 16) - (_QWORD)v6) >> 2) > v9)
    v9 = 0x5555555555555556 * ((uint64_t)(*(_QWORD *)(a1 + 16) - (_QWORD)v6) >> 2);
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - (_QWORD)v6) >> 2) < 0xAAAAAAAAAAAAAAALL)
    v5 = v9;
  if (v5)
  {
    LODWORD(v25) = v5;
    v13 = *(unsigned int *)(a1 + 28);
    if ((_DWORD)v13 == -1)
      sub_20AECFAB8();
    v23 = &v25;
    v14 = ((uint64_t (*)(_QWORD ***, uint64_t))off_24C41B398[v13])(&v23, a1 + 24);
    v6 = *(_QWORD ***)a1;
    v7 = *(_QWORD *)(a1 + 8);
  }
  else
  {
    v14 = 0;
    v15 = 0;
  }
  v16 = (_DWORD *)(v14 + 12 * v8);
  *v16 = *a2;
  v16[1] = *a3;
  v16[2] = *a4;
  v17 = v16 + 3;
  if ((_QWORD **)v7 != v6)
  {
    do
    {
      v18 = *(_QWORD *)(v7 - 12);
      v7 -= 12;
      v19 = *(_DWORD *)(v7 + 8);
      *(_QWORD *)(v16 - 3) = v18;
      v16 -= 3;
      v16[2] = v19;
    }
    while ((_QWORD **)v7 != v6);
    v6 = *(_QWORD ***)a1;
  }
  *(_QWORD *)a1 = v16;
  *(_QWORD *)(a1 + 8) = v17;
  v20 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v14 + 12 * v15;
  if (v6)
  {
    v23 = v6;
    v24 = -1431655765 * ((unint64_t)(v20 - (_QWORD)v6) >> 2);
    v21 = *(unsigned int *)(a1 + 28);
    if ((_DWORD)v21 == -1)
      sub_20AECFAB8();
    v25 = &v23;
    ((void (*)(_QWORD **, uint64_t))off_24C41B3A8[v21])(&v25, a1 + 24);
  }
  return v17;
}

_DWORD *sub_20B41F010(uint64_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4)
{
  uint64_t v5;
  _QWORD **v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD **v23;
  int v24;
  _QWORD *v25;

  v5 = 0x1555555555555555;
  v6 = *(_QWORD ***)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *(_QWORD *)a1) >> 2);
  v9 = v8 + 1;
  if (v8 + 1 > 0x1555555555555555)
    sub_20AEC60B8();
  if (0x5555555555555556 * ((uint64_t)(*(_QWORD *)(a1 + 16) - (_QWORD)v6) >> 2) > v9)
    v9 = 0x5555555555555556 * ((uint64_t)(*(_QWORD *)(a1 + 16) - (_QWORD)v6) >> 2);
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - (_QWORD)v6) >> 2) < 0xAAAAAAAAAAAAAAALL)
    v5 = v9;
  if (v5)
  {
    LODWORD(v25) = v5;
    v13 = *(unsigned int *)(a1 + 28);
    if ((_DWORD)v13 == -1)
      sub_20AECFAB8();
    v23 = &v25;
    v14 = ((uint64_t (*)(_QWORD ***, uint64_t))off_24C41B3C8[v13])(&v23, a1 + 24);
    v6 = *(_QWORD ***)a1;
    v7 = *(_QWORD *)(a1 + 8);
  }
  else
  {
    v14 = 0;
    v15 = 0;
  }
  v16 = (_DWORD *)(v14 + 12 * v8);
  *v16 = *a2;
  v16[1] = *a3;
  v16[2] = *a4;
  v17 = v16 + 3;
  if ((_QWORD **)v7 != v6)
  {
    do
    {
      v18 = *(_QWORD *)(v7 - 12);
      v7 -= 12;
      v19 = *(_DWORD *)(v7 + 8);
      *(_QWORD *)(v16 - 3) = v18;
      v16 -= 3;
      v16[2] = v19;
    }
    while ((_QWORD **)v7 != v6);
    v6 = *(_QWORD ***)a1;
  }
  *(_QWORD *)a1 = v16;
  *(_QWORD *)(a1 + 8) = v17;
  v20 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v14 + 12 * v15;
  if (v6)
  {
    v23 = v6;
    v24 = -1431655765 * ((unint64_t)(v20 - (_QWORD)v6) >> 2);
    v21 = *(unsigned int *)(a1 + 28);
    if ((_DWORD)v21 == -1)
      sub_20AECFAB8();
    v25 = &v23;
    ((void (*)(_QWORD **, uint64_t))off_24C41B378[v21])(&v25, a1 + 24);
  }
  return v17;
}

void sub_20B41F1B0(uint64_t a1, int *a2)
{
  uint64_t v4;
  int v5;
  size_t v6;
  void **v7;
  unint64_t v8;
  unint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *__dst[2];
  unint64_t v19;
  _QWORD v20[5];
  _QWORD *v21;

  v4 = operator new();
  *(_OWORD *)v4 = 0u;
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_OWORD *)(v4 + 80) = 0u;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 128) = 0u;
  *(_OWORD *)(v4 + 144) = 0u;
  *(_OWORD *)(v4 + 160) = 0u;
  *(_OWORD *)(v4 + 176) = 0u;
  *(_OWORD *)(v4 + 192) = 0u;
  *(_OWORD *)(v4 + 208) = 0u;
  *(_OWORD *)(v4 + 224) = 0u;
  *(_OWORD *)(v4 + 240) = 0u;
  *(_OWORD *)(v4 + 256) = 0u;
  *(_QWORD *)(v4 + 272) = 0;
  sub_20AEC0BD8(v4);
  v20[0] = v4;
  sub_20AEC01D0((_QWORD *)(v4 + 16), (uint64_t)(&off_24C41B340)[2 * *a2], (uint64_t)(&off_24C41B340)[2 * *a2 + 1]);
  v5 = *(_DWORD *)(v4 + 120);
  if ((v5 & 0x10) != 0)
  {
    v8 = *(_QWORD *)(v4 + 112);
    v9 = *(_QWORD *)(v4 + 72);
    if (v8 < v9)
    {
      *(_QWORD *)(v4 + 112) = v9;
      v8 = v9;
    }
    v10 = *(const void **)(v4 + 64);
    v6 = v8 - (_QWORD)v10;
    if (v8 - (unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v5 & 8) == 0)
    {
      v6 = 0;
      HIBYTE(v19) = 0;
      v7 = __dst;
      goto LABEL_14;
    }
    v10 = *(const void **)(v4 + 40);
    v6 = *(_QWORD *)(v4 + 56) - (_QWORD)v10;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_20AEC0138();
  }
  if (v6 >= 0x17)
  {
    v11 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v11 = v6 | 7;
    v12 = v11 + 1;
    v7 = (void **)operator new(v11 + 1);
    __dst[1] = (void *)v6;
    v19 = v12 | 0x8000000000000000;
    __dst[0] = v7;
    goto LABEL_13;
  }
  HIBYTE(v19) = v6;
  v7 = __dst;
  if (v6)
LABEL_13:
    memmove(v7, v10, v6);
LABEL_14:
  *((_BYTE *)v7 + v6) = 0;
  v13 = v20[0];
  if (v20[0])
  {
    v14 = MEMORY[0x24BEDB7F0];
    v15 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v20[0] = *MEMORY[0x24BEDB7F0];
    v16 = *(_QWORD *)(v14 + 72);
    *(_QWORD *)(v13 + *(_QWORD *)(v15 - 24)) = *(_QWORD *)(v14 + 64);
    *(_QWORD *)(v13 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v13 + 16) = v16;
    if (*(char *)(v13 + 111) < 0)
      operator delete(*(void **)(v13 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v13 + 128);
    MEMORY[0x20BD3583C](v13, 0x10B2C40EED050F3);
  }
  v20[0] = a1;
  v20[1] = __dst;
  v20[2] = a1;
  v20[3] = __dst;
  v20[4] = __dst;
  v17 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v17 == -1)
    sub_20AECFAB8();
  v21 = v20;
  ((void (*)(_QWORD **, uint64_t))off_24C41B3F0[v17])(&v21, a1);
  if (SHIBYTE(v19) < 0)
    operator delete(__dst[0]);
}

void sub_20B41F410(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20B41F434(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B41F450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B52CE84((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B41F464(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  int64_t v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  __int128 *v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  int v67;
  int v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  unint64_t v76;
  uint64_t v77;
  int64_t v78;
  unint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _OWORD *v85;
  __int128 *v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  char *v99;
  int v100;
  int v101;
  _QWORD *v103;
  int v104;
  _QWORD **v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;

  v4 = (a2[1] - *a2) >> 2;
  HIDWORD(v109) = 0;
  v107 = 0;
  v108 = 0;
  v106 = 0;
  sub_20B4206B4((uint64_t)&v106, 0xAAAAAAAAAAAAAAABLL * v4);
  v5 = *a2;
  v6 = a2[1];
  if (*a2 == v6)
  {
    v7 = (unint64_t)v107;
  }
  else
  {
    v7 = (unint64_t)v107;
    do
    {
      v9 = *(_DWORD *)(v5 + 8);
      v103 = *(_QWORD **)v5;
      v104 = v9;
      if (v7 < (unint64_t)v108)
      {
        v8 = (uint64_t)v103;
        *(_DWORD *)(v7 + 8) = v104;
        *(_QWORD *)v7 = v8;
        v7 += 12;
      }
      else
      {
        v7 = sub_20B420814((unint64_t *)&v106, (uint64_t *)&v103);
      }
      v107 = (char *)v7;
      v5 += 12;
    }
    while (v5 != v6);
  }
  *(_QWORD *)a1 = v106;
  *(_QWORD *)(a1 + 8) = v7;
  v10 = v109;
  *(_QWORD *)(a1 + 16) = v108;
  *(_QWORD *)(a1 + 24) = v10;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 16);
  v11 = 0xAAAAAAAAAAAAAAABLL * ((a2[5] - a2[4]) >> 2);
  HIDWORD(v109) = 0;
  v107 = 0;
  v108 = 0;
  v106 = 0;
  sub_20B4206B4((uint64_t)&v106, v11);
  v12 = a2[4];
  v13 = a2[5];
  if (v12 == v13)
  {
    v14 = (unint64_t)v107;
  }
  else
  {
    v14 = (unint64_t)v107;
    do
    {
      v16 = *(_DWORD *)(v12 + 8);
      v103 = *(_QWORD **)v12;
      v104 = v16;
      if (v14 < (unint64_t)v108)
      {
        v15 = (uint64_t)v103;
        *(_DWORD *)(v14 + 8) = v104;
        *(_QWORD *)v14 = v15;
        v14 += 12;
      }
      else
      {
        v14 = sub_20B420814((unint64_t *)&v106, (uint64_t *)&v103);
      }
      v107 = (char *)v14;
      v12 += 12;
    }
    while (v12 != v13);
  }
  *(_QWORD *)(a1 + 40) = v106;
  *(_QWORD *)(a1 + 48) = v14;
  v17 = v109;
  *(_QWORD *)(a1 + 56) = v108;
  *(_QWORD *)(a1 + 64) = v17;
  *(_DWORD *)(a1 + 72) = *((_DWORD *)a2 + 26);
  v18 = 0xAAAAAAAAAAAAAAABLL * ((a2[10] - a2[9]) >> 2);
  HIDWORD(v109) = 0;
  v107 = 0;
  v108 = 0;
  v106 = 0;
  sub_20B4206B4((uint64_t)&v106, v18);
  v19 = a2[9];
  v20 = a2[10];
  if (v19 == v20)
  {
    v21 = (unint64_t)v107;
  }
  else
  {
    v21 = (unint64_t)v107;
    do
    {
      v23 = *(_DWORD *)(v19 + 8);
      v103 = *(_QWORD **)v19;
      v104 = v23;
      if (v21 < (unint64_t)v108)
      {
        v22 = (uint64_t)v103;
        *(_DWORD *)(v21 + 8) = v104;
        *(_QWORD *)v21 = v22;
        v21 += 12;
      }
      else
      {
        v21 = sub_20B420814((unint64_t *)&v106, (uint64_t *)&v103);
      }
      v107 = (char *)v21;
      v19 += 12;
    }
    while (v19 != v20);
  }
  v25 = v108;
  v24 = v109;
  *(_QWORD *)(a1 + 80) = v106;
  *(_QWORD *)(a1 + 88) = v21;
  *(_QWORD *)(a1 + 96) = v25;
  *(_QWORD *)(a1 + 104) = v24;
  *(_DWORD *)(a1 + 112) = *((_DWORD *)a2 + 68);
  sub_20B0E7FAC((_QWORD *)(a1 + 120), (uint64_t)(a2 + 30));
  *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 78);
  sub_20B0E7FAC((_QWORD *)(a1 + 160), (uint64_t)(a2 + 35));
  v26 = 0xAAAAAAAAAAAAAAABLL * ((a2[15] - a2[14]) >> 2);
  HIDWORD(v109) = 0;
  v107 = 0;
  v108 = 0;
  v106 = 0;
  sub_20B42099C((uint64_t)&v106, v26);
  v27 = a2[14];
  v28 = a2[15];
  if (v27 == v28)
  {
    v29 = (unint64_t)v107;
  }
  else
  {
    v29 = (unint64_t)v107;
    do
    {
      v31 = *(_DWORD *)(v27 + 8);
      v103 = *(_QWORD **)v27;
      v104 = v31;
      if (v29 < (unint64_t)v108)
      {
        v30 = (uint64_t)v103;
        *(_DWORD *)(v29 + 8) = v104;
        *(_QWORD *)v29 = v30;
        v29 += 12;
      }
      else
      {
        v29 = sub_20B420AFC((unint64_t *)&v106, (uint64_t *)&v103);
      }
      v107 = (char *)v29;
      v27 += 12;
    }
    while (v27 != v28);
  }
  v33 = v108;
  v32 = v109;
  *(_QWORD *)(a1 + 192) = v106;
  *(_QWORD *)(a1 + 200) = v29;
  *(_QWORD *)(a1 + 208) = v33;
  *(_QWORD *)(a1 + 216) = v32;
  v35 = (char *)a2[18];
  v34 = (char *)a2[19];
  HIDWORD(v109) = 0;
  v107 = 0;
  v108 = 0;
  v106 = 0;
  v36 = v34 - v35;
  if (v34 != v35)
  {
    if ((v36 & 0x8000000000000000) != 0)
      sub_20AEC60B8();
    v37 = (v36 >> 3);
    v38 = (char *)operator new(8 * v37);
    v106 = v38;
    v107 = v38;
    v108 = &v38[8 * v37];
    while (1)
    {
      v39 = *(_QWORD *)v35;
      if (v38 < v108)
      {
        *(_QWORD *)v38 = v39;
        v38 += 8;
      }
      else
      {
        v40 = (char *)(v38 - v106);
        v41 = (v38 - v106) >> 3;
        if ((unint64_t)(v41 + 1) >> 61)
          sub_20AEC60B8();
        v42 = (v108 - v106) >> 2;
        if (v42 <= v41 + 1)
          v42 = v41 + 1;
        if ((unint64_t)(v108 - v106) >= 0x7FFFFFFFFFFFFFF8)
          v43 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v43 = v42;
        if (v43)
        {
          LODWORD(v105) = v43;
          if (HIDWORD(v109) == -1)
            sub_20AECFAB8();
          v103 = &v105;
          v44 = ((uint64_t (*)(_QWORD **, uint64_t *))off_24C41B4C0[HIDWORD(v109)])(&v103, &v109);
          v46 = (char *)(v44 + 8 * v41);
          *(_QWORD *)v46 = v39;
          v38 = v46 + 8;
          v47 = (unint64_t)v106;
          v48 = (uint64_t)v107;
          v49 = v107 - v106;
          if (v107 != v106)
          {
LABEL_47:
            v51 = v49 - 8;
            if (v51 < 0x58)
              goto LABEL_110;
            if ((unint64_t)(v48 - v44 - (_QWORD)v40) < 0x20)
              goto LABEL_110;
            v52 = (v51 >> 3) + 1;
            v53 = 8 * (v52 & 0x3FFFFFFFFFFFFFFCLL);
            v54 = v48 - v53;
            v46 -= v53;
            v55 = (_OWORD *)(v44 + 8 * v41 - 16);
            v56 = (__int128 *)(v48 - 16);
            v57 = v52 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v58 = *v56;
              *(v55 - 1) = *(v56 - 1);
              *v55 = v58;
              v55 -= 2;
              v56 -= 2;
              v57 -= 4;
            }
            while (v57);
            v48 = v54;
            if (v52 != (v52 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_110:
              do
              {
                v59 = *(_QWORD *)(v48 - 8);
                v48 -= 8;
                *((_QWORD *)v46 - 1) = v59;
                v46 -= 8;
              }
              while (v48 != v47);
            }
            v48 = (uint64_t)v106;
            v106 = v46;
            v107 = v38;
            v50 = v108;
            v108 = (char *)(v44 + 8 * v45);
            if (!v48)
              goto LABEL_33;
LABEL_54:
            v103 = (_QWORD *)v48;
            v104 = (unint64_t)&v50[-v48] >> 3;
            if (HIDWORD(v109) == -1)
              sub_20AECFAB8();
            v105 = &v103;
            ((void (*)(_QWORD ***, uint64_t *))off_24C41B4D0[HIDWORD(v109)])(&v105, &v109);
            goto LABEL_33;
          }
        }
        else
        {
          v44 = 0;
          v45 = 0;
          v46 = (char *)(8 * v41);
          *(_QWORD *)(8 * v41) = v39;
          v38 = (char *)(8 * v41 + 8);
          v47 = (unint64_t)v106;
          v48 = (uint64_t)v107;
          v49 = v107 - v106;
          if (v107 != v106)
            goto LABEL_47;
        }
        v106 = v46;
        v107 = v38;
        v50 = v108;
        v108 = (char *)(v44 + 8 * v45);
        if (v48)
          goto LABEL_54;
      }
LABEL_33:
      v107 = v38;
      v35 += 8;
      if (v35 == v34)
      {
        v60 = (unint64_t)v106;
        v36 = (unint64_t)v108;
        goto LABEL_58;
      }
    }
  }
  v60 = 0;
  v38 = 0;
LABEL_58:
  v61 = v109;
  *(_QWORD *)(a1 + 224) = v60;
  *(_QWORD *)(a1 + 232) = v38;
  *(_QWORD *)(a1 + 240) = v36;
  *(_QWORD *)(a1 + 248) = v61;
  v63 = (char *)a2[22];
  v62 = (char *)a2[23];
  HIDWORD(v109) = 0;
  v107 = 0;
  v108 = 0;
  v106 = 0;
  v64 = v62 - v63;
  if (v62 != v63)
  {
    if ((v64 & 0x8000000000000000) != 0)
      sub_20AEC60B8();
    v65 = (v64 >> 3);
    v66 = (char *)operator new(8 * v65);
    v106 = v66;
    v107 = v66;
    v108 = &v66[8 * v65];
    while (1)
    {
      v68 = *(_DWORD *)v63;
      v67 = *((_DWORD *)v63 + 1);
      if (v66 < v108)
      {
        *(_DWORD *)v66 = v68;
        *((_DWORD *)v66 + 1) = v67;
        v66 += 8;
        goto LABEL_62;
      }
      v69 = (char *)(v66 - v106);
      v70 = (v66 - v106) >> 3;
      if ((unint64_t)(v70 + 1) >> 61)
        sub_20AEC60B8();
      v71 = (v108 - v106) >> 2;
      if (v71 <= v70 + 1)
        v71 = v70 + 1;
      v72 = (unint64_t)(v108 - v106) >= 0x7FFFFFFFFFFFFFF8 ? 0x1FFFFFFFFFFFFFFFLL : v71;
      if (v72)
      {
        LODWORD(v105) = v72;
        if (HIDWORD(v109) == -1)
          sub_20AECFAB8();
        v103 = &v105;
        v73 = ((uint64_t (*)(_QWORD **, uint64_t *))off_24C41B4E0[HIDWORD(v109)])(&v103, &v109);
        v75 = (char *)(v73 + 8 * v70);
        *(_DWORD *)v75 = v68;
        *((_DWORD *)v75 + 1) = v67;
        v76 = (unint64_t)v106;
        v77 = (uint64_t)v107;
        v78 = v107 - v106;
        if (v107 == v106)
        {
LABEL_76:
          v66 = v75 + 8;
          v106 = v75;
          v107 = v75 + 8;
          v81 = v108;
          v108 = (char *)(v73 + 8 * v74);
          if (v77)
            goto LABEL_84;
          goto LABEL_62;
        }
      }
      else
      {
        v73 = 0;
        v74 = 0;
        v75 = (char *)(8 * v70);
        *(_DWORD *)v75 = v68;
        *((_DWORD *)v75 + 1) = v67;
        v76 = (unint64_t)v106;
        v77 = (uint64_t)v107;
        v78 = v107 - v106;
        if (v107 == v106)
          goto LABEL_76;
      }
      v79 = v78 - 8;
      if ((unint64_t)(v78 - 8) < 0x58)
        break;
      v80 = (unint64_t)v75;
      if ((unint64_t)(v77 - v73 - (_QWORD)v69) < 0x20)
        goto LABEL_82;
      v82 = (v79 >> 3) + 1;
      v83 = 8 * (v82 & 0x3FFFFFFFFFFFFFFCLL);
      v84 = v77 - v83;
      v80 = (unint64_t)&v75[-v83];
      v85 = (_OWORD *)(v73 + 8 * v70 - 16);
      v86 = (__int128 *)(v77 - 16);
      v87 = v82 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v88 = *v86;
        *(v85 - 1) = *(v86 - 1);
        *v85 = v88;
        v85 -= 2;
        v86 -= 2;
        v87 -= 4;
      }
      while (v87);
      v77 = v84;
      if (v82 != (v82 & 0x3FFFFFFFFFFFFFFCLL))
        goto LABEL_82;
LABEL_83:
      v77 = (uint64_t)v106;
      v66 = v75 + 8;
      v106 = (char *)v80;
      v107 = v75 + 8;
      v81 = v108;
      v108 = (char *)(v73 + 8 * v74);
      if (v77)
      {
LABEL_84:
        v103 = (_QWORD *)v77;
        v104 = (unint64_t)&v81[-v77] >> 3;
        if (HIDWORD(v109) == -1)
          sub_20AECFAB8();
        v105 = &v103;
        ((void (*)(_QWORD ***, uint64_t *))off_24C41B4F0[HIDWORD(v109)])(&v105, &v109);
      }
LABEL_62:
      v107 = v66;
      v63 += 8;
      if (v63 == v62)
      {
        v90 = (unint64_t)v106;
        v64 = (unint64_t)v108;
        goto LABEL_88;
      }
    }
    v80 = (unint64_t)v75;
    do
    {
LABEL_82:
      v89 = *(_QWORD *)(v77 - 8);
      v77 -= 8;
      *(_QWORD *)(v80 - 8) = v89;
      v80 -= 8;
    }
    while (v77 != v76);
    goto LABEL_83;
  }
  v90 = 0;
  v66 = 0;
LABEL_88:
  v91 = v109;
  *(_QWORD *)(a1 + 256) = v90;
  *(_QWORD *)(a1 + 264) = v66;
  *(_QWORD *)(a1 + 272) = v64;
  *(_QWORD *)(a1 + 280) = v91;
  v92 = 0xAAAAAAAAAAAAAAABLL * ((a2[27] - a2[26]) >> 2);
  HIDWORD(v109) = 0;
  v107 = 0;
  v108 = 0;
  v106 = 0;
  sub_20B42099C((uint64_t)&v106, v92);
  v93 = a2[26];
  v94 = a2[27];
  if (v93 == v94)
  {
    v95 = (unint64_t)v107;
  }
  else
  {
    v95 = (unint64_t)v107;
    do
    {
      v97 = *(_DWORD *)(v93 + 8);
      v103 = *(_QWORD **)v93;
      v104 = v97;
      if (v95 < (unint64_t)v108)
      {
        v96 = (uint64_t)v103;
        *(_DWORD *)(v95 + 8) = v104;
        *(_QWORD *)v95 = v96;
        v95 += 12;
      }
      else
      {
        v95 = sub_20B420AFC((unint64_t *)&v106, (uint64_t *)&v103);
      }
      v107 = (char *)v95;
      v93 += 12;
    }
    while (v93 != v94);
  }
  v99 = v108;
  v98 = v109;
  *(_QWORD *)(a1 + 288) = v106;
  *(_QWORD *)(a1 + 296) = v95;
  *(_QWORD *)(a1 + 304) = v99;
  *(_QWORD *)(a1 + 312) = v98;
  *(_BYTE *)(a1 + 320) = 0;
  *(_BYTE *)(a1 + 344) = 0;
  *(_DWORD *)(a1 + 348) = *((_DWORD *)a2 + 88);
  sub_20B0E87C0((_QWORD *)(a1 + 352), (uint64_t)(a2 + 40));
  if (*((_BYTE *)a2 + 380))
  {
    if (*(_BYTE *)(a1 + 344))
      *(_BYTE *)(a1 + 344) = 0;
    v100 = *((_DWORD *)a2 + 91);
    *(_QWORD *)(a1 + 320) = *(uint64_t *)((char *)a2 + 356);
    *(_DWORD *)(a1 + 328) = v100;
    v101 = *((_DWORD *)a2 + 94);
    *(_QWORD *)(a1 + 332) = a2[46];
    *(_DWORD *)(a1 + 340) = v101;
    *(_BYTE *)(a1 + 344) = 1;
  }
  return a1;
}

void sub_20B41FD08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t *a11)
{
  uint64_t *v11;
  uint64_t *v12;

  sub_20B0CDE68(v12);
  sub_20B0CDEF4(v11 + 32);
  sub_20B0CDF74(v11 + 28);
  sub_20B0CDE68(v11 + 24);
  sub_20B0CDFF4(a10);
  sub_20B0CDFF4(a11);
  sub_20B0CE070(v11 + 10);
  sub_20B0CE070(v11 + 5);
  sub_20B0CE070(v11);
  _Unwind_Resume(a1);
}

void sub_20B41FE0C(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  unint64_t v41;
  BOOL v42;
  size_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  unint64_t v47;
  BOOL v48;
  size_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _OWORD *v83;
  __int128 *v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  _OWORD *v117;
  __int128 *v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  int v143;
  _BYTE *v144;
  _BYTE *v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  BOOL v149;
  unint64_t v150;
  char *v151;
  int v152;
  char **v153;

  sub_20B41913C(a3, a2);
  v6 = *a1;
  v5 = a1[1];
  v7 = 0xAAAAAAAAAAAAAAABLL * ((v5 - *a1) >> 2);
  v9 = *(_QWORD *)a3;
  v8 = *(_QWORD *)(a3 + 8);
  v10 = 0xAAAAAAAAAAAAAAABLL * ((v8 - *(_QWORD *)a3) >> 2);
  if (v7 <= v10)
  {
    if (v7 < v10)
    {
      v8 = v9 + 4 * ((v5 - *a1) >> 2);
      *(_QWORD *)(a3 + 8) = v8;
    }
  }
  else
  {
    sub_20B08726C(a3, v7 - v10);
    v6 = *a1;
    v5 = a1[1];
    v9 = *(_QWORD *)a3;
    v8 = *(_QWORD *)(a3 + 8);
  }
  if (v6 != v5 || v9 != v8)
  {
    v11 = v9 + 12;
    v12 = v6 + 12;
    do
    {
      do
      {
        v13 = v11;
        v14 = v12;
        v15 = *(_QWORD *)(v12 - 12);
        *(_DWORD *)(v11 - 4) = *(_DWORD *)(v14 - 4);
        *(_QWORD *)(v11 - 12) = v15;
        v11 += 12;
        v12 = v14 + 12;
      }
      while (v14 != v5);
    }
    while (v13 != v8);
  }
  v16 = *(_QWORD *)(a3 + 32);
  *(_DWORD *)(a3 + 64) = *((_DWORD *)a1 + 8);
  v18 = a1[5];
  v17 = a1[6];
  v19 = 0xAAAAAAAAAAAAAAABLL * ((v17 - v18) >> 2);
  v20 = *(_QWORD *)(a3 + 40);
  v21 = 0xAAAAAAAAAAAAAAABLL * ((v20 - v16) >> 2);
  if (v19 <= v21)
  {
    if (v19 < v21)
    {
      v20 = v16 + 4 * ((v17 - v18) >> 2);
      *(_QWORD *)(a3 + 40) = v20;
    }
  }
  else
  {
    sub_20B08726C(a3 + 32, v19 - v21);
    v18 = a1[5];
    v17 = a1[6];
    v16 = *(_QWORD *)(a3 + 32);
    v20 = *(_QWORD *)(a3 + 40);
  }
  if (v18 != v17 || v16 != v20)
  {
    v22 = v16 + 12;
    v23 = v18 + 12;
    do
    {
      do
      {
        v24 = v22;
        v25 = v23;
        v26 = *(_QWORD *)(v23 - 12);
        *(_DWORD *)(v22 - 4) = *(_DWORD *)(v25 - 4);
        *(_QWORD *)(v22 - 12) = v26;
        v22 += 12;
        v23 = v25 + 12;
      }
      while (v25 != v17);
    }
    while (v24 != v20);
  }
  v27 = *(_QWORD *)(a3 + 72);
  *(_DWORD *)(a3 + 104) = *((_DWORD *)a1 + 18);
  v29 = a1[10];
  v28 = a1[11];
  v30 = 0xAAAAAAAAAAAAAAABLL * ((v28 - v29) >> 2);
  v31 = *(_QWORD *)(a3 + 80);
  v32 = 0xAAAAAAAAAAAAAAABLL * ((v31 - v27) >> 2);
  if (v30 <= v32)
  {
    if (v30 < v32)
    {
      v31 = v27 + 4 * ((v28 - v29) >> 2);
      *(_QWORD *)(a3 + 80) = v31;
    }
  }
  else
  {
    sub_20B08726C(a3 + 72, v30 - v32);
    v29 = a1[10];
    v28 = a1[11];
    v27 = *(_QWORD *)(a3 + 72);
    v31 = *(_QWORD *)(a3 + 80);
  }
  if (v29 != v28 || v27 != v31)
  {
    v33 = v27 + 12;
    v34 = v29 + 12;
    do
    {
      do
      {
        v35 = v33;
        v36 = v34;
        v37 = *(_QWORD *)(v34 - 12);
        *(_DWORD *)(v33 - 4) = *(_DWORD *)(v36 - 4);
        *(_QWORD *)(v33 - 12) = v37;
        v33 += 12;
        v34 = v36 + 12;
      }
      while (v36 != v28);
    }
    while (v35 != v31);
  }
  v38 = *(_QWORD *)(a3 + 240);
  *(_DWORD *)(a3 + 272) = *((_DWORD *)a1 + 28);
  v39 = (_BYTE *)a1[15];
  v40 = (_BYTE *)a1[16];
  v41 = *(_QWORD *)(a3 + 248) - v38;
  v42 = v40 - v39 >= v41;
  v43 = v40 - v39 - v41;
  if (v43 != 0 && v42)
  {
    sub_20B08A3B0(a3 + 240, v43);
    v39 = (_BYTE *)a1[15];
    v40 = (_BYTE *)a1[16];
  }
  else if (!v42)
  {
    *(_QWORD *)(a3 + 248) = v38 + v40 - v39;
  }
  if (v40 != v39)
    memmove(*(void **)(a3 + 240), v39, v40 - v39);
  *(_DWORD *)(a3 + 312) = *((_DWORD *)a1 + 38);
  v44 = (_BYTE *)a1[20];
  v45 = (_BYTE *)a1[21];
  v46 = *(_QWORD *)(a3 + 280);
  v47 = *(_QWORD *)(a3 + 288) - v46;
  v48 = v45 - v44 >= v47;
  v49 = v45 - v44 - v47;
  if (v49 != 0 && v48)
  {
    sub_20B08A3B0(a3 + 280, v49);
    v44 = (_BYTE *)a1[20];
    v45 = (_BYTE *)a1[21];
  }
  else if (!v48)
  {
    *(_QWORD *)(a3 + 288) = v46 + v45 - v44;
  }
  if (v45 != v44)
    memmove(*(void **)(a3 + 280), v44, v45 - v44);
  v51 = a1[24];
  v50 = a1[25];
  v52 = 0xAAAAAAAAAAAAAAABLL * ((v50 - v51) >> 2);
  v54 = *(_QWORD *)(a3 + 112);
  v53 = *(_QWORD *)(a3 + 120);
  v55 = 0xAAAAAAAAAAAAAAABLL * ((v53 - v54) >> 2);
  if (v52 <= v55)
  {
    if (v52 < v55)
    {
      v53 = v54 + 4 * ((v50 - v51) >> 2);
      *(_QWORD *)(a3 + 120) = v53;
    }
  }
  else
  {
    sub_20B0877C8(a3 + 112, v52 - v55);
    v51 = a1[24];
    v50 = a1[25];
    v54 = *(_QWORD *)(a3 + 112);
    v53 = *(_QWORD *)(a3 + 120);
  }
  if (v51 != v50 || v54 != v53)
  {
    v56 = v54 + 12;
    v57 = v51 + 12;
    do
    {
      do
      {
        v58 = v56;
        v59 = v57;
        v60 = *(_QWORD *)(v57 - 12);
        *(_DWORD *)(v56 - 4) = *(_DWORD *)(v59 - 4);
        *(_QWORD *)(v56 - 12) = v60;
        v56 += 12;
        v57 = v59 + 12;
      }
      while (v59 != v50);
    }
    while (v58 != v53);
  }
  v62 = *(_QWORD *)(a3 + 144);
  v61 = *(_QWORD *)(a3 + 152);
  v64 = a1[28];
  v63 = a1[29];
  v65 = v63 - v64;
  v66 = (v63 - v64) >> 3;
  v67 = v61 - v62;
  v68 = (uint64_t)(v61 - v62) >> 3;
  v69 = v66 - v68;
  if (v66 <= v68)
  {
    if (v66 < v68)
    {
      v61 = v62 + 8 * v66;
      *(_QWORD *)(a3 + 152) = v61;
    }
  }
  else
  {
    v70 = *(_QWORD *)(a3 + 160);
    if (v69 <= (uint64_t)(v70 - v61) >> 3)
    {
      v61 += 8 * v69;
      *(_QWORD *)(a3 + 152) = v61;
    }
    else
    {
      if (v65 < 0)
        sub_20AEC60B8();
      v71 = v70 - v62;
      v72 = (uint64_t)(v70 - v62) >> 2;
      if (v72 <= v66)
        LODWORD(v72) = v66;
      if (v71 >= 0x7FFFFFFFFFFFFFF8)
        v73 = -1;
      else
        v73 = v72;
      LODWORD(v153) = v73;
      v74 = *(unsigned int *)(a3 + 172);
      if ((_DWORD)v74 == -1)
        goto LABEL_133;
      v151 = (char *)&v153;
      v75 = ((uint64_t (*)(char **, uint64_t))off_24C41B500[v74])(&v151, a3 + 168);
      v77 = *(char **)(a3 + 144);
      v78 = *(char **)(a3 + 152);
      v62 = v75 + 8 * v68;
      v61 = v62 + 8 * v69;
      if (v78 != v77)
      {
        v79 = v78 - v77 - 8;
        if (v79 < 0x58)
          goto LABEL_140;
        if ((unint64_t)&v78[-v67 - v75] < 0x20)
          goto LABEL_140;
        v80 = (v79 >> 3) + 1;
        v81 = 8 * (v80 & 0x3FFFFFFFFFFFFFFCLL);
        v82 = &v78[-v81];
        v62 -= v81;
        v83 = (_OWORD *)(v75 + 8 * v68 - 16);
        v84 = (__int128 *)(v78 - 16);
        v85 = v80 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v86 = *v84;
          *(v83 - 1) = *(v84 - 1);
          *v83 = v86;
          v83 -= 2;
          v84 -= 2;
          v85 -= 4;
        }
        while (v85);
        v78 = v82;
        if (v80 != (v80 & 0x3FFFFFFFFFFFFFFCLL))
        {
LABEL_140:
          do
          {
            v87 = *((_QWORD *)v78 - 1);
            v78 -= 8;
            *(_QWORD *)(v62 - 8) = v87;
            v62 -= 8;
          }
          while (v78 != v77);
        }
        v77 = *(char **)(a3 + 144);
      }
      *(_QWORD *)(a3 + 144) = v62;
      *(_QWORD *)(a3 + 152) = v61;
      v88 = *(_QWORD *)(a3 + 160);
      *(_QWORD *)(a3 + 160) = v75 + 8 * v76;
      if (v77)
      {
        v151 = v77;
        v152 = (unint64_t)(v88 - (_QWORD)v77) >> 3;
        v89 = *(unsigned int *)(a3 + 172);
        if ((_DWORD)v89 == -1)
          sub_20AECFAB8();
        v153 = &v151;
        ((void (*)(char ***, uint64_t))off_24C41B510[v89])(&v153, a3 + 168);
        v62 = *(_QWORD *)(a3 + 144);
        v61 = *(_QWORD *)(a3 + 152);
      }
    }
    v64 = a1[28];
    v63 = a1[29];
  }
  if (v64 != v63 || v62 != v61)
  {
    v91 = v62 + 8;
    v92 = v64 + 8;
    do
    {
      do
      {
        v93 = v91;
        v94 = v92;
        *(_QWORD *)(v91 - 8) = *(_QWORD *)(v92 - 8);
        v91 += 8;
        v92 += 8;
      }
      while (v94 != v63);
    }
    while (v93 != v61);
  }
  v96 = *(_QWORD *)(a3 + 176);
  v95 = *(_QWORD *)(a3 + 184);
  v98 = a1[32];
  v97 = a1[33];
  v99 = v97 - v98;
  v100 = (v97 - v98) >> 3;
  v101 = v95 - v96;
  v102 = (uint64_t)(v95 - v96) >> 3;
  v103 = v100 - v102;
  if (v100 > v102)
  {
    v104 = *(_QWORD *)(a3 + 192);
    if (v103 <= (uint64_t)(v104 - v95) >> 3)
    {
      v95 += 8 * v103;
      *(_QWORD *)(a3 + 184) = v95;
LABEL_105:
      v98 = a1[32];
      v97 = a1[33];
      goto LABEL_106;
    }
    if (v99 < 0)
      sub_20AEC60B8();
    v105 = v104 - v96;
    v106 = (uint64_t)(v104 - v96) >> 2;
    if (v106 <= v100)
      LODWORD(v106) = v100;
    if (v105 >= 0x7FFFFFFFFFFFFFF8)
      v107 = -1;
    else
      v107 = v106;
    LODWORD(v153) = v107;
    v108 = *(unsigned int *)(a3 + 204);
    if ((_DWORD)v108 != -1)
    {
      v151 = (char *)&v153;
      v109 = ((uint64_t (*)(char **, uint64_t))off_24C41B520[v108])(&v151, a3 + 200);
      v111 = *(char **)(a3 + 176);
      v112 = *(char **)(a3 + 184);
      v96 = v109 + 8 * v102;
      v95 = v96 + 8 * v103;
      if (v112 != v111)
      {
        v113 = v112 - v111 - 8;
        if (v113 < 0x58)
          goto LABEL_141;
        if ((unint64_t)&v112[-v101 - v109] < 0x20)
          goto LABEL_141;
        v114 = (v113 >> 3) + 1;
        v115 = 8 * (v114 & 0x3FFFFFFFFFFFFFFCLL);
        v116 = &v112[-v115];
        v96 -= v115;
        v117 = (_OWORD *)(v109 + 8 * v102 - 16);
        v118 = (__int128 *)(v112 - 16);
        v119 = v114 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v120 = *v118;
          *(v117 - 1) = *(v118 - 1);
          *v117 = v120;
          v117 -= 2;
          v118 -= 2;
          v119 -= 4;
        }
        while (v119);
        v112 = v116;
        if (v114 != (v114 & 0x3FFFFFFFFFFFFFFCLL))
        {
LABEL_141:
          do
          {
            v121 = *((_QWORD *)v112 - 1);
            v112 -= 8;
            *(_QWORD *)(v96 - 8) = v121;
            v96 -= 8;
          }
          while (v112 != v111);
        }
        v111 = *(char **)(a3 + 176);
      }
      *(_QWORD *)(a3 + 176) = v96;
      *(_QWORD *)(a3 + 184) = v95;
      v122 = *(_QWORD *)(a3 + 192);
      *(_QWORD *)(a3 + 192) = v109 + 8 * v110;
      if (v111)
      {
        v151 = v111;
        v152 = (unint64_t)(v122 - (_QWORD)v111) >> 3;
        v123 = *(unsigned int *)(a3 + 204);
        if ((_DWORD)v123 == -1)
          sub_20AECFAB8();
        v153 = &v151;
        ((void (*)(char ***, uint64_t))off_24C41B530[v123])(&v153, a3 + 200);
        v96 = *(_QWORD *)(a3 + 176);
        v95 = *(_QWORD *)(a3 + 184);
      }
      goto LABEL_105;
    }
LABEL_133:
    sub_20AECFAB8();
  }
  if (v100 < v102)
  {
    v95 = v96 + 8 * v100;
    *(_QWORD *)(a3 + 184) = v95;
  }
LABEL_106:
  if (v98 != v97 || v96 != v95)
  {
    v125 = v96 + 8;
    v126 = v98 + 8;
    do
    {
      do
      {
        v127 = v125;
        v128 = v126;
        *(_QWORD *)(v125 - 8) = *(_QWORD *)(v126 - 8);
        v125 += 8;
        v126 += 8;
      }
      while (v128 != v97);
    }
    while (v127 != v95);
  }
  v130 = a1[36];
  v129 = a1[37];
  v131 = 0xAAAAAAAAAAAAAAABLL * ((v129 - v130) >> 2);
  v133 = *(_QWORD *)(a3 + 208);
  v132 = *(_QWORD *)(a3 + 216);
  v134 = 0xAAAAAAAAAAAAAAABLL * ((v132 - v133) >> 2);
  if (v131 <= v134)
  {
    if (v131 < v134)
    {
      v132 = v133 + 4 * ((v129 - v130) >> 2);
      *(_QWORD *)(a3 + 216) = v132;
    }
  }
  else
  {
    sub_20B0877C8(a3 + 208, v131 - v134);
    v130 = a1[36];
    v129 = a1[37];
    v133 = *(_QWORD *)(a3 + 208);
    v132 = *(_QWORD *)(a3 + 216);
  }
  if (v130 != v129 || v133 != v132)
  {
    v135 = v133 + 12;
    v136 = v130 + 12;
    do
    {
      do
      {
        v137 = v135;
        v138 = v136;
        v139 = *(_QWORD *)(v136 - 12);
        *(_DWORD *)(v135 - 4) = *(_DWORD *)(v138 - 4);
        *(_QWORD *)(v135 - 12) = v139;
        v135 += 12;
        v136 = v138 + 12;
      }
      while (v138 != v129);
    }
    while (v137 != v132);
  }
  if (*((_BYTE *)a1 + 344))
  {
    v140 = a1[40];
    v141 = *(uint64_t *)((char *)a1 + 332);
    v142 = *((_DWORD *)a1 + 85);
    v143 = *(unsigned __int8 *)(a3 + 380);
    *(_DWORD *)(a3 + 364) = *((_DWORD *)a1 + 82);
    *(_QWORD *)(a3 + 356) = v140;
    *(_DWORD *)(a3 + 376) = v142;
    *(_QWORD *)(a3 + 368) = v141;
    if (!v143)
      *(_BYTE *)(a3 + 380) = 1;
  }
  *(_DWORD *)(a3 + 352) = *((_DWORD *)a1 + 87);
  v144 = (_BYTE *)a1[44];
  v145 = (_BYTE *)a1[45];
  v146 = (v145 - v144) >> 2;
  v147 = *(_QWORD *)(a3 + 320);
  v148 = (*(_QWORD *)(a3 + 328) - v147) >> 2;
  v149 = v146 >= v148;
  v150 = v146 - v148;
  if (v150 != 0 && v149)
  {
    sub_20B08A96C(a3 + 320, v150);
    v144 = (_BYTE *)a1[44];
    v145 = (_BYTE *)a1[45];
  }
  else if (!v149)
  {
    *(_QWORD *)(a3 + 328) = v147 + 4 * v146;
  }
  if (v145 != v144)
    memmove(*(void **)(a3 + 320), v144, v145 - v144);
}

void sub_20B4206A0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_20B088C38(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B4206B4(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD **v16;
  int v17;
  _QWORD *v18;

  v2 = *(_QWORD *)result;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(result + 16) - *(_QWORD *)result) >> 2) < a2)
  {
    v3 = result;
    if (a2 >= 0x1555555555555556)
      sub_20AEC60B8();
    v4 = *(_QWORD *)(result + 8);
    LODWORD(v18) = a2;
    v5 = *(unsigned int *)(result + 28);
    if ((_DWORD)v5 == -1)
      sub_20AECFAB8();
    v6 = (unsigned __int128)((v4 - v2) * (__int128)0x2AAAAAAAAAAAAAABLL) >> 64;
    v7 = (v6 >> 1) + ((unint64_t)v6 >> 63);
    v16 = &v18;
    result = ((uint64_t (*)(_QWORD ***, uint64_t))off_24C41B480[v5])(&v16, result + 24);
    v10 = *(_QWORD *)v3;
    v9 = *(_QWORD *)(v3 + 8);
    v11 = result + 12 * v7;
    if (v9 != *(_QWORD *)v3)
    {
      do
      {
        v12 = *(_QWORD *)(v9 - 12);
        v9 -= 12;
        v13 = *(_DWORD *)(v9 + 8);
        *(_QWORD *)(v11 - 12) = v12;
        v11 -= 12;
        *(_DWORD *)(v11 + 8) = v13;
      }
      while (v9 != v10);
      v9 = *(_QWORD *)v3;
    }
    *(_QWORD *)v3 = v11;
    *(_QWORD *)(v3 + 8) = result + 12 * v7;
    v14 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v3 + 16) = result + 12 * v8;
    if (v9)
    {
      v16 = (_QWORD **)v9;
      v17 = -1431655765 * ((unint64_t)(v14 - v9) >> 2);
      v15 = *(unsigned int *)(v3 + 28);
      if ((_DWORD)v15 == -1)
        sub_20AECFAB8();
      v18 = &v16;
      return ((uint64_t (*)(_QWORD **, uint64_t))off_24C41B490[v15])(&v18, v3 + 24);
    }
  }
  return result;
}

unint64_t sub_20B420814(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD **v20;
  int v21;
  _QWORD *v22;

  v3 = 0x1555555555555555;
  v4 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 2);
  v5 = v4 + 1;
  if (v4 + 1 > 0x1555555555555555)
    sub_20AEC60B8();
  if (0x5555555555555556 * ((uint64_t)(a1[2] - *a1) >> 2) > v5)
    v5 = 0x5555555555555556 * ((uint64_t)(a1[2] - *a1) >> 2);
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[2] - *a1) >> 2) < 0xAAAAAAAAAAAAAAALL)
    v3 = v5;
  if (v3)
  {
    LODWORD(v22) = v3;
    v7 = *((unsigned int *)a1 + 7);
    if ((_DWORD)v7 == -1)
      sub_20AECFAB8();
    v20 = &v22;
    v8 = ((uint64_t (*)(_QWORD ***, unint64_t *))off_24C41B480[v7])(&v20, a1 + 3);
  }
  else
  {
    v8 = 0;
    v9 = 0;
  }
  v10 = v8 + 12 * v4;
  v11 = *a2;
  *(_DWORD *)(v10 + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)v10 = v11;
  v12 = v10 + 12;
  v14 = *a1;
  v13 = a1[1];
  if (v13 != *a1)
  {
    do
    {
      v15 = *(_QWORD *)(v13 - 12);
      v13 -= 12;
      v16 = *(_DWORD *)(v13 + 8);
      *(_QWORD *)(v10 - 12) = v15;
      v10 -= 12;
      *(_DWORD *)(v10 + 8) = v16;
    }
    while (v13 != v14);
    v13 = *a1;
  }
  *a1 = v10;
  a1[1] = v12;
  v17 = a1[2];
  a1[2] = v8 + 12 * v9;
  if (v13)
  {
    v20 = (_QWORD **)v13;
    v21 = -1431655765 * ((v17 - v13) >> 2);
    v18 = *((unsigned int *)a1 + 7);
    if ((_DWORD)v18 == -1)
      sub_20AECFAB8();
    v22 = &v20;
    ((void (*)(_QWORD **, unint64_t *))off_24C41B490[v18])(&v22, a1 + 3);
  }
  return v12;
}

uint64_t sub_20B42099C(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD **v16;
  int v17;
  _QWORD *v18;

  v2 = *(_QWORD *)result;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(result + 16) - *(_QWORD *)result) >> 2) < a2)
  {
    v3 = result;
    if (a2 >= 0x1555555555555556)
      sub_20AEC60B8();
    v4 = *(_QWORD *)(result + 8);
    LODWORD(v18) = a2;
    v5 = *(unsigned int *)(result + 28);
    if ((_DWORD)v5 == -1)
      sub_20AECFAB8();
    v6 = (unsigned __int128)((v4 - v2) * (__int128)0x2AAAAAAAAAAAAAABLL) >> 64;
    v7 = (v6 >> 1) + ((unint64_t)v6 >> 63);
    v16 = &v18;
    result = ((uint64_t (*)(_QWORD ***, uint64_t))off_24C41B4A0[v5])(&v16, result + 24);
    v10 = *(_QWORD *)v3;
    v9 = *(_QWORD *)(v3 + 8);
    v11 = result + 12 * v7;
    if (v9 != *(_QWORD *)v3)
    {
      do
      {
        v12 = *(_QWORD *)(v9 - 12);
        v9 -= 12;
        v13 = *(_DWORD *)(v9 + 8);
        *(_QWORD *)(v11 - 12) = v12;
        v11 -= 12;
        *(_DWORD *)(v11 + 8) = v13;
      }
      while (v9 != v10);
      v9 = *(_QWORD *)v3;
    }
    *(_QWORD *)v3 = v11;
    *(_QWORD *)(v3 + 8) = result + 12 * v7;
    v14 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v3 + 16) = result + 12 * v8;
    if (v9)
    {
      v16 = (_QWORD **)v9;
      v17 = -1431655765 * ((unint64_t)(v14 - v9) >> 2);
      v15 = *(unsigned int *)(v3 + 28);
      if ((_DWORD)v15 == -1)
        sub_20AECFAB8();
      v18 = &v16;
      return ((uint64_t (*)(_QWORD **, uint64_t))off_24C41B4B0[v15])(&v18, v3 + 24);
    }
  }
  return result;
}

unint64_t sub_20B420AFC(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD **v20;
  int v21;
  _QWORD *v22;

  v3 = 0x1555555555555555;
  v4 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 2);
  v5 = v4 + 1;
  if (v4 + 1 > 0x1555555555555555)
    sub_20AEC60B8();
  if (0x5555555555555556 * ((uint64_t)(a1[2] - *a1) >> 2) > v5)
    v5 = 0x5555555555555556 * ((uint64_t)(a1[2] - *a1) >> 2);
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[2] - *a1) >> 2) < 0xAAAAAAAAAAAAAAALL)
    v3 = v5;
  if (v3)
  {
    LODWORD(v22) = v3;
    v7 = *((unsigned int *)a1 + 7);
    if ((_DWORD)v7 == -1)
      sub_20AECFAB8();
    v20 = &v22;
    v8 = ((uint64_t (*)(_QWORD ***, unint64_t *))off_24C41B4A0[v7])(&v20, a1 + 3);
  }
  else
  {
    v8 = 0;
    v9 = 0;
  }
  v10 = v8 + 12 * v4;
  v11 = *a2;
  *(_DWORD *)(v10 + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)v10 = v11;
  v12 = v10 + 12;
  v14 = *a1;
  v13 = a1[1];
  if (v13 != *a1)
  {
    do
    {
      v15 = *(_QWORD *)(v13 - 12);
      v13 -= 12;
      v16 = *(_DWORD *)(v13 + 8);
      *(_QWORD *)(v10 - 12) = v15;
      v10 -= 12;
      *(_DWORD *)(v10 + 8) = v16;
    }
    while (v13 != v14);
    v13 = *a1;
  }
  *a1 = v10;
  a1[1] = v12;
  v17 = a1[2];
  a1[2] = v8 + 12 * v9;
  if (v13)
  {
    v20 = (_QWORD **)v13;
    v21 = -1431655765 * ((v17 - v13) >> 2);
    v18 = *((unsigned int *)a1 + 7);
    if ((_DWORD)v18 == -1)
      sub_20AECFAB8();
    v22 = &v20;
    ((void (*)(_QWORD **, unint64_t *))off_24C41B4B0[v18])(&v22, a1 + 3);
  }
  return v12;
}

void sub_20B420C88()
{
  JUMPOUT(0x20BD3583CLL);
}

std::__fs::filesystem::path *sub_20B420C9C@<X0>(std::__fs::filesystem::path *a1@<X1>, std::__fs::filesystem::path *a2@<X8>)
{
  return std::__fs::filesystem::__absolute(a2, a1, 0);
}

std::__fs::filesystem::path *sub_20B420CA8@<X0>(std::__fs::filesystem::path *a1@<X1>, std::__fs::filesystem::path *a2@<X8>)
{
  return std::__fs::filesystem::__canonical(a2, a1, 0);
}

std::__fs::filesystem::path *sub_20B420CB4@<X0>(std::__fs::filesystem::path *__p@<X1>, std::__fs::filesystem::path *a2@<X8>)
{
  return std::__fs::filesystem::__weakly_canonical(a2, __p, 0);
}

void sub_20B420CC0(std::__fs::filesystem::path *a1@<X1>, std::__fs::filesystem::path *a2@<X8>)
{
  std::__fs::filesystem::path v4;

  std::__fs::filesystem::__current_path(&v4, 0);
  sub_20B420D40(a2, a1, &v4);
  if (SHIBYTE(v4.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v4.__pn_.__r_.__value_.__l.__data_);
}

void sub_20B420D24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B420D40(std::__fs::filesystem::path *a1, std::__fs::filesystem::path *__p, const std::__fs::filesystem::path *a3)
{
  std::__fs::filesystem::path __pa;
  std::__fs::filesystem::path v6;

  std::__fs::filesystem::__weakly_canonical(&v6, __p, 0);
  std::__fs::filesystem::__weakly_canonical(&__pa, a3, 0);
  std::__fs::filesystem::path::lexically_relative(a1, &v6, &__pa);
  if ((SHIBYTE(__pa.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v6.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v6.__pn_.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(__pa.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v6.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_5;
}

void sub_20B420DD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((a20 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a20 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_20B420E1C(std::__fs::filesystem::path *a1@<X1>, const std::__fs::filesystem::path *a2@<X2>, std::__fs::filesystem::path *a3@<X8>)
{
  sub_20B420D40(a3, a1, a2);
}

void sub_20B420E24(std::__fs::filesystem::path *a1@<X1>, std::__fs::filesystem::path *a2@<X8>)
{
  std::__fs::filesystem::path v4;

  std::__fs::filesystem::__current_path(&v4, 0);
  sub_20B420EA4(a2, a1, &v4);
  if (SHIBYTE(v4.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v4.__pn_.__r_.__value_.__l.__data_);
}

void sub_20B420E88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B420EA4(std::__fs::filesystem::path *a1, std::__fs::filesystem::path *__p, const std::__fs::filesystem::path *a3)
{
  std::string::size_type size;
  char v6;
  std::__fs::filesystem::path __base;
  std::__fs::filesystem::path v8;
  std::__fs::filesystem::path v9;

  std::__fs::filesystem::__weakly_canonical(&v8, __p, 0);
  std::__fs::filesystem::__weakly_canonical(&__base, a3, 0);
  std::__fs::filesystem::path::lexically_relative(&v9, &v8, &__base);
  size = HIBYTE(v9.__pn_.__r_.__value_.__r.__words[2]);
  v6 = HIBYTE(v9.__pn_.__r_.__value_.__r.__words[2]);
  if ((v9.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v9.__pn_.__r_.__value_.__l.__size_;
  if (size)
  {
    *a1 = v9;
    goto LABEL_8;
  }
  if ((SHIBYTE(v8.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    *a1 = v8;
    if ((v6 & 0x80) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  sub_20AEC60F4(a1, v8.__pn_.__r_.__value_.__l.__data_, v8.__pn_.__r_.__value_.__l.__size_);
  if ((*((_BYTE *)&v9.__pn_.__r_.__value_.__s + 23) & 0x80) != 0)
LABEL_7:
    operator delete(v9.__pn_.__r_.__value_.__l.__data_);
LABEL_8:
  if ((SHIBYTE(__base.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v8.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_12:
    operator delete(v8.__pn_.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(__base.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v8.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_12;
}

void sub_20B420F9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  if (*(char *)(v21 - 17) < 0)
  {
    operator delete(*(void **)(v21 - 40));
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a21 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a21 & 0x80000000) == 0)
LABEL_4:
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_20B421010(std::__fs::filesystem::path *a1@<X1>, const std::__fs::filesystem::path *a2@<X2>, std::__fs::filesystem::path *a3@<X8>)
{
  sub_20B420EA4(a3, a1, a2);
}

void sub_20B421018(int a1, std::__fs::filesystem::path *__from, std::__fs::filesystem::path *__to)
{
  std::__fs::filesystem::__copy(__from, __to, (std::__fs::filesystem::copy_options)0, 0);
}

void sub_20B42102C(int a1, std::__fs::filesystem::path *__from, std::__fs::filesystem::path *__to, std::__fs::filesystem::copy_options __opt)
{
  std::__fs::filesystem::__copy(__from, __to, __opt, 0);
}

BOOL sub_20B421040(int a1, std::__fs::filesystem::path *__from, std::__fs::filesystem::path *__to)
{
  return std::__fs::filesystem::__copy_file(__from, __to, (std::__fs::filesystem::copy_options)0, 0);
}

BOOL sub_20B421054(int a1, std::__fs::filesystem::path *__from, std::__fs::filesystem::path *__to, std::__fs::filesystem::copy_options __opt)
{
  return std::__fs::filesystem::__copy_file(__from, __to, __opt, 0);
}

void sub_20B421068(int a1, std::__fs::filesystem::path *__existing_symlink, std::__fs::filesystem::path *__new_symlink)
{
  std::__fs::filesystem::__copy_symlink(__existing_symlink, __new_symlink, 0);
}

BOOL sub_20B421078(int a1, std::__fs::filesystem::path *a2)
{
  return std::__fs::filesystem::__create_directory(a2, 0);
}

BOOL sub_20B421084(int a1, std::__fs::filesystem::path *a2, std::__fs::filesystem::path *__attributes)
{
  return std::__fs::filesystem::__create_directory(a2, __attributes, 0);
}

BOOL sub_20B421094(int a1, std::__fs::filesystem::path *a2)
{
  return std::__fs::filesystem::__create_directories(a2, 0);
}

void sub_20B4210A0(int a1, std::__fs::filesystem::path *__to, std::__fs::filesystem::path *__new_hard_link)
{
  std::__fs::filesystem::__create_hard_link(__to, __new_hard_link, 0);
}

void sub_20B4210B0(int a1, std::__fs::filesystem::path *__to, std::__fs::filesystem::path *__new_symlink)
{
  std::__fs::filesystem::__create_symlink(__to, __new_symlink, 0);
}

void sub_20B4210C0(int a1, std::__fs::filesystem::path *__to, std::__fs::filesystem::path *__new_symlink)
{
  std::__fs::filesystem::__create_directory_symlink(__to, __new_symlink, 0);
}

std::__fs::filesystem::path *sub_20B4210D0@<X0>(std::__fs::filesystem::path *a1@<X8>)
{
  return std::__fs::filesystem::__current_path(a1, 0);
}

void sub_20B4210D8(int a1, std::__fs::filesystem::path *a2)
{
  std::__fs::filesystem::__current_path(a2, 0);
}

BOOL sub_20B4210E4(int a1, std::__fs::filesystem::path *a2)
{
  BOOL v2;
  unsigned __int8 v4;

  std::__fs::filesystem::__status(a2, 0);
  if (v4)
    v2 = v4 == 255;
  else
    v2 = 1;
  return !v2;
}

BOOL sub_20B421120(int a1, std::__fs::filesystem::path *a2, std::__fs::filesystem::path *a3)
{
  return std::__fs::filesystem::__equivalent(a2, a3, 0);
}

uintmax_t sub_20B421130(int a1, std::__fs::filesystem::path *a2)
{
  return std::__fs::filesystem::__file_size(a2, 0);
}

uintmax_t sub_20B42113C(int a1, std::__fs::filesystem::path *a2)
{
  return std::__fs::filesystem::__hard_link_count(a2, 0);
}

uint64_t sub_20B421148(int a1, std::__fs::filesystem::path *a2)
{
  return std::__fs::filesystem::__last_write_time(a2, 0).__d_.__rep_;
}

void sub_20B421154(int a1, std::__fs::filesystem::path *a2, std::__fs::filesystem::perms a3, std::__fs::filesystem::perm_options a4)
{
  std::__fs::filesystem::__permissions(a2, a3, a4, 0);
}

std::__fs::filesystem::path *sub_20B421168@<X0>(std::__fs::filesystem::path *a1@<X1>, std::__fs::filesystem::path *a2@<X8>)
{
  return std::__fs::filesystem::__read_symlink(a2, a1, 0);
}

BOOL sub_20B421174(int a1, std::__fs::filesystem::path *a2)
{
  return std::__fs::filesystem::__remove(a2, 0);
}

uintmax_t sub_20B421180(int a1, std::__fs::filesystem::path *a2)
{
  return std::__fs::filesystem::__remove_all(a2, 0);
}

void sub_20B42118C(int a1, std::__fs::filesystem::path *__from, std::__fs::filesystem::path *__to)
{
  std::__fs::filesystem::__rename(__from, __to, 0);
}

void sub_20B42119C(int a1, std::__fs::filesystem::path *a2, uintmax_t __size)
{
  std::__fs::filesystem::__resize_file(a2, __size, 0);
}

std::__fs::filesystem::space_info *sub_20B4211AC@<X0>(std::__fs::filesystem::path *a1@<X1>, std::__fs::filesystem::space_info *a2@<X8>)
{
  return std::__fs::filesystem::__space(a2, a1, 0);
}

std::__fs::filesystem::file_status sub_20B4211B8(int a1, std::__fs::filesystem::path *a2)
{
  return std::__fs::filesystem::__status(a2, 0);
}

std::__fs::filesystem::file_status sub_20B4211C4(int a1, std::__fs::filesystem::path *a2)
{
  return std::__fs::filesystem::__symlink_status(a2, 0);
}

std::__fs::filesystem::path *sub_20B4211D0@<X0>(std::__fs::filesystem::path *a1@<X8>)
{
  return std::__fs::filesystem::__temp_directory_path(a1, 0);
}

BOOL sub_20B4211D8(int a1, std::__fs::filesystem::path *a2)
{
  char v3;

  std::__fs::filesystem::__status(a2, 0);
  return v3 == 4;
}

BOOL sub_20B421210(int a1, std::__fs::filesystem::path *a2)
{
  char v3;

  std::__fs::filesystem::__status(a2, 0);
  return v3 == 5;
}

BOOL sub_20B421248(int a1, std::__fs::filesystem::path *a2)
{
  char v3;

  std::__fs::filesystem::__status(a2, 0);
  return v3 == 2;
}

BOOL sub_20B421280(int a1, std::__fs::filesystem::path *__p)
{
  return std::__fs::filesystem::__fs_is_empty(__p, 0);
}

BOOL sub_20B42128C(int a1, std::__fs::filesystem::path *a2)
{
  char v3;

  std::__fs::filesystem::__status(a2, 0);
  return v3 == 1;
}

BOOL sub_20B4212C4(int a1, std::__fs::filesystem::path *a2)
{
  char v3;

  std::__fs::filesystem::__status(a2, 0);
  return v3 == 6;
}

BOOL sub_20B4212FC(int a1, std::__fs::filesystem::path *a2)
{
  unsigned __int8 v3;

  std::__fs::filesystem::__status(a2, 0);
  if (!v3)
    return 0;
  if (v3 == 255)
    return 0;
  return v3 - 4 < 0xFFFFFFFD;
}

BOOL sub_20B421354(int a1, std::__fs::filesystem::path *a2)
{
  char v3;

  std::__fs::filesystem::__status(a2, 0);
  return v3 == 7;
}

BOOL sub_20B42138C(int a1, std::__fs::filesystem::path *a2)
{
  char v3;

  std::__fs::filesystem::__symlink_status(a2, 0);
  return v3 == 3;
}

void sub_20B4213C4(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::ios_base *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;

  v2 = (_QWORD *)operator new();
  v3 = MEMORY[0x24BEDB838];
  v4 = MEMORY[0x24BEDB838] + 64;
  v2[53] = MEMORY[0x24BEDB838] + 64;
  v5 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  v6 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  *v2 = v5;
  *(_QWORD *)((char *)v2 + *(_QWORD *)(v5 - 24)) = v6;
  v2[1] = 0;
  v7 = (std::ios_base *)((char *)v2 + *(_QWORD *)(*v2 - 24));
  std::ios_base::init(v7, v2 + 2);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  *v2 = v3 + 24;
  v2[53] = v4;
  MEMORY[0x20BD350E0](v2 + 2);
  std::ifstream::open();
  if (v2[17])
  {
    v8 = (std::__shared_weak_count *)operator new(0x30uLL);
    v8->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    v8->__shared_weak_owners_ = 0;
    v8->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41B550;
    v10 = (_QWORD *)operator new();
    *v10 = &off_24C41B5A0;
    v10[1] = 0;
    v10[2] = 0;
    v10[3] = v2;
    v8[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C41BBB0;
    v8[1].__shared_owners_ = (uint64_t)v2;
    v8[1].__shared_weak_owners_ = (uint64_t)v10;
    *a1 = &off_24C41B858;
    a1[1] = v8 + 1;
    a1[2] = v8;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    a1[1] = 0;
    a1[2] = 0;
    *a1 = &off_24C41B858;
    (*(void (**)(_QWORD *))(*v2 + 8))(v2);
  }
}

void sub_20B4215AC(_Unwind_Exception *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  void *v4;

  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_20B4215D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_20B4215F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::istream::~istream();
  MEMORY[0x20BD35758](v1 + 424);
  MEMORY[0x20BD3583C](v1, 0x10F1C40A09425BCLL);
  _Unwind_Resume(a1);
}

void sub_20B421634(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::ios_base *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;

  v2 = (_QWORD *)operator new();
  v3 = MEMORY[0x24BEDB840];
  v4 = MEMORY[0x24BEDB840] + 64;
  v2[52] = MEMORY[0x24BEDB840] + 64;
  v5 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 8);
  v6 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 16);
  *v2 = v5;
  *(_QWORD *)((char *)v2 + *(_QWORD *)(v5 - 24)) = v6;
  v7 = (std::ios_base *)((char *)v2 + *(_QWORD *)(*v2 - 24));
  std::ios_base::init(v7, v2 + 1);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  *v2 = v3 + 24;
  v2[52] = v4;
  MEMORY[0x20BD350E0](v2 + 1);
  std::ofstream::open();
  if (v2[16])
  {
    v8 = (std::__shared_weak_count *)operator new(0x30uLL);
    v8->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    v8->__shared_weak_owners_ = 0;
    v8->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41B5F0;
    v10 = (_QWORD *)operator new();
    *v10 = &off_24C41B640;
    v10[1] = 0;
    v10[2] = 0;
    v10[3] = v2;
    v8[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24C41BBD8;
    v8[1].__shared_owners_ = (uint64_t)v2;
    v8[1].__shared_weak_owners_ = (uint64_t)v10;
    *a1 = &off_24C41B880;
    a1[1] = v8 + 1;
    a1[2] = v8;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    a1[1] = 0;
    a1[2] = 0;
    *a1 = &off_24C41B880;
    (*(void (**)(_QWORD *))(*v2 + 8))(v2);
  }
}

void sub_20B421818(_Unwind_Exception *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  void *v4;

  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_20B421840(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_20B421860(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x20BD35758](v1 + 416);
  MEMORY[0x20BD3583C](v1, 0x10F1C4067547207);
  _Unwind_Resume(a1);
}

void sub_20B4218A0(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t *p_shared_owners;
  unint64_t v5;
  __int128 v6;
  uint64_t v7;
  const std::__fs::filesystem::directory_entry *v8;
  const std::__fs::filesystem::directory_entry *v9;
  unint64_t v10;
  void **v11;
  void **v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  void **v22;
  std::__shared_weak_count *cntrl;
  uint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  uint64_t *v27;
  unint64_t v28;
  void *v29;
  std::__fs::filesystem::directory_iterator v30;
  std::__fs::filesystem::directory_iterator v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;

  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  MEMORY[0x20BD35590](&v31, a1, 0, a2);
  v30 = v31;
  if (v31.__imp_.__cntrl_)
  {
    p_shared_owners = &v31.__imp_.__cntrl_->__shared_owners_;
    do
      v5 = __ldxr((unint64_t *)p_shared_owners);
    while (__stxr(v5 + 1, (unint64_t *)p_shared_owners));
  }
  while (v30.__imp_.__ptr_)
  {
    v8 = std::__fs::filesystem::directory_iterator::__dereference(&v30);
    v9 = std::__fs::filesystem::directory_iterator::__dereference(&v30);
    if (((1 << v9->__data_.__cache_type_) & 0x17) != 0)
    {
      std::__fs::filesystem::__status(&v9->__p_, 0);
      v11 = (void **)a3[1];
      v10 = a3[2];
      if ((unint64_t)v11 >= v10)
        goto LABEL_14;
    }
    else
    {
      LOBYTE(v29) = v9->__data_.__type_;
      HIDWORD(v29) = v9->__data_.__non_sym_perms_;
      v11 = (void **)a3[1];
      v10 = a3[2];
      if ((unint64_t)v11 >= v10)
      {
LABEL_14:
        v12 = (void **)*a3;
        v13 = ((uint64_t)v11 - *a3) >> 5;
        v14 = v13 + 1;
        if ((unint64_t)(v13 + 1) >> 59)
          sub_20AEC60B8();
        v15 = v10 - (_QWORD)v12;
        if (v15 >> 4 > v14)
          v14 = v15 >> 4;
        if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFE0)
          v16 = 0x7FFFFFFFFFFFFFFLL;
        else
          v16 = v14;
        v36 = a3 + 2;
        if (v16)
        {
          if (v16 >> 59)
            sub_20AEC60CC();
          v17 = operator new(32 * v16);
          v18 = (uint64_t)&v17[4 * v13];
          v32 = v17;
          v33 = v18;
          v34 = v18;
          v35 = (char *)&v17[4 * v16];
          if ((SHIBYTE(v8->__p_.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_23:
            v19 = *(_OWORD *)&v8->__p_.__pn_.__r_.__value_.__l.__data_;
            *(_QWORD *)(v18 + 16) = *((_QWORD *)&v8->__p_.__pn_.__r_.__value_.__l + 2);
            *(_OWORD *)v18 = v19;
            v17[4 * v13 + 3] = v29;
            v7 = v18 + 32;
            if (v11 == v12)
            {
LABEL_34:
              *a3 = v18;
              a3[1] = v7;
              a3[2] = (uint64_t)v35;
LABEL_35:
              if (v12)
                operator delete(v12);
              goto LABEL_8;
            }
            do
            {
LABEL_28:
              v21 = *((_OWORD *)v11 - 2);
              *(_QWORD *)(v18 - 16) = *(v11 - 2);
              *(_OWORD *)(v18 - 32) = v21;
              *(v11 - 3) = 0;
              *(v11 - 2) = 0;
              *(v11 - 4) = 0;
              *(_QWORD *)(v18 - 8) = *(v11 - 1);
              v18 -= 32;
              v11 -= 4;
            }
            while (v11 != v12);
            v12 = (void **)*a3;
            v22 = (void **)a3[1];
            *a3 = v18;
            a3[1] = v7;
            a3[2] = (uint64_t)v35;
            while (v22 != v12)
            {
              if (*((char *)v22 - 9) < 0)
                operator delete(*(v22 - 4));
              v22 -= 4;
            }
            goto LABEL_35;
          }
        }
        else
        {
          v17 = 0;
          v18 = 32 * v13;
          v32 = 0;
          v33 = 32 * v13;
          v34 = 32 * v13;
          v35 = 0;
          if ((SHIBYTE(v8->__p_.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_23;
        }
        sub_20AEC60F4((_BYTE *)v18, v8->__p_.__pn_.__r_.__value_.__l.__data_, v8->__p_.__pn_.__r_.__value_.__l.__size_);
        v12 = (void **)*a3;
        v11 = (void **)a3[1];
        v18 = v33;
        v20 = v34;
        v17[4 * v13 + 3] = v29;
        v7 = v20 + 32;
        if (v11 == v12)
          goto LABEL_34;
        goto LABEL_28;
      }
    }
    if (SHIBYTE(v8->__p_.__pn_.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_20AEC60F4(v11, v8->__p_.__pn_.__r_.__value_.__l.__data_, v8->__p_.__pn_.__r_.__value_.__l.__size_);
    }
    else
    {
      v6 = *(_OWORD *)&v8->__p_.__pn_.__r_.__value_.__l.__data_;
      v11[2] = (void *)v8->__p_.__pn_.__r_.__value_.__r.__words[2];
      *(_OWORD *)v11 = v6;
    }
    v11[3] = v29;
    v7 = (uint64_t)(v11 + 4);
    a3[1] = (uint64_t)(v11 + 4);
LABEL_8:
    a3[1] = v7;
    std::__fs::filesystem::directory_iterator::__increment(&v30, 0);
  }
  cntrl = v30.__imp_.__cntrl_;
  if (v30.__imp_.__cntrl_)
  {
    v24 = &v30.__imp_.__cntrl_->__shared_owners_;
    do
      v25 = __ldaxr((unint64_t *)v24);
    while (__stlxr(v25 - 1, (unint64_t *)v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))cntrl->__on_zero_shared)(cntrl);
      std::__shared_weak_count::__release_weak(cntrl);
    }
  }
  v26 = v31.__imp_.__cntrl_;
  if (v31.__imp_.__cntrl_)
  {
    v27 = &v31.__imp_.__cntrl_->__shared_owners_;
    do
      v28 = __ldaxr((unint64_t *)v27);
    while (__stlxr(v28 - 1, (unint64_t *)v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
}

void sub_20B421BC4(_Unwind_Exception *a1)
{
  void **v1;

  sub_20AF4BA50(v1);
  _Unwind_Resume(a1);
}

void sub_20B421BD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  va_list va1;
  uint64_t v10;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v8 = va_arg(va2, _QWORD);
  v10 = va_arg(va2, _QWORD);
  *(_QWORD *)(v2 + 8) = v3;
  sub_20AEC147C((uint64_t)va);
  sub_20AEC147C((uint64_t)va1);
  sub_20AEC147C((uint64_t)va2);
  sub_20AF4BA50((void **)v2);
  _Unwind_Resume(a1);
}

_UNKNOWN **sub_20B421C2C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_25463CB18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25463CB18))
    return &off_253EC31C0;
  __cxa_atexit((void (*)(void *))nullsub_306, &off_253EC31C0, &dword_20AEBB000);
  __cxa_guard_release(&qword_25463CB18);
  return &off_253EC31C0;
}

uint64_t sub_20B421C9C(uint64_t a1)
{
  void **v2;
  void **v3;
  void **v5;

  v3 = *(void ***)(a1 + 8);
  v2 = *(void ***)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      v5 = v2 - 4;
      *(_QWORD *)(a1 + 16) = v2 - 4;
      if (*((char *)v2 - 9) < 0)
      {
        operator delete(*v5);
        v5 = *(void ***)(a1 + 16);
      }
      v2 = v5;
    }
    while (v5 != v3);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void **sub_20B421D00(void **__dst, void *__src, size_t __len)
{
  unint64_t v6;
  void *v7;
  unint64_t v8;
  void *v9;
  unint64_t v10;
  size_t v11;
  unint64_t v12;
  uint64_t v13;

  LODWORD(v6) = *((char *)__dst + 23);
  if ((v6 & 0x80000000) != 0)
  {
    v10 = (unint64_t)__dst[2];
    v8 = (v10 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if (__len > v8)
    {
      v11 = 0x7FFFFFFFFFFFFFF7;
      if (0x7FFFFFFFFFFFFFF7 - (v10 & 0x7FFFFFFFFFFFFFFFLL) >= __len - v8)
      {
        v9 = *__dst;
        if (v8 > 0x3FFFFFFFFFFFFFF2)
        {
LABEL_15:
          v7 = operator new(v11);
          memcpy(v7, __src, __len);
          if (v8 != 22)
            operator delete(v9);
          __dst[2] = (void *)(v11 | 0x8000000000000000);
          *__dst = v7;
LABEL_23:
          __dst[1] = (void *)__len;
          goto LABEL_24;
        }
LABEL_8:
        v12 = 2 * v8;
        if (__len > 2 * v8)
          v12 = __len;
        v13 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v12 | 7) != 0x17)
          v13 = v12 | 7;
        if (v12 >= 0x17)
          v11 = v13 + 1;
        else
          v11 = 23;
        goto LABEL_15;
      }
LABEL_25:
      sub_20AEC0138();
    }
    v6 = HIBYTE(v10);
    v7 = *__dst;
  }
  else
  {
    v7 = __dst;
    if (__len > 0x16)
    {
      if (__len - 0x7FFFFFFFFFFFFFF7 >= 0x800000000000001FLL)
      {
        v8 = 22;
        v9 = __dst;
        goto LABEL_8;
      }
      goto LABEL_25;
    }
  }
  if (__len)
  {
    memmove(v7, __src, __len);
    LOBYTE(v6) = *((_BYTE *)__dst + 23);
  }
  if ((v6 & 0x80) != 0)
    goto LABEL_23;
  *((_BYTE *)__dst + 23) = __len & 0x7F;
LABEL_24:
  *((_BYTE *)v7 + __len) = 0;
  return __dst;
}

void sub_20B421E5C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41B550;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B421E6C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41B550;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B421E9C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 40);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20B421EFC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B421F20(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20B421F38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 == 0x800000020B60C1B3)
    return a1 + 24;
  if (((v3 & 0x800000020B60C1B3 & 0x8000000000000000) != 0) == __OFSUB__(v3, 0x800000020B60C1B3))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020B60C1B3 & 0x7FFFFFFFFFFFFFFFLL)))
    return a1 + 24;
  return 0;
}

void sub_20B421FB8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41B5F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B421FC8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41B5F0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B421FF8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 40);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20B422058(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B42207C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20B422094(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 == 0x800000020B60C2BDLL)
    return a1 + 24;
  if (((v3 & 0x800000020B60C2BDLL & 0x8000000000000000) != 0) == __OFSUB__(v3, 0x800000020B60C2BDLL))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020B60C2BDLL & 0x7FFFFFFFFFFFFFFFLL)))
    return a1 + 24;
  return 0;
}

void sub_20B422114(const std::__fs::filesystem::path *a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__fs::filesystem::path::__string_view v9;
  __int128 *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v11;
  std::basic_string_view<_CharT, _Traits>::size_type v12;
  unint64_t v13;
  void *__p[2];
  unint64_t v15;
  uint64_t v16;
  __int128 __dst;
  unint64_t v18;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, const std::__fs::filesystem::path *))(*(_QWORD *)a3 + 272))(&v16, a3, a1);
  if ((_BYTE)v16)
  {
    if (v16 != 255 && v16 == 2)
    {
      a4[1] = 0;
      a4[2] = 0;
      *a4 = &off_24C41B880;
      return;
    }
  }
  v9 = std::__fs::filesystem::path::__parent_path(a1);
  if (v9.__size_ >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  if (v9.__size_ >= 0x17)
  {
    v11 = (v9.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9.__size_ | 7) != 0x17)
      v11 = v9.__size_ | 7;
    v12 = v11 + 1;
    p_dst = (__int128 *)operator new(v11 + 1);
    *((_QWORD *)&__dst + 1) = v9.__size_;
    v18 = v12 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
    goto LABEL_13;
  }
  HIBYTE(v18) = v9.__size_;
  p_dst = &__dst;
  if (v9.__size_)
LABEL_13:
    memmove(p_dst, v9.__data_, v9.__size_);
  *((_BYTE *)p_dst + v9.__size_) = 0;
  v15 = v18;
  *(_OWORD *)__p = __dst;
  v13 = HIBYTE(v18);
  if ((v18 & 0x8000000000000000) != 0)
    v13 = *((_QWORD *)&__dst + 1);
  if (!v13
    || ((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)a3 + 312))(a3, __p) & 1) != 0
    || ((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)a3 + 128))(a3, __p) & 1) != 0)
  {
    (*(void (**)(uint64_t, const std::__fs::filesystem::path *, _QWORD))(*(_QWORD *)a3 + 376))(a3, a1, a2);
    if (SHIBYTE(v15) < 0)
LABEL_20:
      operator delete(__p[0]);
  }
  else
  {
    a4[1] = 0;
    a4[2] = 0;
    *a4 = &off_24C41B880;
    if (SHIBYTE(v15) < 0)
      goto LABEL_20;
  }
}

void sub_20B4222C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B4222E4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  char *v6;

  *a1 = &off_24C41B858;
  v6 = (char *)operator new(0x108uLL);
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *(_QWORD *)v6 = &off_24C41B918;
  std::streambuf::basic_streambuf();
  *((_QWORD *)v6 + 5) = &off_24C41B9A0;
  *((_QWORD *)v6 + 8) = a3;
  *((_QWORD *)v6 + 9) = a3;
  *((_QWORD *)v6 + 10) = a3 + a2;
  *((_QWORD *)v6 + 14) = &unk_24C41BB30;
  *((_QWORD *)v6 + 6) = &unk_24C41BA30;
  *((_QWORD *)v6 + 3) = &unk_24C41BB08;
  *((_QWORD *)v6 + 4) = 0;
  std::ios_base::init((std::ios_base *)(v6 + 112), v6 + 48);
  *((_QWORD *)v6 + 31) = 0;
  *((_DWORD *)v6 + 64) = -1;
  *((_QWORD *)v6 + 3) = &off_24C41B978;
  *((_QWORD *)v6 + 14) = &unk_24C41BAB8;
  *((_QWORD *)v6 + 5) = &off_24C41B9A0;
  *((_QWORD *)v6 + 6) = &unk_24C41BA30;
  a1[1] = v6 + 40;
  a1[2] = v6;
  return a1;
}

uint64_t sub_20B422408(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20B422470(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B4224D8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_20B4224E8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20B422550(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B4225B8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

void sub_20B4225C8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41B918;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B4225D8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41B918;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B422608(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_20B422618(uint64_t a1)
{
  uint64_t v2;

  v2 = std::istream::~istream();
  MEMORY[0x20BD35758](v2 + 88);
  std::streambuf::~streambuf();
  return a1;
}

void sub_20B422654()
{
  uint64_t v0;

  v0 = std::istream::~istream();
  MEMORY[0x20BD35758](v0 + 88);
  std::streambuf::~streambuf();
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B4226A4(uint64_t a1)
{
  std::istream::~istream();
  MEMORY[0x20BD35758](a1 + 72);
  return std::streambuf::~streambuf();
}

void sub_20B4226DC(uint64_t a1)
{
  std::istream::~istream();
  MEMORY[0x20BD35758](a1 + 72);
  std::streambuf::~streambuf();
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B422730(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_20B422738(_QWORD *a1)
{
  char *v1;

  v1 = (char *)a1 + *(_QWORD *)(*a1 - 24);
  std::istream::~istream();
  MEMORY[0x20BD35758](v1 + 88);
  return std::streambuf::~streambuf();
}

void sub_20B422778(_QWORD *a1)
{
  char *v1;

  v1 = (char *)a1 + *(_QWORD *)(*a1 - 24);
  std::istream::~istream();
  MEMORY[0x20BD35758](v1 + 88);
  std::streambuf::~streambuf();
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B4227D0(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20B422838(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B4228A0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t sub_20B4228A8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20B422910(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B422978(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

_QWORD *sub_20B422980(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  std::string *v7;
  std::string::size_type size;
  _QWORD *result;
  _QWORD *v10;
  std::string v11;

  v2 = a2;
  v3 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v4 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v4 = v3;
  }
  v5 = sub_20AEC01D0(a1, a2, v4);
  v6 = sub_20AEC01D0(v5, (uint64_t)":", 1);
  std::to_string(&v11, *(unsigned __int16 *)(v2 + 24));
  if ((v11.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v7 = &v11;
  else
    v7 = (std::string *)v11.__r_.__value_.__r.__words[0];
  if ((v11.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v11.__r_.__value_.__r.__words[2]);
  else
    size = v11.__r_.__value_.__l.__size_;
  result = sub_20AEC01D0(v6, (uint64_t)v7, size);
  v10 = result;
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v11.__r_.__value_.__l.__data_);
    return v10;
  }
  return result;
}

void sub_20B422A30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B422A4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t **a5@<X8>)
{
  uint64_t *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  std::string *v18;
  uint64_t v19;
  _QWORD *result;
  uint64_t v21;
  std::logic_error *exception;
  _QWORD v23[3];
  _QWORD *v24;
  std::string v25;
  std::string *v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v10 = (uint64_t *)operator new();
  *v10 = 0;
  *a5 = v10;
  a5[1] = (uint64_t *)sub_20B423460;
  v11 = (_QWORD *)a4[3];
  if (v11)
  {
    if (v11 == a4)
    {
      v24 = v23;
      (*(void (**)(_QWORD *, _QWORD *))(*a4 + 24))(a4, v23);
    }
    else
    {
      v24 = (_QWORD *)a4[3];
      a4[3] = 0;
    }
  }
  else
  {
    v24 = 0;
  }
  v12 = operator new();
  sub_20B4270B0(v12);
  v13 = *v10;
  *v10 = v12;
  if (v13)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v12 = *v10;
  }
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v12 + 40))(v12, a1, a2, a3);
  v15 = v14;
  if (!v14)
    goto LABEL_19;
  v16 = *v10;
  v17 = (uint64_t)v24;
  if (v24)
  {
    if (v24 == v23)
    {
      v26 = &v25;
      (*(void (**)(_QWORD *, std::string *))(v23[0] + 24))(v23, &v25);
      goto LABEL_14;
    }
    v17 = (*(uint64_t (**)(void))(*v24 + 16))();
  }
  v26 = (std::string *)v17;
LABEL_14:
  (*(void (**)(uint64_t, std::string *))(*(_QWORD *)v16 + 56))(v16, &v25);
  v18 = v26;
  if (v26 == &v25)
  {
    v19 = 4;
    v18 = &v25;
  }
  else
  {
    if (!v26)
      goto LABEL_19;
    v19 = 5;
  }
  (*(void (**)(void))(v18->__r_.__value_.__r.__words[0] + 8 * v19))();
LABEL_19:
  result = v24;
  if (v24 == v23)
  {
    v21 = 4;
    result = v23;
  }
  else
  {
    if (!v24)
      goto LABEL_24;
    v21 = 5;
  }
  result = (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v21))();
LABEL_24:
  if ((v15 & 1) == 0)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B422D98("Client failed to connect to server at '", a1, (uint64_t)"'");
    std::logic_error::logic_error(exception, &v25);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  return result;
}

void sub_20B422CB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B422D98(char *__s, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  char v6;
  _DWORD v7[6];
  int v8;
  _QWORD v9[5];
  _QWORD *v10;

  v8 = 0;
  sub_20AF4C134(v7, __s);
  sub_20B4234B0((uint64_t)&v6, (uint64_t)v7, a2);
  v9[0] = v7;
  v9[1] = a3;
  v9[2] = v7;
  v9[3] = a3;
  v9[4] = a3;
  if (v8 == -1)
    sub_20AECFAB8();
  v10 = v9;
  ((void (*)(_QWORD **, _DWORD *))off_24C41BD00[v8])(&v10, v7);
  if (v8 == -1)
    sub_20AECFAB8();
  v9[0] = &v10;
  result = ((uint64_t (*)(_QWORD *, _DWORD *))off_24C41BD18[v8])(v9, v7);
  if (v8 != -1)
    return ((uint64_t (*)(_QWORD *, _DWORD *))off_24C41BCD0[v8])(v9, v7);
  return result;
}

void sub_20B422E90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B422EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B422EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B422ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B422EE0(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v2)
    (*(void (**)(void))(a1 + 16))();
  return a1;
}

void sub_20B422F18(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v2)
    (*(void (**)(void))(a1 + 16))();
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B422F60(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(***(_QWORD ***)(a1 + 8) + 16))(**(_QWORD **)(a1 + 8));
}

uint64_t sub_20B422F74(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(***(_QWORD ***)(a1 + 8) + 24))(**(_QWORD **)(a1 + 8));
}

uint64_t sub_20B422F88(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t result;

  v2 = *(uint64_t **)(a1 + 8);
  result = *v2;
  if (*v2)
  {
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)result + 48))(result, a2, 3) & 1) != 0)
    {
      return 1;
    }
    else
    {
      result = *v2;
      *v2 = 0;
      if (result)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)result + 8))(result);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_20B422FEC(uint64_t a1)
{
  uint64_t result;

  result = **(_QWORD **)(a1 + 8);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 64))(result);
  return result;
}

_QWORD *sub_20B423008@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X2>, uint64_t a3@<X3>, std::string::size_type *a4@<X8>)
{
  int v8;
  int v9;
  std::string::size_type v10;
  _QWORD *v11;
  unsigned __int8 v12;
  _QWORD *result;
  uint64_t v14;
  void *__p[2];
  uint64_t v16;
  char v17;
  _QWORD v18[3];
  _QWORD *v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v10 = operator new();
  v11 = (_QWORD *)a2[3];
  if (v11)
  {
    if (v11 == a2)
    {
      v19 = v18;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v18);
    }
    else
    {
      v19 = (_QWORD *)a2[3];
      a2[3] = 0;
    }
  }
  else
  {
    v19 = 0;
  }
  LOBYTE(__p[0]) = 0;
  v17 = 0;
  if (*(_BYTE *)(a3 + 24))
  {
    *(_OWORD *)__p = *(_OWORD *)a3;
    v16 = *(_QWORD *)(a3 + 16);
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_QWORD *)a3 = 0;
    v17 = 1;
  }
  v12 = atomic_load((unsigned __int8 *)&qword_25463D088);
  if ((v12 & 1) == 0 && __cxa_guard_acquire(&qword_25463D088))
  {
    sub_20B423754((uint64_t)&unk_25463CFB0);
    __cxa_atexit((void (*)(void *))sub_20B4237F4, &unk_25463CFB0, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463D088);
  }
  sub_20B425D00(v10, a1, v8, v9, v18, (uint64_t)__p, (std::mutex *)&unk_25463CFB0);
  *a4 = v10;
  if (v17)
  {
    if (SHIBYTE(v16) < 0)
      operator delete(__p[0]);
  }
  result = v19;
  if (v19 == v18)
  {
    v14 = 4;
    result = v18;
  }
  else
  {
    if (!v19)
      return result;
    v14 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v14))();
}

void sub_20B4231C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char *a20)
{
  uint64_t v20;
  char *v22;
  uint64_t v23;

  __cxa_guard_abort(&qword_25463D088);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  v22 = a20;
  if (a20 == &a17)
  {
    v23 = 4;
    v22 = &a17;
  }
  else
  {
    if (!a20)
      goto LABEL_9;
    v23 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v22 + 8 * v23))();
LABEL_9:
  MEMORY[0x20BD3583C](v20, 0x10B3C4063A2C955);
  _Unwind_Resume(a1);
}

uint64_t sub_20B423258(uint64_t a1)
{
  unint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v2)
  {
    sub_20B424AA8(*(std::mutex **)(v2 + 192), v2);
    if (*(char *)(v2 + 183) < 0)
    {
      operator delete(*(void **)(v2 + 160));
      if ((*(char *)(v2 + 151) & 0x80000000) == 0)
        goto LABEL_4;
    }
    else if ((*(char *)(v2 + 151) & 0x80000000) == 0)
    {
LABEL_4:
      std::condition_variable::~condition_variable((std::condition_variable *)(v2 + 72));
      std::mutex::~mutex((std::mutex *)(v2 + 8));
      MEMORY[0x20BD3583C](v2, 0x10B3C4063A2C955);
      return a1;
    }
    operator delete(*(void **)(v2 + 128));
    goto LABEL_4;
  }
  return a1;
}

void sub_20B4232E8(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (!v1)
LABEL_8:
    JUMPOUT(0x20BD3583CLL);
  sub_20B424AA8(*(std::mutex **)(v1 + 192), v1);
  if (*(char *)(v1 + 183) < 0)
  {
    operator delete(*(void **)(v1 + 160));
    if ((*(char *)(v1 + 151) & 0x80000000) == 0)
      goto LABEL_4;
  }
  else if ((*(char *)(v1 + 151) & 0x80000000) == 0)
  {
LABEL_4:
    std::condition_variable::~condition_variable((std::condition_variable *)(v1 + 72));
    std::mutex::~mutex((std::mutex *)(v1 + 8));
    MEMORY[0x20BD3583C](v1, 0x10B3C4063A2C955);
    goto LABEL_8;
  }
  operator delete(*(void **)(v1 + 128));
  goto LABEL_4;
}

uint64_t sub_20B423388(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) + 160;
}

uint64_t sub_20B423394(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) + 128;
}

uint64_t sub_20B4233A0(uint64_t a1, uint64_t a2)
{
  sub_20B424D8C(*(std::mutex **)(*(_QWORD *)(a1 + 8) + 192), *(_QWORD *)(a1 + 8), a2);
  return 1;
}

uint64_t sub_20B4233C4(uint64_t a1)
{
  uint64_t v1;
  std::mutex *m;
  _BOOL4 owns;
  std::unique_lock<std::mutex> v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1 || *(uint64_t (***)())v1 != off_24C41BD50)
    v1 = 0;
  m = (std::mutex *)(v1 + 8);
  v5.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(v1 + 8);
  v5.__owns_ = 1;
  std::mutex::lock((std::mutex *)(v1 + 8));
  if (*(_BYTE *)(v1 + 120))
  {
    *(_BYTE *)(v1 + 120) = 0;
LABEL_9:
    std::mutex::unlock(m);
    return 1;
  }
  do
    std::condition_variable::wait((std::condition_variable *)(v1 + 72), &v5);
  while (!*(_BYTE *)(v1 + 120));
  owns = v5.__owns_;
  *(_BYTE *)(v1 + 120) = 0;
  if (owns)
  {
    m = v5.__m_;
    goto LABEL_9;
  }
  return 1;
}

_QWORD *sub_20B423460(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;

  if (result)
  {
    v1 = result;
    v2 = *result;
    *v1 = 0;
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

void sub_20B4234B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20AEC0BD8(v5);
  v21[0] = v5;
  sub_20B422980((_QWORD *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_20AEC0138();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD35758](v14 + 128);
    MEMORY[0x20BD3583C](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_20AECFAB8();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24C41BCE8[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_20B423700(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20B423724(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B423740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20B52CE84((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B423754(uint64_t a1)
{
  *(_QWORD *)a1 = 850045863;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_QWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 3;
  *(_BYTE *)(a1 + 68) = 1;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  MEMORY[0x20BD3535C](a1 + 88);
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_DWORD *)(a1 + 184) = 1065353216;
  *(_QWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 192) = a1 + 200;
  return a1;
}

void sub_20B4237D4(_Unwind_Exception *a1)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 80);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  std::mutex::~mutex((std::mutex *)v1);
  _Unwind_Resume(a1);
}

void sub_20B4237F4(uint64_t a1)
{
  char *v2;
  void *v3;
  std::__shared_weak_count *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  sub_20B1F7D30(*(char **)(a1 + 200));
  v2 = *(char **)(a1 + 168);
  if (v2)
  {
    do
    {
      v5 = *(char **)v2;
      sub_20B42688C(*((_QWORD **)v2 + 16));
      v6 = (char *)*((_QWORD *)v2 + 14);
      if (v6 == v2 + 88)
      {
        v6 = v2 + 88;
        v7 = 4;
      }
      else
      {
        if (!v6)
          goto LABEL_13;
        v7 = 5;
      }
      (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
LABEL_13:
      v8 = (char *)*((_QWORD *)v2 + 10);
      if (v8 == v2 + 56)
      {
        v8 = v2 + 56;
        v9 = 4;
        goto LABEL_17;
      }
      if (v8)
      {
        v9 = 5;
LABEL_17:
        (*(void (**)(void))(*(_QWORD *)v8 + 8 * v9))();
      }
      if (v2[39] < 0)
        operator delete(*((void **)v2 + 2));
      operator delete(v2);
      v2 = v5;
    }
    while (v5);
  }
  v3 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 152) = 0;
  if (v3)
    operator delete(v3);
  std::recursive_mutex::~recursive_mutex((std::recursive_mutex *)(a1 + 88));
  v4 = *(std::__shared_weak_count **)(a1 + 80);
  if (v4)
    std::__shared_weak_count::__release_weak(v4);
  std::mutex::~mutex((std::mutex *)a1);
}

void sub_20B4238E0(_QWORD *a1, std::mutex *this, int a3)
{
  BOOL v6;
  std::__shared_weak_count *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  _QWORD *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;

  std::mutex::lock(this);
  if (a3 == 1)
  {
    if (BYTE4(this[1].__m_.__sig))
      v6 = (this[1].__m_.__sig & 0xFFFFFFFD) == 0;
    else
      v6 = 0;
    if (!v6)
    {
      LODWORD(this[1].__m_.__sig) = 1;
      BYTE4(this[1].__m_.__sig) = 1;
      goto LABEL_18;
    }
    LODWORD(this[1].__m_.__sig) = 2;
    BYTE4(this[1].__m_.__sig) = 1;
    *a1 = 0;
    a1[1] = 0;
    v7 = *(std::__shared_weak_count **)&this[1].__m_.__opaque[8];
    if (!v7)
      goto LABEL_18;
  }
  else
  {
    LODWORD(this[1].__m_.__sig) = a3;
    BYTE4(this[1].__m_.__sig) = 1;
    if (a3 != 2)
      goto LABEL_18;
    *a1 = 0;
    a1[1] = 0;
    v7 = *(std::__shared_weak_count **)&this[1].__m_.__opaque[8];
    if (!v7)
      goto LABEL_18;
  }
  v8 = std::__shared_weak_count::lock(v7);
  a1[1] = v8;
  if (v8)
  {
    v9 = *(_QWORD *)this[1].__m_.__opaque;
    *a1 = v9;
    if (v9)
    {
LABEL_13:
      std::mutex::unlock(this);
      return;
    }
    v10 = v8;
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_18:
  v13 = operator new(0x20uLL);
  v13[1] = 0;
  v13[2] = 0;
  *v13 = &off_24C41BDF8;
  v13[3] = (char *)this + 88;
  std::recursive_mutex::lock((std::recursive_mutex *)&this[1].__m_.__opaque[16]);
  *a1 = v13 + 3;
  a1[1] = v13;
  v14 = v13 + 2;
  do
    v15 = __ldxr(v14);
  while (__stxr(v15 + 1, v14));
  v16 = *(std::__shared_weak_count **)&this[1].__m_.__opaque[8];
  *(_QWORD *)this[1].__m_.__opaque = v13 + 3;
  *(_QWORD *)&this[1].__m_.__opaque[8] = v13;
  if (!v16)
    goto LABEL_13;
  std::__shared_weak_count::__release_weak(v16);
  std::mutex::unlock(this);
}

void sub_20B423A3C(_Unwind_Exception *a1)
{
  std::mutex *v1;
  std::__shared_weak_count *v2;
  void *v4;

  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_20B423A5C(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B423A70(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_20B42688C(*(_QWORD **)(a1 + 112));
  v2 = *(_QWORD **)(a1 + 96);
  if (v2 == (_QWORD *)(a1 + 72))
  {
    v3 = 4;
    v2 = (_QWORD *)(a1 + 72);
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  v4 = *(_QWORD **)(a1 + 64);
  if (v4 == (_QWORD *)(a1 + 40))
  {
    v5 = 4;
    v4 = (_QWORD *)(a1 + 40);
  }
  else
  {
    if (!v4)
      goto LABEL_11;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_11:
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_20B423B18(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_20B42688C(*(_QWORD **)(a1 + 80));
  v2 = *(_QWORD **)(a1 + 64);
  if (v2 == (_QWORD *)(a1 + 40))
  {
    v3 = 4;
    v2 = (_QWORD *)(a1 + 40);
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  v4 = *(_QWORD **)(a1 + 32);
  if (v4 == (_QWORD *)(a1 + 8))
  {
    v5 = 4;
    v4 = (_QWORD *)(a1 + 8);
    goto LABEL_10;
  }
  if (v4)
  {
    v5 = 5;
LABEL_10:
    (*(void (**)(void))(*v4 + 8 * v5))();
  }
  return a1;
}

void sub_20B423BA0(std::mutex *this, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  char *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  void **v13;
  unsigned __int8 *v14;
  char v15;
  void *v16;
  void **v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  const void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void **v26;
  void **v27;
  char *v28;
  float v29;
  float v30;
  _BOOL8 v31;
  unint64_t v32;
  unint64_t v33;
  size_t prime;
  unint64_t v35;
  uint8x8_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  unsigned __int8 *v42;
  unsigned __int8 *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t v52;
  unsigned int v53;
  BOOL v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t *v57;
  uint64_t *v58;
  BOOL v59;
  unsigned __int8 *v60;
  unsigned __int8 *v61;
  uint64_t *v62;
  uint64_t *v63;
  int8x8_t v64;
  uint64_t v65;
  unint64_t v66;
  uint8x8_t v67;
  uint64_t *v68;
  uint64_t *v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *p_shared_owners;
  unint64_t v79;
  uint64_t v80;
  void *__p[2];
  uint64_t v82;
  unsigned __int16 v83;
  uint64_t v84;
  std::__shared_weak_count *v85;
  _QWORD v86[2];
  char v87;

  sub_20B4238E0(&v84, this, 3);
  (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a2 + 16))(__p, a2);
  if (v82 >= 0)
    v5 = (uint64_t *)__p;
  else
    v5 = (uint64_t *)__p[0];
  if (v82 >= 0)
    v6 = HIBYTE(v82);
  else
    v6 = (unint64_t)__p[1];
  v7 = sub_20AEC7B80((uint64_t)v86, v5, v6);
  v8 = &this[2].__m_.__opaque[16];
  v9 = v83;
  v10 = (((v7 + 2654435769u) >> 2) + ((v7 + 2654435769u) << 6) + v83 + 2654435769) ^ (v7 + 2654435769u);
  v11 = *(_QWORD *)&this[2].__m_.__opaque[24];
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      v2 = (((v7 + 2654435769u) >> 2) + ((v7 + 2654435769u) << 6) + v83 + 2654435769) ^ (v7 + 2654435769u);
      if (v10 >= v11)
        v2 = v10 % v11;
    }
    else
    {
      v2 = v10 & (v11 - 1);
    }
    v13 = *(void ***)(*(_QWORD *)v8 + 8 * v2);
    if (v13)
    {
      v14 = (unsigned __int8 *)*v13;
      if (*v13)
      {
        v80 = a2;
        v15 = HIBYTE(v82);
        if (v82 >= 0)
          v16 = (void *)HIBYTE(v82);
        else
          v16 = __p[1];
        if (v82 >= 0)
          v17 = __p;
        else
          v17 = (void **)__p[0];
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            v23 = *((_QWORD *)v14 + 1);
            if (v23 != v10)
            {
              if ((v23 & (v11 - 1)) != v2)
                goto LABEL_57;
              goto LABEL_42;
            }
            v24 = v14[39];
            if ((v24 & 0x80u) == 0)
              v25 = (void *)v14[39];
            else
              v25 = (void *)*((_QWORD *)v14 + 3);
            if (v25 == v16)
            {
              v26 = (const void **)(v14 + 16);
              if ((v24 & 0x80) != 0)
              {
                if (memcmp(*v26, v17, *((_QWORD *)v14 + 3)))
                  goto LABEL_42;
              }
              else if (v14[39])
              {
                v27 = v17;
                while (*(unsigned __int8 *)v26 == *(unsigned __int8 *)v27)
                {
                  v26 = (const void **)((char *)v26 + 1);
                  v27 = (void **)((char *)v27 + 1);
                  if (!--v24)
                    goto LABEL_55;
                }
                goto LABEL_42;
              }
LABEL_55:
              if (*((unsigned __int16 *)v14 + 20) == v9)
                goto LABEL_56;
            }
LABEL_42:
            v14 = *(unsigned __int8 **)v14;
            if (!v14)
              goto LABEL_57;
          }
        }
        while (1)
        {
          v18 = *((_QWORD *)v14 + 1);
          if (v18 == v10)
          {
            v19 = v14[39];
            if ((v19 & 0x80u) == 0)
              v20 = (void *)v14[39];
            else
              v20 = (void *)*((_QWORD *)v14 + 3);
            if (v20 == v16)
            {
              v21 = (const void **)(v14 + 16);
              if ((v19 & 0x80) != 0)
              {
                if (!memcmp(*v21, v17, *((_QWORD *)v14 + 3)))
                {
LABEL_39:
                  if (*((unsigned __int16 *)v14 + 20) == v9)
                  {
LABEL_56:
                    a2 = v80;
                    v8 = &this[2].__m_.__opaque[16];
                    goto LABEL_97;
                  }
                }
              }
              else
              {
                if (!v14[39])
                  goto LABEL_39;
                v22 = v17;
                while (*(unsigned __int8 *)v21 == *(unsigned __int8 *)v22)
                {
                  v21 = (const void **)((char *)v21 + 1);
                  v22 = (void **)((char *)v22 + 1);
                  if (!--v19)
                    goto LABEL_39;
                }
              }
            }
          }
          else
          {
            if (v18 >= v11)
              v18 %= v11;
            if (v18 != v2)
            {
LABEL_57:
              a2 = v80;
              v8 = &this[2].__m_.__opaque[16];
              break;
            }
          }
          v14 = *(unsigned __int8 **)v14;
          if (!v14)
            goto LABEL_57;
        }
      }
    }
  }
  v14 = (unsigned __int8 *)operator new(0x90uLL);
  v28 = &this[2].__m_.__opaque[32];
  v86[0] = v14;
  v86[1] = (char *)this + 168;
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = v10;
  *((_OWORD *)v14 + 1) = *(_OWORD *)__p;
  *((_QWORD *)v14 + 4) = v82;
  __p[0] = 0;
  __p[1] = 0;
  v82 = 0;
  *((_WORD *)v14 + 20) = v9;
  *((_OWORD *)v14 + 3) = 0u;
  *((_OWORD *)v14 + 4) = 0u;
  *((_OWORD *)v14 + 5) = 0u;
  *((_OWORD *)v14 + 6) = 0u;
  *((_QWORD *)v14 + 7) = &off_24C41BE48;
  *((_QWORD *)v14 + 10) = v14 + 56;
  *((_QWORD *)v14 + 11) = &off_24C41BEC8;
  *((_QWORD *)v14 + 17) = 0;
  *((_QWORD *)v14 + 16) = 0;
  *((_QWORD *)v14 + 14) = v14 + 88;
  *((_QWORD *)v14 + 15) = v14 + 128;
  v87 = 1;
  v29 = (float)(unint64_t)(*(_QWORD *)&this[2].__m_.__opaque[40] + 1);
  v30 = *(float *)&this[2].__m_.__opaque[48];
  if (v11 && (float)(v30 * (float)v11) >= v29)
    goto LABEL_86;
  v31 = 1;
  if (v11 >= 3)
    v31 = (v11 & (v11 - 1)) != 0;
  v32 = v31 | (2 * v11);
  v33 = vcvtps_u32_f32(v29 / v30);
  if (v32 <= v33)
    prime = v33;
  else
    prime = v32;
  if (prime == 1)
  {
    prime = 2;
  }
  else if ((prime & (prime - 1)) != 0)
  {
    prime = std::__next_prime(prime);
    v11 = *(_QWORD *)&this[2].__m_.__opaque[24];
  }
  if (prime > v11)
    goto LABEL_70;
  if (prime < v11)
  {
    v35 = vcvtps_u32_f32((float)*(unint64_t *)&this[2].__m_.__opaque[40] / *(float *)&this[2].__m_.__opaque[48]);
    if (v11 < 3 || (v36 = (uint8x8_t)vcnt_s8((int8x8_t)v11), v36.i16[0] = vaddlv_u8(v36), v36.u32[0] > 1uLL))
    {
      v35 = std::__next_prime(v35);
    }
    else
    {
      v37 = 1 << -(char)__clz(v35 - 1);
      if (v35 >= 2)
        v35 = v37;
    }
    if (prime <= v35)
      prime = v35;
    if (prime < v11)
LABEL_70:
      sub_20AEC91EC((uint64_t)v8, prime);
  }
  v11 = *(_QWORD *)&this[2].__m_.__opaque[24];
  v38 = v11 - 1;
  if ((v11 & (v11 - 1)) != 0)
  {
    if (v10 >= v11)
    {
      v2 = v10 % v11;
      v39 = *(_QWORD *)v8;
      v40 = *(_QWORD **)(*(_QWORD *)v8 + 8 * (v10 % v11));
      if (!v40)
        goto LABEL_89;
LABEL_87:
      *(_QWORD *)v14 = *v40;
LABEL_95:
      *v40 = v14;
      goto LABEL_96;
    }
    v2 = v10;
LABEL_86:
    v39 = *(_QWORD *)v8;
    v40 = *(_QWORD **)(*(_QWORD *)v8 + 8 * v2);
    if (!v40)
      goto LABEL_89;
    goto LABEL_87;
  }
  v2 = v38 & v10;
  v39 = *(_QWORD *)v8;
  v40 = *(_QWORD **)(*(_QWORD *)v8 + 8 * (v38 & v10));
  if (v40)
    goto LABEL_87;
LABEL_89:
  *(_QWORD *)v14 = *(_QWORD *)v28;
  *(_QWORD *)v28 = v14;
  *(_QWORD *)(v39 + 8 * v2) = v28;
  if (*(_QWORD *)v14)
  {
    v41 = *(_QWORD *)(*(_QWORD *)v14 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v41 >= v11)
        v41 %= v11;
    }
    else
    {
      v41 &= v11 - 1;
    }
    v40 = (_QWORD *)(*(_QWORD *)v8 + 8 * v41);
    goto LABEL_95;
  }
LABEL_96:
  ++*(_QWORD *)&this[2].__m_.__opaque[40];
  v15 = HIBYTE(v82);
LABEL_97:
  if (v15 < 0)
  {
    operator delete(__p[0]);
    v42 = (unsigned __int8 *)*((_QWORD *)v14 + 15);
    v43 = v14 + 128;
    if (v42 == v14 + 128)
      goto LABEL_135;
    while (1)
    {
LABEL_103:
      v44 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)v42 + 4) + 16))(*((_QWORD *)v42 + 4));
      v45 = v44;
      if (*(char *)(v44 + 23) < 0)
      {
        sub_20AEC60F4(__p, *(void **)v44, *(_QWORD *)(v44 + 8));
      }
      else
      {
        v46 = *(_OWORD *)v44;
        v82 = *(_QWORD *)(v44 + 16);
        *(_OWORD *)__p = v46;
      }
      v83 = *(_WORD *)(v45 + 24);
      v47 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)v42 + 4) + 16))(*((_QWORD *)v42 + 4));
      LOBYTE(v86[0]) = 2;
      v48 = *((_QWORD *)v14 + 14);
      if (!v48)
        sub_20AECABA4();
      (*(void (**)(uint64_t, uint64_t, _QWORD *))(*(_QWORD *)v48 + 48))(v48, v47, v86);
      v49 = sub_20B426B64((uint64_t **)&this[3], (const void **)__p, (uint64_t)__p);
      v50 = (uint64_t *)v49[8];
      if (v50)
      {
        v51 = v49 + 8;
        v52 = v49[8];
        do
        {
          v53 = *(unsigned __int16 *)(v52 + 32);
          v54 = v53 >= v83;
          if (v53 >= v83)
            v55 = (uint64_t *)v52;
          else
            v55 = (uint64_t *)(v52 + 8);
          if (v54)
            v51 = (uint64_t *)v52;
          v52 = *v55;
        }
        while (*v55);
        if (v51 != v49 + 8 && v83 >= *((unsigned __int16 *)v51 + 16))
        {
          v56 = (uint64_t *)v51[1];
          v57 = v51;
          if (v56)
          {
            do
            {
              v58 = v56;
              v56 = (uint64_t *)*v56;
            }
            while (v56);
          }
          else
          {
            do
            {
              v58 = (uint64_t *)v57[2];
              v59 = *v58 == (_QWORD)v57;
              v57 = v58;
            }
            while (!v59);
          }
          if ((uint64_t *)v49[7] == v51)
            v49[7] = (uint64_t)v58;
          --v49[9];
          sub_20AEC867C(v50, v51);
          operator delete(v51);
        }
      }
      if (SHIBYTE(v82) < 0)
      {
        operator delete(__p[0]);
        v60 = (unsigned __int8 *)*((_QWORD *)v42 + 1);
        if (v60)
        {
          do
          {
LABEL_130:
            v61 = v60;
            v60 = *(unsigned __int8 **)v60;
          }
          while (v60);
          goto LABEL_102;
        }
      }
      else
      {
        v60 = (unsigned __int8 *)*((_QWORD *)v42 + 1);
        if (v60)
          goto LABEL_130;
      }
      do
      {
        v61 = (unsigned __int8 *)*((_QWORD *)v42 + 2);
        v59 = *(_QWORD *)v61 == (_QWORD)v42;
        v42 = v61;
      }
      while (!v59);
LABEL_102:
      v42 = v61;
      if (v61 == v43)
        goto LABEL_135;
    }
  }
  v42 = (unsigned __int8 *)*((_QWORD *)v14 + 15);
  v43 = v14 + 128;
  if (v42 != v14 + 128)
    goto LABEL_103;
LABEL_135:
  (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a2 + 16))(__p, a2);
  v62 = sub_20B426D04(v8, (uint64_t)__p);
  if (!v62)
    goto LABEL_176;
  v63 = v62;
  v64 = *(int8x8_t *)&this[2].__m_.__opaque[24];
  v65 = *v62;
  v66 = v62[1];
  v67 = (uint8x8_t)vcnt_s8(v64);
  v67.i16[0] = vaddlv_u8(v67);
  if (v67.u32[0] > 1uLL)
  {
    if (v66 >= *(_QWORD *)&v64)
      v66 %= *(_QWORD *)&v64;
  }
  else
  {
    v66 &= *(_QWORD *)&v64 - 1;
  }
  v68 = *(uint64_t **)(*(_QWORD *)v8 + 8 * v66);
  do
  {
    v69 = v68;
    v68 = (uint64_t *)*v68;
  }
  while (v68 != v62);
  if (v69 == (uint64_t *)&this[2].__m_.__opaque[32])
    goto LABEL_153;
  v70 = v69[1];
  if (v67.u32[0] > 1uLL)
  {
    if (v70 >= *(_QWORD *)&v64)
      v70 %= *(_QWORD *)&v64;
  }
  else
  {
    v70 &= *(_QWORD *)&v64 - 1;
  }
  if (v70 != v66)
  {
LABEL_153:
    if (v65)
    {
      v71 = *(_QWORD *)(v65 + 8);
      if (v67.u32[0] > 1uLL)
      {
        v72 = *(_QWORD *)(v65 + 8);
        if (v71 >= *(_QWORD *)&v64)
          v72 = v71 % *(_QWORD *)&v64;
      }
      else
      {
        v72 = v71 & (*(_QWORD *)&v64 - 1);
      }
      if (v72 == v66)
        goto LABEL_157;
    }
    *(_QWORD *)(*(_QWORD *)v8 + 8 * v66) = 0;
    v65 = *v62;
  }
  if (!v65)
    goto LABEL_163;
  v71 = *(_QWORD *)(v65 + 8);
LABEL_157:
  if (v67.u32[0] > 1uLL)
  {
    if (v71 >= *(_QWORD *)&v64)
      v71 %= *(_QWORD *)&v64;
  }
  else
  {
    v71 &= *(_QWORD *)&v64 - 1;
  }
  if (v71 != v66)
  {
    *(_QWORD *)(*(_QWORD *)v8 + 8 * v71) = v69;
    v65 = *v62;
  }
LABEL_163:
  *v69 = v65;
  *v62 = 0;
  --*(_QWORD *)&this[2].__m_.__opaque[40];
  sub_20B42688C((_QWORD *)v62[16]);
  v73 = (uint64_t *)v63[14];
  if (v73 == v63 + 11)
  {
    v74 = 4;
    v73 = v63 + 11;
  }
  else
  {
    if (!v73)
      goto LABEL_168;
    v74 = 5;
  }
  (*(void (**)(void))(*v73 + 8 * v74))();
LABEL_168:
  v75 = (uint64_t *)v63[10];
  if (v75 == v63 + 7)
  {
    v76 = 4;
    v75 = v63 + 7;
    goto LABEL_172;
  }
  if (v75)
  {
    v76 = 5;
LABEL_172:
    (*(void (**)(void))(*v75 + 8 * v76))();
  }
  if (*((char *)v63 + 39) < 0)
    operator delete((void *)v63[2]);
  operator delete(v63);
LABEL_176:
  if (SHIBYTE(v82) < 0)
    operator delete(__p[0]);
  v77 = v85;
  if (v85)
  {
    p_shared_owners = (unint64_t *)&v85->__shared_owners_;
    do
      v79 = __ldaxr(p_shared_owners);
    while (__stlxr(v79 - 1, p_shared_owners));
    if (!v79)
    {
      ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
      std::__shared_weak_count::__release_weak(v77);
    }
  }
}

void sub_20B424428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21)
{
  sub_20B426908(&a21);
  if (a16 < 0)
    operator delete(__p);
  sub_20AEC147C((uint64_t)&a19);
  _Unwind_Resume(a1);
}

uint64_t sub_20B424484(std::mutex *this, uint64_t a2, uint64_t a3, int a4, unsigned __int8 *a5, unsigned __int8 a6)
{
  uint64_t v11;
  int v12;
  void *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  unsigned __int8 *v24;
  unsigned __int8 *v25;
  uint64_t v26;
  void *v27;
  size_t v28;
  char *v29;
  const void *v30;
  int64_t v31;
  char *v32;
  const void *v33;
  int64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  BOOL v40;
  std::__shared_weak_count *v41;
  unint64_t *p_shared_owners;
  unint64_t v43;
  uint64_t *v46;
  _QWORD v47[3];
  void *v48;
  void *v49;
  char *v50;
  __int128 v51;
  void *v52;
  void *v53;
  char *v54;
  void *__p;
  void *v56;
  char *v57;
  char v58[4];
  int v59;
  char v60;
  uint64_t (**v61)();
  uint64_t v62;
  void *v63;
  void *v64;
  __int128 v65;
  __int128 v66;
  void *v67[2];
  void *v68[2];
  __int128 v69;
  void *v70[2];
  char v71;
  uint64_t v72;
  std::__shared_weak_count *v73;

  sub_20B4238E0(&v72, this, 0);
  (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a2 + 16))(v70, a2);
  v46 = sub_20B426D04(&this[2].__m_.__opaque[16], (uint64_t)v70);
  if (!v46)
    goto LABEL_63;
  v61 = &off_24C41C508;
  v62 = 1;
  v63 = &unk_24C41C650;
  v11 = *(_QWORD *)(a3 + 24);
  if (!v11)
  {
    if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACD5F, 0, (void (*)(void **))sub_20B532360))
    {
      v11 = *(_QWORD *)(a3 + 24);
      if (v11)
        goto LABEL_5;
      sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACD5F, 0, (void (*)(void **))sub_20B532360);
    }
    abort();
  }
LABEL_5:
  v12 = *(_QWORD *)(a3 + 32) - v11;
  *(_DWORD *)v11 = 1;
  *(_BYTE *)(v11 + 4) = 10;
  *(_DWORD *)(v11 + 5) = v12 - 10;
  *(_BYTE *)(v11 + 9) = 0;
  v64 = *(void **)(a3 + 24);
  v13 = v64;
  v65 = *(_OWORD *)(a3 + 32);
  v14 = v65;
  *(_QWORD *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)&v66 = 0;
  *((_QWORD *)&v66 + 1) = v14 - (_QWORD)v13;
  *(_OWORD *)v67 = 0u;
  *(_OWORD *)v68 = 0u;
  v69 = 0u;
  v58[0] = 0;
  v59 = 0;
  v60 = 0;
  sub_20B426F40(&v61, (uint64_t)v58);
  v15 = (uint64_t *)v46[15];
  if (v15 != v46 + 16)
  {
    v16 = 0;
    v17 = a6;
    do
    {
      if (v17)
      {
        v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v15[4] + 16))(v15[4]);
        v19 = v18;
        v20 = *(unsigned __int8 *)(v18 + 23);
        if ((v20 & 0x80u) == 0)
          v21 = *(unsigned __int8 *)(v18 + 23);
        else
          v21 = *(_QWORD *)(v18 + 8);
        v22 = a5[23];
        v23 = (char)v22;
        if ((v22 & 0x80u) != 0)
          v22 = *((_QWORD *)a5 + 1);
        if (v21 != v22)
          goto LABEL_51;
        if (v23 >= 0)
          v24 = a5;
        else
          v24 = *(unsigned __int8 **)a5;
        if ((v20 & 0x80) != 0)
        {
          if (memcmp(*(const void **)v18, v24, *(_QWORD *)(v18 + 8)))
            goto LABEL_51;
        }
        else if (*(_BYTE *)(v18 + 23))
        {
          v25 = (unsigned __int8 *)v18;
          while (*v25 == *v24)
          {
            ++v25;
            ++v24;
            if (!--v20)
              goto LABEL_25;
          }
          goto LABEL_51;
        }
LABEL_25:
        if (*(unsigned __int16 *)(v19 + 24) != *((unsigned __int16 *)a5 + 12))
          goto LABEL_51;
      }
      if (v16 == v46[17] - 1)
      {
        v26 = v15[8];
        if (!v26)
          sub_20AECABA4();
        (*(void (**)(uint64_t, void **, uint64_t (***)()))(*(_QWORD *)v26 + 48))(v26, v70, &v61);
      }
      else
      {
        v47[0] = &off_24C41C508;
        v47[1] = v62;
        v47[2] = &unk_24C41C650;
        v49 = 0;
        v50 = 0;
        v48 = 0;
        v27 = v64;
        v28 = v65 - (_QWORD)v64;
        if ((void *)v65 != v64)
        {
          if ((v28 & 0x8000000000000000) != 0)
            sub_20AF4BAC0();
          v48 = operator new(v65 - (_QWORD)v64);
          v49 = v48;
          v29 = (char *)v48 + v28;
          v50 = (char *)v48 + v28;
          memcpy(v48, v27, v28);
          v49 = v29;
        }
        v51 = v66;
        v53 = 0;
        v54 = 0;
        v52 = 0;
        v30 = v67[0];
        v31 = (char *)v67[1] - (char *)v67[0];
        if (v67[1] != v67[0])
        {
          if (v31 < 0)
            sub_20AF6E1D0();
          v52 = operator new((char *)v67[1] - (char *)v67[0]);
          v53 = v52;
          v32 = (char *)v52 + 8 * (v31 >> 3);
          v54 = v32;
          memcpy(v52, v30, v31);
          v53 = v32;
        }
        __p = 0;
        v56 = 0;
        v57 = 0;
        v33 = v68[1];
        v34 = v69 - (unint64_t)v68[1];
        if ((void *)v69 != v68[1])
        {
          if (v34 < 0)
            sub_20B4268F4();
          __p = operator new(v69 - (unint64_t)v68[1]);
          v56 = __p;
          v35 = (char *)__p + 8 * (v34 >> 3);
          v57 = v35;
          memcpy(__p, v33, v34);
          v56 = v35;
        }
        v36 = v15[8];
        if (!v36)
          sub_20AECABA4();
        (*(void (**)(uint64_t, void **, _QWORD *))(*(_QWORD *)v36 + 48))(v36, v70, v47);
        if (__p)
        {
          v56 = __p;
          operator delete(__p);
        }
        if (v52)
        {
          v53 = v52;
          operator delete(v52);
        }
        if (v48)
        {
          v49 = v48;
          operator delete(v48);
        }
      }
      if (a4 == 2)
      {
        v37 = v15[4];
        if (!v37 || *(uint64_t (***)())v37 != off_24C41BD50)
          v37 = 0;
        std::mutex::lock((std::mutex *)(v37 + 8));
        *(_BYTE *)(v37 + 120) = 1;
        std::condition_variable::notify_all((std::condition_variable *)(v37 + 72));
        std::mutex::unlock((std::mutex *)(v37 + 8));
      }
      if (v17)
        break;
LABEL_51:
      v38 = (uint64_t *)v15[1];
      if (v38)
      {
        do
        {
          v39 = v38;
          v38 = (uint64_t *)*v38;
        }
        while (v38);
      }
      else
      {
        do
        {
          v39 = (uint64_t *)v15[2];
          v40 = *v39 == (_QWORD)v15;
          v15 = v39;
        }
        while (!v40);
      }
      ++v16;
      v15 = v39;
    }
    while (v39 != v46 + 16);
  }
  if (v68[1])
  {
    *(void **)&v69 = v68[1];
    operator delete(v68[1]);
  }
  if (v67[0])
  {
    v67[1] = v67[0];
    operator delete(v67[0]);
  }
  if (v64)
  {
    *(_QWORD *)&v65 = v64;
    operator delete(v64);
  }
LABEL_63:
  if (v71 < 0)
    operator delete(v70[0]);
  v41 = v73;
  if (v73)
  {
    p_shared_owners = (unint64_t *)&v73->__shared_owners_;
    do
      v43 = __ldaxr(p_shared_owners);
    while (__stlxr(v43 - 1, p_shared_owners));
    if (!v43)
    {
      ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
      std::__shared_weak_count::__release_weak(v41);
    }
  }
  return 1;
}

void sub_20B4249B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;

  sub_20B42B8D4(&a30);
  if (*(char *)(v30 - 113) < 0)
    operator delete(*(void **)(v30 - 136));
  sub_20AEC147C(v30 - 104);
  _Unwind_Resume(a1);
}

void sub_20B424AA8(std::mutex *this, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unsigned int v11;
  BOOL v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  BOOL v17;
  _QWORD *i;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  unint64_t v23;
  BOOL v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *p_shared_owners;
  unint64_t v35;
  void *__p[2];
  uint64_t v37;
  unsigned __int16 v38;
  uint64_t v39;
  std::__shared_weak_count *v40;
  char v41;

  sub_20B4238E0(&v39, this, 3);
  v4 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 16))(a2);
  v5 = v4;
  if (*(char *)(v4 + 23) < 0)
  {
    sub_20AEC60F4(__p, *(void **)v4, *(_QWORD *)(v4 + 8));
  }
  else
  {
    v6 = *(_OWORD *)v4;
    v37 = *(_QWORD *)(v4 + 16);
    *(_OWORD *)__p = v6;
  }
  v38 = *(_WORD *)(v5 + 24);
  v7 = sub_20B426B64((uint64_t **)&this[3], (const void **)__p, (uint64_t)__p);
  v8 = (uint64_t *)v7[8];
  if (v8)
  {
    v9 = v7 + 8;
    v10 = v7[8];
    do
    {
      v11 = *(unsigned __int16 *)(v10 + 32);
      v12 = v11 >= v38;
      if (v11 >= v38)
        v13 = (uint64_t *)v10;
      else
        v13 = (uint64_t *)(v10 + 8);
      if (v12)
        v9 = (uint64_t *)v10;
      v10 = *v13;
    }
    while (*v13);
    if (v9 != v7 + 8 && v38 >= *((unsigned __int16 *)v9 + 16))
    {
      v14 = (uint64_t *)v9[1];
      if (v14)
      {
        do
        {
          v15 = v14;
          v14 = (uint64_t *)*v14;
        }
        while (v14);
      }
      else
      {
        v16 = v9;
        do
        {
          v15 = (uint64_t *)v16[2];
          v17 = *v15 == (_QWORD)v16;
          v16 = v15;
        }
        while (!v17);
      }
      if ((uint64_t *)v7[7] == v9)
        v7[7] = (uint64_t)v15;
      --v7[9];
      sub_20AEC867C(v8, v9);
      operator delete(v9);
    }
  }
  for (i = *(_QWORD **)&this[2].__m_.__opaque[32]; i; i = (_QWORD *)*i)
  {
    v21 = (_QWORD *)i[16];
    if (!v21)
      continue;
    v22 = i + 16;
    do
    {
      v23 = v21[4];
      v24 = v23 >= a2;
      if (v23 >= a2)
        v25 = v21;
      else
        v25 = v21 + 1;
      if (v24)
        v22 = v21;
      v21 = (_QWORD *)*v25;
    }
    while (*v25);
    if (v22 == i + 16 || v22[4] > a2)
      continue;
    v41 = 2;
    v26 = i[14];
    if (!v26)
      sub_20AECABA4();
    (*(void (**)(uint64_t, void **, char *))(*(_QWORD *)v26 + 48))(v26, __p, &v41);
    v27 = (uint64_t *)v22[1];
    v28 = v22;
    if (v27)
    {
      do
      {
        v29 = v27;
        v27 = (uint64_t *)*v27;
      }
      while (v27);
    }
    else
    {
      do
      {
        v29 = (uint64_t *)v28[2];
        v17 = *v29 == (_QWORD)v28;
        v28 = v29;
      }
      while (!v17);
    }
    if ((uint64_t *)i[15] == v22)
      i[15] = v29;
    v30 = (uint64_t *)i[16];
    --i[17];
    sub_20AEC867C(v30, v22);
    v19 = (uint64_t *)v22[8];
    if (v19 == v22 + 5)
    {
      v19 = v22 + 5;
      v20 = 4;
    }
    else
    {
      if (!v19)
        goto LABEL_28;
      v20 = 5;
    }
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*v19 + 8 * v20))(v19, v31, v32);
LABEL_28:
    operator delete(v22);
  }
  if (SHIBYTE(v37) < 0)
    operator delete(__p[0]);
  v33 = v40;
  if (v40)
  {
    p_shared_owners = (unint64_t *)&v40->__shared_owners_;
    do
      v35 = __ldaxr(p_shared_owners);
    while (__stlxr(v35 - 1, p_shared_owners));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
}

void sub_20B424D4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a14 < 0)
    operator delete(__p);
  sub_20AEC147C((uint64_t)&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_20B424D8C(std::mutex *this, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  char v19[12];
  _QWORD v20[3];
  void *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  void *v25[2];
  void *__p[2];
  __int128 v27;
  uint64_t v28;
  std::__shared_weak_count *v29;

  sub_20B4238E0(&v28, this, 1);
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  v7 = sub_20B426D04(&this[2].__m_.__opaque[16], v6);
  if (!v7)
    goto LABEL_12;
  v8 = v7;
  v20[0] = &off_24C41C508;
  v20[1] = 1;
  v20[2] = &unk_24C41C650;
  v9 = *(_QWORD *)(a3 + 24);
  if (!v9)
  {
    if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACD5F, 0, (void (*)(void **))sub_20B532360))
    {
      v9 = *(_QWORD *)(a3 + 24);
      if (v9)
        goto LABEL_5;
      sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACD5F, 0, (void (*)(void **))sub_20B532360);
    }
    abort();
  }
LABEL_5:
  v10 = *(_QWORD *)(a3 + 32) - v9 - 10;
  *(_DWORD *)v9 = 1;
  *(_BYTE *)(v9 + 4) = 10;
  *(_DWORD *)(v9 + 5) = v10;
  *(_BYTE *)(v9 + 9) = 0;
  v21 = *(void **)(a3 + 24);
  v11 = v21;
  v22 = *(_OWORD *)(a3 + 32);
  v12 = v22;
  *(_QWORD *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  v23 = 0;
  v24 = v12 - (_QWORD)v11;
  *(_OWORD *)v25 = 0u;
  *(_OWORD *)__p = 0u;
  v27 = 0u;
  sub_20B426F40(v20, (uint64_t)v19);
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
  v14 = v8[10];
  if (!v14)
    sub_20AECABA4();
  (*(void (**)(uint64_t, uint64_t, _QWORD *))(*(_QWORD *)v14 + 48))(v14, v13, v20);
  if (__p[1])
  {
    *(void **)&v27 = __p[1];
    operator delete(__p[1]);
  }
  if (v25[0])
  {
    v25[1] = v25[0];
    operator delete(v25[0]);
  }
  if (v21)
  {
    *(_QWORD *)&v22 = v21;
    operator delete(v21);
  }
LABEL_12:
  v15 = v29;
  if (!v29)
    return 1;
  p_shared_owners = (unint64_t *)&v29->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (v17)
    return 1;
  ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
  std::__shared_weak_count::__release_weak(v15);
  return 1;
}

void sub_20B424FA4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1 - 48);
  _Unwind_Resume(a1);
}

void sub_20B424FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  va_list va;

  va_start(va, a3);
  sub_20B42B8D4((uint64_t *)va);
  sub_20AEC147C(v3 - 48);
  _Unwind_Resume(a1);
}

std::string::size_type sub_20B424FD8(std::string::size_type a1, unint64_t a2, std::string *a3, __int128 *a4, std::mutex *this)
{
  unint64_t v7;
  __int128 v9;
  std::string::__raw *v10;
  std::string *data;
  _QWORD *v12;
  std::string::size_type *size;
  uint64_t *v14;
  std::string *p_dst;
  std::string::size_type v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  uint8x8_t v21;
  uint64_t **v22;
  uint64_t *v23;
  std::string::size_type v24;
  std::string *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const void **v29;
  std::string *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  const void **v34;
  std::string *v35;
  _QWORD *v36;
  _QWORD *v37;
  __int128 v38;
  std::string::size_type v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  _QWORD **v43;
  _QWORD *v44;
  uint64_t v45;
  float v46;
  float v47;
  _BOOL8 v48;
  unint64_t v49;
  unint64_t v50;
  size_t prime;
  int8x8_t v52;
  unint64_t v53;
  uint8x8_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  _QWORD *v60;
  std::string::size_type *p_size;
  _QWORD *v62;
  std::string::__raw *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *p_shared_owners;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  std::string::__raw *v74;
  uint64_t v75;
  std::logic_error *exception;
  _QWORD *v78;
  std::string *v79;
  int v80;
  std::string __p;
  unsigned __int16 v82;
  uint64_t v83;
  std::__shared_weak_count *v84;
  _QWORD v85[2];
  char v86;
  _QWORD v87[3];
  std::string *v88;
  _QWORD v89[3];
  _QWORD *v90;
  std::string v91;
  std::string *v92;
  _QWORD v93[3];
  _QWORD *v94;
  _QWORD **v95;
  _QWORD *v96;
  uint64_t v97;
  std::string __dst;
  unsigned __int16 v99;
  std::string::size_type v100;
  _QWORD v101[3];
  std::string::__raw *v102;
  _QWORD v103[3];
  _QWORD *v104;
  _QWORD **v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;

  v7 = a2;
  v108 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24C41BD90;
  if (*((_BYTE *)a4 + 24))
  {
    if ((*((char *)a4 + 23) & 0x80000000) == 0)
    {
      v9 = *a4;
      *(_QWORD *)(a1 + 24) = *((_QWORD *)a4 + 2);
      *(_OWORD *)(a1 + 8) = v9;
      *(_WORD *)(a1 + 32) = a2;
      *(_QWORD *)(a1 + 40) = this;
      v10 = (std::string::__raw *)&a3[1];
      data = (std::string *)a3[1].__r_.__value_.__l.__data_;
      if (!data)
        goto LABEL_9;
LABEL_6:
      if (data == a3)
      {
        v88 = (std::string *)v87;
        (*(void (**)(std::string *, _QWORD *))(a3->__r_.__value_.__r.__words[0] + 24))(a3, v87);
      }
      else
      {
        v88 = data;
        v10->__words[0] = 0;
      }
      goto LABEL_11;
    }
    sub_20AEC60F4((_BYTE *)(a1 + 8), *(void **)a4, *((_QWORD *)a4 + 1));
    *(_WORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = this;
    v10 = (std::string::__raw *)&a3[1];
    data = (std::string *)a3[1].__r_.__value_.__l.__data_;
    if (data)
      goto LABEL_6;
  }
  else
  {
    *(_BYTE *)(a1 + 31) = 9;
    strcpy((char *)(a1 + 8), "localhost");
    *(_WORD *)(a1 + 32) = a2;
    *(_QWORD *)(a1 + 40) = this;
    v10 = (std::string::__raw *)&a3[1];
    data = (std::string *)a3[1].__r_.__value_.__l.__data_;
    if (data)
      goto LABEL_6;
  }
LABEL_9:
  v88 = 0;
LABEL_11:
  v12 = v89;
  size = (std::string::size_type *)a3[2].__r_.__value_.__l.__size_;
  if (size)
  {
    if (size == &a3[1].__r_.__value_.__r.__words[1])
    {
      v90 = v89;
      (*(void (**)(std::string::size_type *, _QWORD *))(*size + 24))(size, v89);
    }
    else
    {
      v90 = (_QWORD *)a3[2].__r_.__value_.__l.__size_;
      a3[2].__r_.__value_.__l.__size_ = 0;
    }
  }
  else
  {
    v90 = 0;
  }
  sub_20B4238E0(&v83, this, 3);
  (*(void (**)(std::string *__return_ptr, std::string::size_type))(*(_QWORD *)a1 + 16))(&__p, a1);
  v14 = sub_20B426D04(&this[2].__m_.__opaque[16], (uint64_t)&__p);
  if (v14)
    goto LABEL_174;
  v91.__r_.__value_.__r.__words[0] = a1;
  if (v88)
  {
    if (v88 == (std::string *)v87)
    {
      v92 = (std::string *)&v91.__r_.__value_.__r.__words[1];
      (*(void (**)(_QWORD *, std::string::size_type *))(v87[0] + 24))(v87, &v91.__r_.__value_.__l.__size_);
    }
    else
    {
      v92 = v88;
      v88 = 0;
    }
  }
  else
  {
    v92 = 0;
  }
  if (v90)
  {
    if (v90 == v89)
    {
      v94 = v93;
      (*(void (**)(_QWORD *, _QWORD *))(v89[0] + 24))(v89, v93);
    }
    else
    {
      v94 = v90;
      v90 = 0;
    }
  }
  else
  {
    v94 = 0;
  }
  v96 = 0;
  v97 = 0;
  v95 = &v96;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    sub_20AEC60F4(&__dst, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    __dst = __p;
  v99 = v82;
  v100 = v91.__r_.__value_.__r.__words[0];
  if (v92)
  {
    if (v92 == (std::string *)&v91.__r_.__value_.__r.__words[1])
    {
      v102 = (std::string::__raw *)v101;
      (*(void (**)(std::string::size_type *, _QWORD *))(v91.__r_.__value_.__l.__size_ + 24))(&v91.__r_.__value_.__l.__size_, v101);
    }
    else
    {
      v102 = (std::string::__raw *)v92;
      v92 = 0;
    }
  }
  else
  {
    v102 = 0;
  }
  if (v94)
  {
    if (v94 == v93)
    {
      v104 = v103;
      (*(void (**)(_QWORD *))(v93[0] + 24))(v93);
    }
    else
    {
      v104 = v94;
      v94 = 0;
    }
  }
  else
  {
    v104 = 0;
  }
  v105 = v95;
  v106 = v96;
  v107 = v97;
  if (v97)
  {
    v96[2] = &v106;
    v95 = &v96;
    v96 = 0;
    v97 = 0;
  }
  else
  {
    v105 = &v106;
  }
  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_dst = &__dst;
  else
    p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v16 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
  else
    v16 = __dst.__r_.__value_.__l.__size_;
  v17 = sub_20AEC7B80((uint64_t)v85, (uint64_t *)p_dst, v16);
  v18 = v99;
  v19 = (((v17 + 2654435769u) >> 2) + ((v17 + 2654435769u) << 6) + v99 + 2654435769) ^ (v17 + 2654435769u);
  v20 = *(_QWORD *)&this[2].__m_.__opaque[24];
  v80 = v7;
  if (v20)
  {
    v21 = (uint8x8_t)vcnt_s8((int8x8_t)v20);
    v21.i16[0] = vaddlv_u8(v21);
    if (v21.u32[0] > 1uLL)
    {
      v7 = (((v17 + 2654435769u) >> 2) + ((v17 + 2654435769u) << 6) + v99 + 2654435769) ^ (v17 + 2654435769u);
      if (v19 >= v20)
        v7 = v19 % v20;
    }
    else
    {
      v7 = v19 & (v20 - 1);
    }
    v22 = *(uint64_t ***)(*(_QWORD *)&this[2].__m_.__opaque[16] + 8 * v7);
    if (v22)
    {
      v23 = *v22;
      if (*v22)
      {
        if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v24 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
        else
          v24 = __dst.__r_.__value_.__l.__size_;
        if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v25 = &__dst;
        else
          v25 = (std::string *)__dst.__r_.__value_.__r.__words[0];
        if (v21.u32[0] < 2uLL)
        {
          while (1)
          {
            v31 = v23[1];
            if (v31 != v19)
            {
              if ((v31 & (v20 - 1)) != v7)
                goto LABEL_99;
              goto LABEL_84;
            }
            v32 = *((unsigned __int8 *)v23 + 39);
            if ((v32 & 0x80u) == 0)
              v33 = *((unsigned __int8 *)v23 + 39);
            else
              v33 = v23[3];
            if (v33 == v24)
            {
              v34 = (const void **)(v23 + 2);
              if ((v32 & 0x80) != 0)
              {
                if (memcmp(*v34, v25, v23[3]))
                  goto LABEL_84;
              }
              else if (*((_BYTE *)v23 + 39))
              {
                v35 = v25;
                while (*(unsigned __int8 *)v34 == v35->__r_.__value_.__s.__data_[0])
                {
                  v34 = (const void **)((char *)v34 + 1);
                  v35 = (std::string *)((char *)v35 + 1);
                  if (!--v32)
                    goto LABEL_97;
                }
                goto LABEL_84;
              }
LABEL_97:
              if (*((unsigned __int16 *)v23 + 20) == v18)
                goto LABEL_152;
            }
LABEL_84:
            v23 = (uint64_t *)*v23;
            if (!v23)
              goto LABEL_99;
          }
        }
        do
        {
          v26 = v23[1];
          if (v26 == v19)
          {
            v27 = *((unsigned __int8 *)v23 + 39);
            if ((v27 & 0x80u) == 0)
              v28 = *((unsigned __int8 *)v23 + 39);
            else
              v28 = v23[3];
            if (v28 != v24)
              goto LABEL_66;
            v29 = (const void **)(v23 + 2);
            if ((v27 & 0x80) != 0)
            {
              if (memcmp(*v29, v25, v23[3]))
                goto LABEL_66;
            }
            else if (*((_BYTE *)v23 + 39))
            {
              v30 = v25;
              while (*(unsigned __int8 *)v29 == v30->__r_.__value_.__s.__data_[0])
              {
                v29 = (const void **)((char *)v29 + 1);
                v30 = (std::string *)((char *)v30 + 1);
                if (!--v27)
                  goto LABEL_81;
              }
              goto LABEL_66;
            }
LABEL_81:
            if (*((unsigned __int16 *)v23 + 20) == v18)
              goto LABEL_152;
          }
          else
          {
            if (v26 >= v20)
              v26 %= v20;
            if (v26 != v7)
              break;
          }
LABEL_66:
          v23 = (uint64_t *)*v23;
        }
        while (v23);
      }
    }
  }
LABEL_99:
  v36 = operator new(0x90uLL);
  v37 = v36;
  v38 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
  v39 = v100;
  v36[4] = *((_QWORD *)&__dst.__r_.__value_.__l + 2);
  v40 = &this[2].__m_.__opaque[32];
  v85[0] = v36;
  v85[1] = (char *)this + 168;
  *v36 = 0;
  v36[1] = v19;
  *((_OWORD *)v36 + 1) = v38;
  memset(&__dst, 0, sizeof(__dst));
  *((_WORD *)v36 + 20) = v18;
  v36[6] = v39;
  if (v102)
  {
    v41 = &this[2].__m_.__opaque[16];
    if (v102 == (std::string::__raw *)v101)
    {
      v36[10] = v36 + 7;
      (*(void (**)(void))(v101[0] + 24))();
    }
    else
    {
      v36[10] = v102;
      v102 = 0;
    }
  }
  else
  {
    v41 = &this[2].__m_.__opaque[16];
    v36[10] = 0;
  }
  if (v104)
  {
    if (v104 == v103)
    {
      v37[14] = v37 + 11;
      (*(void (**)(void))(v103[0] + 24))();
    }
    else
    {
      v37[14] = v104;
      v104 = 0;
    }
  }
  else
  {
    v37[14] = 0;
  }
  v43 = v105;
  v42 = v106;
  v37[16] = v106;
  v44 = v37 + 16;
  v37[15] = v43;
  v45 = v107;
  v37[17] = v107;
  if (v45)
  {
    v42[2] = v44;
    v105 = &v106;
    v106 = 0;
    v107 = 0;
  }
  else
  {
    v37[15] = v44;
  }
  v86 = 1;
  v46 = (float)(unint64_t)(*(_QWORD *)&this[2].__m_.__opaque[40] + 1);
  v47 = *(float *)&this[2].__m_.__opaque[48];
  if (v20 && (float)(v47 * (float)v20) >= v46)
    goto LABEL_141;
  v48 = v20 < 3 || (v20 & (v20 - 1)) != 0;
  v49 = v48 | (2 * v20);
  v50 = vcvtps_u32_f32(v46 / v47);
  if (v49 <= v50)
    prime = v50;
  else
    prime = v49;
  if (prime == 1)
  {
    prime = 2;
  }
  else if ((prime & (prime - 1)) != 0)
  {
    prime = std::__next_prime(prime);
  }
  v52 = *(int8x8_t *)&this[2].__m_.__opaque[24];
  if (prime > *(_QWORD *)&v52)
    goto LABEL_125;
  if (prime < *(_QWORD *)&v52)
  {
    v53 = vcvtps_u32_f32((float)*(unint64_t *)&this[2].__m_.__opaque[40] / *(float *)&this[2].__m_.__opaque[48]);
    if (*(_QWORD *)&v52 < 3uLL || (v54 = (uint8x8_t)vcnt_s8(v52), v54.i16[0] = vaddlv_u8(v54), v54.u32[0] > 1uLL))
    {
      v53 = std::__next_prime(v53);
    }
    else
    {
      v55 = 1 << -(char)__clz(v53 - 1);
      if (v53 >= 2)
        v53 = v55;
    }
    if (prime <= v53)
      prime = v53;
    if (prime < *(_QWORD *)&v52)
LABEL_125:
      sub_20AEC91EC((uint64_t)v41, prime);
  }
  v20 = *(_QWORD *)&this[2].__m_.__opaque[24];
  v56 = v20 - 1;
  if ((v20 & (v20 - 1)) != 0)
  {
    if (v19 >= v20)
    {
      v7 = v19 % v20;
      v57 = *(_QWORD *)v41;
      v58 = *(_QWORD **)(*(_QWORD *)v41 + 8 * (v19 % v20));
      if (!v58)
        goto LABEL_144;
LABEL_142:
      *v37 = *v58;
LABEL_150:
      *v58 = v37;
      goto LABEL_151;
    }
    v7 = v19;
LABEL_141:
    v57 = *(_QWORD *)v41;
    v58 = *(_QWORD **)(*(_QWORD *)v41 + 8 * v7);
    if (!v58)
      goto LABEL_144;
    goto LABEL_142;
  }
  v7 = v56 & v19;
  v57 = *(_QWORD *)v41;
  v58 = *(_QWORD **)(*(_QWORD *)v41 + 8 * (v56 & v19));
  if (v58)
    goto LABEL_142;
LABEL_144:
  *v37 = *(_QWORD *)v40;
  *(_QWORD *)v40 = v37;
  *(_QWORD *)(v57 + 8 * v7) = v40;
  if (*v37)
  {
    v59 = *(_QWORD *)(*v37 + 8);
    if ((v20 & (v20 - 1)) != 0)
    {
      if (v59 >= v20)
        v59 %= v20;
    }
    else
    {
      v59 &= v20 - 1;
    }
    v58 = (_QWORD *)(*(_QWORD *)v41 + 8 * v59);
    goto LABEL_150;
  }
LABEL_151:
  ++*(_QWORD *)&this[2].__m_.__opaque[40];
LABEL_152:
  sub_20B42688C(v106);
  v60 = v103;
  if (v104 == v103)
  {
    v64 = 4;
    v12 = v89;
    LODWORD(v7) = v80;
    v14 = 0;
    v62 = v93;
    p_size = &v91.__r_.__value_.__l.__size_;
    v63 = (std::string::__raw *)v101;
  }
  else
  {
    v12 = v89;
    LODWORD(v7) = v80;
    v14 = 0;
    v62 = v93;
    p_size = &v91.__r_.__value_.__l.__size_;
    v63 = (std::string::__raw *)v101;
    if (!v104)
      goto LABEL_157;
    v64 = 5;
    v60 = v104;
  }
  (*(void (**)(void))(*v60 + 8 * v64))();
LABEL_157:
  if (v102 == (std::string::__raw *)v101)
  {
    v65 = 4;
  }
  else
  {
    if (!v102)
      goto LABEL_162;
    v65 = 5;
    v63 = v102;
  }
  (*(void (**)(std::string::__raw *))(v63->__words[0] + 8 * v65))(v63);
LABEL_162:
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    sub_20B42688C(v96);
    v66 = v94;
    if (v94 != v93)
      goto LABEL_164;
LABEL_167:
    v67 = 4;
    goto LABEL_168;
  }
  operator delete(__dst.__r_.__value_.__l.__data_);
  sub_20B42688C(v96);
  v66 = v94;
  if (v94 == v93)
    goto LABEL_167;
LABEL_164:
  if (v66)
  {
    v67 = 5;
    v62 = v66;
LABEL_168:
    (*(void (**)(_QWORD *))(*v62 + 8 * v67))(v62);
  }
  if (v92 == (std::string *)&v91.__r_.__value_.__r.__words[1])
  {
    v68 = 4;
  }
  else
  {
    if (!v92)
      goto LABEL_174;
    v68 = 5;
    p_size = (std::string::size_type *)v92;
  }
  (*(void (**)(std::string::size_type *))(*p_size + 8 * v68))(p_size);
LABEL_174:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v69 = v84;
  if (v84)
  {
    p_shared_owners = (unint64_t *)&v84->__shared_owners_;
    do
      v71 = __ldaxr(p_shared_owners);
    while (__stlxr(v71 - 1, p_shared_owners));
    if (!v71)
    {
      ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
      std::__shared_weak_count::__release_weak(v69);
      v72 = v90;
      if (v90 != v89)
        goto LABEL_181;
LABEL_184:
      v73 = 4;
      goto LABEL_185;
    }
  }
  v72 = v90;
  if (v90 == v89)
    goto LABEL_184;
LABEL_181:
  if (!v72)
    goto LABEL_186;
  v73 = 5;
  v12 = v72;
LABEL_185:
  (*(void (**)(_QWORD *))(*v12 + 8 * v73))(v12);
LABEL_186:
  v74 = (std::string::__raw *)v88;
  if (v88 == (std::string *)v87)
  {
    v75 = 4;
    v74 = (std::string::__raw *)v87;
  }
  else
  {
    if (!v88)
      goto LABEL_191;
    v75 = 5;
  }
  (*(void (**)(void))(v74->__words[0] + 8 * v75))();
LABEL_191:
  if (v14)
  {
    std::to_string(&v91, v7);
    sub_20B1F16DC("Failed to start server on port ", &v91, &__dst);
    if (SHIBYTE(v91.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v91.__r_.__value_.__l.__data_);
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v78 = &exception->__vftable;
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v79 = &__dst;
    else
      v79 = (std::string *)__dst.__r_.__value_.__r.__words[0];
    std::logic_error::logic_error(exception, (const char *)v79);
    *v78 = MEMORY[0x24BEDB8D0] + 16;
    __cxa_throw(v78, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  return a1;
}

void sub_20B425A94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,char a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B425B8C(uint64_t a1)
{
  sub_20B423BA0(*(std::mutex **)(a1 + 40), a1);
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_20B425BDC(uint64_t a1)
{
  sub_20B423BA0(*(std::mutex **)(a1 + 40), a1);
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x20BD3583CLL);
}

char *sub_20B425C2C@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  char *v2;

  v2 = result;
  if (result[31] < 0)
  {
    result = (char *)sub_20AEC60F4((_BYTE *)a2, *((void **)result + 1), *((_QWORD *)result + 2));
    *(_WORD *)(a2 + 24) = *((_WORD *)v2 + 16);
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)(result + 8);
    *(_QWORD *)(a2 + 16) = *((_QWORD *)result + 3);
    *(_WORD *)(a2 + 24) = *((_WORD *)result + 16);
  }
  return result;
}

uint64_t sub_20B425C90(uint64_t a1, uint64_t a2, int a3)
{
  std::mutex *v5;
  int v6;

  v5 = *(std::mutex **)(a1 + 40);
  if (a3)
    v6 = 3;
  else
    v6 = 2;
  sub_20B424484(v5, a1, a2, v6, 0, 0);
  return 1;
}

uint64_t sub_20B425CCC(uint64_t a1, unsigned __int8 *a2, uint64_t a3, int a4)
{
  std::mutex *v6;
  int v7;

  v6 = *(std::mutex **)(a1 + 40);
  if (a4)
    v7 = 3;
  else
    v7 = 2;
  sub_20B424484(v6, a1, a3, v7, a2, 1u);
  return 1;
}

std::string::size_type sub_20B425D00(std::string::size_type a1, uint64_t a2, int a3, int a4, _QWORD *a5, uint64_t a6, std::mutex *this)
{
  std::string::size_type v12;
  __int128 v13;
  __int16 v14;
  std::string *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t **v21;
  uint64_t *v22;
  _QWORD *v23;
  std::string::size_type v24;
  BOOL v25;
  _QWORD *v26;
  std::string::size_type *p_size;
  std::string::size_type v28;
  uint64_t **v29;
  std::__shared_weak_count *v30;
  std::string::size_type v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  std::string::size_type size;
  std::string *v37;
  std::string::size_type v38;
  int v39;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t *v44;
  unsigned __int16 i;
  uint64_t *v46;
  uint64_t v47;
  unsigned int v48;
  BOOL v49;
  uint64_t *v50;
  uint64_t *v51;
  unsigned int v52;
  _WORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t *p_shared_owners;
  unint64_t v58;
  std::string::__raw *v59;
  uint64_t v60;
  std::string *v61;
  size_t v62;
  int v63;
  std::logic_error *exception;
  std::string __dst;
  char v67;
  std::string v68;
  unsigned __int16 v69;
  unsigned __int8 v70;
  std::string __p;
  uint64_t v72;
  std::__shared_weak_count *v73;
  char v74;
  _QWORD v75[3];
  std::string *v76;
  std::string v77;
  unsigned __int16 v78;
  std::string *v79;
  uint64_t v80;

  v80 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24C41BD50;
  *(_QWORD *)(a1 + 8) = 850045863;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_QWORD *)(a1 + 72) = 1018212795;
  *(_QWORD *)(a1 + 64) = 0;
  v12 = a1 + 128;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 105) = 0u;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_20AEC60F4((_BYTE *)v12, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    v13 = *(_OWORD *)a2;
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + 16);
    *(_OWORD *)v12 = v13;
  }
  v14 = *(_WORD *)(a2 + 24);
  *(_BYTE *)(a1 + 160) = 0;
  v15 = (std::string *)(a1 + 160);
  *(_WORD *)(a1 + 152) = v14;
  *(_BYTE *)(a1 + 183) = 0;
  *(_WORD *)(a1 + 184) = 0;
  *(_QWORD *)(a1 + 192) = this;
  v16 = (_QWORD *)a5[3];
  if (v16)
  {
    if (v16 == a5)
    {
      v76 = (std::string *)v75;
      (*(void (**)(_QWORD *, _QWORD *))(*a5 + 24))(a5, v75);
    }
    else
    {
      v76 = (std::string *)a5[3];
      a5[3] = 0;
    }
  }
  else
  {
    v76 = 0;
  }
  __dst.__r_.__value_.__s.__data_[0] = 0;
  v67 = 0;
  if (*(_BYTE *)(a6 + 24))
  {
    if (*(char *)(a6 + 23) < 0)
      sub_20AEC60F4(&__dst, *(void **)a6, *(_QWORD *)(a6 + 8));
    else
      __dst = *(std::string *)a6;
    v67 = 1;
  }
  sub_20B4238E0(&v72, this, 3);
  v17 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)a1 + 24))(a1);
  v18 = sub_20B426D04(&this[2].__m_.__opaque[16], v17);
  if (!v18)
    goto LABEL_30;
  v19 = v18;
  v21 = (uint64_t **)(v18 + 16);
  v20 = (uint64_t *)v18[16];
  if (v20)
  {
    v22 = v18 + 16;
    v23 = (_QWORD *)v18[16];
    do
    {
      v24 = v23[4];
      v25 = v24 >= a1;
      if (v24 >= a1)
        v26 = v23;
      else
        v26 = v23 + 1;
      if (v25)
        v22 = v23;
      v23 = (_QWORD *)*v26;
    }
    while (*v26);
    if (v22 != (uint64_t *)v21 && v22[4] <= a1)
    {
LABEL_30:
      v68.__r_.__value_.__s.__data_[0] = 0;
      v70 = 0;
      v30 = v73;
      if (!v73)
        goto LABEL_111;
      goto LABEL_107;
    }
  }
  v77.__r_.__value_.__r.__words[0] = a1;
  p_size = &v77.__r_.__value_.__l.__size_;
  if (!v76)
  {
    v79 = 0;
    v28 = a1;
    v29 = (uint64_t **)(v18 + 16);
    if (v20)
      goto LABEL_37;
    goto LABEL_41;
  }
  if (v76 != (std::string *)v75)
  {
    v79 = v76;
    v76 = 0;
    v28 = a1;
    v29 = (uint64_t **)(v18 + 16);
    if (v20)
      goto LABEL_37;
    goto LABEL_41;
  }
  v79 = (std::string *)&v77.__r_.__value_.__r.__words[1];
  (*(void (**)(_QWORD *, std::string::size_type *))(v75[0] + 24))(v75, &v77.__r_.__value_.__l.__size_);
  v28 = v77.__r_.__value_.__r.__words[0];
  v20 = *v21;
  v29 = v21;
  if (!*v21)
  {
LABEL_41:
    v32 = (uint64_t *)operator new(0x48uLL);
    v33 = v32;
    v32[4] = v28;
    if (v79)
    {
      if (v79 == (std::string *)&v77.__r_.__value_.__r.__words[1])
      {
        v32[8] = (uint64_t)(v32 + 5);
        (*(void (**)(std::string::size_type *))(v77.__r_.__value_.__l.__size_ + 24))(&v77.__r_.__value_.__l.__size_);
      }
      else
      {
        v32[8] = (uint64_t)v79;
        v79 = 0;
      }
    }
    else
    {
      v32[8] = 0;
    }
    *v33 = 0;
    v33[1] = 0;
    v33[2] = (uint64_t)v29;
    *v21 = v33;
    v34 = *(_QWORD *)v19[15];
    if (v34)
    {
      v19[15] = v34;
      v33 = *v21;
    }
    sub_20AEC84C8((uint64_t *)v19[16], v33);
    ++v19[17];
    goto LABEL_49;
  }
  while (1)
  {
LABEL_37:
    while (1)
    {
      v29 = (uint64_t **)v20;
      v31 = v20[4];
      if (v31 <= v28)
        break;
      v20 = *v29;
      v21 = v29;
      if (!*v29)
        goto LABEL_41;
    }
    if (v31 >= v28)
      break;
    v20 = v29[1];
    if (!v20)
    {
      v21 = v29 + 1;
      goto LABEL_41;
    }
  }
LABEL_49:
  if (v79 == (std::string *)&v77.__r_.__value_.__r.__words[1])
  {
    v35 = 4;
  }
  else
  {
    if (!v79)
      goto LABEL_54;
    v35 = 5;
    p_size = (std::string::size_type *)v79;
  }
  (*(void (**)(std::string::size_type *))(*p_size + 8 * v35))(p_size);
LABEL_54:
  if (v67)
  {
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      sub_20AEC60F4(&v77, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    else
      v77 = __dst;
  }
  else
  {
    *((_BYTE *)&v77.__r_.__value_.__s + 23) = 9;
    strcpy((char *)&v77, "localhost");
  }
  size = HIBYTE(v77.__r_.__value_.__r.__words[2]);
  if ((v77.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v77.__r_.__value_.__l.__size_;
  if (size != 9)
    goto LABEL_68;
  v37 = (std::string *)v77.__r_.__value_.__r.__words[0];
  if ((v77.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v37 = &v77;
  v38 = v37->__r_.__value_.__r.__words[0];
  v39 = v37->__r_.__value_.__s.__data_[8];
  if (v38 == 0x736F686C61636F6CLL && v39 == 116)
  {
    *((_BYTE *)&__p.__r_.__value_.__s + 23) = 9;
    strcpy((char *)&__p, "127.0.0.1");
    if ((*((_BYTE *)&v77.__r_.__value_.__s + 23) & 0x80) != 0)
LABEL_71:
      operator delete(v77.__r_.__value_.__l.__data_);
  }
  else
  {
LABEL_68:
    if ((SHIBYTE(v77.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      __p = v77;
      goto LABEL_72;
    }
    sub_20AEC60F4(&__p, v77.__r_.__value_.__l.__data_, v77.__r_.__value_.__l.__size_);
    if ((*((_BYTE *)&v77.__r_.__value_.__s + 23) & 0x80) != 0)
      goto LABEL_71;
  }
LABEL_72:
  v41 = sub_20B426B64((uint64_t **)&this[3], (const void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&__p);
  v42 = v41;
  v44 = v41 + 8;
  v43 = v41[8];
  if (v43)
  {
    for (i = -15536; ; ++i)
    {
      v46 = v41 + 8;
      v47 = v41[8];
      do
      {
        v48 = *(unsigned __int16 *)(v47 + 32);
        v49 = v48 >= i;
        if (v48 >= i)
          v50 = (uint64_t *)v47;
        else
          v50 = (uint64_t *)(v47 + 8);
        if (v49)
          v46 = (uint64_t *)v47;
        v47 = *v50;
      }
      while (*v50);
      if (v46 == v44 || *((unsigned __int16 *)v46 + 16) > i)
        break;
    }
  }
  else
  {
    i = -15536;
  }
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    v77 = __p;
    v78 = i;
    v51 = v41 + 8;
    if (v43)
      goto LABEL_92;
    goto LABEL_96;
  }
  sub_20AEC60F4(&v77, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  v43 = *v44;
  v78 = i;
  v51 = v44;
  if (!v43)
  {
LABEL_96:
    v53 = operator new(0x30uLL);
    v53[16] = i;
    *((_QWORD *)v53 + 5) = a1;
    *(_QWORD *)v53 = 0;
    *((_QWORD *)v53 + 1) = 0;
    *((_QWORD *)v53 + 2) = v51;
    *v44 = (uint64_t)v53;
    v54 = *(_QWORD *)v42[7];
    if (v54)
    {
      v42[7] = v54;
      v53 = (_WORD *)*v44;
    }
    sub_20AEC84C8((uint64_t *)v42[8], (uint64_t *)v53);
    ++v42[9];
    goto LABEL_99;
  }
  while (1)
  {
LABEL_92:
    while (1)
    {
      v51 = (uint64_t *)v43;
      v52 = *(unsigned __int16 *)(v43 + 32);
      if (v52 <= i)
        break;
      v43 = *v51;
      v44 = v51;
      if (!*v51)
        goto LABEL_96;
    }
    if (v52 >= i)
      break;
    v43 = v51[1];
    if (!v43)
    {
      v44 = v51 + 1;
      goto LABEL_96;
    }
  }
LABEL_99:
  v55 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)a1 + 16))(a1);
  v74 = 1;
  v56 = v19[14];
  if (!v56)
    sub_20AECABA4();
  (*(void (**)(uint64_t, uint64_t, char *))(*(_QWORD *)v56 + 48))(v56, v55, &v74);
  if ((SHIBYTE(v77.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    v68 = v77;
    v69 = v78;
    v70 = 1;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_102;
LABEL_106:
    v30 = v73;
    if (!v73)
      goto LABEL_111;
    goto LABEL_107;
  }
  sub_20AEC60F4(&v68, v77.__r_.__value_.__l.__data_, v77.__r_.__value_.__l.__size_);
  v69 = v78;
  v70 = 1;
  if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v77.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_106;
  }
  else if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_106;
  }
LABEL_102:
  operator delete(__p.__r_.__value_.__l.__data_);
  v30 = v73;
  if (!v73)
    goto LABEL_111;
LABEL_107:
  p_shared_owners = (unint64_t *)&v30->__shared_owners_;
  do
    v58 = __ldaxr(p_shared_owners);
  while (__stlxr(v58 - 1, p_shared_owners));
  if (!v58)
  {
    ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
    std::__shared_weak_count::__release_weak(v30);
  }
LABEL_111:
  if (v67 && SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  v59 = (std::string::__raw *)v76;
  if (v76 == (std::string *)v75)
  {
    v60 = 4;
    v59 = (std::string::__raw *)v75;
  }
  else
  {
    if (!v76)
      goto LABEL_119;
    v60 = 5;
  }
  (*(void (**)(void))(v59->__words[0] + 8 * v60))();
LABEL_119:
  if (!v70)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B422D98("Client failed to connect to server at '", a2, (uint64_t)"'");
    std::logic_error::logic_error(exception, &v77);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  if (v15 == &v68)
  {
    *(_WORD *)(a1 + 184) = v69;
LABEL_134:
    if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v68.__r_.__value_.__l.__data_);
    return a1;
  }
  if (*(char *)(a1 + 183) < 0)
  {
    if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v61 = &v68;
    else
      v61 = (std::string *)v68.__r_.__value_.__r.__words[0];
    if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v62 = HIBYTE(v68.__r_.__value_.__r.__words[2]);
    else
      v62 = v68.__r_.__value_.__l.__size_;
    sub_20AEC8090((void **)(a1 + 160), v61, v62);
  }
  else if ((*((_BYTE *)&v68.__r_.__value_.__s + 23) & 0x80) != 0)
  {
    sub_20AEC7FCC((_QWORD *)(a1 + 160), v68.__r_.__value_.__l.__data_, v68.__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&v15->__r_.__value_.__l.__data_ = *(_OWORD *)&v68.__r_.__value_.__l.__data_;
    *(_QWORD *)(a1 + 176) = *((_QWORD *)&v68.__r_.__value_.__l + 2);
  }
  v63 = v70;
  *(_WORD *)(a1 + 184) = v69;
  if (v63)
    goto LABEL_134;
  return a1;
}

void sub_20B4264EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::condition_variable *a11, std::mutex *a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

unint64_t sub_20B426688(unint64_t a1)
{
  sub_20B424AA8(*(std::mutex **)(a1 + 192), a1);
  if (*(char *)(a1 + 183) < 0)
  {
    operator delete(*(void **)(a1 + 160));
    if ((*(char *)(a1 + 151) & 0x80000000) == 0)
      goto LABEL_3;
LABEL_5:
    operator delete(*(void **)(a1 + 128));
    goto LABEL_3;
  }
  if (*(char *)(a1 + 151) < 0)
    goto LABEL_5;
LABEL_3:
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 72));
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

void sub_20B4266F4(unint64_t a1)
{
  sub_20B424AA8(*(std::mutex **)(a1 + 192), a1);
  if (*(char *)(a1 + 183) < 0)
  {
    operator delete(*(void **)(a1 + 160));
    if ((*(char *)(a1 + 151) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else if ((*(char *)(a1 + 151) & 0x80000000) == 0)
  {
LABEL_3:
    std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 72));
    std::mutex::~mutex((std::mutex *)(a1 + 8));
    JUMPOUT(0x20BD3583CLL);
  }
  operator delete(*(void **)(a1 + 128));
  goto LABEL_3;
}

uint64_t sub_20B426770(uint64_t a1)
{
  return a1 + 160;
}

uint64_t sub_20B426778(uint64_t a1)
{
  return a1 + 128;
}

uint64_t sub_20B426780(uint64_t a1, uint64_t a2)
{
  sub_20B424D8C(*(std::mutex **)(a1 + 192), a1, a2);
  return 1;
}

uint64_t sub_20B4267A4(uint64_t (***a1)())
{
  uint64_t (***v1)();
  std::mutex *m;
  _BOOL4 owns;
  std::unique_lock<std::mutex> v5;

  if (!a1 || (v1 = a1, *a1 != off_24C41BD50))
    v1 = 0;
  m = (std::mutex *)(v1 + 1);
  v5.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(v1 + 1);
  v5.__owns_ = 1;
  std::mutex::lock((std::mutex *)(v1 + 1));
  if (*((_BYTE *)v1 + 120))
  {
    *((_BYTE *)v1 + 120) = 0;
LABEL_9:
    std::mutex::unlock(m);
    return 1;
  }
  do
    std::condition_variable::wait((std::condition_variable *)(v1 + 9), &v5);
  while (!*((_BYTE *)v1 + 120));
  owns = v5.__owns_;
  *((_BYTE *)v1 + 120) = 0;
  if (owns)
  {
    m = v5.__m_;
    goto LABEL_9;
  }
  return 1;
}

void sub_20B426840(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41BDF8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B426850(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41BDF8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B426880(uint64_t a1)
{
  std::recursive_mutex::unlock(*(std::recursive_mutex **)(a1 + 24));
}

void sub_20B42688C(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;

  if (a1)
  {
    sub_20B42688C(*a1);
    sub_20B42688C(a1[1]);
    v2 = (_QWORD *)a1[8];
    if (v2 == a1 + 5)
    {
      v3 = 4;
      v2 = a1 + 5;
    }
    else
    {
      if (!v2)
      {
LABEL_8:
        operator delete(a1);
        return;
      }
      v3 = 5;
    }
    (*(void (**)(void))(*v2 + 8 * v3))();
    goto LABEL_8;
  }
}

void sub_20B4268F4()
{
  sub_20AEC014C("vector");
}

uint64_t *sub_20B426908(uint64_t *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (!*((_BYTE *)a1 + 16))
    {
LABEL_15:
      operator delete((void *)v2);
      return a1;
    }
    sub_20B42688C(*(_QWORD **)(v2 + 128));
    v3 = *(_QWORD **)(v2 + 112);
    if (v3 == (_QWORD *)(v2 + 88))
    {
      v4 = 4;
      v3 = (_QWORD *)(v2 + 88);
    }
    else
    {
      if (!v3)
        goto LABEL_8;
      v4 = 5;
    }
    (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_8:
    v5 = *(_QWORD **)(v2 + 80);
    if (v5 == (_QWORD *)(v2 + 56))
    {
      v6 = 4;
      v5 = (_QWORD *)(v2 + 56);
    }
    else
    {
      if (!v5)
        goto LABEL_13;
      v6 = 5;
    }
    (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_13:
    if (*(char *)(v2 + 39) < 0)
      operator delete(*(void **)(v2 + 16));
    goto LABEL_15;
  }
  return a1;
}

void sub_20B4269C8()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B4269DC()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_24C41BE48;
  return result;
}

void sub_20B426A00(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_24C41BE48;
}

uint64_t sub_20B426A1C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N4cv3d3kit3net15ServerCallbacks13data_receivedMUlDpOT_E_E")
    return a1 + 8;
  if (((v3 & (unint64_t)"N4cv3d3kit3net15ServerCallbacks13data_receivedMUlDpOT_E_E" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N4cv3d3kit3net15ServerCallbacks13data_receivedMUlDpOT_E_E"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N4cv3d3kit3net15ServerCallbacks13data_receivedMUlDpOT_E_E" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B426A88()
{
  return &unk_24C41BEA8;
}

void sub_20B426A98()
{
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B426AAC()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_24C41BEC8;
  return result;
}

void sub_20B426AD0(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_24C41BEC8;
}

uint64_t sub_20B426AEC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N4cv3d3kit3net15ServerCallbacks18connection_changedMUlDpOT_E_E")
    return a1 + 8;
  if (((v3 & (unint64_t)"N4cv3d3kit3net15ServerCallbacks18connection_changedMUlDpOT_E_E" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N4cv3d3kit3net15ServerCallbacks18connection_changedMUlDpOT_E_E"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N4cv3d3kit3net15ServerCallbacks18connection_changedMUlDpOT_E_E" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B426B58()
{
  return &unk_24C41BF28;
}

uint64_t *sub_20B426B64(uint64_t **a1, const void **a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t **v6;
  int v7;
  const void *v8;
  size_t v9;
  uint64_t **v10;
  _QWORD *v11;
  const void *v12;
  const void *v13;
  int v14;
  const void *v15;
  size_t v16;
  size_t v17;
  int v18;
  int v19;
  uint64_t *v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t *v23;

  v6 = a1 + 1;
  v5 = a1[1];
  if (v5)
  {
    v7 = *((char *)a2 + 23);
    if (v7 >= 0)
      v8 = a2;
    else
      v8 = *a2;
    if (v7 >= 0)
      v9 = *((unsigned __int8 *)a2 + 23);
    else
      v9 = (size_t)a2[1];
    while (1)
    {
      v10 = (uint64_t **)v5;
      v13 = (const void *)v5[4];
      v11 = v5 + 4;
      v12 = v13;
      v14 = *((char *)v11 + 23);
      if (v14 >= 0)
        v15 = v11;
      else
        v15 = v12;
      if (v14 >= 0)
        v16 = *((unsigned __int8 *)v11 + 23);
      else
        v16 = v11[1];
      if (v16 >= v9)
        v17 = v9;
      else
        v17 = v16;
      v18 = memcmp(v8, v15, v17);
      if (v18)
      {
        if (v18 < 0)
          goto LABEL_8;
LABEL_22:
        v19 = memcmp(v15, v8, v17);
        if (v19)
        {
          if ((v19 & 0x80000000) == 0)
            return (uint64_t *)v10;
        }
        else if (v16 >= v9)
        {
          return (uint64_t *)v10;
        }
        v5 = v10[1];
        if (!v5)
        {
          v6 = v10 + 1;
LABEL_28:
          v20 = (uint64_t *)operator new(0x50uLL);
          v21 = v20 + 4;
          if (*(char *)(a3 + 23) < 0)
            goto LABEL_31;
LABEL_29:
          *(_OWORD *)v21 = *(_OWORD *)a3;
          v21[2] = *(_QWORD *)(a3 + 16);
          goto LABEL_32;
        }
      }
      else
      {
        if (v9 >= v16)
          goto LABEL_22;
LABEL_8:
        v5 = *v10;
        v6 = v10;
        if (!*v10)
          goto LABEL_28;
      }
    }
  }
  v10 = a1 + 1;
  v20 = (uint64_t *)operator new(0x50uLL);
  v21 = v20 + 4;
  if ((*(char *)(a3 + 23) & 0x80000000) == 0)
    goto LABEL_29;
LABEL_31:
  sub_20AEC60F4(v21, *(void **)a3, *(_QWORD *)(a3 + 8));
LABEL_32:
  v20[9] = 0;
  v20[8] = 0;
  v20[7] = (uint64_t)(v20 + 8);
  *v20 = 0;
  v20[1] = 0;
  v20[2] = (uint64_t)v10;
  *v6 = v20;
  v22 = (uint64_t *)**a1;
  v23 = v20;
  if (v22)
  {
    *a1 = v22;
    v23 = *v6;
  }
  sub_20AEC84C8(a1[1], v23);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return v20;
}

void sub_20B426CF0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_20B426D04(_QWORD *a1, uint64_t a2)
{
  _BYTE *v2;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int8x8_t v7;
  uint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  unint64_t v11;
  uint64_t **v12;
  uint64_t *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const void **v20;
  unsigned __int8 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const void **v25;
  unsigned __int8 *v26;
  char v28;

  v2 = (_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v5 = v4;
  }
  v6 = sub_20AEC7B80((uint64_t)&v28, (uint64_t *)a2, v5);
  v7 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v7)
    return 0;
  v8 = *((unsigned __int16 *)v2 + 12);
  v9 = (((v6 + 2654435769u) >> 2) + ((v6 + 2654435769u) << 6) + v8 + 2654435769) ^ (v6 + 2654435769u);
  v10 = (uint8x8_t)vcnt_s8(v7);
  v10.i16[0] = vaddlv_u8(v10);
  if (v10.u32[0] > 1uLL)
  {
    v11 = (((v6 + 2654435769u) >> 2) + ((v6 + 2654435769u) << 6) + v8 + 2654435769) ^ (v6 + 2654435769u);
    if (v9 >= *(_QWORD *)&v7)
      v11 = v9 % *(_QWORD *)&v7;
  }
  else
  {
    v11 = v9 & (*(_QWORD *)&v7 - 1);
  }
  v12 = *(uint64_t ***)(*a1 + 8 * v11);
  if (!v12)
    return 0;
  v13 = *v12;
  if (*v12)
  {
    v14 = v2[23];
    if (v14 >= 0)
      v15 = v2[23];
    else
      v15 = *((_QWORD *)v2 + 1);
    if (v14 < 0)
      v2 = *(_BYTE **)v2;
    if (v10.u32[0] < 2uLL)
    {
      v16 = *(_QWORD *)&v7 - 1;
      while (1)
      {
        v22 = v13[1];
        if (v22 != v9)
        {
          if ((v22 & v16) != v11)
            return 0;
          goto LABEL_37;
        }
        v23 = *((unsigned __int8 *)v13 + 39);
        if ((v23 & 0x80u) == 0)
          v24 = *((unsigned __int8 *)v13 + 39);
        else
          v24 = v13[3];
        if (v24 == v15)
        {
          v25 = (const void **)(v13 + 2);
          if ((v23 & 0x80) != 0)
          {
            if (memcmp(*v25, v2, v13[3]))
              goto LABEL_37;
          }
          else if (*((_BYTE *)v13 + 39))
          {
            v26 = v2;
            while (*(unsigned __int8 *)v25 == *v26)
            {
              v25 = (const void **)((char *)v25 + 1);
              ++v26;
              if (!--v23)
                goto LABEL_50;
            }
            goto LABEL_37;
          }
LABEL_50:
          if (*((unsigned __int16 *)v13 + 20) == (_DWORD)v8)
            return v13;
        }
LABEL_37:
        v13 = (uint64_t *)*v13;
        if (!v13)
          return v13;
      }
    }
    do
    {
      v17 = v13[1];
      if (v17 == v9)
      {
        v18 = *((unsigned __int8 *)v13 + 39);
        if ((v18 & 0x80u) == 0)
          v19 = *((unsigned __int8 *)v13 + 39);
        else
          v19 = v13[3];
        if (v19 != v15)
          goto LABEL_19;
        v20 = (const void **)(v13 + 2);
        if ((v18 & 0x80) != 0)
        {
          if (memcmp(*v20, v2, v13[3]))
            goto LABEL_19;
        }
        else if (*((_BYTE *)v13 + 39))
        {
          v21 = v2;
          while (*(unsigned __int8 *)v20 == *v21)
          {
            v20 = (const void **)((char *)v20 + 1);
            ++v21;
            if (!--v18)
              goto LABEL_34;
          }
          goto LABEL_19;
        }
LABEL_34:
        if (*((unsigned __int16 *)v13 + 20) == (_DWORD)v8)
          return v13;
      }
      else
      {
        if (v17 >= *(_QWORD *)&v7)
          v17 %= *(_QWORD *)&v7;
        if (v17 != v11)
          return 0;
      }
LABEL_19:
      v13 = (uint64_t *)*v13;
    }
    while (v13);
  }
  return v13;
}

_QWORD *sub_20B426F40(_QWORD *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  std::logic_error *exception;

  v3 = result[6];
  v2 = result[7];
  v4 = v2 - v3;
  if (v2 < v3)
    v4 = 0;
  if (v4 <= 3)
    goto LABEL_10;
  v5 = result[3];
  v6 = v3 + 4;
  result[6] = v6;
  if (v2 <= v6)
    goto LABEL_10;
  *(_BYTE *)a2 = *(_BYTE *)(v5 + v6);
  v7 = result[7];
  v8 = result[6] + 1;
  result[6] = v8;
  v9 = v7 >= v8;
  v10 = v7 - v8;
  if (!v9)
    v10 = 0;
  if (v10 <= 3
    || (*(_DWORD *)(a2 + 4) = *(_DWORD *)(result[3] + v8),
        v11 = result[7],
        v12 = result[6] + 4,
        result[6] = v12,
        v11 <= v12))
  {
LABEL_10:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  *(_BYTE *)(a2 + 8) = *(_BYTE *)(result[3] + v12);
  ++result[6];
  return result;
}

void sub_20B427060(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_20B427074(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_20B427088(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_20B42709C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B4270B0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  *(_QWORD *)a1 = &off_24C41BF48;
  *(_DWORD *)(a1 + 8) = -1;
  *(_BYTE *)(a1 + 39) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_WORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 71) = 0;
  *(_BYTE *)(a1 + 48) = 0;
  *(_WORD *)(a1 + 72) = 0;
  *(_WORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 1018212795;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 850045863;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_QWORD *)(a1 + 208) = 1018212795;
  *(_OWORD *)(a1 + 185) = 0u;
  *(_QWORD *)(a1 + 264) = 850045863;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_QWORD *)(a1 + 320) = 0;
  *(_QWORD *)(a1 + 352) = 0;
  sub_20B431C0C("NewDataCallback", 0, 2u, 0, 0, 0, &v5);
  v2 = v5;
  *(_QWORD *)(a1 + 360) = &off_24C410DB8;
  v3 = (_QWORD *)operator new();
  *v3 = &off_24C41C9F8;
  v3[1] = v2;
  *(_QWORD *)(a1 + 368) = v3;
  *(_QWORD *)(a1 + 376) = 850045863;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_QWORD *)(a1 + 480) = 0;
  *(_QWORD *)(a1 + 488) = 1018212795;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_QWORD *)(a1 + 528) = 0;
  return a1;
}

void sub_20B427208(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  std::condition_variable *v3;
  std::mutex *v4;
  uint64_t v5;
  std::mutex *v6;
  _QWORD *v8;
  uint64_t v9;
  va_list va;

  va_start(va, a2);
  sub_20B432438((uint64_t *)va);
  v8 = *(_QWORD **)(v2 + 352);
  if (v8 == (_QWORD *)(v5 + 120))
  {
    v9 = 4;
    v8 = (_QWORD *)(v5 + 120);
  }
  else
  {
    if (!v8)
      goto LABEL_6;
    v9 = 5;
  }
  (*(void (**)(void))(*v8 + 8 * v9))();
LABEL_6:
  std::mutex::~mutex(v6);
  std::thread::~thread((std::thread *)(v5 + 48));
  std::condition_variable::~condition_variable((std::condition_variable *)v5);
  std::mutex::~mutex(v4);
  std::condition_variable::~condition_variable(v3);
  if (*(char *)(v2 + 71) < 0)
  {
    operator delete(*(void **)(v2 + 48));
    if ((*(char *)(v2 + 39) & 0x80000000) == 0)
LABEL_8:
      _Unwind_Resume(a1);
  }
  else if ((*(char *)(v2 + 39) & 0x80000000) == 0)
  {
    goto LABEL_8;
  }
  operator delete(*(void **)(v2 + 16));
  _Unwind_Resume(a1);
}

uint64_t sub_20B4272B0(uint64_t a1)
{
  std::mutex *v2;
  int v3;
  void **v4;
  void **v5;
  unint64_t v6;
  void **v7;
  char *v8;
  unint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  v2 = (std::mutex *)(a1 + 264);
  std::mutex::lock((std::mutex *)(a1 + 264));
  atomic_store(0, (unsigned __int8 *)(a1 + 81));
  v3 = *(_DWORD *)(a1 + 8);
  if (v3 >= 1)
  {
    if (shutdown(*(_DWORD *)(a1 + 8), 2) < 0)
      __error();
    close(v3);
  }
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 368) + 24))(*(_QWORD *)(a1 + 368));
  if (*(_QWORD *)(a1 + 256))
    std::thread::join((std::thread *)(a1 + 256));
  std::condition_variable::notify_one((std::condition_variable *)(a1 + 488));
  *(_DWORD *)(a1 + 8) = -1;
  std::mutex::unlock(v2);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 488));
  v4 = *(void ***)(a1 + 448);
  v5 = *(void ***)(a1 + 456);
  if (v5 == v4)
  {
    v5 = *(void ***)(a1 + 448);
    *(_QWORD *)(a1 + 480) = 0;
    v14 = 0;
  }
  else
  {
    v6 = *(_QWORD *)(a1 + 472);
    v7 = &v4[v6 / 0x24];
    v8 = (char *)*v7 + 112 * (v6 % 0x24);
    v9 = (unint64_t)v4[(*(_QWORD *)(a1 + 480) + v6) / 0x24] + 112 * ((*(_QWORD *)(a1 + 480) + v6) % 0x24);
    if (v8 != (char *)v9)
    {
      do
      {
        v10 = (void *)*((_QWORD *)v8 + 11);
        if (v10)
        {
          *((_QWORD *)v8 + 12) = v10;
          operator delete(v10);
        }
        v11 = (void *)*((_QWORD *)v8 + 8);
        if (v11)
        {
          *((_QWORD *)v8 + 9) = v11;
          operator delete(v11);
        }
        v12 = (void *)*((_QWORD *)v8 + 3);
        if (v12)
        {
          *((_QWORD *)v8 + 4) = v12;
          operator delete(v12);
        }
        v8 += 112;
        if (v8 - (_BYTE *)*v7 == 4032)
        {
          v13 = (char *)v7[1];
          ++v7;
          v8 = v13;
        }
      }
      while (v8 != (char *)v9);
      v4 = *(void ***)(a1 + 448);
      v5 = *(void ***)(a1 + 456);
    }
    *(_QWORD *)(a1 + 480) = 0;
    v14 = (char *)v5 - (char *)v4;
    if ((unint64_t)((char *)v5 - (char *)v4) >= 0x11)
    {
      do
      {
        operator delete(*v4);
        v5 = *(void ***)(a1 + 456);
        v4 = (void **)(*(_QWORD *)(a1 + 448) + 8);
        *(_QWORD *)(a1 + 448) = v4;
        v14 = (char *)v5 - (char *)v4;
      }
      while ((unint64_t)((char *)v5 - (char *)v4) > 0x10);
    }
  }
  v15 = v14 >> 3;
  if (v15 == 1)
  {
    v16 = 18;
    goto LABEL_27;
  }
  if (v15 == 2)
  {
    v16 = 36;
LABEL_27:
    *(_QWORD *)(a1 + 472) = v16;
  }
  if (v4 != v5)
  {
    do
    {
      v17 = *v4++;
      operator delete(v17);
    }
    while (v4 != v5);
    v19 = *(_QWORD *)(a1 + 448);
    v18 = *(_QWORD *)(a1 + 456);
    if (v18 != v19)
      *(_QWORD *)(a1 + 456) = v18 + ((v19 - v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  v20 = *(void **)(a1 + 440);
  if (v20)
    operator delete(v20);
  std::mutex::~mutex((std::mutex *)(a1 + 376));
  v21 = *(_QWORD *)(a1 + 368);
  *(_QWORD *)(a1 + 368) = 0;
  if (v21)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
    v22 = *(_QWORD *)(a1 + 368);
    *(_QWORD *)(a1 + 368) = 0;
    if (v22)
      (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  }
  v23 = *(_QWORD **)(a1 + 352);
  if (v23 == (_QWORD *)(a1 + 328))
  {
    v24 = 4;
    v23 = (_QWORD *)(a1 + 328);
  }
  else
  {
    if (!v23)
      goto LABEL_42;
    v24 = 5;
  }
  (*(void (**)(void))(*v23 + 8 * v24))();
LABEL_42:
  std::mutex::~mutex(v2);
  std::thread::~thread((std::thread *)(a1 + 256));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 208));
  std::mutex::~mutex((std::mutex *)(a1 + 136));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
      return a1;
LABEL_46:
    operator delete(*(void **)(a1 + 16));
    return a1;
  }
  if (*(char *)(a1 + 39) < 0)
    goto LABEL_46;
  return a1;
}

void sub_20B4275A8(void *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  sub_20AEC01C0(a1);
}

void sub_20B4275C0(uint64_t a1)
{
  sub_20B4272B0(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B4275E4(unsigned int a1)
{
  int v2;
  int v3;
  _QWORD *v4;
  unsigned __int8 v5;
  unsigned int v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  int v11;
  int v12;
  int v13;
  char v14;
  sockaddr v15;
  _BYTE v16[24];
  _BYTE *v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v14 = 1;
  v2 = socket(2, 1, 0);
  v13 = v2;
  if (v2 < 1)
  {
    v5 = 0;
    v6 = 0;
    v7 = 0;
  }
  else
  {
    v3 = v2;
    v4 = operator new(0x20uLL);
    *v4 = &off_24C41BFC8;
    v4[1] = &v14;
    v4[2] = &v13;
    v17 = v4;
    v12 = 1;
    if (setsockopt(v3, 0xFFFF, 4, &v12, 4u) < 0
      || (v11 = 1, setsockopt(v13, 0xFFFF, 4130, &v11, 4u) < 0)
      || (*(_QWORD *)&v15.sa_len = 512,
          *(_QWORD *)&v15.sa_data[6] = 0,
          *(_WORD *)v15.sa_data = __rev16(a1),
          bind(v13, &v15, 0x10u) < 0)
      || listen(v13, 128) < 0)
    {
      v5 = 0;
      v6 = 0;
      v7 = 0;
    }
    else
    {
      v14 = 0;
      v5 = v13;
      v6 = v13 & 0xFFFFFF00;
      v7 = 0x100000000;
    }
    if (!v17)
      sub_20AECABA4();
    (*(void (**)(_BYTE *))(*(_QWORD *)v17 + 48))(v17);
    v8 = v17;
    if (v17 == v16)
    {
      v9 = 4;
      v8 = v16;
      goto LABEL_14;
    }
    if (v17)
    {
      v9 = 5;
LABEL_14:
      (*(void (**)(void))(*v8 + 8 * v9))();
    }
  }
  return v7 & 0x100000000 | v6 & 0xFFFFFF00 | v5;
}

void sub_20B427794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_20B428B38((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B4277A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_20B428B38((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B4277BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_20B428B38((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B4277D4(_Unwind_Exception *exception_object, int a2)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20AEC01C0(exception_object);
}

uint64_t sub_20B4277EC(uint64_t a1)
{
  return a1 + 48;
}

uint64_t sub_20B4277F4(uint64_t a1)
{
  return a1 + 16;
}

uint64_t sub_20B4277FC(uint64_t a1, int a2)
{
  uint64_t result;
  int v4;
  unsigned int v5;
  size_t v6;
  size_t v7;
  __int128 *v8;
  uint64_t v9;
  unsigned int v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  unint64_t v15;
  __int16 v16;
  socklen_t v17;
  char __s[16];
  sockaddr v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  if (*(int *)(a1 + 8) > 0)
    return 0;
  v17 = 16;
  v4 = accept(a2, &v19, &v17);
  if (v4 < 0)
    return 0;
  inet_ntop(2, &v19.sa_data[2], __s, 0x10u);
  v5 = *(unsigned __int16 *)v19.sa_data;
  v6 = strlen(__s);
  if (v6 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v7 = v6;
  if (v6 >= 0x17)
  {
    v12 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v12 = v6 | 7;
    v13 = v12 + 1;
    v8 = (__int128 *)operator new(v12 + 1);
    *((_QWORD *)&v14 + 1) = v7;
    v15 = v13 | 0x8000000000000000;
    *(_QWORD *)&v14 = v8;
LABEL_15:
    memcpy(v8, __s, v7);
    v9 = a1 + 16;
    v10 = bswap32(v5) >> 16;
    *((_BYTE *)v8 + v7) = 0;
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
      goto LABEL_9;
LABEL_16:
    operator delete(*(void **)v9);
    goto LABEL_9;
  }
  HIBYTE(v15) = v6;
  v8 = &v14;
  if (v6)
    goto LABEL_15;
  v9 = a1 + 16;
  v10 = bswap32(*(unsigned __int16 *)v19.sa_data) >> 16;
  LOBYTE(v14) = 0;
  if (*(char *)(a1 + 39) < 0)
    goto LABEL_16;
LABEL_9:
  *(_OWORD *)v9 = v14;
  *(_QWORD *)(v9 + 16) = v15;
  *(_WORD *)(a1 + 40) = v10;
  *(_DWORD *)(a1 + 8) = v4;
  sub_20B4279D4(&v14, v4);
  v11 = (void **)(a1 + 48);
  if (*(char *)(a1 + 71) < 0)
    operator delete(*v11);
  *(_OWORD *)v11 = v14;
  *(_QWORD *)(a1 + 64) = v15;
  *(_WORD *)(a1 + 72) = v16;
  result = 1;
  *(_BYTE *)(a1 + 80) = 1;
  return result;
}

unint64_t sub_20B4279D4(_WORD *a1, int a2)
{
  unint64_t result;
  size_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  socklen_t v8;
  sockaddr v9;
  char __s[16];
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v9.sa_len = 0;
  *(_QWORD *)&v9.sa_data[6] = 0;
  v8 = 16;
  result = getsockname(a2, &v9, &v8);
  if ((result & 0x80000000) != 0)
  {
    *((_BYTE *)a1 + 23) = 0;
    *(_BYTE *)a1 = 0;
    a1[12] = 0;
    return result;
  }
  inet_ntop(2, &v9.sa_data[2], __s, 0x10u);
  result = strlen(__s);
  if (result >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v4 = result;
  if (result >= 0x17)
  {
    v6 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17)
      v6 = result | 7;
    v7 = v6 + 1;
    v5 = operator new(v6 + 1);
    *((_QWORD *)a1 + 1) = v4;
    *((_QWORD *)a1 + 2) = v7 | 0x8000000000000000;
    *(_QWORD *)a1 = v5;
  }
  else
  {
    *((_BYTE *)a1 + 23) = result;
    v5 = a1;
    if (!result)
      goto LABEL_11;
  }
  result = (unint64_t)memcpy(v5, __s, v4);
LABEL_11:
  *((_BYTE *)v5 + v4) = 0;
  a1[12] = bswap32(*(unsigned __int16 *)v9.sa_data) >> 16;
  return result;
}

uint64_t sub_20B427B0C(uint64_t a1, __int128 *a2, uint64_t a3, char a4)
{
  int v9;
  int v10;
  int v11;
  _QWORD *v12;
  const char *v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned int v16;
  _QWORD *v17;
  uint64_t v18;
  void **v19;
  char v20;
  __int128 v21;
  addrinfo *v22;
  int v23;
  int v24;
  int v25;
  __int128 *v26;
  size_t v27;
  void **v28;
  _QWORD *v29;
  int v30;
  int v31;
  int v32;
  _QWORD *v33;
  uint64_t v34;
  socklen_t v35;
  int v36;
  fd_set v37;
  timeval v38;
  addrinfo *v39;
  addrinfo v40;
  int v41;
  int v42;
  int v43;
  char v44;
  _QWORD v45[3];
  _QWORD *v46;
  char __str[8];
  uint64_t v48;
  _BYTE v49[24];
  _BYTE *v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  if (*(int *)(a1 + 8) > 0)
    return 0;
  v9 = *((unsigned __int16 *)a2 + 12);
  v44 = 1;
  v10 = socket(2, 1, 0);
  v43 = v10;
  if (v10 < 0)
    return 0;
  v11 = v10;
  v12 = operator new(0x20uLL);
  *v12 = &off_24C41C048;
  v12[1] = &v44;
  v12[2] = &v43;
  v50 = v12;
  v42 = 1;
  if (setsockopt(v11, 0xFFFF, 4, &v42, 4u) < 0)
    goto LABEL_10;
  v41 = 1;
  if (setsockopt(v43, 0xFFFF, 4130, &v41, 4u) < 0)
    goto LABEL_10;
  memset(&v40.ai_addrlen, 0, 32);
  v40.ai_flags = 0;
  v39 = 0;
  *(_QWORD *)&v40.ai_family = 0x100000002;
  v40.ai_protocol = 6;
  *(_QWORD *)__str = 0;
  v48 = 0;
  snprintf(__str, 0x10uLL, "%d", v9);
  v13 = *((char *)a2 + 23) >= 0 ? (const char *)a2 : *(const char **)a2;
  if (getaddrinfo(v13, __str, &v40, &v39))
  {
LABEL_10:
    v14 = 0;
    v15 = 0;
    v16 = 0;
    goto LABEL_11;
  }
  v45[0] = &off_24C41C0C8;
  v45[1] = &v39;
  v45[2] = 0;
  v46 = v45;
  v22 = v39;
  if (a4)
  {
    v23 = fcntl(v43, 3, 0);
    if (v23 < 0 || fcntl(v43, 4, v23 | 4u) < 0)
      goto LABEL_52;
    if (connect(v43, v22->ai_addr, v22->ai_addrlen) < 0)
    {
      if (*__error() != 36)
        goto LABEL_52;
      v30 = (int)(*(double *)&a3 * 1000.0);
      v38.tv_sec = v30 / 1000;
      v38.tv_usec = 1000 * (v30 % 1000);
      memset(&v37, 0, sizeof(v37));
      v31 = v43;
      if (__darwin_check_fd_set_overflow(v43, &v37, 0))
        *(__int32_t *)((char *)v37.fds_bits + (((unint64_t)v31 >> 3) & 0x1FFFFFFFFFFFFFFCLL)) |= 1 << v31;
      v32 = select(v43 + 1, 0, &v37, 0, &v38);
      if (v32 < 0)
      {
        __error();
        goto LABEL_52;
      }
      if (!v32)
        goto LABEL_52;
      v35 = 4;
      v36 = 0;
      v15 = 0;
      v14 = 0;
      if (getsockopt(v43, 0xFFFF, 4103, &v36, &v35) < 0)
      {
        v16 = 0;
        v29 = v46;
        if (v46)
          goto LABEL_54;
LABEL_42:
        sub_20AECABA4();
      }
      v16 = 0;
      if (v36)
      {
LABEL_53:
        v29 = v46;
        if (v46)
          goto LABEL_54;
        goto LABEL_42;
      }
    }
    v24 = fcntl(v43, 3, 0);
    if ((v24 & 0x80000000) == 0)
    {
      v25 = fcntl(v43, 4, v24 & 0xFFFFFFFB);
      goto LABEL_40;
    }
LABEL_52:
    v14 = 0;
    v15 = 0;
    v16 = 0;
    goto LABEL_53;
  }
  v25 = connect(v43, v39->ai_addr, v39->ai_addrlen);
LABEL_40:
  if (v25 < 0)
    goto LABEL_52;
  v44 = 0;
  v15 = v43;
  v16 = v43 & 0xFFFFFF00;
  v14 = 0x100000000;
  v29 = v46;
  if (!v46)
    goto LABEL_42;
LABEL_54:
  (*(void (**)(_QWORD *))(*v29 + 48))(v29);
  v33 = v46;
  if (v46 == v45)
  {
    v34 = 4;
    v33 = v45;
  }
  else
  {
    if (!v46)
      goto LABEL_11;
    v34 = 5;
  }
  (*(void (**)(void))(*v33 + 8 * v34))();
LABEL_11:
  if (!v50)
    sub_20AECABA4();
  (*(void (**)(_BYTE *))(*(_QWORD *)v50 + 48))(v50);
  v17 = v50;
  if (v50 == v49)
  {
    v18 = 4;
    v17 = v49;
  }
  else
  {
    if (!v50)
      goto LABEL_17;
    v18 = 5;
  }
  (*(void (**)(void))(*v17 + 8 * v18))();
LABEL_17:
  if ((v14 & 0x100000000) == 0)
    return 0;
  *(_DWORD *)(a1 + 8) = v16 & 0xFFFFFF00 | v15;
  v19 = (void **)(a1 + 16);
  if ((__int128 *)(a1 + 16) != a2)
  {
    v20 = *((_BYTE *)a2 + 23);
    if (*(char *)(a1 + 39) < 0)
    {
      if (v20 >= 0)
        v26 = a2;
      else
        v26 = *(__int128 **)a2;
      if (v20 >= 0)
        v27 = *((unsigned __int8 *)a2 + 23);
      else
        v27 = *((_QWORD *)a2 + 1);
      sub_20AEC8090(v19, v26, v27);
    }
    else if ((*((_BYTE *)a2 + 23) & 0x80) != 0)
    {
      sub_20AEC7FCC(v19, *(void **)a2, *((_QWORD *)a2 + 1));
    }
    else
    {
      v21 = *a2;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 2);
      *(_OWORD *)v19 = v21;
    }
  }
  *(_WORD *)(a1 + 40) = *((_WORD *)a2 + 12);
  sub_20B4279D4(&v37, *(_DWORD *)(a1 + 8));
  v28 = (void **)(a1 + 48);
  if (*(char *)(a1 + 71) < 0)
    operator delete(*v28);
  *(_OWORD *)v28 = *(_OWORD *)v37.fds_bits;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)&v37.fds_bits[4];
  *(_WORD *)(a1 + 72) = v37.fds_bits[6];
  *(_BYTE *)(a1 + 80) = 0;
  return 1;
}

void sub_20B427FD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20B428B38((_QWORD *)(v1 - 152));
  sub_20B428B38((_QWORD *)(v1 - 104));
  _Unwind_Resume(a1);
}

void sub_20B428004(_Unwind_Exception *exception_object, int a2)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20AEC01C0(exception_object);
}

uint64_t sub_20B428060(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  ssize_t v15;

  if ((*(_DWORD *)(a1 + 8) & 0x80000000) != 0)
    return 0;
  v7 = (_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 24);
  if (!v6)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACD5F, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v6 = *(_QWORD *)(a2 + 24);
    if (!v6)
    {
      sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACD5F, 0, (void (*)(void **))sub_20B532360);
      abort();
    }
  }
  v8 = *(_QWORD *)(a2 + 32) - v6 - 10;
  v9 = 1;
  *(_DWORD *)v6 = 1;
  *(_BYTE *)(v6 + 4) = 10;
  *(_DWORD *)(v6 + 5) = v8;
  *(_BYTE *)(v6 + 9) = a3;
  v11 = *(char **)(a2 + 24);
  v10 = *(_BYTE **)(a2 + 32);
  *v7 = 0;
  v7[1] = 0;
  v7[2] = 0;
  v12 = v10 - v11;
  if (v10 != v11)
  {
    v13 = 0;
    v14 = *(_DWORD *)(a1 + 8);
    while (1)
    {
      v15 = send(v14, &v11[v13], v12 - v13, 0);
      if (v15 < 0)
        break;
      v13 += v15;
      if (v13 >= v12)
      {
        v9 = 1;
        goto LABEL_10;
      }
    }
    __error();
    v9 = 0;
    if (v11)
      goto LABEL_14;
    return v9;
  }
LABEL_10:
  if (!v11)
    return v9;
LABEL_14:
  operator delete(v11);
  return v9;
}

void sub_20B4281D4(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B4281F0(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  std::unique_lock<std::mutex> *v4;
  std::unique_lock<std::mutex> *v5;
  std::unique_lock<std::mutex> *v6;
  std::unique_lock<std::mutex> *v7;
  uint64_t v8;
  std::unique_lock<std::mutex> *v9;
  std::__thread_struct *v10;
  _QWORD *v11;
  int v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  std::chrono::steady_clock::time_point v15;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v16;
  std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v17;
  unsigned __int8 v18;
  std::chrono::steady_clock::time_point v19;
  std::chrono::system_clock::time_point v20;
  unsigned __int8 v21;
  int v22;
  pthread_t v24;
  std::unique_lock<std::mutex> __lk;
  std::unique_lock<std::mutex> *p_lk;
  _QWORD v27[4];

  v27[3] = *MEMORY[0x24BDAC8D0];
  if ((*(_DWORD *)(a1 + 8) & 0x80000000) != 0)
    return 0;
  v3 = (_QWORD *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      p_lk = &__lk;
      (*(void (**)(_QWORD *, std::unique_lock<std::mutex> *))(*a2 + 24))(a2, &__lk);
    }
    else
    {
      p_lk = (std::unique_lock<std::mutex> *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
    }
  }
  else
  {
    p_lk = 0;
  }
  v4 = (std::unique_lock<std::mutex> *)(a1 + 328);
  if ((std::unique_lock<std::mutex> *)(a1 + 328) == &__lk)
  {
LABEL_16:
    v7 = p_lk;
    if (p_lk == &__lk)
      goto LABEL_11;
    goto LABEL_17;
  }
  v5 = p_lk;
  v6 = *(std::unique_lock<std::mutex> **)(a1 + 352);
  if (p_lk == &__lk)
  {
    if (v6 == v4)
    {
      (*(void (**)(std::unique_lock<std::mutex> *, _QWORD *))&__lk.__m_->__m_.__opaque[16])(&__lk, v27);
      (*(void (**)(std::unique_lock<std::mutex> *))&p_lk->__m_->__m_.__opaque[24])(p_lk);
      p_lk = 0;
      (*(void (**)(_QWORD, std::unique_lock<std::mutex> *))(**(_QWORD **)(a1 + 352) + 24))(*(_QWORD *)(a1 + 352), &__lk);
      (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 352) + 32))(*(_QWORD *)(a1 + 352));
      *(_QWORD *)(a1 + 352) = 0;
      p_lk = &__lk;
      (*(void (**)(_QWORD *, uint64_t))(v27[0] + 24))(v27, a1 + 328);
      (*(void (**)(_QWORD *))(v27[0] + 32))(v27);
      *(_QWORD *)(a1 + 352) = v4;
      v7 = p_lk;
      if (p_lk == &__lk)
        goto LABEL_11;
    }
    else
    {
      (*(void (**)(std::unique_lock<std::mutex> *, uint64_t))&__lk.__m_->__m_.__opaque[16])(&__lk, a1 + 328);
      (*(void (**)(std::unique_lock<std::mutex> *))&p_lk->__m_->__m_.__opaque[24])(p_lk);
      p_lk = *(std::unique_lock<std::mutex> **)(a1 + 352);
      v9 = p_lk;
      *(_QWORD *)(a1 + 352) = v4;
      v7 = v9;
      if (v9 == &__lk)
        goto LABEL_11;
    }
    goto LABEL_17;
  }
  if (v6 == v4)
  {
    (*(void (**)(uint64_t, std::unique_lock<std::mutex> *))&v4->__m_->__m_.__opaque[16])(a1 + 328, &__lk);
    (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 352) + 32))(*(_QWORD *)(a1 + 352));
    *(_QWORD *)(a1 + 352) = p_lk;
    p_lk = &__lk;
    goto LABEL_16;
  }
  p_lk = *(std::unique_lock<std::mutex> **)(a1 + 352);
  *(_QWORD *)(a1 + 352) = v5;
  v7 = v6;
  if (v6 == &__lk)
  {
LABEL_11:
    v8 = 4;
    v7 = &__lk;
    goto LABEL_19;
  }
LABEL_17:
  if (!v7)
    goto LABEL_20;
  v8 = 5;
LABEL_19:
  (*((void (**)(void))&v7->__m_->__m_.__sig + v8))();
LABEL_20:
  v10 = (std::__thread_struct *)operator new();
  std::__thread_struct::__thread_struct(v10);
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)v10;
  v11 = (_QWORD *)operator new();
  __lk.__m_ = 0;
  *v11 = v10;
  v11[1] = a1;
  v27[0] = v11;
  v12 = pthread_create(&v24, 0, (void *(__cdecl *)(void *))sub_20B42A288, v11);
  if (v12)
  {
    std::__throw_system_error(v12, "thread constructor failed");
    __break(1u);
LABEL_54:
    std::terminate();
  }
  if (*(_QWORD *)(a1 + 256))
    goto LABEL_54;
  *(_QWORD *)(a1 + 256) = v24;
  v24 = 0;
  std::thread::~thread((std::thread *)&v24);
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 264);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 264));
  v13 = atomic_load((unsigned __int8 *)(a1 + 81));
  if ((v13 & 1) == 0)
  {
    do
    {
      std::condition_variable::wait((std::condition_variable *)(a1 + 88), &__lk);
      v14 = atomic_load((unsigned __int8 *)(a1 + 81));
    }
    while ((v14 & 1) == 0);
  }
  if (__lk.__owns_)
    std::mutex::unlock(__lk.__m_);
  if (*(_BYTE *)(a1 + 80))
    return 1;
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 136);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 136));
  v15.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_ + 2000000000;
  while (1)
  {
    v18 = atomic_load((unsigned __int8 *)(a1 + 200));
    if ((v18 & 1) != 0)
      break;
    if (v15.__d_.__rep_ <= std::chrono::steady_clock::now().__d_.__rep_)
    {
LABEL_44:
      v21 = atomic_load((unsigned __int8 *)(a1 + 200));
      v22 = v21 & 1;
      if (!__lk.__owns_)
        return v22 != 0;
      goto LABEL_45;
    }
    v19.__d_.__rep_ = v15.__d_.__rep_ - std::chrono::steady_clock::now().__d_.__rep_;
    if (v19.__d_.__rep_ >= 1)
    {
      std::chrono::steady_clock::now();
      v20.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
      if (!v20.__d_.__rep_)
      {
        v16 = 0;
        goto LABEL_29;
      }
      if (v20.__d_.__rep_ < 1)
      {
        if ((unint64_t)v20.__d_.__rep_ < 0xFFDF3B645A1CAC09)
        {
          v16 = 0x8000000000000000;
          goto LABEL_29;
        }
      }
      else if ((unint64_t)v20.__d_.__rep_ > 0x20C49BA5E353F7)
      {
        v16 = 0x7FFFFFFFFFFFFFFFLL;
        if ((v19.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL) != 0x7FFFFFFFFFFFFFFFLL)
        {
LABEL_43:
          v17.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
          goto LABEL_30;
        }
LABEL_29:
        v17.__d_.__rep_ = v16 + v19.__d_.__rep_;
LABEL_30:
        std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 208), &__lk, v17);
        std::chrono::steady_clock::now();
        goto LABEL_31;
      }
      v16 = 1000 * v20.__d_.__rep_;
      if (1000 * v20.__d_.__rep_ > (v19.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
        goto LABEL_43;
      goto LABEL_29;
    }
LABEL_31:
    if (std::chrono::steady_clock::now().__d_.__rep_ >= v15.__d_.__rep_)
      goto LABEL_44;
  }
  v22 = 1;
  if (__lk.__owns_)
LABEL_45:
    std::mutex::unlock(__lk.__m_);
  return v22 != 0;
}

void sub_20B428658(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B4286C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  std::chrono::steady_clock::time_point v8;
  double v9;
  double v10;
  uint64_t v11;
  unsigned __int8 v12;
  std::chrono::steady_clock::time_point v13;
  int v14;
  std::chrono::steady_clock::time_point v16;
  std::chrono::system_clock::time_point v17;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v18;
  std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v19;
  std::chrono::steady_clock::time_point v20;
  int v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  void *v38;
  void *v39;
  int64x2_t *v40;
  void *v41;
  int64x2_t v42;
  std::unique_lock<std::mutex> v43;

  v43.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 376);
  v43.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 376));
  if (a4)
  {
    v8.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
    v9 = *(double *)&a3 * 1000000000.0 + (double)v8.__d_.__rep_;
    v10 = -9.22337204e18;
    if (v9 > -9.22337204e18)
      v10 = *(double *)&a3 * 1000000000.0 + (double)v8.__d_.__rep_;
    if (v9 < 9.22337204e18)
      v11 = (uint64_t)v10;
    else
      v11 = 0x7FFFFFFFFFFFFFFFLL;
    while (1)
    {
      if (*(_QWORD *)(a1 + 480))
        goto LABEL_47;
      v12 = atomic_load((unsigned __int8 *)(a1 + 81));
      if ((v12 & 1) == 0)
        goto LABEL_47;
      v13.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
      if (v9 == (double)v13.__d_.__rep_)
        v14 = 0;
      else
        v14 = -127;
      if (v9 > (double)v13.__d_.__rep_)
        v14 = 1;
      if (v9 < (double)v13.__d_.__rep_)
        v14 = -1;
      if (v14 != -127 && (char)v14 < 1)
      {
LABEL_42:
        if (!*(_QWORD *)(a1 + 480))
          atomic_load((unsigned __int8 *)(a1 + 81));
        goto LABEL_47;
      }
      v16.__d_.__rep_ = v11 - std::chrono::steady_clock::now().__d_.__rep_;
      if (v16.__d_.__rep_ >= 1)
        break;
LABEL_33:
      v20.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
      if (v9 == (double)v20.__d_.__rep_)
        v21 = 0;
      else
        v21 = -127;
      if (v9 < (double)v20.__d_.__rep_)
        v21 = 1;
      if (v9 > (double)v20.__d_.__rep_)
        v21 = -1;
      if (v21 == -127 || (v21 & 0x80) == 0)
        goto LABEL_42;
    }
    std::chrono::steady_clock::now();
    v17.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
    if (v17.__d_.__rep_)
    {
      if (v17.__d_.__rep_ < 1)
      {
        if ((unint64_t)v17.__d_.__rep_ < 0xFFDF3B645A1CAC09)
        {
          v18 = 0x8000000000000000;
          goto LABEL_31;
        }
      }
      else if ((unint64_t)v17.__d_.__rep_ > 0x20C49BA5E353F7)
      {
        v18 = 0x7FFFFFFFFFFFFFFFLL;
        if ((v16.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL) == 0x7FFFFFFFFFFFFFFFLL)
          goto LABEL_31;
LABEL_30:
        v19.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_32:
        std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 488), &v43, v19);
        std::chrono::steady_clock::now();
        goto LABEL_33;
      }
      v18 = 1000 * v17.__d_.__rep_;
      if (1000 * v17.__d_.__rep_ > (v16.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
        goto LABEL_30;
    }
    else
    {
      v18 = 0;
    }
LABEL_31:
    v19.__d_.__rep_ = v18 + v16.__d_.__rep_;
    goto LABEL_32;
  }
  while (!*(_QWORD *)(a1 + 480))
  {
    v22 = atomic_load((unsigned __int8 *)(a1 + 81));
    if ((v22 & 1) == 0)
      break;
    std::condition_variable::wait((std::condition_variable *)(a1 + 488), &v43);
  }
LABEL_47:
  if (*(_QWORD *)(a1 + 480) && (v23 = atomic_load((unsigned __int8 *)(a1 + 81)), (v23 & 1) != 0))
  {
    v26 = *(_QWORD *)(a1 + 472);
    v27 = *(_QWORD *)(*(_QWORD *)(a1 + 448) + 8 * (v26 / 0x24));
    v28 = v26 % 0x24;
    v29 = v27 + 112 * (v26 % 0x24);
    v30 = *(void **)(a2 + 24);
    *(_QWORD *)(a2 + 8) = *(_QWORD *)(v29 + 8);
    v31 = v29 + 24;
    if (v30)
    {
      *(_QWORD *)(a2 + 32) = v30;
      operator delete(v30);
      *(_QWORD *)(a2 + 24) = 0;
      *(_QWORD *)(a2 + 32) = 0;
      *(_QWORD *)(a2 + 40) = 0;
    }
    *(_OWORD *)(a2 + 24) = *(_OWORD *)v31;
    v32 = v27 + 112 * v28;
    *(_QWORD *)(a2 + 40) = *(_QWORD *)(v32 + 40);
    *(_QWORD *)v31 = 0;
    *(_QWORD *)(v31 + 8) = 0;
    *(_QWORD *)(v31 + 16) = 0;
    v33 = *(void **)(a2 + 64);
    *(_OWORD *)(a2 + 48) = *(_OWORD *)(v32 + 48);
    v34 = v32 + 64;
    if (v33)
    {
      *(_QWORD *)(a2 + 72) = v33;
      operator delete(v33);
      *(_QWORD *)(a2 + 64) = 0;
      *(_QWORD *)(a2 + 72) = 0;
      *(_QWORD *)(a2 + 80) = 0;
    }
    *(_OWORD *)(a2 + 64) = *(_OWORD *)v34;
    *(_QWORD *)(a2 + 80) = *(_QWORD *)(v27 + 112 * v28 + 80);
    *(_QWORD *)v34 = 0;
    *(_QWORD *)(v34 + 8) = 0;
    *(_QWORD *)(v34 + 16) = 0;
    v35 = *(void **)(a2 + 88);
    if (v35)
    {
      *(_QWORD *)(a2 + 96) = v35;
      operator delete(v35);
      *(_QWORD *)(a2 + 88) = 0;
      *(_QWORD *)(a2 + 96) = 0;
      *(_QWORD *)(a2 + 104) = 0;
    }
    v36 = v27 + 112 * v28;
    *(_OWORD *)(a2 + 88) = *(_OWORD *)(v36 + 88);
    *(_QWORD *)(a2 + 104) = *(_QWORD *)(v36 + 104);
    *(_QWORD *)(v36 + 88) = 0;
    *(_QWORD *)(v36 + 96) = 0;
    *(_QWORD *)(v36 + 104) = 0;
    v37 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 448) + 8 * (*(_QWORD *)(a1 + 472) / 0x24uLL))
                   + 112 * (*(_QWORD *)(a1 + 472) % 0x24uLL));
    v38 = (void *)v37[11];
    if (v38)
    {
      v37[12] = v38;
      operator delete(v38);
    }
    v39 = (void *)v37[8];
    if (v39)
    {
      v37[9] = v39;
      operator delete(v39);
    }
    v40 = (int64x2_t *)(a1 + 472);
    v41 = (void *)v37[3];
    if (v41)
    {
      v37[4] = v41;
      operator delete(v41);
    }
    v42 = vaddq_s64(*v40, (int64x2_t)xmmword_20B60C780);
    *v40 = v42;
    if (v42.i64[0] >= 0x48uLL)
    {
      operator delete(**(void ***)(a1 + 448));
      *(_QWORD *)(a1 + 448) += 8;
      *(_QWORD *)(a1 + 472) -= 36;
    }
    v24 = 1;
    if (v43.__owns_)
      goto LABEL_50;
  }
  else
  {
    v24 = 0;
    if (v43.__owns_)
LABEL_50:
      std::mutex::unlock(v43.__m_);
  }
  return v24;
}

_QWORD *sub_20B428AC4(_QWORD *a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = (_QWORD *)*a1;
  *a1 = 0;
  if (v2)
  {
    v3 = (void *)v2[13];
    if (v3)
    {
      v2[14] = v3;
      operator delete(v3);
    }
    v4 = (void *)v2[10];
    if (v4)
    {
      v2[11] = v4;
      operator delete(v4);
    }
    v5 = (void *)v2[5];
    if (v5)
    {
      v2[6] = v5;
      operator delete(v5);
    }
    MEMORY[0x20BD3583C](v2, 0x1090C401F76F622);
  }
  return a1;
}

_QWORD *sub_20B428B38(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = a1[3];
  if (!v2)
    sub_20AECABA4();
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 48))(v2);
  v3 = (_QWORD *)a1[3];
  if (v3 == a1)
  {
    v4 = 4;
    v3 = a1;
    goto LABEL_6;
  }
  if (v3)
  {
    v4 = 5;
LABEL_6:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_20B428BA8()
{
  JUMPOUT(0x20BD3583CLL);
}

__n128 sub_20B428BBC(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_24C41BFC8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_20B428BFC(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24C41BFC8;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_20B428C24(uint64_t result)
{
  if (**(_BYTE **)(result + 8))
    return close(**(_DWORD **)(result + 16));
  return result;
}

uint64_t sub_20B428C40(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_3kit3net15SocketInterface18CreateServerSocketEtEUlvE_JEEEEE")
    return a1 + 8;
  if (((v3 & (unint64_t)"N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_3kit3net15SocketInterface18CreateServe"
                                "rSocketEtEUlvE_JEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_3kit3net15SocketInterface18CreateServerSocketEtEUlvE_JEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_3kit3net15SocketInterface18CreateServerSocketEtEUlvE_JEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B428CAC()
{
  return &unk_24C41C028;
}

void sub_20B428CBC()
{
  JUMPOUT(0x20BD3583CLL);
}

__n128 sub_20B428CD0(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_24C41C048;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_20B428D10(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24C41C048;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_20B428D38(uint64_t result)
{
  if (**(_BYTE **)(result + 8))
    return close(**(_DWORD **)(result + 16));
  return result;
}

uint64_t sub_20B428D54(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_3kit3net15SocketInterface17StartClientSocketERKNS"
                     "3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtNS3_8optionalINS3_6chrono8durationIdNS3"
                     "_5ratioILl1ELl1EEEEEEEEUlvE_JEEEEE")
    return a1 + 8;
  if (((v3 & (unint64_t)"N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_3kit3net15SocketInterface17StartClient"
                                "SocketERKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtNS3_8optionalINS3"
                                "_6chrono8durationIdNS3_5ratioILl1ELl1EEEEEEEEUlvE_JEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_3kit3net15SocketInterface17StartClientSocketERKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtNS3_8optionalINS3_6chrono8durationIdNS3_5ratioILl1ELl1EEEEEEEEUlvE_JEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_3kit3net15SocketInterface17StartClientSocketERKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtNS3_8optionalINS3_6chrono8durationIdNS3_5ratioILl1ELl1EEEEEEEEUlvE_JEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B428DC0()
{
  return &unk_24C41C0A8;
}

void sub_20B428DD0()
{
  JUMPOUT(0x20BD3583CLL);
}

__n128 sub_20B428DE4(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_24C41C0C8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_20B428E1C(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24C41C0C8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_20B428E3C(uint64_t a1)
{
  freeaddrinfo(**(addrinfo ***)(a1 + 8));
}

uint64_t sub_20B428E48(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_3kit3net15SocketInterface17StartClientSocketERKNS"
                     "3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtNS3_8optionalINS3_6chrono8durationIdNS3"
                     "_5ratioILl1ELl1EEEEEEEEUlvE0_JEEEEE")
    return a1 + 8;
  if (((v3 & (unint64_t)"N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_3kit3net15SocketInterface17StartClient"
                                "SocketERKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtNS3_8optionalINS3"
                                "_6chrono8durationIdNS3_5ratioILl1ELl1EEEEEEEEUlvE0_JEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_3kit3net15SocketInterface17StartClientSocketERKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtNS3_8optionalINS3_6chrono8durationIdNS3_5ratioILl1ELl1EEEEEEEEUlvE0_JEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_3kit3net15SocketInterface17StartClientSocketERKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtNS3_8optionalINS3_6chrono8durationIdNS3_5ratioILl1ELl1EEEEEEEEUlvE0_JEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B428EB4()
{
  return &unk_24C41C128;
}

uint64_t sub_20B428EC0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 72);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = (_QWORD *)(a1 + 32);
      v6 = *(_QWORD **)(a1 + 56);
      if (v6 != (_QWORD *)(a1 + 32))
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = (_QWORD *)(a1 + 32);
  v6 = *(_QWORD **)(a1 + 56);
  if (v6 == (_QWORD *)(a1 + 32))
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_20B428F78(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  *(_QWORD *)a1 = off_24C41C148;
  v2 = *(std::__shared_weak_count **)(a1 + 80);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = (_QWORD *)(a1 + 40);
      v6 = *(_QWORD **)(a1 + 64);
      if (v6 != (_QWORD *)(a1 + 40))
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = (_QWORD *)(a1 + 40);
  v6 = *(_QWORD **)(a1 + 64);
  if (v6 == (_QWORD *)(a1 + 40))
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_20B42903C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  *(_QWORD *)a1 = off_24C41C148;
  v2 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (_QWORD *)(a1 + 40);
    v6 = *(_QWORD **)(a1 + 64);
    if (v6 != (_QWORD *)(a1 + 40))
      goto LABEL_6;
  }
  else
  {
LABEL_5:
    v5 = (_QWORD *)(a1 + 40);
    v6 = *(_QWORD **)(a1 + 64);
    if (v6 != (_QWORD *)(a1 + 40))
    {
LABEL_6:
      if (!v6)
        goto LABEL_11;
      v7 = 5;
LABEL_10:
      (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
      if (*(char *)(a1 + 31) < 0)
        operator delete(*(void **)(a1 + 8));
      JUMPOUT(0x20BD3583CLL);
    }
  }
  v7 = 4;
  v6 = v5;
  goto LABEL_10;
}

char *sub_20B429100(uint64_t a1)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = (char *)operator new(0x58uLL);
  v3 = v2;
  *(_QWORD *)v2 = off_24C41C148;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_20AEC60F4(v2 + 8, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  *((_WORD *)v3 + 16) = *(_WORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 64);
  if (!v4)
    goto LABEL_7;
  if (v4 != a1 + 40)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
LABEL_7:
    *((_QWORD *)v3 + 8) = v4;
    goto LABEL_9;
  }
  *((_QWORD *)v3 + 8) = v3 + 40;
  (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
LABEL_9:
  v5 = *(_QWORD *)(a1 + 80);
  *((_QWORD *)v3 + 9) = *(_QWORD *)(a1 + 72);
  *((_QWORD *)v3 + 10) = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  return v3;
}

void sub_20B4291D4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20B4291E8(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B42920C(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  __int128 v5;
  uint64_t result;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  *(_QWORD *)a2 = off_24C41C148;
  v4 = (_BYTE *)(a2 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    sub_20AEC60F4(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
    *(_WORD *)(a2 + 32) = *(_WORD *)(a1 + 32);
    result = *(_QWORD *)(a1 + 64);
    if (!result)
    {
LABEL_7:
      *(_QWORD *)(a2 + 64) = result;
      goto LABEL_9;
    }
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
    *(_OWORD *)v4 = v5;
    *(_WORD *)(a2 + 32) = *(_WORD *)(a1 + 32);
    result = *(_QWORD *)(a1 + 64);
    if (!result)
      goto LABEL_7;
  }
  if (result != a1 + 40)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
    goto LABEL_7;
  }
  *(_QWORD *)(a2 + 64) = a2 + 40;
  result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 64) + 24))(*(_QWORD *)(a1 + 64));
LABEL_9:
  v7 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a2 + 80) = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

void sub_20B4292E8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_20B429304(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 80);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = (_QWORD *)(a1 + 40);
      v6 = *(_QWORD **)(a1 + 64);
      if (v6 != (_QWORD *)(a1 + 40))
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = (_QWORD *)(a1 + 40);
  v6 = *(_QWORD **)(a1 + 64);
  if (v6 == (_QWORD *)(a1 + 40))
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_20B4293B0(char *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  v2 = (std::__shared_weak_count *)*((_QWORD *)__p + 10);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = __p + 40;
      v6 = (char *)*((_QWORD *)__p + 8);
      if (v6 != __p + 40)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = __p + 40;
  v6 = (char *)*((_QWORD *)__p + 8);
  if (v6 == __p + 40)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
LABEL_11:
  if (__p[31] < 0)
    operator delete(*((void **)__p + 1));
  operator delete(__p);
}

uint64_t sub_20B429468(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 64);
  if (!v2)
    sub_20AECABA4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2 + 48))(v2, a1 + 8, *(_QWORD *)(a1 + 72) + 16);
}

uint64_t sub_20B4294A8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d3kit3net24SocketNetworkConnectionTINS1_15SocketInterfaceEE18ReceivePacketsLoopEvENKUlNSt3__"
                     "110shared_ptrINS1_13LoadedPayloadEEEE_clES8_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d3kit3net24SocketNetworkConnectionTINS1_15SocketInterfaceEE18ReceivePacketsLoopEv"
                                "ENKUlNSt3__110shared_ptrINS1_13LoadedPayloadEEEE_clES8_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d3kit3net24SocketNetworkConnectionTINS1_15SocketInterfaceEE18ReceivePacketsLoopEvENKUlNSt3__110shared_ptrINS1_13LoadedPayloadEEEE_clES8_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d3kit3net24SocketNetworkConnectionTINS1_15SocketInterfaceEE18ReceivePacketsLoopEvENKUlNSt3__110shared_ptrINS1_13LoadedPayloadEEEE_clES8_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B429514()
{
  return &unk_24C41C1A8;
}

__n128 sub_20B429520(uint64_t a1, uint64_t a2)
{
  char *v4;
  char *v5;
  uint64_t v6;
  int64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  void *v30;
  char *v31;
  char *v32;
  void *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  BOOL v40;
  int64_t v41;
  unint64_t v42;
  char *v43;
  char *v44;
  unint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char *v55;
  unint64_t v56;
  int64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 *v64;
  char *v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  __int128 *v79;
  _OWORD *v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  int64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  __int128 *v97;
  _OWORD *v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  __n128 result;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  int64_t v110;
  unint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  __int128 *v117;
  _OWORD *v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;

  v5 = *(char **)(a1 + 8);
  v4 = *(char **)(a1 + 16);
  v6 = (v4 - v5) >> 3;
  v7 = v4 - v5;
  v8 = v5;
  if (v4 == v5)
    v9 = 0;
  else
    v9 = 36 * v6 - 1;
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40) + v10;
  if (v9 == v11)
  {
    if (v10 >= 0x24)
    {
      *(_QWORD *)(a1 + 32) = v10 - 36;
      v12 = v5 + 8;
      v13 = *(_QWORD *)v5;
      *(_QWORD *)(a1 + 8) = v5 + 8;
      if (v4 != *(char **)(a1 + 24))
      {
LABEL_94:
        *(_QWORD *)v4 = v13;
        goto LABEL_95;
      }
      v14 = *(char **)a1;
      if ((unint64_t)v12 > *(_QWORD *)a1)
      {
        v15 = (uint64_t)&v12[-*(_QWORD *)a1] >> 3;
        if (v15 >= -1)
          v16 = v15 + 1;
        else
          v16 = v15 + 2;
        v17 = v16 >> 1;
        v18 = -v17;
        v19 = &v12[-8 * v17];
        v20 = v4 - v12;
        if (v4 != v12)
        {
          memmove(&v12[-8 * v17], v12, v4 - v12);
          v4 = *(char **)(a1 + 8);
        }
        v21 = &v4[8 * v18];
        v4 = &v19[v20];
        *(_QWORD *)(a1 + 8) = v21;
        *(_QWORD *)(a1 + 16) = &v19[v20];
        goto LABEL_94;
      }
      v35 = (v4 - v14) >> 2;
      if (v4 == v14)
        v35 = 1;
      if (!(v35 >> 61))
      {
        v36 = v35 >> 2;
        v37 = 8 * v35;
        v38 = (char *)operator new(8 * v35);
        v39 = &v38[8 * v36];
        v41 = v4 - v12;
        v40 = v4 == v12;
        v4 = v39;
        if (v40)
          goto LABEL_92;
        v4 = &v39[v41 & 0xFFFFFFFFFFFFFFF8];
        v42 = v41 - 8;
        if ((unint64_t)(v41 - 8) >= 0x38)
        {
          v94 = &v38[8 * v36];
          v43 = v94;
          if ((unint64_t)(v94 - v12) >= 0x20)
          {
            v95 = (v42 >> 3) + 1;
            v96 = 8 * (v95 & 0x3FFFFFFFFFFFFFFCLL);
            v43 = &v39[v96];
            v12 += v96;
            v97 = (__int128 *)(v5 + 24);
            v98 = v94 + 16;
            v99 = v95 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v100 = *v97;
              *(v98 - 1) = *(v97 - 1);
              *v98 = v100;
              v97 += 2;
              v98 += 2;
              v99 -= 4;
            }
            while (v99);
            if (v95 == (v95 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_92:
              *(_QWORD *)a1 = v38;
              *(_QWORD *)(a1 + 8) = v39;
              *(_QWORD *)(a1 + 16) = v4;
              *(_QWORD *)(a1 + 24) = &v38[v37];
              if (v14)
              {
                operator delete(v14);
                v4 = *(char **)(a1 + 16);
              }
              goto LABEL_94;
            }
          }
        }
        else
        {
          v43 = &v38[8 * v36];
        }
        do
        {
          v101 = *(_QWORD *)v12;
          v12 += 8;
          *(_QWORD *)v43 = v101;
          v43 += 8;
        }
        while (v43 != v4);
        goto LABEL_92;
      }
LABEL_112:
      sub_20AEC60CC();
    }
    v22 = *(char **)(a1 + 24);
    v23 = *(char **)a1;
    v24 = (uint64_t)&v22[-*(_QWORD *)a1];
    if (v6 >= (unint64_t)(v24 >> 3))
    {
      v122 = v4 - v5;
      v27 = v24 >> 2;
      if (v22 == v23)
        v28 = 1;
      else
        v28 = v27;
      if (!(v28 >> 61))
      {
        v29 = (char *)operator new(8 * v28);
        v30 = operator new(0xFC0uLL);
        v31 = &v29[8 * v6];
        v32 = &v29[8 * v28];
        if (v6 == v28)
        {
          v33 = v30;
          if (v122 < 1)
          {
            if (v4 == v5)
              v45 = 1;
            else
              v45 = v122 >> 2;
            if (v45 >> 61)
              sub_20AEC60CC();
            v31 = (char *)operator new(8 * v45);
            v32 = &v31[8 * v45];
            operator delete(v29);
            v8 = *(char **)(a1 + 8);
            v4 = *(char **)(a1 + 16);
            v29 = v31;
          }
          else
          {
            v34 = v6 + 2;
            if (v6 >= -1)
              v34 = v6 + 1;
            v31 -= 8 * (v34 >> 1);
          }
          v30 = v33;
        }
        *(_QWORD *)v31 = v30;
        v46 = v31 + 8;
        if (v4 == v8)
        {
          v47 = v31;
          v48 = v31 + 8;
        }
        else
        {
          do
          {
            if (v31 == v29)
            {
              if (v46 >= v32)
              {
                if (v32 == v31)
                  v54 = 1;
                else
                  v54 = (v32 - v31) >> 2;
                if (v54 >> 61)
                  sub_20AEC60CC();
                v55 = (char *)operator new(8 * v54);
                v29 = v55;
                v56 = (v54 + 3) >> 2;
                v50 = &v55[8 * v56];
                v48 = v50;
                v57 = v46 - v31;
                if (v46 != v31)
                {
                  v48 = &v50[v57 & 0xFFFFFFFFFFFFFFF8];
                  v58 = v57 - 8;
                  v59 = &v55[8 * v56];
                  v60 = v31;
                  if (v58 < 0x38)
                    goto LABEL_116;
                  v61 = 8 * v56;
                  v59 = &v55[8 * v56];
                  v60 = v31;
                  if ((unint64_t)(v59 - v31) < 0x20)
                    goto LABEL_116;
                  v62 = (v58 >> 3) + 1;
                  v63 = 8 * (v62 & 0x3FFFFFFFFFFFFFFCLL);
                  v59 = &v50[v63];
                  v60 = &v31[v63];
                  v64 = (__int128 *)(v31 + 16);
                  v65 = &v55[v61 + 16];
                  v66 = v62 & 0x3FFFFFFFFFFFFFFCLL;
                  do
                  {
                    v67 = *v64;
                    *((_OWORD *)v65 - 1) = *(v64 - 1);
                    *(_OWORD *)v65 = v67;
                    v64 += 2;
                    v65 += 32;
                    v66 -= 4;
                  }
                  while (v66);
                  if (v62 != (v62 & 0x3FFFFFFFFFFFFFFCLL))
                  {
LABEL_116:
                    do
                    {
                      v68 = *(_QWORD *)v60;
                      v60 += 8;
                      *(_QWORD *)v59 = v68;
                      v59 += 8;
                    }
                    while (v59 != v48);
                  }
                }
                v32 = &v55[8 * v54];
                operator delete(v31);
              }
              else
              {
                v52 = (v32 - v46) >> 3;
                if (v52 >= -1)
                  v53 = v52 + 1;
                else
                  v53 = v52 + 2;
                v48 = &v46[8 * (v53 >> 1)];
                v50 = &v31[8 * (v53 >> 1)];
                if (v46 == v31)
                {
                  v29 = v46;
                }
                else
                {
                  memmove(&v31[8 * (v53 >> 1)], v31, v46 - v31);
                  v29 = v31;
                }
              }
            }
            else
            {
              v50 = v31;
              v48 = v46;
            }
            v51 = *((_QWORD *)v4 - 1);
            v4 -= 8;
            *((_QWORD *)v50 - 1) = v51;
            v47 = v50 - 8;
            v46 = v48;
            v31 = v47;
          }
          while (v4 != *(char **)(a1 + 8));
        }
        v49 = *(char **)a1;
        *(_QWORD *)a1 = v29;
        *(_QWORD *)(a1 + 8) = v47;
        *(_QWORD *)(a1 + 16) = v48;
        *(_QWORD *)(a1 + 24) = v32;
        if (v49)
          operator delete(v49);
        goto LABEL_96;
      }
      goto LABEL_112;
    }
    v25 = operator new(0xFC0uLL);
    v26 = v25;
    if (v22 != v4)
    {
      *(_QWORD *)v4 = v25;
LABEL_95:
      *(_QWORD *)(a1 + 16) += 8;
LABEL_96:
      v8 = *(char **)(a1 + 8);
      v11 = *(_QWORD *)(a1 + 40) + *(_QWORD *)(a1 + 32);
      goto LABEL_97;
    }
    if (v5 == v23)
    {
      v69 = (v22 - v5) >> 2;
      if (v4 == v5)
        v69 = 1;
      if (v69 >> 61)
        goto LABEL_112;
      v70 = (v69 + 3) >> 2;
      v71 = 8 * v69;
      v72 = (char *)operator new(8 * v69);
      v44 = &v72[8 * v70];
      v73 = v44;
      if (v4 != v5)
      {
        v73 = &v44[8 * v6];
        v74 = &v72[8 * v70];
        v75 = v5;
        if ((unint64_t)(v7 - 8) < 0x38)
          goto LABEL_117;
        v76 = &v72[8 * v70];
        v74 = v76;
        v75 = v5;
        if ((unint64_t)(v76 - v5) < 0x20)
          goto LABEL_117;
        v77 = ((unint64_t)(v7 - 8) >> 3) + 1;
        v78 = 8 * (v77 & 0x3FFFFFFFFFFFFFFCLL);
        v74 = &v44[v78];
        v75 = &v5[v78];
        v79 = (__int128 *)(v5 + 16);
        v80 = v76 + 16;
        v81 = v77 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v82 = *v79;
          *(v80 - 1) = *(v79 - 1);
          *v80 = v82;
          v79 += 2;
          v80 += 2;
          v81 -= 4;
        }
        while (v81);
        if (v77 != (v77 & 0x3FFFFFFFFFFFFFFCLL))
        {
LABEL_117:
          do
          {
            v83 = *(_QWORD *)v75;
            v75 += 8;
            *(_QWORD *)v74 = v83;
            v74 += 8;
          }
          while (v74 != v73);
        }
      }
      *(_QWORD *)a1 = v72;
      *(_QWORD *)(a1 + 8) = v44;
      *(_QWORD *)(a1 + 16) = v73;
      *(_QWORD *)(a1 + 24) = &v72[v71];
      if (v5)
      {
        operator delete(v5);
        v44 = *(char **)(a1 + 8);
      }
    }
    else
    {
      v44 = v5;
    }
    *((_QWORD *)v44 - 1) = v26;
    v84 = *(char **)(a1 + 8);
    v85 = *(char **)(a1 + 16);
    *(_QWORD *)(a1 + 8) = v84 - 8;
    v86 = *((_QWORD *)v84 - 1);
    *(_QWORD *)(a1 + 8) = v84;
    if (v85 != *(char **)(a1 + 24))
    {
LABEL_79:
      *(_QWORD *)v85 = v86;
      goto LABEL_95;
    }
    v87 = *(char **)a1;
    if ((unint64_t)v84 > *(_QWORD *)a1)
    {
      v88 = (uint64_t)&v84[-*(_QWORD *)a1] >> 3;
      if (v88 >= -1)
        v89 = v88 + 1;
      else
        v89 = v88 + 2;
      v90 = v89 >> 1;
      v91 = -v90;
      v92 = &v84[-8 * v90];
      v93 = v85 - v84;
      if (v85 != v84)
      {
        memmove(&v84[-8 * v90], v84, v85 - v84);
        v84 = *(char **)(a1 + 8);
      }
      *(_QWORD *)(a1 + 8) = &v84[8 * v91];
      *(_QWORD *)(a1 + 16) = &v92[v93];
      *(_QWORD *)&v92[v93] = v86;
      goto LABEL_95;
    }
    v105 = (v85 - v87) >> 2;
    if (v85 == v87)
      v105 = 1;
    if (v105 >> 61)
      goto LABEL_112;
    v106 = v105 >> 2;
    v107 = 8 * v105;
    v108 = (char *)operator new(8 * v105);
    v109 = &v108[8 * v106];
    v110 = v85 - v84;
    v40 = v85 == v84;
    v85 = v109;
    if (!v40)
    {
      v85 = &v109[v110 & 0xFFFFFFFFFFFFFFF8];
      v111 = v110 - 8;
      if ((unint64_t)(v110 - 8) < 0x38)
      {
        v112 = &v108[8 * v106];
        do
        {
LABEL_108:
          v121 = *(_QWORD *)v84;
          v84 += 8;
          *(_QWORD *)v112 = v121;
          v112 += 8;
        }
        while (v112 != v85);
        goto LABEL_109;
      }
      v113 = &v108[8 * v106];
      v112 = v113;
      if ((unint64_t)(v113 - v84) < 0x20)
        goto LABEL_108;
      v114 = (v111 >> 3) + 1;
      v115 = 8 * (v114 & 0x3FFFFFFFFFFFFFFCLL);
      v112 = &v109[v115];
      v116 = &v84[v115];
      v117 = (__int128 *)(v84 + 16);
      v118 = v113 + 16;
      v119 = v114 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v120 = *v117;
        *(v118 - 1) = *(v117 - 1);
        *v118 = v120;
        v117 += 2;
        v118 += 2;
        v119 -= 4;
      }
      while (v119);
      v84 = v116;
      if (v114 != (v114 & 0x3FFFFFFFFFFFFFFCLL))
        goto LABEL_108;
    }
LABEL_109:
    *(_QWORD *)a1 = v108;
    *(_QWORD *)(a1 + 8) = v109;
    *(_QWORD *)(a1 + 16) = v85;
    *(_QWORD *)(a1 + 24) = &v108[v107];
    if (v87)
    {
      operator delete(v87);
      v85 = *(char **)(a1 + 16);
    }
    goto LABEL_79;
  }
LABEL_97:
  v102 = *(_QWORD *)&v8[8 * (v11 / 0x24)] + 112 * (v11 % 0x24);
  *(_QWORD *)v102 = off_24C41E9F8;
  v103 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)v102 = &off_24C41C508;
  *(_QWORD *)(v102 + 8) = v103;
  *(_QWORD *)(v102 + 32) = 0;
  *(_QWORD *)(v102 + 40) = 0;
  *(_QWORD *)(v102 + 16) = &unk_24C41C650;
  *(_QWORD *)(v102 + 24) = 0;
  *(_OWORD *)(v102 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(v102 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_OWORD *)(v102 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(v102 + 72) = 0;
  *(_QWORD *)(v102 + 80) = 0;
  *(_QWORD *)(v102 + 64) = 0;
  *(_OWORD *)(v102 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(v102 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(v102 + 88) = 0;
  *(_QWORD *)(v102 + 96) = 0;
  *(_QWORD *)(v102 + 104) = 0;
  result = *(__n128 *)(a2 + 88);
  *(__n128 *)(v102 + 88) = result;
  *(_QWORD *)(v102 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = 0;
  *(_QWORD *)(a2 + 104) = 0;
  ++*(_QWORD *)(a1 + 40);
  return result;
}

void sub_20B429C80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  operator delete(v2);
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20B429C9C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20B429CB0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20B429CC8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B429CE0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  *(_QWORD *)a1 = off_24C41C1C8;
  v2 = *(std::__shared_weak_count **)(a1 + 80);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = (_QWORD *)(a1 + 40);
      v6 = *(_QWORD **)(a1 + 64);
      if (v6 != (_QWORD *)(a1 + 40))
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = (_QWORD *)(a1 + 40);
  v6 = *(_QWORD **)(a1 + 64);
  if (v6 == (_QWORD *)(a1 + 40))
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_20B429DA4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  *(_QWORD *)a1 = off_24C41C1C8;
  v2 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (_QWORD *)(a1 + 40);
    v6 = *(_QWORD **)(a1 + 64);
    if (v6 != (_QWORD *)(a1 + 40))
      goto LABEL_6;
  }
  else
  {
LABEL_5:
    v5 = (_QWORD *)(a1 + 40);
    v6 = *(_QWORD **)(a1 + 64);
    if (v6 != (_QWORD *)(a1 + 40))
    {
LABEL_6:
      if (!v6)
        goto LABEL_11;
      v7 = 5;
LABEL_10:
      (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
      if (*(char *)(a1 + 31) < 0)
        operator delete(*(void **)(a1 + 8));
      JUMPOUT(0x20BD3583CLL);
    }
  }
  v7 = 4;
  v6 = v5;
  goto LABEL_10;
}

char *sub_20B429E68(uint64_t a1)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = (char *)operator new(0x58uLL);
  v3 = v2;
  *(_QWORD *)v2 = off_24C41C1C8;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_20AEC60F4(v2 + 8, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  *((_WORD *)v3 + 16) = *(_WORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 64);
  if (!v4)
    goto LABEL_7;
  if (v4 != a1 + 40)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
LABEL_7:
    *((_QWORD *)v3 + 8) = v4;
    goto LABEL_9;
  }
  *((_QWORD *)v3 + 8) = v3 + 40;
  (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
LABEL_9:
  v5 = *(_QWORD *)(a1 + 80);
  *((_QWORD *)v3 + 9) = *(_QWORD *)(a1 + 72);
  *((_QWORD *)v3 + 10) = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  return v3;
}

void sub_20B429F3C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20B429F50(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B429F74(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  __int128 v5;
  uint64_t result;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  *(_QWORD *)a2 = off_24C41C1C8;
  v4 = (_BYTE *)(a2 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    sub_20AEC60F4(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
    *(_WORD *)(a2 + 32) = *(_WORD *)(a1 + 32);
    result = *(_QWORD *)(a1 + 64);
    if (!result)
    {
LABEL_7:
      *(_QWORD *)(a2 + 64) = result;
      goto LABEL_9;
    }
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
    *(_OWORD *)v4 = v5;
    *(_WORD *)(a2 + 32) = *(_WORD *)(a1 + 32);
    result = *(_QWORD *)(a1 + 64);
    if (!result)
      goto LABEL_7;
  }
  if (result != a1 + 40)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
    goto LABEL_7;
  }
  *(_QWORD *)(a2 + 64) = a2 + 40;
  result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 64) + 24))(*(_QWORD *)(a1 + 64));
LABEL_9:
  v7 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a2 + 80) = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

void sub_20B42A050(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_20B42A06C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 80);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = (_QWORD *)(a1 + 40);
      v6 = *(_QWORD **)(a1 + 64);
      if (v6 != (_QWORD *)(a1 + 40))
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = (_QWORD *)(a1 + 40);
  v6 = *(_QWORD **)(a1 + 64);
  if (v6 == (_QWORD *)(a1 + 40))
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_20B42A118(char *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  v2 = (std::__shared_weak_count *)*((_QWORD *)__p + 10);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = __p + 40;
      v6 = (char *)*((_QWORD *)__p + 8);
      if (v6 != __p + 40)
        goto LABEL_6;
LABEL_9:
      v7 = 4;
      v6 = v5;
      goto LABEL_10;
    }
  }
  v5 = __p + 40;
  v6 = (char *)*((_QWORD *)__p + 8);
  if (v6 == __p + 40)
    goto LABEL_9;
LABEL_6:
  if (!v6)
    goto LABEL_11;
  v7 = 5;
LABEL_10:
  (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
LABEL_11:
  if (__p[31] < 0)
    operator delete(*((void **)__p + 1));
  operator delete(__p);
}

uint64_t sub_20B42A1D0(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 64);
  if (!v2)
    sub_20AECABA4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2 + 48))(v2, a1 + 8, *(_QWORD *)(a1 + 72) + 16);
}

uint64_t sub_20B42A210(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d3kit3net24SocketNetworkConnectionTINS1_15SocketInterfaceEE18ReceivePacketsLoopEvENKUlNSt3__"
                     "110shared_ptrINS1_13LoadedPayloadEEEE_clES8_EUlvE0_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d3kit3net24SocketNetworkConnectionTINS1_15SocketInterfaceEE18ReceivePacketsLoopEv"
                                "ENKUlNSt3__110shared_ptrINS1_13LoadedPayloadEEEE_clES8_EUlvE0_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d3kit3net24SocketNetworkConnectionTINS1_15SocketInterfaceEE18ReceivePacketsLoopEvENKUlNSt3__110shared_ptrINS1_13LoadedPayloadEEEE_clES8_EUlvE0_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d3kit3net24SocketNetworkConnectionTINS1_15SocketInterfaceEE18ReceivePacketsLoopEvENKUlNSt3__110shared_ptrINS1_13LoadedPayloadEEEE_clES8_EUlvE0_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B42A27C()
{
  return &unk_24C41C228;
}

uint64_t sub_20B42A288(uint64_t *a1)
{
  std::__thread_specific_ptr<std::__thread_struct> *v2;
  const void *v3;
  uint64_t v4;
  const char *v5;
  std::mutex *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  unint64_t v11;
  unsigned __int8 v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  size_t v17;
  char *v18;
  char *v19;
  unint64_t v20;
  char *v21;
  char *v22;
  unint64_t v23;
  __int128 v24;
  char *v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  char v30;
  ssize_t v31;
  BOOL v32;
  unint64_t v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  size_t v37;
  unint64_t v38;
  uint64_t v39;
  size_t v40;
  uint64_t v41;
  size_t v42;
  uint64_t v43;
  size_t v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  char *v48;
  char *v49;
  char *v50;
  size_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  std::__shared_weak_count *v56;
  std::mutex *v57;
  uint64_t v58;
  unint64_t *v59;
  unint64_t v60;
  _QWORD *v61;
  unint64_t *v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  _QWORD *v73;
  uint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  std::__shared_weak_count *v82;
  unint64_t *v83;
  unint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *p_shared_owners;
  unint64_t v89;
  uint64_t v90;
  std::__shared_weak_count *v91;
  unint64_t *v92;
  unint64_t v93;
  unint64_t *v94;
  unint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  _QWORD v109[3];
  _QWORD *v110;
  void *v111[2];
  void *v112;
  char *v113;
  _QWORD v114[2];
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  void *__p[2];
  void *v120;
  __int16 v121;
  _QWORD v122[3];
  _QWORD *v123;
  __int128 v124;
  __int128 v125;
  void *v126;
  __int16 v127;
  _QWORD v128[3];
  _QWORD *v129;
  __int128 v130;
  _BYTE __dst[4];
  unsigned int v132;
  char v133[16];
  _BYTE *v134;
  uint64_t v135;

  v135 = *MEMORY[0x24BDAC8D0];
  v2 = std::__thread_local_data();
  v3 = (const void *)*a1;
  *a1 = 0;
  pthread_setspecific(v2->__key_, v3);
  v4 = a1[1];
  LODWORD(v113) = 0;
  sub_20AFF4744(v111, "Receive packets from ");
  sub_20B4234B0((uint64_t)__p, (uint64_t)v111, v4 + 16);
  if ((_DWORD)v113 == -1)
    sub_20AECFAB8();
  __p[0] = &v108;
  ((void (*)(__int128 *__return_ptr, void **, void **))off_24C41C250[v113])(&v125, __p, v111);
  if ((_DWORD)v113 != -1)
    ((void (*)(void **, void **))off_24C41C238[v113])(__p, v111);
  if (SHIBYTE(v126) >= 0)
    v5 = (const char *)&v125;
  else
    v5 = (const char *)v125;
  pthread_setname_np(v5);
  if (SHIBYTE(v126) < 0)
    operator delete((void *)v125);
  v102 = v4;
  v6 = (std::mutex *)(v4 + 264);
  std::mutex::lock(v6);
  v7 = v102;
  atomic_store(1u, (unsigned __int8 *)(v102 + 81));
  std::condition_variable::notify_one((std::condition_variable *)(v7 + 88));
  std::mutex::unlock(v6);
  v108 = v7;
  v8 = *(_QWORD *)(v7 + 352);
  if (v8)
  {
    if (v8 == v102 + 328)
    {
      v110 = v109;
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 24))(v8);
      goto LABEL_14;
    }
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 16))(v8);
  }
  v110 = (_QWORD *)v8;
LABEL_14:
  v101 = a1;
  v105 = 0;
  v106 = 0;
  v107 = 0;
  v9 = v102;
  v10 = atomic_load((unsigned __int8 *)(v102 + 81));
  if ((v10 & 1) == 0)
    goto LABEL_210;
  v11 = 0;
  while (1)
  {
    v13 = v106;
    v14 = v106 - v105;
    if (v11 + 1000000 <= v106 - v105)
      v15 = v106 - v105;
    else
      v15 = v11 + 1000000;
    if (v14 >= v11 + 1000000)
      goto LABEL_49;
    if (v107 - v106 >= v15 - v14)
    {
      bzero(v106, v15 - v14);
      v106 = &v105[v15];
      v9 = v102;
      goto LABEL_49;
    }
    if ((v15 & 0x8000000000000000) != 0)
      sub_20AF4BAC0();
    v16 = 2 * (v107 - v105);
    if (v16 <= v15)
      v16 = v15;
    if ((unint64_t)(v107 - v105) >= 0x3FFFFFFFFFFFFFFFLL)
      v17 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v17 = v16;
    v18 = (char *)operator new(v17);
    v19 = &v18[v14];
    bzero(&v18[v14], v15 - v14);
    if (v106 != v105)
    {
      if (v14 >= 8 && (unint64_t)(v105 - v18) >= 0x20)
      {
        if (v14 < 0x20)
        {
          v20 = 0;
          goto LABEL_39;
        }
        v20 = v14 & 0xFFFFFFFFFFFFFFE0;
        v21 = &v18[v14 - 16];
        v22 = v106 - 16;
        v23 = v14 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v24 = *(_OWORD *)v22;
          *((_OWORD *)v21 - 1) = *((_OWORD *)v22 - 1);
          *(_OWORD *)v21 = v24;
          v21 -= 32;
          v22 -= 32;
          v23 -= 32;
        }
        while (v23);
        if (v14 == v20)
          goto LABEL_46;
        if ((v14 & 0x18) != 0)
        {
LABEL_39:
          v19 -= v14 & 0xFFFFFFFFFFFFFFF8;
          v25 = &v18[&v106[-v20] - v105 - 8];
          v26 = &v106[-v20 - 8];
          v27 = v20 - (v14 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            v28 = *(_QWORD *)v26;
            v26 -= 8;
            *(_QWORD *)v25 = v28;
            v25 -= 8;
            v27 += 8;
          }
          while (v27);
          v13 = &v106[-(v14 & 0xFFFFFFFFFFFFFFF8)];
          if (v14 == (v14 & 0xFFFFFFFFFFFFFFF8))
            goto LABEL_46;
          goto LABEL_44;
        }
        v19 -= v20;
        v13 = &v106[-v20];
      }
LABEL_44:
      v29 = v19 - 1;
      do
      {
        v30 = *--v13;
        *v29-- = v30;
      }
      while (v13 != v105);
LABEL_46:
      v13 = v105;
      v19 = v18;
    }
    v105 = v19;
    v106 = &v18[v15];
    v107 = &v18[v17];
    v9 = v102;
    if (v13)
      operator delete(v13);
LABEL_49:
    v31 = recv(*(_DWORD *)(v9 + 8), &v105[v11], 0xF4240uLL, 0);
    if (v31 <= 0)
      break;
    v11 += v31;
    if (!v11)
      goto LABEL_17;
    while (2)
    {
      if (v106 - v105 < v11
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 379, (uint64_t)"count <= size()", 15, (uint64_t)&unk_20B5ACD5F, 0, (void (*)(void **))sub_20B532360))
      {
        abort();
      }
      __dst[0] = 0;
      v132 = 0;
      v133[0] = 0;
      v32 = v11 < 4;
      v33 = 4 * (v11 > 3);
      v34 = v33 | 1;
      if ((v33 | 1) <= v11)
      {
        v35 = v11 >= v33;
        v36 = v11 - v33;
        if (!v35)
          v36 = 0;
        if ((uint64_t)v11 < v36)
          v36 = v11;
        if (v36 >= 1)
          v37 = 1;
        else
          v37 = v36;
        if (v37)
          memcpy(__dst, &v105[v11 - v36], v37);
      }
      else
      {
        v32 = 1;
        v34 = 4 * (v11 > 3);
      }
      v38 = v34 + 4;
      if (v34 + 4 > v11)
      {
        v32 = 1;
        if (v34 >= v11)
          goto LABEL_16;
LABEL_79:
        v41 = v11 - v34;
        if (v11 < v34)
          v41 = 0;
        if ((uint64_t)v11 < v41)
          v41 = v11;
        if (v41 >= 1)
          v42 = 1;
        else
          v42 = v41;
        if (v42)
          memcpy(v133, &v105[v11 - v41], v42);
        if (!v32)
        {
          v43 = __dst[0];
          v44 = v132;
          v45 = v132 + __dst[0];
          if (v132 + __dst[0])
          {
            v46 = v11 - v45;
            if (v11 >= v45)
            {
              v47 = v133[0];
              if (v132)
              {
                v48 = (char *)operator new(v132);
                v49 = &v48[v44];
                memcpy(v48, &v105[v43], v44);
                v50 = &v105[v45];
                v51 = v106 - &v105[v45];
                if (v51)
                  goto LABEL_93;
              }
              else
              {
                v48 = 0;
                v49 = 0;
                v50 = &v105[v45];
                v51 = v106 - &v105[v45];
                if (v51)
LABEL_93:
                  memmove(v105, v50, v51);
              }
              v106 = &v105[v51];
              v111[0] = &off_24C41C508;
              v111[1] = (void *)1;
              v112 = &unk_24C41C650;
              v113 = v48;
              v114[0] = v49;
              v114[1] = v49;
              *(_QWORD *)&v115 = 0;
              *((_QWORD *)&v115 + 1) = v49 - v48;
              v116 = 0u;
              v117 = 0u;
              v118 = 0u;
              v52 = operator new();
              *(_QWORD *)v52 = (v44 << 32) | v43;
              *(_DWORD *)(v52 + 8) = v47;
              *(_QWORD *)(v52 + 16) = &off_24C41C508;
              *(_QWORD *)(v52 + 24) = 1;
              *(_QWORD *)(v52 + 32) = &unk_24C41C650;
              *(_QWORD *)(v52 + 40) = v48;
              *(_QWORD *)(v52 + 48) = v49;
              *(_QWORD *)(v52 + 56) = v49;
              *(_OWORD *)(v52 + 64) = v115;
              *(_OWORD *)(v52 + 80) = 0u;
              *(_OWORD *)(v52 + 96) = 0u;
              *(_OWORD *)(v52 + 112) = 0u;
              v104 = v52;
              *(_QWORD *)&v103 = v52;
              v53 = (_QWORD *)operator new();
              *v53 = &off_24C41C278;
              v53[1] = 0;
              v53[2] = 0;
              v53[3] = v104;
              *((_QWORD *)&v103 + 1) = v53;
              v54 = v108;
              switch(*(_BYTE *)(v103 + 8))
              {
                case 0:
                  if (!*(_BYTE *)(v108 + 80))
                    goto LABEL_105;
                  if (*(char *)(v108 + 39) < 0)
                  {
                    sub_20AEC60F4(v111, *(void **)(v108 + 16), *(_QWORD *)(v108 + 24));
                  }
                  else
                  {
                    *(_OWORD *)v111 = *(_OWORD *)(v108 + 16);
                    v112 = *(void **)(v108 + 32);
                  }
                  LOWORD(v113) = *(_WORD *)(v54 + 40);
                  v58 = (uint64_t)v110;
                  if (!v110)
                    goto LABEL_115;
                  if (v110 == v109)
                  {
                    *((_QWORD *)&v115 + 1) = v114;
                    (*(void (**)(_QWORD *, _QWORD *))(v109[0] + 24))(v109, v114);
                  }
                  else
                  {
                    v58 = (*(uint64_t (**)(void))(*v110 + 16))();
LABEL_115:
                    *((_QWORD *)&v115 + 1) = v58;
                  }
                  v116 = v103;
                  if (*((_QWORD *)&v103 + 1))
                  {
                    v62 = (unint64_t *)(*((_QWORD *)&v103 + 1) + 8);
                    do
                      v63 = __ldxr(v62);
                    while (__stxr(v63 + 1, v62));
                  }
                  *(_OWORD *)__p = *(_OWORD *)v111;
                  v120 = v112;
                  v111[0] = 0;
                  v111[1] = 0;
                  v112 = 0;
                  v121 = (__int16)v113;
                  v64 = &v123;
                  if (!*((_QWORD *)&v115 + 1))
                    goto LABEL_131;
                  if (*((_QWORD **)&v115 + 1) == v114)
                  {
                    v123 = v122;
                    (*(void (**)(_QWORD *))(v114[0] + 24))(v114);
                  }
                  else
                  {
                    v123 = (_QWORD *)*((_QWORD *)&v115 + 1);
                    v64 = (_QWORD *)&v115 + 1;
LABEL_131:
                    *v64 = 0;
                  }
                  v66 = *((_QWORD *)&v116 + 1);
                  v65 = v116;
                  v124 = v116;
                  v116 = 0uLL;
                  v134 = 0;
                  v67 = (char *)operator new(0x58uLL);
                  v68 = v67;
                  *(_QWORD *)v67 = off_24C41C148;
                  *(_OWORD *)(v67 + 8) = *(_OWORD *)__p;
                  *((_QWORD *)v67 + 3) = v120;
                  __p[0] = 0;
                  __p[1] = 0;
                  v120 = 0;
                  *((_WORD *)v67 + 16) = v121;
                  if (v123)
                  {
                    if (v123 == v122)
                    {
                      *((_QWORD *)v67 + 8) = v67 + 40;
                      (*(void (**)(void))(v122[0] + 24))();
                      v66 = *((_QWORD *)&v124 + 1);
                      v65 = v124;
                    }
                    else
                    {
                      *((_QWORD *)v67 + 8) = v123;
                      v123 = 0;
                    }
                  }
                  else
                  {
                    *((_QWORD *)v67 + 8) = 0;
                  }
                  *((_QWORD *)v68 + 9) = v65;
                  *((_QWORD *)v68 + 10) = v66;
                  v124 = 0uLL;
                  v134 = v68;
                  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)(v54 + 360) + 40))(v54 + 360, __dst);
                  v73 = v134;
                  if (v134 == __dst)
                  {
                    v73 = __dst;
                    v74 = 4;
LABEL_147:
                    (*(void (**)(void))(*v73 + 8 * v74))();
                  }
                  else if (v134)
                  {
                    v74 = 5;
                    goto LABEL_147;
                  }
                  v75 = (std::__shared_weak_count *)*((_QWORD *)&v124 + 1);
                  if (!*((_QWORD *)&v124 + 1))
                    goto LABEL_152;
                  v76 = (unint64_t *)(*((_QWORD *)&v124 + 1) + 8);
                  do
                    v77 = __ldaxr(v76);
                  while (__stlxr(v77 - 1, v76));
                  if (!v77)
                  {
                    ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
                    std::__shared_weak_count::__release_weak(v75);
                    v78 = v123;
                    if (v123 == v122)
                      goto LABEL_169;
LABEL_153:
                    if (v78)
                    {
                      v79 = 5;
                      goto LABEL_170;
                    }
                  }
                  else
                  {
LABEL_152:
                    v78 = v123;
                    if (v123 != v122)
                      goto LABEL_153;
LABEL_169:
                    v78 = v122;
                    v79 = 4;
LABEL_170:
                    (*(void (**)(void))(*v78 + 8 * v79))();
                  }
                  if (SHIBYTE(v120) < 0)
                  {
                    operator delete(__p[0]);
                    v87 = (std::__shared_weak_count *)*((_QWORD *)&v116 + 1);
                    if (*((_QWORD *)&v116 + 1))
                      goto LABEL_175;
LABEL_178:
                    v90 = *((_QWORD *)&v115 + 1);
                    if (*((_QWORD **)&v115 + 1) == v114)
                      goto LABEL_205;
                  }
                  else
                  {
                    v87 = (std::__shared_weak_count *)*((_QWORD *)&v116 + 1);
                    if (!*((_QWORD *)&v116 + 1))
                      goto LABEL_178;
LABEL_175:
                    p_shared_owners = (unint64_t *)&v87->__shared_owners_;
                    do
                      v89 = __ldaxr(p_shared_owners);
                    while (__stlxr(v89 - 1, p_shared_owners));
                    if (v89)
                      goto LABEL_178;
                    ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
                    std::__shared_weak_count::__release_weak(v87);
                    v90 = *((_QWORD *)&v115 + 1);
                    if (*((_QWORD **)&v115 + 1) == v114)
                      goto LABEL_205;
                  }
                  if (!v90)
                    goto LABEL_197;
                  goto LABEL_180;
                case 1:
                  std::mutex::lock((std::mutex *)(v108 + 136));
                  atomic_store(1u, (unsigned __int8 *)(v54 + 200));
                  std::condition_variable::notify_one((std::condition_variable *)(v54 + 208));
                  std::mutex::unlock((std::mutex *)(v54 + 136));
                  v56 = (std::__shared_weak_count *)*((_QWORD *)&v103 + 1);
                  if (!*((_QWORD *)&v103 + 1))
                    goto LABEL_52;
                  goto LABEL_199;
                case 2:
LABEL_105:
                  v57 = (std::mutex *)(v108 + 376);
                  std::mutex::lock((std::mutex *)(v108 + 376));
                  sub_20B429520(v54 + 440, v103 + 16);
                  std::condition_variable::notify_one((std::condition_variable *)(v54 + 488));
                  std::mutex::unlock(v57);
                  v56 = (std::__shared_weak_count *)*((_QWORD *)&v103 + 1);
                  if (!*((_QWORD *)&v103 + 1))
                    goto LABEL_52;
                  goto LABEL_199;
                case 3:
                  v55 = v110;
                  if (!v110)
                    goto LABEL_198;
                  if (*(char *)(v108 + 39) < 0)
                  {
                    sub_20AEC60F4(v111, *(void **)(v108 + 16), *(_QWORD *)(v108 + 24));
                    v55 = v110;
                    LOWORD(v113) = *(_WORD *)(v54 + 40);
                    if (!v110)
                      goto LABEL_110;
                  }
                  else
                  {
                    *(_OWORD *)v111 = *(_OWORD *)(v108 + 16);
                    v112 = *(void **)(v108 + 32);
                    LOWORD(v113) = *(_WORD *)(v108 + 40);
                  }
                  if (v55 != v109)
                  {
                    v55 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v55 + 16))(v55);
LABEL_110:
                    *((_QWORD *)&v115 + 1) = v55;
                    goto LABEL_117;
                  }
                  *((_QWORD *)&v115 + 1) = v114;
                  (*(void (**)(_QWORD *, _QWORD *))(v109[0] + 24))(v109, v114);
LABEL_117:
                  v116 = v103;
                  if (*((_QWORD *)&v103 + 1))
                  {
                    v59 = (unint64_t *)(*((_QWORD *)&v103 + 1) + 8);
                    do
                      v60 = __ldxr(v59);
                    while (__stxr(v60 + 1, v59));
                  }
                  v125 = *(_OWORD *)v111;
                  v126 = v112;
                  v111[0] = 0;
                  v111[1] = 0;
                  v112 = 0;
                  v127 = (__int16)v113;
                  v61 = &v129;
                  if (!*((_QWORD *)&v115 + 1))
                    goto LABEL_123;
                  if (*((_QWORD **)&v115 + 1) == v114)
                  {
                    v129 = v128;
                    (*(void (**)(_QWORD *))(v114[0] + 24))(v114);
                  }
                  else
                  {
                    v129 = (_QWORD *)*((_QWORD *)&v115 + 1);
                    v61 = (_QWORD *)&v115 + 1;
LABEL_123:
                    *v61 = 0;
                  }
                  v70 = *((_QWORD *)&v116 + 1);
                  v69 = v116;
                  v130 = v116;
                  v116 = 0uLL;
                  v134 = 0;
                  v71 = (char *)operator new(0x58uLL);
                  v72 = v71;
                  *(_QWORD *)v71 = off_24C41C1C8;
                  *(_OWORD *)(v71 + 8) = v125;
                  *((_QWORD *)v71 + 3) = v126;
                  v125 = 0uLL;
                  v126 = 0;
                  *((_WORD *)v71 + 16) = v127;
                  if (v129)
                  {
                    if (v129 == v128)
                    {
                      *((_QWORD *)v71 + 8) = v71 + 40;
                      (*(void (**)(void))(v128[0] + 24))();
                      v70 = *((_QWORD *)&v130 + 1);
                      v69 = v130;
                    }
                    else
                    {
                      *((_QWORD *)v71 + 8) = v129;
                      v129 = 0;
                    }
                  }
                  else
                  {
                    *((_QWORD *)v71 + 8) = 0;
                  }
                  *((_QWORD *)v72 + 9) = v69;
                  *((_QWORD *)v72 + 10) = v70;
                  v130 = 0uLL;
                  v134 = v72;
                  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)(v54 + 360) + 40))(v54 + 360, __dst);
                  v80 = v134;
                  if (v134 == __dst)
                  {
                    v80 = __dst;
                    v81 = 4;
                  }
                  else
                  {
                    if (!v134)
                      goto LABEL_161;
                    v81 = 5;
                  }
                  (*(void (**)(void))(*v80 + 8 * v81))();
LABEL_161:
                  v82 = (std::__shared_weak_count *)*((_QWORD *)&v130 + 1);
                  if (!*((_QWORD *)&v130 + 1))
                    goto LABEL_165;
                  v83 = (unint64_t *)(*((_QWORD *)&v130 + 1) + 8);
                  do
                    v84 = __ldaxr(v83);
                  while (__stlxr(v84 - 1, v83));
                  if (!v84)
                  {
                    ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
                    std::__shared_weak_count::__release_weak(v82);
                    v85 = v129;
                    if (v129 == v128)
                    {
LABEL_186:
                      v85 = v128;
                      v86 = 4;
                      goto LABEL_187;
                    }
                  }
                  else
                  {
LABEL_165:
                    v85 = v129;
                    if (v129 == v128)
                      goto LABEL_186;
                  }
                  if (!v85)
                    goto LABEL_188;
                  v86 = 5;
LABEL_187:
                  (*(void (**)(void))(*v85 + 8 * v86))();
LABEL_188:
                  if (SHIBYTE(v126) < 0)
                  {
                    operator delete((void *)v125);
                    v91 = (std::__shared_weak_count *)*((_QWORD *)&v116 + 1);
                    if (!*((_QWORD *)&v116 + 1))
                      goto LABEL_195;
                  }
                  else
                  {
                    v91 = (std::__shared_weak_count *)*((_QWORD *)&v116 + 1);
                    if (!*((_QWORD *)&v116 + 1))
                      goto LABEL_195;
                  }
                  v92 = (unint64_t *)&v91->__shared_owners_;
                  do
                    v93 = __ldaxr(v92);
                  while (__stlxr(v93 - 1, v92));
                  if (v93)
                  {
LABEL_195:
                    v90 = *((_QWORD *)&v115 + 1);
                    if (*((_QWORD **)&v115 + 1) != v114)
                      goto LABEL_196;
                    goto LABEL_205;
                  }
                  ((void (*)(std::__shared_weak_count *))v91->__on_zero_shared)(v91);
                  std::__shared_weak_count::__release_weak(v91);
                  v90 = *((_QWORD *)&v115 + 1);
                  if (*((_QWORD **)&v115 + 1) != v114)
                  {
LABEL_196:
                    if (v90)
                    {
LABEL_180:
                      (*(void (**)(uint64_t))(*(_QWORD *)v90 + 40))(v90);
                      if (SHIBYTE(v112) < 0)
                        goto LABEL_181;
                    }
                    else
                    {
LABEL_197:
                      if (SHIBYTE(v112) < 0)
                        goto LABEL_181;
                    }
                    goto LABEL_198;
                  }
LABEL_205:
                  (*(void (**)(_QWORD *))(v114[0] + 32))(v114);
                  if (SHIBYTE(v112) < 0)
                  {
LABEL_181:
                    operator delete(v111[0]);
                    v56 = (std::__shared_weak_count *)*((_QWORD *)&v103 + 1);
                    if (!*((_QWORD *)&v103 + 1))
                      goto LABEL_52;
                    goto LABEL_199;
                  }
LABEL_198:
                  v56 = (std::__shared_weak_count *)*((_QWORD *)&v103 + 1);
                  if (!*((_QWORD *)&v103 + 1))
                    goto LABEL_52;
LABEL_199:
                  v94 = (unint64_t *)&v56->__shared_owners_;
                  do
                    v95 = __ldaxr(v94);
                  while (__stlxr(v95 - 1, v94));
                  if (!v95)
                  {
                    ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
                    std::__shared_weak_count::__release_weak(v56);
                  }
LABEL_52:
                  v11 = v46;
                  if (!v46)
                    goto LABEL_16;
                  continue;
                default:
                  goto LABEL_198;
              }
            }
          }
        }
        goto LABEL_16;
      }
      break;
    }
    v39 = v11 - v34;
    if (v11 < v34)
      v39 = 0;
    if ((uint64_t)v11 < v39)
      v39 = v11;
    if (v39 >= 4)
      v40 = 4;
    else
      v40 = v39;
    if (v40)
      memcpy(&v132, &v105[v11 - v39], v40);
    v34 += 4;
    if (v38 < v11)
      goto LABEL_79;
LABEL_16:
    v9 = v102;
LABEL_17:
    v12 = atomic_load((unsigned __int8 *)(v9 + 81));
    if ((v12 & 1) == 0)
      goto LABEL_210;
  }
  atomic_store(0, (unsigned __int8 *)(v9 + 81));
LABEL_210:
  std::condition_variable::notify_one((std::condition_variable *)(v9 + 488));
  if (v105)
    operator delete(v105);
  v96 = v109;
  if (v110 == v109)
  {
    v97 = 4;
LABEL_216:
    (*(void (**)(void))(*v96 + 8 * v97))();
  }
  else if (v110)
  {
    v97 = 5;
    v96 = v110;
    goto LABEL_216;
  }
  v98 = *v101;
  *v101 = 0;
  if (v98)
  {
    v99 = MEMORY[0x20BD35314]();
    MEMORY[0x20BD3583C](v99, 0x20C4093837F09);
  }
  MEMORY[0x20BD3583C](v101, 0x20C40A4A59CD2);
  return 0;
}

void sub_20B42B2CC(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

void sub_20B42B334(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B42B358(uint64_t result)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(_QWORD **)(result + 24);
  if (v1)
  {
    v2 = (void *)v1[13];
    if (v2)
    {
      v1[14] = v2;
      operator delete(v2);
    }
    v3 = (void *)v1[10];
    if (v3)
    {
      v1[11] = v3;
      operator delete(v3);
    }
    v4 = (void *)v1[5];
    if (v4)
    {
      v1[6] = v4;
      operator delete(v4);
    }
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20B42B3C8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3net13LoadedPayloadEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3net13LoadedPayloadEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3net13LoadedPayloadEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3net13LoadedPayloadEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_20B42B438(_QWORD *a1)
{
  void *v2;
  void *v3;

  v2 = (void *)a1[6];
  if (v2)
  {
    a1[7] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[3];
  if (v3)
  {
    a1[4] = v3;
    operator delete(v3);
  }
  return a1;
}

void sub_20B42B478(_QWORD *a1)
{
  void *v2;
  void *v3;

  v2 = (void *)a1[4];
  if (v2)
  {
    a1[5] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[1];
  if (v3)
  {
    a1[2] = v3;
    operator delete(v3);
  }
}

void sub_20B42B4B4(_QWORD *a1)
{
  void *v2;
  void *v3;

  v2 = (void *)a1[6];
  if (v2)
  {
    a1[7] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[3];
  if (v3)
  {
    a1[4] = v3;
    operator delete(v3);
  }
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B42B504(_QWORD *a1)
{
  void *v2;
  void *v3;

  v2 = (void *)a1[4];
  if (v2)
  {
    a1[5] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[1];
  if (v3)
  {
    a1[2] = v3;
    operator delete(v3);
  }
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B42B554(_QWORD *a1)
{
  char *v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _BYTE *v15;
  uint64_t *v16;
  char *v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  size_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  char *v36;
  char *v37;
  char v38;
  unint64_t v39;
  char *v40;
  char *v41;
  unint64_t v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;

  v2 = (char *)a1[3];
  v3 = (char *)a1[4];
  v4 = v3 - v2 - 10;
  v6 = (uint64_t *)a1[7];
  v5 = a1[8];
  v7 = v6;
  if ((unint64_t)v6 < v5)
  {
    *v6 = v4;
    v8 = (uint64_t)(v6 + 1);
    goto LABEL_22;
  }
  v9 = (uint64_t *)a1[6];
  v10 = (char *)v6 - (char *)v9;
  v11 = v6 - v9;
  v12 = v11 + 1;
  if ((unint64_t)(v11 + 1) >> 61)
    sub_20B4268F4();
  v13 = v5 - (_QWORD)v9;
  if (v13 >> 2 > v12)
    v12 = v13 >> 2;
  if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
    v14 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v14 = v12;
  if (v14)
  {
    if (v14 >> 61)
      sub_20AEC60CC();
    v15 = operator new(8 * v14);
    v10 = (char *)v6 - (char *)v9;
    v16 = (uint64_t *)&v15[8 * v11];
    v17 = &v15[8 * v14];
    *v16 = v4;
    v8 = (uint64_t)(v16 + 1);
    v18 = (char *)v6 - (char *)v9;
    if (v6 == v9)
      goto LABEL_20;
    goto LABEL_14;
  }
  v15 = 0;
  v16 = (uint64_t *)(8 * v11);
  v17 = 0;
  *(_QWORD *)(8 * v11) = v4;
  v8 = 8 * v11 + 8;
  v18 = (char *)v6 - (char *)v9;
  if (v6 != v9)
  {
LABEL_14:
    v19 = v18 - 8;
    if (v19 < 0x58)
      goto LABEL_58;
    if ((unint64_t)((char *)v6 - v15 - v10) < 0x20)
      goto LABEL_58;
    v20 = (v19 >> 3) + 1;
    v21 = 8 * (v20 & 0x3FFFFFFFFFFFFFFCLL);
    v7 = &v6[v21 / 0xFFFFFFFFFFFFFFF8];
    v16 = (uint64_t *)((char *)v16 - v21);
    v22 = &v15[8 * v11 - 16];
    v23 = v6 - 2;
    v24 = v20 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v25 = *(_OWORD *)v23;
      *(v22 - 1) = *((_OWORD *)v23 - 1);
      *v22 = v25;
      v22 -= 2;
      v23 -= 4;
      v24 -= 4;
    }
    while (v24);
    if (v20 != (v20 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_58:
      do
      {
        v26 = *--v7;
        *--v16 = v26;
      }
      while (v7 != v9);
    }
  }
LABEL_20:
  a1[6] = v16;
  a1[7] = v8;
  a1[8] = v17;
  if (v9)
  {
    operator delete(v9);
    v2 = (char *)a1[3];
    v3 = (char *)a1[4];
  }
LABEL_22:
  a1[7] = v8;
  v27 = v3 - v2;
  v28 = v3 - v2 + 8;
  if ((unint64_t)(v3 - v2) > 0xFFFFFFFFFFFFFFF7)
  {
    a1[4] = v3 + 8;
    return;
  }
  v29 = a1[5];
  if ((unint64_t)(v29 - (_QWORD)v3) >= 8)
  {
    *(_QWORD *)v3 = 0;
    a1[4] = v3 + 8;
    return;
  }
  if ((v28 & 0x8000000000000000) != 0)
    sub_20AF4BAC0();
  v30 = v29 - (_QWORD)v2;
  v31 = 2 * v30;
  if (2 * v30 <= v28)
    v31 = v3 - v2 + 8;
  if (v30 >= 0x3FFFFFFFFFFFFFFFLL)
    v32 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v32 = v31;
  v33 = (char *)operator new(v32);
  v34 = &v33[v27];
  *(_QWORD *)&v33[v27] = 0;
  v35 = v3 - v2;
  if (v3 != v2)
  {
    if (v35 < 8 || (unint64_t)(v2 - v33) < 0x20)
    {
      v36 = v3;
      goto LABEL_34;
    }
    if (v35 >= 0x20)
    {
      v39 = v35 & 0xFFFFFFFFFFFFFFE0;
      v40 = &v33[v27 - 16];
      v41 = v3 - 16;
      v42 = v35 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        v43 = *(_OWORD *)v41;
        *((_OWORD *)v40 - 1) = *((_OWORD *)v41 - 1);
        *(_OWORD *)v40 = v43;
        v40 -= 32;
        v41 -= 32;
        v42 -= 32;
      }
      while (v42);
      if (v35 == v39)
        goto LABEL_36;
      if ((v35 & 0x18) == 0)
      {
        v34 -= v39;
        v36 = &v3[-v39];
LABEL_34:
        v37 = v34 - 1;
        do
        {
          v38 = *--v36;
          *v37-- = v38;
        }
        while (v36 != v2);
LABEL_36:
        v34 = v33;
        goto LABEL_37;
      }
    }
    else
    {
      v39 = 0;
    }
    v36 = &v3[-(v35 & 0xFFFFFFFFFFFFFFF8)];
    v34 -= v35 & 0xFFFFFFFFFFFFFFF8;
    v44 = v27 - v39 - 8;
    v45 = &v3[-v39 - 8];
    v46 = v39 - (v35 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      v47 = *(_QWORD *)v45;
      v45 -= 8;
      *(_QWORD *)&v33[v44] = v47;
      v44 -= 8;
      v46 += 8;
    }
    while (v46);
    if (v35 == (v35 & 0xFFFFFFFFFFFFFFF8))
      goto LABEL_36;
    goto LABEL_34;
  }
LABEL_37:
  a1[3] = v34;
  a1[4] = &v33[v28];
  a1[5] = &v33[v32];
  if (v2)
    operator delete(v2);
}

void sub_20B42B874(uint64_t a1)
{
  sub_20B42B554((_QWORD *)(a1 - 16));
}

_QWORD *sub_20B42B87C(_QWORD *result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result[7] - 8) + result[3];
  *(_QWORD *)(v1 + 10) = result[4] - v1 - 18;
  result[7] -= 8;
  return result;
}

_QWORD *sub_20B42B8A8(_QWORD *result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result[5] - 8) + result[1];
  *(_QWORD *)(v1 + 10) = result[2] - v1 - 18;
  result[5] -= 8;
  return result;
}

_QWORD *sub_20B42B8D4(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)a1[11];
  if (v2)
  {
    a1[12] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[8];
  if (v3)
  {
    a1[9] = v3;
    operator delete(v3);
  }
  v4 = (void *)a1[3];
  if (v4)
  {
    a1[4] = v4;
    operator delete(v4);
  }
  return a1;
}

void sub_20B42B924(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)a1[9];
  if (v2)
  {
    a1[10] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[6];
  if (v3)
  {
    a1[7] = v3;
    operator delete(v3);
  }
  v4 = (void *)a1[1];
  if (v4)
  {
    a1[2] = v4;
    operator delete(v4);
  }
}

void sub_20B42B970(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)a1[11];
  if (v2)
  {
    a1[12] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[8];
  if (v3)
  {
    a1[9] = v3;
    operator delete(v3);
  }
  v4 = (void *)a1[3];
  if (v4)
  {
    a1[4] = v4;
    operator delete(v4);
  }
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B42B9D0(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)a1[9];
  if (v2)
  {
    a1[10] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[6];
  if (v3)
  {
    a1[7] = v3;
    operator delete(v3);
  }
  v4 = (void *)a1[1];
  if (v4)
  {
    a1[2] = v4;
    operator delete(v4);
  }
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B42BA30(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _BYTE *v11;
  _QWORD *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  BOOL v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _BYTE *v35;
  _QWORD *v36;
  char *v37;
  int64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  _OWORD *v43;
  char *v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  std::logic_error *exception;

  v3 = (char *)a1[12];
  v2 = a1[13];
  v4 = v3;
  if ((unint64_t)v3 >= v2)
  {
    v6 = (char *)a1[11];
    v7 = (v3 - v6) >> 3;
    v8 = v7 + 1;
    if ((unint64_t)(v7 + 1) >> 61)
      sub_20B4268F4();
    v9 = v2 - (_QWORD)v6;
    if (v9 >> 2 > v8)
      v8 = v9 >> 2;
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v8;
    if (v10)
    {
      if (v10 >> 61)
        goto LABEL_48;
      v11 = operator new(8 * v10);
    }
    else
    {
      v11 = 0;
    }
    v12 = &v11[8 * v7];
    v13 = &v11[8 * v10];
    *v12 = a1[6];
    v5 = v12 + 1;
    if (v3 != v6)
    {
      v14 = v3 - v6 - 8;
      if (v14 < 0x58)
        goto LABEL_53;
      if ((unint64_t)(v6 - v11) < 0x20)
        goto LABEL_53;
      v15 = (v14 >> 3) + 1;
      v16 = 8 * (v15 & 0x3FFFFFFFFFFFFFFCLL);
      v4 = &v3[-v16];
      v12 = (_QWORD *)((char *)v12 - v16);
      v17 = &v11[8 * v7 - 16];
      v18 = v3 - 16;
      v19 = v15 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v20 = *(_OWORD *)v18;
        *(v17 - 1) = *((_OWORD *)v18 - 1);
        *v17 = v20;
        v17 -= 2;
        v18 -= 32;
        v19 -= 4;
      }
      while (v19);
      if (v15 != (v15 & 0x3FFFFFFFFFFFFFFCLL))
      {
LABEL_53:
        do
        {
          v21 = *((_QWORD *)v4 - 1);
          v4 -= 8;
          *--v12 = v21;
        }
        while (v4 != v6);
      }
    }
    a1[11] = v12;
    a1[12] = v5;
    a1[13] = v13;
    if (v6)
      operator delete(v6);
  }
  else
  {
    *(_QWORD *)v3 = a1[6];
    v5 = v3 + 8;
  }
  a1[12] = v5;
  v22 = a1[6];
  v23 = a1[7];
  v24 = v23 >= v22;
  v25 = v23 - v22;
  if (!v24)
    v25 = 0;
  if (v25 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  v26 = *(_QWORD *)(a1[3] + v22);
  a1[6] = v22 + 8;
  v28 = (char *)a1[9];
  v27 = a1[10];
  if ((unint64_t)v28 < v27)
  {
    *(_QWORD *)v28 = v26;
    v29 = (uint64_t)(v28 + 8);
    goto LABEL_46;
  }
  v30 = (char *)a1[8];
  v31 = (v28 - v30) >> 3;
  v32 = v31 + 1;
  if ((unint64_t)(v31 + 1) >> 61)
    sub_20AF6E1D0();
  v33 = v27 - (_QWORD)v30;
  if (v33 >> 2 > v32)
    v32 = v33 >> 2;
  if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFF8)
    v34 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v34 = v32;
  if (!v34)
  {
    v35 = 0;
    v36 = (_QWORD *)(8 * v31);
    v37 = 0;
    *(_QWORD *)(8 * v31) = v26;
    v29 = 8 * v31 + 8;
    v38 = v28 - v30;
    if (v28 == v30)
      goto LABEL_44;
LABEL_38:
    v39 = v38 - 8;
    if (v39 < 0x58)
      goto LABEL_54;
    if ((unint64_t)(v30 - v35) < 0x20)
      goto LABEL_54;
    v40 = (v39 >> 3) + 1;
    v41 = 8 * (v40 & 0x3FFFFFFFFFFFFFFCLL);
    v42 = &v28[-v41];
    v36 = (_QWORD *)((char *)v36 - v41);
    v43 = &v35[8 * v31 - 16];
    v44 = v28 - 16;
    v45 = v40 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v46 = *(_OWORD *)v44;
      *(v43 - 1) = *((_OWORD *)v44 - 1);
      *v43 = v46;
      v43 -= 2;
      v44 -= 32;
      v45 -= 4;
    }
    while (v45);
    v28 = v42;
    if (v40 != (v40 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_54:
      do
      {
        v47 = *((_QWORD *)v28 - 1);
        v28 -= 8;
        *--v36 = v47;
      }
      while (v28 != v30);
    }
    goto LABEL_44;
  }
  if (v34 >> 61)
LABEL_48:
    sub_20AEC60CC();
  v35 = operator new(8 * v34);
  v36 = &v35[8 * v31];
  v37 = &v35[8 * v34];
  *v36 = v26;
  v29 = (uint64_t)(v36 + 1);
  v38 = v28 - v30;
  if (v28 != v30)
    goto LABEL_38;
LABEL_44:
  a1[8] = v36;
  a1[9] = v29;
  a1[10] = v37;
  if (v30)
    operator delete(v30);
LABEL_46:
  a1[9] = v29;
}

void sub_20B42BD14(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_20B42BD28(uint64_t a1)
{
  sub_20B42BA30((_QWORD *)(a1 - 16));
}

_QWORD *sub_20B42BD30(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  v1 = result[12];
  v2 = result[9];
  result[6] = *(_QWORD *)(v1 - 8) + *(_QWORD *)(v2 - 8) + 8;
  result[9] = v2 - 8;
  result[12] = v1 - 8;
  return result;
}

_QWORD *sub_20B42BD58(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  v1 = result[10];
  v2 = result[7];
  result[4] = *(_QWORD *)(v1 - 8) + *(_QWORD *)(v2 - 8) + 8;
  result[7] = v2 - 8;
  result[10] = v1 - 8;
  return result;
}

double sub_20B42BD80(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  unint64_t v10;
  char *v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 *v17;
  char v18;
  double result;
  _OWORD *v20;
  __int128 *v21;
  unint64_t v22;
  __int128 v23;
  std::logic_error *exception;
  __int128 v25;
  unint64_t v26;

  v3 = a1[6];
  v2 = a1[7];
  v4 = v2 - v3;
  if (v2 < v3)
    v4 = 0;
  if (v4 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read");
    goto LABEL_27;
  }
  v6 = a1[3];
  v7 = *(_QWORD *)(v6 + v3);
  v8 = v3 + 8;
  a1[6] = v3 + 8;
  if (!v7)
    return result;
  v9 = v2 >= v8;
  v10 = v2 - v8;
  if (!v9)
    v10 = 0;
  if (v10 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read string");
LABEL_27:
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v12 = (char *)(v6 + v8);
  if (v7 <= 0x16)
  {
    HIBYTE(v26) = v7;
    v13 = &v25;
LABEL_15:
    v16 = v12;
    v17 = v13;
    do
    {
LABEL_16:
      v18 = *v16++;
      *(_BYTE *)v17 = v18;
      v17 = (__int128 *)((char *)v17 + 1);
    }
    while (v16 != &v12[v7]);
    goto LABEL_17;
  }
  v14 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v7 | 7) != 0x17)
    v14 = v7 | 7;
  v15 = v14 + 1;
  v13 = (__int128 *)operator new(v14 + 1);
  *((_QWORD *)&v25 + 1) = v7;
  v26 = v15 | 0x8000000000000000;
  *(_QWORD *)&v25 = v13;
  if (v7 < 0x20 || (unint64_t)v13 + -v6 - v3 - 8 < 0x20)
    goto LABEL_15;
  v16 = &v12[v7 & 0xFFFFFFFFFFFFFFE0];
  v17 = (__int128 *)((char *)v13 + (v7 & 0xFFFFFFFFFFFFFFE0));
  v20 = v13 + 1;
  v21 = (__int128 *)(v3 + v6 + 24);
  v22 = v7 & 0xFFFFFFFFFFFFFFE0;
  do
  {
    v23 = *v21;
    *(v20 - 1) = *(v21 - 1);
    *v20 = v23;
    v20 += 2;
    v21 += 2;
    v22 -= 32;
  }
  while (v22);
  if (v7 != (v7 & 0x7FFFFFFFFFFFFFE0))
    goto LABEL_16;
LABEL_17:
  *(_BYTE *)v17 = 0;
  if (*(char *)(a2 + 23) < 0)
    operator delete(*(void **)a2);
  result = *(double *)&v25;
  *(_OWORD *)a2 = v25;
  *(_QWORD *)(a2 + 16) = v26;
  a1[6] += v7;
  return result;
}

void sub_20B42BF4C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_20B42BF60(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B42BF78(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  v1 = result[12];
  v2 = result[9];
  result[6] = *(_QWORD *)(v1 - 8) + *(_QWORD *)(v2 - 8) + 8;
  result[9] = v2 - 8;
  result[12] = v1 - 8;
  return result;
}

_QWORD *sub_20B42BFA0(_QWORD *result, _BYTE *a2)
{
  unint64_t v2;
  std::logic_error *exception;

  v2 = result[6];
  if (result[7] <= v2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  *a2 = *(_BYTE *)(result[3] + v2);
  ++result[6];
  return result;
}

void sub_20B42C00C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B42C020(_QWORD *result, _BYTE *a2)
{
  unint64_t v2;
  std::logic_error *exception;

  v2 = result[6];
  if (result[7] <= v2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  *a2 = *(_BYTE *)(result[3] + v2);
  ++result[6];
  return result;
}

void sub_20B42C08C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B42C0A0(_QWORD *result, _WORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 1)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  *a2 = *(_WORD *)(result[3] + v2);
  result[6] += 2;
  return result;
}

void sub_20B42C114(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B42C128(_QWORD *result, _DWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  *a2 = *(_DWORD *)(result[3] + v2);
  result[6] += 4;
  return result;
}

void sub_20B42C19C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B42C1B0(_QWORD *result, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  *a2 = *(_QWORD *)(result[3] + v2);
  result[6] += 8;
  return result;
}

void sub_20B42C224(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B42C238(_QWORD *result, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  *a2 = *(_QWORD *)(result[3] + v2);
  result[6] += 8;
  return result;
}

void sub_20B42C2AC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B42C2C0(_QWORD *result, _BYTE *a2)
{
  unint64_t v2;
  std::logic_error *exception;

  v2 = result[6];
  if (result[7] <= v2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  *a2 = *(_BYTE *)(result[3] + v2);
  ++result[6];
  return result;
}

void sub_20B42C32C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B42C340(_QWORD *result, _BYTE *a2)
{
  unint64_t v2;
  std::logic_error *exception;

  v2 = result[6];
  if (result[7] <= v2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  *a2 = *(_BYTE *)(result[3] + v2);
  ++result[6];
  return result;
}

void sub_20B42C3AC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B42C3C0(_QWORD *result, _WORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 1)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  *a2 = *(_WORD *)(result[3] + v2);
  result[6] += 2;
  return result;
}

void sub_20B42C434(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B42C448(_QWORD *result, _DWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  *a2 = *(_DWORD *)(result[3] + v2);
  result[6] += 4;
  return result;
}

void sub_20B42C4BC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B42C4D0(_QWORD *result, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  *a2 = *(_QWORD *)(result[3] + v2);
  result[6] += 8;
  return result;
}

void sub_20B42C544(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B42C558(_QWORD *result, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  *a2 = *(_QWORD *)(result[3] + v2);
  result[6] += 8;
  return result;
}

void sub_20B42C5CC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B42C5E0(_QWORD *result, _DWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  *a2 = *(_DWORD *)(result[3] + v2);
  result[6] += 4;
  return result;
}

void sub_20B42C654(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B42C668(_QWORD *result, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  *a2 = *(_QWORD *)(result[3] + v2);
  result[6] += 8;
  return result;
}

void sub_20B42C6DC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_20B42C6F4(_QWORD *a1, size_t __n, void *__dst)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  size_t v6;
  void *result;
  std::logic_error *exception;

  v3 = a1[6];
  v4 = a1[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 < __n)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  result = memcpy(__dst, (const void *)(a1[3] + v3), __n);
  a1[6] += __n;
  return result;
}

void sub_20B42C778(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_20B42C78C(_QWORD *a1, size_t __n, void *__dst)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  size_t v6;
  void *result;
  std::logic_error *exception;

  v3 = a1[6];
  v4 = a1[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 < __n)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  result = memcpy(__dst, (const void *)(a1[3] + v3), __n);
  a1[6] += __n;
  return result;
}

void sub_20B42C810(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_20B42C824(_QWORD *a1, uint64_t a2, void *__dst)
{
  size_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  size_t v7;
  void *result;
  std::logic_error *exception;

  v3 = 2 * a2;
  v4 = a1[6];
  v5 = a1[7];
  v6 = v5 >= v4;
  v7 = v5 - v4;
  if (!v6)
    v7 = 0;
  if (v7 < v3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  result = memcpy(__dst, (const void *)(a1[3] + v4), v3);
  a1[6] += v3;
  return result;
}

void sub_20B42C8A8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_20B42C8BC(_QWORD *a1, uint64_t a2, void *__dst)
{
  size_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  size_t v7;
  void *result;
  std::logic_error *exception;

  v3 = 4 * a2;
  v4 = a1[6];
  v5 = a1[7];
  v6 = v5 >= v4;
  v7 = v5 - v4;
  if (!v6)
    v7 = 0;
  if (v7 < v3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  result = memcpy(__dst, (const void *)(a1[3] + v4), v3);
  a1[6] += v3;
  return result;
}

void sub_20B42C940(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_20B42C954(_QWORD *a1, uint64_t a2, void *__dst)
{
  size_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  size_t v7;
  void *result;
  std::logic_error *exception;

  v3 = 8 * a2;
  v4 = a1[6];
  v5 = a1[7];
  v6 = v5 >= v4;
  v7 = v5 - v4;
  if (!v6)
    v7 = 0;
  if (v7 < v3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  result = memcpy(__dst, (const void *)(a1[3] + v4), v3);
  a1[6] += v3;
  return result;
}

void sub_20B42C9D8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_20B42C9EC(_QWORD *a1, uint64_t a2, void *__dst)
{
  size_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  size_t v7;
  void *result;
  std::logic_error *exception;

  v3 = 8 * a2;
  v4 = a1[6];
  v5 = a1[7];
  v6 = v5 >= v4;
  v7 = v5 - v4;
  if (!v6)
    v7 = 0;
  if (v7 < v3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  result = memcpy(__dst, (const void *)(a1[3] + v4), v3);
  a1[6] += v3;
  return result;
}

void sub_20B42CA70(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_20B42CA84(_QWORD *a1, size_t __n, void *__dst)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  size_t v6;
  void *result;
  std::logic_error *exception;

  v3 = a1[6];
  v4 = a1[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 < __n)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  result = memcpy(__dst, (const void *)(a1[3] + v3), __n);
  a1[6] += __n;
  return result;
}

void sub_20B42CB08(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_20B42CB1C(_QWORD *a1, size_t __n, void *__dst)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  size_t v6;
  void *result;
  std::logic_error *exception;

  v3 = a1[6];
  v4 = a1[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 < __n)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  result = memcpy(__dst, (const void *)(a1[3] + v3), __n);
  a1[6] += __n;
  return result;
}

void sub_20B42CBA0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_20B42CBB4(_QWORD *a1, uint64_t a2, void *__dst)
{
  size_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  size_t v7;
  void *result;
  std::logic_error *exception;

  v3 = 2 * a2;
  v4 = a1[6];
  v5 = a1[7];
  v6 = v5 >= v4;
  v7 = v5 - v4;
  if (!v6)
    v7 = 0;
  if (v7 < v3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  result = memcpy(__dst, (const void *)(a1[3] + v4), v3);
  a1[6] += v3;
  return result;
}

void sub_20B42CC38(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_20B42CC4C(_QWORD *a1, uint64_t a2, void *__dst)
{
  size_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  size_t v7;
  void *result;
  std::logic_error *exception;

  v3 = 4 * a2;
  v4 = a1[6];
  v5 = a1[7];
  v6 = v5 >= v4;
  v7 = v5 - v4;
  if (!v6)
    v7 = 0;
  if (v7 < v3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  result = memcpy(__dst, (const void *)(a1[3] + v4), v3);
  a1[6] += v3;
  return result;
}

void sub_20B42CCD0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_20B42CCE4(_QWORD *a1, uint64_t a2, void *__dst)
{
  size_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  size_t v7;
  void *result;
  std::logic_error *exception;

  v3 = 8 * a2;
  v4 = a1[6];
  v5 = a1[7];
  v6 = v5 >= v4;
  v7 = v5 - v4;
  if (!v6)
    v7 = 0;
  if (v7 < v3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  result = memcpy(__dst, (const void *)(a1[3] + v4), v3);
  a1[6] += v3;
  return result;
}

void sub_20B42CD68(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_20B42CD7C(_QWORD *a1, uint64_t a2, void *__dst)
{
  size_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  size_t v7;
  void *result;
  std::logic_error *exception;

  v3 = 8 * a2;
  v4 = a1[6];
  v5 = a1[7];
  v6 = v5 >= v4;
  v7 = v5 - v4;
  if (!v6)
    v7 = 0;
  if (v7 < v3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  result = memcpy(__dst, (const void *)(a1[3] + v4), v3);
  a1[6] += v3;
  return result;
}

void sub_20B42CE00(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_20B42CE14(_QWORD *a1, uint64_t a2, void *__dst)
{
  size_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  size_t v7;
  void *result;
  std::logic_error *exception;

  v3 = 4 * a2;
  v4 = a1[6];
  v5 = a1[7];
  v6 = v5 >= v4;
  v7 = v5 - v4;
  if (!v6)
    v7 = 0;
  if (v7 < v3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  result = memcpy(__dst, (const void *)(a1[3] + v4), v3);
  a1[6] += v3;
  return result;
}

void sub_20B42CE98(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_20B42CEAC(_QWORD *a1, uint64_t a2, void *__dst)
{
  size_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  size_t v7;
  void *result;
  std::logic_error *exception;

  v3 = 8 * a2;
  v4 = a1[6];
  v5 = a1[7];
  v6 = v5 >= v4;
  v7 = v5 - v4;
  if (!v6)
    v7 = 0;
  if (v7 < v3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  result = memcpy(__dst, (const void *)(a1[3] + v4), v3);
  a1[6] += v3;
  return result;
}

void sub_20B42CF30(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_20B42CF44(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  if (a2)
  {
    v5 = 24 * a2;
    do
    {
      sub_20B42BD80(a1, a3);
      a3 += 24;
      v5 -= 24;
    }
    while (v5);
  }
}

void *sub_20B42CF90(_QWORD *a1, uint64_t a2)
{
  size_t v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  size_t v6;
  void *result;
  std::logic_error *exception;

  v2 = *(_QWORD *)a2;
  v3 = a1[6];
  v4 = a1[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 < v2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20AEC74EC(exception, "Not enough data to read binary blob");
    __cxa_throw(exception, (struct type_info *)off_24C3F18D8, MEMORY[0x24BEDAB00]);
  }
  result = memcpy(*(void **)(a2 + 8), (const void *)(a1[3] + v3), v2);
  a1[6] += v2;
  return result;
}

void sub_20B42D014(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B42D034(_QWORD *result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result[7] - 8) + result[3];
  *(_QWORD *)(v1 + 10) = result[4] - v1 - 18;
  result[7] -= 8;
  return result;
}

char *sub_20B42D060(uint64_t a1, char *__src)
{
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, __src + 1, 1);
}

char *sub_20B42D07C(uint64_t a1, char *__src)
{
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, __src + 1, 1);
}

char *sub_20B42D098(uint64_t a1, char *__src)
{
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, __src + 2, 2);
}

char *sub_20B42D0B4(uint64_t a1, char *__src)
{
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, __src + 4, 4);
}

char *sub_20B42D0D0(uint64_t a1, char *__src)
{
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, __src + 8, 8);
}

char *sub_20B42D0EC(uint64_t a1, char *__src)
{
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, __src + 8, 8);
}

char *sub_20B42D108(uint64_t a1, char *__src)
{
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, __src + 1, 1);
}

char *sub_20B42D124(uint64_t a1, char *__src)
{
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, __src + 1, 1);
}

char *sub_20B42D140(uint64_t a1, char *__src)
{
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, __src + 2, 2);
}

char *sub_20B42D15C(uint64_t a1, char *__src)
{
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, __src + 4, 4);
}

char *sub_20B42D178(uint64_t a1, char *__src)
{
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, __src + 8, 8);
}

char *sub_20B42D194(uint64_t a1, char *__src)
{
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, __src + 8, 8);
}

char *sub_20B42D1B0(uint64_t a1, char *__src)
{
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, __src + 4, 4);
}

char *sub_20B42D1CC(uint64_t a1, char *__src)
{
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, __src + 8, 8);
}

char *sub_20B42D1E8(uint64_t a1, char *a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  BOOL v7;
  _BOOL4 v8;
  uint64_t __src;
  uint64_t v11;

  v2 = a2;
  v4 = a2[23];
  if ((v4 & 0x80u) != 0)
    v4 = *((_QWORD *)a2 + 1);
  __src = v4;
  v5 = a1 + 24;
  sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&v11, 8);
  if (v2[23] < 0)
  {
    v6 = *((_QWORD *)v2 + 1);
    if (*(_QWORD *)v2)
      v7 = 1;
    else
      v7 = v6 == 0;
    if (v7)
    {
      v2 = *(char **)v2;
    }
    else
    {
      v8 = sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACEBA, 0, (void (*)(void **))sub_20B532360);
      v2 = 0;
      if (v8)
        abort();
    }
  }
  else
  {
    v6 = v2[23];
  }
  return sub_20B42DB24(v5, *(char **)(a1 + 32), v2, &v2[v6], v6);
}

char *sub_20B42D2CC(uint64_t a1, int64_t a2, char *__src)
{
  if (!__src
    && a2
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACEBA, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, &__src[a2], a2);
}

char *sub_20B42D34C(uint64_t a1, int64_t a2, char *__src)
{
  if (!__src
    && a2
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACEBA, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, &__src[a2], a2);
}

char *sub_20B42D3CC(uint64_t a1, uint64_t a2, char *__src)
{
  int64_t v5;

  v5 = 2 * a2;
  if (!__src
    && v5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACEBA, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, &__src[v5], v5);
}

char *sub_20B42D44C(uint64_t a1, uint64_t a2, char *__src)
{
  int64_t v5;

  v5 = 4 * a2;
  if (!__src
    && v5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACEBA, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, &__src[v5], v5);
}

char *sub_20B42D4CC(uint64_t a1, uint64_t a2, char *__src)
{
  int64_t v5;

  v5 = 8 * a2;
  if (!__src
    && v5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACEBA, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, &__src[v5], v5);
}

char *sub_20B42D54C(uint64_t a1, uint64_t a2, char *__src)
{
  int64_t v5;

  v5 = 8 * a2;
  if (!__src
    && v5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACEBA, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, &__src[v5], v5);
}

char *sub_20B42D5CC(uint64_t a1, int64_t a2, char *__src)
{
  if (!__src
    && a2
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACEBA, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, &__src[a2], a2);
}

char *sub_20B42D64C(uint64_t a1, int64_t a2, char *__src)
{
  if (!__src
    && a2
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACEBA, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, &__src[a2], a2);
}

char *sub_20B42D6CC(uint64_t a1, uint64_t a2, char *__src)
{
  int64_t v5;

  v5 = 2 * a2;
  if (!__src
    && v5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACEBA, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, &__src[v5], v5);
}

char *sub_20B42D74C(uint64_t a1, uint64_t a2, char *__src)
{
  int64_t v5;

  v5 = 4 * a2;
  if (!__src
    && v5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACEBA, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, &__src[v5], v5);
}

char *sub_20B42D7CC(uint64_t a1, uint64_t a2, char *__src)
{
  int64_t v5;

  v5 = 8 * a2;
  if (!__src
    && v5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACEBA, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, &__src[v5], v5);
}

char *sub_20B42D84C(uint64_t a1, uint64_t a2, char *__src)
{
  int64_t v5;

  v5 = 8 * a2;
  if (!__src
    && v5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACEBA, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, &__src[v5], v5);
}

char *sub_20B42D8CC(uint64_t a1, uint64_t a2, char *__src)
{
  int64_t v5;

  v5 = 4 * a2;
  if (!__src
    && v5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACEBA, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, &__src[v5], v5);
}

char *sub_20B42D94C(uint64_t a1, uint64_t a2, char *__src)
{
  int64_t v5;

  v5 = 8 * a2;
  if (!__src
    && v5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACEBA, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), __src, &__src[v5], v5);
}

char *sub_20B42D9CC(char *result, uint64_t a2, uint64_t a3)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  char *v8;
  uint64_t v9;
  BOOL v10;
  _BOOL4 v11;
  uint64_t __src;
  uint64_t v13;

  if (a2)
  {
    v4 = result;
    v5 = (uint64_t)(result + 24);
    v6 = 24 * a2;
    do
    {
      v9 = *(unsigned __int8 *)(a3 + 23);
      if ((v9 & 0x80u) != 0)
        v9 = *(_QWORD *)(a3 + 8);
      __src = v9;
      sub_20B42DB24(v5, *((char **)v4 + 4), (char *)&__src, (char *)&v13, 8);
      if (*(char *)(a3 + 23) < 0)
      {
        v8 = *(char **)a3;
        v7 = *(_QWORD *)(a3 + 8);
        if (*(_QWORD *)a3)
          v10 = 1;
        else
          v10 = v7 == 0;
        if (!v10)
        {
          v11 = sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5ACEBA, 0, (void (*)(void **))sub_20B532360);
          v8 = 0;
          if (v11)
            abort();
        }
      }
      else
      {
        v7 = *(unsigned __int8 *)(a3 + 23);
        v8 = (char *)a3;
      }
      result = sub_20B42DB24(v5, *((char **)v4 + 4), v8, &v8[v7], v7);
      a3 += 24;
      v6 -= 24;
    }
    while (v6);
  }
  return result;
}

char *sub_20B42DAEC(uint64_t a1, uint64_t a2)
{
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), *(char **)(a2 + 8), (char *)(*(_QWORD *)(a2 + 8) + *(_QWORD *)a2), *(_QWORD *)a2);
}

char *sub_20B42DB04(uint64_t a1, uint64_t a2)
{
  return sub_20B42DB24(a1 + 24, *(char **)(a1 + 32), *(char **)(a2 + 8), (char *)(*(_QWORD *)(a2 + 8) + *(_QWORD *)a2), *(_QWORD *)a2);
}

char *sub_20B42DB24(uint64_t a1, char *__dst, char *__src, char *a4, int64_t a5)
{
  char *v5;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  size_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  int64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  unint64_t v24;
  char *v25;
  unint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  unint64_t v30;
  char *v31;
  _OWORD *v32;
  __int128 *v33;
  unint64_t v34;
  __int128 v35;
  char v36;
  char *v37;
  char *v38;
  unint64_t v39;
  __int128 v40;
  char *v41;
  _QWORD *v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  char v46;
  char *v47;
  char *v48;
  char *v49;

  v5 = __dst;
  if (a5 < 1)
    return v5;
  v10 = *(char **)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9 - (uint64_t)v10 < a5)
  {
    v11 = *(char **)a1;
    v12 = (uint64_t)&v10[a5 - *(_QWORD *)a1];
    if (v12 < 0)
      sub_20AF4BAC0();
    v13 = (char *)(__dst - v11);
    v14 = v9 - (_QWORD)v11;
    if (2 * v14 > v12)
      v12 = 2 * v14;
    if (v14 >= 0x3FFFFFFFFFFFFFFFLL)
      v15 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v15 = v12;
    if (v15)
      v16 = operator new(v15);
    else
      v16 = 0;
    v25 = &v13[(_QWORD)v16];
    memcpy(&v13[(_QWORD)v16], __src, a5);
    v26 = v5 - v11;
    v27 = &v13[(_QWORD)v16];
    if (v11 == v5)
      goto LABEL_47;
    v28 = v5;
    v29 = v25;
    if (v26 >= 8)
    {
      v28 = v5;
      v29 = v25;
      if ((unint64_t)(v11 - (_BYTE *)v16) >= 0x20)
      {
        if (v26 < 0x20)
        {
          v30 = 0;
          goto LABEL_39;
        }
        v30 = v26 & 0xFFFFFFFFFFFFFFE0;
        v37 = v5 - 16;
        v38 = (char *)v16 + v5 - 16 - v11;
        v39 = v26 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v40 = *(_OWORD *)v37;
          *((_OWORD *)v38 - 1) = *((_OWORD *)v37 - 1);
          *(_OWORD *)v38 = v40;
          v38 -= 32;
          v37 -= 32;
          v39 -= 32;
        }
        while (v39);
        if (v26 == v30)
          goto LABEL_46;
        if ((v26 & 0x18) != 0)
        {
LABEL_39:
          v28 = &v5[-(v26 & 0xFFFFFFFFFFFFFFF8)];
          v29 = &v25[-(v26 & 0xFFFFFFFFFFFFFFF8)];
          v41 = &v5[-v30 - 8];
          v42 = (char *)v16 + v41 - v11;
          v43 = v30 - (v26 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            v44 = *(_QWORD *)v41;
            v41 -= 8;
            *v42-- = v44;
            v43 += 8;
          }
          while (v43);
          if (v26 == (v26 & 0xFFFFFFFFFFFFFFF8))
            goto LABEL_46;
          goto LABEL_44;
        }
        v29 = &v25[-v30];
        v28 = &v5[-v30];
      }
    }
LABEL_44:
    v45 = v29 - 1;
    do
    {
      v46 = *--v28;
      *v45-- = v46;
    }
    while (v28 != v11);
LABEL_46:
    v10 = *(char **)(a1 + 8);
    v27 = (char *)v16;
LABEL_47:
    v47 = &v25[a5];
    v48 = (char *)v16 + v15;
    if (v10 != v5)
      memmove(v47, v5, v10 - v5);
    v49 = *(char **)a1;
    *(_QWORD *)a1 = v27;
    *(_QWORD *)(a1 + 8) = &v47[v10 - v5];
    *(_QWORD *)(a1 + 16) = v48;
    if (v49)
      operator delete(v49);
    return v25;
  }
  v17 = v10 - __dst;
  if (v10 - __dst >= a5)
  {
    v18 = &__src[a5];
    v20 = *(char **)(a1 + 8);
    v21 = &__dst[a5];
    v22 = &v10[-a5];
    v23 = v20;
    if ((unint64_t)v10 < a5)
      goto LABEL_31;
    goto LABEL_18;
  }
  v18 = &__src[v17];
  v19 = a4 - &__src[v17];
  if (a4 != &__src[v17])
    memmove(*(void **)(a1 + 8), &__src[v17], a4 - &__src[v17]);
  v20 = &v10[v19];
  *(_QWORD *)(a1 + 8) = &v10[v19];
  if (v17 >= 1)
  {
    v21 = &v5[a5];
    v22 = &v20[-a5];
    v23 = &v10[v19];
    if (&v20[-a5] >= v10)
      goto LABEL_31;
LABEL_18:
    v24 = &v10[a5] - v20;
    if (v24 >= 0x20)
    {
      v23 = v20;
      if ((unint64_t)a5 >= 0x20)
      {
        v31 = &v22[v24 & 0xFFFFFFFFFFFFFFE0];
        v23 = &v20[v24 & 0xFFFFFFFFFFFFFFE0];
        v32 = v20 + 16;
        v33 = (__int128 *)(v22 + 16);
        v34 = v24 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v35 = *v33;
          *(v32 - 1) = *(v33 - 1);
          *v32 = v35;
          v32 += 2;
          v33 += 2;
          v34 -= 32;
        }
        while (v34);
        v22 = v31;
        if (v24 == (v24 & 0xFFFFFFFFFFFFFFE0))
          goto LABEL_31;
      }
    }
    else
    {
      v23 = v20;
    }
    do
    {
      v36 = *v22++;
      *v23++ = v36;
    }
    while (v22 != v10);
LABEL_31:
    *(_QWORD *)(a1 + 8) = v23;
    if (v20 != v21)
      memmove(v21, v5, v20 - v21);
    if (v18 != __src)
      memmove(v5, __src, v18 - __src);
  }
  return v5;
}

_QWORD *sub_20B42DE30(uint64_t a1, _QWORD **a2, uint64_t *a3)
{
  _QWORD *v3;
  unsigned __int8 *v6;
  std::string *v7;
  std::string::size_type size;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  std::string *v12;
  std::string::size_type v13;
  std::string v14;

  v3 = *a2;
  if (*a3 <= 0)
    return sub_20AEC01D0(v3, (uint64_t)"{}", 2);
  sub_20AEC01D0(v3, (uint64_t)"{", 1);
  v6 = (unsigned __int8 *)a3[1];
  std::to_string(&v14, *v6);
  if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v7 = &v14;
  else
    v7 = (std::string *)v14.__r_.__value_.__r.__words[0];
  if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v14.__r_.__value_.__r.__words[2]);
  else
    size = v14.__r_.__value_.__l.__size_;
  sub_20AEC01D0(*a2, (uint64_t)v7, size);
  if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    v9 = (unsigned __int8 *)(a3[1] + *a3);
    v10 = v6 + 1;
    if (v10 == v9)
      return sub_20AEC01D0(*a2, (uint64_t)"}", 1);
    do
    {
LABEL_15:
      sub_20AEC01D0(*a2, (uint64_t)",", 1);
      std::to_string(&v14, *v10);
      if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v12 = &v14;
      else
        v12 = (std::string *)v14.__r_.__value_.__r.__words[0];
      if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v13 = HIBYTE(v14.__r_.__value_.__r.__words[2]);
      else
        v13 = v14.__r_.__value_.__l.__size_;
      sub_20AEC01D0(*a2, (uint64_t)v12, v13);
      if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v14.__r_.__value_.__l.__data_);
      ++v10;
    }
    while (v10 != v9);
    return sub_20AEC01D0(*a2, (uint64_t)"}", 1);
  }
  operator delete(v14.__r_.__value_.__l.__data_);
  v9 = (unsigned __int8 *)(a3[1] + *a3);
  v10 = v6 + 1;
  if (v10 != v9)
    goto LABEL_15;
  return sub_20AEC01D0(*a2, (uint64_t)"}", 1);
}

void sub_20B42DF9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::thread *sub_20B42DFBC(std::thread *this)
{
  int t;
  _opaque_pthread_t *v3;
  uint64_t v4;
  std::__libcpp_thread_t v5;
  std::__libcpp_thread_t p_cleanup_stack;
  std::__libcpp_thread_t v7;
  _opaque_pthread_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::thread *v12;
  uint64_t v13;
  std::thread *v14;
  uint64_t v15;
  _opaque_pthread_t *v16;
  std::__libcpp_thread_t v17;
  std::__libcpp_thread_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;

  atomic_store(0, (unsigned __int8 *)&this[4]);
  t = (int)this[1].__t_;
  if ((t & 0x80000000) == 0)
  {
    if (shutdown((int)this[1].__t_, 2) < 0)
      __error();
    close(t);
  }
  if (this[2].__t_)
    std::thread::join(this + 2);
  if (this[3].__t_)
    std::thread::join(this + 3);
  std::mutex::lock((std::mutex *)&this[5]);
  v3 = this[13].__t_;
  if (this[14].__t_ != v3)
  {
    do
    {
      v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3->__sig + 24))(v3->__sig);
      v22 = 2;
      v5 = this[23].__t_;
      if (!v5)
        sub_20AECABA4();
      (*(void (**)(std::__libcpp_thread_t, uint64_t, char *))(v5->__sig + 48))(v5, v4, &v22);
      p_cleanup_stack = (std::__libcpp_thread_t)&v3->__cleanup_stack;
      v7 = this[14].__t_;
      if (&v3->__cleanup_stack == (__darwin_pthread_handler_rec **)v7)
      {
        v8 = v3;
      }
      else
      {
        do
        {
          v9 = *(_QWORD *)&p_cleanup_stack[-1].__opaque[8168];
          *(_QWORD *)&p_cleanup_stack[-1].__opaque[8168] = p_cleanup_stack->__sig;
          p_cleanup_stack->__sig = 0;
          if (v9)
            (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
          p_cleanup_stack = (std::__libcpp_thread_t)((char *)p_cleanup_stack + 8);
        }
        while (p_cleanup_stack != v7);
        v8 = (std::__libcpp_thread_t)((char *)p_cleanup_stack - 8);
        p_cleanup_stack = this[14].__t_;
      }
      while (p_cleanup_stack != v8)
      {
        v11 = *(_QWORD *)&p_cleanup_stack[-1].__opaque[8168];
        p_cleanup_stack = (std::__libcpp_thread_t)((char *)p_cleanup_stack - 8);
        v10 = v11;
        p_cleanup_stack->__sig = 0;
        if (v11)
          (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
      }
      this[14].__t_ = v8;
    }
    while (v8 != v3);
  }
  std::mutex::unlock((std::mutex *)&this[5]);
  v12 = (std::thread *)this[23].__t_;
  if (v12 == &this[20])
  {
    v13 = 4;
    v12 = this + 20;
  }
  else
  {
    if (!v12)
      goto LABEL_26;
    v13 = 5;
  }
  (*((void (**)(void))&v12->__t_->__sig + v13))();
LABEL_26:
  v14 = (std::thread *)this[19].__t_;
  if (v14 == &this[16])
  {
    v15 = 4;
    v14 = this + 16;
  }
  else
  {
    if (!v14)
      goto LABEL_31;
    v15 = 5;
  }
  (*((void (**)(void))&v14->__t_->__sig + v15))();
LABEL_31:
  v16 = this[13].__t_;
  if (v16)
  {
    v17 = this[14].__t_;
    v18 = this[13].__t_;
    if (v17 != v16)
    {
      do
      {
        v20 = *(_QWORD *)&v17[-1].__opaque[8168];
        v17 = (std::__libcpp_thread_t)((char *)v17 - 8);
        v19 = v20;
        v17->__sig = 0;
        if (v20)
          (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
      }
      while (v17 != v16);
      v18 = this[13].__t_;
    }
    this[14].__t_ = v16;
    operator delete(v18);
  }
  std::mutex::~mutex((std::mutex *)&this[5]);
  std::thread::~thread(this + 3);
  std::thread::~thread(this + 2);
  return this;
}

void sub_20B42E1EC(void *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  sub_20AEC01C0(a1);
}

void sub_20B42E200(void *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  sub_20AEC01C0(a1);
}

void sub_20B42E218(std::thread *a1)
{
  sub_20B42DFBC(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B42E23C(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t result;
  _DWORD v4[6];
  int v5;
  std::string v6;
  _QWORD v7[5];
  _QWORD *v8;

  v5 = 0;
  sub_20AEF7244(v4, "Failed to start server on port ");
  std::to_string(&v6, *a2);
  v7[0] = v4;
  v7[1] = &v6;
  v7[2] = v4;
  v7[3] = &v6;
  v7[4] = &v6;
  if (v5 == -1)
    sub_20AECFAB8();
  v8 = v7;
  ((void (*)(_QWORD **, _DWORD *))off_24C41C778[v5])(&v8, v4);
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v6.__r_.__value_.__l.__data_);
  if (v5 == -1)
    sub_20AECFAB8();
  v7[0] = &v6;
  result = ((uint64_t (*)(_QWORD *, _DWORD *))off_24C41C790[v5])(v7, v4);
  if (v5 != -1)
    return ((uint64_t (*)(_QWORD *, _DWORD *))off_24C41C760[v5])(v7, v4);
  return result;
}

void sub_20B42E33C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B42E358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_20AECFA60((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x20B42E348);
}

uint64_t sub_20B42E37C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)(a2 + 23) = 9;
  strcpy((char *)a2, "localhost");
  *(_WORD *)(a2 + 24) = *(_WORD *)(result + 12);
  return result;
}

uint64_t sub_20B42E3A8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;

  if (a3)
    v3 = 3;
  else
    v3 = 2;
  sub_20B42E3D4(a1, a2, v3, 0, 0);
  return 1;
}

void sub_20B42E3D4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, unsigned __int8 a5)
{
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t (**v13)();
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unsigned __int8 *v21;
  unsigned __int8 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (**v25)();
  _BYTE *v26;
  _BYTE *v27;
  size_t v28;
  char *v29;
  _BYTE *v30;
  _BYTE *v31;
  int64_t v32;
  char *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  std::mutex *v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t (**v47)();
  uint64_t v48;
  uint64_t (**v49)();
  void *v50[2];
  char *v51;
  void *__p[2];
  char *v53;

  v44 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  v11 = *(_QWORD **)(a1 + 104);
  v10 = *(_QWORD **)(a1 + 112);
  if (v11 != v10)
  {
    v12 = a5;
    v13 = &off_24C41C2C8;
    v46 = v12;
    v45 = a3;
    do
    {
      if (!v12)
      {
        v14 = v11 + 1;
        if (v11 + 1 == v10)
        {
LABEL_31:
          v23 = *v11;
          v34 = *(_QWORD *)(a2 + 8);
          v47 = v13;
          v48 = v34;
          v49 = v13 + 42;
          *(_OWORD *)v50 = *(_OWORD *)(a2 + 24);
          v51 = *(char **)(a2 + 40);
          *(_QWORD *)(a2 + 32) = 0;
          *(_QWORD *)(a2 + 40) = 0;
          *(_QWORD *)(a2 + 24) = 0;
          *(_OWORD *)__p = *(_OWORD *)(a2 + 48);
          v53 = *(char **)(a2 + 64);
          *(_QWORD *)(a2 + 56) = 0;
          *(_QWORD *)(a2 + 64) = 0;
          v14 = v10;
          *(_QWORD *)(a2 + 48) = 0;
        }
        else
        {
          v23 = *v11;
          v24 = *(_QWORD *)(a2 + 8);
          v47 = v13;
          v48 = v24;
          v25 = v13;
          v49 = v13 + 42;
          v50[1] = 0;
          v51 = 0;
          v50[0] = 0;
          v27 = *(_BYTE **)(a2 + 24);
          v26 = *(_BYTE **)(a2 + 32);
          v28 = v26 - v27;
          if (v26 != v27)
          {
            if ((v28 & 0x8000000000000000) != 0)
              sub_20AF4BAC0();
            v50[0] = operator new(v26 - v27);
            v50[1] = v50[0];
            v29 = (char *)v50[0] + v28;
            v51 = (char *)v50[0] + v28;
            memcpy(v50[0], v27, v28);
            v50[1] = v29;
          }
          __p[0] = 0;
          __p[1] = 0;
          v53 = 0;
          v31 = *(_BYTE **)(a2 + 48);
          v30 = *(_BYTE **)(a2 + 56);
          v32 = v30 - v31;
          if (v30 != v31)
          {
            if (v32 < 0)
              sub_20B4268F4();
            __p[0] = operator new(v30 - v31);
            __p[1] = __p[0];
            v33 = (char *)__p[0] + 8 * (v32 >> 3);
            v53 = v33;
            memcpy(__p[0], v31, v32);
            __p[1] = v33;
          }
          a3 = v45;
          v12 = v46;
          v13 = v25;
        }
        v35 = (*(uint64_t (**)(uint64_t, uint64_t (***)(), uint64_t))(*(_QWORD *)v23 + 48))(v23, &v47, a3);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        if (v50[0])
        {
          v50[1] = v50[0];
          operator delete(v50[0]);
        }
        if ((v35 & 1) == 0)
        {
          v36 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*v11 + 24))(*v11);
          LOBYTE(v47) = 2;
          v37 = *(_QWORD *)(a1 + 184);
          if (!v37)
            sub_20AECABA4();
          (*(void (**)(uint64_t, uint64_t, uint64_t (***)()))(*(_QWORD *)v37 + 48))(v37, v36, &v47);
          v38 = v11 + 1;
          v39 = *(_QWORD **)(a1 + 112);
          if (v11 + 1 == v39)
          {
            v40 = v11;
          }
          else
          {
            do
            {
              v41 = *(v38 - 1);
              *(v38 - 1) = *v38;
              *v38 = 0;
              if (v41)
                (*(void (**)(uint64_t))(*(_QWORD *)v41 + 8))(v41);
              ++v38;
            }
            while (v38 != v39);
            v40 = v38 - 1;
            v38 = *(_QWORD **)(a1 + 112);
          }
          while (v38 != v40)
          {
            v43 = *--v38;
            v42 = v43;
            *v38 = 0;
            if (v43)
              (*(void (**)(uint64_t))(*(_QWORD *)v42 + 8))(v42);
          }
          *(_QWORD *)(a1 + 112) = v40;
          v14 = v11;
        }
        goto LABEL_5;
      }
      v15 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*v11 + 24))(*v11);
      v16 = v15;
      v17 = *(unsigned __int8 *)(v15 + 23);
      if ((v17 & 0x80u) == 0)
        v18 = *(unsigned __int8 *)(v15 + 23);
      else
        v18 = *(_QWORD *)(v15 + 8);
      v19 = a4[23];
      v20 = (char)v19;
      if ((v19 & 0x80u) != 0)
        v19 = *((_QWORD *)a4 + 1);
      if (v18 == v19)
      {
        if (v20 >= 0)
          v21 = a4;
        else
          v21 = *(unsigned __int8 **)a4;
        if ((v17 & 0x80) != 0)
        {
          if (memcmp(*(const void **)v15, v21, *(_QWORD *)(v15 + 8)))
            goto LABEL_4;
        }
        else if (*(_BYTE *)(v15 + 23))
        {
          v22 = (unsigned __int8 *)v15;
          while (*v22 == *v21)
          {
            ++v22;
            ++v21;
            if (!--v17)
              goto LABEL_21;
          }
          goto LABEL_4;
        }
LABEL_21:
        if (*(unsigned __int16 *)(v16 + 24) == *((unsigned __int16 *)a4 + 12))
        {
          v10 = v11 + 1;
          goto LABEL_31;
        }
      }
LABEL_4:
      v14 = v11 + 1;
LABEL_5:
      v10 = *(_QWORD **)(a1 + 112);
      v11 = v14;
    }
    while (v14 != v10);
  }
  std::mutex::unlock(v44);
}

void sub_20B42E750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  void *v24;

  if (__p)
  {
    operator delete(__p);
    v24 = a19;
    if (!a19)
    {
LABEL_3:
      std::mutex::unlock(a9);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v24 = a19;
    if (!a19)
      goto LABEL_3;
  }
  operator delete(v24);
  std::mutex::unlock(a9);
  _Unwind_Resume(a1);
}

void sub_20B42E7BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9)
{
  std::mutex::unlock(a9);
  _Unwind_Resume(a1);
}

void sub_20B42E7D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9)
{
  std::mutex::unlock(a9);
  _Unwind_Resume(a1);
}

void sub_20B42E7E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9)
{
  std::mutex::unlock(a9);
  _Unwind_Resume(a1);
}

void sub_20B42E7F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_20B42B438(&a16);
  std::mutex::unlock(a9);
  _Unwind_Resume(a1);
}

void sub_20B42E814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9)
{
  std::mutex::unlock(a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20B42E828(uint64_t a1, unsigned __int8 *a2, uint64_t a3, int a4)
{
  uint64_t v5;

  if (a4)
    v5 = 3;
  else
    v5 = 2;
  sub_20B42E3D4(a1, a3, v5, a2, 1u);
  return 1;
}

_QWORD *sub_20B42E860(_QWORD *a1, unsigned int a2, _QWORD *a3)
{
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  std::string *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  std::string *v14;
  uint64_t v15;
  uint64_t v16;
  std::__thread_struct *v17;
  _QWORD *v18;
  int v19;
  std::__thread_struct *v20;
  _QWORD *v21;
  uint64_t v22;
  std::string::__raw *v23;
  uint64_t v24;
  std::logic_error *exception;
  unsigned __int16 v27;
  _QWORD v28[3];
  std::string *v29;
  _QWORD v30[3];
  _QWORD *v31;
  std::string v32;
  std::string *v33;
  _QWORD v34[3];
  _QWORD *v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  *a1 = &off_24C41C680;
  v6 = (_QWORD *)a3[3];
  if (v6)
  {
    if (v6 == a3)
    {
      v29 = (std::string *)v28;
      (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v28);
    }
    else
    {
      v29 = (std::string *)a3[3];
      a3[3] = 0;
    }
  }
  else
  {
    v29 = 0;
  }
  v7 = v30;
  v8 = (_QWORD *)a3[7];
  if (v8)
  {
    if (v8 == a3 + 4)
    {
      v31 = v30;
      (*(void (**)(_QWORD *, _QWORD *))(*v8 + 24))(v8, v30);
    }
    else
    {
      v31 = (_QWORD *)a3[7];
      a3[7] = 0;
    }
  }
  else
  {
    v31 = 0;
  }
  v27 = a2;
  v9 = operator new();
  if (v29)
  {
    if (v29 == (std::string *)v28)
    {
      v33 = &v32;
      (*(void (**)(_QWORD *, std::string *))(v28[0] + 24))(v28, &v32);
    }
    else
    {
      v33 = v29;
      v29 = 0;
    }
  }
  else
  {
    v33 = 0;
  }
  v10 = &v32;
  v11 = v34;
  if (!v31)
    goto LABEL_19;
  if (v31 != v30)
  {
    v10 = (std::string *)v28;
    v35 = v31;
LABEL_19:
    v10[2].__r_.__value_.__l.__size_ = 0;
    goto LABEL_21;
  }
  v35 = v34;
  (*(void (**)(_QWORD *, _QWORD *))(v30[0] + 24))(v30, v34);
LABEL_21:
  *(_QWORD *)v9 = &off_24C41C6F0;
  *(_DWORD *)(v9 + 8) = -1;
  *(_QWORD *)(v9 + 16) = 0;
  v12 = (_QWORD *)(v9 + 16);
  *(_WORD *)(v9 + 12) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  *(_BYTE *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 40) = 850045863;
  *(_OWORD *)(v9 + 48) = 0u;
  *(_OWORD *)(v9 + 64) = 0u;
  *(_OWORD *)(v9 + 80) = 0u;
  *(_OWORD *)(v9 + 96) = 0u;
  *(_OWORD *)(v9 + 112) = 0u;
  if (v33)
  {
    if (v33 == &v32)
    {
      *(_QWORD *)(v9 + 152) = v9 + 128;
      (*(void (**)(std::string *))(v32.__r_.__value_.__r.__words[0] + 24))(&v32);
    }
    else
    {
      *(_QWORD *)(v9 + 152) = v33;
      v33 = 0;
    }
  }
  else
  {
    *(_QWORD *)(v9 + 152) = 0;
  }
  if (v35)
  {
    if (v35 == v34)
    {
      *(_QWORD *)(v9 + 184) = v9 + 160;
      (*(void (**)(_QWORD *))(v34[0] + 24))(v34);
    }
    else
    {
      *(_QWORD *)(v9 + 184) = v35;
      v35 = 0;
    }
  }
  else
  {
    *(_QWORD *)(v9 + 184) = 0;
  }
  a1[1] = v9;
  a1[2] = sub_20B42F3C8;
  if (v35 == v34)
  {
    v13 = 4;
  }
  else
  {
    if (!v35)
      goto LABEL_36;
    v13 = 5;
    v11 = v35;
  }
  (*(void (**)(_QWORD *))(*v11 + 8 * v13))(v11);
LABEL_36:
  v14 = v33;
  if (v33 == &v32)
  {
    v15 = 4;
    v14 = &v32;
    goto LABEL_40;
  }
  if (v33)
  {
    v15 = 5;
LABEL_40:
    (*(void (**)(void))(v14->__r_.__value_.__r.__words[0] + 8 * v15))();
  }
  v16 = sub_20B4275E4(a2);
  if ((v16 & 0xFF00000000) == 0)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20B42E23C((uint64_t)&v32, &v27);
    std::logic_error::logic_error(exception, &v32);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  *(_DWORD *)(v9 + 8) = v16;
  *(_WORD *)(v9 + 12) = a2;
  atomic_store(1u, (unsigned __int8 *)(v9 + 32));
  v17 = (std::__thread_struct *)operator new();
  std::__thread_struct::__thread_struct(v17);
  v18 = (_QWORD *)operator new();
  *v18 = v17;
  v18[1] = v9;
  v19 = pthread_create((pthread_t *)&v32, 0, (void *(__cdecl *)(void *))sub_20B42F3F4, v18);
  if (v19)
    goto LABEL_59;
  if (*v12)
    goto LABEL_57;
  *v12 = v32.__r_.__value_.__r.__words[0];
  v32.__r_.__value_.__r.__words[0] = 0;
  std::thread::~thread((std::thread *)&v32);
  v20 = (std::__thread_struct *)operator new();
  std::__thread_struct::__thread_struct(v20);
  v21 = (_QWORD *)operator new();
  *v21 = v20;
  v21[1] = v9;
  v19 = pthread_create((pthread_t *)&v32, 0, (void *(__cdecl *)(void *))sub_20B42FA88, v21);
  if (v19)
  {
LABEL_59:
    std::__throw_system_error(v19, "thread constructor failed");
    __break(1u);
  }
  if (*(_QWORD *)(v9 + 24))
LABEL_57:
    std::terminate();
  *(_QWORD *)(v9 + 24) = v32.__r_.__value_.__r.__words[0];
  v32.__r_.__value_.__r.__words[0] = 0;
  std::thread::~thread((std::thread *)&v32);
  if (v31 == v30)
  {
    v22 = 4;
  }
  else
  {
    if (!v31)
      goto LABEL_51;
    v22 = 5;
    v7 = v31;
  }
  (*(void (**)(_QWORD *))(*v7 + 8 * v22))(v7);
LABEL_51:
  v23 = (std::string::__raw *)v29;
  if (v29 == (std::string *)v28)
  {
    v24 = 4;
    v23 = (std::string::__raw *)v28;
    goto LABEL_55;
  }
  if (v29)
  {
    v24 = 5;
LABEL_55:
    (*(void (**)(void))(v23->__words[0] + 8 * v24))();
  }
  return a1;
}

void sub_20B42ED40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B42EE54(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v2)
    (*(void (**)(void))(a1 + 16))();
  return a1;
}

void sub_20B42EE8C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v2)
    (*(void (**)(void))(a1 + 16))();
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B42EED4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *(_BYTE *)(a2 + 23) = 9;
  strcpy((char *)a2, "localhost");
  *(_WORD *)(a2 + 24) = *(_WORD *)(v2 + 12);
  return result;
}

uint64_t sub_20B42EF04(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 8);
  if (a3)
    v4 = 3;
  else
    v4 = 2;
  sub_20B42E3D4(v3, a2, v4, 0, 0);
  return 1;
}

uint64_t sub_20B42EF34(uint64_t a1, unsigned __int8 *a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a1 + 8);
  if (a4)
    v6 = 3;
  else
    v6 = 2;
  sub_20B42E3D4(v5, a3, v6, a2, 1u);
  return 1;
}

std::string *sub_20B42EF70@<X0>(unsigned __int16 *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, std::string::size_type *a4@<X8>)
{
  std::string::size_type v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  unsigned __int8 v13;
  uint64_t v14;
  std::string *result;
  uint64_t v16;
  void *__p[2];
  uint64_t v18;
  char v19;
  std::string v20;
  std::string *v21;
  _BYTE v22[24];
  _BYTE *v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v8 = operator new();
  v9 = *a1;
  v10 = (_QWORD *)a2[3];
  if (v10)
  {
    if (v10 == a2)
    {
      v21 = &v20;
      (*(void (**)(_QWORD *, std::string *))(*a2 + 24))(a2, &v20);
    }
    else
    {
      v21 = (std::string *)a2[3];
      a2[3] = 0;
    }
  }
  else
  {
    v21 = 0;
  }
  v11 = v22;
  v12 = (_QWORD *)a2[7];
  if (v12)
  {
    if (v12 == a2 + 4)
    {
      v23 = v22;
      (*(void (**)(_QWORD *, _BYTE *))(*v12 + 24))(v12, v22);
    }
    else
    {
      v23 = (_BYTE *)a2[7];
      a2[7] = 0;
    }
  }
  else
  {
    v23 = 0;
  }
  LOBYTE(__p[0]) = 0;
  v19 = 0;
  if (*(_BYTE *)(a3 + 24))
  {
    *(_OWORD *)__p = *(_OWORD *)a3;
    v18 = *(_QWORD *)(a3 + 16);
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_QWORD *)a3 = 0;
    v19 = 1;
  }
  v13 = atomic_load((unsigned __int8 *)&qword_25463D088);
  if ((v13 & 1) == 0 && __cxa_guard_acquire(&qword_25463D088))
  {
    sub_20B423754((uint64_t)&unk_25463CFB0);
    __cxa_atexit((void (*)(void *))sub_20B4237F4, &unk_25463CFB0, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463D088);
  }
  sub_20B424FD8(v8, v9, &v20, (__int128 *)__p, (std::mutex *)&unk_25463CFB0);
  *a4 = v8;
  if (v19)
  {
    if (SHIBYTE(v18) < 0)
      operator delete(__p[0]);
  }
  if (v23 == v22)
  {
    v14 = 4;
  }
  else
  {
    if (!v23)
      goto LABEL_22;
    v14 = 5;
    v11 = v23;
  }
  (*(void (**)(_QWORD *))(*v11 + 8 * v14))(v11);
LABEL_22:
  result = v21;
  if (v21 == &v20)
  {
    v16 = 4;
    result = &v20;
  }
  else
  {
    if (!v21)
      return result;
    v16 = 5;
  }
  return (std::string *)(*(uint64_t (**)(void))(result->__r_.__value_.__r.__words[0] + 8 * v16))();
}

void sub_20B42F1B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;

  __cxa_guard_abort(&qword_25463D088);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  sub_20B229034(&a17);
  MEMORY[0x20BD3583C](v17, 0x10B3C408108F89CLL);
  _Unwind_Resume(a1);
}

uint64_t sub_20B42F21C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v2)
  {
    sub_20B423BA0(*(std::mutex **)(v2 + 40), v2);
    if (*(char *)(v2 + 31) < 0)
      operator delete(*(void **)(v2 + 8));
    MEMORY[0x20BD3583C](v2, 0x10B3C408108F89CLL);
  }
  return a1;
}

void sub_20B42F280(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v1)
  {
    sub_20B423BA0(*(std::mutex **)(v1 + 40), v1);
    if (*(char *)(v1 + 31) < 0)
      operator delete(*(void **)(v1 + 8));
    MEMORY[0x20BD3583C](v1, 0x10B3C408108F89CLL);
  }
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B42F2F4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __int128 v4;

  v3 = result[1];
  if (*(char *)(v3 + 31) < 0)
  {
    result = sub_20AEC60F4((_BYTE *)a2, *(void **)(v3 + 8), *(_QWORD *)(v3 + 16));
  }
  else
  {
    v4 = *(_OWORD *)(v3 + 8);
    *(_QWORD *)(a2 + 16) = *(_QWORD *)(v3 + 24);
    *(_OWORD *)a2 = v4;
  }
  *(_WORD *)(a2 + 24) = *(_WORD *)(v3 + 32);
  return result;
}

uint64_t sub_20B42F358(uint64_t a1, uint64_t a2, int a3)
{
  int v3;

  if (a3)
    v3 = 3;
  else
    v3 = 2;
  sub_20B424484(*(std::mutex **)(*(_QWORD *)(a1 + 8) + 40), *(_QWORD *)(a1 + 8), a2, v3, 0, 0);
  return 1;
}

uint64_t sub_20B42F394(uint64_t a1, unsigned __int8 *a2, uint64_t a3, int a4)
{
  int v4;

  if (a4)
    v4 = 3;
  else
    v4 = 2;
  sub_20B424484(*(std::mutex **)(*(_QWORD *)(a1 + 8) + 40), *(_QWORD *)(a1 + 8), a3, v4, a2, 1u);
  return 1;
}

std::thread *sub_20B42F3C8(std::thread *result)
{
  if (result)
  {
    sub_20B42DFBC(result);
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20B42F3F4(uint64_t a1)
{
  std::__thread_specific_ptr<std::__thread_struct> *v2;
  const void *v3;
  uint64_t v4;
  void **v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  uint64_t v8;
  std::mutex *v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t *v26;
  char *v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  char *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _WORD *v45;
  unsigned __int8 v46;
  const void *v47;
  uint64_t v48;
  std::string *v50;
  uint64_t v51;
  _DWORD *v52;
  void *v53;
  void *v54;
  char *v55;
  void *v56;
  void *v57;
  uint64_t v58;
  void *__p[2];
  char v60;
  std::string v61;
  std::string **v62;
  _DWORD v63[6];
  uint64_t v64;
  uint64_t v65;

  v65 = *MEMORY[0x24BDAC8D0];
  v2 = std::__thread_local_data();
  v3 = *(const void **)a1;
  *(_QWORD *)a1 = 0;
  pthread_setspecific(v2->__key_, v3);
  v4 = *(_QWORD *)(a1 + 8);
  LODWORD(v64) = 0;
  sub_20B001C20(v63, "New client on port ");
  std::to_string(&v61, *(unsigned __int16 *)(v4 + 12));
  v50 = (std::string *)v63;
  v51 = (uint64_t)&v61;
  v52 = v63;
  v53 = &v61;
  v54 = &v61;
  if ((_DWORD)v64 == -1)
    sub_20AECFAB8();
  v62 = &v50;
  ((void (*)(std::string ***, _DWORD *))off_24C41C778[v64])(&v62, v63);
  if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v61.__r_.__value_.__l.__data_);
  if ((_DWORD)v64 == -1)
    sub_20AECFAB8();
  v50 = &v61;
  ((void (*)(void **__return_ptr, std::string **, _DWORD *))off_24C41C790[v64])(__p, &v50, v63);
  if ((_DWORD)v64 != -1)
    ((void (*)(std::string **, _DWORD *))off_24C41C760[v64])(&v50, v63);
  if (v60 >= 0)
    v5 = __p;
  else
    v5 = (void **)__p[0];
  pthread_setname_np((const char *)v5);
  if (v60 < 0)
  {
    operator delete(__p[0]);
    v7 = atomic_load((unsigned __int8 *)(v4 + 32));
    if ((v7 & 1) == 0)
      goto LABEL_61;
    goto LABEL_14;
  }
  v6 = atomic_load((unsigned __int8 *)(v4 + 32));
  if ((v6 & 1) != 0)
  {
LABEL_14:
    v8 = v4 + 128;
    v9 = (std::mutex *)(v4 + 40);
    while (1)
    {
      while (1)
      {
        v11 = operator new();
        sub_20B4270B0(v11);
        if (((*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v11 + 32))(v11, *(unsigned int *)(v4 + 8)) & 1) != 0)
          break;
        atomic_load((unsigned __int8 *)(v4 + 32));
        (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
        v10 = atomic_load((unsigned __int8 *)(v4 + 32));
        if ((v10 & 1) == 0)
          goto LABEL_61;
      }
      v12 = *(_QWORD *)(v4 + 152);
      if (!v12)
        goto LABEL_20;
      if (v12 != v8)
        break;
      v64 = (uint64_t)v63;
      (*(void (**)(uint64_t, _DWORD *))(*(_QWORD *)v8 + 24))(v8, v63);
LABEL_22:
      (*(void (**)(uint64_t, _DWORD *))(*(_QWORD *)v11 + 56))(v11, v63);
      v13 = (_QWORD *)v64;
      if ((_DWORD *)v64 == v63)
      {
        v13 = v63;
        v14 = 4;
      }
      else
      {
        if (!v64)
          goto LABEL_27;
        v14 = 5;
      }
      (*(void (**)(void))(*v13 + 8 * v14))();
LABEL_27:
      std::mutex::lock(v9);
      v16 = *(uint64_t **)(v4 + 112);
      v15 = *(_QWORD *)(v4 + 120);
      if ((unint64_t)v16 >= v15)
      {
        v18 = v8;
        v19 = a1;
        v20 = *(char **)(v4 + 104);
        v21 = ((char *)v16 - v20) >> 3;
        v22 = v21 + 1;
        if ((unint64_t)(v21 + 1) >> 61)
          sub_20AEC60B8();
        v23 = v15 - (_QWORD)v20;
        if (v23 >> 2 > v22)
          v22 = v23 >> 2;
        if ((unint64_t)v23 >= 0x7FFFFFFFFFFFFFF8)
          v24 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v24 = v22;
        if (v24)
        {
          if (v24 >> 61)
            sub_20AEC60CC();
          v25 = (char *)operator new(8 * v24);
          v26 = (uint64_t *)&v25[8 * v21];
          v27 = &v25[8 * v24];
          *v26 = v11;
          v17 = (uint64_t)(v26 + 1);
          v28 = (char *)((char *)v16 - v20);
          if (v16 != (uint64_t *)v20)
          {
LABEL_38:
            v29 = (unint64_t)(v28 - 8);
            if (v29 < 0x78)
              goto LABEL_71;
            v30 = ((char *)(v16 - 1) - v20) & 0xFFFFFFFFFFFFFFF8;
            if ((uint64_t *)((char *)v16 - v30 - 8) < v26 && &v25[(char *)v16 - v20 - v30 - 8] < (char *)v16)
              goto LABEL_71;
            v31 = (v29 >> 3) + 1;
            v32 = 8 * (v31 & 0x3FFFFFFFFFFFFFFCLL);
            v26 = (uint64_t *)((char *)v26 - v32);
            v33 = &v16[v32 / 0xFFFFFFFFFFFFFFF8];
            v34 = v16 - 2;
            v35 = &v25[8 * v21 - 16];
            v36 = v31 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v38 = *((_OWORD *)v34 - 1);
              v37 = *(_OWORD *)v34;
              *((_OWORD *)v34 - 1) = 0uLL;
              *(_OWORD *)v34 = 0uLL;
              *((_OWORD *)v35 - 1) = v38;
              *(_OWORD *)v35 = v37;
              v34 -= 4;
              v35 -= 32;
              v36 -= 4;
            }
            while (v36);
            v16 = v33;
            if (v31 != (v31 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_71:
              do
              {
                v39 = *--v16;
                *v16 = 0;
                *--v26 = v39;
              }
              while (v16 != (uint64_t *)v20);
            }
            v16 = *(uint64_t **)(v4 + 104);
            v40 = *(uint64_t **)(v4 + 112);
            *(_QWORD *)(v4 + 104) = v26;
            *(_QWORD *)(v4 + 112) = v17;
            *(_QWORD *)(v4 + 120) = v27;
            if (v40 != v16)
            {
              a1 = v19;
              v8 = v18;
              v9 = (std::mutex *)(v4 + 40);
              do
              {
                v42 = *--v40;
                v41 = v42;
                *v40 = 0;
                if (v42)
                  (*(void (**)(uint64_t))(*(_QWORD *)v41 + 8))(v41);
              }
              while (v40 != v16);
              goto LABEL_53;
            }
LABEL_52:
            a1 = v19;
            v8 = v18;
            v9 = (std::mutex *)(v4 + 40);
LABEL_53:
            if (v16)
              operator delete(v16);
            goto LABEL_55;
          }
        }
        else
        {
          v25 = 0;
          v26 = (uint64_t *)(8 * v21);
          v27 = 0;
          *(_QWORD *)(8 * v21) = v11;
          v17 = 8 * v21 + 8;
          v28 = (char *)((char *)v16 - v20);
          if (v16 != (uint64_t *)v20)
            goto LABEL_38;
        }
        *(_QWORD *)(v4 + 104) = v26;
        *(_QWORD *)(v4 + 112) = v17;
        *(_QWORD *)(v4 + 120) = v27;
        goto LABEL_52;
      }
      *v16 = v11;
      v17 = (uint64_t)(v16 + 1);
LABEL_55:
      *(_QWORD *)(v4 + 112) = v17;
      v43 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 24))(v11);
      LOBYTE(v50) = 1;
      v44 = *(_QWORD *)(v4 + 184);
      if (!v44)
        sub_20AECABA4();
      (*(void (**)(uint64_t, uint64_t, std::string **))(*(_QWORD *)v44 + 48))(v44, v43, &v50);
      v50 = (std::string *)&off_24C41C2C8;
      v51 = 1;
      v52 = &unk_24C41C418;
      v45 = operator new(0xAuLL);
      v45[4] = 0;
      *(_QWORD *)v45 = 0;
      v53 = v45;
      v54 = v45 + 5;
      v55 = (char *)(v45 + 5);
      v57 = 0;
      v58 = 0;
      v56 = 0;
      (*(void (**)(uint64_t, std::string **, uint64_t))(*(_QWORD *)v11 + 48))(v11, &v50, 1);
      if (v56)
      {
        v57 = v56;
        operator delete(v56);
      }
      if (v53)
      {
        v54 = v53;
        operator delete(v53);
      }
      std::mutex::unlock(v9);
      v46 = atomic_load((unsigned __int8 *)(v4 + 32));
      if ((v46 & 1) == 0)
        goto LABEL_61;
    }
    v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 16))(v12);
LABEL_20:
    v64 = v12;
    goto LABEL_22;
  }
LABEL_61:
  v47 = *(const void **)a1;
  *(_QWORD *)a1 = 0;
  if (v47)
  {
    v48 = MEMORY[0x20BD35314]();
    MEMORY[0x20BD3583C](v48, 0x20C4093837F09);
  }
  MEMORY[0x20BD3583C](a1, 0x20C40A4A59CD2);
  return 0;
}

void sub_20B42F964(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9, char a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B42FA88(uint64_t a1)
{
  std::__thread_specific_ptr<std::__thread_struct> *v2;
  const void *v3;
  uint64_t v4;
  void **v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  const void *v8;
  uint64_t v9;
  _QWORD *v11;
  unsigned __int8 v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _WORD *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  std::chrono::nanoseconds __ns;
  uint64_t v25;
  _DWORD *v26;
  void *v27;
  void *v28;
  char *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *__p[2];
  char v34;
  _DWORD v35[6];
  int v36;
  std::string v37;
  std::chrono::nanoseconds *p_ns;

  v2 = std::__thread_local_data();
  v3 = *(const void **)a1;
  *(_QWORD *)a1 = 0;
  pthread_setspecific(v2->__key_, v3);
  v4 = *(_QWORD *)(a1 + 8);
  v36 = 0;
  sub_20B012374(v35, "KeepAlive on port ");
  std::to_string(&v37, *(unsigned __int16 *)(v4 + 12));
  __ns.__rep_ = (std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep)v35;
  v25 = (uint64_t)&v37;
  v26 = v35;
  v27 = &v37;
  v28 = &v37;
  if (v36 == -1)
    sub_20AECFAB8();
  p_ns = &__ns;
  ((void (*)(std::chrono::nanoseconds **, _DWORD *))off_24C41C778[v36])(&p_ns, v35);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  if (v36 == -1)
    sub_20AECFAB8();
  __ns.__rep_ = (std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep)&v37;
  ((void (*)(void **__return_ptr, std::chrono::nanoseconds *, _DWORD *))off_24C41C790[v36])(__p, &__ns, v35);
  if (v36 != -1)
    ((void (*)(std::chrono::nanoseconds *, _DWORD *))off_24C41C760[v36])(&__ns, v35);
  if (v34 >= 0)
    v5 = __p;
  else
    v5 = (void **)__p[0];
  pthread_setname_np((const char *)v5);
  if (v34 < 0)
  {
    operator delete(__p[0]);
    v7 = atomic_load((unsigned __int8 *)(v4 + 32));
    if ((v7 & 1) == 0)
      goto LABEL_14;
  }
  else
  {
    v6 = atomic_load((unsigned __int8 *)(v4 + 32));
    if ((v6 & 1) == 0)
      goto LABEL_14;
  }
  do
  {
    std::mutex::lock((std::mutex *)(v4 + 40));
    v11 = *(_QWORD **)(v4 + 104);
    if (v11 != *(_QWORD **)(v4 + 112))
    {
      do
      {
        while (1)
        {
          v19 = *v11;
          __ns.__rep_ = (std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep)&off_24C41C2C8;
          v25 = 1;
          v26 = &unk_24C41C418;
          v20 = operator new(0xAuLL);
          v20[4] = 0;
          *(_QWORD *)v20 = 0;
          v27 = v20;
          v28 = v20 + 5;
          v29 = (char *)(v20 + 5);
          v31 = 0;
          v32 = 0;
          v30 = 0;
          v21 = (*(uint64_t (**)(uint64_t, std::chrono::nanoseconds *, uint64_t))(*(_QWORD *)v19 + 48))(v19, &__ns, 1);
          if (v30)
          {
            v31 = v30;
            operator delete(v30);
          }
          if (v27)
          {
            v28 = v27;
            operator delete(v27);
          }
          if ((v21 & 1) == 0)
            break;
          if (++v11 == *(_QWORD **)(v4 + 112))
            goto LABEL_18;
        }
        v22 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*v11 + 24))(*v11);
        LOBYTE(__ns.__rep_) = 2;
        v23 = *(_QWORD *)(v4 + 184);
        if (!v23)
          sub_20AECABA4();
        (*(void (**)(uint64_t, uint64_t, std::chrono::nanoseconds *))(*(_QWORD *)v23 + 48))(v23, v22, &__ns);
        v13 = v11 + 1;
        v14 = *(_QWORD **)(v4 + 112);
        if (v11 + 1 == v14)
        {
          v15 = v11;
        }
        else
        {
          do
          {
            v16 = *(v13 - 1);
            *(v13 - 1) = *v13;
            *v13 = 0;
            if (v16)
              (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
            ++v13;
          }
          while (v13 != v14);
          v15 = v13 - 1;
          v13 = *(_QWORD **)(v4 + 112);
        }
        while (v13 != v15)
        {
          v18 = *--v13;
          v17 = v18;
          *v13 = 0;
          if (v18)
            (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
        }
        *(_QWORD *)(v4 + 112) = v15;
      }
      while (v11 != v15);
    }
LABEL_18:
    std::mutex::unlock((std::mutex *)(v4 + 40));
    __ns.__rep_ = 100000000;
    std::this_thread::sleep_for (&__ns);
    v12 = atomic_load((unsigned __int8 *)(v4 + 32));
  }
  while ((v12 & 1) != 0);
LABEL_14:
  v8 = *(const void **)a1;
  *(_QWORD *)a1 = 0;
  if (v8)
  {
    v9 = MEMORY[0x20BD35314](v8);
    MEMORY[0x20BD3583C](v9, 0x20C4093837F09);
  }
  MEMORY[0x20BD3583C](a1, 0x20C40A4A59CD2);
  return 0;
}

void sub_20B42FDD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25)
{
  if (a24 < 0)
  {
    operator delete(__p);
    sub_20B241E7C((uint64_t **)&a9);
    _Unwind_Resume(a1);
  }
  sub_20B241E7C((uint64_t **)&a9);
  _Unwind_Resume(a1);
}

void sub_20B42FE88()
{
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B42FE9C()
{
  return std::__fs::filesystem::_FilesystemClock::now().__d_.__rep_;
}

uint64_t sub_20B42FEB4()
{
  return std::__fs::filesystem::_FilesystemClock::now().__d_.__rep_;
}

void sub_20B42FECC()
{
  JUMPOUT(0x20BD3583CLL);
}

unint64_t sub_20B42FEE0()
{
  uint64_t v0;
  unsigned __int8 v1;
  unint64_t v3;
  unint64_t v4;
  mach_timebase_info info;

  v0 = mach_continuous_time();
  v1 = atomic_load((unsigned __int8 *)&qword_25463D170);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
  {
    mach_timebase_info(&info);
    LODWORD(v3) = info.numer;
    LODWORD(v4) = info.denom;
    *(double *)&qword_25463D168 = (double)v3 / (double)v4;
    __cxa_guard_release(&qword_25463D170);
  }
  return llround(*(double *)&qword_25463D168 * (double)v0);
}

void sub_20B42FF6C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463D170);
  _Unwind_Resume(a1);
}

unint64_t sub_20B42FF84()
{
  uint64_t v0;
  unsigned __int8 v1;
  unint64_t v3;
  unint64_t v4;
  mach_timebase_info info;

  v0 = mach_continuous_time();
  v1 = atomic_load((unsigned __int8 *)&qword_25463D170);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_25463D170))
  {
    mach_timebase_info(&info);
    LODWORD(v3) = info.numer;
    LODWORD(v4) = info.denom;
    *(double *)&qword_25463D168 = (double)v3 / (double)v4;
    __cxa_guard_release(&qword_25463D170);
  }
  return llround(*(double *)&qword_25463D168 * (double)v0);
}

void sub_20B43000C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463D170);
  _Unwind_Resume(a1);
}

uint64_t *sub_20B430024(uint64_t *a1, _BYTE *a2)
{
  unsigned __int8 v4;
  uint64_t *v5;
  std::logic_error *exception;
  std::string v8;
  void *__p[2];
  uint64_t v10;

  v4 = atomic_load((unsigned __int8 *)&qword_25463D0A8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25463D0A8))
  {
    sub_20B4301D8();
    __cxa_atexit((void (*)(void *))sub_20B430238, &qword_25463D090, &dword_20AEBB000);
    __cxa_guard_release(&qword_25463D0A8);
  }
  __p[0] = 0;
  __p[1] = 0;
  v10 = 0;
  sub_20B1C68C0(a1, (uint64_t)__p);
  v5 = sub_20AFB10A4((uint64_t)&qword_25463D090, (const void **)__p);
  if (v5 == &qword_25463D098)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::operator+<char>();
    std::logic_error::logic_error(exception, &v8);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  *a2 = *((_BYTE *)v5 + 56);
  if (SHIBYTE(v10) < 0)
    operator delete(__p[0]);
  return a1;
}

void sub_20B43016C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25463D0A8);
  _Unwind_Resume(a1);
}

void sub_20B430184(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  void *v20;
  int v21;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v21 & 1) == 0)
    {
LABEL_6:
      if (a20 < 0)
        operator delete(a15);
      _Unwind_Resume(a1);
    }
  }
  else if (!v21)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v20);
  goto LABEL_6;
}

void sub_20B4301D8()
{
  qword_25463D0A0 = 0;
  qword_25463D098 = 0;
  qword_25463D090 = (uint64_t)&qword_25463D098;
  sub_20B430260((_QWORD **)&qword_25463D090, 0, 0, 7, 7);
}

void sub_20B430220(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC833C(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_20B430238(uint64_t a1)
{
  sub_20AEC833C(a1, *(char **)(a1 + 8));
  return a1;
}

void sub_20B430260(_QWORD **a1, int a2, int a3, int a4, int a5)
{
  int v5;
  int v6;
  _QWORD *v7;
  _QWORD *v8;
  void *v9;
  size_t v10;
  int v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  BOOL v17;
  int v18;
  const void *v19;
  size_t v20;
  const void *v21;
  size_t v22;
  size_t v23;
  int v24;
  _QWORD *v25;
  _QWORD *v26;
  size_t v27;
  size_t v28;
  const void *v29;
  size_t v30;
  size_t v31;
  int v32;
  int v33;
  _QWORD *v34;
  int v38;
  int v39;
  void *v40;
  _BYTE v41[15];
  unsigned __int8 v42;
  unsigned __int8 v43;
  _BYTE v44[24];
  int v45;
  char v46;
  _QWORD v47[2];
  _QWORD v48[4];

  v5 = a3;
  v6 = a2;
  v7 = a1;
  v48[2] = *MEMORY[0x24BDAC8D0];
  if (a2 != a4 || a3 != a5)
  {
    v8 = a1 + 1;
    while (1)
    {
      v43 = v6;
      v45 = 0;
      sub_20B0D1CFC((uint64_t)v47, (uint64_t)v44, &v43);
      if (v45 == -1)
        sub_20AECFAB8();
      v47[0] = &v46;
      ((void (*)(void **__return_ptr, _QWORD *, _BYTE *))off_24C41C8E0[v45])(&v40, v47, v44);
      if (v45 != -1)
        ((void (*)(_QWORD *, _BYTE *))off_24C41C8C8[v45])(v47, v44);
      v9 = v40;
      v48[0] = *(_QWORD *)v41;
      *(_QWORD *)((char *)v48 + 7) = *(_QWORD *)&v41[7];
      v10 = v42;
      v11 = (char)v42;
      v12 = operator new(0x40uLL);
      v38 = v6;
      v39 = v5;
      v12[4] = v9;
      v12[5] = v48[0];
      *(_QWORD *)((char *)v12 + 47) = *(_QWORD *)((char *)v48 + 7);
      *((_BYTE *)v12 + 55) = v11;
      v48[0] = 0;
      *(_QWORD *)((char *)v48 + 7) = 0;
      *((_BYTE *)v12 + 56) = v5;
      v13 = v8;
      v14 = v7[1];
      if ((_QWORD *)*v7 == v8)
        goto LABEL_52;
      v15 = (_QWORD *)v7[1];
      v16 = v8;
      if (v14)
      {
        do
        {
          v13 = v15;
          v15 = (_QWORD *)v15[1];
        }
        while (v15);
      }
      else
      {
        do
        {
          v13 = (_QWORD *)v16[2];
          v17 = *v13 == (_QWORD)v16;
          v16 = v13;
        }
        while (v17);
      }
      v18 = *((char *)v13 + 55);
      if (v18 >= 0)
        v19 = v13 + 4;
      else
        v19 = (const void *)v13[4];
      if (v18 >= 0)
        v20 = *((unsigned __int8 *)v13 + 55);
      else
        v20 = v13[5];
      if (v11 >= 0)
        v21 = v12 + 4;
      else
        v21 = v9;
      if (v11 >= 0)
        v22 = v10;
      else
        v22 = v12[5];
      if (v22 >= v20)
        v23 = v20;
      else
        v23 = v22;
      v24 = memcmp(v19, v21, v23);
      if (v24)
      {
        if ((v24 & 0x80000000) == 0)
          goto LABEL_29;
LABEL_52:
        v25 = v13 + 1;
        if (v14)
          v26 = v13;
        else
          v26 = v8;
        if (!v14)
          v25 = v8;
        if (!*v25)
          goto LABEL_62;
LABEL_58:
        if (v11 < 0)
          operator delete(v9);
        operator delete(v12);
        v7 = a1;
        v6 = v38 + 1;
        v5 = v39 + 1;
        if (v38 + 1 == a4)
          goto LABEL_65;
      }
      else
      {
        if (v20 < v22)
          goto LABEL_52;
LABEL_29:
        v25 = v8;
        v26 = v8;
        if (v14)
        {
          while (1)
          {
            v26 = (_QWORD *)v14;
            v27 = *(unsigned __int8 *)(v14 + 55);
            v28 = *(_QWORD *)(v14 + 40);
            if ((v27 & 0x80u) == 0)
              v29 = (const void *)(v14 + 32);
            else
              v29 = *(const void **)(v14 + 32);
            if ((v27 & 0x80u) == 0)
              v30 = v27;
            else
              v30 = v28;
            if (v30 >= v22)
              v31 = v22;
            else
              v31 = v30;
            v32 = memcmp(v21, v29, v31);
            if (v32)
            {
              if (v32 < 0)
                goto LABEL_31;
LABEL_45:
              v33 = memcmp(v29, v21, v31);
              if (v33)
              {
                if ((v33 & 0x80000000) == 0)
                  goto LABEL_58;
              }
              else if (v30 >= v22)
              {
                goto LABEL_58;
              }
              v14 = v26[1];
              if (!v14)
              {
                v25 = v26 + 1;
                break;
              }
            }
            else
            {
              if (v22 >= v30)
                goto LABEL_45;
LABEL_31:
              v14 = *v26;
              v25 = v26;
              if (!*v26)
                break;
            }
          }
        }
LABEL_62:
        *v12 = 0;
        v12[1] = 0;
        v12[2] = v26;
        *v25 = v12;
        v7 = a1;
        v34 = (_QWORD *)**a1;
        if (v34)
        {
          *a1 = v34;
          v12 = (_QWORD *)*v25;
        }
        sub_20AEC84C8(a1[1], v12);
        a1[2] = (_QWORD *)((char *)a1[2] + 1);
        v6 = v38 + 1;
        v5 = v39 + 1;
        if (v38 + 1 == a4)
        {
LABEL_65:
          if (v5 == a5)
            return;
        }
      }
    }
  }
}

void sub_20B4305B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,int a23)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20AEC01C0(exception_object);
}

_QWORD *sub_20B430618(_QWORD *a1, uint64_t *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  void *__p[2];
  unsigned __int8 v10;
  _BYTE v11[24];
  int v12;
  char v13;
  char *v14;

  v7 = *a2;
  v8 = *((_BYTE *)a2 + 8);
  v12 = 0;
  sub_20B430754((uint64_t)&v14, (uint64_t)v11, (uint64_t)&v7);
  if (v12 == -1)
    sub_20AECFAB8();
  v14 = &v13;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41C940[v12])(__p, &v14, v11);
  if (v12 != -1)
    ((void (*)(char **, _BYTE *))off_24C41C910[v12])(&v14, v11);
  if ((v10 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v10 & 0x80u) == 0)
    v4 = v10;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v10 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B430710(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B43072C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B430740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B430754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::string __p;
  uint64_t v11;
  std::string *p_p;
  uint64_t v13;
  std::string *v14;
  std::string *v15;
  uint64_t *v16;

  v11 = a2;
  p_p = (std::string *)"{";
  v13 = a2;
  v14 = (std::string *)"{";
  v15 = (std::string *)"{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_8;
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v11;
  ((void (*)(std::string *))off_24C41C8F8[v3])(&__p);
  sub_20B1F6DCC((uint64_t *)a3, &__p);
  v11 = a2;
  p_p = &__p;
  v13 = a2;
  v14 = &__p;
  v15 = &__p;
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    sub_20AECFAB8();
  v16 = &v11;
  ((void (*)(uint64_t **, uint64_t))off_24C41C928[v6])(&v16, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v11 = a2;
  p_p = (std::string *)",";
  v13 = a2;
  v14 = (std::string *)",";
  v15 = (std::string *)",";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
    goto LABEL_8;
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v11;
  ((void (*)(std::string *, uint64_t))off_24C41C8F8[v7])(&__p, a2);
  sub_20B0D1CFC((uint64_t)&v11, a2, (unsigned __int8 *)(a3 + 8));
  v11 = a2;
  p_p = (std::string *)"}";
  v13 = a2;
  v14 = (std::string *)"}";
  v15 = (std::string *)"}";
  v8 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v8 == -1)
LABEL_8:
    sub_20AECFAB8();
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v11;
  return ((uint64_t (*)(std::string *, uint64_t))off_24C41C8F8[v8])(&__p, a2);
}

void sub_20B4308A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t **sub_20B4308C4(uint64_t **a1, char *a2, int a3, int a4, uint64_t *a5)
{
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v10 = (uint64_t *)operator new();
  v11 = v10;
  v12 = a5[1];
  v19 = *a5;
  v20 = (std::__shared_weak_count *)v12;
  if (v12)
  {
    v13 = (unint64_t *)(v12 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  sub_20B430D50(v10, a2, 0, a3, a4, &v19);
  *a1 = v11;
  v15 = v20;
  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  return a1;
}

void sub_20B4309A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  uint64_t v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
  {
    p_shared_owners = (unint64_t *)&a10->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  MEMORY[0x20BD3583C](v10, 0x1020C4014B85259);
  _Unwind_Resume(a1);
}

uint64_t **sub_20B4309FC(uint64_t **a1, char *a2, unsigned int a3, int a4, int a5, uint64_t *a6)
{
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  uint64_t v21;
  std::__shared_weak_count *v22;

  v12 = (uint64_t *)operator new();
  v13 = v12;
  v14 = a6[1];
  v21 = *a6;
  v22 = (std::__shared_weak_count *)v14;
  if (v14)
  {
    v15 = (unint64_t *)(v14 + 8);
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
  }
  sub_20B430D50(v12, a2, a3 | 0x100000000, a5, a4, &v21);
  *a1 = v13;
  v17 = v22;
  if (v22)
  {
    p_shared_owners = (unint64_t *)&v22->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  return a1;
}

void sub_20B430AE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  uint64_t v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
  {
    p_shared_owners = (unint64_t *)&a10->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  MEMORY[0x20BD3583C](v10, 0x1020C4014B85259);
  _Unwind_Resume(a1);
}

void sub_20B430B44(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  std::recursive_mutex *v5;
  uint64_t v6;

  if (*((_DWORD *)a1 + 6))
  {
    v4 = *a1;
    if (*a1)
    {
LABEL_5:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 40))(v4, a2);
      return;
    }
    if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Concurrency/src/Channel/NodeTaskScheduler.cpp", 78, (uint64_t)"work_queue_", 11, (uint64_t)&unk_20B5ACFDF, 0, (void (*)(void **))sub_20B532360))
    {
      v4 = *a1;
      goto LABEL_5;
    }
LABEL_11:
    abort();
  }
  v5 = (std::recursive_mutex *)a1[4];
  if (!v5)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Concurrency/src/Channel/NodeTaskScheduler.cpp", 74, (uint64_t)"mtx_", 4, (uint64_t)&unk_20B5ACFDF, 0, (void (*)(void **))sub_20B532360))
    {
      goto LABEL_11;
    }
    v5 = (std::recursive_mutex *)a1[4];
  }
  std::recursive_mutex::lock(v5);
  v6 = *(_QWORD *)(a2 + 24);
  if (!v6)
    sub_20AECABA4();
  (*(void (**)(uint64_t))(*(_QWORD *)v6 + 48))(v6);
  std::recursive_mutex::unlock(v5);
}

void sub_20B430C3C(_Unwind_Exception *a1)
{
  std::recursive_mutex *v1;

  std::recursive_mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_20B430C50(uint64_t a1)
{
  std::recursive_mutex *v2;
  std::recursive_mutex *v3;

  if (*(_DWORD *)(a1 + 24) == 1)
  {
    if (*(_QWORD *)a1)
    {
      (*(void (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)a1 + 8) + 24))(*(_QWORD *)(*(_QWORD *)a1 + 8));
      return;
    }
    if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Concurrency/src/Channel/NodeTaskScheduler.cpp", 86, (uint64_t)"work_queue_", 11, (uint64_t)&unk_20B5ACFDF, 0, (void (*)(void **))sub_20B532360))
    {
      (*(void (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)a1 + 8) + 24))(*(_QWORD *)(*(_QWORD *)a1 + 8));
      return;
    }
LABEL_11:
    abort();
  }
  v2 = *(std::recursive_mutex **)(a1 + 32);
  if (v2)
  {
    std::recursive_mutex::lock(*(std::recursive_mutex **)(a1 + 32));
    std::recursive_mutex::unlock(v2);
  }
  else
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Concurrency/src/Channel/NodeTaskScheduler.cpp", 89, (uint64_t)"mtx_", 4, (uint64_t)&unk_20B5ACFDF, 0, (void (*)(void **))sub_20B532360))
    {
      goto LABEL_11;
    }
    v3 = *(std::recursive_mutex **)(a1 + 32);
    std::recursive_mutex::lock(v3);
    std::recursive_mutex::unlock(v3);
  }
}

uint64_t *sub_20B430D50(uint64_t *a1, char *a2, uint64_t a3, int a4, int a5, uint64_t *a6)
{
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  std::recursive_mutex **v10;
  uint64_t v11;
  std::recursive_mutex *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  *a1 = 0;
  a1[1] = *a6;
  v7 = a6[1];
  a1[2] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  a1[4] = 0;
  v10 = (std::recursive_mutex **)(a1 + 4);
  *((_DWORD *)a1 + 6) = a5;
  if (a5 == 1)
  {
    switch(a4)
    {
      case 0:
        sub_20B430FE4(&v19, a2, 0, -10, *a6, 1, a3, SBYTE4(a3));
        goto LABEL_14;
      case 1:
        sub_20B430FE4(&v19, a2, 0, -11, *a6, 1, a3, SBYTE4(a3));
        goto LABEL_14;
      case 2:
        sub_20B430FE4(&v19, a2, 1u, -1, *a6, *a6 != 0, a3, SBYTE4(a3));
        goto LABEL_14;
      case 3:
        sub_20B430FE4(&v19, a2, 2u, -1, *a6, *a6 != 0, a3, SBYTE4(a3));
        goto LABEL_14;
      case 4:
        sub_20B430FE4(&v19, a2, 3u, -1, *a6, *a6 != 0, a3, SBYTE4(a3));
        goto LABEL_14;
      case 5:
        sub_20B430FE4(&v19, a2, 4u, -1, *a6, *a6 != 0, a3, SBYTE4(a3));
LABEL_14:
        v15 = *a1;
        *a1 = v19;
        if (!v15)
          return a1;
        v16 = *(_QWORD *)(v15 + 8);
        *(_QWORD *)(v15 + 8) = 0;
        if (v16)
        {
          (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
          v17 = *(_QWORD *)(v15 + 8);
          *(_QWORD *)(v15 + 8) = 0;
          if (v17)
            (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
        }
        v13 = v15;
        v14 = 0xA1C40BD48D6D6;
        break;
      default:
        return a1;
    }
    goto LABEL_19;
  }
  v11 = operator new();
  MEMORY[0x20BD3535C]();
  v12 = *v10;
  *v10 = (std::recursive_mutex *)v11;
  if (v12)
  {
    std::recursive_mutex::~recursive_mutex(v12);
    v14 = 0x1000C40FA0F61DDLL;
LABEL_19:
    MEMORY[0x20BD3583C](v13, v14);
  }
  return a1;
}

void sub_20B430F40(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  std::recursive_mutex **v3;

  sub_20B430FA0(v3);
  sub_20AEC147C(v2);
  sub_20B1E7F50(v1);
  _Unwind_Resume(a1);
}

std::recursive_mutex **sub_20B430FA0(std::recursive_mutex **a1)
{
  std::recursive_mutex *v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    std::recursive_mutex::~recursive_mutex(v2);
    MEMORY[0x20BD3583C]();
  }
  return a1;
}

_QWORD *sub_20B430FE4(_QWORD *a1, char *a2, unsigned int a3, int a4, uint64_t a5, int a6, uint64_t a7, char a8)
{
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;

  if (a8)
  {
    sub_20B431E50(a2, a5, &v12);
    v9 = v12;
    v10 = (_QWORD *)operator new();
    *v10 = &off_24C410DB8;
    result = (_QWORD *)operator new();
  }
  else
  {
    if (a6)
      sub_20B431C0C(a2, 0, a3, a4, 1, a5, &v12);
    else
      sub_20B431C0C(a2, 0, a3, a4, 0, a5, &v12);
    v9 = v12;
    v10 = (_QWORD *)operator new();
    *v10 = &off_24C410DB8;
    result = (_QWORD *)operator new();
  }
  *result = &off_24C41C9F8;
  result[1] = v9;
  v10[1] = result;
  *a1 = v10;
  return result;
}

void sub_20B43116C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  MEMORY[0x20BD3583C](v2, 0xA1C40BD48D6D6);
  sub_20B432438((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B4311C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B432438((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20B4311DC(uint64_t a1, uint64_t *a2)
{
  std::recursive_mutex *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a2)
  {
    v3 = (std::recursive_mutex *)a2[4];
    a2[4] = 0;
    if (v3)
    {
      std::recursive_mutex::~recursive_mutex(v3);
      MEMORY[0x20BD3583C]();
    }
    v4 = (std::__shared_weak_count *)a2[2];
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    v7 = *a2;
    *a2 = 0;
    if (v7)
    {
      v8 = *(_QWORD *)(v7 + 8);
      *(_QWORD *)(v7 + 8) = 0;
      if (v8)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
        v9 = *(_QWORD *)(v7 + 8);
        *(_QWORD *)(v7 + 8) = 0;
        if (v9)
          (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
      }
      MEMORY[0x20BD3583C](v7, 0xA1C40BD48D6D6);
    }
    JUMPOUT(0x20BD3583CLL);
  }
}

void sub_20B4312C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t **v4;
  int v5;
  const char *v6;
  size_t v7;
  size_t v8;
  unsigned int v9;
  int v10;
  void **p_dst;
  const char *v12;
  size_t v13;
  size_t v14;
  int v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t **v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t **v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t *v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t *v56;
  uint64_t *v57;
  uint64_t v58;
  char *__dst;
  size_t v60;
  int64_t v61;
  uint64_t v62;
  std::__shared_weak_count *v63;

  v2 = *a2;
  v58 = a2[1];
  if (*a2 != v58)
  {
    v4 = (uint64_t **)(a1 + 8);
    v57 = (uint64_t *)(a1 + 16);
    while (1)
    {
      v5 = *(char *)(v2 + 23);
      if (*(_BYTE *)(v2 + 32))
      {
        v6 = (const char *)v2;
        if (v5 < 0)
          v6 = *(const char **)v2;
        v7 = strlen(v6);
        if (v7 > 0x7FFFFFFFFFFFFFF7)
          goto LABEL_81;
        v8 = v7;
        v10 = *(_DWORD *)(v2 + 24);
        v9 = *(_DWORD *)(v2 + 28);
        if (v7 >= 0x17)
        {
          v17 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v7 | 7) != 0x17)
            v17 = v7 | 7;
          v18 = v17 + 1;
          p_dst = (void **)operator new(v17 + 1);
          v60 = v8;
          v61 = v18 | 0x8000000000000000;
          __dst = (char *)p_dst;
        }
        else
        {
          HIBYTE(v61) = v7;
          p_dst = (void **)&__dst;
          if (!v7)
          {
LABEL_21:
            *((_BYTE *)p_dst + v8) = 0;
            if (v57 != sub_20AFB10A4((uint64_t)v4, (const void **)&__dst))
            {
              sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Concurrency/src/Channel/NodeTaskSchedulerPool.cpp", 70, (uint64_t)"", 0, (uint64_t)"Named scheduler already exists.", 31, (void (*)(void **))sub_20B532360);
              abort();
            }
            if (v61 >= 0)
              v19 = (char *)&__dst;
            else
              v19 = __dst;
            v20 = (uint64_t **)operator new(0x20uLL);
            v21 = (uint64_t)v20;
            v22 = *(_DWORD *)a1;
            v23 = *(_QWORD *)(a1 + 32);
            v24 = *(std::__shared_weak_count **)(a1 + 40);
            v20[1] = 0;
            v20[2] = 0;
            *v20 = (uint64_t *)&off_24C41C968;
            v62 = v23;
            v63 = v24;
            if (v24)
            {
              p_shared_owners = (unint64_t *)&v24->__shared_owners_;
              do
                v26 = __ldxr(p_shared_owners);
              while (__stxr(v26 + 1, p_shared_owners));
            }
            sub_20B4309FC(v20 + 3, v19, v9, v22, v10, &v62);
            if (v24)
            {
              v27 = (unint64_t *)&v24->__shared_owners_;
              do
                v28 = __ldaxr(v27);
              while (__stlxr(v28 - 1, v27));
              if (!v28)
              {
                ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
                std::__shared_weak_count::__release_weak(v24);
              }
            }
            v29 = sub_20B4319F8(v4, (const void **)&__dst, (uint64_t)&__dst);
            v30 = (std::__shared_weak_count *)v29[8];
            v29[7] = v21 + 24;
            v29[8] = v21;
            if (v30)
            {
              v31 = (unint64_t *)&v30->__shared_owners_;
              do
                v32 = __ldaxr(v31);
              while (__stlxr(v32 - 1, v31));
              if (!v32)
              {
                ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
                std::__shared_weak_count::__release_weak(v30);
              }
            }
            v33 = (std::__shared_weak_count *)sub_20B4319F8(v4, (const void **)&__dst, (uint64_t)&__dst)[8];
            if (v33)
            {
              v34 = (unint64_t *)&v33->__shared_owners_;
              do
                v35 = __ldxr(v34);
              while (__stxr(v35 + 1, v34));
            }
            if (SHIBYTE(v61) < 0)
            {
              operator delete(__dst);
              if (v33)
              {
LABEL_45:
                v36 = (unint64_t *)&v33->__shared_owners_;
                do
                  v37 = __ldaxr(v36);
                while (__stlxr(v37 - 1, v36));
LABEL_78:
                if (!v37)
                {
                  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
                  std::__shared_weak_count::__release_weak(v33);
                }
                goto LABEL_3;
              }
            }
            else if (v33)
            {
              goto LABEL_45;
            }
            goto LABEL_3;
          }
        }
        memmove(p_dst, v6, v8);
        goto LABEL_21;
      }
      v12 = (const char *)v2;
      if (v5 < 0)
        v12 = *(const char **)v2;
      v13 = strlen(v12);
      if (v13 > 0x7FFFFFFFFFFFFFF7)
LABEL_81:
        sub_20AEC0138();
      v14 = v13;
      v15 = *(_DWORD *)(v2 + 24);
      if (v13 >= 0x17)
        break;
      HIBYTE(v61) = v13;
      v16 = (void **)&__dst;
      if (v13)
        goto LABEL_51;
LABEL_52:
      *((_BYTE *)v16 + v14) = 0;
      if (v57 != sub_20AFB10A4((uint64_t)v4, (const void **)&__dst))
      {
        sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Concurrency/src/Channel/NodeTaskSchedulerPool.cpp", 56, (uint64_t)"", 0, (uint64_t)"Named scheduler already exists.", 31, (void (*)(void **))sub_20B532360);
        abort();
      }
      if (v61 >= 0)
        v40 = (char *)&__dst;
      else
        v40 = __dst;
      v41 = (uint64_t **)operator new(0x20uLL);
      v42 = (uint64_t)v41;
      v43 = *(_DWORD *)a1;
      v44 = *(_QWORD *)(a1 + 32);
      v45 = *(std::__shared_weak_count **)(a1 + 40);
      v41[1] = 0;
      v41[2] = 0;
      *v41 = (uint64_t *)&off_24C41C968;
      v62 = v44;
      v63 = v45;
      if (v45)
      {
        v46 = (unint64_t *)&v45->__shared_owners_;
        do
          v47 = __ldxr(v46);
        while (__stxr(v47 + 1, v46));
      }
      sub_20B4308C4(v41 + 3, v40, v15, v43, &v62);
      if (v45)
      {
        v48 = (unint64_t *)&v45->__shared_owners_;
        do
          v49 = __ldaxr(v48);
        while (__stlxr(v49 - 1, v48));
        if (!v49)
        {
          ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
          std::__shared_weak_count::__release_weak(v45);
        }
      }
      v50 = sub_20B4319F8(v4, (const void **)&__dst, (uint64_t)&__dst);
      v51 = (std::__shared_weak_count *)v50[8];
      v50[7] = v42 + 24;
      v50[8] = v42;
      if (v51)
      {
        v52 = (unint64_t *)&v51->__shared_owners_;
        do
          v53 = __ldaxr(v52);
        while (__stlxr(v53 - 1, v52));
        if (!v53)
        {
          ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
          std::__shared_weak_count::__release_weak(v51);
        }
      }
      v33 = (std::__shared_weak_count *)sub_20B4319F8(v4, (const void **)&__dst, (uint64_t)&__dst)[8];
      if (v33)
      {
        v54 = (unint64_t *)&v33->__shared_owners_;
        do
          v55 = __ldxr(v54);
        while (__stxr(v55 + 1, v54));
      }
      if (SHIBYTE(v61) < 0)
      {
        operator delete(__dst);
        if (v33)
        {
LABEL_76:
          v56 = (unint64_t *)&v33->__shared_owners_;
          do
            v37 = __ldaxr(v56);
          while (__stlxr(v37 - 1, v56));
          goto LABEL_78;
        }
      }
      else if (v33)
      {
        goto LABEL_76;
      }
LABEL_3:
      v2 += 40;
      if (v2 == v58)
        return;
    }
    v38 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v38 = v13 | 7;
    v39 = v38 + 1;
    v16 = (void **)operator new(v38 + 1);
    v60 = v14;
    v61 = v39 | 0x8000000000000000;
    __dst = (char *)v16;
LABEL_51:
    memmove(v16, v12, v14);
    goto LABEL_52;
  }
}

void sub_20B4317C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B4318C0(uint64_t a1@<X0>, char *a2@<X1>, int a3@<W3>, uint64_t ***a4@<X8>)
{
  uint64_t **v8;
  uint64_t **v9;
  int v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17[2];

  v8 = (uint64_t **)operator new();
  v9 = v8;
  v10 = *(_DWORD *)a1;
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(std::__shared_weak_count **)(a1 + 40);
  v17[0] = v11;
  v17[1] = (uint64_t)v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
  }
  sub_20B4308C4(v8, a2, a3, v10, v17);
  *a4 = v9;
  if (v12)
  {
    v15 = (unint64_t *)&v12->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_20B4319A0(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  unint64_t *p_shared_owners;
  unint64_t v5;

  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  MEMORY[0x20BD3583C](v2, 0x20C4093837F09);
  _Unwind_Resume(a1);
}

uint64_t *sub_20B4319F8(uint64_t **a1, const void **a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t **v6;
  int v7;
  const void *v8;
  size_t v9;
  uint64_t **v10;
  _QWORD *v11;
  const void *v12;
  const void *v13;
  int v14;
  const void *v15;
  size_t v16;
  size_t v17;
  int v18;
  int v19;
  uint64_t *v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t *v23;

  v6 = a1 + 1;
  v5 = a1[1];
  if (v5)
  {
    v7 = *((char *)a2 + 23);
    if (v7 >= 0)
      v8 = a2;
    else
      v8 = *a2;
    if (v7 >= 0)
      v9 = *((unsigned __int8 *)a2 + 23);
    else
      v9 = (size_t)a2[1];
    while (1)
    {
      v10 = (uint64_t **)v5;
      v13 = (const void *)v5[4];
      v11 = v5 + 4;
      v12 = v13;
      v14 = *((char *)v11 + 23);
      if (v14 >= 0)
        v15 = v11;
      else
        v15 = v12;
      if (v14 >= 0)
        v16 = *((unsigned __int8 *)v11 + 23);
      else
        v16 = v11[1];
      if (v16 >= v9)
        v17 = v9;
      else
        v17 = v16;
      v18 = memcmp(v8, v15, v17);
      if (v18)
      {
        if (v18 < 0)
          goto LABEL_8;
LABEL_22:
        v19 = memcmp(v15, v8, v17);
        if (v19)
        {
          if ((v19 & 0x80000000) == 0)
            return (uint64_t *)v10;
        }
        else if (v16 >= v9)
        {
          return (uint64_t *)v10;
        }
        v5 = v10[1];
        if (!v5)
        {
          v6 = v10 + 1;
LABEL_28:
          v20 = (uint64_t *)operator new(0x48uLL);
          v21 = v20 + 4;
          if (*(char *)(a3 + 23) < 0)
            goto LABEL_31;
LABEL_29:
          *(_OWORD *)v21 = *(_OWORD *)a3;
          v21[2] = *(_QWORD *)(a3 + 16);
          goto LABEL_32;
        }
      }
      else
      {
        if (v9 >= v16)
          goto LABEL_22;
LABEL_8:
        v5 = *v10;
        v6 = v10;
        if (!*v10)
          goto LABEL_28;
      }
    }
  }
  v10 = a1 + 1;
  v20 = (uint64_t *)operator new(0x48uLL);
  v21 = v20 + 4;
  if ((*(char *)(a3 + 23) & 0x80000000) == 0)
    goto LABEL_29;
LABEL_31:
  sub_20AEC60F4(v21, *(void **)a3, *(_QWORD *)(a3 + 8));
LABEL_32:
  v20[7] = 0;
  v20[8] = 0;
  *v20 = 0;
  v20[1] = 0;
  v20[2] = (uint64_t)v10;
  *v6 = v20;
  v22 = (uint64_t *)**a1;
  v23 = v20;
  if (v22)
  {
    *a1 = v22;
    v23 = *v6;
  }
  sub_20AEC84C8(a1[1], v23);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return v20;
}

void sub_20B431B78(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20B431B8C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41C968;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B431B9C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41C968;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B431BCC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v2;
  uint64_t *v3;

  v3 = *(uint64_t **)(a1 + 24);
  v1 = (_QWORD *)(a1 + 24);
  v2 = v3;
  *v1 = 0;
  if (v3)
    sub_20B4311DC((uint64_t)v1, v2);
}

void sub_20B431BE8(std::runtime_error *a1)
{
  std::runtime_error::~runtime_error(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B431C0C@<X0>(char *a1@<X0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v13;
  void *v14;
  const char *v15;
  size_t v16;
  size_t v17;
  int v18;
  int v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  OS_os_workgroup *v23;
  uint64_t v24;
  dispatch_group_t v25;
  uint64_t result;
  unsigned int v27;
  NSObject *v29[2];

  v13 = operator new();
  *(_QWORD *)v13 = &off_24C41CA40;
  v14 = (void *)(v13 + 8);
  if (a1)
    v15 = a1;
  else
    v15 = "dispatch_queue";
  v16 = strlen(v15);
  if (v16 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v17 = v16;
  if (v16 >= 0x17)
  {
    v27 = a3;
    v18 = a4;
    v19 = a5;
    v20 = a7;
    v21 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v16 | 7) != 0x17)
      v21 = v16 | 7;
    v22 = v21 + 1;
    v14 = operator new(v21 + 1);
    *(_QWORD *)(v13 + 16) = v17;
    *(_QWORD *)(v13 + 24) = v22 | 0x8000000000000000;
    *(_QWORD *)(v13 + 8) = v14;
    a7 = v20;
    a5 = v19;
    a4 = v18;
    a3 = v27;
    goto LABEL_11;
  }
  *(_BYTE *)(v13 + 31) = v16;
  if (v16)
LABEL_11:
    memcpy(v14, v15, v17);
  *((_BYTE *)v14 + v17) = 0;
  *(_QWORD *)(v13 + 32) = 0;
  *(_QWORD *)(v13 + 40) = sub_20B4329D8;
  *(_QWORD *)(v13 + 48) = 0;
  *(_QWORD *)(v13 + 56) = sub_20B4329E4;
  *a7 = v13;
  if (a6)
    v23 = *(OS_os_workgroup **)(*(_QWORD *)a6 + 24);
  else
    v23 = 0;
  sub_20B432DF0(a1, a4, a2, a3, a5, v23, v29);
  v24 = *(_QWORD *)(v13 + 32);
  *(NSObject **)(v13 + 32) = v29[0];
  if (v24)
    (*(void (**)(void))(v13 + 40))();
  *(NSObject **)(v13 + 40) = v29[1];
  v25 = dispatch_group_create();
  result = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v13 + 48) = v25;
  if (result)
    result = (*(uint64_t (**)(void))(v13 + 56))();
  *(_QWORD *)(v13 + 56) = sub_20B4329E4;
  return result;
}

void sub_20B431DD4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_20B431E0C(v1);
  _Unwind_Resume(a1);
}

void sub_20B431DE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B3C40CBD3A495);
  _Unwind_Resume(a1);
}

uint64_t *sub_20B431E0C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_20B43204C(v2);
    MEMORY[0x20BD3583C](v3, 0x10B3C40CBD3A495);
  }
  return a1;
}

uint64_t sub_20B431E50@<X0>(const char *a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  void *v7;
  const char *v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  OS_os_workgroup *v13;
  NSObject *v14;
  NSObject *v15;
  uint64_t v16;
  dispatch_group_t v17;
  uint64_t result;

  v6 = operator new();
  *(_QWORD *)v6 = &off_24C41CA40;
  v7 = (void *)(v6 + 8);
  if (a1)
    v8 = a1;
  else
    v8 = "dispatch_queue";
  v9 = strlen(v8);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v11 = v9 | 7;
    v12 = v11 + 1;
    v7 = operator new(v11 + 1);
    *(_QWORD *)(v6 + 16) = v10;
    *(_QWORD *)(v6 + 24) = v12 | 0x8000000000000000;
    *(_QWORD *)(v6 + 8) = v7;
    goto LABEL_11;
  }
  *(_BYTE *)(v6 + 31) = v9;
  if (v9)
LABEL_11:
    memcpy(v7, v8, v10);
  *((_BYTE *)v7 + v10) = 0;
  *(_QWORD *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 40) = sub_20B4329D8;
  *(_QWORD *)(v6 + 48) = 0;
  *(_QWORD *)(v6 + 56) = sub_20B4329E4;
  *a3 = v6;
  if (a2)
    v13 = *(OS_os_workgroup **)(*(_QWORD *)a2 + 24);
  else
    v13 = 0;
  v14 = dispatch_queue_create(a1, 0);
  v15 = sub_20B432F20(a1);
  dispatch_workloop_set_scheduler_priority();
  if (v13)
    dispatch_workloop_set_os_workgroup(v15, v13);
  dispatch_activate(v15);
  dispatch_set_target_queue(v14, v15);
  dispatch_release(v15);
  v16 = *(_QWORD *)(v6 + 32);
  *(_QWORD *)(v6 + 32) = v14;
  if (v16)
    (*(void (**)(void))(v6 + 40))();
  *(_QWORD *)(v6 + 40) = sub_20B4329D8;
  v17 = dispatch_group_create();
  result = *(_QWORD *)(v6 + 48);
  *(_QWORD *)(v6 + 48) = v17;
  if (result)
    result = (*(uint64_t (**)(void))(v6 + 56))();
  *(_QWORD *)(v6 + 56) = sub_20B4329E4;
  return result;
}

void sub_20B432014(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_20B431E0C(v1);
  _Unwind_Resume(a1);
}

void sub_20B432028(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD3583C](v1, 0x10B3C40CBD3A495);
  _Unwind_Resume(a1);
}

uint64_t sub_20B43204C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (dispatch_group_wait(*(dispatch_group_t *)(a1 + 48), 0xFFFFFFFFFFFFFFFFLL)
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Dispatch/src/DispatchQueue.cpp", 90, (uint64_t)"error == 0", 10, (uint64_t)"dispatch_group_wait failed", 26, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v2 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = 0;
  if (v2)
    (*(void (**)(void))(a1 + 56))();
  v3 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = 0;
  if (v3)
    (*(void (**)(void))(a1 + 40))();
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

intptr_t sub_20B43210C(uint64_t a1)
{
  intptr_t result;

  result = dispatch_group_wait(*(dispatch_group_t *)(a1 + 48), 0xFFFFFFFFFFFFFFFFLL);
  if (result)
  {
    result = sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Dispatch/src/DispatchQueue.cpp", 90, (uint64_t)"error == 0", 10, (uint64_t)"dispatch_group_wait failed", 26, (void (*)(void **))sub_20B532360);
    if ((_DWORD)result)
      abort();
  }
  return result;
}

void sub_20B432168(uint64_t a1)
{
  sub_20B43204C(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B43218C(uint64_t a1)
{
  uint64_t result;

  result = a1 + 8;
  if (*(char *)(a1 + 31) < 0)
    return *(_QWORD *)result;
  return result;
}

_QWORD *sub_20B4321A8(uint64_t a1, _QWORD *a2)
{
  return sub_20B432A84(*(dispatch_queue_t *)(a1 + 32), a2);
}

void sub_20B4321B0(uint64_t a1, _QWORD *a2)
{
  sub_20B432D08(*(NSObject **)(a1 + 48), *(NSObject **)(a1 + 32), a2);
}

void sub_20B4321C4(uint64_t a1, std::__shared_weak_count_vtbl **a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  std::__shared_weak_count_vtbl **v6;
  unint64_t v7;
  NSObject *v8;
  NSObject *v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  _QWORD v16[3];
  _QWORD *v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v4 = (std::__shared_weak_count *)operator new(0x40uLL);
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41CB38;
  v4[1].__vftable = *a2;
  *a2 = 0;
  v6 = (std::__shared_weak_count_vtbl **)a2[4];
  if (v6)
  {
    if (v6 == a2 + 1)
    {
      v4[2].__shared_owners_ = (uint64_t)&v4[1].__shared_owners_;
      ((void (*)(std::__shared_weak_count_vtbl **))(*v6)->__get_deleter)(v6);
    }
    else
    {
      v4[2].__shared_owners_ = (uint64_t)v6;
      a2[4] = 0;
    }
  }
  else
  {
    v4[2].__shared_owners_ = 0;
  }
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  v8 = *(NSObject **)(a1 + 48);
  v9 = *(NSObject **)(a1 + 32);
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  v16[0] = &off_24C41CB88;
  v16[1] = v4 + 1;
  v16[2] = v4;
  v17 = v16;
  sub_20B432D08(v8, v9, v16);
  v11 = v17;
  if (v17 == v16)
  {
    v12 = 4;
    v11 = v16;
  }
  else
  {
    if (!v17)
      goto LABEL_14;
    v12 = 5;
  }
  (*(void (**)(void))(*v11 + 8 * v12))();
  do
LABEL_14:
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  if (v4)
  {
    v14 = (unint64_t *)&v4->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_20B432380(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B4323E0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  *a1 = &off_24C41CAF0;
  a1[1] = 0;
  if (v2)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = a1[1];
    a1[1] = 0;
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  return a1;
}

_QWORD *sub_20B432438(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  if (v2)
  {
    a1[1] = 0;
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = a1[1];
    *a1 = &off_24C41CAF0;
    a1[1] = 0;
    if (v3)
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
      v4 = a1[1];
      a1[1] = 0;
      if (v4)
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    }
    return a1;
  }
  else
  {
    *a1 = &off_24C41CAF0;
    a1[1] = 0;
    return a1;
  }
}

void sub_20B4324C4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  if (v2)
  {
    a1[1] = 0;
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = a1[1];
    *a1 = &off_24C41CAF0;
    a1[1] = 0;
    if (v3)
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
      v4 = a1[1];
      a1[1] = 0;
      if (v4)
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    }
  }
  else
  {
    *a1 = &off_24C41CAF0;
    a1[1] = 0;
  }
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B432554(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_20B432564(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 24))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_20B432574(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_20B432584(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 40))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_20B432594(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 48))(*(_QWORD *)(a1 + 8));
}

void sub_20B4325A4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  *a1 = &off_24C41CAF0;
  a1[1] = 0;
  if (v2)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = a1[1];
    a1[1] = 0;
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B43260C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41CB38;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B43261C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41CB38;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B43264C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 32);
  v2 = *(_QWORD **)(a1 + 56);
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x20BD35710);
}

_QWORD *sub_20B4326A0(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24C41CB88;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20B432714(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24C41CB88;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x20BD3583CLL);
}

_QWORD *sub_20B432788(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24C41CB88;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_20B4327D8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24C41CB88;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_20B432808(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20B432860(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(__p);
  }
  else
  {
LABEL_5:
    operator delete(__p);
  }
}

void sub_20B4328C8(uint64_t a1)
{
  std::promise<void> *v1;
  std::__assoc_sub_state *state;

  v1 = *(std::promise<void> **)(a1 + 8);
  state = v1[4].__state_;
  if (!state)
    sub_20AECABA4();
  ((void (*)(std::__assoc_sub_state *))state->__vftable[1].__on_zero_shared)(state);
  std::promise<void>::set_value(v1);
}

void sub_20B432910(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  std::promise<void> *v14;
  std::exception_ptr v15;
  std::exception_ptr v16[5];

  __cxa_begin_catch(a1);
  std::current_exception();
  v15.__ptr_ = v16;
  std::promise<void>::set_exception(v14, v15);
  std::exception_ptr::~exception_ptr(v16);
  __cxa_end_catch();
}

void sub_20B432944(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10)
{
  std::exception_ptr::~exception_ptr(&a10);
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_20B432960(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3esn6thread6detail24GenericDispatchQueueImpl17DispatchAsyncImplEONS1_12PackagedTaskINSt3__18"
                     "functionIFvvEEEEEE3$_0")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3esn6thread6detail24GenericDispatchQueueImpl17DispatchAsyncImplEONS1_12PackagedTa"
                                "skINSt3__18functionIFvvEEEEEE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3esn6thread6detail24GenericDispatchQueueImpl17DispatchAsyncImplEONS1_12PackagedTaskINSt3__18functionIFvvEEEEEE3$_0"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3esn6thread6detail24GenericDispatchQueueImpl17DispatchAsyncImplEONS1_12PackagedTaskINSt3__18functionIFvvEEEEEE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20B4329CC()
{
  return &unk_24C41CBE8;
}

void sub_20B4329D8(dispatch_object_t object)
{
  if (object)
    dispatch_release(object);
}

void sub_20B4329E4(dispatch_object_t object)
{
  if (object)
    dispatch_release(object);
}

uint64_t sub_20B4329F0(uint64_t a1)
{
  uint64_t v1;

  if (a1)
  {
    v1 = *(_QWORD *)(a1 + 24);
    if (!v1)
      sub_20AECABA4();
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 48))(v1);
  }
  else
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Dispatch/src/GrandCentralDispatchUtil.cpp", 83, (uint64_t)"context != nullptr", 18, (uint64_t)"Context may not be nullptr", 26, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    if (!MEMORY[0x18])
      sub_20AECABA4();
    return (*(uint64_t (**)(_QWORD))(*MEMORY[0x18] + 48))(MEMORY[0x18]);
  }
}

_QWORD *sub_20B432A84(dispatch_queue_t queue, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *result;
  uint64_t v5;
  _BYTE context[24];
  _BYTE *v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v3 = (_QWORD *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      v7 = context;
      (*(void (**)(_QWORD *, _BYTE *))(*a2 + 24))(a2, context);
    }
    else
    {
      v7 = (_BYTE *)a2[3];
      a2[3] = 0;
    }
  }
  else
  {
    v7 = 0;
  }
  if (!v7
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Dispatch/src/GrandCentralDispatchUtil.cpp", 63, (uint64_t)"_f", 2, (uint64_t)"Function should contain valid target", 36, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  dispatch_sync_f(queue, context, (dispatch_function_t)sub_20B4329F0);
  result = v7;
  if (v7 == context)
  {
    v5 = 4;
    result = context;
  }
  else
  {
    if (!v7)
      return result;
    v5 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v5))();
}

void sub_20B432BAC(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

void sub_20B432BBC(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  if (!a1
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Dispatch/src/GrandCentralDispatchUtil.cpp", 94, (uint64_t)"context", 7, (uint64_t)"Context may not be nullptr", 26, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v2 = a1[3];
  if (!v2)
    sub_20AECABA4();
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 48))(v2);
  v3 = (_QWORD *)a1[3];
  if (v3 == a1)
  {
    v4 = 4;
    v3 = a1;
  }
  else
  {
    if (!v3)
      goto LABEL_12;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_12:
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B432C80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B432C98((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B432C98(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = (_QWORD *)*a1;
  *a1 = 0;
  if (v2)
  {
    v3 = (_QWORD *)v2[3];
    if (v3 == v2)
    {
      v4 = 4;
      v3 = v2;
    }
    else
    {
      if (!v3)
      {
LABEL_7:
        MEMORY[0x20BD3583C](v2, 0x1020C40A5B76CDFLL);
        return a1;
      }
      v4 = 5;
    }
    (*(void (**)(void))(*v3 + 8 * v4))();
    goto LABEL_7;
  }
  return a1;
}

void sub_20B432D08(NSObject *a1, NSObject *a2, _QWORD *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = operator new();
  v7 = (_QWORD *)v6;
  v8 = a3 + 3;
  v9 = (_QWORD *)a3[3];
  if (v9)
  {
    if (v9 == a3)
    {
      *(_QWORD *)(v6 + 24) = v6;
      (*(void (**)(_QWORD *, uint64_t))(*a3 + 24))(a3, v6);
      goto LABEL_7;
    }
    *(_QWORD *)(v6 + 24) = v9;
  }
  else
  {
    v8 = (_QWORD *)(v6 + 24);
  }
  *v8 = 0;
LABEL_7:
  if (!v7[3]
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Dispatch/src/GrandCentralDispatchUtil.cpp", 63, (uint64_t)"_f", 2, (uint64_t)"Function should contain valid target", 36, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  dispatch_group_async_f(a1, a2, v7, (dispatch_function_t)sub_20B432BBC);
}

void sub_20B432DF0(char *label@<X0>, int relative_priority@<W3>, int a3@<W1>, unsigned int a4@<W2>, int a5@<W4>, OS_os_workgroup *a6@<X5>, NSObject **a7@<X8>)
{
  dispatch_qos_class_t v10;
  NSObject *v11;
  NSObject *v12;
  NSObject *v13;

  if (a3)
  {
    sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Dispatch/src/DispatchQueueTypeUtil.cpp", 81, (uint64_t)&unk_20B5AD1A2, 0, (uint64_t)"queue_type has unexpected value.", 32, (void (*)(void **))sub_20B532360);
    abort();
  }
  if (a4 >= 6)
  {
    v10 = QOS_CLASS_DEFAULT;
    if (!a5)
      goto LABEL_4;
  }
  else
  {
    v10 = *(_DWORD *)&asc_20B60D4F8[4 * a4];
    if (!a5)
    {
LABEL_4:
      v11 = dispatch_queue_attr_make_with_qos_class(0, v10, relative_priority);
      v12 = dispatch_queue_create(label, v11);
      goto LABEL_9;
    }
  }
  v12 = dispatch_queue_create(label, 0);
  v13 = sub_20B432F20(label);
  dispatch_workloop_set_qos_class_floor();
  if (a6)
    dispatch_workloop_set_os_workgroup(v13, a6);
  dispatch_activate(v13);
  dispatch_set_target_queue(v12, v13);
  dispatch_release(v13);
LABEL_9:
  *a7 = v12;
  a7[1] = sub_20B4329D8;
}

dispatch_workloop_t sub_20B432F20(const char *a1)
{
  size_t v2;
  std::string::size_type v3;
  std::string *p_dst;
  uint64_t v5;
  uint64_t v6;
  std::string *v7;
  __int128 v8;
  void **v9;
  dispatch_workloop_t result;
  dispatch_workloop_t v11;
  std::string __dst;
  void *__p[2];
  int64_t v14;

  v2 = strlen(a1);
  if (v2 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  v3 = v2;
  if (v2 >= 0x17)
  {
    v5 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17)
      v5 = v2 | 7;
    v6 = v5 + 1;
    p_dst = (std::string *)operator new(v5 + 1);
    __dst.__r_.__value_.__l.__size_ = v3;
    __dst.__r_.__value_.__r.__words[2] = v6 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    goto LABEL_8;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v2;
  p_dst = &__dst;
  if (v2)
LABEL_8:
    memcpy(p_dst, a1, v3);
  p_dst->__r_.__value_.__s.__data_[v3] = 0;
  v7 = std::string::append(&__dst, ".workloop", 9uLL);
  v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  v14 = v7->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  if (v14 >= 0)
    v9 = __p;
  else
    v9 = (void **)__p[0];
  result = dispatch_workloop_create_inactive((const char *)v9);
  v11 = result;
  if (SHIBYTE(v14) < 0)
  {
    operator delete(__p[0]);
    return v11;
  }
  return result;
}

void sub_20B433048(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void (**sub_20B433064(void (**a1)(int a1), void (**a2)(int a1)))(int a1)
{
  void (*v3)(int);
  void (*v4)(int);
  unint64_t *v5;
  unint64_t v6;
  void (*v7)(int);
  void (*v8)(int);
  _QWORD v10[4];
  _QWORD v11[5];

  v11[4] = *MEMORY[0x24BDAC8D0];
  v3 = *a2;
  v4 = a2[1];
  v10[1] = *a2;
  v10[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)((char *)v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = sub_20B434738;
  v10[0] = sub_20B434738;
  if (v10 == a1)
    goto LABEL_9;
  v8 = *a1;
  if (!*a1)
  {
    a1[1] = v3;
    a1[2] = v4;
    *a1 = sub_20B434738;
    return a1;
  }
  v11[0] = 0;
  v11[1] = 0;
  ((void (*)(uint64_t, void (**)(int), _QWORD *, _QWORD, _QWORD))v8)(2, a1, v11, 0, 0);
  ((void (*)(int))v10[0])(2);
  ((void (*)(uint64_t, _QWORD *, _QWORD *, _QWORD, _QWORD))v11[0])(2, v11, v10, 0, 0);
  if (v11[0])
    ((void (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v11[0])(0, v11, 0, 0, 0);
  v7 = (void (*)(int))v10[0];
  if (v10[0])
LABEL_9:
    v7(0);
  return a1;
}

void sub_20B4331AC(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

uint64_t sub_20B4331C4(uint64_t a1, uint64_t a2)
{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void (*v12)(int);
  std::__shared_weak_count *v13;

  v4 = (char *)operator new(0x38uLL);
  *((_QWORD *)v4 + 1) = 0;
  *((_QWORD *)v4 + 2) = 0;
  *(_QWORD *)v4 = &off_24C41CC08;
  *(_OWORD *)(v4 + 40) = 0u;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_QWORD *)a1 = v4 + 24;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  v5 = (char *)operator new(0x30uLL);
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &unk_24C41CCB8;
  *((_QWORD *)v5 + 1) = 0;
  *(_OWORD *)(v5 + 24) = *(_OWORD *)a2;
  *((_QWORD *)v5 + 5) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v12 = (void (*)(int))(v5 + 24);
  v13 = (std::__shared_weak_count *)v5;
  sub_20B433348(*(void (***)(int))a1, &v12);
  v6 = *((_QWORD *)v5 + 3);
  v7 = *((_QWORD *)v5 + 4);
  if (!v6
    && v7
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD33A, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  *(_QWORD *)(a1 + 16) = v7 - v6;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = v13;
  if (!v13)
    return a1;
  p_shared_owners = (unint64_t *)&v13->__shared_owners_;
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (v10)
    return a1;
  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  return a1;
}

void sub_20B433314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_20AEC147C((uint64_t)&a9);
  sub_20AEC147C(v9);
  _Unwind_Resume(a1);
}

void sub_20B433334(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

void (**sub_20B433348(void (**a1)(int a1), void (**a2)(int a1)))(int a1)
{
  void (*v3)(int);
  void (*v4)(int);
  unint64_t *v5;
  unint64_t v6;
  void (*v7)(int);
  void (*v8)(int);
  _QWORD v10[4];
  _QWORD v11[5];

  v11[4] = *MEMORY[0x24BDAC8D0];
  v3 = *a2;
  v4 = a2[1];
  v10[1] = *a2;
  v10[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)((char *)v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = sub_20B434914;
  v10[0] = sub_20B434914;
  if (v10 == a1)
    goto LABEL_9;
  v8 = *a1;
  if (!*a1)
  {
    a1[1] = v3;
    a1[2] = v4;
    *a1 = sub_20B434914;
    return a1;
  }
  v11[0] = 0;
  v11[1] = 0;
  ((void (*)(uint64_t, void (**)(int), _QWORD *, _QWORD, _QWORD))v8)(2, a1, v11, 0, 0);
  ((void (*)(int))v10[0])(2);
  ((void (*)(uint64_t, _QWORD *, _QWORD *, _QWORD, _QWORD))v11[0])(2, v11, v10, 0, 0);
  if (v11[0])
    ((void (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v11[0])(0, v11, 0, 0, 0);
  v7 = (void (*)(int))v10[0];
  if (v10[0])
LABEL_9:
    v7(0);
  return a1;
}

void sub_20B433490(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

void (**sub_20B4334A8(void (**a1)(int a1), void (**a2)(int a1)))(int a1)
{
  void (*v3)(int);
  void (*v4)(int);
  unint64_t *v5;
  unint64_t v6;
  void (*v7)(int);
  void (*v8)(int);
  _QWORD v10[4];
  _QWORD v11[5];

  v11[4] = *MEMORY[0x24BDAC8D0];
  v3 = *a2;
  v4 = a2[1];
  v10[1] = *a2;
  v10[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)((char *)v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = sub_20B434AF0;
  v10[0] = sub_20B434AF0;
  if (v10 == a1)
    goto LABEL_9;
  v8 = *a1;
  if (!*a1)
  {
    a1[1] = v3;
    a1[2] = v4;
    *a1 = sub_20B434AF0;
    return a1;
  }
  v11[0] = 0;
  v11[1] = 0;
  ((void (*)(uint64_t, void (**)(int), _QWORD *, _QWORD, _QWORD))v8)(2, a1, v11, 0, 0);
  ((void (*)(int))v10[0])(2);
  ((void (*)(uint64_t, _QWORD *, _QWORD *, _QWORD, _QWORD))v11[0])(2, v11, v10, 0, 0);
  if (v11[0])
    ((void (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v11[0])(0, v11, 0, 0, 0);
  v7 = (void (*)(int))v10[0];
  if (v10[0])
LABEL_9:
    v7(0);
  return a1;
}

void sub_20B4335F0(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

void (**sub_20B433608(void (**a1)(int a1), void (**a2)(int a1)))(int a1)
{
  void (*v3)(int);
  void (*v4)(int);
  unint64_t *v5;
  unint64_t v6;
  void (*v7)(int);
  void (*v8)(int);
  _QWORD v10[4];
  _QWORD v11[5];

  v11[4] = *MEMORY[0x24BDAC8D0];
  v3 = *a2;
  v4 = a2[1];
  v10[1] = *a2;
  v10[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)((char *)v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = sub_20B434CCC;
  v10[0] = sub_20B434CCC;
  if (v10 == a1)
    goto LABEL_9;
  v8 = *a1;
  if (!*a1)
  {
    a1[1] = v3;
    a1[2] = v4;
    *a1 = sub_20B434CCC;
    return a1;
  }
  v11[0] = 0;
  v11[1] = 0;
  ((void (*)(uint64_t, void (**)(int), _QWORD *, _QWORD, _QWORD))v8)(2, a1, v11, 0, 0);
  ((void (*)(int))v10[0])(2);
  ((void (*)(uint64_t, _QWORD *, _QWORD *, _QWORD, _QWORD))v11[0])(2, v11, v10, 0, 0);
  if (v11[0])
    ((void (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v11[0])(0, v11, 0, 0, 0);
  v7 = (void (*)(int))v10[0];
  if (v10[0])
LABEL_9:
    v7(0);
  return a1;
}

void sub_20B433750(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

void (**sub_20B433768(void (**a1)(int a1), void (**a2)(int a1)))(int a1)
{
  void (*v3)(int);
  void (*v4)(int);
  unint64_t *v5;
  unint64_t v6;
  void (*v7)(int);
  void (*v8)(int);
  _QWORD v10[4];
  _QWORD v11[5];

  v11[4] = *MEMORY[0x24BDAC8D0];
  v3 = *a2;
  v4 = a2[1];
  v10[1] = *a2;
  v10[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)((char *)v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = sub_20B434EA8;
  v10[0] = sub_20B434EA8;
  if (v10 == a1)
    goto LABEL_9;
  v8 = *a1;
  if (!*a1)
  {
    a1[1] = v3;
    a1[2] = v4;
    *a1 = sub_20B434EA8;
    return a1;
  }
  v11[0] = 0;
  v11[1] = 0;
  ((void (*)(uint64_t, void (**)(int), _QWORD *, _QWORD, _QWORD))v8)(2, a1, v11, 0, 0);
  ((void (*)(int))v10[0])(2);
  ((void (*)(uint64_t, _QWORD *, _QWORD *, _QWORD, _QWORD))v11[0])(2, v11, v10, 0, 0);
  if (v11[0])
    ((void (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v11[0])(0, v11, 0, 0, 0);
  v7 = (void (*)(int))v10[0];
  if (v10[0])
LABEL_9:
    v7(0);
  return a1;
}

void sub_20B4338B0(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

void (**sub_20B4338C8(void (**a1)(int a1), void (**a2)(int a1)))(int a1)
{
  void (*v3)(int);
  void (*v4)(int);
  unint64_t *v5;
  unint64_t v6;
  void (*v7)(int);
  void (*v8)(int);
  _QWORD v10[4];
  _QWORD v11[5];

  v11[4] = *MEMORY[0x24BDAC8D0];
  v3 = *a2;
  v4 = a2[1];
  v10[1] = *a2;
  v10[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)((char *)v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = sub_20B435084;
  v10[0] = sub_20B435084;
  if (v10 == a1)
    goto LABEL_9;
  v8 = *a1;
  if (!*a1)
  {
    a1[1] = v3;
    a1[2] = v4;
    *a1 = sub_20B435084;
    return a1;
  }
  v11[0] = 0;
  v11[1] = 0;
  ((void (*)(uint64_t, void (**)(int), _QWORD *, _QWORD, _QWORD))v8)(2, a1, v11, 0, 0);
  ((void (*)(int))v10[0])(2);
  ((void (*)(uint64_t, _QWORD *, _QWORD *, _QWORD, _QWORD))v11[0])(2, v11, v10, 0, 0);
  if (v11[0])
    ((void (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v11[0])(0, v11, 0, 0, 0);
  v7 = (void (*)(int))v10[0];
  if (v10[0])
LABEL_9:
    v7(0);
  return a1;
}

void sub_20B433A10(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

void (**sub_20B433A28(void (**a1)(int a1), void (**a2)(int a1)))(int a1)
{
  void (*v3)(int);
  void (*v4)(int);
  unint64_t *v5;
  unint64_t v6;
  void (*v7)(int);
  void (*v8)(int);
  _QWORD v10[4];
  _QWORD v11[5];

  v11[4] = *MEMORY[0x24BDAC8D0];
  v3 = *a2;
  v4 = a2[1];
  v10[1] = *a2;
  v10[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)((char *)v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = sub_20B435260;
  v10[0] = sub_20B435260;
  if (v10 == a1)
    goto LABEL_9;
  v8 = *a1;
  if (!*a1)
  {
    a1[1] = v3;
    a1[2] = v4;
    *a1 = sub_20B435260;
    return a1;
  }
  v11[0] = 0;
  v11[1] = 0;
  ((void (*)(uint64_t, void (**)(int), _QWORD *, _QWORD, _QWORD))v8)(2, a1, v11, 0, 0);
  ((void (*)(int))v10[0])(2);
  ((void (*)(uint64_t, _QWORD *, _QWORD *, _QWORD, _QWORD))v11[0])(2, v11, v10, 0, 0);
  if (v11[0])
    ((void (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v11[0])(0, v11, 0, 0, 0);
  v7 = (void (*)(int))v10[0];
  if (v10[0])
LABEL_9:
    v7(0);
  return a1;
}

void sub_20B433B70(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

void (**sub_20B433B88(void (**a1)(int a1), void (**a2)(int a1)))(int a1)
{
  void (*v3)(int);
  void (*v4)(int);
  unint64_t *v5;
  unint64_t v6;
  void (*v7)(int);
  void (*v8)(int);
  _QWORD v10[4];
  _QWORD v11[5];

  v11[4] = *MEMORY[0x24BDAC8D0];
  v3 = *a2;
  v4 = a2[1];
  v10[1] = *a2;
  v10[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)((char *)v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = sub_20B43543C;
  v10[0] = sub_20B43543C;
  if (v10 == a1)
    goto LABEL_9;
  v8 = *a1;
  if (!*a1)
  {
    a1[1] = v3;
    a1[2] = v4;
    *a1 = sub_20B43543C;
    return a1;
  }
  v11[0] = 0;
  v11[1] = 0;
  ((void (*)(uint64_t, void (**)(int), _QWORD *, _QWORD, _QWORD))v8)(2, a1, v11, 0, 0);
  ((void (*)(int))v10[0])(2);
  ((void (*)(uint64_t, _QWORD *, _QWORD *, _QWORD, _QWORD))v11[0])(2, v11, v10, 0, 0);
  if (v11[0])
    ((void (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v11[0])(0, v11, 0, 0, 0);
  v7 = (void (*)(int))v10[0];
  if (v10[0])
LABEL_9:
    v7(0);
  return a1;
}

void sub_20B433CD0(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

void (**sub_20B433CE8(void (**a1)(int a1), void (**a2)(int a1)))(int a1)
{
  void (*v3)(int);
  void (*v4)(int);
  unint64_t *v5;
  unint64_t v6;
  void (*v7)(int);
  void (*v8)(int);
  _QWORD v10[4];
  _QWORD v11[5];

  v11[4] = *MEMORY[0x24BDAC8D0];
  v3 = *a2;
  v4 = a2[1];
  v10[1] = *a2;
  v10[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)((char *)v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = sub_20B435618;
  v10[0] = sub_20B435618;
  if (v10 == a1)
    goto LABEL_9;
  v8 = *a1;
  if (!*a1)
  {
    a1[1] = v3;
    a1[2] = v4;
    *a1 = sub_20B435618;
    return a1;
  }
  v11[0] = 0;
  v11[1] = 0;
  ((void (*)(uint64_t, void (**)(int), _QWORD *, _QWORD, _QWORD))v8)(2, a1, v11, 0, 0);
  ((void (*)(int))v10[0])(2);
  ((void (*)(uint64_t, _QWORD *, _QWORD *, _QWORD, _QWORD))v11[0])(2, v11, v10, 0, 0);
  if (v11[0])
    ((void (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v11[0])(0, v11, 0, 0, 0);
  v7 = (void (*)(int))v10[0];
  if (v10[0])
LABEL_9:
    v7(0);
  return a1;
}

void sub_20B433E30(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

void (**sub_20B433E48(void (**a1)(int a1), void (**a2)(int a1)))(int a1)
{
  void (*v3)(int);
  void (*v4)(int);
  unint64_t *v5;
  unint64_t v6;
  void (*v7)(int);
  void (*v8)(int);
  _QWORD v10[4];
  _QWORD v11[5];

  v11[4] = *MEMORY[0x24BDAC8D0];
  v3 = *a2;
  v4 = a2[1];
  v10[1] = *a2;
  v10[2] = v4;
  if (v4)
  {
    v5 = (unint64_t *)((char *)v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = sub_20B4357F4;
  v10[0] = sub_20B4357F4;
  if (v10 == a1)
    goto LABEL_9;
  v8 = *a1;
  if (!*a1)
  {
    a1[1] = v3;
    a1[2] = v4;
    *a1 = sub_20B4357F4;
    return a1;
  }
  v11[0] = 0;
  v11[1] = 0;
  ((void (*)(uint64_t, void (**)(int), _QWORD *, _QWORD, _QWORD))v8)(2, a1, v11, 0, 0);
  ((void (*)(int))v10[0])(2);
  ((void (*)(uint64_t, _QWORD *, _QWORD *, _QWORD, _QWORD))v11[0])(2, v11, v10, 0, 0);
  if (v11[0])
    ((void (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v11[0])(0, v11, 0, 0, 0);
  v7 = (void (*)(int))v10[0];
  if (v10[0])
LABEL_9:
    v7(0);
  return a1;
}

void sub_20B433F90(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20AEC01C0(a1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B433FA8(_QWORD *a1, void (**a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  char *v8;

  v8 = (char *)operator new(0x38uLL);
  *((_QWORD *)v8 + 1) = 0;
  *((_QWORD *)v8 + 2) = 0;
  *(_QWORD *)v8 = &off_24C41CC08;
  *(_OWORD *)(v8 + 40) = 0u;
  *(_OWORD *)(v8 + 24) = 0u;
  *a1 = v8 + 24;
  a1[1] = v8;
  a1[2] = 0;
  a1[3] = 0;
  sub_20AFA2CC8((_QWORD *)v8 + 3, a2);
  if (!a4
    && a3
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD33A, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  a1[2] = a3;
  a1[3] = a4;
  return a1;
}

void sub_20B434060(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B4340A4(_QWORD *a1, void (**a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  char *v8;

  v8 = (char *)operator new(0x38uLL);
  *((_QWORD *)v8 + 1) = 0;
  *((_QWORD *)v8 + 2) = 0;
  *(_QWORD *)v8 = &off_24C41CC08;
  *(_OWORD *)(v8 + 40) = 0u;
  *(_OWORD *)(v8 + 24) = 0u;
  *a1 = v8 + 24;
  a1[1] = v8;
  a1[2] = 0;
  a1[3] = 0;
  sub_20AFA2CC8((_QWORD *)v8 + 3, a2);
  if (!a4
    && a3
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD33A, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  a1[2] = a3;
  a1[3] = a4;
  return a1;
}

void sub_20B43415C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B4341A0(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  void **v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *result;
  _QWORD *v11;
  uint64_t v12[2];
  void *__p[2];
  unsigned __int8 v14;
  char v15;

  LOBYTE(__p[0]) = 123;
  v3 = sub_20AEC01D0(a1, (uint64_t)__p, 1);
  v5 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  if (v5)
    v6 = v4 == 0;
  else
    v6 = 0;
  if (v6
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD33A, 0, (void (*)(void **))sub_20B532360))
  {
    abort();
  }
  v12[0] = v5;
  v12[1] = v4;
  sub_20B4342C0(v12, __p);
  if ((v14 & 0x80u) == 0)
    v7 = __p;
  else
    v7 = (void **)__p[0];
  if ((v14 & 0x80u) == 0)
    v8 = v14;
  else
    v8 = (uint64_t)__p[1];
  v9 = sub_20AEC01D0(v3, (uint64_t)v7, v8);
  v15 = 125;
  result = sub_20AEC01D0(v9, (uint64_t)&v15, 1);
  v11 = result;
  if ((char)v14 < 0)
  {
    operator delete(__p[0]);
    return v11;
  }
  return result;
}

void sub_20B4342A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20B4342C0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::ios_base *v8;
  uint64_t v9;
  uint64_t v10;
  const std::ios_base *v11;
  uint64_t v12;
  const void **v13;
  const std::locale::facet *v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  size_t v18;
  uint64_t *v19;
  unint64_t v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[16];
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *__p[2];
  __int128 v33;
  int v34;
  uint64_t v35[19];
  std::locale v36;

  v4 = MEMORY[0x24BEDB870];
  v5 = MEMORY[0x24BEDB870] + 64;
  v6 = *(_QWORD *)(MEMORY[0x24BEDB800] + 8);
  v7 = *(_QWORD *)(MEMORY[0x24BEDB800] + 16);
  v35[0] = MEMORY[0x24BEDB870] + 64;
  v26 = v6;
  *(uint64_t *)((char *)&v26 + *(_QWORD *)(v6 - 24)) = v7;
  v8 = (std::ios_base *)((char *)&v26 + *(_QWORD *)(v26 - 24));
  std::ios_base::init(v8, &v27);
  v8[1].__vftable = 0;
  v8[1].__fmtflags_ = -1;
  v26 = v4 + 24;
  v35[0] = v5;
  std::streambuf::basic_streambuf();
  v9 = MEMORY[0x24BEDB848];
  v27 = MEMORY[0x24BEDB848] + 16;
  *(_OWORD *)__p = 0u;
  v33 = 0u;
  v34 = 16;
  v10 = v26;
  *(_DWORD *)((char *)&v26 + *(_QWORD *)(v26 - 24) + 8) = *(_DWORD *)((_BYTE *)&v26 + *(_QWORD *)(v26 - 24) + 8) & 0xFFFFFFB5 | 8;
  v11 = (const std::ios_base *)((char *)&v26 + *(_QWORD *)(v10 - 24));
  if (v11[1].__fmtflags_ == -1)
  {
    std::ios_base::getloc(v11);
    v14 = std::locale::use_facet(&v36, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 32);
    std::locale::~locale(&v36);
    v11[1].__fmtflags_ = 48;
    v12 = *a1;
    v13 = (const void **)v28;
    if (!*a1)
      goto LABEL_8;
  }
  else
  {
    v11[1].__fmtflags_ = 48;
    v12 = *a1;
    v13 = (const void **)v28;
    if (!*a1)
      goto LABEL_8;
  }
  v15 = a1[1];
  for (i = v12 - 1; ; --i)
  {
    *(_QWORD *)&v28[*(_QWORD *)(v26 - 24)] = 2;
    std::ostream::operator<<();
    if (!i)
      break;
    *(_QWORD *)&v28[*(_QWORD *)(v26 - 24)] = 1;
    LOBYTE(v36.__locale_) = 32;
    sub_20AEC01D0(&v26, (uint64_t)&v36, 1);
    ++v15;
  }
LABEL_8:
  if ((v34 & 0x10) != 0)
  {
    v20 = *((_QWORD *)&v33 + 1);
    if (*((_QWORD *)&v33 + 1) < v31)
    {
      *((_QWORD *)&v33 + 1) = v31;
      v20 = v31;
    }
    v13 = (const void **)&v30;
    v17 = v9;
  }
  else
  {
    v17 = v9;
    if ((v34 & 8) == 0)
    {
      v18 = 0;
      a2[23] = 0;
      v19 = (uint64_t *)MEMORY[0x24BEDB800];
      goto LABEL_23;
    }
    v20 = v29;
  }
  v21 = *v13;
  v18 = v20 - (_QWORD)v21;
  v19 = (uint64_t *)MEMORY[0x24BEDB800];
  if (v20 - (unint64_t)v21 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  if (v18 >= 0x17)
  {
    v22 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17)
      v22 = v18 | 7;
    v23 = v22 + 1;
    v24 = operator new(v22 + 1);
    *((_QWORD *)a2 + 1) = v18;
    *((_QWORD *)a2 + 2) = v23 | 0x8000000000000000;
    *(_QWORD *)a2 = v24;
    a2 = v24;
    goto LABEL_22;
  }
  a2[23] = v18;
  if (v18)
LABEL_22:
    memmove(a2, v21, v18);
LABEL_23:
  a2[v18] = 0;
  v26 = *v19;
  *(uint64_t *)((char *)&v26 + *(_QWORD *)(v26 - 24)) = v19[3];
  v27 = v17 + 16;
  if (SBYTE7(v33) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x20BD35758](v35);
}

void sub_20B4345B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B43596C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B4345C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  std::locale::~locale((std::locale *)(v2 - 96));
  sub_20B43596C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B4345E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x20BD35758](v1);
  _Unwind_Resume(a1);
}

void sub_20B434608(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x20BD35758](v1);
  _Unwind_Resume(a1);
}

void sub_20B434620(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B43596C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B434634(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B43596C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B434648(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20B43596C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B43465C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41CC08;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B43466C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41CC08;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B43469C(uint64_t result)
{
  uint64_t (*v1)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD);

  v1 = *(uint64_t (**)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))(result + 24);
  if (v1)
    return v1(0, result + 24, 0, 0, 0);
  return result;
}

void sub_20B4346D4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CC58;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B4346E8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CC58;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B43471C(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
}

void sub_20B434738(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20B43476C()
{
  _QWORD *v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t result;

  v1 = (std::__shared_weak_count *)v0[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  result = 0;
  *v0 = 0;
  return result;
}

uint64_t sub_20B4347B8(uint64_t a1, uint64_t a2, void (**a3)(int a1))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(v3 + 16);
  a3[1] = *(void (**)(int))(v3 + 8);
  a3[2] = (void (*)(int))v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = 0;
  *a3 = sub_20B434738;
  return result;
}

__n128 sub_20B4347F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)a3 = sub_20B434738;
  *(_QWORD *)v3 = 0;
  return result;
}

uint64_t sub_20B434820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    v6 = *(_QWORD *)(a4 + 8);
    if (v6 != 0x800000020B60D5E2)
    {
      if (((v6 & 0x800000020B60D5E2 & 0x8000000000000000) != 0) == __OFSUB__(v6, 0x800000020B60D5E2))
        return 0;
      if (strcmp((const char *)(v6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020B60D5E2 & 0x7FFFFFFFFFFFFFFFLL)))
      {
        return 0;
      }
    }
  }
  else if (a5 != &unk_20B60D618)
  {
    return 0;
  }
  return v5 + 8;
}

void sub_20B4348B0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CCB8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B4348C4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CCB8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B4348F8(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
}

void sub_20B434914(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20B434948()
{
  _QWORD *v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t result;

  v1 = (std::__shared_weak_count *)v0[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  result = 0;
  *v0 = 0;
  return result;
}

uint64_t sub_20B434994(uint64_t a1, uint64_t a2, void (**a3)(int a1))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(v3 + 16);
  a3[1] = *(void (**)(int))(v3 + 8);
  a3[2] = (void (*)(int))v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = 0;
  *a3 = sub_20B434914;
  return result;
}

__n128 sub_20B4349D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)a3 = sub_20B434914;
  *(_QWORD *)v3 = 0;
  return result;
}

uint64_t sub_20B4349FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    v6 = *(_QWORD *)(a4 + 8);
    if (v6 != 0x800000020B60D666)
    {
      if (((v6 & 0x800000020B60D666 & 0x8000000000000000) != 0) == __OFSUB__(v6, 0x800000020B60D666))
        return 0;
      if (strcmp((const char *)(v6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020B60D666 & 0x7FFFFFFFFFFFFFFFLL)))
      {
        return 0;
      }
    }
  }
  else if (a5 != &unk_20B60D69C)
  {
    return 0;
  }
  return v5 + 8;
}

void sub_20B434A8C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CD18;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B434AA0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CD18;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B434AD4(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
}

void sub_20B434AF0(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20B434B24()
{
  _QWORD *v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t result;

  v1 = (std::__shared_weak_count *)v0[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  result = 0;
  *v0 = 0;
  return result;
}

uint64_t sub_20B434B70(uint64_t a1, uint64_t a2, void (**a3)(int a1))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(v3 + 16);
  a3[1] = *(void (**)(int))(v3 + 8);
  a3[2] = (void (*)(int))v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = 0;
  *a3 = sub_20B434AF0;
  return result;
}

__n128 sub_20B434BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)a3 = sub_20B434AF0;
  *(_QWORD *)v3 = 0;
  return result;
}

uint64_t sub_20B434BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    v6 = *(_QWORD *)(a4 + 8);
    if (v6 != 0x800000020B60D6EALL)
    {
      if (((v6 & 0x800000020B60D6EALL & 0x8000000000000000) != 0) == __OFSUB__(v6, 0x800000020B60D6EALL))
        return 0;
      if (strcmp((const char *)(v6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020B60D6EALL & 0x7FFFFFFFFFFFFFFFLL)))
      {
        return 0;
      }
    }
  }
  else if (a5 != &unk_20B60D720)
  {
    return 0;
  }
  return v5 + 8;
}

void sub_20B434C68(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CD78;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B434C7C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CD78;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B434CB0(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
}

void sub_20B434CCC(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20B434D00()
{
  _QWORD *v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t result;

  v1 = (std::__shared_weak_count *)v0[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  result = 0;
  *v0 = 0;
  return result;
}

uint64_t sub_20B434D4C(uint64_t a1, uint64_t a2, void (**a3)(int a1))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(v3 + 16);
  a3[1] = *(void (**)(int))(v3 + 8);
  a3[2] = (void (*)(int))v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = 0;
  *a3 = sub_20B434CCC;
  return result;
}

__n128 sub_20B434D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)a3 = sub_20B434CCC;
  *(_QWORD *)v3 = 0;
  return result;
}

uint64_t sub_20B434DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    v6 = *(_QWORD *)(a4 + 8);
    if (v6 != 0x800000020B60D76ELL)
    {
      if (((v6 & 0x800000020B60D76ELL & 0x8000000000000000) != 0) == __OFSUB__(v6, 0x800000020B60D76ELL))
        return 0;
      if (strcmp((const char *)(v6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020B60D76ELL & 0x7FFFFFFFFFFFFFFFLL)))
      {
        return 0;
      }
    }
  }
  else if (a5 != &unk_20B60D7A4)
  {
    return 0;
  }
  return v5 + 8;
}

void sub_20B434E44(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CDD8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B434E58(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CDD8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B434E8C(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
}

void sub_20B434EA8(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20B434EDC()
{
  _QWORD *v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t result;

  v1 = (std::__shared_weak_count *)v0[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  result = 0;
  *v0 = 0;
  return result;
}

uint64_t sub_20B434F28(uint64_t a1, uint64_t a2, void (**a3)(int a1))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(v3 + 16);
  a3[1] = *(void (**)(int))(v3 + 8);
  a3[2] = (void (*)(int))v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = 0;
  *a3 = sub_20B434EA8;
  return result;
}

__n128 sub_20B434F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)a3 = sub_20B434EA8;
  *(_QWORD *)v3 = 0;
  return result;
}

uint64_t sub_20B434F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    v6 = *(_QWORD *)(a4 + 8);
    if (v6 != 0x800000020B60D7F2)
    {
      if (((v6 & 0x800000020B60D7F2 & 0x8000000000000000) != 0) == __OFSUB__(v6, 0x800000020B60D7F2))
        return 0;
      if (strcmp((const char *)(v6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020B60D7F2 & 0x7FFFFFFFFFFFFFFFLL)))
      {
        return 0;
      }
    }
  }
  else if (a5 != &unk_20B60D828)
  {
    return 0;
  }
  return v5 + 8;
}

void sub_20B435020(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CE38;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B435034(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CE38;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B435068(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
}

void sub_20B435084(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20B4350B8()
{
  _QWORD *v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t result;

  v1 = (std::__shared_weak_count *)v0[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  result = 0;
  *v0 = 0;
  return result;
}

uint64_t sub_20B435104(uint64_t a1, uint64_t a2, void (**a3)(int a1))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(v3 + 16);
  a3[1] = *(void (**)(int))(v3 + 8);
  a3[2] = (void (*)(int))v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = 0;
  *a3 = sub_20B435084;
  return result;
}

__n128 sub_20B435140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)a3 = sub_20B435084;
  *(_QWORD *)v3 = 0;
  return result;
}

uint64_t sub_20B43516C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    v6 = *(_QWORD *)(a4 + 8);
    if (v6 != 0x800000020B60D876)
    {
      if (((v6 & 0x800000020B60D876 & 0x8000000000000000) != 0) == __OFSUB__(v6, 0x800000020B60D876))
        return 0;
      if (strcmp((const char *)(v6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020B60D876 & 0x7FFFFFFFFFFFFFFFLL)))
      {
        return 0;
      }
    }
  }
  else if (a5 != &unk_20B60D8AC)
  {
    return 0;
  }
  return v5 + 8;
}

void sub_20B4351FC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CE98;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B435210(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CE98;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B435244(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
}

void sub_20B435260(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20B435294()
{
  _QWORD *v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t result;

  v1 = (std::__shared_weak_count *)v0[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  result = 0;
  *v0 = 0;
  return result;
}

uint64_t sub_20B4352E0(uint64_t a1, uint64_t a2, void (**a3)(int a1))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(v3 + 16);
  a3[1] = *(void (**)(int))(v3 + 8);
  a3[2] = (void (*)(int))v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = 0;
  *a3 = sub_20B435260;
  return result;
}

__n128 sub_20B43531C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)a3 = sub_20B435260;
  *(_QWORD *)v3 = 0;
  return result;
}

uint64_t sub_20B435348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    v6 = *(_QWORD *)(a4 + 8);
    if (v6 != 0x800000020B60D8FALL)
    {
      if (((v6 & 0x800000020B60D8FALL & 0x8000000000000000) != 0) == __OFSUB__(v6, 0x800000020B60D8FALL))
        return 0;
      if (strcmp((const char *)(v6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020B60D8FALL & 0x7FFFFFFFFFFFFFFFLL)))
      {
        return 0;
      }
    }
  }
  else if (a5 != &unk_20B60D930)
  {
    return 0;
  }
  return v5 + 8;
}

void sub_20B4353D8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CEF8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B4353EC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CEF8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B435420(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
}

void sub_20B43543C(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20B435470()
{
  _QWORD *v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t result;

  v1 = (std::__shared_weak_count *)v0[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  result = 0;
  *v0 = 0;
  return result;
}

uint64_t sub_20B4354BC(uint64_t a1, uint64_t a2, void (**a3)(int a1))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(v3 + 16);
  a3[1] = *(void (**)(int))(v3 + 8);
  a3[2] = (void (*)(int))v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = 0;
  *a3 = sub_20B43543C;
  return result;
}

__n128 sub_20B4354F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)a3 = sub_20B43543C;
  *(_QWORD *)v3 = 0;
  return result;
}

uint64_t sub_20B435524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    v6 = *(_QWORD *)(a4 + 8);
    if (v6 != 0x800000020B60D97ELL)
    {
      if (((v6 & 0x800000020B60D97ELL & 0x8000000000000000) != 0) == __OFSUB__(v6, 0x800000020B60D97ELL))
        return 0;
      if (strcmp((const char *)(v6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020B60D97ELL & 0x7FFFFFFFFFFFFFFFLL)))
      {
        return 0;
      }
    }
  }
  else if (a5 != &unk_20B60D9B4)
  {
    return 0;
  }
  return v5 + 8;
}

void sub_20B4355B4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CF58;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B4355C8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CF58;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B4355FC(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
}

void sub_20B435618(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20B43564C()
{
  _QWORD *v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t result;

  v1 = (std::__shared_weak_count *)v0[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  result = 0;
  *v0 = 0;
  return result;
}

uint64_t sub_20B435698(uint64_t a1, uint64_t a2, void (**a3)(int a1))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(v3 + 16);
  a3[1] = *(void (**)(int))(v3 + 8);
  a3[2] = (void (*)(int))v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = 0;
  *a3 = sub_20B435618;
  return result;
}

__n128 sub_20B4356D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)a3 = sub_20B435618;
  *(_QWORD *)v3 = 0;
  return result;
}

uint64_t sub_20B435700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    v6 = *(_QWORD *)(a4 + 8);
    if (v6 != 0x800000020B60DA02)
    {
      if (((v6 & 0x800000020B60DA02 & 0x8000000000000000) != 0) == __OFSUB__(v6, 0x800000020B60DA02))
        return 0;
      if (strcmp((const char *)(v6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020B60DA02 & 0x7FFFFFFFFFFFFFFFLL)))
      {
        return 0;
      }
    }
  }
  else if (a5 != &unk_20B60DA38)
  {
    return 0;
  }
  return v5 + 8;
}

void sub_20B435790(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CFB8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B4357A4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C41CFB8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

void sub_20B4357D8(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
}

void sub_20B4357F4(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20B435828()
{
  _QWORD *v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t result;

  v1 = (std::__shared_weak_count *)v0[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  result = 0;
  *v0 = 0;
  return result;
}

uint64_t sub_20B435874(uint64_t a1, uint64_t a2, void (**a3)(int a1))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(v3 + 16);
  a3[1] = *(void (**)(int))(v3 + 8);
  a3[2] = (void (*)(int))v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = 0;
  *a3 = sub_20B4357F4;
  return result;
}

__n128 sub_20B4358B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)a3 = sub_20B4357F4;
  *(_QWORD *)v3 = 0;
  return result;
}

uint64_t sub_20B4358DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    v6 = *(_QWORD *)(a4 + 8);
    if (v6 != 0x800000020B60DA86)
    {
      if (((v6 & 0x800000020B60DA86 & 0x8000000000000000) != 0) == __OFSUB__(v6, 0x800000020B60DA86))
        return 0;
      if (strcmp((const char *)(v6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020B60DA86 & 0x7FFFFFFFFFFFFFFFLL)))
      {
        return 0;
      }
    }
  }
  else if (a5 != &unk_20B60DABC)
  {
    return 0;
  }
  return v5 + 8;
}

uint64_t sub_20B43596C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x24BEDB800];
  v3 = *MEMORY[0x24BEDB800];
  *(_QWORD *)a1 = *MEMORY[0x24BEDB800];
  *(_QWORD *)(a1 + *(_QWORD *)(v3 - 24)) = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(a1 + 8) = MEMORY[0x24BEDB848] + 16;
  if (*(char *)(a1 + 95) < 0)
    operator delete(*(void **)(a1 + 72));
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x20BD35758](a1 + 112);
  return a1;
}

void sub_20B4359F0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  __int128 v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21[5])(uint64_t);

  v21[4] = *(void (**)(uint64_t))MEMORY[0x24BDAC8D0];
  v4 = operator new();
  v5 = *(_QWORD *)a1;
  *(_QWORD *)v4 = *(_QWORD *)a1;
  v15 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 8) = v15;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  v18 = 0;
  v6 = operator new();
  *(_QWORD *)v6 = &off_24C41D018;
  *(_QWORD *)(v6 + 8) = 0;
  if (v5)
    v7 = ((uint64_t)v15 - v5) >> 2;
  else
    v7 = 0;
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = v4;
  v21[1] = (void (*)(uint64_t))v4;
  v21[2] = (void (*)(uint64_t))v6;
  v19 = 0;
  v20 = 0;
  v21[0] = (void (*)(uint64_t))sub_20B435DC8;
  sub_20B43CF4C(&v16, 7, v21, v7, v5);
  if (v21[0])
    v21[0](0);
  v8 = v16;
  v9 = v17;
  *a2 = v16;
  a2[1] = v9;
  v16 = 0;
  v17 = 0;
  if ((*(_BYTE *)(v8 + 56) & 3) != 0)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v10 = v17;
    if (v17)
    {
      p_shared_owners = (unint64_t *)&v17->__shared_owners_;
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
  v13 = v18;
  if (v18)
  {
    v14 = *(void **)v18;
    if (*(_QWORD *)v18)
    {
      *(_QWORD *)(v18 + 8) = v14;
      operator delete(v14);
    }
    MEMORY[0x20BD3583C](v13, 0x20C40960023A9);
  }
}

void sub_20B435C04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,char a24)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20B435C8C(uint64_t *a1)
{
  uint64_t v2;
  void *v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = *(void **)v2;
    if (*(_QWORD *)v2)
    {
      *(_QWORD *)(v2 + 8) = v3;
      operator delete(v3);
    }
    MEMORY[0x20BD3583C](v2, 0x20C40960023A9);
  }
  return a1;
}

void sub_20B435CE4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B435D08(uint64_t result)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    v2 = *(void **)v1;
    if (*(_QWORD *)v1)
    {
      *(_QWORD *)(v1 + 8) = v2;
      operator delete(v2);
    }
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20B435D58(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteINS_6vectorINS_5arrayIN4cv3d3esn4math6VectorIiLj2EEELm2EEENS_9allocatorIS8_EEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteINS_6vectorINS_5arrayIN4cv3d3esn4math6VectorIiLj2EEELm2EEENS_9all"
                                "ocatorIS8_EEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteINS_6vectorINS_5arrayIN4cv3d3esn4math6VectorIiLj2EEELm2EEENS_9allocatorIS8_EEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteINS_6vectorINS_5arrayIN4cv3d3esn4math6VectorIiLj2EEELm2EEENS_9allocatorIS8_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_20B435DC8(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20B435DFC()
{
  _QWORD *v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t result;

  v1 = (std::__shared_weak_count *)v0[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  result = 0;
  *v0 = 0;
  return result;
}

uint64_t sub_20B435E48(uint64_t a1, uint64_t a2, void (**a3)(int a1))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(v3 + 16);
  a3[1] = *(void (**)(int))(v3 + 8);
  a3[2] = (void (*)(int))v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = 0;
  *a3 = sub_20B435DC8;
  return result;
}

__n128 sub_20B435E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)a3 = sub_20B435DC8;
  *(_QWORD *)v3 = 0;
  return result;
}

uint64_t sub_20B435EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  unint64_t v6;

  if (a4)
  {
    v6 = *(_QWORD *)(a4 + 8);
    if ((char *)v6 != "NSt3__110shared_ptrINS_6vectorINS_5arrayIN4cv3d3esn4math6VectorIiLj2EEELm2EEENS_9allocatorIS8_EEEEEE")
    {
      if (((v6 & (unint64_t)"NSt3__110shared_ptrINS_6vectorINS_5arrayIN4cv3d3esn4math6VectorIiLj2EEELm2EEENS_9all"
                                    "ocatorIS8_EEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v6, "NSt3__110shared_ptrINS_6vectorINS_5arrayIN4cv3d3esn4math6VectorIiLj2EEELm2EEENS_9allocatorIS8_EEEEEE"))return 0;
      if (strcmp((const char *)(v6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrINS_6vectorINS_5arrayIN4cv3d3esn4math6VectorIiLj2EEELm2EEENS_9allocatorIS8_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        return 0;
      }
    }
  }
  else if (a5 != &unk_20B60DC60)
  {
    return 0;
  }
  return v5 + 8;
}

void sub_20B435F30(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22[5])(uint64_t);

  v22[4] = *(void (**)(uint64_t))MEMORY[0x24BDAC8D0];
  v4 = operator new();
  v5 = *(_QWORD *)a1;
  *(_QWORD *)v4 = *(_QWORD *)a1;
  v6 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 8) = v6;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  if (v5)
    v7 = v5;
  else
    v7 = 0;
  if (v5)
    v8 = ((uint64_t)v6 - v5) >> 2;
  else
    v8 = 0;
  v19 = 0;
  v9 = operator new();
  *(_QWORD *)v9 = &off_24C41D078;
  *(_QWORD *)(v9 + 8) = 0;
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = v4;
  v22[1] = (void (*)(uint64_t))v4;
  v22[2] = (void (*)(uint64_t))v9;
  v20 = 0;
  v21 = 0;
  v22[0] = (void (*)(uint64_t))sub_20B4362D0;
  sub_20B43CF4C(&v17, 7, v22, v8, v7);
  if (v22[0])
    v22[0](0);
  v10 = v17;
  v11 = v18;
  *a2 = v17;
  a2[1] = v11;
  v17 = 0;
  v18 = 0;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v10 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v12 = v18;
    if (v18)
    {
      p_shared_owners = (unint64_t *)&v18->__shared_owners_;
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
  v15 = v19;
  if (v19)
  {
    v16 = *(void **)v19;
    if (*(_QWORD *)v19)
    {
      *(_QWORD *)(v19 + 8) = v16;
      operator delete(v16);
    }
    MEMORY[0x20BD3583C](v15, 0x20C40960023A9);
  }
}

void sub_20B436160(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,char a22)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B4361EC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B436210(uint64_t result)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    v2 = *(void **)v1;
    if (*(_QWORD *)v1)
    {
      *(_QWORD *)(v1 + 8) = v2;
      operator delete(v2);
    }
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20B436260(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteINS_6vectorINS_5arrayIN4cv3d3esn4math6VectorIiLj3EEELm2EEENS_9allocatorIS8_EEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteINS_6vectorINS_5arrayIN4cv3d3esn4math6VectorIiLj3EEELm2EEENS_9all"
                                "ocatorIS8_EEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteINS_6vectorINS_5arrayIN4cv3d3esn4math6VectorIiLj3EEELm2EEENS_9allocatorIS8_EEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteINS_6vectorINS_5arrayIN4cv3d3esn4math6VectorIiLj3EEELm2EEENS_9allocatorIS8_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_20B4362D0(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20B436304()
{
  _QWORD *v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t result;

  v1 = (std::__shared_weak_count *)v0[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  result = 0;
  *v0 = 0;
  return result;
}

uint64_t sub_20B436350(uint64_t a1, uint64_t a2, void (**a3)(int a1))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(v3 + 16);
  a3[1] = *(void (**)(int))(v3 + 8);
  a3[2] = (void (*)(int))v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = 0;
  *a3 = sub_20B4362D0;
  return result;
}

__n128 sub_20B43638C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)a3 = sub_20B4362D0;
  *(_QWORD *)v3 = 0;
  return result;
}

uint64_t sub_20B4363B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  unint64_t v6;

  if (a4)
  {
    v6 = *(_QWORD *)(a4 + 8);
    if ((char *)v6 != "NSt3__110shared_ptrINS_6vectorINS_5arrayIN4cv3d3esn4math6VectorIiLj3EEELm2EEENS_9allocatorIS8_EEEEEE")
    {
      if (((v6 & (unint64_t)"NSt3__110shared_ptrINS_6vectorINS_5arrayIN4cv3d3esn4math6VectorIiLj3EEELm2EEENS_9all"
                                    "ocatorIS8_EEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v6, "NSt3__110shared_ptrINS_6vectorINS_5arrayIN4cv3d3esn4math6VectorIiLj3EEELm2EEENS_9allocatorIS8_EEEEEE"))return 0;
      if (strcmp((const char *)(v6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrINS_6vectorINS_5arrayIN4cv3d3esn4math6VectorIiLj3EEELm2EEENS_9allocatorIS8_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        return 0;
      }
    }
  }
  else if (a5 != &unk_20B60DDC8)
  {
    return 0;
  }
  return v5 + 8;
}

_QWORD *sub_20B436438(int a1, unsigned __int8 **a2, _QWORD **a3)
{
  unsigned __int8 *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  _QWORD *v9;
  unsigned __int16 *v10;
  unint64_t v11;
  BOOL v12;
  BOOL v13;
  unsigned int *v14;
  unint64_t v15;
  BOOL v16;
  BOOL v17;
  unint64_t *v18;
  unint64_t v19;
  BOOL v20;
  char *v21;
  unint64_t v22;
  BOOL v23;
  BOOL v24;
  __int16 *v25;
  unint64_t v26;
  BOOL v27;
  BOOL v28;
  int *v29;
  unint64_t v30;
  BOOL v31;
  BOOL v32;
  uint64_t *v33;
  unint64_t v34;
  BOOL v35;
  float *v36;
  unint64_t v37;
  BOOL v38;
  BOOL v39;
  double *v40;
  unint64_t v41;
  BOOL v42;
  unsigned __int8 *v43;
  unsigned __int8 *v44;
  unsigned __int16 *v45;
  unsigned __int16 *v46;
  unsigned int *v47;
  unsigned int *v48;
  unint64_t *v49;
  unint64_t *v50;
  char *v51;
  char *v52;
  __int16 *v53;
  __int16 *v54;
  int *v55;
  int *v56;
  uint64_t *v57;
  uint64_t *v58;
  float *v59;
  float *v60;
  double *v61;
  double *v62;

  switch(a1)
  {
    case 0:
      sub_20B43D624(a2, 0);
      v6 = *((_QWORD *)*a2 + 5);
      v5 = (unsigned __int8 *)*((_QWORD *)*a2 + 6);
      if (v5)
        v7 = 1;
      else
        v7 = v6 == 0;
      if (!v7
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (v5)
        v8 = 0;
      else
        v8 = v6 >= 4;
      if (!v8)
      {
        v9 = *a3;
        if (v6 <= 3)
          return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
        goto LABEL_116;
      }
      if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        v9 = *a3;
LABEL_116:
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20B437554(v9, v5);
        sub_20AEC01D0(v9, (uint64_t)",", 1);
        sub_20B437554(v9, v5 + 2);
        sub_20AEC01D0(v9, (uint64_t)"}", 1);
        if (v6 >> 2 != 1)
        {
          v43 = &v5[4 * (v6 >> 2)];
          v44 = v5 + 4;
          do
          {
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20AEC01D0(v9, (uint64_t)"{", 1);
            sub_20B437554(v9, v44);
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20B437554(v9, v44 + 2);
            sub_20AEC01D0(v9, (uint64_t)"}", 1);
            v44 += 4;
          }
          while (v44 != v43);
        }
        return sub_20AEC01D0(v9, (uint64_t)"}", 1);
      }
      goto LABEL_173;
    case 1:
      sub_20B43D624(a2, 1);
      v11 = *((_QWORD *)*a2 + 5);
      v10 = (unsigned __int16 *)*((_QWORD *)*a2 + 6);
      if (v10)
        v12 = 0;
      else
        v12 = v11 >= 2;
      if (v12
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (v10)
        v13 = 0;
      else
        v13 = v11 >= 8;
      if (!v13)
      {
        v9 = *a3;
        if (v11 <= 7)
          return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
        goto LABEL_122;
      }
      if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        v9 = *a3;
LABEL_122:
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20B43783C(v9, v10);
        sub_20AEC01D0(v9, (uint64_t)",", 1);
        sub_20B43783C(v9, v10 + 2);
        sub_20AEC01D0(v9, (uint64_t)"}", 1);
        if (v11 >> 3 != 1)
        {
          v45 = &v10[4 * (v11 >> 3)];
          v46 = v10 + 4;
          do
          {
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20AEC01D0(v9, (uint64_t)"{", 1);
            sub_20B43783C(v9, v46);
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20B43783C(v9, v46 + 2);
            sub_20AEC01D0(v9, (uint64_t)"}", 1);
            v46 += 4;
          }
          while (v46 != v45);
        }
        return sub_20AEC01D0(v9, (uint64_t)"}", 1);
      }
      goto LABEL_173;
    case 2:
      sub_20B43D624(a2, 2);
      v15 = *((_QWORD *)*a2 + 5);
      v14 = (unsigned int *)*((_QWORD *)*a2 + 6);
      if (v14)
        v16 = 0;
      else
        v16 = v15 >= 4;
      if (v16
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (v14)
        v17 = 0;
      else
        v17 = v15 >= 0x10;
      if (!v17)
      {
        v9 = *a3;
        if (v15 <= 0xF)
          return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
        goto LABEL_128;
      }
      if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        v9 = *a3;
LABEL_128:
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20B2891A4(v9, v14);
        sub_20AEC01D0(v9, (uint64_t)",", 1);
        sub_20B2891A4(v9, v14 + 2);
        sub_20AEC01D0(v9, (uint64_t)"}", 1);
        if (v15 >> 4 != 1)
        {
          v47 = &v14[4 * (v15 >> 4)];
          v48 = v14 + 4;
          do
          {
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20AEC01D0(v9, (uint64_t)"{", 1);
            sub_20B2891A4(v9, v48);
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20B2891A4(v9, v48 + 2);
            sub_20AEC01D0(v9, (uint64_t)"}", 1);
            v48 += 4;
          }
          while (v48 != v47);
        }
        return sub_20AEC01D0(v9, (uint64_t)"}", 1);
      }
      goto LABEL_173;
    case 3:
      sub_20B43D624(a2, 3);
      v19 = *((_QWORD *)*a2 + 5);
      v18 = (unint64_t *)*((_QWORD *)*a2 + 6);
      if (v18)
        v20 = 0;
      else
        v20 = v19 >= 8;
      if (v20
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (!v18 && v19 >= 0x20)
      {
        if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v9 = *a3;
          goto LABEL_133;
        }
LABEL_173:
        abort();
      }
      v9 = *a3;
      if (v19 > 0x1F)
      {
LABEL_133:
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20B437B24(v9, v18);
        sub_20AEC01D0(v9, (uint64_t)",", 1);
        sub_20B437B24(v9, v18 + 2);
        sub_20AEC01D0(v9, (uint64_t)"}", 1);
        if (v19 >> 5 != 1)
        {
          v49 = &v18[4 * (v19 >> 5)];
          v50 = v18 + 4;
          do
          {
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20AEC01D0(v9, (uint64_t)"{", 1);
            sub_20B437B24(v9, v50);
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20B437B24(v9, v50 + 2);
            sub_20AEC01D0(v9, (uint64_t)"}", 1);
            v50 += 4;
          }
          while (v50 != v49);
        }
        return sub_20AEC01D0(v9, (uint64_t)"}", 1);
      }
      return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
    case 5:
      sub_20B43D624(a2, 5);
      v22 = *((_QWORD *)*a2 + 5);
      v21 = (char *)*((_QWORD *)*a2 + 6);
      if (v21)
        v23 = 1;
      else
        v23 = v22 == 0;
      if (!v23
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (v21)
        v24 = 0;
      else
        v24 = v22 >= 4;
      if (v24)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_173;
        }
        v9 = *a3;
      }
      else
      {
        v9 = *a3;
        if (v22 <= 3)
          return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
      }
      sub_20AEC01D0(v9, (uint64_t)"{", 1);
      sub_20AEC01D0(v9, (uint64_t)"{", 1);
      sub_20B437E0C(v9, v21);
      sub_20AEC01D0(v9, (uint64_t)",", 1);
      sub_20B437E0C(v9, v21 + 2);
      sub_20AEC01D0(v9, (uint64_t)"}", 1);
      if (v22 >> 2 != 1)
      {
        v51 = &v21[4 * (v22 >> 2)];
        v52 = v21 + 4;
        do
        {
          sub_20AEC01D0(v9, (uint64_t)",", 1);
          sub_20AEC01D0(v9, (uint64_t)"{", 1);
          sub_20B437E0C(v9, v52);
          sub_20AEC01D0(v9, (uint64_t)",", 1);
          sub_20B437E0C(v9, v52 + 2);
          sub_20AEC01D0(v9, (uint64_t)"}", 1);
          v52 += 4;
        }
        while (v52 != v51);
      }
      return sub_20AEC01D0(v9, (uint64_t)"}", 1);
    case 6:
      sub_20B43D624(a2, 6);
      v26 = *((_QWORD *)*a2 + 5);
      v25 = (__int16 *)*((_QWORD *)*a2 + 6);
      if (v25)
        v27 = 0;
      else
        v27 = v26 >= 2;
      if (v27
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (v25)
        v28 = 0;
      else
        v28 = v26 >= 8;
      if (v28)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_173;
        }
        v9 = *a3;
      }
      else
      {
        v9 = *a3;
        if (v26 <= 7)
          return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
      }
      sub_20AEC01D0(v9, (uint64_t)"{", 1);
      sub_20AEC01D0(v9, (uint64_t)"{", 1);
      sub_20B4380F4(v9, v25);
      sub_20AEC01D0(v9, (uint64_t)",", 1);
      sub_20B4380F4(v9, v25 + 2);
      sub_20AEC01D0(v9, (uint64_t)"}", 1);
      if (v26 >> 3 != 1)
      {
        v53 = &v25[4 * (v26 >> 3)];
        v54 = v25 + 4;
        do
        {
          sub_20AEC01D0(v9, (uint64_t)",", 1);
          sub_20AEC01D0(v9, (uint64_t)"{", 1);
          sub_20B4380F4(v9, v54);
          sub_20AEC01D0(v9, (uint64_t)",", 1);
          sub_20B4380F4(v9, v54 + 2);
          sub_20AEC01D0(v9, (uint64_t)"}", 1);
          v54 += 4;
        }
        while (v54 != v53);
      }
      return sub_20AEC01D0(v9, (uint64_t)"}", 1);
    case 7:
      sub_20B43D624(a2, 7);
      v30 = *((_QWORD *)*a2 + 5);
      v29 = (int *)*((_QWORD *)*a2 + 6);
      if (v29)
        v31 = 0;
      else
        v31 = v30 >= 4;
      if (v31
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (v29)
        v32 = 0;
      else
        v32 = v30 >= 0x10;
      if (v32)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_173;
        }
        v9 = *a3;
      }
      else
      {
        v9 = *a3;
        if (v30 <= 0xF)
          return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
      }
      sub_20AEC01D0(v9, (uint64_t)"{", 1);
      sub_20AEC01D0(v9, (uint64_t)"{", 1);
      sub_20B4383DC(v9, v29);
      sub_20AEC01D0(v9, (uint64_t)",", 1);
      sub_20B4383DC(v9, v29 + 2);
      sub_20AEC01D0(v9, (uint64_t)"}", 1);
      if (v30 >> 4 != 1)
      {
        v55 = &v29[4 * (v30 >> 4)];
        v56 = v29 + 4;
        do
        {
          sub_20AEC01D0(v9, (uint64_t)",", 1);
          sub_20AEC01D0(v9, (uint64_t)"{", 1);
          sub_20B4383DC(v9, v56);
          sub_20AEC01D0(v9, (uint64_t)",", 1);
          sub_20B4383DC(v9, v56 + 2);
          sub_20AEC01D0(v9, (uint64_t)"}", 1);
          v56 += 4;
        }
        while (v56 != v55);
      }
      return sub_20AEC01D0(v9, (uint64_t)"}", 1);
    case 8:
      sub_20B43D624(a2, 8);
      v34 = *((_QWORD *)*a2 + 5);
      v33 = (uint64_t *)*((_QWORD *)*a2 + 6);
      if (v33)
        v35 = 0;
      else
        v35 = v34 >= 8;
      if (v35
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (!v33 && v34 >= 0x20)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_173;
        }
        v9 = *a3;
LABEL_156:
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20B4386C4(v9, v33);
        sub_20AEC01D0(v9, (uint64_t)",", 1);
        sub_20B4386C4(v9, v33 + 2);
        sub_20AEC01D0(v9, (uint64_t)"}", 1);
        if (v34 >> 5 != 1)
        {
          v57 = &v33[4 * (v34 >> 5)];
          v58 = v33 + 4;
          do
          {
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20AEC01D0(v9, (uint64_t)"{", 1);
            sub_20B4386C4(v9, v58);
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20B4386C4(v9, v58 + 2);
            sub_20AEC01D0(v9, (uint64_t)"}", 1);
            v58 += 4;
          }
          while (v58 != v57);
        }
        return sub_20AEC01D0(v9, (uint64_t)"}", 1);
      }
      v9 = *a3;
      if (v34 > 0x1F)
        goto LABEL_156;
      return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
    case 11:
      sub_20B43D624(a2, 11);
      v37 = *((_QWORD *)*a2 + 5);
      v36 = (float *)*((_QWORD *)*a2 + 6);
      if (v36)
        v38 = 0;
      else
        v38 = v37 >= 4;
      if (v38
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (v36)
        v39 = 0;
      else
        v39 = v37 >= 0x10;
      if (v39)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_173;
        }
        v9 = *a3;
      }
      else
      {
        v9 = *a3;
        if (v37 <= 0xF)
          return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
      }
      sub_20AEC01D0(v9, (uint64_t)"{", 1);
      sub_20AEC01D0(v9, (uint64_t)"{", 1);
      sub_20B4389AC(v9, v36);
      sub_20AEC01D0(v9, (uint64_t)",", 1);
      sub_20B4389AC(v9, v36 + 2);
      sub_20AEC01D0(v9, (uint64_t)"}", 1);
      if (v37 >> 4 != 1)
      {
        v59 = &v36[4 * (v37 >> 4)];
        v60 = v36 + 4;
        do
        {
          sub_20AEC01D0(v9, (uint64_t)",", 1);
          sub_20AEC01D0(v9, (uint64_t)"{", 1);
          sub_20B4389AC(v9, v60);
          sub_20AEC01D0(v9, (uint64_t)",", 1);
          sub_20B4389AC(v9, v60 + 2);
          sub_20AEC01D0(v9, (uint64_t)"}", 1);
          v60 += 4;
        }
        while (v60 != v59);
      }
      return sub_20AEC01D0(v9, (uint64_t)"}", 1);
    case 12:
      sub_20B43D624(a2, 12);
      v41 = *((_QWORD *)*a2 + 5);
      v40 = (double *)*((_QWORD *)*a2 + 6);
      if (v40)
        v42 = 0;
      else
        v42 = v41 >= 8;
      if (v42
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (!v40 && v41 >= 0x20)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_173;
        }
        v9 = *a3;
LABEL_169:
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20B438AD8(v9, v40);
        sub_20AEC01D0(v9, (uint64_t)",", 1);
        sub_20B438AD8(v9, v40 + 2);
        sub_20AEC01D0(v9, (uint64_t)"}", 1);
        if (v41 >> 5 != 1)
        {
          v61 = &v40[4 * (v41 >> 5)];
          v62 = v40 + 4;
          do
          {
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20AEC01D0(v9, (uint64_t)"{", 1);
            sub_20B438AD8(v9, v62);
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20B438AD8(v9, v62 + 2);
            sub_20AEC01D0(v9, (uint64_t)"}", 1);
            v62 += 4;
          }
          while (v62 != v61);
        }
        return sub_20AEC01D0(v9, (uint64_t)"}", 1);
      }
      v9 = *a3;
      if (v41 > 0x1F)
        goto LABEL_169;
      return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
    default:
      sub_20B521E58(a1);
  }
}

_QWORD *sub_20B437554(_QWORD *a1, unsigned __int8 *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B437680((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B43763C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B437658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B43766C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B437680(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::string v11;
  uint64_t v12;
  std::string *v13;
  uint64_t v14;
  std::string *v15;
  std::string *v16;
  uint64_t *v17;

  v12 = a2;
  v13 = (std::string *)"{";
  v14 = a2;
  v15 = (std::string *)"{";
  v16 = (std::string *)"{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_11;
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  ((void (*)(std::string *))off_24C41D0E0[v3])(&v11);
  std::to_string(&v11, *a3);
  v12 = a2;
  v13 = &v11;
  v14 = a2;
  v15 = &v11;
  v16 = &v11;
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    sub_20AECFAB8();
  v17 = &v12;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v6])(&v17, a2);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  v12 = a2;
  v13 = (std::string *)",";
  v14 = a2;
  v15 = (std::string *)",";
  v16 = (std::string *)",";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
    goto LABEL_11;
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v7])(&v11, a2);
  std::to_string(&v11, a3[1]);
  v12 = a2;
  v13 = &v11;
  v14 = a2;
  v15 = &v11;
  v16 = &v11;
  v8 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v8 == -1)
    sub_20AECFAB8();
  v17 = &v12;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v8])(&v17, a2);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  v12 = a2;
  v13 = (std::string *)"}";
  v14 = a2;
  v15 = (std::string *)"}";
  v16 = (std::string *)"}";
  v9 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v9 == -1)
LABEL_11:
    sub_20AECFAB8();
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  return ((uint64_t (*)(std::string *, uint64_t))off_24C41D0E0[v9])(&v11, a2);
}

void sub_20B437818(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B43783C(_QWORD *a1, unsigned __int16 *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B437968((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B437924(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B437940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B437954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B437968(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::string v11;
  uint64_t v12;
  std::string *v13;
  uint64_t v14;
  std::string *v15;
  std::string *v16;
  uint64_t *v17;

  v12 = a2;
  v13 = (std::string *)"{";
  v14 = a2;
  v15 = (std::string *)"{";
  v16 = (std::string *)"{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_11;
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  ((void (*)(std::string *))off_24C41D0E0[v3])(&v11);
  std::to_string(&v11, *a3);
  v12 = a2;
  v13 = &v11;
  v14 = a2;
  v15 = &v11;
  v16 = &v11;
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    sub_20AECFAB8();
  v17 = &v12;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v6])(&v17, a2);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  v12 = a2;
  v13 = (std::string *)",";
  v14 = a2;
  v15 = (std::string *)",";
  v16 = (std::string *)",";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
    goto LABEL_11;
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v7])(&v11, a2);
  std::to_string(&v11, a3[1]);
  v12 = a2;
  v13 = &v11;
  v14 = a2;
  v15 = &v11;
  v16 = &v11;
  v8 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v8 == -1)
    sub_20AECFAB8();
  v17 = &v12;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v8])(&v17, a2);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  v12 = a2;
  v13 = (std::string *)"}";
  v14 = a2;
  v15 = (std::string *)"}";
  v16 = (std::string *)"}";
  v9 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v9 == -1)
LABEL_11:
    sub_20AECFAB8();
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  return ((uint64_t (*)(std::string *, uint64_t))off_24C41D0E0[v9])(&v11, a2);
}

void sub_20B437B00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B437B24(_QWORD *a1, unint64_t *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B437C50((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B437C0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B437C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B437C3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B437C50(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::string v11;
  uint64_t v12;
  std::string *v13;
  uint64_t v14;
  std::string *v15;
  std::string *v16;
  uint64_t *v17;

  v12 = a2;
  v13 = (std::string *)"{";
  v14 = a2;
  v15 = (std::string *)"{";
  v16 = (std::string *)"{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_11;
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  ((void (*)(std::string *))off_24C41D0E0[v3])(&v11);
  std::to_string(&v11, *a3);
  v12 = a2;
  v13 = &v11;
  v14 = a2;
  v15 = &v11;
  v16 = &v11;
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    sub_20AECFAB8();
  v17 = &v12;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v6])(&v17, a2);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  v12 = a2;
  v13 = (std::string *)",";
  v14 = a2;
  v15 = (std::string *)",";
  v16 = (std::string *)",";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
    goto LABEL_11;
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v7])(&v11, a2);
  std::to_string(&v11, a3[1]);
  v12 = a2;
  v13 = &v11;
  v14 = a2;
  v15 = &v11;
  v16 = &v11;
  v8 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v8 == -1)
    sub_20AECFAB8();
  v17 = &v12;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v8])(&v17, a2);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  v12 = a2;
  v13 = (std::string *)"}";
  v14 = a2;
  v15 = (std::string *)"}";
  v16 = (std::string *)"}";
  v9 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v9 == -1)
LABEL_11:
    sub_20AECFAB8();
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  return ((uint64_t (*)(std::string *, uint64_t))off_24C41D0E0[v9])(&v11, a2);
}

void sub_20B437DE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B437E0C(_QWORD *a1, char *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B437F38((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B437EF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B437F10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B437F24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B437F38(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::string v11;
  uint64_t v12;
  std::string *v13;
  uint64_t v14;
  std::string *v15;
  std::string *v16;
  uint64_t *v17;

  v12 = a2;
  v13 = (std::string *)"{";
  v14 = a2;
  v15 = (std::string *)"{";
  v16 = (std::string *)"{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_11;
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  ((void (*)(std::string *))off_24C41D0E0[v3])(&v11);
  std::to_string(&v11, *a3);
  v12 = a2;
  v13 = &v11;
  v14 = a2;
  v15 = &v11;
  v16 = &v11;
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    sub_20AECFAB8();
  v17 = &v12;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v6])(&v17, a2);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  v12 = a2;
  v13 = (std::string *)",";
  v14 = a2;
  v15 = (std::string *)",";
  v16 = (std::string *)",";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
    goto LABEL_11;
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v7])(&v11, a2);
  std::to_string(&v11, a3[1]);
  v12 = a2;
  v13 = &v11;
  v14 = a2;
  v15 = &v11;
  v16 = &v11;
  v8 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v8 == -1)
    sub_20AECFAB8();
  v17 = &v12;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v8])(&v17, a2);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  v12 = a2;
  v13 = (std::string *)"}";
  v14 = a2;
  v15 = (std::string *)"}";
  v16 = (std::string *)"}";
  v9 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v9 == -1)
LABEL_11:
    sub_20AECFAB8();
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  return ((uint64_t (*)(std::string *, uint64_t))off_24C41D0E0[v9])(&v11, a2);
}

void sub_20B4380D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B4380F4(_QWORD *a1, __int16 *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B438220((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B4381DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B4381F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B43820C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B438220(uint64_t a1, uint64_t a2, __int16 *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::string v11;
  uint64_t v12;
  std::string *v13;
  uint64_t v14;
  std::string *v15;
  std::string *v16;
  uint64_t *v17;

  v12 = a2;
  v13 = (std::string *)"{";
  v14 = a2;
  v15 = (std::string *)"{";
  v16 = (std::string *)"{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_11;
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  ((void (*)(std::string *))off_24C41D0E0[v3])(&v11);
  std::to_string(&v11, *a3);
  v12 = a2;
  v13 = &v11;
  v14 = a2;
  v15 = &v11;
  v16 = &v11;
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    sub_20AECFAB8();
  v17 = &v12;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v6])(&v17, a2);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  v12 = a2;
  v13 = (std::string *)",";
  v14 = a2;
  v15 = (std::string *)",";
  v16 = (std::string *)",";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
    goto LABEL_11;
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v7])(&v11, a2);
  std::to_string(&v11, a3[1]);
  v12 = a2;
  v13 = &v11;
  v14 = a2;
  v15 = &v11;
  v16 = &v11;
  v8 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v8 == -1)
    sub_20AECFAB8();
  v17 = &v12;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v8])(&v17, a2);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  v12 = a2;
  v13 = (std::string *)"}";
  v14 = a2;
  v15 = (std::string *)"}";
  v16 = (std::string *)"}";
  v9 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v9 == -1)
LABEL_11:
    sub_20AECFAB8();
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  return ((uint64_t (*)(std::string *, uint64_t))off_24C41D0E0[v9])(&v11, a2);
}

void sub_20B4383B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B4383DC(_QWORD *a1, int *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B438508((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B4384C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B4384E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B4384F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B438508(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::string v11;
  uint64_t v12;
  std::string *v13;
  uint64_t v14;
  std::string *v15;
  std::string *v16;
  uint64_t *v17;

  v12 = a2;
  v13 = (std::string *)"{";
  v14 = a2;
  v15 = (std::string *)"{";
  v16 = (std::string *)"{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_11;
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  ((void (*)(std::string *))off_24C41D0E0[v3])(&v11);
  std::to_string(&v11, *a3);
  v12 = a2;
  v13 = &v11;
  v14 = a2;
  v15 = &v11;
  v16 = &v11;
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    sub_20AECFAB8();
  v17 = &v12;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v6])(&v17, a2);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  v12 = a2;
  v13 = (std::string *)",";
  v14 = a2;
  v15 = (std::string *)",";
  v16 = (std::string *)",";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
    goto LABEL_11;
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v7])(&v11, a2);
  std::to_string(&v11, a3[1]);
  v12 = a2;
  v13 = &v11;
  v14 = a2;
  v15 = &v11;
  v16 = &v11;
  v8 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v8 == -1)
    sub_20AECFAB8();
  v17 = &v12;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v8])(&v17, a2);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  v12 = a2;
  v13 = (std::string *)"}";
  v14 = a2;
  v15 = (std::string *)"}";
  v16 = (std::string *)"}";
  v9 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v9 == -1)
LABEL_11:
    sub_20AECFAB8();
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  return ((uint64_t (*)(std::string *, uint64_t))off_24C41D0E0[v9])(&v11, a2);
}

void sub_20B4386A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B4386C4(_QWORD *a1, uint64_t *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B4387F0((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B4387AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B4387C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B4387DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B4387F0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::string v11;
  uint64_t v12;
  std::string *v13;
  uint64_t v14;
  std::string *v15;
  std::string *v16;
  uint64_t *v17;

  v12 = a2;
  v13 = (std::string *)"{";
  v14 = a2;
  v15 = (std::string *)"{";
  v16 = (std::string *)"{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_11;
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  ((void (*)(std::string *))off_24C41D0E0[v3])(&v11);
  std::to_string(&v11, *a3);
  v12 = a2;
  v13 = &v11;
  v14 = a2;
  v15 = &v11;
  v16 = &v11;
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    sub_20AECFAB8();
  v17 = &v12;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v6])(&v17, a2);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  v12 = a2;
  v13 = (std::string *)",";
  v14 = a2;
  v15 = (std::string *)",";
  v16 = (std::string *)",";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
    goto LABEL_11;
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v7])(&v11, a2);
  std::to_string(&v11, a3[1]);
  v12 = a2;
  v13 = &v11;
  v14 = a2;
  v15 = &v11;
  v16 = &v11;
  v8 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v8 == -1)
    sub_20AECFAB8();
  v17 = &v12;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v8])(&v17, a2);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  v12 = a2;
  v13 = (std::string *)"}";
  v14 = a2;
  v15 = (std::string *)"}";
  v16 = (std::string *)"}";
  v9 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v9 == -1)
LABEL_11:
    sub_20AECFAB8();
  v11.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  return ((uint64_t (*)(std::string *, uint64_t))off_24C41D0E0[v9])(&v11, a2);
}

void sub_20B438988(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B4389AC(_QWORD *a1, float *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B0F9A54((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B438A94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B438AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B438AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B438AD8(_QWORD *a1, double *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B438C04((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B438BC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B438BDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B438BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B438C04(uint64_t a1, uint64_t a2, double *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  const char *v12;
  const char *v13;
  uint64_t *v14;

  v9 = a2;
  v10 = "{";
  v11 = a2;
  v12 = "{";
  v13 = "{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_5;
  v14 = &v9;
  ((void (*)(uint64_t **))off_24C41D0E0[v3])(&v14);
  sub_20AF55CBC((uint64_t)&v9, a2, a3);
  v9 = a2;
  v10 = ",";
  v11 = a2;
  v12 = ",";
  v13 = ",";
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    goto LABEL_5;
  v14 = &v9;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0E0[v6])(&v14, a2);
  sub_20AF55CBC((uint64_t)&v9, a2, a3 + 1);
  v9 = a2;
  v10 = "}";
  v11 = a2;
  v12 = "}";
  v13 = "}";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
LABEL_5:
    sub_20AECFAB8();
  v14 = &v9;
  return ((uint64_t (*)(uint64_t **, uint64_t))off_24C41D0E0[v7])(&v14, a2);
}

_QWORD *sub_20B438D08(int a1, unsigned __int8 **a2, _QWORD **a3)
{
  unsigned __int8 *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  _QWORD *v9;
  unsigned __int16 *v10;
  unint64_t v11;
  BOOL v12;
  BOOL v13;
  unsigned int *v14;
  unint64_t v15;
  BOOL v16;
  BOOL v17;
  unint64_t *v18;
  unint64_t v19;
  BOOL v20;
  char *v21;
  unint64_t v22;
  BOOL v23;
  BOOL v24;
  __int16 *v25;
  unint64_t v26;
  BOOL v27;
  BOOL v28;
  int *v29;
  unint64_t v30;
  BOOL v31;
  BOOL v32;
  uint64_t *v33;
  unint64_t v34;
  BOOL v35;
  float *v36;
  unint64_t v37;
  BOOL v38;
  BOOL v39;
  double *v40;
  unint64_t v41;
  BOOL v42;
  unsigned __int8 *v43;
  unsigned __int8 *v44;
  unsigned __int16 *v45;
  unsigned __int16 *v46;
  unsigned int *v47;
  unsigned int *v48;
  unint64_t *v49;
  unint64_t *v50;
  char *v51;
  char *v52;
  __int16 *v53;
  __int16 *v54;
  int *v55;
  int *v56;
  uint64_t *v57;
  uint64_t *v58;
  float *v59;
  float *v60;
  double *v61;
  double *v62;

  switch(a1)
  {
    case 0:
      sub_20B43D624(a2, 0);
      v6 = *((_QWORD *)*a2 + 5);
      v5 = (unsigned __int8 *)*((_QWORD *)*a2 + 6);
      if (v5)
        v7 = 1;
      else
        v7 = v6 == 0;
      if (!v7
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (v5)
        v8 = 0;
      else
        v8 = v6 >= 6;
      if (!v8)
      {
        v9 = *a3;
        if (v6 <= 5)
          return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
        goto LABEL_116;
      }
      if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        v9 = *a3;
LABEL_116:
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20B439EEC(v9, v5);
        sub_20AEC01D0(v9, (uint64_t)",", 1);
        sub_20B439EEC(v9, v5 + 3);
        sub_20AEC01D0(v9, (uint64_t)"}", 1);
        if (v6 - 6 >= 6)
        {
          v43 = &v5[6 * (v6 / 6)];
          v44 = v5 + 6;
          do
          {
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20AEC01D0(v9, (uint64_t)"{", 1);
            sub_20B439EEC(v9, v44);
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20B439EEC(v9, v44 + 3);
            sub_20AEC01D0(v9, (uint64_t)"}", 1);
            v44 += 6;
          }
          while (v44 != v43);
        }
        return sub_20AEC01D0(v9, (uint64_t)"}", 1);
      }
      goto LABEL_173;
    case 1:
      sub_20B43D624(a2, 1);
      v11 = *((_QWORD *)*a2 + 5);
      v10 = (unsigned __int16 *)*((_QWORD *)*a2 + 6);
      if (v10)
        v12 = 0;
      else
        v12 = v11 >= 2;
      if (v12
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (v10)
        v13 = 0;
      else
        v13 = v11 >= 0xC;
      if (!v13)
      {
        v9 = *a3;
        if (v11 <= 0xB)
          return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
        goto LABEL_122;
      }
      if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        v9 = *a3;
LABEL_122:
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20B43A258(v9, v10);
        sub_20AEC01D0(v9, (uint64_t)",", 1);
        sub_20B43A258(v9, v10 + 3);
        sub_20AEC01D0(v9, (uint64_t)"}", 1);
        if (v11 - 12 >= 0xC)
        {
          v45 = &v10[6 * (v11 / 0xC)];
          v46 = v10 + 6;
          do
          {
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20AEC01D0(v9, (uint64_t)"{", 1);
            sub_20B43A258(v9, v46);
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20B43A258(v9, v46 + 3);
            sub_20AEC01D0(v9, (uint64_t)"}", 1);
            v46 += 6;
          }
          while (v46 != v45);
        }
        return sub_20AEC01D0(v9, (uint64_t)"}", 1);
      }
      goto LABEL_173;
    case 2:
      sub_20B43D624(a2, 2);
      v15 = *((_QWORD *)*a2 + 5);
      v14 = (unsigned int *)*((_QWORD *)*a2 + 6);
      if (v14)
        v16 = 0;
      else
        v16 = v15 >= 4;
      if (v16
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (v14)
        v17 = 0;
      else
        v17 = v15 >= 0x18;
      if (!v17)
      {
        v9 = *a3;
        if (v15 <= 0x17)
          return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
        goto LABEL_128;
      }
      if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
      {
        v9 = *a3;
LABEL_128:
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20B43A5C4(v9, v14);
        sub_20AEC01D0(v9, (uint64_t)",", 1);
        sub_20B43A5C4(v9, v14 + 3);
        sub_20AEC01D0(v9, (uint64_t)"}", 1);
        if (v15 - 24 >= 0x18)
        {
          v47 = &v14[6 * (v15 / 0x18)];
          v48 = v14 + 6;
          do
          {
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20AEC01D0(v9, (uint64_t)"{", 1);
            sub_20B43A5C4(v9, v48);
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20B43A5C4(v9, v48 + 3);
            sub_20AEC01D0(v9, (uint64_t)"}", 1);
            v48 += 6;
          }
          while (v48 != v47);
        }
        return sub_20AEC01D0(v9, (uint64_t)"}", 1);
      }
      goto LABEL_173;
    case 3:
      sub_20B43D624(a2, 3);
      v19 = *((_QWORD *)*a2 + 5);
      v18 = (unint64_t *)*((_QWORD *)*a2 + 6);
      if (v18)
        v20 = 0;
      else
        v20 = v19 >= 8;
      if (v20
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (!v18 && v19 >= 0x30)
      {
        if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          v9 = *a3;
          goto LABEL_133;
        }
LABEL_173:
        abort();
      }
      v9 = *a3;
      if (v19 > 0x2F)
      {
LABEL_133:
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20B43A6F0(v9, v18);
        sub_20AEC01D0(v9, (uint64_t)",", 1);
        sub_20B43A6F0(v9, v18 + 3);
        sub_20AEC01D0(v9, (uint64_t)"}", 1);
        if (v19 - 48 >= 0x30)
        {
          v49 = &v18[6 * (v19 / 0x30)];
          v50 = v18 + 6;
          do
          {
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20AEC01D0(v9, (uint64_t)"{", 1);
            sub_20B43A6F0(v9, v50);
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20B43A6F0(v9, v50 + 3);
            sub_20AEC01D0(v9, (uint64_t)"}", 1);
            v50 += 6;
          }
          while (v50 != v49);
        }
        return sub_20AEC01D0(v9, (uint64_t)"}", 1);
      }
      return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
    case 5:
      sub_20B43D624(a2, 5);
      v22 = *((_QWORD *)*a2 + 5);
      v21 = (char *)*((_QWORD *)*a2 + 6);
      if (v21)
        v23 = 1;
      else
        v23 = v22 == 0;
      if (!v23
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (v21)
        v24 = 0;
      else
        v24 = v22 >= 6;
      if (v24)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_173;
        }
        v9 = *a3;
      }
      else
      {
        v9 = *a3;
        if (v22 <= 5)
          return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
      }
      sub_20AEC01D0(v9, (uint64_t)"{", 1);
      sub_20AEC01D0(v9, (uint64_t)"{", 1);
      sub_20B43AA5C(v9, v21);
      sub_20AEC01D0(v9, (uint64_t)",", 1);
      sub_20B43AA5C(v9, v21 + 3);
      sub_20AEC01D0(v9, (uint64_t)"}", 1);
      if (v22 - 6 >= 6)
      {
        v51 = &v21[6 * (v22 / 6)];
        v52 = v21 + 6;
        do
        {
          sub_20AEC01D0(v9, (uint64_t)",", 1);
          sub_20AEC01D0(v9, (uint64_t)"{", 1);
          sub_20B43AA5C(v9, v52);
          sub_20AEC01D0(v9, (uint64_t)",", 1);
          sub_20B43AA5C(v9, v52 + 3);
          sub_20AEC01D0(v9, (uint64_t)"}", 1);
          v52 += 6;
        }
        while (v52 != v51);
      }
      return sub_20AEC01D0(v9, (uint64_t)"}", 1);
    case 6:
      sub_20B43D624(a2, 6);
      v26 = *((_QWORD *)*a2 + 5);
      v25 = (__int16 *)*((_QWORD *)*a2 + 6);
      if (v25)
        v27 = 0;
      else
        v27 = v26 >= 2;
      if (v27
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (v25)
        v28 = 0;
      else
        v28 = v26 >= 0xC;
      if (v28)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_173;
        }
        v9 = *a3;
      }
      else
      {
        v9 = *a3;
        if (v26 <= 0xB)
          return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
      }
      sub_20AEC01D0(v9, (uint64_t)"{", 1);
      sub_20AEC01D0(v9, (uint64_t)"{", 1);
      sub_20B43ADC8(v9, v25);
      sub_20AEC01D0(v9, (uint64_t)",", 1);
      sub_20B43ADC8(v9, v25 + 3);
      sub_20AEC01D0(v9, (uint64_t)"}", 1);
      if (v26 - 12 >= 0xC)
      {
        v53 = &v25[6 * (v26 / 0xC)];
        v54 = v25 + 6;
        do
        {
          sub_20AEC01D0(v9, (uint64_t)",", 1);
          sub_20AEC01D0(v9, (uint64_t)"{", 1);
          sub_20B43ADC8(v9, v54);
          sub_20AEC01D0(v9, (uint64_t)",", 1);
          sub_20B43ADC8(v9, v54 + 3);
          sub_20AEC01D0(v9, (uint64_t)"}", 1);
          v54 += 6;
        }
        while (v54 != v53);
      }
      return sub_20AEC01D0(v9, (uint64_t)"}", 1);
    case 7:
      sub_20B43D624(a2, 7);
      v30 = *((_QWORD *)*a2 + 5);
      v29 = (int *)*((_QWORD *)*a2 + 6);
      if (v29)
        v31 = 0;
      else
        v31 = v30 >= 4;
      if (v31
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (v29)
        v32 = 0;
      else
        v32 = v30 >= 0x18;
      if (v32)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_173;
        }
        v9 = *a3;
      }
      else
      {
        v9 = *a3;
        if (v30 <= 0x17)
          return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
      }
      sub_20AEC01D0(v9, (uint64_t)"{", 1);
      sub_20AEC01D0(v9, (uint64_t)"{", 1);
      sub_20B43B134(v9, v29);
      sub_20AEC01D0(v9, (uint64_t)",", 1);
      sub_20B43B134(v9, v29 + 3);
      sub_20AEC01D0(v9, (uint64_t)"}", 1);
      if (v30 - 24 >= 0x18)
      {
        v55 = &v29[6 * (v30 / 0x18)];
        v56 = v29 + 6;
        do
        {
          sub_20AEC01D0(v9, (uint64_t)",", 1);
          sub_20AEC01D0(v9, (uint64_t)"{", 1);
          sub_20B43B134(v9, v56);
          sub_20AEC01D0(v9, (uint64_t)",", 1);
          sub_20B43B134(v9, v56 + 3);
          sub_20AEC01D0(v9, (uint64_t)"}", 1);
          v56 += 6;
        }
        while (v56 != v55);
      }
      return sub_20AEC01D0(v9, (uint64_t)"}", 1);
    case 8:
      sub_20B43D624(a2, 8);
      v34 = *((_QWORD *)*a2 + 5);
      v33 = (uint64_t *)*((_QWORD *)*a2 + 6);
      if (v33)
        v35 = 0;
      else
        v35 = v34 >= 8;
      if (v35
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (!v33 && v34 >= 0x30)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_173;
        }
        v9 = *a3;
LABEL_156:
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20B43B4A0(v9, v33);
        sub_20AEC01D0(v9, (uint64_t)",", 1);
        sub_20B43B4A0(v9, v33 + 3);
        sub_20AEC01D0(v9, (uint64_t)"}", 1);
        if (v34 - 48 >= 0x30)
        {
          v57 = &v33[6 * (v34 / 0x30)];
          v58 = v33 + 6;
          do
          {
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20AEC01D0(v9, (uint64_t)"{", 1);
            sub_20B43B4A0(v9, v58);
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20B43B4A0(v9, v58 + 3);
            sub_20AEC01D0(v9, (uint64_t)"}", 1);
            v58 += 6;
          }
          while (v58 != v57);
        }
        return sub_20AEC01D0(v9, (uint64_t)"}", 1);
      }
      v9 = *a3;
      if (v34 > 0x2F)
        goto LABEL_156;
      return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
    case 11:
      sub_20B43D624(a2, 11);
      v37 = *((_QWORD *)*a2 + 5);
      v36 = (float *)*((_QWORD *)*a2 + 6);
      if (v36)
        v38 = 0;
      else
        v38 = v37 >= 4;
      if (v38
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (v36)
        v39 = 0;
      else
        v39 = v37 >= 0x18;
      if (v39)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_173;
        }
        v9 = *a3;
      }
      else
      {
        v9 = *a3;
        if (v37 <= 0x17)
          return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
      }
      sub_20AEC01D0(v9, (uint64_t)"{", 1);
      sub_20AEC01D0(v9, (uint64_t)"{", 1);
      sub_20B43B80C(v9, v36);
      sub_20AEC01D0(v9, (uint64_t)",", 1);
      sub_20B43B80C(v9, v36 + 3);
      sub_20AEC01D0(v9, (uint64_t)"}", 1);
      if (v37 - 24 >= 0x18)
      {
        v59 = &v36[6 * (v37 / 0x18)];
        v60 = v36 + 6;
        do
        {
          sub_20AEC01D0(v9, (uint64_t)",", 1);
          sub_20AEC01D0(v9, (uint64_t)"{", 1);
          sub_20B43B80C(v9, v60);
          sub_20AEC01D0(v9, (uint64_t)",", 1);
          sub_20B43B80C(v9, v60 + 3);
          sub_20AEC01D0(v9, (uint64_t)"}", 1);
          v60 += 6;
        }
        while (v60 != v59);
      }
      return sub_20AEC01D0(v9, (uint64_t)"}", 1);
    case 12:
      sub_20B43D624(a2, 12);
      v41 = *((_QWORD *)*a2 + 5);
      v40 = (double *)*((_QWORD *)*a2 + 6);
      if (v40)
        v42 = 0;
      else
        v42 = v41 >= 8;
      if (v42
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_173;
      }
      if (!v40 && v41 >= 0x30)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_173;
        }
        v9 = *a3;
LABEL_169:
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20AEC01D0(v9, (uint64_t)"{", 1);
        sub_20B43B938(v9, v40);
        sub_20AEC01D0(v9, (uint64_t)",", 1);
        sub_20B43B938(v9, v40 + 3);
        sub_20AEC01D0(v9, (uint64_t)"}", 1);
        if (v41 - 48 >= 0x30)
        {
          v61 = &v40[6 * (v41 / 0x30)];
          v62 = v40 + 6;
          do
          {
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20AEC01D0(v9, (uint64_t)"{", 1);
            sub_20B43B938(v9, v62);
            sub_20AEC01D0(v9, (uint64_t)",", 1);
            sub_20B43B938(v9, v62 + 3);
            sub_20AEC01D0(v9, (uint64_t)"}", 1);
            v62 += 6;
          }
          while (v62 != v61);
        }
        return sub_20AEC01D0(v9, (uint64_t)"}", 1);
      }
      v9 = *a3;
      if (v41 > 0x2F)
        goto LABEL_169;
      return sub_20AEC01D0(v9, (uint64_t)"{}", 2);
    default:
      sub_20B521E58(a1);
  }
}

_QWORD *sub_20B439EEC(_QWORD *a1, unsigned __int8 *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B43A018((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B439FD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B439FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B43A004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B43A018(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::string v13;
  uint64_t v14;
  std::string *v15;
  uint64_t v16;
  std::string *v17;
  std::string *v18;
  uint64_t *v19;

  v14 = a2;
  v15 = (std::string *)"{";
  v16 = a2;
  v17 = (std::string *)"{";
  v18 = (std::string *)"{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *))off_24C41D0E0[v3])(&v13);
  std::to_string(&v13, *a3);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v6])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)",";
  v16 = a2;
  v17 = (std::string *)",";
  v18 = (std::string *)",";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v7])(&v13, a2);
  std::to_string(&v13, a3[1]);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v8 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v8 == -1)
    goto LABEL_16;
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v8])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)",";
  v16 = a2;
  v17 = (std::string *)",";
  v18 = (std::string *)",";
  v9 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v9 == -1)
LABEL_15:
    sub_20AECFAB8();
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v9])(&v13, a2);
  std::to_string(&v13, a3[2]);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v10 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v10 == -1)
LABEL_16:
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v10])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)"}";
  v16 = a2;
  v17 = (std::string *)"}";
  v18 = (std::string *)"}";
  v11 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v11 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  return ((uint64_t (*)(std::string *, uint64_t))off_24C41D0E0[v11])(&v13, a2);
}

void sub_20B43A234(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B43A258(_QWORD *a1, unsigned __int16 *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B43A384((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B43A340(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B43A35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B43A370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B43A384(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::string v13;
  uint64_t v14;
  std::string *v15;
  uint64_t v16;
  std::string *v17;
  std::string *v18;
  uint64_t *v19;

  v14 = a2;
  v15 = (std::string *)"{";
  v16 = a2;
  v17 = (std::string *)"{";
  v18 = (std::string *)"{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *))off_24C41D0E0[v3])(&v13);
  std::to_string(&v13, *a3);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v6])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)",";
  v16 = a2;
  v17 = (std::string *)",";
  v18 = (std::string *)",";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v7])(&v13, a2);
  std::to_string(&v13, a3[1]);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v8 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v8 == -1)
    goto LABEL_16;
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v8])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)",";
  v16 = a2;
  v17 = (std::string *)",";
  v18 = (std::string *)",";
  v9 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v9 == -1)
LABEL_15:
    sub_20AECFAB8();
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v9])(&v13, a2);
  std::to_string(&v13, a3[2]);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v10 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v10 == -1)
LABEL_16:
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v10])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)"}";
  v16 = a2;
  v17 = (std::string *)"}";
  v18 = (std::string *)"}";
  v11 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v11 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  return ((uint64_t (*)(std::string *, uint64_t))off_24C41D0E0[v11])(&v13, a2);
}

void sub_20B43A5A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B43A5C4(_QWORD *a1, unsigned int *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B0F9814((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B43A6AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B43A6C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B43A6DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B43A6F0(_QWORD *a1, unint64_t *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B43A81C((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B43A7D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B43A7F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B43A808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B43A81C(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::string v13;
  uint64_t v14;
  std::string *v15;
  uint64_t v16;
  std::string *v17;
  std::string *v18;
  uint64_t *v19;

  v14 = a2;
  v15 = (std::string *)"{";
  v16 = a2;
  v17 = (std::string *)"{";
  v18 = (std::string *)"{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *))off_24C41D0E0[v3])(&v13);
  std::to_string(&v13, *a3);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v6])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)",";
  v16 = a2;
  v17 = (std::string *)",";
  v18 = (std::string *)",";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v7])(&v13, a2);
  std::to_string(&v13, a3[1]);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v8 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v8 == -1)
    goto LABEL_16;
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v8])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)",";
  v16 = a2;
  v17 = (std::string *)",";
  v18 = (std::string *)",";
  v9 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v9 == -1)
LABEL_15:
    sub_20AECFAB8();
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v9])(&v13, a2);
  std::to_string(&v13, a3[2]);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v10 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v10 == -1)
LABEL_16:
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v10])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)"}";
  v16 = a2;
  v17 = (std::string *)"}";
  v18 = (std::string *)"}";
  v11 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v11 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  return ((uint64_t (*)(std::string *, uint64_t))off_24C41D0E0[v11])(&v13, a2);
}

void sub_20B43AA38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B43AA5C(_QWORD *a1, char *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B43AB88((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B43AB44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B43AB60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B43AB74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B43AB88(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::string v13;
  uint64_t v14;
  std::string *v15;
  uint64_t v16;
  std::string *v17;
  std::string *v18;
  uint64_t *v19;

  v14 = a2;
  v15 = (std::string *)"{";
  v16 = a2;
  v17 = (std::string *)"{";
  v18 = (std::string *)"{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *))off_24C41D0E0[v3])(&v13);
  std::to_string(&v13, *a3);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v6])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)",";
  v16 = a2;
  v17 = (std::string *)",";
  v18 = (std::string *)",";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v7])(&v13, a2);
  std::to_string(&v13, a3[1]);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v8 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v8 == -1)
    goto LABEL_16;
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v8])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)",";
  v16 = a2;
  v17 = (std::string *)",";
  v18 = (std::string *)",";
  v9 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v9 == -1)
LABEL_15:
    sub_20AECFAB8();
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v9])(&v13, a2);
  std::to_string(&v13, a3[2]);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v10 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v10 == -1)
LABEL_16:
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v10])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)"}";
  v16 = a2;
  v17 = (std::string *)"}";
  v18 = (std::string *)"}";
  v11 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v11 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  return ((uint64_t (*)(std::string *, uint64_t))off_24C41D0E0[v11])(&v13, a2);
}

void sub_20B43ADA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B43ADC8(_QWORD *a1, __int16 *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B43AEF4((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B43AEB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B43AECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B43AEE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B43AEF4(uint64_t a1, uint64_t a2, __int16 *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::string v13;
  uint64_t v14;
  std::string *v15;
  uint64_t v16;
  std::string *v17;
  std::string *v18;
  uint64_t *v19;

  v14 = a2;
  v15 = (std::string *)"{";
  v16 = a2;
  v17 = (std::string *)"{";
  v18 = (std::string *)"{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *))off_24C41D0E0[v3])(&v13);
  std::to_string(&v13, *a3);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v6])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)",";
  v16 = a2;
  v17 = (std::string *)",";
  v18 = (std::string *)",";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v7])(&v13, a2);
  std::to_string(&v13, a3[1]);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v8 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v8 == -1)
    goto LABEL_16;
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v8])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)",";
  v16 = a2;
  v17 = (std::string *)",";
  v18 = (std::string *)",";
  v9 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v9 == -1)
LABEL_15:
    sub_20AECFAB8();
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v9])(&v13, a2);
  std::to_string(&v13, a3[2]);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v10 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v10 == -1)
LABEL_16:
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v10])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)"}";
  v16 = a2;
  v17 = (std::string *)"}";
  v18 = (std::string *)"}";
  v11 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v11 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  return ((uint64_t (*)(std::string *, uint64_t))off_24C41D0E0[v11])(&v13, a2);
}

void sub_20B43B110(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B43B134(_QWORD *a1, int *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B43B260((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B43B21C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B43B238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B43B24C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B43B260(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::string v13;
  uint64_t v14;
  std::string *v15;
  uint64_t v16;
  std::string *v17;
  std::string *v18;
  uint64_t *v19;

  v14 = a2;
  v15 = (std::string *)"{";
  v16 = a2;
  v17 = (std::string *)"{";
  v18 = (std::string *)"{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *))off_24C41D0E0[v3])(&v13);
  std::to_string(&v13, *a3);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v6])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)",";
  v16 = a2;
  v17 = (std::string *)",";
  v18 = (std::string *)",";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v7])(&v13, a2);
  std::to_string(&v13, a3[1]);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v8 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v8 == -1)
    goto LABEL_16;
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v8])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)",";
  v16 = a2;
  v17 = (std::string *)",";
  v18 = (std::string *)",";
  v9 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v9 == -1)
LABEL_15:
    sub_20AECFAB8();
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v9])(&v13, a2);
  std::to_string(&v13, a3[2]);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v10 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v10 == -1)
LABEL_16:
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v10])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)"}";
  v16 = a2;
  v17 = (std::string *)"}";
  v18 = (std::string *)"}";
  v11 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v11 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  return ((uint64_t (*)(std::string *, uint64_t))off_24C41D0E0[v11])(&v13, a2);
}

void sub_20B43B47C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B43B4A0(_QWORD *a1, uint64_t *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B43B5CC((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B43B588(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B43B5A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B43B5B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20B43B5CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::string v13;
  uint64_t v14;
  std::string *v15;
  uint64_t v16;
  std::string *v17;
  std::string *v18;
  uint64_t *v19;

  v14 = a2;
  v15 = (std::string *)"{";
  v16 = a2;
  v17 = (std::string *)"{";
  v18 = (std::string *)"{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *))off_24C41D0E0[v3])(&v13);
  std::to_string(&v13, *a3);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v6])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)",";
  v16 = a2;
  v17 = (std::string *)",";
  v18 = (std::string *)",";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v7])(&v13, a2);
  std::to_string(&v13, a3[1]);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v8 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v8 == -1)
    goto LABEL_16;
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v8])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)",";
  v16 = a2;
  v17 = (std::string *)",";
  v18 = (std::string *)",";
  v9 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v9 == -1)
LABEL_15:
    sub_20AECFAB8();
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *, uint64_t))off_24C41D0E0[v9])(&v13, a2);
  std::to_string(&v13, a3[2]);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v10 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v10 == -1)
LABEL_16:
    sub_20AECFAB8();
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24C41D0F8[v10])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)"}";
  v16 = a2;
  v17 = (std::string *)"}";
  v18 = (std::string *)"}";
  v11 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v11 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  return ((uint64_t (*)(std::string *, uint64_t))off_24C41D0E0[v11])(&v13, a2);
}

void sub_20B43B7E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B43B80C(_QWORD *a1, float *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B0F96C4((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B43B8F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B43B910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B43B924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B43B938(_QWORD *a1, double *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20B24AA34((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C41D110[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24C41D0C8[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20AEC01D0(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20B43BA20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20B43BA3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B43BA50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B43BA64(_QWORD *a1, char a2, uint64_t a3)
{
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void (*v16)(int);
  std::__shared_weak_count *v17;

  v6 = (char *)operator new(0x58uLL);
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *(_QWORD *)v6 = &off_24C41D138;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  a1[1] = v6;
  *(_OWORD *)(v6 + 24) = 0u;
  v6 += 24;
  *a1 = v6;
  *v6 = a2;
  v7 = (char *)operator new(0x30uLL);
  *((_QWORD *)v7 + 2) = 0;
  *(_QWORD *)v7 = &unk_24C41CC58;
  *((_QWORD *)v7 + 1) = 0;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)a3;
  *((_QWORD *)v7 + 5) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v16 = (void (*)(int))(v7 + 24);
  v17 = (std::__shared_weak_count *)v7;
  sub_20B433064((void (**)(int))(*a1 + 8), &v16);
  v9 = *((_QWORD *)v7 + 3);
  v8 = *((_QWORD *)v7 + 4);
  v10 = v8 - v9;
  v11 = *a1;
  *(_QWORD *)(*a1 + 56) = v8 - v9;
  if (v8 && !v9)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v11 = *a1;
  }
  *(_QWORD *)(v11 + 40) = v10;
  *(_QWORD *)(v11 + 48) = v9;
  v12 = v17;
  if (!v17)
    return a1;
  p_shared_owners = (unint64_t *)&v17->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  return a1;
}

void sub_20B43BBD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_20AEC147C((uint64_t)&a9);
  sub_20AEC147C(v9);
  _Unwind_Resume(a1);
}

void sub_20B43BBF0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B43BC04(_QWORD *a1, char a2, uint64_t a3)
{
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void (*v16)(int);
  std::__shared_weak_count *v17;

  v6 = (char *)operator new(0x58uLL);
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *(_QWORD *)v6 = &off_24C41D138;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  a1[1] = v6;
  *(_OWORD *)(v6 + 24) = 0u;
  v6 += 24;
  *a1 = v6;
  *v6 = a2;
  v7 = (char *)operator new(0x30uLL);
  *((_QWORD *)v7 + 2) = 0;
  *(_QWORD *)v7 = &unk_24C41CCB8;
  *((_QWORD *)v7 + 1) = 0;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)a3;
  *((_QWORD *)v7 + 5) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v16 = (void (*)(int))(v7 + 24);
  v17 = (std::__shared_weak_count *)v7;
  sub_20B433348((void (**)(int))(*a1 + 8), &v16);
  v9 = *((_QWORD *)v7 + 3);
  v8 = *((_QWORD *)v7 + 4);
  v10 = v8 - v9;
  v11 = *a1;
  *(_QWORD *)(*a1 + 56) = v8 - v9;
  if (v8 && !v9)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v11 = *a1;
  }
  *(_QWORD *)(v11 + 40) = v10;
  *(_QWORD *)(v11 + 48) = v9;
  v12 = v17;
  if (!v17)
    return a1;
  p_shared_owners = (unint64_t *)&v17->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  return a1;
}

void sub_20B43BD70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_20AEC147C((uint64_t)&a9);
  sub_20AEC147C(v9);
  _Unwind_Resume(a1);
}

void sub_20B43BD90(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B43BDA4(_QWORD *a1, char a2, uint64_t a3)
{
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void (*v16)(int);
  std::__shared_weak_count *v17;

  v6 = (char *)operator new(0x58uLL);
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *(_QWORD *)v6 = &off_24C41D138;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  a1[1] = v6;
  *(_OWORD *)(v6 + 24) = 0u;
  v6 += 24;
  *a1 = v6;
  *v6 = a2;
  v7 = (char *)operator new(0x30uLL);
  *((_QWORD *)v7 + 2) = 0;
  *(_QWORD *)v7 = &unk_24C41CD18;
  *((_QWORD *)v7 + 1) = 0;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)a3;
  *((_QWORD *)v7 + 5) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v16 = (void (*)(int))(v7 + 24);
  v17 = (std::__shared_weak_count *)v7;
  sub_20B4334A8((void (**)(int))(*a1 + 8), &v16);
  v9 = *((_QWORD *)v7 + 3);
  v8 = *((_QWORD *)v7 + 4);
  v10 = v8 - v9;
  v11 = *a1;
  *(_QWORD *)(*a1 + 56) = (v8 - v9) >> 1;
  if (v8 && !v9)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v11 = *a1;
  }
  *(_QWORD *)(v11 + 40) = v10;
  *(_QWORD *)(v11 + 48) = v9;
  v12 = v17;
  if (!v17)
    return a1;
  p_shared_owners = (unint64_t *)&v17->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  return a1;
}

void sub_20B43BF14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_20AEC147C((uint64_t)&a9);
  sub_20AEC147C(v9);
  _Unwind_Resume(a1);
}

void sub_20B43BF34(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B43BF48(_QWORD *a1, char a2, uint64_t a3)
{
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void (*v16)(int);
  std::__shared_weak_count *v17;

  v6 = (char *)operator new(0x58uLL);
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *(_QWORD *)v6 = &off_24C41D138;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  a1[1] = v6;
  *(_OWORD *)(v6 + 24) = 0u;
  v6 += 24;
  *a1 = v6;
  *v6 = a2;
  v7 = (char *)operator new(0x30uLL);
  *((_QWORD *)v7 + 2) = 0;
  *(_QWORD *)v7 = &unk_24C41CD78;
  *((_QWORD *)v7 + 1) = 0;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)a3;
  *((_QWORD *)v7 + 5) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v16 = (void (*)(int))(v7 + 24);
  v17 = (std::__shared_weak_count *)v7;
  sub_20B433608((void (**)(int))(*a1 + 8), &v16);
  v9 = *((_QWORD *)v7 + 3);
  v8 = *((_QWORD *)v7 + 4);
  v10 = v8 - v9;
  v11 = *a1;
  *(_QWORD *)(*a1 + 56) = (v8 - v9) >> 1;
  if (v8 && !v9)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v11 = *a1;
  }
  *(_QWORD *)(v11 + 40) = v10;
  *(_QWORD *)(v11 + 48) = v9;
  v12 = v17;
  if (!v17)
    return a1;
  p_shared_owners = (unint64_t *)&v17->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  return a1;
}

void sub_20B43C0B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_20AEC147C((uint64_t)&a9);
  sub_20AEC147C(v9);
  _Unwind_Resume(a1);
}

void sub_20B43C0D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B43C0EC(_QWORD *a1, char a2, uint64_t a3)
{
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void (*v16)(int);
  std::__shared_weak_count *v17;

  v6 = (char *)operator new(0x58uLL);
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *(_QWORD *)v6 = &off_24C41D138;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  a1[1] = v6;
  *(_OWORD *)(v6 + 24) = 0u;
  v6 += 24;
  *a1 = v6;
  *v6 = a2;
  v7 = (char *)operator new(0x30uLL);
  *((_QWORD *)v7 + 2) = 0;
  *(_QWORD *)v7 = &unk_24C41CDD8;
  *((_QWORD *)v7 + 1) = 0;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)a3;
  *((_QWORD *)v7 + 5) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v16 = (void (*)(int))(v7 + 24);
  v17 = (std::__shared_weak_count *)v7;
  sub_20B433768((void (**)(int))(*a1 + 8), &v16);
  v9 = *((_QWORD *)v7 + 3);
  v8 = *((_QWORD *)v7 + 4);
  v10 = v8 - v9;
  v11 = *a1;
  *(_QWORD *)(*a1 + 56) = (v8 - v9) >> 2;
  if (v8 && !v9)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v11 = *a1;
  }
  *(_QWORD *)(v11 + 40) = v10;
  *(_QWORD *)(v11 + 48) = v9;
  v12 = v17;
  if (!v17)
    return a1;
  p_shared_owners = (unint64_t *)&v17->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  return a1;
}

void sub_20B43C25C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_20AEC147C((uint64_t)&a9);
  sub_20AEC147C(v9);
  _Unwind_Resume(a1);
}

void sub_20B43C27C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B43C290(_QWORD *a1, char a2, uint64_t a3)
{
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void (*v16)(int);
  std::__shared_weak_count *v17;

  v6 = (char *)operator new(0x58uLL);
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *(_QWORD *)v6 = &off_24C41D138;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  a1[1] = v6;
  *(_OWORD *)(v6 + 24) = 0u;
  v6 += 24;
  *a1 = v6;
  *v6 = a2;
  v7 = (char *)operator new(0x30uLL);
  *((_QWORD *)v7 + 2) = 0;
  *(_QWORD *)v7 = &unk_24C41CE38;
  *((_QWORD *)v7 + 1) = 0;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)a3;
  *((_QWORD *)v7 + 5) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v16 = (void (*)(int))(v7 + 24);
  v17 = (std::__shared_weak_count *)v7;
  sub_20B4338C8((void (**)(int))(*a1 + 8), &v16);
  v9 = *((_QWORD *)v7 + 3);
  v8 = *((_QWORD *)v7 + 4);
  v10 = v8 - v9;
  v11 = *a1;
  *(_QWORD *)(*a1 + 56) = (v8 - v9) >> 2;
  if (v8 && !v9)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v11 = *a1;
  }
  *(_QWORD *)(v11 + 40) = v10;
  *(_QWORD *)(v11 + 48) = v9;
  v12 = v17;
  if (!v17)
    return a1;
  p_shared_owners = (unint64_t *)&v17->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  return a1;
}

void sub_20B43C400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_20AEC147C((uint64_t)&a9);
  sub_20AEC147C(v9);
  _Unwind_Resume(a1);
}

void sub_20B43C420(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B43C434(_QWORD *a1, char a2, uint64_t a3)
{
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void (*v16)(int);
  std::__shared_weak_count *v17;

  v6 = (char *)operator new(0x58uLL);
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *(_QWORD *)v6 = &off_24C41D138;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  a1[1] = v6;
  *(_OWORD *)(v6 + 24) = 0u;
  v6 += 24;
  *a1 = v6;
  *v6 = a2;
  v7 = (char *)operator new(0x30uLL);
  *((_QWORD *)v7 + 2) = 0;
  *(_QWORD *)v7 = &unk_24C41CE98;
  *((_QWORD *)v7 + 1) = 0;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)a3;
  *((_QWORD *)v7 + 5) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v16 = (void (*)(int))(v7 + 24);
  v17 = (std::__shared_weak_count *)v7;
  sub_20B433A28((void (**)(int))(*a1 + 8), &v16);
  v9 = *((_QWORD *)v7 + 3);
  v8 = *((_QWORD *)v7 + 4);
  v10 = v8 - v9;
  v11 = *a1;
  *(_QWORD *)(*a1 + 56) = (v8 - v9) >> 3;
  if (v8 && !v9)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v11 = *a1;
  }
  *(_QWORD *)(v11 + 40) = v10;
  *(_QWORD *)(v11 + 48) = v9;
  v12 = v17;
  if (!v17)
    return a1;
  p_shared_owners = (unint64_t *)&v17->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  return a1;
}

void sub_20B43C5A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_20AEC147C((uint64_t)&a9);
  sub_20AEC147C(v9);
  _Unwind_Resume(a1);
}

void sub_20B43C5C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B43C5D8(_QWORD *a1, char a2, uint64_t a3)
{
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void (*v16)(int);
  std::__shared_weak_count *v17;

  v6 = (char *)operator new(0x58uLL);
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *(_QWORD *)v6 = &off_24C41D138;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  a1[1] = v6;
  *(_OWORD *)(v6 + 24) = 0u;
  v6 += 24;
  *a1 = v6;
  *v6 = a2;
  v7 = (char *)operator new(0x30uLL);
  *((_QWORD *)v7 + 2) = 0;
  *(_QWORD *)v7 = &unk_24C41CEF8;
  *((_QWORD *)v7 + 1) = 0;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)a3;
  *((_QWORD *)v7 + 5) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v16 = (void (*)(int))(v7 + 24);
  v17 = (std::__shared_weak_count *)v7;
  sub_20B433B88((void (**)(int))(*a1 + 8), &v16);
  v9 = *((_QWORD *)v7 + 3);
  v8 = *((_QWORD *)v7 + 4);
  v10 = v8 - v9;
  v11 = *a1;
  *(_QWORD *)(*a1 + 56) = (v8 - v9) >> 3;
  if (v8 && !v9)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v11 = *a1;
  }
  *(_QWORD *)(v11 + 40) = v10;
  *(_QWORD *)(v11 + 48) = v9;
  v12 = v17;
  if (!v17)
    return a1;
  p_shared_owners = (unint64_t *)&v17->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  return a1;
}

void sub_20B43C748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_20AEC147C((uint64_t)&a9);
  sub_20AEC147C(v9);
  _Unwind_Resume(a1);
}

void sub_20B43C768(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B43C77C(_QWORD *a1, char a2, uint64_t a3)
{
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void (*v16)(int);
  std::__shared_weak_count *v17;

  v6 = (char *)operator new(0x58uLL);
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *(_QWORD *)v6 = &off_24C41D138;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  a1[1] = v6;
  *(_OWORD *)(v6 + 24) = 0u;
  v6 += 24;
  *a1 = v6;
  *v6 = a2;
  v7 = (char *)operator new(0x30uLL);
  *((_QWORD *)v7 + 2) = 0;
  *(_QWORD *)v7 = &unk_24C41CF58;
  *((_QWORD *)v7 + 1) = 0;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)a3;
  *((_QWORD *)v7 + 5) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v16 = (void (*)(int))(v7 + 24);
  v17 = (std::__shared_weak_count *)v7;
  sub_20B433CE8((void (**)(int))(*a1 + 8), &v16);
  v9 = *((_QWORD *)v7 + 3);
  v8 = *((_QWORD *)v7 + 4);
  v10 = v8 - v9;
  v11 = *a1;
  *(_QWORD *)(*a1 + 56) = (v8 - v9) >> 2;
  if (v8 && !v9)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v11 = *a1;
  }
  *(_QWORD *)(v11 + 40) = v10;
  *(_QWORD *)(v11 + 48) = v9;
  v12 = v17;
  if (!v17)
    return a1;
  p_shared_owners = (unint64_t *)&v17->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  return a1;
}

void sub_20B43C8EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_20AEC147C((uint64_t)&a9);
  sub_20AEC147C(v9);
  _Unwind_Resume(a1);
}

void sub_20B43C90C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B43C920(_QWORD *a1, char a2, uint64_t a3)
{
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void (*v16)(int);
  std::__shared_weak_count *v17;

  v6 = (char *)operator new(0x58uLL);
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *(_QWORD *)v6 = &off_24C41D138;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  a1[1] = v6;
  *(_OWORD *)(v6 + 24) = 0u;
  v6 += 24;
  *a1 = v6;
  *v6 = a2;
  v7 = (char *)operator new(0x30uLL);
  *((_QWORD *)v7 + 2) = 0;
  *(_QWORD *)v7 = &unk_24C41CFB8;
  *((_QWORD *)v7 + 1) = 0;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)a3;
  *((_QWORD *)v7 + 5) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v16 = (void (*)(int))(v7 + 24);
  v17 = (std::__shared_weak_count *)v7;
  sub_20B433E48((void (**)(int))(*a1 + 8), &v16);
  v9 = *((_QWORD *)v7 + 3);
  v8 = *((_QWORD *)v7 + 4);
  v10 = v8 - v9;
  v11 = *a1;
  *(_QWORD *)(*a1 + 56) = (v8 - v9) >> 3;
  if (v8 && !v9)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v11 = *a1;
  }
  *(_QWORD *)(v11 + 40) = v10;
  *(_QWORD *)(v11 + 48) = v9;
  v12 = v17;
  if (!v17)
    return a1;
  p_shared_owners = (unint64_t *)&v17->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (v14)
    return a1;
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  return a1;
}

void sub_20B43CA90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_20AEC147C((uint64_t)&a9);
  sub_20AEC147C(v9);
  _Unwind_Resume(a1);
}

void sub_20B43CAB0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20AEC147C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B43CAC4(_QWORD *a1, char a2, void (**a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  char *v10;
  _QWORD *v11;
  uint64_t v12;

  v10 = (char *)operator new(0x58uLL);
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = &off_24C41D138;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  *(_OWORD *)(v10 + 72) = 0u;
  a1[1] = v10;
  v11 = v10 + 32;
  *(_OWORD *)(v10 + 24) = 0u;
  v10 += 24;
  *a1 = v10;
  *v10 = a2;
  sub_20AFA2CC8(v11, a3);
  v12 = *a1;
  *(_QWORD *)(*a1 + 56) = a4;
  if (!a5 && a4)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v12 = *a1;
  }
  *(_QWORD *)(v12 + 40) = a4;
  *(_QWORD *)(v12 + 48) = a5;
  return a1;
}

void sub_20B43CBA0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B43CBE4(_QWORD *a1, char a2, void (**a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  char *v10;
  _QWORD *v11;
  uint64_t v12;

  v10 = (char *)operator new(0x58uLL);
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = &off_24C41D138;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  *(_OWORD *)(v10 + 72) = 0u;
  a1[1] = v10;
  v11 = v10 + 32;
  *(_OWORD *)(v10 + 24) = 0u;
  v10 += 24;
  *a1 = v10;
  *v10 = a2;
  sub_20AFA2CC8(v11, a3);
  v12 = *a1;
  *(_QWORD *)(*a1 + 56) = a4;
  if (!a5 && a4)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v12 = *a1;
  }
  *(_QWORD *)(v12 + 40) = a4;
  *(_QWORD *)(v12 + 48) = a5;
  return a1;
}

void sub_20B43CCC0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B43CD04(_QWORD *a1, char a2, void (**a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v10 = (char *)operator new(0x58uLL);
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = &off_24C41D138;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  *(_OWORD *)(v10 + 72) = 0u;
  a1[1] = v10;
  v11 = v10 + 32;
  *(_OWORD *)(v10 + 24) = 0u;
  v10 += 24;
  *a1 = v10;
  *v10 = a2;
  sub_20AFA2CC8(v11, a3);
  v12 = *a1;
  *(_QWORD *)(*a1 + 56) = a4;
  v13 = 2 * a4;
  if (!a5 && v13)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v12 = *a1;
  }
  *(_QWORD *)(v12 + 40) = v13;
  *(_QWORD *)(v12 + 48) = a5;
  return a1;
}

void sub_20B43CDE4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B43CE28(_QWORD *a1, char a2, void (**a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v10 = (char *)operator new(0x58uLL);
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = &off_24C41D138;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  *(_OWORD *)(v10 + 72) = 0u;
  a1[1] = v10;
  v11 = v10 + 32;
  *(_OWORD *)(v10 + 24) = 0u;
  v10 += 24;
  *a1 = v10;
  *v10 = a2;
  sub_20AFA2CC8(v11, a3);
  v12 = *a1;
  *(_QWORD *)(*a1 + 56) = a4;
  v13 = 2 * a4;
  if (!a5 && v13)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v12 = *a1;
  }
  *(_QWORD *)(v12 + 40) = v13;
  *(_QWORD *)(v12 + 48) = a5;
  return a1;
}

void sub_20B43CF08(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B43CF4C(_QWORD *a1, char a2, void (**a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v10 = (char *)operator new(0x58uLL);
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = &off_24C41D138;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  *(_OWORD *)(v10 + 72) = 0u;
  a1[1] = v10;
  v11 = v10 + 32;
  *(_OWORD *)(v10 + 24) = 0u;
  v10 += 24;
  *a1 = v10;
  *v10 = a2;
  sub_20AFA2CC8(v11, a3);
  v12 = *a1;
  *(_QWORD *)(*a1 + 56) = a4;
  v13 = 4 * a4;
  if (!a5 && v13)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v12 = *a1;
  }
  *(_QWORD *)(v12 + 40) = v13;
  *(_QWORD *)(v12 + 48) = a5;
  return a1;
}

void sub_20B43D02C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B43D070(_QWORD *a1, char a2, void (**a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v10 = (char *)operator new(0x58uLL);
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = &off_24C41D138;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  *(_OWORD *)(v10 + 72) = 0u;
  a1[1] = v10;
  v11 = v10 + 32;
  *(_OWORD *)(v10 + 24) = 0u;
  v10 += 24;
  *a1 = v10;
  *v10 = a2;
  sub_20AFA2CC8(v11, a3);
  v12 = *a1;
  *(_QWORD *)(*a1 + 56) = a4;
  v13 = 4 * a4;
  if (!a5 && v13)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v12 = *a1;
  }
  *(_QWORD *)(v12 + 40) = v13;
  *(_QWORD *)(v12 + 48) = a5;
  return a1;
}

void sub_20B43D150(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B43D194(_QWORD *a1, char a2, void (**a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v10 = (char *)operator new(0x58uLL);
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = &off_24C41D138;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  *(_OWORD *)(v10 + 72) = 0u;
  a1[1] = v10;
  v11 = v10 + 32;
  *(_OWORD *)(v10 + 24) = 0u;
  v10 += 24;
  *a1 = v10;
  *v10 = a2;
  sub_20AFA2CC8(v11, a3);
  v12 = *a1;
  *(_QWORD *)(*a1 + 56) = a4;
  v13 = 8 * a4;
  if (!a5 && v13)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v12 = *a1;
  }
  *(_QWORD *)(v12 + 40) = v13;
  *(_QWORD *)(v12 + 48) = a5;
  return a1;
}

void sub_20B43D274(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B43D2B8(_QWORD *a1, char a2, void (**a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v10 = (char *)operator new(0x58uLL);
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = &off_24C41D138;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  *(_OWORD *)(v10 + 72) = 0u;
  a1[1] = v10;
  v11 = v10 + 32;
  *(_OWORD *)(v10 + 24) = 0u;
  v10 += 24;
  *a1 = v10;
  *v10 = a2;
  sub_20AFA2CC8(v11, a3);
  v12 = *a1;
  *(_QWORD *)(*a1 + 56) = a4;
  v13 = 8 * a4;
  if (!a5 && v13)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v12 = *a1;
  }
  *(_QWORD *)(v12 + 40) = v13;
  *(_QWORD *)(v12 + 48) = a5;
  return a1;
}

void sub_20B43D398(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B43D3DC(_QWORD *a1, char a2, void (**a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v10 = (char *)operator new(0x58uLL);
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = &off_24C41D138;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  *(_OWORD *)(v10 + 72) = 0u;
  a1[1] = v10;
  v11 = v10 + 32;
  *(_OWORD *)(v10 + 24) = 0u;
  v10 += 24;
  *a1 = v10;
  *v10 = a2;
  sub_20AFA2CC8(v11, a3);
  v12 = *a1;
  *(_QWORD *)(*a1 + 56) = a4;
  v13 = 4 * a4;
  if (!a5 && v13)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v12 = *a1;
  }
  *(_QWORD *)(v12 + 40) = v13;
  *(_QWORD *)(v12 + 48) = a5;
  return a1;
}

void sub_20B43D4BC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20B43D500(_QWORD *a1, char a2, void (**a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v10 = (char *)operator new(0x58uLL);
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = &off_24C41D138;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  *(_OWORD *)(v10 + 72) = 0u;
  a1[1] = v10;
  v11 = v10 + 32;
  *(_OWORD *)(v10 + 24) = 0u;
  v10 += 24;
  *a1 = v10;
  *v10 = a2;
  sub_20AFA2CC8(v11, a3);
  v12 = *a1;
  *(_QWORD *)(*a1 + 56) = a4;
  v13 = 8 * a4;
  if (!a5 && v13)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v12 = *a1;
  }
  *(_QWORD *)(v12 + 40) = v13;
  *(_QWORD *)(v12 + 48) = a5;
  return a1;
}

void sub_20B43D5E0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

unsigned __int8 **sub_20B43D624(unsigned __int8 **result, int a2)
{
  _BYTE **v2;
  std::logic_error *exception;
  std::string v4;
  char v5;

  v5 = a2;
  if (**result != a2)
  {
    v2 = result;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, &v4);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C3F18F0, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  return result;
}

void sub_20B43D6D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

uint64_t sub_20B43D708(char *__s, _BYTE *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t result;
  char v8;
  _DWORD v9[6];
  int v10;
  _QWORD v11[5];
  _QWORD *v12;

  v10 = 0;
  sub_20B001C20(v9, __s);
  sub_20AF6A118((uint64_t)&v8, (uint64_t)v9, a2);
  v11[0] = v9;
  v11[1] = a3;
  v11[2] = v9;
  v11[3] = a3;
  v11[4] = a3;
  if (v10 == -1)
    sub_20AECFAB8();
  v12 = v11;
  ((void (*)(_QWORD **, _DWORD *))off_24C41D190[v10])(&v12, v9);
  sub_20AF6A118((uint64_t)v11, (uint64_t)v9, a4);
  if (v10 == -1)
    sub_20AECFAB8();
  v11[0] = &v12;
  result = ((uint64_t (*)(_QWORD *, _DWORD *))off_24C41D1A8[v10])(v11, v9);
  if (v10 != -1)
    return ((uint64_t (*)(_QWORD *, _DWORD *))off_24C41D178[v10])(v11, v9);
  return result;
}

void sub_20B43D81C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B43D830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B43D844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B43D858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20B43D86C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20AECFA60((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20B43D880(_QWORD *a1, unsigned __int8 **a2)
{
  _QWORD *v4;
  _QWORD *v5;
  std::string::size_type v6;
  std::string::size_type v7;
  BOOL v8;
  unsigned __int16 *v9;
  unint64_t v10;
  BOOL v11;
  unsigned int *v12;
  unint64_t v13;
  BOOL v14;
  unint64_t *v15;
  unint64_t v16;
  BOOL v17;
  char *v18;
  uint64_t v19;
  BOOL v20;
  std::string *v21;
  std::string::size_type v22;
  uint64_t v23;
  char *v24;
  std::string *v25;
  std::string::size_type v26;
  __int16 *v27;
  unint64_t v28;
  BOOL v29;
  int *v30;
  unint64_t v31;
  BOOL v32;
  uint64_t *v33;
  unint64_t v34;
  BOOL v35;
  float *v36;
  unint64_t v37;
  BOOL v38;
  double *v39;
  unint64_t v40;
  BOOL v41;
  const char *v42;
  _QWORD *v43;
  uint64_t v44;
  std::string *v45;
  std::string::size_type size;
  unint64_t v47;
  unsigned __int16 *v48;
  uint64_t v49;
  std::string *v50;
  std::string::size_type v51;
  std::string *v52;
  std::string::size_type v53;
  unint64_t v54;
  unsigned int *v55;
  uint64_t v56;
  std::string *v57;
  std::string::size_type v58;
  std::string *v59;
  std::string::size_type v60;
  unint64_t v61;
  unint64_t *v62;
  uint64_t v63;
  std::string *v64;
  std::string::size_type v65;
  std::string *v66;
  std::string::size_type v67;
  unint64_t v68;
  __int16 *v69;
  uint64_t v70;
  std::string *v71;
  std::string::size_type v72;
  std::string *v73;
  std::string::size_type v74;
  unint64_t v75;
  int *v76;
  uint64_t v77;
  std::string *v78;
  std::string::size_type v79;
  std::string *v80;
  std::string::size_type v81;
  unint64_t v82;
  unint64_t v83;
  float *v84;
  uint64_t v85;
  unint64_t v86;
  double *v87;
  uint64_t v88;
  uint64_t *v90;
  uint64_t v91;
  std::string *v92;
  std::string::size_type v93;
  _QWORD *v94;
  char v95;
  std::string v96;

  v4 = sub_20AEC01D0(a1, (uint64_t)"{", 1);
  v96.__r_.__value_.__s.__data_[0] = **a2;
  v5 = sub_20B5220B4(v4, &v96);
  sub_20AEC01D0(v5, (uint64_t)",", 1);
  switch(**a2)
  {
    case 0u:
      sub_20B43D624(a2, 0);
      v7 = *((_QWORD *)*a2 + 5);
      v6 = *((_QWORD *)*a2 + 6);
      if (v6)
        v8 = 1;
      else
        v8 = v7 == 0;
      if (!v8
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_217;
      }
      v96.__r_.__value_.__r.__words[0] = v7;
      v96.__r_.__value_.__l.__size_ = v6;
      v94 = a1;
      sub_20B42DE30((uint64_t)&v95, &v94, (uint64_t *)&v96);
      return sub_20AEC01D0(a1, (uint64_t)"}", 1);
    case 1u:
      sub_20B43D624(a2, 1);
      v10 = *((_QWORD *)*a2 + 5);
      v9 = (unsigned __int16 *)*((_QWORD *)*a2 + 6);
      if (v9)
        v11 = 0;
      else
        v11 = v10 >= 2;
      if (v11)
      {
        if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
        {
LABEL_82:
          sub_20AEC01D0(a1, (uint64_t)"{", 1);
          std::to_string(&v96, *v9);
          if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v45 = &v96;
          else
            v45 = (std::string *)v96.__r_.__value_.__r.__words[0];
          if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            size = HIBYTE(v96.__r_.__value_.__r.__words[2]);
          else
            size = v96.__r_.__value_.__l.__size_;
          sub_20AEC01D0(a1, (uint64_t)v45, size);
          v47 = v10 >> 1;
          if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v96.__r_.__value_.__l.__data_);
          if (v47 != 1)
          {
            v48 = v9 + 1;
            v49 = 2 * v47 - 2;
            do
            {
              sub_20AEC01D0(a1, (uint64_t)",", 1);
              std::to_string(&v96, *v48);
              if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v50 = &v96;
              else
                v50 = (std::string *)v96.__r_.__value_.__r.__words[0];
              if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v51 = HIBYTE(v96.__r_.__value_.__r.__words[2]);
              else
                v51 = v96.__r_.__value_.__l.__size_;
              sub_20AEC01D0(a1, (uint64_t)v50, v51);
              if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v96.__r_.__value_.__l.__data_);
              ++v48;
              v49 -= 2;
            }
            while (v49);
          }
LABEL_191:
          v42 = "}";
          v43 = a1;
LABEL_204:
          v44 = 1;
          goto LABEL_205;
        }
LABEL_217:
        abort();
      }
      if (v10 > 1)
        goto LABEL_82;
LABEL_80:
      v42 = "{}";
      v43 = a1;
      v44 = 2;
LABEL_205:
      sub_20AEC01D0(v43, (uint64_t)v42, v44);
      return sub_20AEC01D0(a1, (uint64_t)"}", 1);
    case 2u:
      sub_20B43D624(a2, 2);
      v13 = *((_QWORD *)*a2 + 5);
      v12 = (unsigned int *)*((_QWORD *)*a2 + 6);
      if (v12)
        v14 = 0;
      else
        v14 = v13 >= 4;
      if (v14)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_217;
        }
      }
      else if (v13 <= 3)
      {
        goto LABEL_80;
      }
      sub_20AEC01D0(a1, (uint64_t)"{", 1);
      std::to_string(&v96, *v12);
      if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v52 = &v96;
      else
        v52 = (std::string *)v96.__r_.__value_.__r.__words[0];
      if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v53 = HIBYTE(v96.__r_.__value_.__r.__words[2]);
      else
        v53 = v96.__r_.__value_.__l.__size_;
      sub_20AEC01D0(a1, (uint64_t)v52, v53);
      v54 = v13 >> 2;
      if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v96.__r_.__value_.__l.__data_);
      if (v54 != 1)
      {
        v55 = v12 + 1;
        v56 = 4 * v54 - 4;
        do
        {
          sub_20AEC01D0(a1, (uint64_t)",", 1);
          std::to_string(&v96, *v55);
          if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v57 = &v96;
          else
            v57 = (std::string *)v96.__r_.__value_.__r.__words[0];
          if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v58 = HIBYTE(v96.__r_.__value_.__r.__words[2]);
          else
            v58 = v96.__r_.__value_.__l.__size_;
          sub_20AEC01D0(a1, (uint64_t)v57, v58);
          if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v96.__r_.__value_.__l.__data_);
          ++v55;
          v56 -= 4;
        }
        while (v56);
      }
      goto LABEL_191;
    case 3u:
      sub_20B43D624(a2, 3);
      v16 = *((_QWORD *)*a2 + 5);
      v15 = (unint64_t *)*((_QWORD *)*a2 + 6);
      if (v15)
        v17 = 0;
      else
        v17 = v16 >= 8;
      if (v17)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_217;
        }
      }
      else if (v16 <= 7)
      {
        goto LABEL_80;
      }
      sub_20AEC01D0(a1, (uint64_t)"{", 1);
      std::to_string(&v96, *v15);
      if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v59 = &v96;
      else
        v59 = (std::string *)v96.__r_.__value_.__r.__words[0];
      if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v60 = HIBYTE(v96.__r_.__value_.__r.__words[2]);
      else
        v60 = v96.__r_.__value_.__l.__size_;
      sub_20AEC01D0(a1, (uint64_t)v59, v60);
      v61 = v16 >> 3;
      if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v96.__r_.__value_.__l.__data_);
      if (v61 != 1)
      {
        v62 = v15 + 1;
        v63 = 8 * v61 - 8;
        do
        {
          sub_20AEC01D0(a1, (uint64_t)",", 1);
          std::to_string(&v96, *v62);
          if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v64 = &v96;
          else
            v64 = (std::string *)v96.__r_.__value_.__r.__words[0];
          if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v65 = HIBYTE(v96.__r_.__value_.__r.__words[2]);
          else
            v65 = v96.__r_.__value_.__l.__size_;
          sub_20AEC01D0(a1, (uint64_t)v64, v65);
          if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v96.__r_.__value_.__l.__data_);
          ++v62;
          v63 -= 8;
        }
        while (v63);
      }
      goto LABEL_191;
    case 5u:
      sub_20B43D624(a2, 5);
      v19 = *((_QWORD *)*a2 + 5);
      v18 = (char *)*((_QWORD *)*a2 + 6);
      if (v18)
        v20 = 1;
      else
        v20 = v19 == 0;
      if (!v20
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_217;
      }
      if (v19 <= 0)
        goto LABEL_80;
      sub_20AEC01D0(a1, (uint64_t)"{", 1);
      std::to_string(&v96, *v18);
      if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v21 = &v96;
      else
        v21 = (std::string *)v96.__r_.__value_.__r.__words[0];
      if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v22 = HIBYTE(v96.__r_.__value_.__r.__words[2]);
      else
        v22 = v96.__r_.__value_.__l.__size_;
      sub_20AEC01D0(a1, (uint64_t)v21, v22);
      if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v96.__r_.__value_.__l.__data_);
      v23 = v19 - 1;
      if (v23)
      {
        v24 = v18 + 1;
        do
        {
          sub_20AEC01D0(a1, (uint64_t)",", 1);
          std::to_string(&v96, *v24);
          if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v25 = &v96;
          else
            v25 = (std::string *)v96.__r_.__value_.__r.__words[0];
          if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v26 = HIBYTE(v96.__r_.__value_.__r.__words[2]);
          else
            v26 = v96.__r_.__value_.__l.__size_;
          sub_20AEC01D0(a1, (uint64_t)v25, v26);
          if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v96.__r_.__value_.__l.__data_);
          ++v24;
          --v23;
        }
        while (v23);
      }
      goto LABEL_191;
    case 6u:
      sub_20B43D624(a2, 6);
      v28 = *((_QWORD *)*a2 + 5);
      v27 = (__int16 *)*((_QWORD *)*a2 + 6);
      if (v27)
        v29 = 0;
      else
        v29 = v28 >= 2;
      if (v29)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_217;
        }
      }
      else if (v28 <= 1)
      {
        goto LABEL_80;
      }
      sub_20AEC01D0(a1, (uint64_t)"{", 1);
      std::to_string(&v96, *v27);
      if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v66 = &v96;
      else
        v66 = (std::string *)v96.__r_.__value_.__r.__words[0];
      if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v67 = HIBYTE(v96.__r_.__value_.__r.__words[2]);
      else
        v67 = v96.__r_.__value_.__l.__size_;
      sub_20AEC01D0(a1, (uint64_t)v66, v67);
      v68 = v28 >> 1;
      if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v96.__r_.__value_.__l.__data_);
      if (v68 != 1)
      {
        v69 = v27 + 1;
        v70 = 2 * v68 - 2;
        do
        {
          sub_20AEC01D0(a1, (uint64_t)",", 1);
          std::to_string(&v96, *v69);
          if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v71 = &v96;
          else
            v71 = (std::string *)v96.__r_.__value_.__r.__words[0];
          if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v72 = HIBYTE(v96.__r_.__value_.__r.__words[2]);
          else
            v72 = v96.__r_.__value_.__l.__size_;
          sub_20AEC01D0(a1, (uint64_t)v71, v72);
          if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v96.__r_.__value_.__l.__data_);
          ++v69;
          v70 -= 2;
        }
        while (v70);
      }
      goto LABEL_191;
    case 7u:
      sub_20B43D624(a2, 7);
      v31 = *((_QWORD *)*a2 + 5);
      v30 = (int *)*((_QWORD *)*a2 + 6);
      if (v30)
        v32 = 0;
      else
        v32 = v31 >= 4;
      if (v32)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_217;
        }
      }
      else if (v31 <= 3)
      {
        goto LABEL_80;
      }
      sub_20AEC01D0(a1, (uint64_t)"{", 1);
      std::to_string(&v96, *v30);
      if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v73 = &v96;
      else
        v73 = (std::string *)v96.__r_.__value_.__r.__words[0];
      if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v74 = HIBYTE(v96.__r_.__value_.__r.__words[2]);
      else
        v74 = v96.__r_.__value_.__l.__size_;
      sub_20AEC01D0(a1, (uint64_t)v73, v74);
      v75 = v31 >> 2;
      if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v96.__r_.__value_.__l.__data_);
      if (v75 != 1)
      {
        v76 = v30 + 1;
        v77 = 4 * v75 - 4;
        do
        {
          sub_20AEC01D0(a1, (uint64_t)",", 1);
          std::to_string(&v96, *v76);
          if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v78 = &v96;
          else
            v78 = (std::string *)v96.__r_.__value_.__r.__words[0];
          if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v79 = HIBYTE(v96.__r_.__value_.__r.__words[2]);
          else
            v79 = v96.__r_.__value_.__l.__size_;
          sub_20AEC01D0(a1, (uint64_t)v78, v79);
          if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v96.__r_.__value_.__l.__data_);
          ++v76;
          v77 -= 4;
        }
        while (v77);
      }
      goto LABEL_191;
    case 8u:
      sub_20B43D624(a2, 8);
      v34 = *((_QWORD *)*a2 + 5);
      v33 = (uint64_t *)*((_QWORD *)*a2 + 6);
      if (v33)
        v35 = 0;
      else
        v35 = v34 >= 8;
      if (v35)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_217;
        }
      }
      else if (v34 <= 7)
      {
        goto LABEL_80;
      }
      sub_20AEC01D0(a1, (uint64_t)"{", 1);
      std::to_string(&v96, *v33);
      if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v80 = &v96;
      else
        v80 = (std::string *)v96.__r_.__value_.__r.__words[0];
      if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v81 = HIBYTE(v96.__r_.__value_.__r.__words[2]);
      else
        v81 = v96.__r_.__value_.__l.__size_;
      sub_20AEC01D0(a1, (uint64_t)v80, v81);
      v82 = v34 >> 3;
      if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v96.__r_.__value_.__l.__data_);
      if (v82 != 1)
      {
        v90 = v33 + 1;
        v91 = 8 * v82 - 8;
        do
        {
          sub_20AEC01D0(a1, (uint64_t)",", 1);
          std::to_string(&v96, *v90);
          if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v92 = &v96;
          else
            v92 = (std::string *)v96.__r_.__value_.__r.__words[0];
          if ((v96.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v93 = HIBYTE(v96.__r_.__value_.__r.__words[2]);
          else
            v93 = v96.__r_.__value_.__l.__size_;
          sub_20AEC01D0(a1, (uint64_t)v92, v93);
          if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v96.__r_.__value_.__l.__data_);
          ++v90;
          v91 -= 8;
        }
        while (v91);
      }
      goto LABEL_191;
    case 0xBu:
      sub_20B43D624(a2, 11);
      v37 = *((_QWORD *)*a2 + 5);
      v36 = (float *)*((_QWORD *)*a2 + 6);
      if (v36)
        v38 = 0;
      else
        v38 = v37 >= 4;
      if (v38)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_217;
        }
        v96.__r_.__value_.__r.__words[0] = (std::string::size_type)a1;
      }
      else
      {
        v96.__r_.__value_.__r.__words[0] = (std::string::size_type)a1;
        if (v37 <= 3)
          goto LABEL_80;
      }
      v83 = v37 >> 2;
      sub_20AEC01D0(a1, (uint64_t)"{", 1);
      sub_20B0F9B58((uint64_t)&v94, &v96, v36);
      if (v83 != 1)
      {
        v84 = v36 + 1;
        v85 = 4 * v83 - 4;
        do
        {
          sub_20AEC01D0(v96.__r_.__value_.__l.__data_, (uint64_t)",", 1);
          sub_20B0F9B58((uint64_t)&v94, &v96, v84++);
          v85 -= 4;
        }
        while (v85);
      }
      goto LABEL_203;
    case 0xCu:
      sub_20B43D624(a2, 12);
      v40 = *((_QWORD *)*a2 + 5);
      v39 = (double *)*((_QWORD *)*a2 + 6);
      if (v39)
        v41 = 0;
      else
        v41 = v40 >= 8;
      if (v41)
      {
        if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
        {
          goto LABEL_217;
        }
        v96.__r_.__value_.__r.__words[0] = (std::string::size_type)a1;
      }
      else
      {
        v96.__r_.__value_.__r.__words[0] = (std::string::size_type)a1;
        if (v40 <= 7)
          goto LABEL_80;
      }
      v86 = v40 >> 3;
      sub_20AEC01D0(a1, (uint64_t)"{", 1);
      sub_20B43E9F0((uint64_t)&v94, &v96, v39);
      if (v86 != 1)
      {
        v87 = v39 + 1;
        v88 = 8 * v86 - 8;
        do
        {
          sub_20AEC01D0(v96.__r_.__value_.__l.__data_, (uint64_t)",", 1);
          sub_20B43E9F0((uint64_t)&v94, &v96, v87++);
          v88 -= 8;
        }
        while (v88);
      }
LABEL_203:
      v43 = (_QWORD *)v96.__r_.__value_.__r.__words[0];
      v42 = "}";
      goto LABEL_204;
    default:
      sub_20B521E58(**a2);
  }
}

void sub_20B43E400(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_20B43E450(int a1, uint64_t a2)
{
  uint64_t v3;
  size_t v4;
  const void *v5;
  BOOL v6;
  uint64_t v7;
  const void *v8;
  uint64_t v9;
  BOOL v10;
  const void *v11;
  const void *v12;
  size_t v13;
  uint64_t v14;
  const void *v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  const void *v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v35;
  float *v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  float *v40;
  unint64_t v41;
  BOOL v42;
  unint64_t v43;
  unint64_t v44;
  float *v45;
  float *v46;
  float *v47;
  float *v48;
  uint64_t v49;
  float *v50;
  unint64_t v51;
  BOOL v52;
  uint64_t v53;
  float *v54;
  unint64_t v55;
  BOOL v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  switch(a1)
  {
    case 0:
    case 5:
      v3 = *(_QWORD *)(a2 + 8);
      v4 = *(_QWORD *)(v3 + 40);
      v5 = *(const void **)(v3 + 48);
      if (v5)
        v6 = 1;
      else
        v6 = v4 == 0;
      if (!v6
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_106;
      }
      v7 = *(_QWORD *)(a2 + 16);
      v9 = *(_QWORD *)(v7 + 40);
      v8 = *(const void **)(v7 + 48);
      v10 = v8 || v9 == 0;
      if (!v10
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_106;
      }
      if (v4 != v9)
        return 0;
      v11 = v5;
      v12 = v8;
      v13 = v4;
      return memcmp(v11, v12, v13) == 0;
    case 1:
    case 6:
      v14 = *(_QWORD *)(a2 + 8);
      v16 = *(_QWORD *)(v14 + 40);
      v15 = *(const void **)(v14 + 48);
      if (v15)
        v17 = 0;
      else
        v17 = v16 >= 2;
      if (v17
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_106;
      }
      v18 = *(_QWORD *)(a2 + 16);
      v20 = *(_QWORD *)(v18 + 40);
      v19 = *(const void **)(v18 + 48);
      v21 = !v19 && v20 >= 2;
      if (v21
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_106;
      }
      v13 = v16 & 0xFFFFFFFFFFFFFFFELL;
      if ((v16 & 0xFFFFFFFFFFFFFFFELL) != (v20 & 0xFFFFFFFFFFFFFFFELL))
        return 0;
      goto LABEL_55;
    case 2:
    case 7:
      v22 = *(_QWORD *)(a2 + 8);
      v23 = *(_QWORD *)(v22 + 40);
      v15 = *(const void **)(v22 + 48);
      if (v15)
        v24 = 0;
      else
        v24 = v23 >= 4;
      if (v24
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_106;
      }
      v25 = *(_QWORD *)(a2 + 16);
      v26 = *(_QWORD *)(v25 + 40);
      v19 = *(const void **)(v25 + 48);
      v27 = !v19 && v26 >= 4;
      if (v27
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_106;
      }
      v13 = v23 & 0xFFFFFFFFFFFFFFFCLL;
      if ((v23 & 0xFFFFFFFFFFFFFFFCLL) != (v26 & 0xFFFFFFFFFFFFFFFCLL))
        return 0;
      goto LABEL_55;
    case 3:
    case 8:
      v28 = *(_QWORD *)(a2 + 8);
      v29 = *(_QWORD *)(v28 + 40);
      v15 = *(const void **)(v28 + 48);
      if (v15)
        v30 = 0;
      else
        v30 = v29 >= 8;
      if (v30
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_106;
      }
      v31 = *(_QWORD *)(a2 + 16);
      v32 = *(_QWORD *)(v31 + 40);
      v19 = *(const void **)(v31 + 48);
      v33 = !v19 && v32 >= 8;
      if (v33
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_106;
      }
      v13 = v29 & 0xFFFFFFFFFFFFFFF8;
      if ((v29 & 0xFFFFFFFFFFFFFFF8) != (v32 & 0xFFFFFFFFFFFFFFF8))
        return 0;
LABEL_55:
      v11 = v15;
      v12 = v19;
      return memcmp(v11, v12, v13) == 0;
    case 11:
      v35 = *(_QWORD *)(a2 + 8);
      v37 = *(_QWORD *)(v35 + 40);
      v36 = *(float **)(v35 + 48);
      if (v36)
        v38 = 0;
      else
        v38 = v37 >= 4;
      if (v38
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_106;
      }
      v39 = *(_QWORD *)(a2 + 16);
      v41 = *(_QWORD *)(v39 + 40);
      v40 = *(float **)(v39 + 48);
      v42 = !v40 && v41 >= 4;
      if (v42
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
      {
        goto LABEL_106;
      }
      v43 = v37 >> 2;
      v44 = v41 >> 2;
      if (v37 >> 2 != v41 >> 2)
        return 0;
      if (v37 < 4)
      {
        v45 = v40;
        v46 = v36;
LABEL_72:
        v47 = &v36[v43];
        v48 = &v40[v44];
        return v46 == v47 && v45 == v48;
      }
      v60 = 4 * v43 - 4;
      v61 = 4 * v44 - 4;
      v46 = v36;
      v45 = v40;
      while (*v46 == *v45)
      {
        ++v46;
        ++v45;
        if (v60)
        {
          v60 -= 4;
          v62 = v61;
          v61 -= 4;
          if (v62)
            continue;
        }
        goto LABEL_72;
      }
      return 0;
    case 12:
      v49 = *(_QWORD *)(a2 + 8);
      v51 = *(_QWORD *)(v49 + 40);
      v50 = *(float **)(v49 + 48);
      if (v50)
        v52 = 0;
      else
        v52 = v51 >= 8;
      if (v52
        && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360)|| ((v53 = *(_QWORD *)(a2 + 16), v55 = *(_QWORD *)(v53 + 40), (v54 = *(float **)(v53 + 48)) == 0)? (v56 = v55 >= 8): (v56 = 0), v56&& sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360)))
      {
LABEL_106:
        abort();
      }
      v57 = v51 >> 3;
      v58 = v55 >> 3;
      if (v51 >> 3 != v55 >> 3)
        return 0;
      if (v51 >= 8)
      {
        v63 = 8 * v57 - 8;
        v64 = 8 * v58 - 8;
        v46 = v50;
        v45 = v54;
        do
        {
          if (*(double *)v46 != *(double *)v45)
            return 0;
          v46 += 2;
          v45 += 2;
          if (!v63)
            break;
          v63 -= 8;
          v65 = v64;
          v64 -= 8;
        }
        while (v65);
      }
      else
      {
        v45 = v54;
        v46 = v50;
      }
      v47 = &v50[2 * v57];
      v48 = &v54[2 * v58];
      return v46 == v47 && v45 == v48;
    default:
      sub_20B521E58(a1);
  }
}

void sub_20B43E978(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41D138;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20B43E988(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C41D138;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B43E9B8(uint64_t result)
{
  uint64_t (*v1)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD);

  v1 = *(uint64_t (**)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))(result + 32);
  if (v1)
    return v1(0, result + 32, 0, 0, 0);
  return result;
}

void sub_20B43E9F0(uint64_t a1, _QWORD **a2, double *a3)
{
  std::string *v5;
  std::string *v6;
  std::string::size_type size;
  uint64_t v8;
  int v9;
  std::string::size_type v10;
  std::string *v11;
  uint64_t v12;
  size_t v13;
  size_t v14;
  void *p_p;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *__p;
  size_t v21;
  int64_t v22;
  std::string v23;

  std::to_string(&v23, *a3);
  v5 = (std::string *)v23.__r_.__value_.__r.__words[0];
  if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v6 = &v23;
  else
    v6 = (std::string *)v23.__r_.__value_.__r.__words[0];
  if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v23.__r_.__value_.__r.__words[2]);
  else
    size = v23.__r_.__value_.__l.__size_;
  v8 = size;
  do
  {
    if (!v8)
    {
      v8 = -1;
      if ((*((_BYTE *)&v23.__r_.__value_.__s + 23) & 0x80) != 0)
        goto LABEL_14;
LABEL_11:
      if (v8 != HIBYTE(v23.__r_.__value_.__r.__words[2]) - 1)
      {
        v5 = &v23;
        goto LABEL_16;
      }
LABEL_15:
      sub_20AEC01D0(*a2, (uint64_t)v6, size);
LABEL_48:
      if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        return;
      goto LABEL_51;
    }
    v9 = v6->__r_.__value_.__s.__data_[--v8];
  }
  while (v9 == 48);
  if ((*((_BYTE *)&v23.__r_.__value_.__s + 23) & 0x80) == 0)
    goto LABEL_11;
LABEL_14:
  if (v8 == v23.__r_.__value_.__l.__size_ - 1)
    goto LABEL_15;
LABEL_16:
  if (strtod((const char *)v5, 0) != *a3)
  {
    if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v6 = &v23;
    else
      v6 = (std::string *)v23.__r_.__value_.__r.__words[0];
    if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v23.__r_.__value_.__r.__words[2]);
    else
      size = v23.__r_.__value_.__l.__size_;
    goto LABEL_15;
  }
  v10 = HIBYTE(v23.__r_.__value_.__r.__words[2]);
  if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v11 = &v23;
  else
    v11 = (std::string *)v23.__r_.__value_.__r.__words[0];
  if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v10 = v23.__r_.__value_.__l.__size_;
  v12 = 1;
  if (v11->__r_.__value_.__s.__data_[v8] == 46)
    v12 = 2;
  v13 = v12 + v8;
  if (v10 >= v13)
    v14 = v13;
  else
    v14 = v10;
  if (v14 >= 0x7FFFFFFFFFFFFFF8)
    sub_20AEC0138();
  if (v14 >= 0x17)
  {
    v16 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17)
      v16 = v14 | 7;
    v17 = v16 + 1;
    p_p = operator new(v16 + 1);
    v21 = v14;
    v22 = v17 | 0x8000000000000000;
    __p = p_p;
    goto LABEL_40;
  }
  HIBYTE(v22) = v14;
  p_p = &__p;
  if (v14)
LABEL_40:
    memmove(p_p, v11, v14);
  *((_BYTE *)p_p + v14) = 0;
  if (v22 >= 0)
    v18 = &__p;
  else
    v18 = __p;
  if (v22 >= 0)
    v19 = HIBYTE(v22);
  else
    v19 = v21;
  sub_20AEC01D0(*a2, (uint64_t)v18, v19);
  if ((SHIBYTE(v22) & 0x80000000) == 0)
    goto LABEL_48;
  operator delete(__p);
  if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    return;
LABEL_51:
  operator delete(v23.__r_.__value_.__l.__data_);
}

void sub_20B43EBF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((a20 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a20 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_20B43EC5C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  __int128 v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21[5])(uint64_t);

  v21[4] = *(void (**)(uint64_t))MEMORY[0x24BDAC8D0];
  v4 = operator new();
  v5 = *(_QWORD *)a1;
  *(_QWORD *)v4 = *(_QWORD *)a1;
  v15 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 8) = v15;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  v18 = 0;
  v6 = operator new();
  *(_QWORD *)v6 = &off_24C41D1D0;
  *(_QWORD *)(v6 + 8) = 0;
  if (v5)
    v7 = ((uint64_t)v15 - v5) >> 2;
  else
    v7 = 0;
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = v4;
  v21[1] = (void (*)(uint64_t))v4;
  v21[2] = (void (*)(uint64_t))v6;
  v19 = 0;
  v20 = 0;
  v21[0] = (void (*)(uint64_t))sub_20B43EFDC;
  sub_20B43CF4C(&v16, 7, v21, v7, v5);
  if (v21[0])
    v21[0](0);
  v8 = v16;
  v9 = v17;
  *a2 = v16;
  a2[1] = v9;
  v16 = 0;
  v17 = 0;
  if ((*(_BYTE *)(v8 + 56) & 1) != 0)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v10 = v17;
    if (v17)
    {
      p_shared_owners = (unint64_t *)&v17->__shared_owners_;
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
  v13 = v18;
  if (v18)
  {
    v14 = *(void **)v18;
    if (*(_QWORD *)v18)
    {
      *(_QWORD *)(v18 + 8) = v14;
      operator delete(v14);
    }
    MEMORY[0x20BD3583C](v13, 0x20C40960023A9);
  }
}

void sub_20B43EE6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,char a24)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B43EEF8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B43EF1C(uint64_t result)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    v2 = *(void **)v1;
    if (*(_QWORD *)v1)
    {
      *(_QWORD *)(v1 + 8) = v2;
      operator delete(v2);
    }
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20B43EF6C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteINS_6vectorIN4cv3d3esn4math6VectorIiLj2EEENS_9allocatorIS6_EEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteINS_6vectorIN4cv3d3esn4math6VectorIiLj2EEENS_9allocatorIS6_EEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteINS_6vectorIN4cv3d3esn4math6VectorIiLj2EEENS_9allocatorIS6_EEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteINS_6vectorIN4cv3d3esn4math6VectorIiLj2EEENS_9allocatorIS6_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_20B43EFDC(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20B43F010()
{
  _QWORD *v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t result;

  v1 = (std::__shared_weak_count *)v0[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  result = 0;
  *v0 = 0;
  return result;
}

uint64_t sub_20B43F05C(uint64_t a1, uint64_t a2, void (**a3)(int a1))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(v3 + 16);
  a3[1] = *(void (**)(int))(v3 + 8);
  a3[2] = (void (*)(int))v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = 0;
  *a3 = sub_20B43EFDC;
  return result;
}

__n128 sub_20B43F098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)a3 = sub_20B43EFDC;
  *(_QWORD *)v3 = 0;
  return result;
}

uint64_t sub_20B43F0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  unint64_t v6;

  if (a4)
  {
    v6 = *(_QWORD *)(a4 + 8);
    if ((char *)v6 != "NSt3__110shared_ptrINS_6vectorIN4cv3d3esn4math6VectorIiLj2EEENS_9allocatorIS6_EEEEEE")
    {
      if (((v6 & (unint64_t)"NSt3__110shared_ptrINS_6vectorIN4cv3d3esn4math6VectorIiLj2EEENS_9allocatorIS6_EEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v6, "NSt3__110shared_ptrINS_6vectorIN4cv3d3esn4math6VectorIiLj2EEENS_9allocatorIS6_EEEEEE"))return 0;
      if (strcmp((const char *)(v6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrINS_6vectorIN4cv3d3esn4math6VectorIiLj2EEENS_9allocatorIS6_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        return 0;
      }
    }
  }
  else if (a5 != &unk_20B60DFAC)
  {
    return 0;
  }
  return v5 + 8;
}

void sub_20B43F144(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22[5])(uint64_t);

  v22[4] = *(void (**)(uint64_t))MEMORY[0x24BDAC8D0];
  v4 = operator new();
  v5 = *(_QWORD *)a1;
  *(_QWORD *)v4 = *(_QWORD *)a1;
  v6 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 8) = v6;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  if (v5)
    v7 = v5;
  else
    v7 = 0;
  if (v5)
    v8 = ((uint64_t)v6 - v5) >> 2;
  else
    v8 = 0;
  v19 = 0;
  v9 = operator new();
  *(_QWORD *)v9 = &off_24C41D230;
  *(_QWORD *)(v9 + 8) = 0;
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = v4;
  v22[1] = (void (*)(uint64_t))v4;
  v22[2] = (void (*)(uint64_t))v9;
  v20 = 0;
  v21 = 0;
  v22[0] = (void (*)(uint64_t))sub_20B43F4DC;
  sub_20B43CF4C(&v17, 7, v22, v8, v7);
  if (v22[0])
    v22[0](0);
  v10 = v17;
  v11 = v18;
  *a2 = v17;
  a2[1] = v11;
  v17 = 0;
  v18 = 0;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v10 + 56) >= 0x5555555555555556)
  {
    if (sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
    {
      abort();
    }
    v12 = v18;
    if (v18)
    {
      p_shared_owners = (unint64_t *)&v18->__shared_owners_;
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
  v15 = v19;
  if (v19)
  {
    v16 = *(void **)v19;
    if (*(_QWORD *)v19)
    {
      *(_QWORD *)(v19 + 8) = v16;
      operator delete(v16);
    }
    MEMORY[0x20BD3583C](v15, 0x20C40960023A9);
  }
}

void sub_20B43F36C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,char a22)
{
  if (a2)
    sub_20AEC01C0(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20B43F3F8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x20BD3583CLL);
}

uint64_t sub_20B43F41C(uint64_t result)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    v2 = *(void **)v1;
    if (*(_QWORD *)v1)
    {
      *(_QWORD *)(v1 + 8) = v2;
      operator delete(v2);
    }
    JUMPOUT(0x20BD3583CLL);
  }
  return result;
}

uint64_t sub_20B43F46C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteINS_6vectorIN4cv3d3esn4math6VectorIiLj3EEENS_9allocatorIS6_EEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteINS_6vectorIN4cv3d3esn4math6VectorIiLj3EEENS_9allocatorIS6_EEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteINS_6vectorIN4cv3d3esn4math6VectorIiLj3EEENS_9allocatorIS6_EEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteINS_6vectorIN4cv3d3esn4math6VectorIiLj3EEENS_9allocatorIS6_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_20B43F4DC(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20B43F510()
{
  _QWORD *v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t result;

  v1 = (std::__shared_weak_count *)v0[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  result = 0;
  *v0 = 0;
  return result;
}

uint64_t sub_20B43F55C(uint64_t a1, uint64_t a2, void (**a3)(int a1))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(v3 + 16);
  a3[1] = *(void (**)(int))(v3 + 8);
  a3[2] = (void (*)(int))v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = 0;
  *a3 = sub_20B43F4DC;
  return result;
}

__n128 sub_20B43F598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)a3 = sub_20B43F4DC;
  *(_QWORD *)v3 = 0;
  return result;
}

uint64_t sub_20B43F5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  unint64_t v6;

  if (a4)
  {
    v6 = *(_QWORD *)(a4 + 8);
    if ((char *)v6 != "NSt3__110shared_ptrINS_6vectorIN4cv3d3esn4math6VectorIiLj3EEENS_9allocatorIS6_EEEEEE")
    {
      if (((v6 & (unint64_t)"NSt3__110shared_ptrINS_6vectorIN4cv3d3esn4math6VectorIiLj3EEENS_9allocatorIS6_EEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v6, "NSt3__110shared_ptrINS_6vectorIN4cv3d3esn4math6VectorIiLj3EEENS_9allocatorIS6_EEEEEE"))return 0;
      if (strcmp((const char *)(v6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrINS_6vectorIN4cv3d3esn4math6VectorIiLj3EEENS_9allocatorIS6_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        return 0;
      }
    }
  }
  else if (a5 != &unk_20B60E0E4)
  {
    return 0;
  }
  return v5 + 8;
}

_QWORD *sub_20B43F644(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD *result;
  _QWORD v4[2];

  v4[0] = a2;
  v4[1] = a3;
  switch(a1)
  {
    case 0:
      result = sub_20B43F76C((uint64_t)v4);
      break;
    case 1:
      result = sub_20B43F8DC((uint64_t)v4);
      break;
    case 2:
      result = sub_20B43FA4C((uint64_t)v4);
      break;
    case 3:
      result = sub_20B43FBBC((uint64_t)v4);
      break;
    case 5:
      result = sub_20B43FD2C((uint64_t)v4);
      break;
    case 6:
      result = sub_20B43FE9C((uint64_t)v4);
      break;
    case 7:
      result = sub_20B44000C((uint64_t)v4);
      break;
    case 8:
      result = sub_20B44017C((uint64_t)v4);
      break;
    case 11:
      result = sub_20B4402EC((uint64_t)v4);
      break;
    case 12:
      result = sub_20B44045C((uint64_t)v4);
      break;
    default:
      sub_20B521E58(a1);
  }
  return result;
}

_QWORD *sub_20B43F76C(uint64_t a1)
{
  unsigned __int8 **v2;
  unsigned __int8 *v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  _QWORD **v7;
  _QWORD *v8;
  unint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;

  v2 = *(unsigned __int8 ***)a1;
  sub_20B43D624(*(unsigned __int8 ***)a1, 0);
  v4 = *((_QWORD *)*v2 + 5);
  v3 = (unsigned __int8 *)*((_QWORD *)*v2 + 6);
  if (v3)
    v5 = 1;
  else
    v5 = v4 == 0;
  if (!v5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_18;
  }
  if (v3)
    v6 = 0;
  else
    v6 = v4 >= 2;
  if (v6)
  {
    if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
    {
      v8 = **(_QWORD ***)(a1 + 8);
      goto LABEL_14;
    }
LABEL_18:
    abort();
  }
  v7 = *(_QWORD ***)(a1 + 8);
  v8 = *v7;
  if (v4 <= 1)
    return sub_20AEC01D0(*v7, (uint64_t)"{}", 2);
LABEL_14:
  v9 = v4 >> 1;
  sub_20AEC01D0(v8, (uint64_t)"{", 1);
  sub_20B437554(v8, v3);
  if (v9 != 1)
  {
    v10 = v3 + 2;
    v11 = 2 * v9 - 2;
    do
    {
      sub_20AEC01D0(v8, (uint64_t)",", 1);
      sub_20B437554(v8, v10);
      v10 += 2;
      v11 -= 2;
    }
    while (v11);
  }
  return sub_20AEC01D0(v8, (uint64_t)"}", 1);
}

_QWORD *sub_20B43F8DC(uint64_t a1)
{
  unsigned __int8 **v2;
  unsigned __int16 *v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  _QWORD **v7;
  _QWORD *v8;
  unint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;

  v2 = *(unsigned __int8 ***)a1;
  sub_20B43D624(*(unsigned __int8 ***)a1, 1);
  v4 = *((_QWORD *)*v2 + 5);
  v3 = (unsigned __int16 *)*((_QWORD *)*v2 + 6);
  if (v3)
    v5 = 0;
  else
    v5 = v4 >= 2;
  if (v5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_19;
  }
  if (v3)
    v6 = 0;
  else
    v6 = v4 >= 4;
  if (v6)
  {
    if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
    {
      v8 = **(_QWORD ***)(a1 + 8);
      goto LABEL_15;
    }
LABEL_19:
    abort();
  }
  v7 = *(_QWORD ***)(a1 + 8);
  v8 = *v7;
  if (v4 <= 3)
    return sub_20AEC01D0(*v7, (uint64_t)"{}", 2);
LABEL_15:
  v9 = v4 >> 2;
  sub_20AEC01D0(v8, (uint64_t)"{", 1);
  sub_20B43783C(v8, v3);
  if (v9 != 1)
  {
    v10 = v3 + 2;
    v11 = 4 * v9 - 4;
    do
    {
      sub_20AEC01D0(v8, (uint64_t)",", 1);
      sub_20B43783C(v8, v10);
      v10 += 2;
      v11 -= 4;
    }
    while (v11);
  }
  return sub_20AEC01D0(v8, (uint64_t)"}", 1);
}

_QWORD *sub_20B43FA4C(uint64_t a1)
{
  unsigned __int8 **v2;
  unsigned int *v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  _QWORD **v7;
  _QWORD *v8;
  unint64_t v9;
  unsigned int *v10;
  uint64_t v11;

  v2 = *(unsigned __int8 ***)a1;
  sub_20B43D624(*(unsigned __int8 ***)a1, 2);
  v4 = *((_QWORD *)*v2 + 5);
  v3 = (unsigned int *)*((_QWORD *)*v2 + 6);
  if (v3)
    v5 = 0;
  else
    v5 = v4 >= 4;
  if (v5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_19;
  }
  if (v3)
    v6 = 0;
  else
    v6 = v4 >= 8;
  if (v6)
  {
    if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
    {
      v8 = **(_QWORD ***)(a1 + 8);
      goto LABEL_15;
    }
LABEL_19:
    abort();
  }
  v7 = *(_QWORD ***)(a1 + 8);
  v8 = *v7;
  if (v4 <= 7)
    return sub_20AEC01D0(*v7, (uint64_t)"{}", 2);
LABEL_15:
  v9 = v4 >> 3;
  sub_20AEC01D0(v8, (uint64_t)"{", 1);
  sub_20B2891A4(v8, v3);
  if (v9 != 1)
  {
    v10 = v3 + 2;
    v11 = 8 * v9 - 8;
    do
    {
      sub_20AEC01D0(v8, (uint64_t)",", 1);
      sub_20B2891A4(v8, v10);
      v10 += 2;
      v11 -= 8;
    }
    while (v11);
  }
  return sub_20AEC01D0(v8, (uint64_t)"}", 1);
}

_QWORD *sub_20B43FBBC(uint64_t a1)
{
  unsigned __int8 **v2;
  unint64_t *v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  _QWORD **v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t *v10;
  uint64_t v11;

  v2 = *(unsigned __int8 ***)a1;
  sub_20B43D624(*(unsigned __int8 ***)a1, 3);
  v4 = *((_QWORD *)*v2 + 5);
  v3 = (unint64_t *)*((_QWORD *)*v2 + 6);
  if (v3)
    v5 = 0;
  else
    v5 = v4 >= 8;
  if (v5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_19;
  }
  if (v3)
    v6 = 0;
  else
    v6 = v4 >= 0x10;
  if (v6)
  {
    if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
    {
      v8 = **(_QWORD ***)(a1 + 8);
      goto LABEL_15;
    }
LABEL_19:
    abort();
  }
  v7 = *(_QWORD ***)(a1 + 8);
  v8 = *v7;
  if (v4 <= 0xF)
    return sub_20AEC01D0(*v7, (uint64_t)"{}", 2);
LABEL_15:
  v9 = v4 >> 4;
  sub_20AEC01D0(v8, (uint64_t)"{", 1);
  sub_20B437B24(v8, v3);
  if (v9 != 1)
  {
    v10 = v3 + 2;
    v11 = 16 * v9 - 16;
    do
    {
      sub_20AEC01D0(v8, (uint64_t)",", 1);
      sub_20B437B24(v8, v10);
      v10 += 2;
      v11 -= 16;
    }
    while (v11);
  }
  return sub_20AEC01D0(v8, (uint64_t)"}", 1);
}

_QWORD *sub_20B43FD2C(uint64_t a1)
{
  unsigned __int8 **v2;
  char *v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  _QWORD **v7;
  _QWORD *v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;

  v2 = *(unsigned __int8 ***)a1;
  sub_20B43D624(*(unsigned __int8 ***)a1, 5);
  v4 = *((_QWORD *)*v2 + 5);
  v3 = (char *)*((_QWORD *)*v2 + 6);
  if (v3)
    v5 = 1;
  else
    v5 = v4 == 0;
  if (!v5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_18;
  }
  if (v3)
    v6 = 0;
  else
    v6 = v4 >= 2;
  if (v6)
  {
    if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
    {
      v8 = **(_QWORD ***)(a1 + 8);
      goto LABEL_14;
    }
LABEL_18:
    abort();
  }
  v7 = *(_QWORD ***)(a1 + 8);
  v8 = *v7;
  if (v4 <= 1)
    return sub_20AEC01D0(*v7, (uint64_t)"{}", 2);
LABEL_14:
  v9 = v4 >> 1;
  sub_20AEC01D0(v8, (uint64_t)"{", 1);
  sub_20B437E0C(v8, v3);
  if (v9 != 1)
  {
    v10 = v3 + 2;
    v11 = 2 * v9 - 2;
    do
    {
      sub_20AEC01D0(v8, (uint64_t)",", 1);
      sub_20B437E0C(v8, v10);
      v10 += 2;
      v11 -= 2;
    }
    while (v11);
  }
  return sub_20AEC01D0(v8, (uint64_t)"}", 1);
}

_QWORD *sub_20B43FE9C(uint64_t a1)
{
  unsigned __int8 **v2;
  __int16 *v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  _QWORD **v7;
  _QWORD *v8;
  unint64_t v9;
  __int16 *v10;
  uint64_t v11;

  v2 = *(unsigned __int8 ***)a1;
  sub_20B43D624(*(unsigned __int8 ***)a1, 6);
  v4 = *((_QWORD *)*v2 + 5);
  v3 = (__int16 *)*((_QWORD *)*v2 + 6);
  if (v3)
    v5 = 0;
  else
    v5 = v4 >= 2;
  if (v5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_19;
  }
  if (v3)
    v6 = 0;
  else
    v6 = v4 >= 4;
  if (v6)
  {
    if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
    {
      v8 = **(_QWORD ***)(a1 + 8);
      goto LABEL_15;
    }
LABEL_19:
    abort();
  }
  v7 = *(_QWORD ***)(a1 + 8);
  v8 = *v7;
  if (v4 <= 3)
    return sub_20AEC01D0(*v7, (uint64_t)"{}", 2);
LABEL_15:
  v9 = v4 >> 2;
  sub_20AEC01D0(v8, (uint64_t)"{", 1);
  sub_20B4380F4(v8, v3);
  if (v9 != 1)
  {
    v10 = v3 + 2;
    v11 = 4 * v9 - 4;
    do
    {
      sub_20AEC01D0(v8, (uint64_t)",", 1);
      sub_20B4380F4(v8, v10);
      v10 += 2;
      v11 -= 4;
    }
    while (v11);
  }
  return sub_20AEC01D0(v8, (uint64_t)"}", 1);
}

_QWORD *sub_20B44000C(uint64_t a1)
{
  unsigned __int8 **v2;
  int *v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  _QWORD **v7;
  _QWORD *v8;
  unint64_t v9;
  int *v10;
  uint64_t v11;

  v2 = *(unsigned __int8 ***)a1;
  sub_20B43D624(*(unsigned __int8 ***)a1, 7);
  v4 = *((_QWORD *)*v2 + 5);
  v3 = (int *)*((_QWORD *)*v2 + 6);
  if (v3)
    v5 = 0;
  else
    v5 = v4 >= 4;
  if (v5
    && sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_20B5AD497, 0, (void (*)(void **))sub_20B532360))
  {
    goto LABEL_19;
  }
  if (v3)
    v6 = 0;
  else
    v6 = v4 >= 8;
  if (v6)
  {
    if (!sub_20B531B64("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_20B532360))
    {
      v8 = **(_QWORD ***)(a1 + 8);
      goto LABEL_15;
    }
LABEL_19:
    abort();
  }
  v7 = *(_QWORD ***)(a1 + 8);
  v8 = *v7;
  if (v4 <= 7)
    return sub_20AEC01D0(*v7, (uint64_t)"{}", 2);
LABEL_15:
  v9 = v4 >> 3;
  sub_20AEC01D0(v8, (uint64_t)"{", 1);
  sub_20B4383DC(v8, v3);
  if (v9 != 1)
  {
    v10 = v3 + 2;
    v11 = 8 * v9 - 8;
    do
    {
      sub_20AEC01D0(v8, (uint64_t)",", 1);
      sub_20B4383DC(v8, v10);
      v10 += 2;
      v11 -= 8;
    }
    while (v11);
  }
  return sub_20AEC01D0(v8, (uint64_t)"}", 1);
}

