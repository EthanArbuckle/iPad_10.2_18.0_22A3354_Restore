double sub_1A44B7858()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale) + 0.05;
  *(double *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale) = result;
  return result;
}

double sub_1A44B7878()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale) + -0.05;
  *(double *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale) = result;
  return result;
}

uint64_t sub_1A44B7898(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v13 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DFF8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A44BFCAC();
  sub_1A4691D40();
  LOBYTE(v15) = 0;
  sub_1A469186C();
  if (!v4)
  {
    v15 = a2;
    v16 = a3;
    v17 = v13 & 1;
    v14 = 1;
    sub_1A44BFD34();
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1A44B79E8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DFB8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A44BF510();
  sub_1A4691D40();
  v14 = 0;
  sub_1A4691854();
  if (!v2)
  {
    v13 = 1;
    sub_1A469186C();
    v12 = 2;
    sub_1A4691854();
    v11 = *(_QWORD *)(v3 + 40);
    v10[15] = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DF90);
    sub_1A44BF554();
    sub_1A4691890();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A44B7B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _BYTE v10[40];

  sub_1A443E484(a1, (uint64_t)v10);
  v5 = sub_1A469093C();
  if (v2)
  {

    sub_1A443E484(a1, (uint64_t)v10);
    v7 = sub_1A4690DE0();
    result = __swift_destroy_boxed_opaque_existential_1(a1);
    v9 = 0;
  }
  else
  {
    v7 = v5;
    v9 = v6;
    result = __swift_destroy_boxed_opaque_existential_1(a1);
  }
  *(_QWORD *)a2 = v7;
  *(_QWORD *)(a2 + 8) = v9;
  *(_BYTE *)(a2 + 16) = v2 != 0;
  return result;
}

uint64_t sub_1A44B7C2C()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
    return sub_1A4690DEC();
  else
    return sub_1A4690990();
}

uint64_t sub_1A44B7C5C()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 16);
  sub_1A4691C8C();
  if ((v1 & 1) != 0)
    sub_1A4691C98();
  else
    sub_1A4690948();
  return sub_1A4691CC8();
}

uint64_t sub_1A44B7CC4()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
    return sub_1A4691C98();
  else
    return sub_1A4690948();
}

uint64_t sub_1A44B7D0C()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 16);
  sub_1A4691C8C();
  if ((v1 & 1) != 0)
    sub_1A4691C98();
  else
    sub_1A4690948();
  return sub_1A4691CC8();
}

uint64_t sub_1A44B7D70(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = *a1;
  v4 = *a2;
  if ((a1[2] & 1) != 0)
  {
    if (v3 == v4)
      return *((unsigned __int8 *)a2 + 16);
    else
      return 0;
  }
  else if ((a2[2] & 1) != 0)
  {
    return 0;
  }
  else
  {
    v6 = a1[1];
    if (v3 == v4 && v6 == a2[1])
      return 1;
    else
      return sub_1A4691A40();
  }
}

uint64_t sub_1A44B7DC8()
{
  _BYTE *v0;

  if (*v0)
    return 1953720684;
  else
    return 0x737569646172;
}

uint64_t sub_1A44B7DF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A44BF604(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A44B7E1C()
{
  sub_1A44BFCAC();
  return sub_1A4691DB8();
}

uint64_t sub_1A44B7E44()
{
  sub_1A44BFCAC();
  return sub_1A4691DC4();
}

_QWORD *sub_1A44B7E6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;
  char v6;
  uint64_t v7;

  result = sub_1A44BF6DC(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v7;
    *(_QWORD *)(a2 + 8) = result;
    *(_QWORD *)(a2 + 16) = v5;
    *(_BYTE *)(a2 + 24) = v6 & 1;
  }
  return result;
}

uint64_t sub_1A44B7EA0(_QWORD *a1)
{
  uint64_t v1;

  return sub_1A44B7898(a1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1A44B7EC0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A44B7EF0 + 4 * byte_1A4699280[*v0]))(0x6E6F6973726576, 0xE700000000000000);
}

uint64_t sub_1A44B7EF0()
{
  return 0x65636E6174736964;
}

uint64_t sub_1A44B7F14()
{
  return 1735287148;
}

uint64_t sub_1A44B7F24()
{
  return 0x73656C62627562;
}

uint64_t sub_1A44B7F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A44BF858(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A44B7F5C()
{
  sub_1A44BF510();
  return sub_1A4691DB8();
}

uint64_t sub_1A44B7F84()
{
  sub_1A44BF510();
  return sub_1A4691DC4();
}

double sub_1A44B7FAC@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1A44BFA24(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1A44B7FEC(_QWORD *a1)
{
  return sub_1A44B79E8(a1);
}

uint64_t sub_1A44B8000@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  void *v6;
  void *v7;
  unint64_t v8;
  uint64_t result;

  if (*(_QWORD *)(a1 + 16) != a2)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (a2 >> 60)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = (void *)swift_slowAlloc();
  v7 = v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    if (v8 == a2)
    {
      type metadata accessor for REMLinearAlgebraDataRef();
      result = swift_allocObject();
      *(_QWORD *)(result + 16) = v7;
      *(_QWORD *)(result + 24) = a2;
      *a3 = a2;
      a3[1] = result;
      return result;
    }
    goto LABEL_15;
  }
  if (v8 <= a2)
  {
    if (a1 + 32 < (unint64_t)v6 + 8 * v8 && (unint64_t)v6 < a1 + 32 + 8 * v8)
      goto LABEL_17;
    memcpy(v6, (const void *)(a1 + 32), 8 * v8);
    goto LABEL_11;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

void sub_1A44B8118(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t inited;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  double v65;
  double v66;
  BOOL v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint64_t v84;
  uint8_t *v85;
  uint8_t *v86;
  _OWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  _OWORD *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  _OWORD *v110;
  uint64_t v111;
  uint8_t *v112;
  __int128 v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int64_t v120;
  void *v121;
  uint64_t v122;
  id v123;
  uint64_t v124;
  int64_t v125;
  uint64_t v126;
  unint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  __int128 v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;

  v110 = a2;
  v108 = sub_1A46900FC();
  v107 = *(_QWORD *)(v108 - 8);
  MEMORY[0x1E0C80A78](v108);
  v106 = (char *)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v103 - v8;
  v123 = objc_msgSend((id)objc_opt_self(), sel_wordEmbeddingForLanguage_, a1);
  if (!v123)
    goto LABEL_83;
  v10 = sub_1A4690F84();
  if (!v10)
  {

LABEL_83:
    v87 = v110;
    *v110 = 0u;
    v87[1] = 0u;
    *((_BYTE *)v87 + 32) = -1;
    return;
  }
  v11 = v10;
  v104 = v7;
  v105 = v9;
  v12 = *(_QWORD *)(v129 + 24);
  v13 = *(_QWORD *)(v12 + 64);
  v119 = v12 + 64;
  v14 = 1 << *(_BYTE *)(v12 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v117 = OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction;
  v116 = OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale;
  v120 = (unint64_t)(v14 + 63) >> 6;
  v114 = (char *)(v10 + 32);
  v109 = &v137;
  swift_bridgeObjectRetain();
  v17 = 0;
  v121 = 0;
  *(_QWORD *)&v18 = 136315138;
  v113 = v18;
  v111 = MEMORY[0x1E0DEE9B8] + 8;
  v115 = v12;
  v118 = v11;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (v16)
        {
          v19 = __clz(__rbit64(v16));
          v16 &= v16 - 1;
          v20 = v19 | (v17 << 6);
        }
        else
        {
          if (__OFADD__(v17++, 1))
            goto LABEL_92;
          if (v17 >= v120)
          {
LABEL_81:

            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_83;
          }
          v22 = *(_QWORD *)(v119 + 8 * v17);
          if (!v22)
          {
            v23 = v17 + 1;
            if (v17 + 1 >= v120)
              goto LABEL_81;
            v22 = *(_QWORD *)(v119 + 8 * v23);
            if (!v22)
            {
              v23 = v17 + 2;
              if (v17 + 2 >= v120)
                goto LABEL_81;
              v22 = *(_QWORD *)(v119 + 8 * v23);
              if (!v22)
              {
                v23 = v17 + 3;
                if (v17 + 3 >= v120)
                  goto LABEL_81;
                v22 = *(_QWORD *)(v119 + 8 * v23);
                if (!v22)
                {
                  while (1)
                  {
                    v17 = v23 + 1;
                    if (__OFADD__(v23, 1))
                      break;
                    if (v17 >= v120)
                      goto LABEL_81;
                    v22 = *(_QWORD *)(v119 + 8 * v17);
                    ++v23;
                    if (v22)
                      goto LABEL_19;
                  }
LABEL_93:
                  __break(1u);
LABEL_94:
                  sub_1A46916F8();
                  __break(1u);
                  return;
                }
              }
            }
            v17 = v23;
          }
LABEL_19:
          v16 = (v22 - 1) & v22;
          v20 = __clz(__rbit64(v22)) + (v17 << 6);
        }
        v24 = *(_QWORD *)(v12 + 56) + 32 * v20;
        v25 = *(double *)v24;
        v27 = *(_QWORD *)(v24 + 8);
        v26 = *(_QWORD *)(v24 + 16);
        v28 = *(unsigned __int8 *)(v24 + 24);
        swift_bridgeObjectRetain();
        sub_1A44BEF64(v27, v26, v28);
        v29 = sub_1A4690F84();
        swift_bridgeObjectRelease();
        if (v29)
          break;
        sub_1A44BEF10(v27, v26, v28);
      }
      v124 = v27;
      v125 = v17;
      v30 = *(_QWORD *)(v11 + 16);
      if (v30 >> 60)
      {
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
        goto LABEL_93;
      }
      v31 = 8 * v30;
      swift_bridgeObjectRetain();
      v32 = (char *)swift_slowAlloc();
      v33 = v32;
      if (*(_QWORD *)(v11 + 16))
      {
        if (v114 < &v32[v31] && v32 < &v114[v31])
          goto LABEL_94;
        memcpy(v32, v114, 8 * v30);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        if (v30)
          goto LABEL_89;
      }
      v126 = v26;
      type metadata accessor for REMLinearAlgebraDataRef();
      inited = swift_initStackObject();
      *(_QWORD *)(inited + 16) = v33;
      *(_QWORD *)(inited + 24) = v30;
      v35 = *(_QWORD *)(v29 + 16);
      if (v35 >> 60)
        goto LABEL_90;
      v36 = inited;
      v127 = v16;
      v37 = 8 * v35;
      v38 = (void *)swift_slowAlloc();
      v39 = v38;
      if (*(_QWORD *)(v29 + 16))
      {
        if (v29 + 32 < (unint64_t)v38 + v37 && (unint64_t)v38 < v29 + 32 + v37)
          goto LABEL_94;
        memcpy(v38, (const void *)(v29 + 32), 8 * v35);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        if (v35)
          goto LABEL_91;
      }
      v128 = v28;
      v41 = swift_initStackObject();
      *(_QWORD *)(v41 + 16) = v39;
      *(_QWORD *)(v41 + 24) = v35;
      v130 = v41;
      v42 = *(_QWORD *)(v129 + v117);
      if (!v42)
      {
        v16 = v127;
        v44 = v36;
        goto LABEL_53;
      }
      v43 = *(_QWORD *)(v42 + 48);
      v16 = v127;
      if (v43)
      {
        v44 = v36;
        v134 = *(_OWORD *)(v42 + 32);
        v135 = v43;
        v132 = v30;
        v133 = v36;
        swift_retain();
        v45 = v121;
        static REMMatrix.mul(_:_:)((unint64_t *)&v134, &v132, &v136);
        if (v45)
          goto LABEL_48;
        v121 = 0;
        swift_release();
        v30 = v136;
        v44 = v137;
      }
      else
      {
        v46 = qword_1EE71C238;
        swift_retain();
        if (v46 != -1)
          swift_once();
        v47 = sub_1A4690318();
        __swift_project_value_buffer(v47, (uint64_t)qword_1EE724868);
        v48 = sub_1A469030C();
        v49 = sub_1A4690FF0();
        if (os_log_type_enabled(v48, v49))
        {
          v50 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v50 = 0;
          _os_log_impl(&dword_1A442D000, v48, v49, "REMPCASolver project vector: missing PCA projection", v50, 2u);
          MEMORY[0x1A85A0114](v50, -1, -1);
        }

        v44 = v36;
      }
      v51 = v126;
      v52 = *(_QWORD *)(v42 + 48);
      if (v52)
      {
        v134 = *(_OWORD *)(v42 + 32);
        v135 = v52;
        v132 = v35;
        v133 = v130;
        v45 = v121;
        static REMMatrix.mul(_:_:)((unint64_t *)&v134, &v132, &v136);
        if (v45)
        {
LABEL_48:
          v121 = 0;
          v122 = v44;
          if (qword_1ED23F210 != -1)
            swift_once();
          v53 = sub_1A4690318();
          __swift_project_value_buffer(v53, (uint64_t)qword_1ED23F1F8);
          v54 = v45;
          v55 = v45;
          v56 = sub_1A469030C();
          v57 = sub_1A4690FF0();
          if (os_log_type_enabled(v56, v57))
          {
            v58 = (uint8_t *)swift_slowAlloc();
            v59 = swift_slowAlloc();
            *(_QWORD *)&v134 = v59;
            *(_DWORD *)v58 = v113;
            v112 = v58 + 4;
            swift_getErrorValue();
            v60 = Error.rem_errorDescription.getter(v131);
            v136 = sub_1A4431120(v60, v61, (uint64_t *)&v134);
            v16 = v127;
            sub_1A46911D0();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_1A442D000, v56, v57, "REMAnchoredBubbleModel: Skipping dimension reduction when predicting from token due to %s", v58, 0xCu);
            swift_arrayDestroy();
            v62 = v126;
            v63 = v130;
            MEMORY[0x1A85A0114](v59, -1, -1);
            MEMORY[0x1A85A0114](v58, -1, -1);

            swift_release();
            v64 = v45;
            v51 = v62;

            v12 = v115;
            v44 = v122;
            goto LABEL_55;
          }
          swift_release();

          v12 = v115;
          v44 = v122;
LABEL_53:
          v63 = v130;
        }
        else
        {
          v121 = 0;
          swift_release();
          swift_release();
          v35 = v136;
          v63 = v137;
        }
        v51 = v126;
        goto LABEL_55;
      }
      if (qword_1EE71C238 != -1)
        swift_once();
      v81 = sub_1A4690318();
      __swift_project_value_buffer(v81, (uint64_t)qword_1EE724868);
      v82 = sub_1A469030C();
      v83 = sub_1A4690FF0();
      if (os_log_type_enabled(v82, v83))
      {
        v84 = v51;
        v85 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v85 = 0;
        _os_log_impl(&dword_1A442D000, v82, v83, "REMPCASolver project vector: missing PCA projection", v85, 2u);
        v86 = v85;
        v51 = v84;
        MEMORY[0x1A85A0114](v86, -1, -1);
      }
      swift_release();

      v63 = v130;
LABEL_55:
      v65 = *(double *)(v129 + v116);
      *(_QWORD *)&v134 = v30;
      *((_QWORD *)&v134 + 1) = v44;
      v136 = v35;
      v137 = v63;
      static REMVector.angularCosineDistance(lhs:rhs:)((int64_t *)&v134, (int64_t *)&v136);
      if (v65 <= 0.49)
      {
        v68 = v65 > 0.2 ? v65 : 0.2;
        v67 = v66 <= 0.25;
      }
      else
      {
        v67 = v66 <= 0.25;
        v68 = 0.49;
      }
      v11 = v118;
      v17 = v125;
      if (v67)
        break;
      if (v68 + v68 + v66 * (1.0 - v68) * 4.0 + -1.0 <= v25)
        goto LABEL_63;
LABEL_69:
      sub_1A44BEF10(v124, v51, v128);
      swift_release();
      swift_release();
    }
    if (v66 * 4.0 * v68 > v25)
      goto LABEL_69;
LABEL_63:
    v130 = v63;
    v122 = v44;
    v69 = v124;
    sub_1A44B9BDC(v124, v51, v128);
    if (v70)
      break;
    if (qword_1ED23F210 != -1)
      swift_once();
    v71 = sub_1A4690318();
    __swift_project_value_buffer(v71, (uint64_t)qword_1ED23F1F8);
    v72 = v51;
    v73 = v128;
    sub_1A44BEF64(v69, v51, v128);
    v74 = sub_1A469030C();
    v75 = sub_1A4690FF0();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = swift_slowAlloc();
      v77 = swift_slowAlloc();
      v136 = v77;
      *(_DWORD *)v76 = v113;
      *(_QWORD *)&v134 = v69;
      *((_QWORD *)&v134 + 1) = v72;
      LOBYTE(v135) = v73;
      sub_1A44BEF64(v69, v72, v73);
      v78 = sub_1A46908E8();
      *(_QWORD *)(v76 + 4) = sub_1A4431120(v78, v79, (uint64_t *)&v136);
      v12 = v115;
      swift_bridgeObjectRelease();
      sub_1A44BEF10(v69, v72, v73);
      sub_1A44BEF10(v69, v72, v73);
      _os_log_impl(&dword_1A442D000, v74, v75, "REMAnchoredBubbleModel.predict: cannot find category label for %s", (uint8_t *)v76, 0xCu);
      swift_arrayDestroy();
      v80 = v77;
      v16 = v127;
      MEMORY[0x1A85A0114](v80, -1, -1);
      MEMORY[0x1A85A0114](v76, -1, -1);
      swift_release();
      swift_release();

    }
    else
    {

      sub_1A44BEF10(v69, v72, v73);
      sub_1A44BEF10(v69, v72, v73);
      swift_release();
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  sub_1A44BEF10(v69, v51, v128);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4B0);
  v88 = swift_initStackObject();
  *(_OWORD *)(v88 + 16) = xmmword_1A4695C10;
  *(_BYTE *)(v88 + 32) = 4;
  *(_QWORD *)(v88 + 40) = MEMORY[0x1E0DEE9E8];
  sub_1A443D024(v88);
  v90 = v89;
  v91 = (uint64_t)v105;
  sub_1A46900C0();
  swift_bridgeObjectRelease();
  v92 = (uint64_t)v104;
  sub_1A444ABF4(v91, (uint64_t)v104, &qword_1ED243170);
  v93 = v107;
  v94 = v108;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v92, 1, v108) == 1)
  {
    sub_1A445404C(v91, &qword_1ED243170);
    sub_1A445404C(v92, &qword_1ED243170);
    v95 = 0xE500000000000000;
    v96 = 0x296C696E28;
  }
  else
  {
    v97 = v106;
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 32))(v106, v92, v94);
    v98 = v93;
    v96 = sub_1A46900CC();
    v99 = v94;
    v95 = v100;
    sub_1A445404C(v91, &qword_1ED243170);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v97, v99);
  }
  type metadata accessor for REMSuggestedList();
  v101 = swift_allocObject();
  *(_QWORD *)(v101 + 16) = v96;
  *(_QWORD *)(v101 + 24) = v95;
  swift_release();

  swift_release();
  swift_release();
  v102 = v110;
  *(_QWORD *)v110 = v90;
  *((_QWORD *)v102 + 1) = v101;
  *((_QWORD *)v102 + 2) = 0;
  *((_QWORD *)v102 + 3) = 0;
  *((_BYTE *)v102 + 32) = 0;
}

uint64_t sub_1A44B9008(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v11;

  sub_1A44B9144(a1, a2);
  if (v4 == -1)
    return 0;
  v5 = v3;
  if ((v4 & 1) != 0)
  {
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels))
    {
      v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels);
      if (v3 < 0)
        goto LABEL_9;
    }
    else
    {
      v7 = swift_bridgeObjectRetain();
      v8 = sub_1A44B13B4(v7);
      swift_bridgeObjectRelease();
      v9 = sub_1A44BB3C4(v8);
      swift_bridgeObjectRelease();
      v11 = v9;
      swift_bridgeObjectRetain_n();
      sub_1A44BB34C((uint64_t *)&v11, sub_1A462EBDC, sub_1A44BBE00);
      swift_bridgeObjectRelease_n();
      v6 = (uint64_t)v11;
      if (v5 < 0)
        goto LABEL_9;
    }
    if (v5 < *(_QWORD *)(v6 + 16))
    {
      v5 = *(_QWORD *)(v6 + 16 * v5 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return v5;
    }
LABEL_9:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v5;
}

uint64_t sub_1A44B9144(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;

  v3 = v2;
  v6 = sub_1A468FBEC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v40[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = 0;
  v42 = 0;
  v43 = 0;
  v44 = -1;
  v10 = objc_msgSend((id)objc_opt_self(), sel_wordEmbeddingForLanguage_, *(_QWORD *)(v3 + 16));
  if (!v10)
  {
    if (qword_1ED23F210 != -1)
      swift_once();
    v27 = sub_1A4690318();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED23F1F8);
    swift_retain_n();
    v28 = sub_1A469030C();
    v29 = sub_1A4690FF0();
    if (!os_log_type_enabled(v28, v29))
    {

      swift_release_n();
      v36 = 0;
      v35 = 0;
      v34 = 0;
      v37 = -1;
      goto LABEL_20;
    }
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v40[0] = v31;
    *(_DWORD *)v30 = 136315138;
    v32 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v40[2] = sub_1A4431120(v32, v33, v40);
    sub_1A46911D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v28, v29, "REMAnchoredBubbleModel: missing NLEmbedding for %s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v31, -1, -1);
    MEMORY[0x1A85A0114](v30, -1, -1);

LABEL_18:
    v34 = v41;
    v35 = v42;
    v36 = v43;
    v37 = v44;
LABEL_20:
    sub_1A44BFD78(v34, v35, v36, v37);
    return 0;
  }
  v11 = v10;
  v40[0] = _s19ReminderKitInternal25REMFilteredTitleEmbeddingC17decodeEmojiInText_8languageS2S_So10NLLanguageatFZ_0(a1, a2);
  v40[1] = v12;
  sub_1A468FBC8();
  sub_1A4466118();
  v13 = sub_1A4691218();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v16 = swift_bridgeObjectRelease();
  v17 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0)
    v17 = v13 & 0xFFFFFFFFFFFFLL;
  if (!v17)
  {

    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  v40[0] = MEMORY[0x1E0DEE9D8];
  v18 = (void *)MEMORY[0x1A859F880](v16);
  sub_1A44B9D10();
  objc_autoreleasePoolPop(v18);
  swift_bridgeObjectRelease();
  v19 = v40[0];
  if (*(_QWORD *)(v40[0] + 16) >= 0xAuLL)
    v20 = 10;
  else
    v20 = *(_QWORD *)(v40[0] + 16);
  if (v20)
  {
    swift_bridgeObjectRetain();
    v21 = 0;
    v22 = 16 * v20;
    do
    {
      v24 = *(_QWORD *)(v19 + v21 + 32);
      v23 = *(_QWORD *)(v19 + v21 + 40);
      v25 = swift_bridgeObjectRetain();
      v26 = (void *)MEMORY[0x1A859F880](v25);
      sub_1A44B952C(v3, v24, v23, (uint64_t)&v41, (uint64_t)v11);
      objc_autoreleasePoolPop(v26);
      swift_bridgeObjectRelease();
      if (v44 != 255)
        break;
      v21 += 16;
    }
    while (v22 != v21);

    swift_bridgeObjectRelease_n();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  return v41;
}

void sub_1A44B952C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v32;
  int64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;

  v9 = *(_QWORD *)(a1 + 24);
  if (*(_QWORD *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = sub_1A443E4C8(a2, a3);
    if ((v11 & 1) != 0)
    {
      v12 = *(_QWORD *)(v9 + 56) + 32 * v10;
      v13 = *(_QWORD *)v12;
      v14 = *(_QWORD *)(v12 + 8);
      v15 = *(_QWORD *)(v12 + 16);
      v16 = *(_BYTE *)(v12 + 24);
      sub_1A44BEF64(v14, v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)a4;
      v18 = *(_QWORD *)(a4 + 8);
      v19 = *(_QWORD *)(a4 + 16);
      *(_QWORD *)a4 = v13;
      *(_QWORD *)(a4 + 8) = v14;
      *(_QWORD *)(a4 + 16) = v15;
      v20 = *(_BYTE *)(a4 + 24);
      *(_BYTE *)(a4 + 24) = v16;
      sub_1A44BFD78(v17, v18, v19, v20);
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v47 = sub_1A4690F84();
  if (v47)
  {
    v21 = *(_QWORD *)(a1 + 24);
    v22 = *(_QWORD *)(v21 + 64);
    v44 = v21 + 64;
    v23 = 1 << *(_BYTE *)(v21 + 32);
    v24 = -1;
    if (v23 < 64)
      v24 = ~(-1 << v23);
    v25 = v24 & v22;
    v45 = (unint64_t)(v23 + 63) >> 6;
    v46 = *(_QWORD *)(a1 + 24);
    v26 = (void *)swift_bridgeObjectRetain();
    v27 = 0;
    v28 = a4;
    while (1)
    {
      if (v25)
      {
        v29 = __clz(__rbit64(v25));
        v25 &= v25 - 1;
        v30 = v29 | (v27 << 6);
      }
      else
      {
        if (__OFADD__(v27++, 1))
        {
          __break(1u);
          goto LABEL_32;
        }
        if (v27 >= v45)
          goto LABEL_30;
        v32 = *(_QWORD *)(v44 + 8 * v27);
        if (!v32)
        {
          v33 = v27 + 1;
          if (v27 + 1 >= v45)
            goto LABEL_30;
          v32 = *(_QWORD *)(v44 + 8 * v33);
          if (!v32)
          {
            v33 = v27 + 2;
            if (v27 + 2 >= v45)
              goto LABEL_30;
            v32 = *(_QWORD *)(v44 + 8 * v33);
            if (!v32)
            {
              v33 = v27 + 3;
              if (v27 + 3 >= v45)
                goto LABEL_30;
              v32 = *(_QWORD *)(v44 + 8 * v33);
              if (!v32)
              {
                while (1)
                {
                  v27 = v33 + 1;
                  if (__OFADD__(v33, 1))
                    break;
                  if (v27 >= v45)
                    goto LABEL_30;
                  v32 = *(_QWORD *)(v44 + 8 * v27);
                  ++v33;
                  if (v32)
                    goto LABEL_21;
                }
LABEL_32:
                __break(1u);
LABEL_33:
                objc_autoreleasePoolPop(v26);
                __break(1u);
                return;
              }
            }
          }
          v27 = v33;
        }
LABEL_21:
        v25 = (v32 - 1) & v32;
        v30 = __clz(__rbit64(v32)) + (v27 << 6);
      }
      v34 = (uint64_t *)(*(_QWORD *)(v46 + 48) + 16 * v30);
      v36 = *v34;
      v35 = v34[1];
      v37 = *(_QWORD *)(v46 + 56) + 32 * v30;
      v38 = *(double *)v37;
      v39 = *(_QWORD *)(v37 + 8);
      v40 = *(_QWORD *)(v37 + 16);
      v41 = *(_BYTE *)(v37 + 24);
      swift_bridgeObjectRetain();
      v42 = sub_1A44BEF64(v39, v40, v41);
      v43 = (void *)MEMORY[0x1A859F880](v42);
      sub_1A44B982C(v38, a5, v36, v35, v47, a1, v39, v40, v41, v28);
      v26 = v43;
      if (v5)
        goto LABEL_33;
      objc_autoreleasePoolPop(v43);
      swift_bridgeObjectRelease();
      v26 = (void *)sub_1A44BEF10(v39, v40, v41);
      if (*(unsigned __int8 *)(v28 + 24) != 255)
      {
LABEL_30:
        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
    }
  }
}

uint64_t sub_1A44B982C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  void *v10;
  void *v11;
  uint64_t result;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint8_t *v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v11 = v10;
  result = sub_1A4690F84();
  if (result)
  {
    v19 = result;
    v20 = *(_QWORD *)(a5 + 16);
    v21 = swift_bridgeObjectRetain();
    sub_1A44B8000(v21, v20, (unint64_t *)&v49);
    sub_1A44B8000(v19, *(_QWORD *)(v19 + 16), (unint64_t *)&v47);
    v22 = v49;
    if (*(_QWORD *)(a6 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction))
    {
      v43 = v49;
      v44 = v50;
      swift_retain();
      swift_retain();
      sub_1A465869C((unint64_t *)&v43, &v45);
      if (v11)
      {
        swift_release();
        v41 = a9;
        if (qword_1ED23F210 != -1)
          swift_once();
        v23 = sub_1A4690318();
        __swift_project_value_buffer(v23, (uint64_t)qword_1ED23F1F8);
        v24 = v11;
        v25 = v11;
        v26 = sub_1A469030C();
        v27 = sub_1A4690FF0();
        if (os_log_type_enabled(v26, v27))
        {
          v40 = a8;
          v28 = (uint8_t *)swift_slowAlloc();
          v29 = swift_slowAlloc();
          v45 = v29;
          *(_DWORD *)v28 = 136315138;
          swift_getErrorValue();
          v30 = Error.rem_errorDescription.getter(v42);
          v43 = sub_1A4431120(v30, v31, (uint64_t *)&v45);
          sub_1A46911D0();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1A442D000, v26, v27, "REMAnchoredBubbleModel: Skipping dimension reduction when predicting from title due to %s", v28, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1A85A0114](v29, -1, -1);
          v32 = v28;
          a8 = v40;
          MEMORY[0x1A85A0114](v32, -1, -1);

          swift_release();
          v22 = v49;
        }
        else
        {
          swift_release();

        }
        a9 = v41;
      }
      else
      {
        swift_release_n();
        v22 = v45;
        v49 = v45;
        v50 = v46;
        v43 = v47;
        v44 = v48;
        swift_retain();
        sub_1A465869C((unint64_t *)&v43, &v45);
        swift_release_n();
        swift_release();
        v47 = v45;
        v48 = v46;
      }
    }
    v45 = v22;
    v46 = v50;
    v43 = v47;
    v44 = v48;
    static REMVector.rescaledAngularCosineDistance(lhs:rhs:scale:)((int64_t *)&v45, &v43);
    v34 = v33;
    swift_release();
    result = swift_release();
    if (v34 < a1)
    {
      v35 = *(_QWORD *)a10;
      v36 = *(_QWORD *)(a10 + 8);
      v37 = *(_QWORD *)(a10 + 16);
      *(double *)a10 = a1;
      *(_QWORD *)(a10 + 8) = a7;
      *(_QWORD *)(a10 + 16) = a8;
      v38 = a7;
      v39 = *(_BYTE *)(a10 + 24);
      *(_BYTE *)(a10 + 24) = a9 & 1;
      sub_1A44BEF64(v38, a8, a9 & 1);
      return sub_1A44BFD78(v35, v36, v37, v39);
    }
  }
  return result;
}

uint64_t sub_1A44B9BDC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v10;

  v4 = a1;
  if ((a3 & 1) != 0)
  {
    if (*(_QWORD *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels))
    {
      v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels);
      if (a1 < 0)
        goto LABEL_9;
    }
    else
    {
      v6 = swift_bridgeObjectRetain();
      v7 = sub_1A44B13B4(v6);
      swift_bridgeObjectRelease();
      v8 = sub_1A44BB3C4(v7);
      swift_bridgeObjectRelease();
      v10 = v8;
      swift_bridgeObjectRetain_n();
      sub_1A44BB34C((uint64_t *)&v10, sub_1A462EBDC, sub_1A44BBE00);
      swift_bridgeObjectRelease_n();
      v5 = (uint64_t)v10;
      if (v4 < 0)
        goto LABEL_9;
    }
    if (*(_QWORD *)(v5 + 16) > v4)
    {
      v4 = *(_QWORD *)(v5 + 16 * v4 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return v4;
    }
LABEL_9:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_1A44B9D10()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t inited;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DB68);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A4696430;
  v1 = (void *)*MEMORY[0x1E0CCE0B8];
  v2 = (void *)*MEMORY[0x1E0CCE0D0];
  *(_QWORD *)(v0 + 32) = *MEMORY[0x1E0CCE0B8];
  *(_QWORD *)(v0 + 40) = v2;
  v3 = objc_allocWithZone(MEMORY[0x1E0CCE168]);
  type metadata accessor for NLTagScheme(0);
  v4 = v1;
  v2;
  v5 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_initWithTagSchemes_, v5);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DDD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4699270;
  v8 = (void *)*MEMORY[0x1E0CCE050];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CCE050];
  v9 = (void *)*MEMORY[0x1E0CCE0F8];
  v10 = (void *)*MEMORY[0x1E0CCE080];
  *(_QWORD *)(inited + 40) = *MEMORY[0x1E0CCE0F8];
  *(_QWORD *)(inited + 48) = v10;
  v11 = (void *)*MEMORY[0x1E0CCE088];
  *(_QWORD *)(inited + 56) = *MEMORY[0x1E0CCE088];
  v12 = v8;
  v13 = v9;
  v14 = v10;
  v15 = v11;
  sub_1A462EF98(inited);
  swift_setDeallocating();
  type metadata accessor for NLTag(0);
  swift_arrayDestroy();
  v16 = (void *)sub_1A469087C();
  objc_msgSend(v6, sel_setString_, v16);

  sub_1A4691104();
  sub_1A4691110();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A44B9F58(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD **a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  _QWORD *v35;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;

  v11 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v13 = v12;
  if (v11 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v16 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      v17 = sub_1A4690A5C();
      v18 = MEMORY[0x1A859E164](v17);
      v20 = v19;
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
  }
  if (!a1)
    return 1;
  swift_bridgeObjectRetain();
  v21 = a1;
  v22 = sub_1A4462540((uint64_t)v21, a6);
  swift_bridgeObjectRelease();

  if ((v22 & 1) == 0)
    return 1;
  v23 = sub_1A469111C();
  if (!*(_QWORD *)(v23 + 16))
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  v24 = *(void **)(v23 + 32);
  v25 = v24;
  swift_bridgeObjectRelease();
  if (v24)
  {
    v18 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v20 = v26;

LABEL_13:
    v27 = sub_1A445391C();
    v28 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    if (*(_QWORD *)(v27 + 16) && (v30 = sub_1A443E4C8(v28, v29), (v31 & 1) != 0))
    {
      v32 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v30);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v33 = sub_1A4462344(v18, v20, v32);
      swift_bridgeObjectRelease();
      if ((v33 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v35 = *a9;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a9 = v35;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v35 = sub_1A4438920(0, v35[2] + 1, 1, v35);
      *a9 = v35;
    }
    v38 = v35[2];
    v37 = v35[3];
    if (v38 >= v37 >> 1)
    {
      v35 = sub_1A4438920((_QWORD *)(v37 > 1), v38 + 1, 1, v35);
      *a9 = v35;
    }
    v35[2] = v38 + 1;
    v39 = &v35[2 * v38];
    v39[4] = v18;
    v39[5] = v20;
  }
  return 1;
}

void sub_1A44BA200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, double *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v25;
  int64_t v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  double v35;
  char isUniquelyReferenced_nonNull_native;
  char v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  double v49;
  double v50;

  v9 = v8;
  v48 = sub_1A4690F84();
  if (v48)
  {
    v46 = a2;
    v47 = a3;
    v50 = INFINITY;
    v16 = a4 + 64;
    v17 = 1 << *(_BYTE *)(a4 + 32);
    v18 = -1;
    if (v17 < 64)
      v18 = ~(-1 << v17);
    v19 = v18 & *(_QWORD *)(a4 + 64);
    v42 = (unint64_t)(v17 + 63) >> 6;
    swift_bridgeObjectRetain();
    v20 = 0;
    v21 = a4;
    v40 = a5;
    v41 = a6;
    v38 = a4 + 64;
    v39 = a4;
    while (1)
    {
LABEL_5:
      if (v19)
      {
        v22 = __clz(__rbit64(v19));
        v19 &= v19 - 1;
        v23 = v22 | (v20 << 6);
      }
      else
      {
        if (__OFADD__(v20++, 1))
        {
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        if (v20 >= v42)
          goto LABEL_30;
        v25 = *(_QWORD *)(v16 + 8 * v20);
        if (!v25)
        {
          v26 = v20 + 1;
          if (v20 + 1 >= v42)
            goto LABEL_30;
          v25 = *(_QWORD *)(v16 + 8 * v26);
          if (!v25)
          {
            v26 = v20 + 2;
            if (v20 + 2 >= v42)
              goto LABEL_30;
            v25 = *(_QWORD *)(v16 + 8 * v26);
            if (!v25)
            {
              v26 = v20 + 3;
              if (v20 + 3 >= v42)
              {
LABEL_30:
                swift_bridgeObjectRelease();
                swift_release();
                v35 = v50 * 0.5;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v49 = *a8;
                *a8 = -0.0;
                sub_1A445E4A8((uint64_t)a5, a6, v46, v47, isUniquelyReferenced_nonNull_native, v35);
                *a8 = v49;
                goto LABEL_32;
              }
              v25 = *(_QWORD *)(v16 + 8 * v26);
              if (!v25)
              {
                while (1)
                {
                  v20 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_34;
                  if (v20 >= v42)
                    goto LABEL_30;
                  v25 = *(_QWORD *)(v16 + 8 * v20);
                  ++v26;
                  if (v25)
                    goto LABEL_17;
                }
              }
            }
          }
          v20 = v26;
        }
LABEL_17:
        v19 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      v27 = (void **)(*(_QWORD *)(v21 + 48) + 16 * v23);
      v28 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v23);
      if (*v27 != a5 || v27[1] != (void *)a6)
      {
        v43 = v28;
        v29 = v28;
        if ((sub_1A4691A40() & 1) == 0)
        {
          v30 = *(_QWORD *)(v43 + 16);
          if (v30)
            break;
        }
      }
    }
    swift_bridgeObjectRetain();
    v31 = (unint64_t *)(v29 + 40);
    while (1)
    {
      v32 = *(v31 - 1);
      v33 = *v31;
      v34 = swift_bridgeObjectRetain();
      a5 = (void *)MEMORY[0x1A859F880](v34);
      sub_1A44BA55C(a1, v32, v33, v48, a7, &v50, v46, v47);
      if (v9)
        break;
      v9 = 0;
      v31 += 5;
      objc_autoreleasePoolPop(a5);
      swift_bridgeObjectRelease();
      if (!--v30)
      {
        swift_bridgeObjectRelease();
        a5 = v40;
        a6 = v41;
        v16 = v38;
        v21 = v39;
        goto LABEL_5;
      }
    }
LABEL_35:
    objc_autoreleasePoolPop(a5);
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37 = swift_isUniquelyReferenced_nonNull_native();
    v50 = *a8;
    *a8 = -0.0;
    sub_1A445E4A8((uint64_t)a5, a6, a2, a3, v37, 0.0);
    *a8 = v50;
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A44BA55C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, double *a6, uint64_t a7, unint64_t a8)
{
  void *v8;
  void *v9;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint8_t *v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  double *v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v9 = v8;
  result = sub_1A4690F84();
  if (result)
  {
    v18 = result;
    v43 = a2;
    v44 = a6;
    v19 = *(_QWORD *)(a4 + 16);
    v20 = swift_bridgeObjectRetain();
    sub_1A44B8000(v20, v19, (unint64_t *)&v52);
    sub_1A44B8000(v18, *(_QWORD *)(v18 + 16), (unint64_t *)&v50);
    v21 = v52;
    if (a5)
    {
      v46 = v52;
      v47 = v53;
      swift_retain();
      swift_retain();
      sub_1A465869C((unint64_t *)&v46, &v48);
      if (v9)
      {
        swift_release();
        v42 = a8;
        if (qword_1ED23F210 != -1)
          swift_once();
        v22 = sub_1A4690318();
        __swift_project_value_buffer(v22, (uint64_t)qword_1ED23F1F8);
        v23 = v9;
        v24 = v9;
        v25 = sub_1A469030C();
        v26 = sub_1A4690FF0();
        if (os_log_type_enabled(v25, v26))
        {
          v41 = a7;
          v27 = (uint8_t *)swift_slowAlloc();
          v28 = swift_slowAlloc();
          v48 = v28;
          *(_DWORD *)v27 = 136315138;
          swift_getErrorValue();
          v29 = Error.rem_errorDescription.getter(v45);
          v46 = sub_1A4431120(v29, v30, (uint64_t *)&v48);
          sub_1A46911D0();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1A442D000, v25, v26, "REMAnchoredBubbleModel: Skipping dimension reduction when training due to %s", v27, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1A85A0114](v28, -1, -1);
          v31 = v27;
          a7 = v41;
          MEMORY[0x1A85A0114](v31, -1, -1);

          swift_release();
          v21 = v52;
        }
        else
        {
          swift_release();

        }
        a8 = v42;
      }
      else
      {
        swift_release_n();
        v21 = v48;
        v52 = v48;
        v53 = v49;
        v46 = v50;
        v47 = v51;
        swift_retain();
        sub_1A465869C((unint64_t *)&v46, &v48);
        swift_release_n();
        swift_release();
        v50 = v48;
        v51 = v49;
      }
    }
    v32 = *v44;
    v48 = v21;
    v49 = v53;
    v46 = v50;
    v47 = v51;
    static REMVector.rescaledAngularCosineDistance(lhs:rhs:scale:)((int64_t *)&v48, &v46);
    if (v33 >= v32)
      v33 = v32;
    *v44 = v33;
    if (v33 == 0.0)
    {
      v34 = a7;
      if (qword_1ED23F210 != -1)
        swift_once();
      v35 = sub_1A4690318();
      __swift_project_value_buffer(v35, (uint64_t)qword_1ED23F1F8);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v36 = sub_1A469030C();
      v37 = sub_1A4690FD8();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = a8;
        v39 = swift_slowAlloc();
        v40 = swift_slowAlloc();
        v48 = v40;
        *(_DWORD *)v39 = 136315394;
        swift_bridgeObjectRetain();
        v46 = sub_1A4431120(v34, v38, (uint64_t *)&v48);
        sub_1A46911D0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v39 + 12) = 2080;
        swift_bridgeObjectRetain();
        v46 = sub_1A4431120(v43, a3, (uint64_t *)&v48);
        sub_1A46911D0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A442D000, v36, v37, "%s and %s has 0 distance", (uint8_t *)v39, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v40, -1, -1);
        MEMORY[0x1A85A0114](v39, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      swift_release();
    }
    else
    {
      swift_release();
    }
    return swift_release();
  }
  return result;
}

void sub_1A44BAA84(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _QWORD *a5, uint64_t a6, double a7)
{
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  double v25;
  _OWORD *v26;
  int64_t v27;
  uint64_t v28;
  int64_t v29;
  __int128 v34;
  _OWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  double v39;
  __int128 v40;
  uint64_t v41;

  v9 = v7;
  v41 = a6;
  v28 = a1 + 64;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(v12 + 63) >> 6;
  swift_bridgeObjectRetain();
  v15 = 0;
  if (!v14)
    goto LABEL_6;
LABEL_4:
  v16 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  v17 = v16 | (v15 << 6);
LABEL_5:
  v18 = *(_QWORD *)(a1 + 56);
  v19 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v17);
  v20 = v19[1];
  *(_QWORD *)&v34 = *v19;
  *((_QWORD *)&v34 + 1) = v20;
  sub_1A444ABF4(v18 + 40 * v17, (uint64_t)v35, &qword_1EE71E018);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1A44BFDEC((uint64_t)&v34, (uint64_t)&v37);
    v23 = v38;
    if (!v38)
    {
      swift_release();
      return;
    }
    v24 = v37;
    v25 = v39;
    *(double *)&v34 = v39;
    v26 = sub_1A444A940(&v40, (__int128 *)((char *)&v34 + 8));
    v8 = (void *)MEMORY[0x1A859F880](v26);
    sub_1A44BAD24(v24, v23, a7, v25, a2, a3, a4, a5);
    if (v9)
      goto LABEL_34;
    v9 = 0;
    objc_autoreleasePoolPop(v8);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34 + 8);
    if (v14)
      goto LABEL_4;
LABEL_6:
    v21 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v21 < v29)
    {
      v22 = *(_QWORD *)(v28 + 8 * v21);
      if (v22)
        goto LABEL_9;
      v15 += 2;
      if (v21 + 1 >= v29)
      {
        v15 = v21;
      }
      else
      {
        v22 = *(_QWORD *)(v28 + 8 * v15);
        if (v22)
        {
          ++v21;
          goto LABEL_9;
        }
        if (v21 + 2 < v29)
        {
          v22 = *(_QWORD *)(v28 + 8 * (v21 + 2));
          if (v22)
          {
            v21 += 2;
            goto LABEL_9;
          }
          v27 = v21 + 3;
          if (v21 + 3 < v29)
          {
            v22 = *(_QWORD *)(v28 + 8 * v27);
            if (!v22)
            {
              while (1)
              {
                v21 = v27 + 1;
                if (__OFADD__(v27, 1))
                  goto LABEL_33;
                if (v21 >= v29)
                {
                  v15 = v29 - 1;
                  goto LABEL_14;
                }
                v22 = *(_QWORD *)(v28 + 8 * v21);
                ++v27;
                if (v22)
                  goto LABEL_9;
              }
            }
            v21 += 3;
LABEL_9:
            v14 = (v22 - 1) & v22;
            v17 = __clz(__rbit64(v22)) + (v21 << 6);
            v15 = v21;
            goto LABEL_5;
          }
          v15 = v21 + 2;
        }
      }
    }
LABEL_14:
    v14 = 0;
    v36 = 0;
    memset(v35, 0, sizeof(v35));
    v34 = 0u;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  objc_autoreleasePoolPop(v8);
  __break(1u);
}

void sub_1A44BAD24(uint64_t a1, unint64_t a2, double a3, double a4, uint64_t a5, uint64_t a6, _QWORD *a7, _QWORD *a8)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t i;
  int64_t v20;
  int64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int64_t v39[2];
  uint64_t v40;
  int64_t v41;
  int64_t v42;

  sub_1A44B6910(a6, &v40);
  v42 = v41;
  if (!v41)
  {
    if (qword_1ED23F210 == -1)
      goto LABEL_19;
    goto LABEL_31;
  }
  if (__OFADD__(*a7, 1))
  {
    __break(1u);
LABEL_31:
    swift_once();
LABEL_19:
    v24 = sub_1A4690318();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED23F1F8);
    swift_bridgeObjectRetain_n();
    v25 = sub_1A469030C();
    v26 = sub_1A4691008();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v40 = v28;
      *(_DWORD *)v27 = 136315138;
      swift_bridgeObjectRetain();
      v39[0] = sub_1A4431120(a1, a2, &v40);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A442D000, v25, v26, "REMAnchoredBubbleModel: check too singular: Anchorword %s has no embedding", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v28, -1, -1);
      MEMORY[0x1A85A0114](v27, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  v37 = a8;
  v15 = v40;
  ++*a7;
  v16 = *(_QWORD *)(sub_1A4690F90() + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  v17 = swift_bridgeObjectRetain();
  if (a3 > 0.2)
    v18 = a3;
  else
    v18 = 0.2;
  v38 = v17;
  for (i = v17 + 40; ; i += 24)
  {
    swift_bridgeObjectRetain();
    sub_1A44B6910(a6, &v40);
    swift_bridgeObjectRelease();
    v20 = v41;
    if (v41)
      break;
LABEL_8:
    if (!--v16)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  v21 = v40;
  v40 = v15;
  v41 = v42;
  v39[0] = v21;
  v39[1] = v20;
  static REMVector.angularCosineDistance(lhs:rhs:)(&v40, v39);
  if (a3 <= 0.49)
    v23 = v18;
  else
    v23 = 0.49;
  if (v22 > 0.25)
  {
    if (v23 + v23 + v22 * (1.0 - v23) * 4.0 + -1.0 < a4)
      goto LABEL_24;
    goto LABEL_17;
  }
  if (v22 * 4.0 * v23 >= a4)
  {
LABEL_17:
    swift_release();
    goto LABEL_8;
  }
LABEL_24:
  swift_bridgeObjectRelease();
  if (__OFADD__(*v37, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v37;
    if (qword_1ED23F210 == -1)
      goto LABEL_26;
  }
  swift_once();
LABEL_26:
  v29 = sub_1A4690318();
  __swift_project_value_buffer(v29, (uint64_t)qword_1ED23F1F8);
  swift_bridgeObjectRetain();
  v30 = sub_1A469030C();
  v31 = sub_1A4691008();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    v40 = v33;
    *(_DWORD *)v32 = 136315138;
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E028);
    v35 = MEMORY[0x1A859E404](v38, v34);
    v39[0] = sub_1A4431120(v35, v36, &v40);
    sub_1A46911D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v30, v31, "REMAnchoredBubbleModel: Anchor word has nearby words: %s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v33, -1, -1);
    MEMORY[0x1A85A0114](v32, -1, -1);

    swift_release();
LABEL_28:
    swift_release();
  }
  else
  {

    swift_release();
    swift_bridgeObjectRelease_n();
    swift_release();
  }
}

uint64_t REMAnchoredBubbleModel.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1A445404C(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictionEditingSessionID, &qword_1ED243170);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMAnchoredBubbleModel.__deallocating_deinit()
{
  REMAnchoredBubbleModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1A44BB2F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_1A44BEC58(a1, a2);
  return sub_1A44BFD9C(*(uint64_t (**)(uint64_t))(v2 + 8), v2, v3);
}

uint64_t sub_1A44BB32C()
{
  return sub_1A44B50E4();
}

uint64_t sub_1A44BB34C(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = a2(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = a3(v9);
  *a1 = v6;
  return result;
}

_QWORD *sub_1A44BB3C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = MEMORY[0x1E0DEE9E8];
  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_29;
  }
  v21 = a1 + 32;
  swift_bridgeObjectRetain();
  v2 = 0;
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v4 = (uint64_t *)(v21 + 16 * v2);
    v6 = *v4;
    v5 = v4[1];
    v7 = v23;
    if (*(_QWORD *)(v23 + 16))
    {
      sub_1A4691C8C();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A4690948();
      v8 = sub_1A4691CC8();
      v9 = -1 << *(_BYTE *)(v7 + 32);
      v10 = v8 & ~v9;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
      {
        v11 = *(_QWORD *)(v7 + 48);
        v12 = (_QWORD *)(v11 + 16 * v10);
        v13 = *v12 == v6 && v12[1] == v5;
        if (v13 || (sub_1A4691A40() & 1) != 0)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v14 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v14;
          if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
            break;
          v15 = (_QWORD *)(v11 + 16 * v10);
          v16 = *v15 == v6 && v15[1] == v5;
          if (v16 || (sub_1A4691A40() & 1) != 0)
            goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_1A4438920(0, v3[2] + 1, 1, v3);
    v18 = v3[2];
    v17 = v3[3];
    if (v18 >= v17 >> 1)
      v3 = sub_1A4438920((_QWORD *)(v17 > 1), v18 + 1, 1, v3);
    v3[2] = v18 + 1;
    v19 = &v3[2 * v18];
    v19[4] = v6;
    v19[5] = v5;
    swift_bridgeObjectRetain();
    sub_1A4465F6C(&v22, v6, v5);
    swift_bridgeObjectRelease();
LABEL_4:
    swift_bridgeObjectRelease();
    ++v2;
  }
  while (v2 != v1);
  swift_bridgeObjectRelease();
LABEL_29:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1A44BB618(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = a1;
  v57 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_92:
    swift_bridgeObjectRetain();
    v2 = sub_1A46916A4();
    if (v2)
      goto LABEL_3;
LABEL_93:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v57;
  }
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_93;
LABEL_3:
  v3 = 0;
  v55 = v1 & 0xC000000000000001;
  v49 = v1 & 0xFFFFFFFFFFFFFF8;
  v4 = MEMORY[0x1E0DEE9E8];
  v53 = v1;
  v48 = v1 + 32;
  v54 = v2;
  while (1)
  {
    if (v55)
    {
      v5 = MEMORY[0x1A859ECE0](v3, v53);
      v6 = __OFADD__(v3++, 1);
      if (v6)
        goto LABEL_86;
    }
    else
    {
      if (v3 >= *(_QWORD *)(v49 + 16))
        goto LABEL_87;
      v5 = *(_QWORD *)(v48 + 8 * v3);
      swift_retain();
      v6 = __OFADD__(v3++, 1);
      if (v6)
        goto LABEL_86;
    }
    if ((v4 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      v7 = sub_1A4691344();
      swift_bridgeObjectRelease();
      swift_release();
      if ((v7 & 1) != 0)
      {
        swift_release();
        goto LABEL_5;
      }
    }
    else if (*(_QWORD *)(v4 + 16))
    {
      sub_1A4691C8C();
      sub_1A4691C98();
      v8 = sub_1A4691CC8();
      v9 = -1 << *(_BYTE *)(v4 + 32);
      v10 = v8 & ~v9;
      if (((*(_QWORD *)(v4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
      {
        v50 = ~v9;
        v11 = v5 + 16;
        v51 = *(_QWORD *)(v4 + 48);
        swift_beginAccess();
        while (1)
        {
          v1 = *(_QWORD *)(v51 + 8 * v10);
          swift_beginAccess();
          v12 = *(_QWORD *)(v1 + 24);
          if (v12 == *(_QWORD *)(v5 + 24))
            break;
LABEL_18:
          v10 = (v10 + 1) & v50;
          v2 = v54;
          if (((*(_QWORD *)(v4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
            goto LABEL_29;
        }
        if (v12 < 0)
          goto LABEL_88;
        if (v12)
        {
          swift_beginAccess();
          swift_beginAccess();
          v13 = 0;
          v14 = *(_QWORD *)(v1 + 16);
          v15 = *(_QWORD *)(v14 + 16);
          v16 = v14 + 32;
          while (v12 != v13)
          {
            if (v13 >= v15)
              goto LABEL_81;
            if (v13 >= *(_QWORD *)(*(_QWORD *)v11 + 16))
              goto LABEL_82;
            if (*(double *)(v16 + 8 * v13) != *(double *)(*(_QWORD *)v11 + 8 * v13 + 32))
              goto LABEL_18;
            if (v12 == ++v13)
              goto LABEL_49;
          }
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
LABEL_82:
          __break(1u);
LABEL_83:
          __break(1u);
LABEL_84:
          __break(1u);
LABEL_85:
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          __break(1u);
LABEL_88:
          __break(1u);
LABEL_89:
          __break(1u);
LABEL_90:
          __break(1u);
LABEL_91:
          __break(1u);
          goto LABEL_92;
        }
        goto LABEL_49;
      }
    }
LABEL_29:
    v17 = swift_retain();
    MEMORY[0x1A859E3E0](v17);
    if (*(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1A4690BDC();
    sub_1A4690C18();
    sub_1A4690BB8();
    if ((v4 & 0xC000000000000001) != 0)
    {
      if (v4 < 0)
        v18 = v4;
      else
        v18 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_retain_n();
      swift_bridgeObjectRetain();
      v19 = sub_1A4691314();
      swift_release();
      if (v19)
      {
        swift_bridgeObjectRelease();
        swift_release();
        type metadata accessor for RDVector();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_release();
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        v30 = sub_1A4691308();
        if (__OFADD__(v30, 1))
          goto LABEL_91;
        v31 = sub_1A44BD838(v18, v30 + 1);
        v56 = v31;
        if (*(_QWORD *)(v31 + 24) <= *(_QWORD *)(v31 + 16))
        {
          swift_retain();
          sub_1A461DB8C();
          v32 = v56;
        }
        else
        {
          v32 = v31;
          swift_retain();
        }
        sub_1A44BDAC0(v5, v32);
        swift_release_n();
        swift_bridgeObjectRelease();
        v4 = v32;
      }
      goto LABEL_5;
    }
    sub_1A4691C8C();
    sub_1A4691C98();
    v20 = sub_1A4691CC8();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = v20 & ~v21;
    if (((*(_QWORD *)(v4 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) != 0)
    {
      v52 = ~v21;
      v23 = v5 + 16;
      v24 = *(_QWORD *)(v4 + 48);
      swift_beginAccess();
      while (1)
      {
        v25 = *(_QWORD *)(v24 + 8 * v22);
        swift_beginAccess();
        v1 = *(_QWORD *)(v25 + 24);
        if (v1 == *(_QWORD *)(v5 + 24))
          break;
LABEL_39:
        v22 = (v22 + 1) & v52;
        if (((*(_QWORD *)(v4 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
          goto LABEL_53;
      }
      if ((v1 & 0x8000000000000000) != 0)
        goto LABEL_90;
      if (v1)
      {
        swift_beginAccess();
        swift_beginAccess();
        v26 = 0;
        v27 = *(_QWORD *)(v25 + 16);
        v28 = *(_QWORD *)(v27 + 16);
        v29 = v27 + 32;
        while (v1 != v26)
        {
          if (v26 >= v28)
            goto LABEL_84;
          if (v26 >= *(_QWORD *)(*(_QWORD *)v23 + 16))
            goto LABEL_85;
          if (*(double *)(v29 + 8 * v26) != *(double *)(*(_QWORD *)v23 + 8 * v26 + 32))
            goto LABEL_39;
          if (v1 == ++v26)
            goto LABEL_49;
        }
        goto LABEL_83;
      }
LABEL_49:
      swift_release();
      v2 = v54;
      goto LABEL_5;
    }
LABEL_53:
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v1 = *(_QWORD *)(v4 + 16);
    v34 = *(_QWORD *)(v4 + 24);
    swift_retain();
    if (v34 > v1)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1A461FAB4();
      goto LABEL_74;
    }
    if (isUniquelyReferenced_nonNull_native)
      sub_1A461DB8C();
    else
      sub_1A4620DA8();
    v1 = v4;
    sub_1A4691C8C();
    sub_1A4691C98();
    v35 = sub_1A4691CC8();
    v36 = -1 << *(_BYTE *)(v4 + 32);
    v22 = v35 & ~v36;
    if (((*(_QWORD *)(v4 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) != 0)
      break;
LABEL_74:
    *(_QWORD *)(v4 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v22) = v5;
    v45 = *(_QWORD *)(v4 + 16);
    v6 = __OFADD__(v45, 1);
    v46 = v45 + 1;
    if (v6)
    {
      __break(1u);
      goto LABEL_95;
    }
    *(_QWORD *)(v4 + 16) = v46;
    swift_release_n();
    swift_bridgeObjectRelease();
    v2 = v54;
LABEL_5:
    if (v3 == v2)
      goto LABEL_93;
  }
  v37 = ~v36;
  type metadata accessor for RDVector();
  v38 = v5 + 16;
  v39 = *(_QWORD *)(v4 + 48);
  swift_beginAccess();
  while (1)
  {
    v40 = *(_QWORD *)(v39 + 8 * v22);
    swift_beginAccess();
    v1 = *(_QWORD *)(v40 + 24);
    if (v1 == *(_QWORD *)(v5 + 24))
      break;
LABEL_63:
    v22 = (v22 + 1) & v37;
    if (((*(_QWORD *)(v4 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
      goto LABEL_74;
  }
  if ((v1 & 0x8000000000000000) != 0)
    goto LABEL_89;
  if (v1)
  {
    swift_beginAccess();
    swift_beginAccess();
    v41 = 0;
    v42 = *(_QWORD *)(v40 + 16);
    v43 = *(_QWORD *)(v42 + 16);
    v44 = v42 + 32;
    while (v1 != v41)
    {
      if (v41 >= v43)
        goto LABEL_78;
      if (v41 >= *(_QWORD *)(*(_QWORD *)v38 + 16))
        goto LABEL_79;
      if (*(double *)(v44 + 8 * v41) != *(double *)(*(_QWORD *)v38 + 8 * v41 + 32))
        goto LABEL_63;
      if (v1 == ++v41)
        goto LABEL_95;
    }
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
LABEL_95:
  result = sub_1A4691BFC();
  __break(1u);
  return result;
}

uint64_t sub_1A44BBE00(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_1A46918CC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1A44BCC98(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_1A44BCE70((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1A462EBC8((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1A4690C00();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_1A4691A40();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_1A4691A40()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1A462E5B0(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_1A462E5B0((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_1A44BCE70((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1A4691A40() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t sub_1A44BC4E8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  char v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *__dst;

  v3 = a1[1];
  result = sub_1A46918CC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_162;
    if (v3)
      return sub_1A44BCD64(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_170;
  v116 = result;
  v114 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_128:
      v105 = v11;
      v115 = v8;
      if (v12 >= 2)
      {
        v106 = *v114;
        do
        {
          v107 = v12 - 2;
          if (v12 < 2)
            goto LABEL_157;
          if (!v106)
            goto LABEL_169;
          v108 = v105;
          v109 = *(_QWORD *)&v105[16 * v107 + 32];
          v110 = *(_QWORD *)&v105[16 * v12 + 24];
          sub_1A44BD108((char *)(v106 + 40 * v109), (char *)(v106 + 40 * *(_QWORD *)&v105[16 * v12 + 16]), v106 + 40 * v110, __dst);
          if (v1)
            break;
          if (v110 < v109)
            goto LABEL_158;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v108 = sub_1A462EBC8((uint64_t)v108);
          if (v107 >= *((_QWORD *)v108 + 2))
            goto LABEL_159;
          v111 = &v108[16 * v107 + 32];
          *(_QWORD *)v111 = v109;
          *((_QWORD *)v111 + 1) = v110;
          v112 = *((_QWORD *)v108 + 2);
          if (v12 > v112)
            goto LABEL_160;
          memmove(&v108[16 * v12 + 16], &v108[16 * v12 + 32], 16 * (v112 - v12));
          v105 = v108;
          *((_QWORD *)v108 + 2) = v112 - 1;
          v12 = v112 - 1;
        }
        while (v112 > 2);
      }
LABEL_125:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v115 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v115 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C880);
    v7 = sub_1A4690C00();
    *(_QWORD *)(v7 + 16) = v6;
    v115 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v113 = *a1 + 32;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v117 = v3;
  v118 = *a1;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_26;
    v14 = (_QWORD *)(v10 + 40 * v9);
    v15 = v14[4];
    v16 = (_QWORD *)(v10 + 40 * v13);
    v17 = v16[4];
    if (v15 == v17)
      break;
    v19 = v17 < v15;
LABEL_24:
    v20 = v13 + 2;
    if (v13 + 2 < v3)
      goto LABEL_30;
    v9 = v13 + 2;
    if ((v19 & 1) != 0)
      goto LABEL_44;
LABEL_26:
    if (v9 < v3)
      goto LABEL_52;
LABEL_75:
    if (v9 < v13)
      goto LABEL_156;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1A462E5B0(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v55 = *((_QWORD *)v11 + 2);
    v54 = *((_QWORD *)v11 + 3);
    v12 = v55 + 1;
    if (v55 >= v54 >> 1)
      v11 = sub_1A462E5B0((char *)(v54 > 1), v55 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v56 = v11 + 32;
    v57 = &v11[16 * v55 + 32];
    *(_QWORD *)v57 = v13;
    *((_QWORD *)v57 + 1) = v9;
    if (v55)
    {
      v10 = v118;
      while (1)
      {
        v58 = v12 - 1;
        if (v12 >= 4)
        {
          v63 = &v56[16 * v12];
          v64 = *((_QWORD *)v63 - 8);
          v65 = *((_QWORD *)v63 - 7);
          v69 = __OFSUB__(v65, v64);
          v66 = v65 - v64;
          if (v69)
            goto LABEL_145;
          v68 = *((_QWORD *)v63 - 6);
          v67 = *((_QWORD *)v63 - 5);
          v69 = __OFSUB__(v67, v68);
          v61 = v67 - v68;
          v62 = v69;
          if (v69)
            goto LABEL_146;
          v70 = v12 - 2;
          v71 = &v56[16 * v12 - 32];
          v73 = *(_QWORD *)v71;
          v72 = *((_QWORD *)v71 + 1);
          v69 = __OFSUB__(v72, v73);
          v74 = v72 - v73;
          if (v69)
            goto LABEL_148;
          v69 = __OFADD__(v61, v74);
          v75 = v61 + v74;
          if (v69)
            goto LABEL_151;
          if (v75 >= v66)
          {
            v93 = &v56[16 * v58];
            v95 = *(_QWORD *)v93;
            v94 = *((_QWORD *)v93 + 1);
            v69 = __OFSUB__(v94, v95);
            v96 = v94 - v95;
            if (v69)
              goto LABEL_155;
            v86 = v61 < v96;
            goto LABEL_113;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v87 = *((_QWORD *)v11 + 4);
            v88 = *((_QWORD *)v11 + 5);
            v69 = __OFSUB__(v88, v87);
            v80 = v88 - v87;
            v81 = v69;
            goto LABEL_107;
          }
          v60 = *((_QWORD *)v11 + 4);
          v59 = *((_QWORD *)v11 + 5);
          v69 = __OFSUB__(v59, v60);
          v61 = v59 - v60;
          v62 = v69;
        }
        if ((v62 & 1) != 0)
          goto LABEL_147;
        v70 = v12 - 2;
        v76 = &v56[16 * v12 - 32];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v79 = __OFSUB__(v77, v78);
        v80 = v77 - v78;
        v81 = v79;
        if (v79)
          goto LABEL_150;
        v82 = &v56[16 * v58];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v69 = __OFSUB__(v83, v84);
        v85 = v83 - v84;
        if (v69)
          goto LABEL_153;
        if (__OFADD__(v80, v85))
          goto LABEL_154;
        if (v80 + v85 >= v61)
        {
          v86 = v61 < v85;
LABEL_113:
          if (v86)
            v58 = v70;
          goto LABEL_115;
        }
LABEL_107:
        if ((v81 & 1) != 0)
          goto LABEL_149;
        v89 = &v56[16 * v58];
        v91 = *(_QWORD *)v89;
        v90 = *((_QWORD *)v89 + 1);
        v69 = __OFSUB__(v90, v91);
        v92 = v90 - v91;
        if (v69)
          goto LABEL_152;
        if (v92 < v80)
          goto LABEL_15;
LABEL_115:
        v97 = v58 - 1;
        if (v58 - 1 >= v12)
        {
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
          goto LABEL_164;
        }
        if (!v10)
          goto LABEL_167;
        v98 = v11;
        v99 = v10;
        v100 = &v56[16 * v97];
        v101 = *(_QWORD *)v100;
        v102 = &v56[16 * v58];
        v103 = *((_QWORD *)v102 + 1);
        sub_1A44BD108((char *)(v99 + 40 * *(_QWORD *)v100), (char *)(v99 + 40 * *(_QWORD *)v102), v99 + 40 * v103, __dst);
        if (v1)
          goto LABEL_125;
        if (v103 < v101)
          goto LABEL_142;
        if (v58 > *((_QWORD *)v98 + 2))
          goto LABEL_143;
        *(_QWORD *)v100 = v101;
        *(_QWORD *)&v56[16 * v97 + 8] = v103;
        v104 = *((_QWORD *)v98 + 2);
        if (v58 >= v104)
          goto LABEL_144;
        v11 = v98;
        v12 = v104 - 1;
        memmove(&v56[16 * v58], v102 + 16, 16 * (v104 - 1 - v58));
        *((_QWORD *)v98 + 2) = v104 - 1;
        v86 = v104 > 2;
        v10 = v118;
        if (!v86)
          goto LABEL_15;
      }
    }
    v12 = 1;
    v10 = v118;
LABEL_15:
    v3 = v117;
    if (v9 >= v117)
    {
      v8 = v115;
      goto LABEL_128;
    }
  }
  if (*v14 != *v16 || v14[1] != v16[1])
  {
    v19 = sub_1A4691A40();
    goto LABEL_24;
  }
  v20 = v13 + 2;
  if (v13 + 2 >= v3)
    goto LABEL_51;
  v19 = 0;
LABEL_30:
  v21 = (_QWORD *)(v10 + 40 * v20);
  while (2)
  {
    v23 = v21[4];
    v24 = (_QWORD *)(v10 + 40 * v9);
    v25 = v24[4];
    if (v23 != v25)
    {
      v27 = v25 < v23;
      goto LABEL_40;
    }
    if (*v21 == *v24 && v21[1] == v24[1])
    {
      if ((v19 & 1) != 0)
      {
        v3 = v117;
        if (v20 >= v13)
          goto LABEL_45;
        goto LABEL_165;
      }
    }
    else
    {
      v27 = sub_1A4691A40();
LABEL_40:
      if (((v19 ^ v27) & 1) != 0)
        goto LABEL_43;
    }
    v21 += 5;
    v22 = v20 + 1;
    v9 = v20;
    v20 = v22;
    if (v22 < v117)
      continue;
    break;
  }
  v20 = v22;
LABEL_43:
  v3 = v117;
  v9 = v20;
  if ((v19 & 1) == 0)
    goto LABEL_26;
LABEL_44:
  if (v20 < v13)
    goto LABEL_165;
LABEL_45:
  if (v13 < v20)
  {
    v28 = 40 * v20;
    v29 = 40 * v13;
    v30 = v20;
    v31 = v13;
    do
    {
      if (v31 != --v30)
      {
        if (!v10)
          goto LABEL_168;
        v32 = v10 + v29;
        v33 = v10 + v28;
        v34 = *(_OWORD *)(v10 + v29);
        v35 = *(_OWORD *)(v10 + v29 + 16);
        v36 = *(_QWORD *)(v10 + v29 + 32);
        v37 = *(_QWORD *)(v10 + v28 - 8);
        v38 = *(_OWORD *)(v10 + v28 - 24);
        *(_OWORD *)v32 = *(_OWORD *)(v10 + v28 - 40);
        *(_OWORD *)(v32 + 16) = v38;
        *(_QWORD *)(v32 + 32) = v37;
        *(_OWORD *)(v33 - 40) = v34;
        *(_OWORD *)(v33 - 24) = v35;
        *(_QWORD *)(v33 - 8) = v36;
      }
      ++v31;
      v28 -= 40;
      v29 += 40;
    }
    while (v31 < v30);
  }
LABEL_51:
  v9 = v20;
  if (v20 >= v3)
    goto LABEL_75;
LABEL_52:
  if (__OFSUB__(v9, v13))
    goto LABEL_161;
  if (v9 - v13 >= v116)
    goto LABEL_75;
  if (__OFADD__(v13, v116))
    goto LABEL_163;
  if (v13 + v116 >= v3)
    v39 = v3;
  else
    v39 = v13 + v116;
  if (v39 >= v13)
  {
    if (v9 != v39)
    {
      v40 = (uint64_t *)(v113 + 40 * v9);
      do
      {
        v41 = (uint64_t *)(v10 + 40 * v9);
        v42 = *v41;
        v43 = v41[1];
        v44 = v41[4];
        v45 = v13;
        v46 = v40;
        do
        {
          v47 = v46 - 9;
          v48 = *(v46 - 5);
          if (v44 == v48)
          {
            v49 = v42 == *(v46 - 9) && v43 == *(v46 - 8);
            if (v49 || (sub_1A4691A40() & 1) == 0)
              break;
          }
          else if (v48 >= v44)
          {
            break;
          }
          if (!v10)
            goto LABEL_166;
          v44 = *v46;
          v50 = *(v46 - 5);
          *(v46 - 5) = *v46;
          v46 -= 5;
          v42 = v46[1];
          v43 = v46[2];
          v51 = v46[3];
          v52 = v46[4];
          v53 = *((_OWORD *)v47 + 1);
          *(_OWORD *)(v47 + 5) = *(_OWORD *)v47;
          *(_OWORD *)(v47 + 7) = v53;
          v47[9] = v50;
          *(v46 - 4) = v42;
          *(v46 - 3) = v43;
          *(v46 - 2) = v51;
          *(v46 - 1) = v52;
          ++v45;
        }
        while (v9 != v45);
        ++v9;
        v40 += 5;
      }
      while (v9 != v39);
      v9 = v39;
    }
    goto LABEL_75;
  }
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t sub_1A44BCC98(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_1A4691A40(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A44BCD64(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 40 * a3 + 32;
LABEL_5:
    v9 = (uint64_t *)(v7 + 40 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v9[4];
    v12 = v6;
    v13 = (uint64_t *)v8;
    while (1)
    {
      v14 = v13 - 9;
      v15 = *(v13 - 5);
      if (v11 == v15)
      {
        v16 = result == *(v13 - 9) && v10 == *(v13 - 8);
        if (v16 || (result = sub_1A4691A40(), (result & 1) == 0))
        {
LABEL_4:
          ++v4;
          v8 += 40;
          if (v4 == a2)
            return result;
          goto LABEL_5;
        }
      }
      else if (v15 >= v11)
      {
        goto LABEL_4;
      }
      if (!v7)
        break;
      v11 = *v13;
      v17 = *(v13 - 5);
      *(v13 - 5) = *v13;
      v13 -= 5;
      result = v13[1];
      v10 = v13[2];
      v18 = v13[3];
      v19 = v13[4];
      v20 = *((_OWORD *)v14 + 1);
      *(_OWORD *)(v14 + 5) = *(_OWORD *)v14;
      *(_OWORD *)(v14 + 7) = v20;
      v14[9] = v17;
      *(v13 - 4) = result;
      *(v13 - 3) = v10;
      *(v13 - 2) = v18;
      *(v13 - 1) = v19;
      if (v4 == ++v12)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A44BCE70(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_1A4691A40() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_1A4691A40() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_1A462E6A8((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A44BD108(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  __int128 v16;
  __int128 v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  char *v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t result;
  char *v35;
  char *v36;
  char *v37;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 40;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v37 = __src;
  v36 = __dst;
  if (v9 >= v11)
  {
    if (v10 < -39)
      goto LABEL_51;
    if (__dst != a2 || &a2[40 * v11] <= __dst)
      memmove(__dst, a2, 40 * v11);
    v21 = &v4[40 * v11];
    v35 = v21;
    v37 = v6;
    if (v7 >= v6 || v10 < 40)
    {
LABEL_50:
      sub_1A462E91C((void **)&v37, (const void **)&v36, &v35);
      return 1;
    }
    v22 = a3 - 40;
    v23 = v6;
    while (1)
    {
      v24 = (char *)(v22 + 40);
      v25 = *((_QWORD *)v21 - 1);
      v27 = *((_QWORD *)v23 - 5);
      v23 -= 40;
      v26 = v27;
      v28 = *((_QWORD *)v23 + 4);
      if (v25 == v28)
      {
        v29 = *((_QWORD *)v21 - 5) == v26 && *((_QWORD *)v21 - 4) == *((_QWORD *)v23 + 1);
        if (v29 || (sub_1A4691A40() & 1) == 0)
        {
LABEL_38:
          v35 = v21 - 40;
          if (v24 < v21 || v22 >= (unint64_t)v21 || v24 != v21)
          {
            v30 = *(_OWORD *)(v21 - 40);
            v31 = *(_OWORD *)(v21 - 24);
            *(_QWORD *)(v22 + 32) = *((_QWORD *)v21 - 1);
            *(_OWORD *)v22 = v30;
            *(_OWORD *)(v22 + 16) = v31;
          }
          v23 = v6;
          v21 -= 40;
          if (v6 <= v7)
            goto LABEL_50;
          goto LABEL_49;
        }
      }
      else if (v28 >= v25)
      {
        goto LABEL_38;
      }
      if (v24 != v6 || v22 >= (unint64_t)v6)
      {
        v32 = *(_OWORD *)v23;
        v33 = *((_OWORD *)v23 + 1);
        *(_QWORD *)(v22 + 32) = *((_QWORD *)v23 + 4);
        *(_OWORD *)v22 = v32;
        *(_OWORD *)(v22 + 16) = v33;
      }
      v37 = v23;
      if (v23 <= v7)
        goto LABEL_50;
LABEL_49:
      v22 -= 40;
      v6 = v23;
      if (v21 <= v4)
        goto LABEL_50;
    }
  }
  if (v8 >= -39)
  {
    if (__dst != __src || &__src[40 * v9] <= __dst)
      memmove(__dst, __src, 40 * v9);
    v12 = &v4[40 * v9];
    v35 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      while (1)
      {
        v13 = *((_QWORD *)v6 + 4);
        v14 = *((_QWORD *)v4 + 4);
        if (v13 == v14)
        {
          v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
          if (!v15 && (sub_1A4691A40() & 1) != 0)
          {
LABEL_18:
            v18 = v6 + 40;
            if (v7 < v6 || v7 >= v18 || v7 != v6)
            {
              v19 = *(_OWORD *)v6;
              v20 = *((_OWORD *)v6 + 1);
              *((_QWORD *)v7 + 4) = *((_QWORD *)v6 + 4);
              *(_OWORD *)v7 = v19;
              *((_OWORD *)v7 + 1) = v20;
            }
            goto LABEL_22;
          }
        }
        else if (v14 < v13)
        {
          goto LABEL_18;
        }
        if (v7 != v4)
        {
          v16 = *(_OWORD *)v4;
          v17 = *((_OWORD *)v4 + 1);
          *((_QWORD *)v7 + 4) = *((_QWORD *)v4 + 4);
          *(_OWORD *)v7 = v16;
          *((_OWORD *)v7 + 1) = v17;
        }
        v4 += 40;
        v36 = v4;
        v18 = v6;
LABEL_22:
        v7 += 40;
        if (v4 < v12)
        {
          v6 = v18;
          if ((unint64_t)v18 < a3)
            continue;
        }
        v37 = v7;
        goto LABEL_50;
      }
    }
    goto LABEL_50;
  }
LABEL_51:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A44BD410(uint64_t a1, uint64_t a2)
{
  return sub_1A44BD63C(a1, a2, &qword_1EE71E050, (unint64_t *)&qword_1ED2421C8, 0x1E0C8F298, (void (*)(unint64_t))sub_1A461CDF0);
}

uint64_t sub_1A44BD434(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E010);
    v2 = sub_1A46913C8();
    v15 = v2;
    sub_1A46912D8();
    if (sub_1A4691338())
    {
      type metadata accessor for REMObjectID_Codable();
      do
      {
        swift_dynamicCast();
        v2 = v15;
        v9 = *(_QWORD *)(v15 + 16);
        if (*(_QWORD *)(v15 + 24) <= v9)
        {
          sub_1A461D07C(v9 + 1);
          v2 = v15;
        }
        result = sub_1A4691134();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v7 == v11;
            if (v7 == v11)
              v7 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1A4691338());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1A44BD618(uint64_t a1, uint64_t a2)
{
  return sub_1A44BD63C(a1, a2, (uint64_t *)&unk_1EE71EEE0, (unint64_t *)&qword_1ED2440D8, 0x1E0D845B0, (void (*)(unint64_t))sub_1A461D8E8);
}

uint64_t sub_1A44BD63C(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v8 = sub_1A46913C8();
    v21 = v8;
    sub_1A46912D8();
    if (sub_1A4691338())
    {
      sub_1A444AA40(0, a4);
      do
      {
        swift_dynamicCast();
        v8 = v21;
        v15 = *(_QWORD *)(v21 + 16);
        if (*(_QWORD *)(v21 + 24) <= v15)
        {
          a6(v15 + 1);
          v8 = v21;
        }
        result = sub_1A4691134();
        v10 = v8 + 56;
        v11 = -1 << *(_BYTE *)(v8 + 32);
        v12 = result & ~v11;
        v13 = v12 >> 6;
        if (((-1 << v12) & ~*(_QWORD *)(v8 + 56 + 8 * (v12 >> 6))) != 0)
        {
          v14 = __clz(__rbit64((-1 << v12) & ~*(_QWORD *)(v8 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v16 = 0;
          v17 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v18 = v13 == v17;
            if (v13 == v17)
              v13 = 0;
            v16 |= v18;
            v19 = *(_QWORD *)(v10 + 8 * v13);
          }
          while (v19 == -1);
          v14 = __clz(__rbit64(~v19)) + (v13 << 6);
        }
        *(_QWORD *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = v20;
        ++*(_QWORD *)(v8 + 16);
      }
      while (sub_1A4691338());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v8;
}

uint64_t sub_1A44BD838(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E008);
    v2 = sub_1A46913C8();
    v14 = v2;
    sub_1A46912D8();
    if (sub_1A4691338())
    {
      type metadata accessor for RDVector();
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_1A461DB8C();
          v2 = v14;
        }
        sub_1A4691C8C();
        sub_1A4691C98();
        result = sub_1A4691CC8();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1A4691338());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

unint64_t sub_1A44BDA40(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1A4691134();
  result = sub_1A46912C0();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_1A44BDAC0(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1A4691C8C();
  sub_1A4691C98();
  sub_1A4691CC8();
  result = sub_1A46912C0();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1A44BDB60(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E038);
  result = sub_1A46916BC();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v17 = *v16;
    result = v16[1];
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 24 * i);
    v19 = *v18;
    v20 = v18[1];
    v21 = v18[2];
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v22 = (_QWORD *)(v3[6] + 16 * i);
    *v22 = v17;
    v22[1] = result;
    v23 = v3[7] + 32 * i;
    *(_QWORD *)v23 = v19;
    *(_QWORD *)(v23 + 8) = v20;
    *(_QWORD *)(v23 + 16) = v21;
    *(_BYTE *)(v23 + 24) = 0;
    v24 = v3[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v26;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for REMAnchoredBubbleModel()
{
  uint64_t result;

  result = qword_1ED23EDA8;
  if (!qword_1ED23EDA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A44BDD6C(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E030);
  result = sub_1A46916BC();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v17 = *v16;
    result = v16[1];
    v18 = *(_QWORD *)(a1 + 56) + 32 * i;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_QWORD *)(v18 + 16);
    v22 = *(_BYTE *)(v18 + 24);
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v23 = (_QWORD *)(v3[6] + 16 * i);
    *v23 = v17;
    v23[1] = result;
    v24 = v3[7] + 40 * i;
    *(_QWORD *)v24 = v19;
    *(_QWORD *)(v24 + 8) = v20;
    *(_QWORD *)(v24 + 16) = v21;
    *(_BYTE *)(v24 + 24) = v22;
    *(_QWORD *)(v24 + 32) = &type metadata for REMAnchoredBubbleModel.BubbleCategory;
    v25 = v3[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v27;
    swift_bridgeObjectRetain();
    result = sub_1A44BEF64(v20, v21, v22);
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A44BDF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t isStackAllocationSafe;
  char v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  void *v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = a2;
  v28 = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v26 = a1;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a2 + 56;
    v25[0] = a1 + 32;
    swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      v6 = (uint64_t *)(v25[0] + 16 * v5);
      v8 = *v6;
      v7 = v6[1];
      ++v5;
      sub_1A4691C8C();
      swift_bridgeObjectRetain();
      sub_1A4690948();
      v9 = sub_1A4691CC8();
      v10 = -1 << *(_BYTE *)(v2 + 32);
      v11 = v9 & ~v10;
      if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
      {
        v12 = *(_QWORD *)(v2 + 48);
        v13 = (_QWORD *)(v12 + 16 * v11);
        v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_1A4691A40() & 1) != 0)
        {
          isStackAllocationSafe = swift_bridgeObjectRelease();
          v27 = v5;
LABEL_19:
          v19 = *(_BYTE *)(v2 + 32);
          v20 = (unint64_t)((1 << v19) + 63) >> 6;
          v21 = 8 * v20;
          if ((v19 & 0x3Fu) < 0xE
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            memcpy((char *)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v21);
            v22 = sub_1A44BE268((uint64_t)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            v23 = (void *)swift_slowAlloc();
            memcpy(v23, (const void *)(v2 + 56), v21);
            v22 = sub_1A44BE268((uint64_t)v23, v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
            MEMORY[0x1A85A0114](v23, -1, -1);
          }
          return v22;
        }
        v15 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v15;
          if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
            break;
          v16 = (_QWORD *)(v12 + 16 * v11);
          v17 = *v16 == v8 && v16[1] == v7;
          if (v17 || (sub_1A4691A40() & 1) != 0)
          {
            v27 = v5;
            isStackAllocationSafe = swift_bridgeObjectRelease();
            goto LABEL_19;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
  }
  return v2;
}

uint64_t sub_1A44BE268(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  BOOL v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t i;
  unint64_t v26;
  _QWORD *v27;
  BOOL v28;
  unint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v30 = (unint64_t *)result;
  v31 = v6 - 1;
  v8 = *a5;
  v7 = a5[1];
  v9 = *(_QWORD *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return sub_1A44D54A4(v30, a2, v31, a3);
  }
  v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9)
      goto LABEL_29;
    v11 = v8 + 16 * v7;
    v13 = *(_QWORD *)(v11 + 32);
    v12 = *(_QWORD *)(v11 + 40);
    a5[1] = v7 + 1;
    sub_1A4691C8C();
    swift_bridgeObjectRetain();
    sub_1A4690948();
    v14 = sub_1A4691CC8();
    v15 = -1 << *(_BYTE *)(a3 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    v18 = 1 << v16;
    if (((1 << v16) & *(_QWORD *)(v32 + 8 * (v16 >> 6))) == 0)
      goto LABEL_4;
    v19 = *(_QWORD *)(a3 + 48);
    v20 = (_QWORD *)(v19 + 16 * v16);
    v21 = *v20 == v13 && v20[1] == v12;
    if (!v21 && (sub_1A4691A40() & 1) == 0)
    {
      v24 = ~v15;
      for (i = v16 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v19 + 16 * v26);
        v28 = *v27 == v13 && v27[1] == v12;
        if (v28 || (sub_1A4691A40() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v17 = v26 >> 6;
          v18 = 1 << v26;
          goto LABEL_15;
        }
      }
LABEL_4:
      result = swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    result = swift_bridgeObjectRelease();
LABEL_15:
    v22 = v30[v17];
    v30[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      v23 = v31 - 1;
      if (__OFSUB__(v31, 1))
        goto LABEL_30;
      --v31;
      if (!v23)
        return MEMORY[0x1E0DEE9E8];
    }
LABEL_5:
    v8 = *a5;
    v7 = a5[1];
    v9 = *(_QWORD *)(*a5 + 16);
    if (v7 == v9)
      goto LABEL_2;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A44BE490(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unsigned __int8 v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  _QWORD *v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  _QWORD *v20;
  __int128 v21;
  __int128 v22;
  _OWORD v23[2];
  unsigned __int8 v24;

  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v6)
    goto LABEL_7;
LABEL_4:
  for (v6 &= v6 - 1; ; v6 = (v14 - 1) & v14)
  {
    v11 = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    sub_1A44B8118(v11, v23);
    result = swift_bridgeObjectRelease();
    v12 = v24;
    if (v24 == 255)
    {
      if (v6)
        goto LABEL_4;
    }
    else
    {
      v21 = v23[1];
      v22 = v23[0];
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A4439618(0, v10[2] + 1, 1, v10);
        v10 = (_QWORD *)result;
      }
      v16 = v10;
      v17 = v10[2];
      v18 = v16;
      v19 = v16[3];
      if (v17 >= v19 >> 1)
      {
        result = (uint64_t)sub_1A4439618((_QWORD *)(v19 > 1), v17 + 1, 1, v18);
        v18 = (_QWORD *)result;
      }
      v18[2] = v17 + 1;
      v20 = &v18[5 * v17];
      v10 = v18;
      *((_OWORD *)v20 + 2) = v22;
      *((_OWORD *)v20 + 3) = v21;
      *((_BYTE *)v20 + 64) = v12;
      if (v6)
        goto LABEL_4;
    }
LABEL_7:
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v13 >= v7)
      goto LABEL_29;
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v9;
    if (!v14)
    {
      v9 = v13 + 1;
      if (v13 + 1 >= v7)
        goto LABEL_29;
      v14 = *(_QWORD *)(v3 + 8 * v9);
      if (!v14)
      {
        v9 = v13 + 2;
        if (v13 + 2 >= v7)
          goto LABEL_29;
        v14 = *(_QWORD *)(v3 + 8 * v9);
        if (!v14)
        {
          v9 = v13 + 3;
          if (v13 + 3 >= v7)
            goto LABEL_29;
          v14 = *(_QWORD *)(v3 + 8 * v9);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    ;
  }
  v15 = v13 + 4;
  if (v15 >= v7)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v10;
  }
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v9 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v7)
      goto LABEL_29;
    v14 = *(_QWORD *)(v3 + 8 * v9);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

_QWORD *sub_1A44BE6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  unsigned __int8 v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  __int128 v12;
  _OWORD v13[2];
  unsigned __int8 v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a2 + 16);
  v4 = swift_bridgeObjectRetain() + 40;
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    swift_bridgeObjectRetain();
    sub_1A44B8118(v3, v13);
    swift_bridgeObjectRelease();
    v7 = v14;
    if (v14 != 255)
    {
      v11 = v13[1];
      v12 = v13[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_1A4439618(0, v5[2] + 1, 1, v5);
      v9 = v5[2];
      v8 = v5[3];
      if (v9 >= v8 >> 1)
        v5 = sub_1A4439618((_QWORD *)(v8 > 1), v9 + 1, 1, v5);
      v5[2] = v9 + 1;
      v6 = &v5[5 * v9];
      *((_OWORD *)v6 + 2) = v12;
      *((_OWORD *)v6 + 3) = v11;
      *((_BYTE *)v6 + 64) = v7;
    }
    v4 += 16;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A44BE81C(uint64_t a1, void *a2)
{
  unint64_t v3;
  uint64_t v4;
  char v5;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  __int128 v35;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = 0x3FECCCCCCCCCCCCDLL;
  if (v3 >= 0x12C)
    v4 = 0;
  v31 = v4;
  if (v3 < 0x12C)
    v5 = 1;
  else
    v5 = 2;
  v30 = v5;
  if (v3)
  {
    v7 = a2;
    swift_bridgeObjectRetain();
    v8 = a1 + 56;
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v10 = sub_1A4690F84();
      if (v10)
      {
        v11 = v10;
        *(_QWORD *)&v35 = v9;
        swift_bridgeObjectRetain();
        sub_1A4458D6C(v11);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 += 40;
      --v3;
    }
    while (v3);

    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v12 = objc_msgSend(a2, sel_dimension);
  v13 = v9[2];
  swift_bridgeObjectRelease();
  v14 = (uint64_t)objc_msgSend(a2, sel_dimension);
  if (v14)
  {
    sub_1A4657570((uint64_t)v9, (uint64_t)v12, v13 / v14, &v33);
    REMMatrix.transpose()((uint64_t *)&v35);
    swift_release();
    v33 = v31;
    v34 = v30;
    v24 = sub_1A4659124((uint64_t *)&v35, (uint64_t)&v33);
    if (qword_1ED23F210 != -1)
      swift_once();
    v26 = sub_1A4690318();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED23F1F8);
    v27 = sub_1A469030C();
    v28 = sub_1A4691008();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_1A442D000, v27, v28, "REMAnchoredBubbleModel: pca fitted", v29, 2u);
      MEMORY[0x1A85A0114](v29, -1, -1);
    }

    swift_release();
  }
  else
  {
    __break(1u);
    swift_once();
    v15 = sub_1A4690318();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED23F1F8);
    v16 = v9;
    v17 = v9;
    v18 = sub_1A469030C();
    v19 = sub_1A4690FF0();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      *(_QWORD *)&v35 = v21;
      *(_DWORD *)v20 = 136315138;
      swift_getErrorValue();
      v22 = Error.rem_errorDescription.getter(v32);
      v33 = sub_1A4431120(v22, v23, (uint64_t *)&v35);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A442D000, v18, v19, "REMAnchoredBubbleModel: Skipping pca fitting due to %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v21, -1, -1);
      MEMORY[0x1A85A0114](v20, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  return v24;
}

uint64_t sub_1A44BEC58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v3 = sub_1A44B9144(a1, a2);
  if (v6 == 0xFF)
    return MEMORY[0x1E0DEE9D8];
  v7 = v4;
  if ((v6 & 1) == 0)
  {
    sub_1A44BFD78(v3, v4, v5, v6);
    return MEMORY[0x1E0DEE9D8];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CFB0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1A4695C10;
  *(_QWORD *)(v8 + 32) = v7;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels))
  {
    v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels);
    if ((v7 & 0x8000000000000000) == 0)
      goto LABEL_7;
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v14 = swift_bridgeObjectRetain();
  v15 = sub_1A44B13B4(v14);
  swift_bridgeObjectRelease();
  v16 = sub_1A44BB3C4(v15);
  swift_bridgeObjectRelease();
  v17 = v16;
  swift_bridgeObjectRetain_n();
  sub_1A44BB34C((uint64_t *)&v17, sub_1A462EBDC, sub_1A44BBE00);
  swift_bridgeObjectRelease_n();
  v9 = (uint64_t)v17;
  if ((v7 & 0x8000000000000000) != 0)
    goto LABEL_11;
LABEL_7:
  if (v7 < *(_QWORD *)(v9 + 16))
  {
    v10 = v9 + 16 * v7;
    v12 = *(_QWORD *)(v10 + 32);
    v11 = *(_QWORD *)(v10 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 40) = v12;
    *(_QWORD *)(v8 + 48) = v11;
    *(_DWORD *)(v8 + 56) = 1065353216;
    return v8;
  }
LABEL_12:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1A44BEDBC()
{
  unint64_t result;

  result = qword_1EE71DF68;
  if (!qword_1EE71DF68)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46993E0, &type metadata for REMAnchoredBubbleModel.ModelFileData);
    atomic_store(result, (unint64_t *)&qword_1EE71DF68);
  }
  return result;
}

unint64_t sub_1A44BEE00()
{
  unint64_t result;

  result = qword_1EE71DF70;
  if (!qword_1EE71DF70)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46993B8, &type metadata for REMAnchoredBubbleModel.ModelFileData);
    atomic_store(result, (unint64_t *)&qword_1EE71DF70);
  }
  return result;
}

uint64_t sub_1A44BEE44()
{
  return sub_1A44BEE60(&qword_1EE71DF88, &qword_1EE71DF90, (uint64_t (*)(void))sub_1A44BEECC);
}

uint64_t sub_1A44BEE60(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    v8[0] = MEMORY[0x1E0DEA9A0];
    v8[1] = v7;
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEA0D8], v6, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A44BEECC()
{
  unint64_t result;

  result = qword_1EE71DF98;
  if (!qword_1EE71DF98)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4699390, &type metadata for REMAnchoredBubbleModel.RadiusForBubbleCategory);
    atomic_store(result, (unint64_t *)&qword_1EE71DF98);
  }
  return result;
}

uint64_t sub_1A44BEF10(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1A44BEF20()
{
  unint64_t result;

  result = qword_1EE71DFA0;
  if (!qword_1EE71DFA0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46BB1AC, &type metadata for REMMatrix.REMMatrixComputationError);
    atomic_store(result, (unint64_t *)&qword_1EE71DFA0);
  }
  return result;
}

uint64_t sub_1A44BEF64(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1A44BEF74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_1A44BEFBC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  id result;

  switch(a5)
  {
    case 0:
    case 3:
    case 4:
    case 9:
      swift_bridgeObjectRetain();
      result = (id)swift_retain();
      break;
    case 1:
    case 2:
    case 6:
    case 7:
      goto LABEL_4;
    case 5:
      swift_bridgeObjectRetain();
      result = a2;
      break;
    case 8:
      swift_bridgeObjectRetain();
LABEL_4:
      result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void sub_1A44BF058(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1)
    sub_1A44BF06C(a1, a2, a3, a4, a5);
}

void sub_1A44BF06C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 3:
    case 4:
    case 9:
      swift_bridgeObjectRelease();
      swift_release();
      break;
    case 1:
    case 2:
    case 6:
    case 7:
      goto LABEL_4;
    case 5:
      swift_bridgeObjectRelease();

      break;
    case 8:
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

unint64_t sub_1A44BF108()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED23FEA0;
  if (!qword_1ED23FEA0)
  {
    v1 = sub_1A46900FC();
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0CB09D0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED23FEA0);
  }
  return result;
}

uint64_t sub_1A44BF150()
{
  return type metadata accessor for REMAnchoredBubbleModel();
}

void sub_1A44BF158()
{
  unint64_t v0;

  sub_1A44BF2AC();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for REMAnchoredBubbleModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.predict(_:thresholds:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.predict(title:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.save(path:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.saveBubblesJson(fileUrl:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.labels.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.bubbleCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.wordDistanceScale.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.tooSingular.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.triggerWordsByList.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.predictWithLastToken(_:languageIdentifier:editingSessionID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.increaseDistanceScale()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of REMAnchoredBubbleModel.reduceDistanceScale()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

void sub_1A44BF2AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED242A70)
  {
    sub_1A46900FC();
    v0 = sub_1A46911A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED242A70);
  }
}

uint64_t destroy for REMAnchoredBubbleModel.RadiusForBubbleCategory(uint64_t a1)
{
  return sub_1A44BEF10(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for REMAnchoredBubbleModel.RadiusForBubbleCategory(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  sub_1A44BEF64(v3, v4, v5);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return a1;
}

uint64_t assignWithCopy for REMAnchoredBubbleModel.RadiusForBubbleCategory(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  sub_1A44BEF64(v3, v4, v5);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_1A44BEF10(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for REMAnchoredBubbleModel.RadiusForBubbleCategory(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = v3;
  sub_1A44BEF10(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for REMAnchoredBubbleModel.RadiusForBubbleCategory()
{
  return &type metadata for REMAnchoredBubbleModel.RadiusForBubbleCategory;
}

_QWORD *assignWithCopy for REMAnchoredBubbleModel.ModelFileData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMAnchoredBubbleModel.ModelFileData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMAnchoredBubbleModel.ModelFileData()
{
  return &type metadata for REMAnchoredBubbleModel.ModelFileData;
}

unint64_t sub_1A44BF510()
{
  unint64_t result;

  result = qword_1EE71DFC0;
  if (!qword_1EE71DFC0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469969C, &type metadata for REMAnchoredBubbleModel.ModelFileData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71DFC0);
  }
  return result;
}

unint64_t sub_1A44BF554()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1EE71DFC8;
  if (!qword_1EE71DFC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71DF90);
    v2 = sub_1A44BF5C0();
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = v2;
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEA0B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EE71DFC8);
  }
  return result;
}

unint64_t sub_1A44BF5C0()
{
  unint64_t result;

  result = qword_1EE71DFD0;
  if (!qword_1EE71DFD0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4699368, &type metadata for REMAnchoredBubbleModel.RadiusForBubbleCategory);
    atomic_store(result, (unint64_t *)&qword_1EE71DFD0);
  }
  return result;
}

uint64_t sub_1A44BF604(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x737569646172 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953720684 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

_QWORD *sub_1A44BF6DC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v9;
  _QWORD *v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DFE0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A44BFCAC();
  sub_1A4691D28();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v10) = 0;
    sub_1A46917A0();
    v11 = 1;
    sub_1A44BFCF0();
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = v10;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_1A44BF858(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65636E6174736964 && a2 == 0xED0000656C616353 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1735287148 && a2 == 0xE400000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73656C62627562 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A44BFA24@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[2];
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DFD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A44BF510();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = 0;
  v9 = sub_1A4691788();
  v11 = v10;
  v24 = 1;
  swift_bridgeObjectRetain();
  sub_1A46917A0();
  v13 = v12;
  v23 = 2;
  v19[0] = sub_1A4691788();
  v15 = v14;
  v19[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DF90);
  v21 = 3;
  sub_1A44BEE44();
  v20 = v15;
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16 = v22;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v17 = v20;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v13;
  a2[3] = v19[0];
  a2[4] = v17;
  a2[5] = v16;
  return result;
}

unint64_t sub_1A44BFCAC()
{
  unint64_t result;

  result = qword_1EE71DFE8;
  if (!qword_1EE71DFE8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469964C, &type metadata for REMAnchoredBubbleModel.RadiusForBubbleCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71DFE8);
  }
  return result;
}

unint64_t sub_1A44BFCF0()
{
  unint64_t result;

  result = qword_1EE71DFF0;
  if (!qword_1EE71DFF0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4699624, &type metadata for REMAnchoredBubbleModel.BubbleCategory);
    atomic_store(result, (unint64_t *)&qword_1EE71DFF0);
  }
  return result;
}

unint64_t sub_1A44BFD34()
{
  unint64_t result;

  result = qword_1EE71E000;
  if (!qword_1EE71E000)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46995FC, &type metadata for REMAnchoredBubbleModel.BubbleCategory);
    atomic_store(result, (unint64_t *)&qword_1EE71E000);
  }
  return result;
}

uint64_t sub_1A44BFD78(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 != 255)
    return sub_1A44BEF10(a2, a3, a4 & 1);
  return result;
}

uint64_t sub_1A44BFD9C(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_1A44BFDB0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1A44B9F58(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD ***)(v3 + 56)) & 1;
}

uint64_t sub_1A44BFDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A44BFE34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE71E048;
  if (!qword_1EE71E048)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71E040);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DE9ED0], v1);
    atomic_store(result, (unint64_t *)&qword_1EE71E048);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for REMAnchoredBubbleModel.RadiusForBubbleCategory.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A44BFECC + 4 * byte_1A469929D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A44BFF00 + 4 * byte_1A4699298[v4]))();
}

uint64_t sub_1A44BFF00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44BFF08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A44BFF10);
  return result;
}

uint64_t sub_1A44BFF1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A44BFF24);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A44BFF28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44BFF30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMAnchoredBubbleModel.RadiusForBubbleCategory.CodingKeys()
{
  return &type metadata for REMAnchoredBubbleModel.RadiusForBubbleCategory.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for REMAnchoredBubbleModel.ModelFileData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A44BFF98 + 4 * byte_1A46992A7[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A44BFFCC + 4 * byte_1A46992A2[v4]))();
}

uint64_t sub_1A44BFFCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44BFFD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A44BFFDCLL);
  return result;
}

uint64_t sub_1A44BFFE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A44BFFF0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A44BFFF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44BFFFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMAnchoredBubbleModel.ModelFileData.CodingKeys()
{
  return &type metadata for REMAnchoredBubbleModel.ModelFileData.CodingKeys;
}

uint64_t destroy for REMAnchoredBubbleModel.BubbleCategory(uint64_t a1)
{
  return sub_1A44BEF10(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s19ReminderKitInternal22REMAnchoredBubbleModelC14BubbleCategoryOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A44BEF64(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for REMAnchoredBubbleModel.BubbleCategory(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A44BEF64(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A44BEF10(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for REMAnchoredBubbleModel.BubbleCategory(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A44BEF10(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for REMAnchoredBubbleModel.BubbleCategory()
{
  return &type metadata for REMAnchoredBubbleModel.BubbleCategory;
}

unint64_t sub_1A44C0120()
{
  unint64_t result;

  result = qword_1EE71E058;
  if (!qword_1EE71E058)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4699424, &type metadata for REMAnchoredBubbleModel.BubbleCategory);
    atomic_store(result, (unint64_t *)&qword_1EE71E058);
  }
  return result;
}

unint64_t sub_1A44C0168()
{
  unint64_t result;

  result = qword_1EE71E060;
  if (!qword_1EE71E060)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469951C, &type metadata for REMAnchoredBubbleModel.ModelFileData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71E060);
  }
  return result;
}

unint64_t sub_1A44C01B0()
{
  unint64_t result;

  result = qword_1EE71E068;
  if (!qword_1EE71E068)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46995D4, &type metadata for REMAnchoredBubbleModel.RadiusForBubbleCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71E068);
  }
  return result;
}

unint64_t sub_1A44C01F8()
{
  unint64_t result;

  result = qword_1EE71E070;
  if (!qword_1EE71E070)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4699544, &type metadata for REMAnchoredBubbleModel.RadiusForBubbleCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71E070);
  }
  return result;
}

unint64_t sub_1A44C0240()
{
  unint64_t result;

  result = qword_1EE71E078;
  if (!qword_1EE71E078)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469956C, &type metadata for REMAnchoredBubbleModel.RadiusForBubbleCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71E078);
  }
  return result;
}

unint64_t sub_1A44C0288()
{
  unint64_t result;

  result = qword_1EE71E080;
  if (!qword_1EE71E080)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469948C, &type metadata for REMAnchoredBubbleModel.ModelFileData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71E080);
  }
  return result;
}

unint64_t sub_1A44C02D0()
{
  unint64_t result;

  result = qword_1EE71E088;
  if (!qword_1EE71E088)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46994B4, &type metadata for REMAnchoredBubbleModel.ModelFileData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71E088);
  }
  return result;
}

unint64_t sub_1A44C0314(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t i;
  _OWORD *v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E030);
    v2 = (_QWORD *)sub_1A46916E0();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  result = swift_bridgeObjectRetain();
  i = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v11 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v11 >= v26)
    goto LABEL_32;
  v12 = *(_QWORD *)(v27 + 8 * v11);
  v13 = i + 1;
  if (!v12)
  {
    v13 = i + 2;
    if (i + 2 >= v26)
      goto LABEL_32;
    v12 = *(_QWORD *)(v27 + 8 * v13);
    if (!v12)
    {
      v13 = i + 3;
      if (i + 3 >= v26)
        goto LABEL_32;
      v12 = *(_QWORD *)(v27 + 8 * v13);
      if (!v12)
      {
        v13 = i + 4;
        if (i + 4 >= v26)
          goto LABEL_32;
        v12 = *(_QWORD *)(v27 + 8 * v13);
        if (!v12)
        {
          v14 = i + 5;
          if (i + 5 < v26)
          {
            v12 = *(_QWORD *)(v27 + 8 * v14);
            if (v12)
            {
              v13 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_36;
              if (v13 >= v26)
                break;
              v12 = *(_QWORD *)(v27 + 8 * v13);
              ++v14;
              if (v12)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_1A4460EDC();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v5 = (v12 - 1) & v12;
  v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; v10 = v9 | (i << 6))
  {
    v15 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v16 = v15[1];
    *(_QWORD *)&v28 = *v15;
    *((_QWORD *)&v28 + 1) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E178);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E018);
    swift_dynamicCast();
    v17 = v28;
    v32 = v29;
    v33 = v30;
    v34 = v31;
    v28 = v29;
    v29 = v30;
    *(_QWORD *)&v30 = v31;
    result = sub_1A443E4C8(v17, *((uint64_t *)&v17 + 1));
    v18 = result;
    if ((v19 & 1) != 0)
    {
      v8 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v17;
      result = sub_1A44C17C8((uint64_t)&v28, v2[7] + 40 * v18);
      if (!v5)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v17;
    v20 = v2[7] + 40 * result;
    v21 = v28;
    v22 = v29;
    *(_QWORD *)(v20 + 32) = v30;
    *(_OWORD *)v20 = v21;
    *(_OWORD *)(v20 + 16) = v22;
    v23 = v2[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_34;
    v2[2] = v25;
    if (!v5)
      goto LABEL_11;
LABEL_10:
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1A44C064C(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  void *v35;
  void *v36;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_1A4691308())
      goto LABEL_3;
LABEL_6:
    v3 = MEMORY[0x1E0DEE9E0];
    if (v2)
      goto LABEL_4;
LABEL_7:
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v5 = ~v8;
    v34 = a1 + 64;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v6 = v10 & *(_QWORD *)(a1 + 64);
    v7 = a1;
    goto LABEL_11;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBB8);
  v3 = sub_1A46916E0();
  if (!v2)
    goto LABEL_7;
LABEL_4:
  v4 = sub_1A46915FC();
  v34 = 0;
  v5 = 0;
  v6 = 0;
  v7 = v4 | 0x8000000000000000;
LABEL_11:
  v33 = (unint64_t)(v5 + 64) >> 6;
  v11 = v3 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v13 = 0;
  while ((v7 & 0x8000000000000000) != 0)
  {
    if (!sub_1A4691620())
      goto LABEL_45;
    type metadata accessor for REMObjectID_Codable();
    swift_dynamicCast();
    type metadata accessor for REMList_Codable();
    swift_dynamicCast();
    v18 = v35;
    v19 = v36;
LABEL_36:
    result = sub_1A4691134();
    v26 = -1 << *(_BYTE *)(v3 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = 8 * v14;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + v15) = v18;
    *(_QWORD *)(*(_QWORD *)(v3 + 56) + v15) = v19;
    ++*(_QWORD *)(v3 + 16);
  }
  if (v6)
  {
    v16 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v17 = v16 | (v13 << 6);
LABEL_35:
    v18 = *(void **)(*(_QWORD *)(v7 + 48) + 8 * v17);
    v35 = v18;
    v36 = *(void **)(*(_QWORD *)(v7 + 56) + 8 * v17);
    v19 = v36;
    v24 = v18;
    v25 = v36;
    goto LABEL_36;
  }
  v20 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v20 >= v33)
    goto LABEL_45;
  v21 = *(_QWORD *)(v34 + 8 * v20);
  v22 = v13 + 1;
  if (v21)
    goto LABEL_34;
  v22 = v13 + 2;
  if (v13 + 2 >= v33)
    goto LABEL_45;
  v21 = *(_QWORD *)(v34 + 8 * v22);
  if (v21)
    goto LABEL_34;
  v22 = v13 + 3;
  if (v13 + 3 >= v33)
    goto LABEL_45;
  v21 = *(_QWORD *)(v34 + 8 * v22);
  if (v21)
    goto LABEL_34;
  v22 = v13 + 4;
  if (v13 + 4 >= v33)
    goto LABEL_45;
  v21 = *(_QWORD *)(v34 + 8 * v22);
  if (v21)
  {
LABEL_34:
    v6 = (v21 - 1) & v21;
    v17 = __clz(__rbit64(v21)) + (v22 << 6);
    v13 = v22;
    goto LABEL_35;
  }
  v23 = v13 + 5;
  if (v13 + 5 >= v33)
  {
LABEL_45:
    swift_release();
    sub_1A4460EDC();
    return v3;
  }
  v21 = *(_QWORD *)(v34 + 8 * v23);
  if (v21)
  {
    v22 = v13 + 5;
    goto LABEL_34;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v33)
      goto LABEL_45;
    v21 = *(_QWORD *)(v34 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_34;
  }
LABEL_47:
  __break(1u);
  return result;
}

void sub_1A44C0A04(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t i;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439F8);
    v2 = (_QWORD *)sub_1A46916E0();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  i = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v11 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v11 >= v27)
    goto LABEL_32;
  v12 = *(_QWORD *)(v28 + 8 * v11);
  v13 = i + 1;
  if (!v12)
  {
    v13 = i + 2;
    if (i + 2 >= v27)
      goto LABEL_32;
    v12 = *(_QWORD *)(v28 + 8 * v13);
    if (!v12)
    {
      v13 = i + 3;
      if (i + 3 >= v27)
        goto LABEL_32;
      v12 = *(_QWORD *)(v28 + 8 * v13);
      if (!v12)
      {
        v13 = i + 4;
        if (i + 4 >= v27)
          goto LABEL_32;
        v12 = *(_QWORD *)(v28 + 8 * v13);
        if (!v12)
        {
          v14 = i + 5;
          if (i + 5 < v27)
          {
            v12 = *(_QWORD *)(v28 + 8 * v14);
            if (v12)
            {
              v13 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_36;
              if (v13 >= v27)
                break;
              v12 = *(_QWORD *)(v28 + 8 * v13);
              ++v14;
              if (v12)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_1A4460EDC();
          return;
        }
      }
    }
  }
LABEL_26:
  v5 = (v12 - 1) & v12;
  v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; v10 = v9 | (i << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    v18 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    v19 = v18;
    v20 = sub_1A443E4C8(v17, v16);
    v21 = v20;
    if ((v22 & 1) != 0)
    {
      v7 = (uint64_t *)(v2[6] + 16 * v20);
      swift_bridgeObjectRelease();
      *v7 = v17;
      v7[1] = v16;
      v8 = v2[7];

      *(_QWORD *)(v8 + 8 * v21) = v19;
      if (!v5)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v20;
    v23 = (uint64_t *)(v2[6] + 16 * v20);
    *v23 = v17;
    v23[1] = v16;
    *(_QWORD *)(v2[7] + 8 * v20) = v19;
    v24 = v2[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_34;
    v2[2] = v26;
    if (!v5)
      goto LABEL_11;
LABEL_10:
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t static REMListStableSortingDataView.fetchLists(store:objectIDs:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  void *v22;
  void *v23;
  objc_class *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  uint64_t result;
  void (*v31)(uint64_t *, _QWORD);
  uint64_t v32;
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[4];
  objc_super v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  unint64_t v47;

  v37 = a1;
  v4 = sub_1A46900FC();
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v7 = sub_1A4691308();
    v8 = MEMORY[0x1E0DEE9D8];
    if (!v7)
    {
LABEL_19:
      v32 = sub_1A446CF04(v8);
      swift_bridgeObjectRelease();
      type metadata accessor for REMListStableSortingDataView.Invocation();
      v33 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
      v34 = v37;
      sub_1A44785A4((uint64_t)v33, v32, v42);
      swift_bridgeObjectRelease();

      if (!v2)
      {
        v35 = (void *)v42[1];
        v34 = sub_1A44C064C(v42[0]);
        swift_bridgeObjectRelease();

      }
      return v34;
    }
    v9 = v7;
    v47 = MEMORY[0x1E0DEE9D8];
    sub_1A469153C();
    v44 = sub_1A46912CC();
    v45 = v10;
    v46 = 1;
    if ((v9 & 0x8000000000000000) == 0)
      goto LABEL_7;
    __break(1u);
  }
  v9 = *(_QWORD *)(a2 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (!v9)
    goto LABEL_19;
  v47 = MEMORY[0x1E0DEE9D8];
  sub_1A469153C();
  v44 = sub_1A44C1554(a2);
  v45 = v11;
  v46 = v12 & 1;
LABEL_7:
  v13 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0)
    v13 = a2;
  v38 = v13;
  while (1)
  {
    while (1)
    {
      sub_1A44C130C(v44, v45, v46, a2);
      v23 = v22;
      v24 = (objc_class *)type metadata accessor for REMObjectID_Codable();
      v25 = objc_allocWithZone(v24);
      v26 = v23;
      v27 = objc_msgSend(v26, sel_uuid);
      sub_1A46900F0();

      v28 = (void *)sub_1A46900D8();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v41);
      v29 = objc_msgSend(v26, sel_entityName);
      if (!v29)
      {
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v29 = (id)sub_1A469087C();
        swift_bridgeObjectRelease();
      }
      v43.receiver = v25;
      v43.super_class = v24;
      objc_msgSendSuper2(&v43, sel_initWithUUID_entityName_, v28, v29);

      sub_1A4691518();
      sub_1A4691548();
      sub_1A4691554();
      result = sub_1A4691524();
      if (v39)
        break;
      v14 = v44;
      v15 = v45;
      v16 = v46;
      v17 = sub_1A44C1228(v44, v45, v46, a2);
      v19 = v18;
      v21 = v20;
      sub_1A44A39BC(v14, v15, v16);
      v44 = v17;
      v45 = v19;
      v46 = v21 & 1;
      if (!--v9)
        goto LABEL_18;
    }
    if ((v46 & 1) == 0)
      break;
    if (sub_1A46912E4())
      swift_isUniquelyReferenced_nonNull_native();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E090);
    v31 = (void (*)(uint64_t *, _QWORD))sub_1A4690D98();
    sub_1A4691350();
    v31(v42, 0);
    if (!--v9)
    {
LABEL_18:
      sub_1A44A39BC(v44, v45, v46);
      v8 = v47;
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

uint64_t static REMListStableSortingDataView.Invocation.supportsSecureCoding.getter()
{
  return 1;
}

id REMListStableSortingDataView.Invocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMListStableSortingDataView.Invocation.init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMListStableSortingDataView.Invocation.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMListStableSortingDataView.Invocation.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id REMListStableSortingDataView.Invocation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t REMListStableSortingDataView.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t REMListStableSortingDataView.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

int64_t sub_1A44C1228(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1A44C130C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  id v15;
  void *v16;

  v6 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_1A46912F0() == *(_DWORD *)(a4 + 36))
      {
        sub_1A46912FC();
        sub_1A44C178C();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v4 = v16;
        swift_unknownObjectRelease();
        v8 = sub_1A4691134();
        v9 = -1 << *(_BYTE *)(a4 + 32);
        v6 = v8 & ~v9;
        if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
        {
          v10 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          v11 = sub_1A4691140();

          if ((v11 & 1) == 0)
          {
            v12 = ~v9;
            do
            {
              v6 = (v6 + 1) & v12;
              if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
                goto LABEL_24;
              v13 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
              v14 = sub_1A4691140();

            }
            while ((v14 & 1) == 0);
          }

LABEL_20:
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v7 = a4;
  else
    v7 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x1A859EB78](a1, a2, v7);
  sub_1A44C178C();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_1A44C1554(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1A44C15DC(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for REMListStableSortingDataView.Invocation()
{
  return objc_opt_self();
}

uint64_t sub_1A44C1654()
{
  return sub_1A4474CE4((unint64_t *)&qword_1ED2440C8, &qword_1ED243F80, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable, MEMORY[0x1E0DEB3D8]);
}

uint64_t sub_1A44C1688()
{
  return sub_1A4474CE4((unint64_t *)&qword_1ED2439E0, &qword_1ED243370, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable, MEMORY[0x1E0DEB3B8]);
}

unint64_t sub_1A44C16C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE71E098;
  if (!qword_1EE71E098)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71D528);
    v2[0] = sub_1A4436344(&qword_1ED243370, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    v2[1] = sub_1A4436344(&qword_1ED243DB8, (uint64_t (*)(uint64_t))type metadata accessor for REMList_Codable, (uint64_t)&protocol conformance descriptor for REMList_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE71E098);
  }
  return result;
}

uint64_t type metadata accessor for REMListStableSortingDataView()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMListStableSortingDataView()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1A44C178C()
{
  unint64_t result;

  result = qword_1ED2440D8;
  if (!qword_1ED2440D8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2440D8);
  }
  return result;
}

uint64_t sub_1A44C17C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t REMMemberships.rem_baseForChecksum()()
{
  void *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  _QWORD *v11;
  void *v12;
  uint64_t result;
  _QWORD *v14[2];

  v14[1] = *(_QWORD **)MEMORY[0x1E0C80C00];
  v2 = objc_msgSend(v0, sel_membershipByMemberIdentifier);
  sub_1A46900FC();
  sub_1A44C1A00();
  sub_1A44C1A3C();
  sub_1A4690708();

  v3 = swift_bridgeObjectRetain();
  v4 = (_QWORD *)sub_1A4459CE4(v3);
  swift_bridgeObjectRelease();
  v14[0] = v4;
  sub_1A44C1AA8(v14);
  if (v1)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v5 = v14[0];
    v6 = v0;
    sub_1A44C33B8((uint64_t)v5, v6);
    swift_release();

    v7 = (void *)MEMORY[0x1A859F880]();
    v8 = (void *)objc_opt_self();
    v9 = (void *)sub_1A4690B94();
    v14[0] = 0;
    v10 = objc_msgSend(v8, sel_dataWithJSONObject_options_error_, v9, 0, v14);

    v11 = v14[0];
    if (v10)
    {
      v12 = (void *)sub_1A468FFC4();

    }
    else
    {
      v12 = v11;
      sub_1A468FE68();

      swift_willThrow();
    }
    objc_autoreleasePoolPop(v7);
    swift_bridgeObjectRelease();
    return (uint64_t)v12;
  }
  return result;
}

unint64_t sub_1A44C1A00()
{
  unint64_t result;

  result = qword_1EE71D9B0;
  if (!qword_1EE71D9B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE71D9B0);
  }
  return result;
}

unint64_t sub_1A44C1A3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED23FE90;
  if (!qword_1ED23FE90)
  {
    v1 = sub_1A46900FC();
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0CB09C8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED23FE90);
  }
  return result;
}

uint64_t sub_1A44C1A88()
{
  return REMMemberships.rem_baseForChecksum()();
}

uint64_t sub_1A44C1AA8(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(sub_1A46900FC() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1A462EC18(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_1A44C1B28(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1A44C1B28(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  char *v77;
  void (*v78)(char *, uint64_t, uint64_t);
  unint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  char v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char *v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  unint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;

  v2 = v1;
  v4 = sub_1A46900FC();
  v159 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v146 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v153 = (char *)&v138 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v155 = (char *)&v138 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v154 = (char *)&v138 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v142 = (char *)&v138 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v149 = (char *)&v138 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v144 = (char *)&v138 - v18;
  MEMORY[0x1E0C80A78](v17);
  v143 = (char *)&v138 - v19;
  v158 = a1;
  v20 = a1[1];
  result = sub_1A46918CC();
  if (result >= v20)
  {
    if (v20 < 0)
      goto LABEL_150;
    if (v20)
      return sub_1A44C26B4(0, v20, 1, v158);
    return result;
  }
  if (v20 >= 0)
    v22 = v20;
  else
    v22 = v20 + 1;
  if (v20 < -1)
    goto LABEL_158;
  v139 = result;
  if (v20 < 2)
  {
    v27 = (char *)MEMORY[0x1E0DEE9D8];
    v26 = MEMORY[0x1E0DEE9D8]
        + ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80));
    v138 = MEMORY[0x1E0DEE9D8];
    if (v20 != 1)
    {
      v29 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_116:
      if (v29 >= 2)
      {
        v131 = *v158;
        do
        {
          v132 = v29 - 2;
          if (v29 < 2)
            goto LABEL_145;
          if (!v131)
            goto LABEL_157;
          v133 = *(_QWORD *)&v27[16 * v132 + 32];
          v134 = *(_QWORD *)&v27[16 * v29 + 24];
          v135 = v26;
          sub_1A44C2978(v131 + *(_QWORD *)(v159 + 72) * v133, v131 + *(_QWORD *)(v159 + 72) * *(_QWORD *)&v27[16 * v29 + 16], v131 + *(_QWORD *)(v159 + 72) * v134, v26);
          if (v2)
            break;
          if (v134 < v133)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v27 = sub_1A462EBC8((uint64_t)v27);
          if (v132 >= *((_QWORD *)v27 + 2))
            goto LABEL_147;
          v136 = &v27[16 * v132 + 32];
          *(_QWORD *)v136 = v133;
          *((_QWORD *)v136 + 1) = v134;
          v137 = *((_QWORD *)v27 + 2);
          if (v29 > v137)
            goto LABEL_148;
          memmove(&v27[16 * v29 + 16], &v27[16 * v29 + 32], 16 * (v137 - v29));
          *((_QWORD *)v27 + 2) = v137 - 1;
          v29 = v137 - 1;
          v26 = v135;
        }
        while (v137 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v138 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v23 = v22 >> 1;
    v24 = sub_1A4690C00();
    *(_QWORD *)(v24 + 16) = v23;
    v25 = *(unsigned __int8 *)(v159 + 80);
    v138 = v24;
    v26 = v24 + ((v25 + 32) & ~v25);
  }
  v28 = 0;
  v27 = (char *)MEMORY[0x1E0DEE9D8];
  v148 = v26;
  v152 = v4;
  while (1)
  {
    v30 = v28;
    v31 = v28 + 1;
    if (v28 + 1 >= v20)
    {
      v39 = v28 + 1;
      goto LABEL_67;
    }
    v156 = v20;
    v32 = *v158;
    v33 = *(_QWORD *)(v159 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v159 + 16);
    v34(v143, *v158 + v33 * v31, v4);
    v147 = v30;
    v145 = v32;
    v157 = v33;
    v34(v144, v32 + v33 * v30, v4);
    v35 = sub_1A46900CC();
    v37 = v36;
    if (sub_1A46900CC() == v35 && v38 == v37)
      LODWORD(v151) = 0;
    else
      LODWORD(v151) = sub_1A4691A40();
    v40 = v142;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v41 = *(void (**)(char *, uint64_t))(v159 + 8);
    v42 = v152;
    v41(v144, v152);
    v41(v143, v42);
    v39 = v147 + 2;
    if (v147 + 2 < v156)
    {
      v140 = v27;
      v141 = v2;
      v150 = v157 * v31;
      v43 = v145;
      v44 = v157 * v39;
      while (1)
      {
        v45 = v152;
        v34(v149, v43 + v44, v152);
        v34(v40, v43 + v150, v45);
        v46 = sub_1A46900CC();
        v48 = v47;
        if (sub_1A46900CC() == v46 && v49 == v48)
          v50 = 0;
        else
          v50 = sub_1A4691A40();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v51 = v152;
        v41(v40, v152);
        v41(v149, v51);
        if (((v151 ^ v50) & 1) != 0)
          break;
        ++v39;
        v43 += v157;
        if (v156 == v39)
        {
          v52 = v156;
          v39 = v156;
          v27 = v140;
          v2 = v141;
          goto LABEL_32;
        }
      }
      v27 = v140;
      v2 = v141;
    }
    v52 = v156;
LABEL_32:
    v30 = v147;
    v53 = v145;
    if ((v151 & 1) == 0)
      break;
    if (v39 < v147)
      goto LABEL_151;
    if (v147 >= v39)
      break;
    v140 = v27;
    v141 = v2;
    v54 = 0;
    v55 = v157 * (v39 - 1);
    v56 = v39 * v157;
    v57 = v147;
    v58 = v147 * v157;
    do
    {
      if (v57 != v39 + v54 - 1)
      {
        if (!v53)
          goto LABEL_156;
        v60 = v39;
        v61 = v53 + v55;
        v151 = *(_QWORD *)(v159 + 32);
        ((void (*)(char *, uint64_t, uint64_t))v151)(v146, v53 + v58, v152);
        if (v58 < v55 || v53 + v58 >= (unint64_t)(v53 + v56))
        {
          v59 = v152;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v59 = v152;
          if (v58 != v55)
            swift_arrayInitWithTakeBackToFront();
        }
        ((void (*)(uint64_t, char *, uint64_t))v151)(v61, v146, v59);
        v39 = v60;
        v53 = v145;
      }
      ++v57;
      --v54;
      v55 -= v157;
      v56 -= v157;
      v58 += v157;
    }
    while (v57 < v39 + v54);
    v27 = v140;
    v2 = v141;
    v62 = v152;
    v30 = v147;
    v52 = v156;
    if (v39 < v156)
      goto LABEL_48;
LABEL_67:
    if (v39 < v30)
      goto LABEL_144;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v27 = sub_1A462E5B0(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
    v80 = *((_QWORD *)v27 + 2);
    v79 = *((_QWORD *)v27 + 3);
    v29 = v80 + 1;
    v26 = v148;
    v157 = v39;
    if (v80 >= v79 >> 1)
    {
      v130 = sub_1A462E5B0((char *)(v79 > 1), v80 + 1, 1, v27);
      v26 = v148;
      v27 = v130;
    }
    *((_QWORD *)v27 + 2) = v29;
    v81 = v27 + 32;
    v82 = &v27[16 * v80 + 32];
    v83 = v157;
    *(_QWORD *)v82 = v30;
    *((_QWORD *)v82 + 1) = v83;
    if (v80)
    {
      while (1)
      {
        v84 = v29 - 1;
        if (v29 >= 4)
        {
          v89 = &v81[16 * v29];
          v90 = *((_QWORD *)v89 - 8);
          v91 = *((_QWORD *)v89 - 7);
          v95 = __OFSUB__(v91, v90);
          v92 = v91 - v90;
          if (v95)
            goto LABEL_133;
          v94 = *((_QWORD *)v89 - 6);
          v93 = *((_QWORD *)v89 - 5);
          v95 = __OFSUB__(v93, v94);
          v87 = v93 - v94;
          v88 = v95;
          if (v95)
            goto LABEL_134;
          v96 = v29 - 2;
          v97 = &v81[16 * v29 - 32];
          v99 = *(_QWORD *)v97;
          v98 = *((_QWORD *)v97 + 1);
          v95 = __OFSUB__(v98, v99);
          v100 = v98 - v99;
          if (v95)
            goto LABEL_136;
          v95 = __OFADD__(v87, v100);
          v101 = v87 + v100;
          if (v95)
            goto LABEL_139;
          if (v101 >= v92)
          {
            v119 = &v81[16 * v84];
            v121 = *(_QWORD *)v119;
            v120 = *((_QWORD *)v119 + 1);
            v95 = __OFSUB__(v120, v121);
            v122 = v120 - v121;
            if (v95)
              goto LABEL_143;
            v112 = v87 < v122;
            goto LABEL_104;
          }
        }
        else
        {
          if (v29 != 3)
          {
            v113 = *((_QWORD *)v27 + 4);
            v114 = *((_QWORD *)v27 + 5);
            v95 = __OFSUB__(v114, v113);
            v106 = v114 - v113;
            v107 = v95;
            goto LABEL_98;
          }
          v86 = *((_QWORD *)v27 + 4);
          v85 = *((_QWORD *)v27 + 5);
          v95 = __OFSUB__(v85, v86);
          v87 = v85 - v86;
          v88 = v95;
        }
        if ((v88 & 1) != 0)
          goto LABEL_135;
        v96 = v29 - 2;
        v102 = &v81[16 * v29 - 32];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        v105 = __OFSUB__(v103, v104);
        v106 = v103 - v104;
        v107 = v105;
        if (v105)
          goto LABEL_138;
        v108 = &v81[16 * v84];
        v110 = *(_QWORD *)v108;
        v109 = *((_QWORD *)v108 + 1);
        v95 = __OFSUB__(v109, v110);
        v111 = v109 - v110;
        if (v95)
          goto LABEL_141;
        if (__OFADD__(v106, v111))
          goto LABEL_142;
        if (v106 + v111 >= v87)
        {
          v112 = v87 < v111;
LABEL_104:
          if (v112)
            v84 = v96;
          goto LABEL_106;
        }
LABEL_98:
        if ((v107 & 1) != 0)
          goto LABEL_137;
        v115 = &v81[16 * v84];
        v117 = *(_QWORD *)v115;
        v116 = *((_QWORD *)v115 + 1);
        v95 = __OFSUB__(v116, v117);
        v118 = v116 - v117;
        if (v95)
          goto LABEL_140;
        if (v118 < v106)
          goto LABEL_14;
LABEL_106:
        v123 = v84 - 1;
        if (v84 - 1 >= v29)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!*v158)
          goto LABEL_155;
        v124 = v27;
        v125 = &v81[16 * v123];
        v126 = *(_QWORD *)v125;
        v127 = &v81[16 * v84];
        v128 = *((_QWORD *)v127 + 1);
        sub_1A44C2978(*v158 + *(_QWORD *)(v159 + 72) * *(_QWORD *)v125, *v158 + *(_QWORD *)(v159 + 72) * *(_QWORD *)v127, *v158 + *(_QWORD *)(v159 + 72) * v128, v26);
        if (v2)
          goto LABEL_127;
        if (v128 < v126)
          goto LABEL_130;
        if (v84 > *((_QWORD *)v124 + 2))
          goto LABEL_131;
        *(_QWORD *)v125 = v126;
        *(_QWORD *)&v81[16 * v123 + 8] = v128;
        v129 = *((_QWORD *)v124 + 2);
        if (v84 >= v129)
          goto LABEL_132;
        v27 = v124;
        v29 = v129 - 1;
        memmove(&v81[16 * v84], v127 + 16, 16 * (v129 - 1 - v84));
        *((_QWORD *)v124 + 2) = v129 - 1;
        v26 = v148;
        if (v129 <= 2)
          goto LABEL_14;
      }
    }
    v29 = 1;
LABEL_14:
    v20 = v158[1];
    v28 = v157;
    v4 = v152;
    if (v157 >= v20)
      goto LABEL_116;
  }
  v62 = v152;
  if (v39 >= v52)
    goto LABEL_67;
LABEL_48:
  if (__OFSUB__(v39, v30))
    goto LABEL_149;
  if (v39 - v30 >= v139)
    goto LABEL_67;
  if (__OFADD__(v30, v139))
    goto LABEL_152;
  if (v30 + v139 >= v52)
    v63 = v52;
  else
    v63 = v30 + v139;
  if (v63 >= v30)
  {
    if (v39 != v63)
    {
      v147 = v30;
      v140 = v27;
      v141 = v2;
      v64 = *(_QWORD *)(v159 + 72);
      v150 = *(_QWORD *)(v159 + 16);
      v151 = v64;
      v156 = v39 * v64;
      v157 = v64 * (v39 - 1);
      v145 = v63;
      do
      {
        v66 = 0;
        v67 = v147;
        while (1)
        {
          v68 = *v158;
          v69 = (void (*)(char *, uint64_t, uint64_t))v150;
          ((void (*)(char *, uint64_t, uint64_t))v150)(v154, v156 + v66 + *v158, v62);
          v69(v155, v157 + v66 + v68, v62);
          v70 = sub_1A46900CC();
          v72 = v71;
          if (sub_1A46900CC() == v70 && v73 == v72)
            break;
          v74 = sub_1A4691A40();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v75 = *(void (**)(char *, uint64_t))(v159 + 8);
          v62 = v152;
          v75(v155, v152);
          v75(v154, v62);
          if ((v74 & 1) == 0)
            goto LABEL_58;
          v76 = *v158;
          if (!*v158)
            goto LABEL_154;
          v77 = (char *)(v76 + v157 + v66);
          v78 = *(void (**)(char *, uint64_t, uint64_t))(v159 + 32);
          v78(v153, v76 + v156 + v66, v62);
          swift_arrayInitWithTakeFrontToBack();
          v78(v77, (uint64_t)v153, v62);
          v66 -= v151;
          if (v39 == ++v67)
            goto LABEL_58;
        }
        swift_bridgeObjectRelease_n();
        v65 = *(void (**)(char *, uint64_t))(v159 + 8);
        v62 = v152;
        v65(v155, v152);
        v65(v154, v62);
LABEL_58:
        ++v39;
        v157 += v151;
        v156 += v151;
      }
      while (v39 != v145);
      v39 = v145;
      v27 = v140;
      v2 = v141;
      v30 = v147;
    }
    goto LABEL_67;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t sub_1A44C26B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t *v37;
  _QWORD *v38;
  char *v39;
  char *v40;
  uint64_t v41;

  v37 = a4;
  v31 = a1;
  v6 = sub_1A46900FC();
  v38 = *(_QWORD **)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v36 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v40 = (char *)&v29 - v10;
  result = MEMORY[0x1E0C80A78](v9);
  v39 = (char *)&v29 - v12;
  v35 = a3;
  v30 = a2;
  if (a3 != a2)
  {
    v13 = v38[9];
    v32 = (void (*)(char *, uint64_t, uint64_t))v38[2];
    v33 = v13;
    v14 = v13 * (v35 - 1);
    v41 = v13 * v35;
LABEL_6:
    v16 = 0;
    v17 = v31;
    v34 = v14;
    while (1)
    {
      v18 = *v37;
      v19 = v32;
      v32(v39, v41 + v16 + *v37, v6);
      v19(v40, v14 + v16 + v18, v6);
      v20 = sub_1A46900CC();
      v22 = v21;
      if (sub_1A46900CC() == v20 && v23 == v22)
      {
        swift_bridgeObjectRelease_n();
        v15 = (void (*)(char *, uint64_t))v38[1];
        v15(v40, v6);
        result = ((uint64_t (*)(char *, uint64_t))v15)(v39, v6);
        v14 = v34;
LABEL_5:
        v14 += v33;
        v41 += v33;
        if (++v35 == v30)
          return result;
        goto LABEL_6;
      }
      v24 = sub_1A4691A40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = (void (*)(char *, uint64_t))v38[1];
      v25(v40, v6);
      result = ((uint64_t (*)(char *, uint64_t))v25)(v39, v6);
      v14 = v34;
      if ((v24 & 1) == 0)
        goto LABEL_5;
      v26 = *v37;
      if (!*v37)
        break;
      v27 = v26 + v34 + v16;
      v28 = (void (*)(char *, uint64_t, uint64_t))v38[4];
      v28(v36, v26 + v41 + v16, v6);
      swift_arrayInitWithTakeFrontToBack();
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v36, v6);
      v16 -= v33;
      if (v35 == ++v17)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A44C2978(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char v32;
  void (*v33)(char *, uint64_t);
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(char *, unint64_t, uint64_t);
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  void (*v48)(char *, uint64_t);
  BOOL v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t result;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;

  v8 = sub_1A46900FC();
  v9 = MEMORY[0x1E0C80A78](v8);
  v58 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v57 = (char *)&v54 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v54 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v54 - v16;
  v19 = *(_QWORD *)(v18 + 72);
  v59 = v18;
  v60 = v19;
  if (!v19)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v60 == -1)
    goto LABEL_69;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v60 == -1)
    goto LABEL_70;
  v21 = (uint64_t)(a2 - a1) / v60;
  v63 = a1;
  v62 = a4;
  v22 = v20 / v60;
  if (v21 >= v20 / v60)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v60;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v37 = a4 + v24;
      v61 = a4 + v24;
      v63 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v39 = -v60;
        v60 = *(_QWORD *)(v59 + 16);
        v55 = a4;
        v56 = a1;
        do
        {
          v40 = a3;
          v41 = (void (*)(char *, unint64_t, uint64_t))v60;
          ((void (*)(char *, unint64_t, uint64_t))v60)(v57, v37 + v39, v8);
          v42 = a2 + v39;
          v41(v58, a2 + v39, v8);
          v43 = sub_1A46900CC();
          v45 = v44;
          if (sub_1A46900CC() == v43 && v46 == v45)
            v47 = 0;
          else
            v47 = sub_1A4691A40();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a3 += v39;
          v48 = *(void (**)(char *, uint64_t))(v59 + 8);
          v48(v58, v8);
          v48(v57, v8);
          if ((v47 & 1) != 0)
          {
            if (v40 < a2 || a3 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v50 = v55;
              v51 = v56;
            }
            else
            {
              v49 = v40 == a2;
              v50 = v55;
              v51 = v56;
              if (!v49)
                swift_arrayInitWithTakeBackToFront();
            }
            v63 += v39;
          }
          else
          {
            v52 = v61;
            v61 += v39;
            if (v40 < v52 || a3 >= v52)
            {
              swift_arrayInitWithTakeFrontToBack();
              v42 = a2;
              v50 = v55;
              v51 = v56;
            }
            else
            {
              v51 = v56;
              if (v40 != v52)
                swift_arrayInitWithTakeBackToFront();
              v42 = a2;
              v50 = v55;
            }
          }
          v37 = v61;
          if (v61 <= v50)
            break;
          a2 = v42;
        }
        while (v42 > v51);
      }
LABEL_67:
      sub_1A462E80C(&v63, &v62, (uint64_t *)&v61);
      return 1;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v60;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v58 = (char *)(a4 + v23);
    v61 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v59 + 16);
      while (1)
      {
        v26(v17, a2, v8);
        v26(v15, a4, v8);
        v27 = sub_1A46900CC();
        v29 = v28;
        if (sub_1A46900CC() == v27 && v30 == v29)
          break;
        v32 = sub_1A4691A40();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v33 = *(void (**)(char *, uint64_t))(v59 + 8);
        v33(v15, v8);
        v33(v17, v8);
        if ((v32 & 1) == 0)
          goto LABEL_31;
        v34 = v63;
        v35 = a2 + v60;
        if (v63 < a2 || v63 >= v35)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v63 == a2)
        {
          v34 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_37:
        v63 = v34 + v60;
        a4 = v62;
        if (v62 < (unint64_t)v58)
        {
          a2 = v35;
          if (v35 < a3)
            continue;
        }
        goto LABEL_67;
      }
      swift_bridgeObjectRelease_n();
      v31 = *(void (**)(char *, uint64_t))(v59 + 8);
      v31(v15, v8);
      v31(v17, v8);
LABEL_31:
      v34 = v63;
      v36 = v62 + v60;
      if (v63 < v62 || v63 >= v36)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v63 != v62)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v62 = v36;
      v35 = a2;
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_71:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A44C2F4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A46900FC();
  v11[6] = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v11[3] = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11[1] = (char *)v11 - v9;
  if (*(_QWORD *)(a1 + 16))
  {
    v11[5] = v5;
    v11[0] = v1;
    swift_bridgeObjectRetain();
    v11[4] = "tingDataView_Invocation";
    v11[7] = MEMORY[0x1E0DEE9B8] + 8;
    v11[15] = a1;
    v11[2] = v6;
    __asm { BR              X9 }
  }
  return MEMORY[0x1E0DEE9D8];
}

_QWORD *sub_1A44C33B8(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  void (*v15)(uint64_t, char *, uint64_t);
  char *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  id v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  _OWORD v41[2];
  _QWORD *v42;

  v3 = v2;
  v37 = a2;
  v5 = sub_1A46900FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v38 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v34 = *(_QWORD *)(v6 + 72);
    v36 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v32[1] = a1;
    swift_bridgeObjectRetain();
    v42 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v13 = (uint64_t)v38;
    v35 = v6;
    while (1)
    {
      v36(v10, v12, v5);
      v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v14(v10, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v10, 1, v5) == 1)
        break;
      v15 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
      v16 = v10;
      v15(v13, v10, v5);
      v17 = objc_msgSend(v37, sel_membershipByMemberIdentifier);
      sub_1A44C1A00();
      sub_1A44C1A3C();
      v18 = sub_1A4690708();

      if (*(_QWORD *)(v18 + 16) && (v19 = sub_1A443E6BC(v13), (v20 & 1) != 0))
      {
        v21 = *(id *)(*(_QWORD *)(v18 + 56) + 8 * v19);
        swift_bridgeObjectRelease();
        v22 = v21;
        v23 = sub_1A44C2F4C((uint64_t)&unk_1E4C0DD80);
        v33 = v3;
        *(_QWORD *)&v41[0] = v23;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
        sub_1A4469630();
        v24 = sub_1A4690828();
        v26 = v25;

        v13 = (uint64_t)v38;
        swift_bridgeObjectRelease();
        *((_QWORD *)&v40 + 1) = MEMORY[0x1E0DEA968];

        *(_QWORD *)&v39 = v24;
        *((_QWORD *)&v39 + 1) = v26;
        v3 = v33;
      }
      else
      {
        swift_bridgeObjectRelease();
        v39 = 0u;
        v40 = 0u;
      }
      v10 = v16;
      v6 = v35;
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v13, v5);
      if (*((_QWORD *)&v40 + 1))
      {
        sub_1A444A940(&v39, v41);
        sub_1A444A940(v41, &v39);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v42 = sub_1A44390AC(0, v42[2] + 1, 1, v42);
        v28 = v42[2];
        v27 = v42[3];
        if (v28 >= v27 >> 1)
          v42 = sub_1A44390AC((_QWORD *)(v27 > 1), v28 + 1, 1, v42);
        v29 = v42;
        v42[2] = v28 + 1;
        sub_1A444A940(&v39, &v29[4 * v28 + 4]);
        v13 = (uint64_t)v38;
      }
      else
      {
        sub_1A445404C((uint64_t)&v39, &qword_1ED243E68);
      }
      v12 += v34;
      if (!--v11)
      {
        v14(v10, 1, 1, v5);
        break;
      }
    }
  }
  else
  {
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v42 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v30(v10, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  return v42;
}

uint64_t REMJSONType.associatedValueAsAny.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  if (*((_BYTE *)v1 + 8))
    v4 = (uint64_t *)&unk_1ED23EAC0;
  else
    v4 = (uint64_t *)&unk_1EE71E180;
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(v4);
  *a1 = v3;
  return swift_bridgeObjectRetain();
}

void *REMJSONRepresentable.toJSONData()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  (*(void (**)(uint64_t *__return_ptr))(a2 + 8))(&v13);
  if (!v2)
  {
    v4 = v13;
    if (v14)
      v5 = (uint64_t *)&unk_1ED23EAC0;
    else
      v5 = (uint64_t *)&unk_1EE71E180;
    v6 = __swift_instantiateConcreteTypeFromMangledName(v5);
    v15 = v6;
    v13 = v4;
    v7 = (void *)MEMORY[0x1A859F880]();
    v8 = (void *)objc_opt_self();
    __swift_project_boxed_opaque_existential_1(&v13, v6);
    v12 = 0;
    v9 = objc_msgSend(v8, sel_dataWithJSONObject_options_error_, sub_1A4691A34(), 0, &v12);
    swift_unknownObjectRelease();
    v10 = v12;
    if (v9)
    {
      v3 = (void *)sub_1A468FFC4();

    }
    else
    {
      v3 = v10;
      sub_1A468FE68();

      swift_willThrow();
    }
    objc_autoreleasePoolPop(v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
  }
  return v3;
}

void static REMJSONRepresentable.fromJSONData(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  char v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  char v16;
  _BYTE v17[32];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v6 = (void *)MEMORY[0x1A859F880]();
  v7 = (void *)objc_opt_self();
  v8 = (void *)sub_1A468FFAC();
  v15 = 0;
  v9 = objc_msgSend(v7, sel_JSONObjectWithData_options_error_, v8, 0, &v15);

  v10 = v15;
  if (v9)
  {
    sub_1A4691278();
    swift_unknownObjectRelease();
    objc_autoreleasePoolPop(v6);
    sub_1A44311F0((uint64_t)v17, (uint64_t)&v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
    v11 = swift_dynamicCast();
    if ((v11 & 1) != 0
      || (sub_1A44311F0((uint64_t)v17, (uint64_t)&v15),
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EAC0),
          (swift_dynamicCast() & 1) != 0))
    {
      v15 = v14;
      v16 = v11 ^ 1;
      (*(void (**)(id *, uint64_t, uint64_t))(a4 + 16))(&v15, a3, a4);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A4473FBC();
      swift_allocError();
      *(_QWORD *)v13 = 0;
      *(_QWORD *)(v13 + 8) = 0;
      *(_BYTE *)(v13 + 16) = 3;
      swift_willThrow();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  else
  {
    v12 = v10;
    sub_1A468FE68();

    swift_willThrow();
    objc_autoreleasePoolPop(v6);
  }
}

uint64_t sub_1A44C3B2C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[5];
  _QWORD v10[3];

  v10[2] = a2;
  v9[2] = a3;
  v9[3] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EAC0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED243A28);
  v7 = sub_1A44C50B0();
  return sub_1A449F0A4((void (*)(char *, char *))sub_1A44C5094, (uint64_t)v9, v5, a3, v6, v7, MEMORY[0x1E0DEDB38], (uint64_t)v10);
}

uint64_t sub_1A44C3BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  char v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  sub_1A44311F0(a1, (uint64_t)&v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
  v9 = swift_dynamicCast();
  if ((v9 & 1) == 0)
  {
    sub_1A44311F0(a1, (uint64_t)&v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EAC0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_1A4473FBC();
      v10 = swift_allocError();
      *(_QWORD *)v12 = 0;
      *(_QWORD *)(v12 + 8) = 0;
      *(_BYTE *)(v12 + 16) = 3;
      result = swift_willThrow();
      goto LABEL_6;
    }
  }
  v14 = v13;
  v15 = v9 ^ 1;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(a3 + 16))(&v14, a2, a3);
  v10 = v4;
  result = swift_bridgeObjectRelease();
  if (v4)
LABEL_6:
    *a4 = v10;
  return result;
}

uint64_t Array<A>.toJSON()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[5];
  _QWORD v11[3];

  v11[2] = a1;
  v10[2] = a2;
  v10[3] = a3;
  v6 = sub_1A4690C78();
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED243A28);
  v8 = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v6);
  result = sub_1A449F0A4((void (*)(char *, char *))sub_1A44C4B34, (uint64_t)v10, v6, (char *)(MEMORY[0x1E0DEE9B8] + 8), v7, v8, MEMORY[0x1E0DEDB38], (uint64_t)v11);
  if (!v4)
  {
    *(_QWORD *)a4 = result;
    *(_BYTE *)(a4 + 8) = 1;
  }
  return result;
}

_QWORD *sub_1A44C3DD0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8))(&v10, a1, a2);
  if (v4)
  {
    *a3 = v4;
  }
  else
  {
    v8 = v10;
    if ((v11 & 1) != 0)
      v9 = &qword_1ED23EAC0;
    else
      v9 = &qword_1EE71E180;
    result = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(v9);
    a4[3] = result;
    *a4 = v8;
  }
  return result;
}

uint64_t static Array<A>.fromJSON(_:)(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v4;

  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
    return sub_1A44C3B2C((uint64_t)a2, *(_QWORD *)a1, a2, a3);
  sub_1A4473FBC();
  swift_allocError();
  *(_QWORD *)v4 = 0;
  *(_QWORD *)(v4 + 8) = 0;
  *(_BYTE *)(v4 + 16) = 3;
  return swift_willThrow();
}

uint64_t sub_1A44C3ED4()
{
  return sub_1A4690774();
}

uint64_t Dictionary<>.toJSON()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1A4690774();
  if (!v1)
  {
    *(_QWORD *)a1 = result;
    *(_BYTE *)(a1 + 8) = 0;
  }
  return result;
}

_QWORD *sub_1A44C3F90@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8))(&v8, a1, a2);
  if (!v3)
  {
    v6 = v8;
    if ((v9 & 1) != 0)
      v7 = &qword_1ED23EAC0;
    else
      v7 = &qword_1EE71E180;
    result = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(v7);
    a3[3] = result;
    *a3 = v6;
  }
  return result;
}

uint64_t static Dictionary<>.fromJSON(_:)(uint64_t a1)
{
  uint64_t v1;

  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    sub_1A4473FBC();
    swift_allocError();
    *(_QWORD *)v1 = 0;
    *(_QWORD *)(v1 + 8) = 0;
    *(_BYTE *)(v1 + 16) = 3;
    return swift_willThrow();
  }
  else
  {
    MEMORY[0x1E0C80A78](a1);
    return sub_1A4690774();
  }
}

uint64_t sub_1A44C40D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  sub_1A44311F0(a1, (uint64_t)&v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
  v6 = swift_dynamicCast();
  if ((v6 & 1) != 0
    || (sub_1A44311F0(a1, (uint64_t)&v9),
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EAC0),
        (swift_dynamicCast() & 1) != 0))
  {
    v9 = v11;
    v10 = v6 ^ 1;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(a3 + 16))(&v9, a2, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A4473FBC();
    swift_allocError();
    *(_QWORD *)v8 = 0;
    *(_QWORD *)(v8 + 8) = 0;
    *(_BYTE *)(v8 + 16) = 3;
    return swift_willThrow();
  }
}

uint64_t Dictionary<>.deserializeRequired<A>(key:valueType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  if (*(_QWORD *)(a4 + 16))
  {
    v11 = *a3;
    v12 = a3[1];
    swift_bridgeObjectRetain();
    v13 = sub_1A443E4C8(a1, a2);
    if ((v14 & 1) != 0)
    {
      sub_1A44311F0(*(_QWORD *)(a4 + 56) + 32 * v13, (uint64_t)&v20);
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v21 + 1))
      {
        sub_1A444A940(&v20, v22);
        *(_QWORD *)&v20 = v11;
        *((_QWORD *)&v20 + 1) = v12;
        v17 = type metadata accessor for Dictionary<>.DeserializableValueType(0, a5, v15, v16);
        sub_1A44C4350((uint64_t)v22, a1, a2, v17, a6);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      }
    }
    else
    {
      v20 = 0u;
      v21 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  sub_1A445404C((uint64_t)&v20, &qword_1ED243E68);
  sub_1A4473FBC();
  swift_allocError();
  *(_QWORD *)v19 = a1;
  *(_QWORD *)(v19 + 8) = a2;
  *(_BYTE *)(v19 + 16) = 1;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_1A44C4350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char **v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;

  v30 = a2;
  v31 = a3;
  v35 = a1;
  v27 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v7);
  v26[2] = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A46900FC();
  v26[3] = *(_QWORD *)(v9 - 8);
  v26[4] = v9;
  MEMORY[0x1E0C80A78](v9);
  v26[1] = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A46900B4();
  MEMORY[0x1E0C80A78](v11);
  v12 = *(_QWORD *)(a4 + 16);
  v13 = sub_1A46911A0();
  v14 = MEMORY[0x1E0C80A78](v13);
  v28 = v12;
  MEMORY[0x1E0C80A78](v14);
  v15 = *v5;
  v16 = (unint64_t)v5[1];
  if (v16 >> 62)
  {
    if (v16 >> 62 != 1)
      __asm { BR              X9 }
    v17 = v15;
    sub_1A44311F0(v35, (uint64_t)v33);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v33[2] = v17;
      v34 = v16 & 0x3FFFFFFFFFFFFFFFLL;
      v18 = v29;
      sub_1A4690774();
      result = swift_bridgeObjectRelease();
      if (v18)
        return result;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E210);
      v20 = sub_1A4691650();
      swift_bridgeObjectRelease();
      v21 = (uint64_t *)&unk_1EE71E218;
LABEL_9:
      v34 = __swift_instantiateConcreteTypeFromMangledName(v21);
      v33[0] = v20;
      throwingCast<A>(_:as:failureMessage:)((uint64_t)v33, v28, 0, 0, v28, v27);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    }
  }
  else
  {
    v22 = v15;
    sub_1A44311F0(v35, (uint64_t)v33);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EAC0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v23 = v29;
      sub_1A44C3B2C((uint64_t)v22, v32, v22, v16);
      result = swift_bridgeObjectRelease();
      if (v23)
        return result;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E210);
      v20 = sub_1A4691584();
      swift_bridgeObjectRelease();
      v21 = (uint64_t *)&unk_1EE71E220;
      goto LABEL_9;
    }
  }
  sub_1A4473FBC();
  swift_allocError();
  v24 = v31;
  *(_QWORD *)v25 = v30;
  *(_QWORD *)(v25 + 8) = v24;
  *(_BYTE *)(v25 + 16) = 2;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

void sub_1A44C4780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_0;

  sub_1A44311F0(*(_QWORD *)(v0 - 72), v0 - 112);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 - 192);
    sub_1A46900C0();
    swift_bridgeObjectRelease();
    v3 = *(_QWORD *)(v0 - 184);
    v2 = *(_QWORD *)(v0 - 176);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) != 1)
    {
      v4 = *(_QWORD *)(v0 - 200);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v1, v2);
      *(_QWORD *)(v0 - 88) = v2;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 - 112));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16))(boxed_opaque_existential_0, v4, v2);
      throwingCast<A>(_:as:failureMessage:)(v0 - 112, *(_QWORD *)(v0 - 160), 0, 0, *(_QWORD *)(v0 - 160), *(_QWORD *)(v0 - 168));
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
      JUMPOUT(0x1A44C4660);
    }
    sub_1A445404C(v1, &qword_1ED243170);
  }
  JUMPOUT(0x1A44C4720);
}

uint64_t Dictionary<>.deserializeOptional<A>(key:valueType:defaultValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21[4];
  __int128 v22;
  __int128 v23;
  _OWORD v24[2];

  if (!*(_QWORD *)(a5 + 16))
  {
    v22 = 0u;
    v23 = 0u;
    goto LABEL_8;
  }
  v13 = *a3;
  v14 = a3[1];
  swift_bridgeObjectRetain();
  v15 = sub_1A443E4C8(a1, a2);
  if ((v16 & 1) == 0)
  {
    v22 = 0u;
    v23 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1A44311F0(*(_QWORD *)(a5 + 56) + 32 * v15, (uint64_t)&v22);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v23 + 1))
  {
LABEL_8:
    sub_1A445404C((uint64_t)&v22, &qword_1ED243E68);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(a7, a4, a6);
  }
  sub_1A444A940(&v22, v24);
  sub_1A44311F0((uint64_t)v24, (uint64_t)&v22);
  sub_1A44C4B8C();
  if (swift_dynamicCast())
  {

LABEL_12:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(a7, a4, a6);
  }
  sub_1A44311F0((uint64_t)v24, (uint64_t)v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E68);
  swift_dynamicCast();
  if (!*((_QWORD *)&v23 + 1))
    goto LABEL_12;
  sub_1A445404C((uint64_t)&v22, &qword_1ED243E68);
  *(_QWORD *)&v22 = v13;
  *((_QWORD *)&v22 + 1) = v14;
  v20 = type metadata accessor for Dictionary<>.DeserializableValueType(0, a6, v18, v19);
  sub_1A44C4350((uint64_t)v24, a1, a2, v20, a7);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

_QWORD *sub_1A44C4B34@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1A44C3DD0(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

_QWORD *sub_1A44C4B50@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A44C3F90(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1A44C4B68(uint64_t a1)
{
  uint64_t v1;

  return sub_1A44C40D0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t type metadata accessor for Dictionary<>.DeserializableValueType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Dictionary<>.DeserializableValueType);
}

unint64_t sub_1A44C4B8C()
{
  unint64_t result;

  result = qword_1EE71E188[0];
  if (!qword_1EE71E188[0])
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, qword_1EE71E188);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for REMJSONType(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMJSONType(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMJSONType(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMJSONType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMJSONType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A44C4D00(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1A44C4D08(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for REMJSONType()
{
  return &type metadata for REMJSONType;
}

uint64_t dispatch thunk of REMJSONRepresentable.toJSON()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static REMJSONRepresentable.fromJSON(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1A44C4D58(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 - 1 <= 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for REMJSONDeserializationError(uint64_t a1)
{
  return sub_1A44C4D84(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1A44C4D84(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 - 1 <= 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s19ReminderKitInternal27REMJSONDeserializationErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A44C4D58(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for REMJSONDeserializationError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A44C4D58(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A44C4D84(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for REMJSONDeserializationError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A44C4D84(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtendedDiff.Element(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtendedDiff.Element(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A44C4F0C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1A44C4F24(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for REMJSONDeserializationError()
{
  return &type metadata for REMJSONDeserializationError;
}

uint64_t sub_1A44C4F4C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A44C4F54(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 16382);
  v3 = (((*(_QWORD *)(a1 + 8) >> 50) >> 12) | (4
                                                           * ((*(_QWORD *)(a1 + 8) >> 50) & 0xC00 | ((*(_QWORD *)(a1 + 8) & 7) << 7) | (*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7))) ^ 0x3FFF;
  if (v3 >= 0x3FFD)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_1A44C4FCC(uint64_t result, unsigned int a2, unsigned int a3)
{
  unint64_t v3;

  if (a2 > 0x3FFD)
  {
    *(_QWORD *)result = a2 - 16382;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3FFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x3FFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0xFFF | ((-a2 & 0x3FFF) << 12);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_QWORD *)(result + 8) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A44C5038(_QWORD *a1)
{
  uint64_t v1;

  v1 = a1[1] >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

uint64_t sub_1A44C5054(uint64_t result)
{
  *(_QWORD *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

_QWORD *sub_1A44C5064(_QWORD *result, uint64_t a2)
{
  uint64_t v2;

  if (a2 < 2)
  {
    v2 = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
    *result &= 0xFFFFFFFFFFFFFF8uLL;
    result[1] = v2;
  }
  else
  {
    *result = 8 * (a2 - 2);
    result[1] = 0x8000000000000000;
  }
  return result;
}

uint64_t sub_1A44C5094(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1A44C3BCC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_1A44C50B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE71E228;
  if (!qword_1EE71E228)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED23EAC0);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE71E228);
  }
  return result;
}

uint64_t sub_1A44C5100(uint64_t a1)
{
  return sub_1A44C4B68(a1);
}

uint64_t Sequence.unique<A>(by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD v18[12];
  uint64_t v19;

  v13 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1A46906E4();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v6, a3);
  v18[4] = a3;
  v18[5] = a4;
  v18[6] = a5;
  v18[7] = a6;
  v18[8] = a1;
  v18[9] = a2;
  v18[10] = &v19;
  v16 = sub_1A4690AC8();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1A44C520C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(uint64_t);
  char v20;
  int v21;
  void (*v22)(char *, uint64_t);
  _QWORD v24[2];
  int v25;

  v9 = *(_QWORD *)(a6 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)v24 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)v24 - v17;
  v19(v16);
  if (!v6)
  {
    v24[1] = a4;
    swift_bridgeObjectRetain();
    v21 = sub_1A4690DBC();
    swift_bridgeObjectRelease();
    v25 = v21;
    if ((v21 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v18, a6);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v18, a6);
      sub_1A4690DC8();
      sub_1A4690DA4();
      v22 = *(void (**)(char *, uint64_t))(v9 + 8);
      v22(v15, a6);
      v22(v18, a6);
    }
    v20 = v25 ^ 1;
  }
  return v20 & 1;
}

uint64_t sub_1A44C5378(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A44C520C(a1, v1[6], v1[7], v1[8], v1[2], v1[3]) & 1;
}

uint64_t Sequence<>.unique()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  _QWORD v8[6];

  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return Sequence.unique<A>(by:)((uint64_t)sub_1A44C541C, (uint64_t)v8, a1, AssociatedTypeWitness, a2, a3);
}

uint64_t sub_1A44C541C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
}

uint64_t Sequence<>.mapToDict()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t AssociatedConformanceWitness;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v38 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v7 = (char *)&v33 - v6;
  v8 = sub_1A46911A0();
  v9 = MEMORY[0x1E0C80A78](v8);
  v37 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v33 - v12;
  v14 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v34 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v33 - v18;
  v42 = sub_1A46906C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v39, a1);
  sub_1A4690A68();
  v20 = v17;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1A46911B8();
  v39 = v5;
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v22(v13, 1, AssociatedTypeWitness) != 1)
  {
    v35 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
    v36 = v13;
    v23 = v37;
    do
    {
      v35(v7, v13, AssociatedTypeWitness);
      v24 = (*(uint64_t (**)(uint64_t))(v38 + 8))(AssociatedTypeWitness);
      v25 = AssociatedConformanceWitness;
      v26 = v19;
      v27 = v20;
      v29 = v28;
      v30 = v39;
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v23, v7, AssociatedTypeWitness);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v23, 0, 1, AssociatedTypeWitness);
      v40 = v24;
      v41 = v29;
      v20 = v27;
      v19 = v26;
      AssociatedConformanceWitness = v25;
      sub_1A469078C();
      sub_1A46907BC();
      v31 = *(void (**)(char *, uint64_t))(v30 + 8);
      v13 = v36;
      v31(v7, AssociatedTypeWitness);
      sub_1A46911B8();
    }
    while (v22(v13, 1, AssociatedTypeWitness) != 1);
  }
  (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v20);
  return v42;
}

uint64_t REMTextMemberships.rem_baseForChecksum()()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t result;
  uint64_t v26[4];

  v2 = v0;
  v26[3] = *MEMORY[0x1E0C80C00];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, sel_memberships);
  sub_1A44C5ADC();
  sub_1A4690708();

  v7 = swift_bridgeObjectRetain();
  v8 = sub_1A4459DDC(v7);
  swift_bridgeObjectRelease();
  v26[0] = (uint64_t)v8;
  sub_1A44C5F80(v26);
  if (v1)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v9 = v26[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243000);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1A4695C10;
    v26[0] = 0;
    v26[1] = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    strcpy((char *)v26, "lastResetDate:");
    HIBYTE(v26[1]) = -18;
    v11 = objc_msgSend(v0, sel_lastResetDate);
    if (v11)
    {
      v12 = v11;
      sub_1A4690084();

      v13 = sub_1A46900B4();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 0, 1, v13);
    }
    else
    {
      v14 = sub_1A46900B4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
    }
    sub_1A46908E8();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    v15 = v26[1];
    *(_QWORD *)(v10 + 32) = v26[0];
    *(_QWORD *)(v10 + 40) = v15;
    v26[2] = v10;
    v16 = v2;
    v17 = sub_1A44C6B74(v9, v16);
    swift_release();

    v18 = sub_1A4458C1C((uint64_t)v17);
    v19 = (void *)MEMORY[0x1A859F880](v18);
    v20 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v21 = (void *)sub_1A4690B94();
    swift_bridgeObjectRelease();
    v26[0] = 0;
    v22 = objc_msgSend(v20, sel_dataWithJSONObject_options_error_, v21, 0, v26);

    v23 = (id)v26[0];
    if (v22)
    {
      v24 = (void *)sub_1A468FFC4();

    }
    else
    {
      v24 = v23;
      sub_1A468FE68();

      swift_willThrow();
    }
    objc_autoreleasePoolPop(v19);
    swift_bridgeObjectRelease();
    return (uint64_t)v24;
  }
  return result;
}

unint64_t sub_1A44C5ADC()
{
  unint64_t result;

  result = qword_1EE71E230;
  if (!qword_1EE71E230)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE71E230);
  }
  return result;
}

void sub_1A44C5B18(id a1@<X1>, uint64_t *a2@<X0>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;

  v5 = *a2;
  v4 = a2[1];
  v6 = objc_msgSend(a1, sel_memberships);
  sub_1A44C5ADC();
  v7 = sub_1A4690708();

  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_1A443E4C8(v5, v4);
    if ((v9 & 1) != 0)
    {
      v10 = *(void **)(*(_QWORD *)(v7 + 56) + 8 * v8);
      v11 = v10;
    }
    else
    {
      v10 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  swift_bridgeObjectRelease();
  v13 = v5;
  swift_bridgeObjectRetain();
  sub_1A4690984();
  if (v10)
  {
    v12 = v10;
    sub_1A44C6A34((uint64_t)&unk_1E4C0DDA8, v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    sub_1A4469630();
    sub_1A4690828();

    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439C0);
  sub_1A46908E8();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();

  *a3 = v13;
  a3[1] = v4;
}

uint64_t sub_1A44C5CDC()
{
  return REMTextMemberships.rem_baseForChecksum()();
}

uint64_t sub_1A44C5CFC@<X0>(_BYTE *a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v21 - v10;
  if ((*a1 & 1) != 0)
  {
    v12 = objc_msgSend(a2, sel_modifiedOn);
    v25[3] = sub_1A46900B4();
    __swift_allocate_boxed_opaque_existential_0(v25);
    sub_1A4690084();

  }
  else
  {
    v13 = objc_msgSend(a2, sel_identifier);
    if (v13)
    {
      v14 = v13;
      sub_1A46900F0();

      v15 = sub_1A46900FC();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 0, 1, v15);
    }
    else
    {
      v15 = sub_1A46900FC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 1, 1, v15);
    }
    sub_1A44C6CC8((uint64_t)v9, (uint64_t)v11, &qword_1ED243170);
    sub_1A46900FC();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15) == 1)
    {
      sub_1A445404C((uint64_t)v11, &qword_1ED243170);
      v21 = 0u;
      v22 = 0u;
    }
    else
    {
      *((_QWORD *)&v22 + 1) = v15;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v21);
      (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 32))(boxed_opaque_existential_0, v11, v15);
    }
    sub_1A44C6CC8((uint64_t)&v21, (uint64_t)v25, &qword_1ED243E68);
  }
  v23 = 0;
  v24 = 0xE000000000000000;
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  sub_1A44B1284((uint64_t)v25, (uint64_t)&v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E68);
  sub_1A46908E8();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  v18 = v23;
  v19 = v24;
  result = sub_1A445404C((uint64_t)v25, &qword_1ED243E68);
  *a3 = v18;
  a3[1] = v19;
  return result;
}

uint64_t sub_1A44C5F80(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A462EBDC(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1A44C5FE8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A44C5FE8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_1A46918CC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1A44C66D0(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_1A44C679C((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1A462EBC8((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1A4690C00();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (*v17 == v15 && v17[1] == v16)
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_1A4691A40();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*v23 == *(v21 - 1) && v23[1] == *v21)
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_1A4691A40()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1A462E5B0(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_1A462E5B0((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_1A44C679C((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = *(v38 - 2) == v35 && *(v38 - 1) == v36;
          if (v39 || (sub_1A4691A40() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t sub_1A44C66D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    v10 = *v9;
    v11 = v9[1];
    v12 = v6;
    v13 = (_QWORD *)v8;
    while (1)
    {
      result = *(v13 - 2);
      v14 = result == v10 && *(v13 - 1) == v11;
      if (v14 || (result = sub_1A4691A40(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      v10 = *v13;
      v11 = v13[1];
      *(_OWORD *)v13 = *((_OWORD *)v13 - 1);
      *(v13 - 1) = v11;
      *(v13 - 2) = v10;
      v13 -= 2;
      if (v4 == ++v12)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A44C679C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = v21 == *((_QWORD *)v17 - 2) && v22 == *((_QWORD *)v17 - 1);
          if (v23 || (sub_1A4691A40() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v4 == *(_QWORD *)v6 && *((_QWORD *)v4 + 1) == *((_QWORD *)v6 + 1);
        if (v15 || (sub_1A4691A40() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_1A462E6A8((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

_QWORD *sub_1A44C6A34(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v16 = *(_BYTE *)(a1 + v5 + 32);
    sub_1A44C5CFC(&v16, a2, &v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    v8 = v15;
    if (v15)
    {
      v9 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_1A4438920(0, v6[2] + 1, 1, v6);
      v11 = v6[2];
      v10 = v6[3];
      if (v11 >= v10 >> 1)
        v6 = sub_1A4438920((_QWORD *)(v10 > 1), v11 + 1, 1, v6);
      v6[2] = v11 + 1;
      v7 = &v6[2 * v11];
      v7[4] = v9;
      v7[5] = v8;
    }
    ++v5;
  }
  while (v3 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

_QWORD *sub_1A44C6B74(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[2];
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v17 = swift_bridgeObjectRetain();
  v5 = (uint64_t *)(v17 + 40);
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v8 = *v5;
    v16[0] = *(v5 - 1);
    v16[1] = v8;
    swift_bridgeObjectRetain();
    sub_1A44C5B18(a2, v16, &v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    swift_bridgeObjectRelease();
    v9 = v15;
    if (v15)
    {
      v10 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_1A4438920(0, v6[2] + 1, 1, v6);
      v12 = v6[2];
      v11 = v6[3];
      if (v12 >= v11 >> 1)
        v6 = sub_1A4438920((_QWORD *)(v11 > 1), v12 + 1, 1, v6);
      v6[2] = v12 + 1;
      v7 = &v6[2 * v12];
      v7[4] = v10;
      v7[5] = v9;
    }
    v5 += 2;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1A44C6CC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t CLAuthorizationStatus.description.getter(int a1)
{
  unint64_t result;

  result = 0x7265746544746F6ELL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x7463697274736572;
      break;
    case 2:
      result = 0x6465696E6564;
      break;
    case 3:
      result = 0xD000000000000010;
      break;
    case 4:
      result = 0xD000000000000013;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

unint64_t sub_1A44C6DD8()
{
  int *v0;

  return CLAuthorizationStatus.description.getter(*v0);
}

uint64_t CLAccuracyAuthorization.description.getter(uint64_t a1)
{
  uint64_t v1;

  v1 = 0x6E776F6E6B6E75;
  if (a1 == 1)
    v1 = 0x4164656375646572;
  if (a1)
    return v1;
  else
    return 0x756363416C6C7566;
}

uint64_t sub_1A44C6E4C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = 0x6E776F6E6B6E75;
  if (*v0 == 1)
    v1 = 0x4164656375646572;
  if (*v0)
    return v1;
  else
    return 0x756363416C6C7566;
}

uint64_t sub_1A44C6EBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void (*v14)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE v16[32];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A44311F0(a1, (uint64_t)v16);
  v11 = sub_1A46900B4();
  v12 = swift_dynamicCast();
  v13 = *(_QWORD *)(v11 - 8);
  v14 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if ((v12 & 1) != 0)
  {
    v14(v10, 0, 1, v11);
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v13 + 32))(a4, v10, v11);
  }
  else
  {
    v14(v10, 1, 1, v11);
    sub_1A445404C((uint64_t)v10, &qword_1ED243190);
    sub_1A44311F0(a1, (uint64_t)v16);
    sub_1A459AC4C((uint64_t)v16, a2, a3);
    sub_1A445404C((uint64_t)v16, &qword_1ED243E68);
    return swift_willThrow();
  }
}

uint64_t sub_1A44C7010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  char v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE v15[32];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E240);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A44311F0(a1, (uint64_t)v15);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v12 = swift_dynamicCast();
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  if ((v12 & 1) != 0)
  {
    v13(v10, 0, 1, v11);
    return sub_1A44C6CC8((uint64_t)v10, a4, &qword_1ED243170);
  }
  else
  {
    v13(v10, 1, 1, v11);
    sub_1A445404C((uint64_t)v10, &qword_1EE71E240);
    sub_1A44311F0(a1, (uint64_t)v15);
    sub_1A459AC60((uint64_t)v15, a2, a3);
    sub_1A445404C((uint64_t)v15, &qword_1ED243E68);
    return swift_willThrow();
  }
}

uint64_t sub_1A44C7168(uint64_t a1, uint64_t a2, char *a3, unint64_t a4, uint64_t a5)
{
  unint64_t v10;
  char v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  _OWORD v16[2];

  if (!*(_QWORD *)(a5 + 16))
  {
    v14 = 0u;
    v15 = 0u;
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  v10 = sub_1A443E4C8(a1, a2);
  if ((v11 & 1) == 0)
  {
    v14 = 0u;
    v15 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1A44311F0(*(_QWORD *)(a5 + 56) + 32 * v10, (uint64_t)&v14);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v15 + 1))
  {
LABEL_7:
    sub_1A445404C((uint64_t)&v14, &qword_1ED243E68);
    sub_1A4473FBC();
    swift_allocError();
    *(_QWORD *)v12 = a1;
    *(_QWORD *)(v12 + 8) = a2;
    *(_BYTE *)(v12 + 16) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return a2;
  }
  sub_1A444A940(&v14, v16);
  a2 = sub_1A44C73DC((uint64_t)v16, a1, a2, a3, a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return a2;
}

uint64_t sub_1A44C72A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v12;
  char v13;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  _OWORD v18[2];

  if (*(_QWORD *)(a5 + 16))
  {
    swift_bridgeObjectRetain();
    v12 = sub_1A443E4C8(a1, a2);
    if ((v13 & 1) != 0)
    {
      sub_1A44311F0(*(_QWORD *)(a5 + 56) + 32 * v12, (uint64_t)&v16);
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v17 + 1))
      {
        sub_1A444A940(&v16, v18);
        sub_1A44C80E0((uint64_t)v18, a1, a2, a3, a4, a6);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      }
    }
    else
    {
      v16 = 0u;
      v17 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  sub_1A445404C((uint64_t)&v16, &qword_1ED243E68);
  sub_1A4473FBC();
  swift_allocError();
  *(_QWORD *)v15 = a1;
  *(_QWORD *)(v15 + 8) = a2;
  *(_BYTE *)(v15 + 16) = 1;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_1A44C73DC(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, unint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v18;
  _QWORD v19[6];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v8);
  v14 = sub_1A46900FC();
  MEMORY[0x1E0C80A78](v14);
  v9 = sub_1A46900B4();
  MEMORY[0x1E0C80A78](v9);
  if (!(a5 >> 62))
  {
    sub_1A44311F0(a1, (uint64_t)v19);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EAC0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      a1 = sub_1A44C3B2C((uint64_t)a4, v18, a4, a5);
      swift_bridgeObjectRelease();
      if (v15)
        return a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E210);
      v10 = sub_1A4691584();
      swift_bridgeObjectRelease();
      v11 = (uint64_t *)&unk_1EE71E220;
      goto LABEL_9;
    }
LABEL_13:
    sub_1A4473FBC();
    swift_allocError();
    *(_QWORD *)v12 = a2;
    *(_QWORD *)(v12 + 8) = a3;
    *(_BYTE *)(v12 + 16) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return a1;
  }
  if (a5 >> 62 != 1)
    __asm { BR              X9 }
  sub_1A44311F0(a1, (uint64_t)v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  a1 = sub_1A44C3ED4();
  swift_bridgeObjectRelease();
  if (v15)
    return a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E210);
  v10 = sub_1A4691650();
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)&unk_1EE71E218;
LABEL_9:
  v19[3] = __swift_instantiateConcreteTypeFromMangledName(v11);
  v19[0] = v10;
  sub_1A44311F0((uint64_t)v19, (uint64_t)&v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E248);
  if (swift_dynamicCast())
  {
    a1 = v19[5];
  }
  else
  {
    sub_1A44311F0((uint64_t)v19, (uint64_t)&v18);
    sub_1A459A0D0((uint64_t)&v18, 0, 0);
    sub_1A445404C((uint64_t)&v18, &qword_1ED243E68);
    swift_willThrow();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return a1;
}

uint64_t sub_1A44C7A50(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, unint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  uint64_t v21;

  v21 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v8);
  v15 = sub_1A46900FC();
  MEMORY[0x1E0C80A78](v15);
  v9 = sub_1A46900B4();
  MEMORY[0x1E0C80A78](v9);
  if (!(a5 >> 62))
  {
    sub_1A44311F0(a1, (uint64_t)v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EAC0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      a1 = sub_1A44C3B2C((uint64_t)a4, v19, a4, a5);
      swift_bridgeObjectRelease();
      if (v16)
        return a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E210);
      v10 = sub_1A4691584();
      swift_bridgeObjectRelease();
      v11 = (uint64_t *)&unk_1EE71E220;
      goto LABEL_9;
    }
LABEL_13:
    sub_1A4473FBC();
    swift_allocError();
    v12 = v21;
    *(_QWORD *)v13 = a2;
    *(_QWORD *)(v13 + 8) = v12;
    *(_BYTE *)(v13 + 16) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return a1;
  }
  if (a5 >> 62 != 1)
    __asm { BR              X9 }
  sub_1A44311F0(a1, (uint64_t)v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  a1 = sub_1A44C3ED4();
  swift_bridgeObjectRelease();
  if (v16)
    return a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E210);
  v10 = sub_1A4691650();
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)&unk_1EE71E218;
LABEL_9:
  v20[3] = __swift_instantiateConcreteTypeFromMangledName(v11);
  v20[0] = v10;
  sub_1A44311F0((uint64_t)v20, (uint64_t)&v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E238);
  if (swift_dynamicCast())
  {
    a1 = v18;
  }
  else
  {
    sub_1A44311F0((uint64_t)v20, (uint64_t)&v19);
    sub_1A459AC38((uint64_t)&v19, 0, 0);
    sub_1A445404C((uint64_t)&v19, &qword_1ED243E68);
    swift_willThrow();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return a1;
}

uint64_t sub_1A44C80E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v21;
  _QWORD v22[4];
  char *v23;

  v23 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1A46900FC();
  MEMORY[0x1E0C80A78](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1A46900B4();
  v12 = MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  if (a5 >> 62)
  {
    if (a5 >> 62 != 1)
      __asm { BR              X9 }
    sub_1A44311F0(a1, (uint64_t)v22);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1A44C3ED4();
      result = swift_bridgeObjectRelease();
      if (v18)
        return result;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E210);
      v14 = sub_1A4691650();
      swift_bridgeObjectRelease();
      v15 = (uint64_t *)&unk_1EE71E218;
LABEL_9:
      v22[3] = __swift_instantiateConcreteTypeFromMangledName(v15);
      v22[0] = v14;
      sub_1A44C6EBC((uint64_t)v22, 0, 0, a6);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    }
  }
  else
  {
    sub_1A44311F0(a1, (uint64_t)v22);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EAC0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1A44C3B2C((uint64_t)v23, v21, v23, a5);
      result = swift_bridgeObjectRelease();
      if (v18)
        return result;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E210);
      v14 = sub_1A4691584();
      swift_bridgeObjectRelease();
      v15 = (uint64_t *)&unk_1EE71E220;
      goto LABEL_9;
    }
  }
  sub_1A4473FBC();
  swift_allocError();
  *(_QWORD *)v16 = a2;
  *(_QWORD *)(v16 + 8) = a3;
  *(_BYTE *)(v16 + 16) = 2;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

void sub_1A44C84C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_0;

  sub_1A44311F0(v1, v3 - 112);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1A46900C0();
    swift_bridgeObjectRelease();
    v5 = *(_QWORD *)(v3 - 176);
    v4 = *(_QWORD *)(v3 - 168);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0, 1, v4) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, v0, v4);
      *(_QWORD *)(v3 - 88) = v4;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v3 - 112));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(boxed_opaque_existential_0, v2, v4);
      sub_1A44C6EBC(v3 - 112, 0, 0, *(_QWORD *)(v3 - 160));
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
      JUMPOUT(0x1A44C83A8);
    }
    JUMPOUT(0x1A44C8464);
  }
  JUMPOUT(0x1A44C8468);
}

uint64_t sub_1A44C8688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[4];
  char *v30;

  v26 = a2;
  v30 = a4;
  v27 = a3;
  v24 = a6;
  v8 = sub_1A46900FC();
  v22 = *(_QWORD *)(v8 - 8);
  v23 = v8;
  MEMORY[0x1E0C80A78](v8);
  v20 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1A46900B4();
  MEMORY[0x1E0C80A78](v21);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E240);
  MEMORY[0x1E0C80A78](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v12 = MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  if (a5 >> 62)
  {
    if (a5 >> 62 != 1)
      __asm { BR              X9 }
    sub_1A44311F0(a1, (uint64_t)v29);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v13 = v25;
      sub_1A44C3ED4();
      result = swift_bridgeObjectRelease();
      if (v13)
        return result;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E210);
      v15 = sub_1A4691650();
      swift_bridgeObjectRelease();
      v16 = (uint64_t *)&unk_1EE71E218;
LABEL_9:
      v29[3] = __swift_instantiateConcreteTypeFromMangledName(v16);
      v29[0] = v15;
      sub_1A44C7010((uint64_t)v29, 0, 0, v24);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
  }
  else
  {
    sub_1A44311F0(a1, (uint64_t)v29);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EAC0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v17 = v25;
      sub_1A44C3B2C((uint64_t)v30, v28, v30, a5);
      result = swift_bridgeObjectRelease();
      if (v17)
        return result;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E210);
      v15 = sub_1A4691584();
      swift_bridgeObjectRelease();
      v16 = (uint64_t *)&unk_1EE71E220;
      goto LABEL_9;
    }
  }
  sub_1A4473FBC();
  swift_allocError();
  v18 = v27;
  *(_QWORD *)v19 = v26;
  *(_QWORD *)(v19 + 8) = v18;
  *(_BYTE *)(v19 + 16) = 2;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

void sub_1A44C8A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_0;

  sub_1A44311F0(v1, v2 - 112);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1A46900C0();
    swift_bridgeObjectRelease();
    v4 = *(_QWORD *)(v2 - 176);
    v3 = *(_QWORD *)(v2 - 168);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v0, 1, v3) != 1)
    {
      v5 = *(_QWORD *)(v2 - 192);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v5, v0, v3);
      *(_QWORD *)(v2 - 88) = v3;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v2 - 112));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(boxed_opaque_existential_0, v5, v3);
      sub_1A44C7010(v2 - 112, 0, 0, *(_QWORD *)(v2 - 160));
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
      JUMPOUT(0x1A44C8958);
    }
    JUMPOUT(0x1A44C8A18);
  }
  JUMPOUT(0x1A44C8A1CLL);
}

uint64_t sub_1A44C8C44(uint64_t a1, uint64_t a2, char *a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unint64_t v14;
  char v15;
  uint64_t v17;
  id v18[4];
  __int128 v19;
  __int128 v20;
  _OWORD v21[2];

  if (!*(_QWORD *)(a7 + 16))
  {
    v19 = 0u;
    v20 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v14 = sub_1A443E4C8(a1, a2);
  if ((v15 & 1) == 0)
  {
    v19 = 0u;
    v20 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1A44311F0(*(_QWORD *)(a7 + 56) + 32 * v14, (uint64_t)&v19);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v20 + 1))
  {
LABEL_8:
    sub_1A445404C((uint64_t)&v19, &qword_1ED243E68);
    return a5;
  }
  sub_1A444A940(&v19, v21);
  sub_1A44311F0((uint64_t)v21, (uint64_t)&v19);
  sub_1A444AA40(0, qword_1EE71E188);
  if (swift_dynamicCast())
  {

  }
  else
  {
    sub_1A44311F0((uint64_t)v21, (uint64_t)v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E68);
    swift_dynamicCast();
    if (*((_QWORD *)&v20 + 1))
    {
      sub_1A445404C((uint64_t)&v19, &qword_1ED243E68);
      v17 = sub_1A44C7A50((uint64_t)v21, a1, a2, a3, a4);
      if (!v7)
        a5 = v17;
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return a5;
}

uint64_t sub_1A44C8E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  unint64_t v14;
  char v15;
  id v17[4];
  __int128 v18;
  __int128 v19;
  _OWORD v20[2];

  if (!*(_QWORD *)(a6 + 16))
  {
    v18 = 0u;
    v19 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v14 = sub_1A443E4C8(a1, a2);
  if ((v15 & 1) == 0)
  {
    v18 = 0u;
    v19 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1A44311F0(*(_QWORD *)(a6 + 56) + 32 * v14, (uint64_t)&v18);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v19 + 1))
  {
LABEL_8:
    sub_1A445404C((uint64_t)&v18, &qword_1ED243E68);
    return sub_1A444ABF4(a5, a7, &qword_1ED243170);
  }
  sub_1A444A940(&v18, v20);
  sub_1A44311F0((uint64_t)v20, (uint64_t)&v18);
  sub_1A444AA40(0, qword_1EE71E188);
  if (swift_dynamicCast())
  {

LABEL_12:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    return sub_1A444ABF4(a5, a7, &qword_1ED243170);
  }
  sub_1A44311F0((uint64_t)v20, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E68);
  swift_dynamicCast();
  if (!*((_QWORD *)&v19 + 1))
    goto LABEL_12;
  sub_1A445404C((uint64_t)&v18, &qword_1ED243E68);
  sub_1A44C8688((uint64_t)v20, a1, a2, a3, a4, a7);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
}

unint64_t REMTextMemberships.toJSON()@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  uint64_t inited;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[128];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v24[-v9];
  v11 = objc_msgSend(v3, sel_memberships);
  sub_1A444AA40(0, (unint64_t *)&qword_1EE71E230);
  v12 = sub_1A4690708();

  v13 = sub_1A44C9B78(v12);
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A4696430;
    *(_QWORD *)(inited + 32) = 0x68737265626D656DLL;
    *(_QWORD *)(inited + 40) = 0xEB00000000737069;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
    *(_QWORD *)(inited + 48) = v13;
    *(_QWORD *)(inited + 72) = v16;
    strcpy((char *)(inited + 80), "lastResetDate");
    *(_WORD *)(inited + 94) = -4864;
    *(_QWORD *)(inited + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E238);
    v17 = objc_msgSend(v3, sel_lastResetDate);
    if (v17)
    {
      v18 = v17;
      sub_1A4690084();

      v19 = sub_1A46900B4();
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 0, 1, v19);
    }
    else
    {
      v19 = sub_1A46900B4();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
    }
    sub_1A44C6CC8((uint64_t)v8, (uint64_t)v10, &qword_1ED243190);
    sub_1A46900B4();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v20 + 48))(v10, 1, v19);
    if (v21 == 1)
    {
      sub_1A445404C((uint64_t)v10, &qword_1ED243190);
      v22 = 0;
    }
    else
    {
      sub_1A468FFE8();
      v22 = v23;
      (*(void (**)(_BYTE *, uint64_t))(v20 + 8))(v10, v19);
    }
    *(_QWORD *)(inited + 96) = v22;
    *(_BYTE *)(inited + 104) = v21 == 1;
    result = sub_1A443CDB8(inited);
    *(_QWORD *)a1 = result;
    *(_BYTE *)(a1 + 8) = 0;
  }
  return result;
}

char *static REMTextMemberships.fromJSON(_:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    sub_1A4473FBC();
    swift_allocError();
    *(_QWORD *)v9 = 0;
    *(_QWORD *)(v9 + 8) = 0;
    *(_BYTE *)(v9 + 16) = 3;
    swift_willThrow();
    return v6;
  }
  v10 = *(_QWORD *)a1;
  sub_1A44C8C44(0x657365527473616CLL, 0xED00006574614474, (char *)0x18, 0x8000000000000000, 0, 1, v10);
  if (v1)
  {

  }
  else if ((v11 & 1) == 0)
  {
    sub_1A468FFDC();
    v12 = sub_1A46900B4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
    goto LABEL_8;
  }
  v13 = sub_1A46900B4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 1, 1, v13);
LABEL_8:
  v14 = (char *)sub_1A444AA40(0, (unint64_t *)&qword_1EE71E230);
  sub_1A44C7168(0x68737265626D656DLL, 0xEB00000000737069, v14, 0x40000001E4C18F50uLL, v10);
  sub_1A444ABF4((uint64_t)v8, (uint64_t)v6, &qword_1ED243190);
  v16 = (void *)sub_1A46906F0();
  swift_bridgeObjectRelease();
  v17 = sub_1A46900B4();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v6, 1, v17) != 1)
  {
    v19 = (void *)sub_1A4690030();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v17);
  }
  v6 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithMemberships_lastResetDate_, v16, v19);

  sub_1A445404C((uint64_t)v8, &qword_1ED243190);
  return v6;
}

unint64_t sub_1A44C952C@<X0>(uint64_t a1@<X8>)
{
  return REMTextMemberships.toJSON()(a1);
}

char *sub_1A44C954C@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;
  char *result;

  result = static REMTextMemberships.fromJSON(_:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

unint64_t REMTimestampedUUID.toJSON()@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t inited;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v27 = a1;
  v26 = sub_1A46900B4();
  v28 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v25 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4696430;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  *(_QWORD *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439C0);
  v12 = objc_msgSend(v2, sel_identifier);
  if (v12)
  {
    v13 = v12;
    sub_1A46900F0();

    v14 = sub_1A46900FC();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 0, 1, v14);
  }
  else
  {
    v14 = sub_1A46900FC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
  }
  sub_1A44C6CC8((uint64_t)v8, (uint64_t)v10, &qword_1ED243170);
  sub_1A46900FC();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14) == 1)
  {
    sub_1A445404C((uint64_t)v10, &qword_1ED243170);
    v16 = 0;
    v17 = 0;
  }
  else
  {
    v16 = sub_1A46900CC();
    v17 = v18;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v14);
  }
  v20 = v26;
  v19 = v27;
  *(_QWORD *)(inited + 48) = v16;
  *(_QWORD *)(inited + 56) = v17;
  *(_QWORD *)(inited + 80) = 0x6465696669646F6DLL;
  *(_QWORD *)(inited + 88) = 0xEA00000000006E4FLL;
  v21 = objc_msgSend(v2, sel_modifiedOn);
  sub_1A4690084();

  sub_1A468FFE8();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v20);
  *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 96) = v23;
  result = sub_1A443CDB8(inited);
  *(_QWORD *)v19 = result;
  *(_BYTE *)(v19 + 8) = 0;
  return result;
}

id static REMTimestampedUUID.fromJSON(_:)(uint64_t a1)
{
  id v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v27;
  id v28;
  char *v29;
  void *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v3 = sub_1A46900B4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v33 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v33 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v33 - v17;
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    sub_1A4473FBC();
    swift_allocError();
    *(_QWORD *)v19 = 0;
    *(_QWORD *)(v19 + 8) = 0;
    *(_BYTE *)(v19 + 16) = 3;
    swift_willThrow();
  }
  else
  {
    v35 = v3;
    v36 = v9;
    v33 = v7;
    v34 = v4;
    v20 = *(_QWORD *)a1;
    v21 = sub_1A46900FC();
    v22 = *(_QWORD *)(v21 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v16, 1, 1, v21);
    v23 = v37;
    sub_1A44C8E04(0x696669746E656469, 0xEA00000000007265, (char *)0x30, 0x8000000000000000, (uint64_t)v16, v20, (uint64_t)v18);
    sub_1A445404C((uint64_t)v16, &qword_1ED243170);
    if (!v23)
    {
      v24 = v22;
      v25 = (uint64_t)v36;
      sub_1A44C72A0(0x6465696669646F6DLL, 0xEA00000000006E4FLL, (char *)0x28, 0x8000000000000000, v20, (uint64_t)v36);
      sub_1A444ABF4((uint64_t)v18, (uint64_t)v13, &qword_1ED243170);
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, v25, v35);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v13, 1, v21) == 1)
      {
        v27 = 0;
      }
      else
      {
        v27 = (void *)sub_1A46900D8();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v21);
      }
      v28 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      v29 = v33;
      v30 = (void *)sub_1A4690030();
      v1 = objc_msgSend(v28, sel_initWithIdentifier_modifiedOn_, v27, v30);

      v31 = v35;
      v32 = *(void (**)(char *, uint64_t))(v34 + 8);
      v32(v29, v35);
      v32((char *)v25, v31);
      sub_1A445404C((uint64_t)v18, &qword_1ED243170);
    }
  }
  return v1;
}

unint64_t sub_1A44C9B30@<X0>(uint64_t a1@<X8>)
{
  return REMTimestampedUUID.toJSON()(a1);
}

id sub_1A44C9B50@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = static REMTimestampedUUID.fromJSON(_:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A44C9B78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  void *v22;
  uint64_t inited;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  _BYTE v45[16];
  uint64_t v46;
  int64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;

  v54 = sub_1A46900B4();
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v52 = &v45[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v45[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v51 = &v45[-v7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBD0);
  result = sub_1A46916BC();
  v9 = result;
  v10 = 0;
  v55 = a1;
  v11 = *(_QWORD *)(a1 + 64);
  v46 = a1 + 64;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v47 = (unint64_t)(v12 + 63) >> 6;
  v49 = result + 64;
  v48 = xmmword_1A4696430;
  v50 = result;
  if (!v14)
    goto LABEL_5;
LABEL_4:
  v56 = (v14 - 1) & v14;
  for (i = __clz(__rbit64(v14)) | (v10 << 6); ; i = __clz(__rbit64(v17)) + (v10 << 6))
  {
    v19 = *(_QWORD *)(v55 + 56);
    v20 = (uint64_t *)(*(_QWORD *)(v55 + 48) + 16 * i);
    v21 = v20[1];
    v59 = *v20;
    v22 = *(void **)(v19 + 8 * i);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v48;
    *(_QWORD *)(inited + 32) = 0x696669746E656469;
    *(_QWORD *)(inited + 40) = 0xEA00000000007265;
    *(_QWORD *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439C0);
    swift_bridgeObjectRetain();
    v24 = v22;
    v25 = objc_msgSend(v24, sel_identifier);
    v58 = v21;
    if (v25)
    {
      v26 = v25;
      sub_1A46900F0();

      v27 = sub_1A46900FC();
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v6, 0, 1, v27);
    }
    else
    {
      v27 = sub_1A46900FC();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v6, 1, 1, v27);
    }
    v28 = v6;
    v29 = v51;
    sub_1A44C6CC8((uint64_t)v6, (uint64_t)v51, &qword_1ED243170);
    sub_1A46900FC();
    v30 = *(_QWORD *)(v27 - 8);
    v31 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v30 + 48))(v29, 1, v27);
    v57 = v10;
    if (v31 == 1)
    {
      sub_1A445404C((uint64_t)v29, &qword_1ED243170);
      v32 = 0;
      v33 = 0;
    }
    else
    {
      v32 = sub_1A46900CC();
      v33 = v34;
      (*(void (**)(_BYTE *, uint64_t))(v30 + 8))(v29, v27);
    }
    v6 = v28;
    v35 = v58;
    *(_QWORD *)(inited + 48) = v32;
    *(_QWORD *)(inited + 56) = v33;
    *(_QWORD *)(inited + 80) = 0x6465696669646F6DLL;
    *(_QWORD *)(inited + 88) = 0xEA00000000006E4FLL;
    v36 = objc_msgSend(v24, sel_modifiedOn);
    v37 = v52;
    sub_1A4690084();

    sub_1A468FFE8();
    v39 = v38;
    (*(void (**)(_BYTE *, uint64_t))(v53 + 8))(v37, v54);
    *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(inited + 96) = v39;
    v40 = sub_1A443CDB8(inited);
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);

    *(_QWORD *)&v60 = v40;
    *(_QWORD *)(v49 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v9 = v50;
    v41 = (_QWORD *)(*(_QWORD *)(v50 + 48) + 16 * i);
    *v41 = v59;
    v41[1] = v35;
    result = (uint64_t)sub_1A444A940(&v60, (_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * i));
    v42 = *(_QWORD *)(v9 + 16);
    v43 = __OFADD__(v42, 1);
    v44 = v42 + 1;
    if (v43)
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    *(_QWORD *)(v9 + 16) = v44;
    v10 = v57;
    v14 = v56;
    if (v56)
      goto LABEL_4;
LABEL_5:
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_30;
    if (v16 >= v47)
      return v9;
    v17 = *(_QWORD *)(v46 + 8 * v16);
    ++v10;
    if (!v17)
    {
      v10 = v16 + 1;
      if (v16 + 1 >= v47)
        return v9;
      v17 = *(_QWORD *)(v46 + 8 * v10);
      if (!v17)
      {
        v10 = v16 + 2;
        if (v16 + 2 >= v47)
          return v9;
        v17 = *(_QWORD *)(v46 + 8 * v10);
        if (!v17)
          break;
      }
    }
LABEL_18:
    v56 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v47)
    return v9;
  v17 = *(_QWORD *)(v46 + 8 * v18);
  if (v17)
  {
    v10 = v18;
    goto LABEL_18;
  }
  while (1)
  {
    v10 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v10 >= v47)
      return v9;
    v17 = *(_QWORD *)(v46 + 8 * v10);
    ++v18;
    if (v17)
      goto LABEL_18;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t URLQueryItemValueDirectStringInitializable.init(queryItemString:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v10 = sub_1A46911A0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v17 - v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 24))(a1, a2, a3, a4);
  v14 = *(_QWORD *)(a3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a3))
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v15 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a5, v13, a3);
    v15 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a5, v15, 1, a3);
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> URLQueryItemValueDirectStringInitializable.queryItemStringRepresentation()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  sub_1A4691A10();
  v0 = 0;
  v1 = (void *)0xE000000000000000;
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t sub_1A44CA218@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1A4690A50();
  *a1 = result;
  a1[1] = v3;
  return result;
}

double sub_1A44CA264@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_1A44CA218((uint64_t *)&v3);
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1A44CA2A0()
{
  sub_1A4691590();
  return 0;
}

uint64_t sub_1A44CA2FC@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  int v18;
  unsigned __int8 *v19;
  unsigned int v20;
  int v21;
  char v22;
  _QWORD v23[3];

  v5 = HIBYTE(a2) & 0xF;
  v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v7 = v5;
  else
    v7 = result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    result = swift_bridgeObjectRelease();
    v22 = 0;
    LOBYTE(v10) = 1;
LABEL_40:
    *a3 = v22;
    a3[1] = v10;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v9 = sub_1A44CD3B0(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A44CC94C);
    result = swift_bridgeObjectRelease();
    v10 = (v9 >> 8) & 1;
LABEL_37:
    if (v10)
      v22 = 0;
    else
      v22 = v9;
    goto LABEL_40;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_1A46914E8();
    v9 = sub_1A44CC94C(v8, v6, 10);
    v10 = (v9 >> 8) & 1;
    goto LABEL_36;
  }
  v23[0] = result;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v5)
    {
      v15 = v5 - 1;
      if (v15)
      {
        LOBYTE(v9) = 0;
        v16 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v17 = *v16 - 48;
          if (v17 > 9)
            break;
          v18 = (char)(10 * v9);
          if (v18 != 10 * (char)v9)
            break;
          v9 = v18 + (char)v17;
          if ((char)(v18 + v17) != v9)
            break;
          v10 = 0;
          ++v16;
          if (!--v15)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v5)
      {
        LOBYTE(v9) = 0;
        v19 = (unsigned __int8 *)v23;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            break;
          v21 = (char)(10 * v9);
          if (v21 != 10 * (char)v9)
            break;
          v9 = v21 + (char)v20;
          if ((char)(v21 + v20) != v9)
            break;
          v10 = 0;
          ++v19;
          if (!--v5)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
    if (v5)
    {
      v11 = v5 - 1;
      if (v11)
      {
        LOBYTE(v9) = 0;
        v12 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v13 = *v12 - 48;
          if (v13 > 9)
            break;
          v14 = (char)(10 * v9);
          if (v14 != 10 * (char)v9)
            break;
          v9 = v14 - (char)v13;
          if ((char)(v14 - v13) != v9)
            break;
          v10 = 0;
          ++v12;
          if (!--v11)
            goto LABEL_36;
        }
      }
LABEL_35:
      LOBYTE(v9) = 0;
      v10 = 1;
LABEL_36:
      result = swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A44CA518@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A44CE0C0(a1, a2);
  *a3 = result;
  a3[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_1A44CA544()
{
  return sub_1A44CAE80();
}

uint64_t sub_1A44CA558@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  int v18;
  unsigned __int8 *v19;
  unsigned int v20;
  int v21;
  __int16 v22;
  _QWORD v23[3];

  v5 = HIBYTE(a2) & 0xF;
  v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v7 = v5;
  else
    v7 = result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    result = swift_bridgeObjectRelease();
    v22 = 0;
    LOBYTE(v10) = 1;
LABEL_40:
    *(_WORD *)a3 = v22;
    *(_BYTE *)(a3 + 2) = v10;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v9 = sub_1A44CD744(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A44CCC00);
    result = swift_bridgeObjectRelease();
    v10 = HIWORD(v9) & 1;
LABEL_37:
    if (v10)
      v22 = 0;
    else
      v22 = v9;
    goto LABEL_40;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_1A46914E8();
    v9 = sub_1A44CCC00(v8, v6, 10);
    v10 = HIWORD(v9) & 1;
    goto LABEL_36;
  }
  v23[0] = result;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v5)
    {
      v15 = v5 - 1;
      if (v15)
      {
        LOWORD(v9) = 0;
        v16 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v17 = *v16 - 48;
          if (v17 > 9)
            break;
          v18 = (__int16)(10 * v9);
          if (v18 != 10 * (__int16)v9)
            break;
          v9 = v18 + v17;
          if ((__int16)(v18 + v17) != v9)
            break;
          v10 = 0;
          ++v16;
          if (!--v15)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v5)
      {
        LOWORD(v9) = 0;
        v19 = (unsigned __int8 *)v23;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            break;
          v21 = (__int16)(10 * v9);
          if (v21 != 10 * (__int16)v9)
            break;
          v9 = v21 + v20;
          if ((__int16)(v21 + v20) != v9)
            break;
          v10 = 0;
          ++v19;
          if (!--v5)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
    if (v5)
    {
      v11 = v5 - 1;
      if (v11)
      {
        LOWORD(v9) = 0;
        v12 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v13 = *v12 - 48;
          if (v13 > 9)
            break;
          v14 = (__int16)(10 * v9);
          if (v14 != 10 * (__int16)v9)
            break;
          v9 = v14 - v13;
          if ((__int16)(v14 - v13) != v9)
            break;
          v10 = 0;
          ++v12;
          if (!--v11)
            goto LABEL_36;
        }
      }
LABEL_35:
      LOWORD(v9) = 0;
      v10 = 1;
LABEL_36:
      result = swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A44CA774@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;

  result = sub_1A44CE2D8(a1, a2);
  *(_WORD *)a3 = result;
  *(_BYTE *)(a3 + 2) = BYTE2(result) & 1;
  return result;
}

uint64_t sub_1A44CA7A0()
{
  return sub_1A44CB118();
}

uint64_t sub_1A44CA7B4@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  _QWORD v25[2];
  char v26;

  v5 = HIBYTE(a2) & 0xF;
  v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v7 = v5;
  else
    v7 = result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    result = swift_bridgeObjectRelease();
    v24 = 0;
    LOBYTE(v23) = 1;
LABEL_40:
    *(_DWORD *)a3 = v24;
    *(_BYTE *)(a3 + 4) = v23;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v10 = sub_1A44CDAD4(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A44CCEB4);
    result = swift_bridgeObjectRelease();
    v23 = HIDWORD(v10) & 1;
LABEL_37:
    if ((_DWORD)v23)
      v24 = 0;
    else
      v24 = v10;
    goto LABEL_40;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_1A46914E8();
    v9 = sub_1A44CCEB4(v8, v6, 10);
    LODWORD(v10) = (_DWORD)v9;
    v26 = BYTE4(v9) & 1;
    v11 = BYTE4(v9) & 1;
    goto LABEL_36;
  }
  v25[0] = result;
  v25[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v5)
    {
      v16 = v5 - 1;
      if (v16)
      {
        LODWORD(v10) = 0;
        v17 = (unsigned __int8 *)v25 + 1;
        while (1)
        {
          v18 = *v17 - 48;
          if (v18 > 9)
            break;
          v19 = 10 * (int)v10;
          if (v19 != (int)v19)
            break;
          LODWORD(v10) = v19 + v18;
          if (__OFADD__((_DWORD)v19, v18))
            break;
          v11 = 0;
          ++v17;
          if (!--v16)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v5)
      {
        LODWORD(v10) = 0;
        v20 = (unsigned __int8 *)v25;
        while (1)
        {
          v21 = *v20 - 48;
          if (v21 > 9)
            break;
          v22 = 10 * (int)v10;
          if (v22 != (int)v22)
            break;
          LODWORD(v10) = v22 + v21;
          if (__OFADD__((_DWORD)v22, v21))
            break;
          v11 = 0;
          ++v20;
          if (!--v5)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
    if (v5)
    {
      v12 = v5 - 1;
      if (v12)
      {
        LODWORD(v10) = 0;
        v13 = (unsigned __int8 *)v25 + 1;
        while (1)
        {
          v14 = *v13 - 48;
          if (v14 > 9)
            break;
          v15 = 10 * (int)v10;
          if (v15 != (int)v15)
            break;
          LODWORD(v10) = v15 - v14;
          if (__OFSUB__((_DWORD)v15, v14))
            break;
          v11 = 0;
          ++v13;
          if (!--v12)
            goto LABEL_36;
        }
      }
LABEL_35:
      LODWORD(v10) = 0;
      v11 = 1;
LABEL_36:
      result = swift_bridgeObjectRelease();
      LODWORD(v23) = v11 & 1;
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1A44CA9AC@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t result;

  result = sub_1A44CE4F0(a1, a2);
  *(_DWORD *)a3 = result;
  *(_BYTE *)(a3 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_1A44CA9D8()
{
  return sub_1A44CB398();
}

uint64_t sub_1A44CA9EC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A44CAA40(a1, a2, (uint64_t (*)(uint64_t))sub_1A45D828C, a3);
}

uint64_t sub_1A44CA9F8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  char v5;

  result = sub_1A44CE6EC(a1, a2, (uint64_t (*)(uint64_t))sub_1A45D828C);
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = v5 & 1;
  return result;
}

uint64_t sub_1A44CAA2C()
{
  return sub_1A44CB638();
}

uint64_t sub_1A44CAA40@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  _QWORD v26[3];

  v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) != 0)
    v6 = HIBYTE(a2) & 0xF;
  else
    v6 = result & 0xFFFFFFFFFFFFLL;
  if (!v6)
  {
    result = swift_bridgeObjectRelease();
    v24 = 0;
    v23 = 1;
LABEL_39:
    *(_QWORD *)a4 = v24;
    *(_BYTE *)(a4 + 8) = v23 & 1;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v9 = sub_1A44CC85C(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A44CD134);
    v11 = v25;
LABEL_36:
    result = swift_bridgeObjectRelease();
    v23 = v11 & 1;
    if ((v11 & 1) != 0)
      v24 = 0;
    else
      v24 = v9;
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
    else
      v8 = sub_1A46914E8();
    v9 = a3(v8);
    v11 = v10 & 1;
    goto LABEL_36;
  }
  v26[0] = result;
  v26[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v5)
    {
      v16 = v5 - 1;
      if (v16)
      {
        v9 = 0;
        v17 = (unsigned __int8 *)v26 + 1;
        while (1)
        {
          v18 = *v17 - 48;
          if (v18 > 9)
            break;
          v19 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            break;
          v9 = v19 + v18;
          if (__OFADD__(v19, v18))
            break;
          v11 = 0;
          ++v17;
          if (!--v16)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v5)
      {
        v9 = 0;
        v20 = (unsigned __int8 *)v26;
        while (1)
        {
          v21 = *v20 - 48;
          if (v21 > 9)
            break;
          v22 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            break;
          v9 = v22 + v21;
          if (__OFADD__(v22, v21))
            break;
          v11 = 0;
          ++v20;
          if (!--v5)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
    if (v5)
    {
      v12 = v5 - 1;
      if (v12)
      {
        v9 = 0;
        v13 = (unsigned __int8 *)v26 + 1;
        while (1)
        {
          v14 = *v13 - 48;
          if (v14 > 9)
            break;
          v15 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            break;
          v9 = v15 - v14;
          if (__OFSUB__(v15, v14))
            break;
          v11 = 0;
          ++v13;
          if (!--v12)
            goto LABEL_36;
        }
      }
LABEL_35:
      v9 = 0;
      v11 = 1;
      goto LABEL_36;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A44CAC44@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  unsigned __int8 *v17;
  unsigned int v18;
  char v19;
  _QWORD v20[3];

  v5 = HIBYTE(a2) & 0xF;
  v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v7 = v5;
  else
    v7 = result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    result = swift_bridgeObjectRelease();
    v19 = 0;
    LOBYTE(v10) = 1;
LABEL_40:
    *a3 = v19;
    a3[1] = v10;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v9 = sub_1A44CD3B0(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A44CD49C);
    result = swift_bridgeObjectRelease();
    v10 = (v9 >> 8) & 1;
LABEL_37:
    if (v10)
      v19 = 0;
    else
      v19 = v9;
    goto LABEL_40;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_1A46914E8();
    v9 = sub_1A44CD49C(v8, v6, 10);
    v10 = (v9 >> 8) & 1;
    goto LABEL_36;
  }
  v20[0] = result;
  v20[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v5)
    {
      v14 = v5 - 1;
      if (v14)
      {
        LOBYTE(v9) = 0;
        v15 = (unsigned __int8 *)v20 + 1;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            break;
          if (((10 * v9) & 0xF00) != 0)
            break;
          v9 = (10 * v9) + v16;
          if (((v9 >> 8) & 1) != 0)
            break;
          v10 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v5)
      {
        LOBYTE(v9) = 0;
        v17 = (unsigned __int8 *)v20;
        while (1)
        {
          v18 = *v17 - 48;
          if (v18 > 9)
            break;
          if (((10 * v9) & 0xF00) != 0)
            break;
          v9 = (10 * v9) + v18;
          if (((v9 >> 8) & 1) != 0)
            break;
          v10 = 0;
          ++v17;
          if (!--v5)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
    if (v5)
    {
      v11 = v5 - 1;
      if (v11)
      {
        LOBYTE(v9) = 0;
        v12 = (unsigned __int8 *)v20 + 1;
        while (1)
        {
          v13 = *v12 - 48;
          if (v13 > 9)
            break;
          if (((10 * v9) & 0xF00) != 0)
            break;
          v9 = (10 * v9) - v13;
          if ((v9 & 0xFFFFFF00) != 0)
            break;
          v10 = 0;
          ++v12;
          if (!--v11)
            goto LABEL_36;
        }
      }
LABEL_35:
      LOBYTE(v9) = 0;
      v10 = 1;
LABEL_36:
      result = swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A44CAE54@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A44CE8E4(a1, a2);
  *a3 = result;
  a3[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_1A44CAE80()
{
  sub_1A4691590();
  return 0;
}

uint64_t sub_1A44CAEDC@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  unsigned __int8 *v17;
  unsigned int v18;
  __int16 v19;
  _QWORD v20[3];

  v5 = HIBYTE(a2) & 0xF;
  v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v7 = v5;
  else
    v7 = result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    result = swift_bridgeObjectRelease();
    v19 = 0;
    LOBYTE(v10) = 1;
LABEL_40:
    *(_WORD *)a3 = v19;
    *(_BYTE *)(a3 + 2) = v10;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v9 = sub_1A44CD744(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A44CD82C);
    result = swift_bridgeObjectRelease();
    v10 = HIWORD(v9) & 1;
LABEL_37:
    if (v10)
      v19 = 0;
    else
      v19 = v9;
    goto LABEL_40;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_1A46914E8();
    v9 = sub_1A44CD82C(v8, v6, 10);
    v10 = HIWORD(v9) & 1;
    goto LABEL_36;
  }
  v20[0] = result;
  v20[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v5)
    {
      v14 = v5 - 1;
      if (v14)
      {
        LOWORD(v9) = 0;
        v15 = (unsigned __int8 *)v20 + 1;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            break;
          if (((10 * (unsigned __int16)v9) & 0xF0000) != 0)
            break;
          v9 = (unsigned __int16)(10 * v9) + v16;
          if ((v9 & 0x10000) != 0)
            break;
          v10 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v5)
      {
        LOWORD(v9) = 0;
        v17 = (unsigned __int8 *)v20;
        while (1)
        {
          v18 = *v17 - 48;
          if (v18 > 9)
            break;
          if (((10 * (unsigned __int16)v9) & 0xF0000) != 0)
            break;
          v9 = (unsigned __int16)(10 * v9) + v18;
          if ((v9 & 0x10000) != 0)
            break;
          v10 = 0;
          ++v17;
          if (!--v5)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
    if (v5)
    {
      v11 = v5 - 1;
      if (v11)
      {
        LOWORD(v9) = 0;
        v12 = (unsigned __int8 *)v20 + 1;
        while (1)
        {
          v13 = *v12 - 48;
          if (v13 > 9)
            break;
          if (((10 * (unsigned __int16)v9) & 0xF0000) != 0)
            break;
          v9 = (unsigned __int16)(10 * v9) - v13;
          if ((v9 & 0xFFFF0000) != 0)
            break;
          v10 = 0;
          ++v12;
          if (!--v11)
            goto LABEL_36;
        }
      }
LABEL_35:
      LOWORD(v9) = 0;
      v10 = 1;
LABEL_36:
      result = swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A44CB0EC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;

  result = sub_1A44CEAF0(a1, a2);
  *(_WORD *)a3 = result;
  *(_BYTE *)(a3 + 2) = BYTE2(result) & 1;
  return result;
}

uint64_t sub_1A44CB118()
{
  sub_1A4691590();
  return 0;
}

uint64_t sub_1A44CB174@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  _QWORD v25[2];
  char v26;

  v5 = HIBYTE(a2) & 0xF;
  v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v7 = v5;
  else
    v7 = result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    result = swift_bridgeObjectRelease();
    v24 = 0;
    LOBYTE(v23) = 1;
LABEL_40:
    *(_DWORD *)a3 = v24;
    *(_BYTE *)(a3 + 4) = v23;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v10 = sub_1A44CDAD4(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A44CDBC4);
    result = swift_bridgeObjectRelease();
    v23 = HIDWORD(v10) & 1;
LABEL_37:
    if ((_DWORD)v23)
      v24 = 0;
    else
      v24 = v10;
    goto LABEL_40;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_1A46914E8();
    v9 = sub_1A44CDBC4(v8, v6, 10);
    LODWORD(v10) = (_DWORD)v9;
    v26 = BYTE4(v9) & 1;
    v11 = BYTE4(v9) & 1;
    goto LABEL_36;
  }
  v25[0] = result;
  v25[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v5)
    {
      v16 = v5 - 1;
      if (v16)
      {
        LODWORD(v10) = 0;
        v17 = (unsigned __int8 *)v25 + 1;
        while (1)
        {
          v18 = *v17 - 48;
          if (v18 > 9)
            break;
          v19 = 10 * v10;
          if ((v19 & 0xFFFFFFFF00000000) != 0)
            break;
          LODWORD(v10) = v19 + v18;
          if (__CFADD__((_DWORD)v19, v18))
            break;
          v11 = 0;
          ++v17;
          if (!--v16)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v5)
      {
        LODWORD(v10) = 0;
        v20 = (unsigned __int8 *)v25;
        while (1)
        {
          v21 = *v20 - 48;
          if (v21 > 9)
            break;
          v22 = 10 * v10;
          if ((v22 & 0xFFFFFFFF00000000) != 0)
            break;
          LODWORD(v10) = v22 + v21;
          if (__CFADD__((_DWORD)v22, v21))
            break;
          v11 = 0;
          ++v20;
          if (!--v5)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
    if (v5)
    {
      v12 = v5 - 1;
      if (v12)
      {
        LODWORD(v10) = 0;
        v13 = (unsigned __int8 *)v25 + 1;
        while (1)
        {
          v14 = *v13 - 48;
          if (v14 > 9)
            break;
          v15 = 10 * v10;
          if ((v15 & 0xFFFFFFFF00000000) != 0)
            break;
          LODWORD(v10) = v15 - v14;
          if (v15 < v14)
            break;
          v11 = 0;
          ++v13;
          if (!--v12)
            goto LABEL_36;
        }
      }
LABEL_35:
      LODWORD(v10) = 0;
      v11 = 1;
LABEL_36:
      result = swift_bridgeObjectRelease();
      LODWORD(v23) = v11 & 1;
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1A44CB36C@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t result;

  result = sub_1A44CECFC(a1, a2);
  *(_DWORD *)a3 = result;
  *(_BYTE *)(a3 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_1A44CB398()
{
  sub_1A4691590();
  return 0;
}

uint64_t sub_1A44CB3F4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A44CB434(a1, a2, (uint64_t (*)(uint64_t))sub_1A45D82A0, a3);
}

uint64_t sub_1A44CB400@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  char v5;

  result = sub_1A44CEEF8(a1, a2, (uint64_t (*)(uint64_t))sub_1A45D82A0);
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = v5 & 1;
  return result;
}

uint64_t sub_1A44CB434@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  BOOL v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  unint64_t v22;
  char v23;
  _QWORD v24[3];

  v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) != 0)
    v6 = HIBYTE(a2) & 0xF;
  else
    v6 = result & 0xFFFFFFFFFFFFLL;
  if (!v6)
  {
    result = swift_bridgeObjectRelease();
    v22 = 0;
    v21 = 1;
LABEL_40:
    *(_QWORD *)a4 = v22;
    *(_BYTE *)(a4 + 8) = v21 & 1;
    return result;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v9 = sub_1A44CC85C(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A44CDE44);
    v11 = v23;
LABEL_37:
    result = swift_bridgeObjectRelease();
    v21 = v11 & 1;
    if ((v11 & 1) != 0)
      v22 = 0;
    else
      v22 = v9;
    goto LABEL_40;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
    else
      v8 = sub_1A46914E8();
    v9 = a3(v8);
    v11 = v10 & 1;
    goto LABEL_37;
  }
  v24[0] = result;
  v24[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v5)
    {
      v16 = v5 - 1;
      if (v16)
      {
        v9 = 0;
        v17 = (unsigned __int8 *)v24 + 1;
        while (1)
        {
          v18 = *v17 - 48;
          if (v18 > 9)
            break;
          if (!is_mul_ok(v9, 0xAuLL))
            break;
          v15 = __CFADD__(10 * v9, v18);
          v9 = 10 * v9 + v18;
          if (v15)
            break;
          v11 = 0;
          ++v17;
          if (!--v16)
            goto LABEL_37;
        }
      }
      goto LABEL_36;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v5)
      {
        v9 = 0;
        v19 = (unsigned __int8 *)v24;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            break;
          if (!is_mul_ok(v9, 0xAuLL))
            break;
          v15 = __CFADD__(10 * v9, v20);
          v9 = 10 * v9 + v20;
          if (v15)
            break;
          v11 = 0;
          ++v19;
          if (!--v5)
            goto LABEL_37;
        }
      }
      goto LABEL_36;
    }
    if (v5)
    {
      v12 = v5 - 1;
      if (v12)
      {
        v9 = 0;
        v13 = (unsigned __int8 *)v24 + 1;
        while (1)
        {
          v14 = *v13 - 48;
          if (v14 > 9)
            break;
          if (!is_mul_ok(v9, 0xAuLL))
            break;
          v15 = 10 * v9 >= v14;
          v9 = 10 * v9 - v14;
          if (!v15)
            break;
          v11 = 0;
          ++v13;
          if (!--v12)
            goto LABEL_37;
        }
      }
LABEL_36:
      v9 = 0;
      v11 = 1;
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A44CB638()
{
  sub_1A4691590();
  return 0;
}

unint64_t sub_1A44CB694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t result;

  result = sub_1A44CC710(a1, a2);
  *(_DWORD *)a3 = result;
  *(_BYTE *)(a3 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_1A44CB6C0()
{
  sub_1A4691590();
  return 0;
}

uint64_t sub_1A44CB71C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  char v5;

  result = sub_1A44CC5D0(a1, a2);
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = v5 & 1;
  return result;
}

uint64_t sub_1A44CB748()
{
  sub_1A4691590();
  return 0;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Bool.queryItemStringRepresentation()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  sub_1A4690984();
  swift_bridgeObjectRelease();
  v0 = 0;
  v1 = (void *)0xE000000000000000;
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t sub_1A44CB820@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _sSb19ReminderKitInternalE15queryItemStringSbSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1A44CB844()
{
  sub_1A4690984();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t Array<A>.init(queryItemString:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD v15[6];
  _BYTE v16[16];
  _QWORD *v17;
  _QWORD v18[2];

  v18[0] = 44;
  v18[1] = 0xE100000000000000;
  v17 = v18;
  swift_bridgeObjectRetain();
  v10 = sub_1A44AAF38(0x7FFFFFFFFFFFFFFFLL, 1, sub_1A44CF2DC, (uint64_t)v16, a1, a2);
  swift_bridgeObjectRelease();
  v18[0] = v10;
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = a5;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E250);
  v12 = (unsigned int (*)(char *, uint64_t, uint64_t))sub_1A443AD20(&qword_1EE71E258, &qword_1EE71E250, MEMORY[0x1E0DEAF38]);
  v13 = Sequence.completeCompactMap<A>(_:)((void (*)(char *))sub_1A44CF2F8, (uint64_t)v15, v11, a3, v12);
  swift_bridgeObjectRelease();
  return v13;
}

_QWORD *Array<A>.queryItemStringRepresentation()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD v11[6];
  uint64_t v12;
  uint64_t v13;

  v13 = a1;
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  v5 = sub_1A4690C78();
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED243A28);
  v7 = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v5);
  v8 = &v13;
  v9 = sub_1A449F0A4((void (*)(char *, char *))sub_1A44CF358, (uint64_t)v11, v5, MEMORY[0x1E0DEA968], v6, v7, MEMORY[0x1E0DEDB38], (uint64_t)&v12);
  if (!v4)
  {
    v13 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    sub_1A443AD20((unint64_t *)&qword_1ED2421A0, &qword_1ED242FF0, MEMORY[0x1E0DEAF20]);
    v8 = (_QWORD *)sub_1A4690828();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1A44CBACC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = Array<A>.init(queryItemString:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8), *(_QWORD *)(a4 - 16));
  *a5 = result;
  return result;
}

_QWORD *sub_1A44CBAFC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return Array<A>.queryItemStringRepresentation()(*v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a2 - 8), *(_QWORD *)(a2 - 16));
}

uint64_t Date.init(queryItemString:)@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  void (*v12)(char *, char *, uint64_t);
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v2 = sub_1A46900B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
  v10 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_dateFromString_, v10);

  if (!v11)
  {

    v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v13(v8, 1, 1, v2);
    goto LABEL_5;
  }
  sub_1A4690084();

  v12 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v12(v8, v5, v2);
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v13(v8, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
LABEL_5:
    sub_1A445404C((uint64_t)v8, &qword_1ED243190);
    v14 = a1;
    v15 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v13)(v14, v15, 1, v2);
  }
  v12(a1, v8, v2);
  v14 = a1;
  v15 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v13)(v14, v15, 1, v2);
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Date.queryItemStringRepresentation()()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  Swift::String result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
  v1 = (void *)sub_1A4690030();
  v2 = objc_msgSend(v0, sel_stringFromDate_, v1);

  v3 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v5 = v4;

  v6 = v3;
  v7 = v5;
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

uint64_t sub_1A44CBD80()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
  v1 = (void *)sub_1A4690030();
  v2 = objc_msgSend(v0, sel_stringFromDate_, v1);

  v3 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  return v3;
}

uint64_t TimeZone.init(queryItemString:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240118);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A46902B8();
  swift_bridgeObjectRelease();
  v5 = sub_1A46902F4();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
  {
    sub_1A445404C((uint64_t)v4, &qword_1ED240118);
    v7 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
    v7 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v7, 1, v5);
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> TimeZone.queryItemStringRepresentation()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = sub_1A46902C4();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t sub_1A44CBF28@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240118);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A46902B8();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a1 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, a1))
  {
    sub_1A445404C((uint64_t)v6, &qword_1ED240118);
    v8 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a2, v6, a1);
    v8 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v8, 1, a1);
}

uint64_t sub_1A44CC014()
{
  return sub_1A46902C4();
}

_QWORD *sub_1A44CC038(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243150);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1A44CC09C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1A4690A08();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1A859E218](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_1A44CC114()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1A4690A5C();
  v4 = sub_1A44CC190(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1A44CC190(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1A44CC2D4(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1A44CC038(v9, 0);
      v12 = sub_1A44CC3C0((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1A859E188](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1A859E188);
LABEL_9:
      sub_1A46914E8();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1A859E188]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1A44CC2D4(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1A44CC09C(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1A44CC09C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1A46909CC();
  }
  __break(1u);
  return result;
}

unint64_t sub_1A44CC3C0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1A44CC09C(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1A46909D8();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1A46914E8();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1A44CC09C(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1A46909B4();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1A44CC5D0(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  int v3;
  _BYTE *v4;
  _QWORD v6[3];
  uint64_t v7;

  v7 = 0;
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_1A46913EC();
    swift_bridgeObjectRelease();
    v3 = LOBYTE(v6[0]);
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    v6[0] = a1;
    v6[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    v3 = (a1 > 0x20u || ((0x100003E01uLL >> a1) & 1) == 0)
      && (v4 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
      && *v4 == 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((a1 & 0x1000000000000000) != 0)
      v2 = (_BYTE *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v2 = (_BYTE *)sub_1A46914E8();
    sub_1A44CF3D4(v2, (BOOL *)v6);
    v3 = LOBYTE(v6[0]);
    swift_bridgeObjectRelease();
  }
  if (v3)
    return v7;
  else
    return 0;
}

unint64_t sub_1A44CC710(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  int v3;
  _BYTE *v4;
  uint64_t v5;
  _QWORD v7[3];
  unsigned int v8;

  v8 = 0;
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_1A46913EC();
    swift_bridgeObjectRelease();
    v3 = LOBYTE(v7[0]);
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    v7[0] = a1;
    v7[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    v3 = (a1 > 0x20u || ((0x100003E01uLL >> a1) & 1) == 0)
      && (v4 = (_BYTE *)_swift_stdlib_strtof_clocale()) != 0
      && *v4 == 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((a1 & 0x1000000000000000) != 0)
      v2 = (_BYTE *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v2 = (_BYTE *)sub_1A46914E8();
    sub_1A44CF3F0(v2, (BOOL *)v7);
    v3 = LOBYTE(v7[0]);
    swift_bridgeObjectRelease();
  }
  v5 = v8;
  LOBYTE(v7[0]) = v3 ^ 1;
  if (!v3)
    v5 = 0;
  return v5 | ((unint64_t)(v3 ^ 1u) << 32);
}

uint64_t sub_1A44CC85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v15 = a1;
  v16 = a2;
  swift_bridgeObjectRetain();
  v7 = sub_1A4690A50();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = &v15;
    goto LABEL_7;
  }
  v7 = sub_1A44CC114();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (_QWORD *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (_QWORD *)sub_1A46914E8();
  }
LABEL_7:
  v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1A44CC94C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned __int8 v12;
  int v13;
  int v14;
  char v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  int v23;
  char v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  int v28;
  unsigned int v29;
  char v30;
  int v31;
  char v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          LOBYTE(v8) = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = (char)v8 * (char)a3;
            v24 = v23;
            if ((char)v23 != v23)
              goto LABEL_72;
            v8 = (char)v23 + (char)(v21 + v22);
            if ((char)(v24 + v21 + v22) != v8)
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          LOBYTE(v28) = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = (char)v28 * (char)a3;
            v32 = v31;
            if ((char)v31 != v31)
              goto LABEL_72;
            v28 = (char)v31 + (char)(v29 + v30);
            if ((char)(v32 + v29 + v30) != v28)
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          LOBYTE(v8) = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = (char)v8 * (char)a3;
            v15 = v14;
            if ((char)v14 != v14)
              goto LABEL_72;
            v8 = (char)v14 - (char)(v10 + v11);
            if ((char)(v15 - (v10 + v11)) != v8)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1A44CCC00(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned __int16 v12;
  int v13;
  int v14;
  __int16 v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  int v23;
  __int16 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  int v28;
  unsigned int v29;
  char v30;
  int v31;
  __int16 v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          LOWORD(v8) = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = (__int16)v8 * (__int16)a3;
            v24 = v23;
            if ((__int16)v23 != v23)
              goto LABEL_72;
            v8 = (__int16)v23 + (v21 + v22);
            if ((__int16)(v24 + (v21 + v22)) != v8)
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 16));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          LOWORD(v28) = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = (__int16)v28 * (__int16)a3;
            v32 = v31;
            if ((__int16)v31 != v31)
              goto LABEL_72;
            v28 = (__int16)v31 + (v29 + v30);
            if ((__int16)(v32 + (v29 + v30)) != v28)
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          LOWORD(v8) = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = (__int16)v8 * (__int16)a3;
            v15 = v14;
            if ((__int16)v14 != v14)
              goto LABEL_72;
            v8 = (__int16)v14 - (v10 + v11);
            if ((__int16)(v15 - (v10 + v11)) != v8)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 16));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1A44CCEB4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned __int8 v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  uint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  uint64_t v31;
  unsigned __int8 v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          v8 = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = (int)v8 * (uint64_t)(int)a3;
            if (v23 != (int)v23)
              goto LABEL_72;
            v24 = v21 + v22;
            v8 = v23 + v24;
            if (__OFADD__((_DWORD)v23, v24))
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          v28 = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = (int)v28 * (uint64_t)(int)a3;
            if (v31 != (int)v31)
              goto LABEL_72;
            v32 = v29 + v30;
            v28 = v31 + v32;
            if (__OFADD__((_DWORD)v31, v32))
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          v8 = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = (int)v8 * (uint64_t)(int)a3;
            if (v14 != (int)v14)
              goto LABEL_72;
            v15 = v10 + v11;
            v8 = v14 - v15;
            if (__OFSUB__((_DWORD)v14, v15))
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1A44CD134(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  v13 = 0;
                  if (v11 < 0x61 || v11 >= v8)
                    return (unsigned __int8 *)v13;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v23 = a3 + 48;
      v24 = a3 + 55;
      v25 = a3 + 87;
      if (a3 > 10)
      {
        v23 = 58;
      }
      else
      {
        v25 = 97;
        v24 = 65;
      }
      if (result)
      {
        v26 = 0;
        do
        {
          v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              v13 = 0;
              if (v27 < 0x61 || v27 >= v25)
                return (unsigned __int8 *)v13;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
            return 0;
          v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v15 = a2 - 1;
  if (a2 == 1)
    return 0;
  v16 = a3 + 48;
  v17 = a3 + 55;
  v18 = a3 + 87;
  if (a3 > 10)
  {
    v16 = 58;
  }
  else
  {
    v18 = 97;
    v17 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v19 = result + 1;
  do
  {
    v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        v13 = 0;
        if (v20 < 0x61 || v20 >= v18)
          return (unsigned __int8 *)v13;
        v21 = -87;
      }
      else
      {
        v21 = -55;
      }
    }
    else
    {
      v21 = -48;
    }
    v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21)))
      return 0;
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1A44CD3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int16 v13;
  uint64_t v15;
  uint64_t v16;

  v15 = a1;
  v16 = a2;
  swift_bridgeObjectRetain();
  v7 = sub_1A4690A50();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = &v15;
    goto LABEL_7;
  }
  v7 = sub_1A44CC114();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (_QWORD *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (_QWORD *)sub_1A46914E8();
  }
LABEL_7:
  v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13 & 0x1FF;
}

unsigned __int8 *sub_1A44CD49C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned __int8 v12;
  int v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned int v24;
  unsigned int v25;
  char v26;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v14 = a2 - 1;
      if (a2 != 1)
      {
        v15 = a3 + 87;
        if (a3 > 10)
        {
          v16 = a3 + 55;
        }
        else
        {
          v15 = 97;
          v16 = 65;
        }
        if (a3 <= 10)
          v17 = a3 + 48;
        else
          v17 = 58;
        if (result)
        {
          LOBYTE(v8) = 0;
          v18 = result + 1;
          do
          {
            v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                v12 = 0;
                v13 = 1;
                if (v19 < 0x61 || v19 >= v15)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v20 = -87;
              }
              else
              {
                v20 = -55;
              }
            }
            else
            {
              v20 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0)
              goto LABEL_72;
            v8 = (v8 * a3) + (v19 + v20);
            if (((v8 >> 8) & 1) != 0)
              goto LABEL_72;
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v21 = a3 + 87;
        if (a3 > 10)
        {
          v22 = a3 + 55;
        }
        else
        {
          v21 = 97;
          v22 = 65;
        }
        if (a3 <= 10)
          v23 = a3 + 48;
        else
          v23 = 58;
        if (result)
        {
          LOBYTE(v24) = 0;
          do
          {
            v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                v12 = 0;
                v13 = 1;
                if (v25 < 0x61 || v25 >= v21)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v26 = -87;
              }
              else
              {
                v26 = -55;
              }
            }
            else
            {
              v26 = -48;
            }
            if (((v24 * (unsigned __int16)a3) & 0xFF00) != 0)
              goto LABEL_72;
            v24 = (v24 * a3) + (v25 + v26);
            if (((v24 >> 8) & 1) != 0)
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          LOBYTE(v8) = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0)
              goto LABEL_72;
            v8 = (v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFFFF00) != 0)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A44CD744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v15;
  uint64_t v16;

  v15 = a1;
  v16 = a2;
  swift_bridgeObjectRetain();
  v7 = sub_1A4690A50();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = &v15;
    goto LABEL_7;
  }
  v7 = sub_1A44CC114();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (_QWORD *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (_QWORD *)sub_1A46914E8();
  }
LABEL_7:
  v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13 & 0x1FFFF;
}

unsigned __int8 *sub_1A44CD82C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned __int16 v12;
  int v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  int v24;
  unsigned int v25;
  char v26;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v14 = a2 - 1;
      if (a2 != 1)
      {
        v15 = a3 + 87;
        if (a3 > 10)
        {
          v16 = a3 + 55;
        }
        else
        {
          v15 = 97;
          v16 = 65;
        }
        if (a3 <= 10)
          v17 = a3 + 48;
        else
          v17 = 58;
        if (result)
        {
          LOWORD(v8) = 0;
          v18 = result + 1;
          do
          {
            v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                v12 = 0;
                v13 = 1;
                if (v19 < 0x61 || v19 >= v15)
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                v20 = -87;
              }
              else
              {
                v20 = -55;
              }
            }
            else
            {
              v20 = -48;
            }
            if ((((unsigned __int16)v8 * (unsigned __int16)a3) & 0xFFFF0000) != 0)
              goto LABEL_72;
            v8 = (unsigned __int16)(v8 * a3) + (v19 + v20);
            if ((v8 & 0x10000) != 0)
              goto LABEL_72;
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 16));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v21 = a3 + 87;
        if (a3 > 10)
        {
          v22 = a3 + 55;
        }
        else
        {
          v21 = 97;
          v22 = 65;
        }
        if (a3 <= 10)
          v23 = a3 + 48;
        else
          v23 = 58;
        if (result)
        {
          LOWORD(v24) = 0;
          do
          {
            v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                v12 = 0;
                v13 = 1;
                if (v25 < 0x61 || v25 >= v21)
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                v26 = -87;
              }
              else
              {
                v26 = -55;
              }
            }
            else
            {
              v26 = -48;
            }
            if ((((unsigned __int16)v24 * (unsigned __int16)a3) & 0xFFFF0000) != 0)
              goto LABEL_72;
            v24 = (unsigned __int16)(v24 * a3) + (v25 + v26);
            if ((v24 & 0x10000) != 0)
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          LOWORD(v8) = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            if ((((unsigned __int16)v8 * (unsigned __int16)a3) & 0xFFFF0000) != 0)
              goto LABEL_72;
            v8 = (unsigned __int16)(v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFF0000) != 0)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 16));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A44CDAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v15 = a1;
  v16 = a2;
  swift_bridgeObjectRetain();
  v7 = sub_1A4690A50();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = &v15;
    goto LABEL_7;
  }
  v7 = sub_1A44CC114();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (_QWORD *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (_QWORD *)sub_1A46914E8();
  }
LABEL_7:
  v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13 | ((HIDWORD(v13) & 1) << 32);
}

unsigned __int8 *sub_1A44CDBC4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned __int8 v13;
  unint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          v8 = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v24 = v21 + v22;
            v8 = v23 + v24;
            if (__CFADD__((_DWORD)v23, v24))
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          v28 = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v32 = v29 + v30;
            v28 = v31 + v32;
            if (__CFADD__((_DWORD)v31, v32))
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          v8 = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v15 = v10 + v11;
            v8 = v14 - v15;
            if (v14 < v15)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1A44CDE44(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 v15;
  BOOL v16;
  uint64_t v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  unsigned __int8 *v21;
  unsigned int v22;
  char v23;
  unint64_t v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  unint64_t v29;
  unsigned int v30;
  char v31;
  unint64_t v32;
  unsigned __int8 v33;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  v13 = 0;
                  if (v11 < 0x61 || v11 >= v8)
                    return (unsigned __int8 *)v13;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              if (!is_mul_ok(v9, a3))
                return 0;
              v14 = v9 * a3;
              v15 = v11 + v12;
              v16 = v14 >= v15;
              v9 = v14 - v15;
              if (!v16)
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_67;
    }
    if (a2)
    {
      v26 = a3 + 48;
      v27 = a3 + 55;
      v28 = a3 + 87;
      if (a3 > 10)
      {
        v26 = 58;
      }
      else
      {
        v28 = 97;
        v27 = 65;
      }
      if (result)
      {
        v29 = 0;
        do
        {
          v30 = *result;
          if (v30 < 0x30 || v30 >= v26)
          {
            if (v30 < 0x41 || v30 >= v27)
            {
              v13 = 0;
              if (v30 < 0x61 || v30 >= v28)
                return (unsigned __int8 *)v13;
              v31 = -87;
            }
            else
            {
              v31 = -55;
            }
          }
          else
          {
            v31 = -48;
          }
          if (!is_mul_ok(v29, a3))
            return 0;
          v32 = v29 * a3;
          v33 = v30 + v31;
          v16 = __CFADD__(v32, v33);
          v29 = v32 + v33;
          if (v16)
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v29;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_67:
    __break(1u);
    return result;
  }
  v17 = a2 - 1;
  if (a2 == 1)
    return 0;
  v18 = a3 + 48;
  v19 = a3 + 55;
  v20 = a3 + 87;
  if (a3 > 10)
  {
    v18 = 58;
  }
  else
  {
    v20 = 97;
    v19 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v21 = result + 1;
  do
  {
    v22 = *v21;
    if (v22 < 0x30 || v22 >= v18)
    {
      if (v22 < 0x41 || v22 >= v19)
      {
        v13 = 0;
        if (v22 < 0x61 || v22 >= v20)
          return (unsigned __int8 *)v13;
        v23 = -87;
      }
      else
      {
        v23 = -55;
      }
    }
    else
    {
      v23 = -48;
    }
    if (!is_mul_ok(v9, a3))
      return 0;
    v24 = v9 * a3;
    v25 = v22 + v23;
    v16 = __CFADD__(v24, v25);
    v9 = v24 + v25;
    if (v16)
      return 0;
    ++v21;
    --v17;
  }
  while (v17);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1A44CE0C0(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  int v16;
  unsigned __int8 *v17;
  unsigned int v18;
  int v19;
  unsigned __int8 v20;
  _QWORD v21[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    v20 = 0;
    v8 = 1;
    return v20 | (v8 << 8);
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v7 = sub_1A44CD3B0(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A44CC94C);
    swift_bridgeObjectRelease();
    v8 = (v7 >> 8) & 1;
LABEL_37:
    if (v8)
      v20 = 0;
    else
      v20 = v7;
    return v20 | (v8 << 8);
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v6 = (unsigned __int8 *)sub_1A46914E8();
    v7 = sub_1A44CC94C(v6, v4, 10);
    v8 = (v7 >> 8) & 1;
    goto LABEL_36;
  }
  v21[0] = result;
  v21[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v3)
    {
      v13 = v3 - 1;
      if (v13)
      {
        LOBYTE(v7) = 0;
        v14 = (unsigned __int8 *)v21 + 1;
        while (1)
        {
          v15 = *v14 - 48;
          if (v15 > 9)
            break;
          v16 = (char)(10 * v7);
          if (v16 != 10 * (char)v7)
            break;
          v7 = v16 + (char)v15;
          if ((char)(v16 + v15) != v7)
            break;
          v8 = 0;
          ++v14;
          if (!--v13)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v3)
      {
        LOBYTE(v7) = 0;
        v17 = (unsigned __int8 *)v21;
        while (1)
        {
          v18 = *v17 - 48;
          if (v18 > 9)
            break;
          v19 = (char)(10 * v7);
          if (v19 != 10 * (char)v7)
            break;
          v7 = v19 + (char)v18;
          if ((char)(v19 + v18) != v7)
            break;
          v8 = 0;
          ++v17;
          if (!--v3)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
    if (v3)
    {
      v9 = v3 - 1;
      if (v9)
      {
        LOBYTE(v7) = 0;
        v10 = (unsigned __int8 *)v21 + 1;
        while (1)
        {
          v11 = *v10 - 48;
          if (v11 > 9)
            break;
          v12 = (char)(10 * v7);
          if (v12 != 10 * (char)v7)
            break;
          v7 = v12 - (char)v11;
          if ((char)(v12 - v11) != v7)
            break;
          v8 = 0;
          ++v10;
          if (!--v9)
            goto LABEL_36;
        }
      }
LABEL_35:
      LOBYTE(v7) = 0;
      v8 = 1;
LABEL_36:
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A44CE2D8(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  int v17;
  unsigned __int8 *v18;
  unsigned int v19;
  int v20;
  int v21;
  _QWORD v22[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    v21 = 0;
    v9 = 1;
    return v21 | (v9 << 16);
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v8 = sub_1A44CD744(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A44CCC00);
    swift_bridgeObjectRelease();
    v9 = HIWORD(v8) & 1;
LABEL_37:
    v21 = (unsigned __int16)v8;
    if (v9)
      v21 = 0;
    return v21 | (v9 << 16);
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v6 = (unsigned __int8 *)sub_1A46914E8();
    v7 = sub_1A44CCC00(v6, v4, 10);
    LOWORD(v8) = v7;
    v9 = HIWORD(v7) & 1;
    goto LABEL_36;
  }
  v22[0] = result;
  v22[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v3)
    {
      v14 = v3 - 1;
      if (v14)
      {
        LOWORD(v8) = 0;
        v15 = (unsigned __int8 *)v22 + 1;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            break;
          v17 = (__int16)(10 * v8);
          if (v17 != 10 * (__int16)v8)
            break;
          v8 = v17 + v16;
          if ((__int16)(v17 + v16) != v8)
            break;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v3)
      {
        LOWORD(v8) = 0;
        v18 = (unsigned __int8 *)v22;
        while (1)
        {
          v19 = *v18 - 48;
          if (v19 > 9)
            break;
          v20 = (__int16)(10 * v8);
          if (v20 != 10 * (__int16)v8)
            break;
          v8 = v20 + v19;
          if ((__int16)(v20 + v19) != v8)
            break;
          v9 = 0;
          ++v18;
          if (!--v3)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
    if (v3)
    {
      v10 = v3 - 1;
      if (v10)
      {
        LOWORD(v8) = 0;
        v11 = (unsigned __int8 *)v22 + 1;
        while (1)
        {
          v12 = *v11 - 48;
          if (v12 > 9)
            break;
          v13 = (__int16)(10 * v8);
          if (v13 != 10 * (__int16)v8)
            break;
          v8 = v13 - v12;
          if ((__int16)(v13 - v12) != v8)
            break;
          v9 = 0;
          ++v11;
          if (!--v10)
            goto LABEL_36;
        }
      }
LABEL_35:
      LOWORD(v8) = 0;
      v9 = 1;
LABEL_36:
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1A44CE4F0(unint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  char v24;

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    v22 = 0;
    LOBYTE(v21) = 1;
LABEL_39:
    LOBYTE(v23[0]) = v21;
    return v22 | ((unint64_t)v21 << 32);
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v8 = sub_1A44CDAD4(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A44CCEB4);
    swift_bridgeObjectRelease();
    v21 = HIDWORD(v8) & 1;
LABEL_37:
    v22 = v8;
    if ((_DWORD)v21)
      v22 = 0;
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v6 = (unsigned __int8 *)sub_1A46914E8();
    v7 = sub_1A44CCEB4(v6, v4, 10);
    LODWORD(v8) = (_DWORD)v7;
    v24 = BYTE4(v7) & 1;
    v9 = BYTE4(v7) & 1;
    goto LABEL_36;
  }
  v23[0] = result;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v3)
    {
      v14 = v3 - 1;
      if (v14)
      {
        LODWORD(v8) = 0;
        v15 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            break;
          v17 = 10 * (int)v8;
          if (v17 != (int)v17)
            break;
          LODWORD(v8) = v17 + v16;
          if (__OFADD__((_DWORD)v17, v16))
            break;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v3)
      {
        LODWORD(v8) = 0;
        v18 = (unsigned __int8 *)v23;
        while (1)
        {
          v19 = *v18 - 48;
          if (v19 > 9)
            break;
          v20 = 10 * (int)v8;
          if (v20 != (int)v20)
            break;
          LODWORD(v8) = v20 + v19;
          if (__OFADD__((_DWORD)v20, v19))
            break;
          v9 = 0;
          ++v18;
          if (!--v3)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
    if (v3)
    {
      v10 = v3 - 1;
      if (v10)
      {
        LODWORD(v8) = 0;
        v11 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v12 = *v11 - 48;
          if (v12 > 9)
            break;
          v13 = 10 * (int)v8;
          if (v13 != (int)v13)
            break;
          LODWORD(v8) = v13 - v12;
          if (__OFSUB__((_DWORD)v13, v12))
            break;
          v9 = 0;
          ++v11;
          if (!--v10)
            goto LABEL_36;
        }
      }
LABEL_35:
      LODWORD(v8) = 0;
      v9 = 1;
LABEL_36:
      swift_bridgeObjectRelease();
      LODWORD(v21) = v9 & 1;
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A44CE6EC(uint64_t result, unint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  uint64_t v20;
  char v21;
  _QWORD v22[3];

  v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = result & 0xFFFFFFFFFFFFLL;
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      else
        v6 = sub_1A46914E8();
      v7 = a3(v6);
      v9 = v8 & 1;
      goto LABEL_36;
    }
    v22[0] = result;
    v22[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (v3)
      {
        v14 = v3 - 1;
        if (v14)
        {
          v7 = 0;
          v15 = (unsigned __int8 *)v22 + 1;
          while (1)
          {
            v16 = *v15 - 48;
            if (v16 > 9)
              break;
            v17 = 10 * v7;
            if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
              break;
            v7 = v17 + v16;
            if (__OFADD__(v17, v16))
              break;
            v9 = 0;
            ++v15;
            if (!--v14)
              goto LABEL_36;
          }
        }
        goto LABEL_35;
      }
    }
    else
    {
      if (result != 45)
      {
        if (v3)
        {
          v7 = 0;
          v18 = (unsigned __int8 *)v22;
          while (1)
          {
            v19 = *v18 - 48;
            if (v19 > 9)
              break;
            v20 = 10 * v7;
            if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
              break;
            v7 = v20 + v19;
            if (__OFADD__(v20, v19))
              break;
            v9 = 0;
            ++v18;
            if (!--v3)
              goto LABEL_36;
          }
        }
        goto LABEL_35;
      }
      if (v3)
      {
        v10 = v3 - 1;
        if (v10)
        {
          v7 = 0;
          v11 = (unsigned __int8 *)v22 + 1;
          while (1)
          {
            v12 = *v11 - 48;
            if (v12 > 9)
              break;
            v13 = 10 * v7;
            if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
              break;
            v7 = v13 - v12;
            if (__OFSUB__(v13, v12))
              break;
            v9 = 0;
            ++v11;
            if (!--v10)
              goto LABEL_36;
          }
        }
LABEL_35:
        v7 = 0;
        v9 = 1;
        goto LABEL_36;
      }
      __break(1u);
    }
    __break(1u);
    return result;
  }
  v7 = sub_1A44CC85C(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A44CD134);
  v9 = v21;
LABEL_36:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

uint64_t sub_1A44CE8E4(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned __int8 *v15;
  unsigned int v16;
  unsigned __int8 v17;
  _QWORD v18[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    v17 = 0;
    v8 = 1;
    return v17 | (v8 << 8);
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v7 = sub_1A44CD3B0(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A44CD49C);
    swift_bridgeObjectRelease();
    v8 = (v7 >> 8) & 1;
LABEL_37:
    if (v8)
      v17 = 0;
    else
      v17 = v7;
    return v17 | (v8 << 8);
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v6 = (unsigned __int8 *)sub_1A46914E8();
    v7 = sub_1A44CD49C(v6, v4, 10);
    v8 = (v7 >> 8) & 1;
    goto LABEL_36;
  }
  v18[0] = result;
  v18[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v3)
    {
      v12 = v3 - 1;
      if (v12)
      {
        LOBYTE(v7) = 0;
        v13 = (unsigned __int8 *)v18 + 1;
        while (1)
        {
          v14 = *v13 - 48;
          if (v14 > 9)
            break;
          if (((10 * v7) & 0xF00) != 0)
            break;
          v7 = (10 * v7) + v14;
          if (((v7 >> 8) & 1) != 0)
            break;
          v8 = 0;
          ++v13;
          if (!--v12)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v3)
      {
        LOBYTE(v7) = 0;
        v15 = (unsigned __int8 *)v18;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            break;
          if (((10 * v7) & 0xF00) != 0)
            break;
          v7 = (10 * v7) + v16;
          if (((v7 >> 8) & 1) != 0)
            break;
          v8 = 0;
          ++v15;
          if (!--v3)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
    if (v3)
    {
      v9 = v3 - 1;
      if (v9)
      {
        LOBYTE(v7) = 0;
        v10 = (unsigned __int8 *)v18 + 1;
        while (1)
        {
          v11 = *v10 - 48;
          if (v11 > 9)
            break;
          if (((10 * v7) & 0xF00) != 0)
            break;
          v7 = (10 * v7) - v11;
          if ((v7 & 0xFFFFFF00) != 0)
            break;
          v8 = 0;
          ++v10;
          if (!--v9)
            goto LABEL_36;
        }
      }
LABEL_35:
      LOBYTE(v7) = 0;
      v8 = 1;
LABEL_36:
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A44CEAF0(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  unsigned __int8 *v16;
  unsigned int v17;
  int v18;
  _QWORD v19[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    v18 = 0;
    v9 = 1;
    return v18 | (v9 << 16);
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v8 = sub_1A44CD744(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A44CD82C);
    swift_bridgeObjectRelease();
    v9 = HIWORD(v8) & 1;
LABEL_37:
    v18 = (unsigned __int16)v8;
    if (v9)
      v18 = 0;
    return v18 | (v9 << 16);
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v6 = (unsigned __int8 *)sub_1A46914E8();
    v7 = sub_1A44CD82C(v6, v4, 10);
    LOWORD(v8) = v7;
    v9 = HIWORD(v7) & 1;
    goto LABEL_36;
  }
  v19[0] = result;
  v19[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v3)
    {
      v13 = v3 - 1;
      if (v13)
      {
        LOWORD(v8) = 0;
        v14 = (unsigned __int8 *)v19 + 1;
        while (1)
        {
          v15 = *v14 - 48;
          if (v15 > 9)
            break;
          if (((10 * (unsigned __int16)v8) & 0xF0000) != 0)
            break;
          v8 = (unsigned __int16)(10 * v8) + v15;
          if ((v8 & 0x10000) != 0)
            break;
          v9 = 0;
          ++v14;
          if (!--v13)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v3)
      {
        LOWORD(v8) = 0;
        v16 = (unsigned __int8 *)v19;
        while (1)
        {
          v17 = *v16 - 48;
          if (v17 > 9)
            break;
          if (((10 * (unsigned __int16)v8) & 0xF0000) != 0)
            break;
          v8 = (unsigned __int16)(10 * v8) + v17;
          if ((v8 & 0x10000) != 0)
            break;
          v9 = 0;
          ++v16;
          if (!--v3)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
    if (v3)
    {
      v10 = v3 - 1;
      if (v10)
      {
        LOWORD(v8) = 0;
        v11 = (unsigned __int8 *)v19 + 1;
        while (1)
        {
          v12 = *v11 - 48;
          if (v12 > 9)
            break;
          if (((10 * (unsigned __int16)v8) & 0xF0000) != 0)
            break;
          v8 = (unsigned __int16)(10 * v8) - v12;
          if ((v8 & 0xFFFF0000) != 0)
            break;
          v9 = 0;
          ++v11;
          if (!--v10)
            goto LABEL_36;
        }
      }
LABEL_35:
      LOWORD(v8) = 0;
      v9 = 1;
LABEL_36:
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1A44CECFC(unint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  char v24;

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    v22 = 0;
    LOBYTE(v21) = 1;
LABEL_39:
    LOBYTE(v23[0]) = v21;
    return v22 | ((unint64_t)v21 << 32);
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v8 = sub_1A44CDAD4(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A44CDBC4);
    swift_bridgeObjectRelease();
    v21 = HIDWORD(v8) & 1;
LABEL_37:
    v22 = v8;
    if ((_DWORD)v21)
      v22 = 0;
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v6 = (unsigned __int8 *)sub_1A46914E8();
    v7 = sub_1A44CDBC4(v6, v4, 10);
    LODWORD(v8) = (_DWORD)v7;
    v24 = BYTE4(v7) & 1;
    v9 = BYTE4(v7) & 1;
    goto LABEL_36;
  }
  v23[0] = result;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v3)
    {
      v14 = v3 - 1;
      if (v14)
      {
        LODWORD(v8) = 0;
        v15 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            break;
          v17 = 10 * v8;
          if ((v17 & 0xFFFFFFFF00000000) != 0)
            break;
          LODWORD(v8) = v17 + v16;
          if (__CFADD__((_DWORD)v17, v16))
            break;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v3)
      {
        LODWORD(v8) = 0;
        v18 = (unsigned __int8 *)v23;
        while (1)
        {
          v19 = *v18 - 48;
          if (v19 > 9)
            break;
          v20 = 10 * v8;
          if ((v20 & 0xFFFFFFFF00000000) != 0)
            break;
          LODWORD(v8) = v20 + v19;
          if (__CFADD__((_DWORD)v20, v19))
            break;
          v9 = 0;
          ++v18;
          if (!--v3)
            goto LABEL_36;
        }
      }
      goto LABEL_35;
    }
    if (v3)
    {
      v10 = v3 - 1;
      if (v10)
      {
        LODWORD(v8) = 0;
        v11 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v12 = *v11 - 48;
          if (v12 > 9)
            break;
          v13 = 10 * v8;
          if ((v13 & 0xFFFFFFFF00000000) != 0)
            break;
          LODWORD(v8) = v13 - v12;
          if (v13 < v12)
            break;
          v9 = 0;
          ++v11;
          if (!--v10)
            goto LABEL_36;
        }
      }
LABEL_35:
      LODWORD(v8) = 0;
      v9 = 1;
LABEL_36:
      swift_bridgeObjectRelease();
      LODWORD(v21) = v9 & 1;
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A44CEEF8(uint64_t result, unint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  unsigned __int8 *v17;
  unsigned int v18;
  char v19;
  _QWORD v20[3];

  v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = result & 0xFFFFFFFFFFFFLL;
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      else
        v6 = sub_1A46914E8();
      v7 = a3(v6);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v20[0] = result;
    v20[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (v3)
      {
        v14 = v3 - 1;
        if (v14)
        {
          v7 = 0;
          v15 = (unsigned __int8 *)v20 + 1;
          while (1)
          {
            v16 = *v15 - 48;
            if (v16 > 9)
              break;
            if (!is_mul_ok(v7, 0xAuLL))
              break;
            v13 = __CFADD__(10 * v7, v16);
            v7 = 10 * v7 + v16;
            if (v13)
              break;
            v9 = 0;
            ++v15;
            if (!--v14)
              goto LABEL_37;
          }
        }
        goto LABEL_36;
      }
    }
    else
    {
      if (result != 45)
      {
        if (v3)
        {
          v7 = 0;
          v17 = (unsigned __int8 *)v20;
          while (1)
          {
            v18 = *v17 - 48;
            if (v18 > 9)
              break;
            if (!is_mul_ok(v7, 0xAuLL))
              break;
            v13 = __CFADD__(10 * v7, v18);
            v7 = 10 * v7 + v18;
            if (v13)
              break;
            v9 = 0;
            ++v17;
            if (!--v3)
              goto LABEL_37;
          }
        }
        goto LABEL_36;
      }
      if (v3)
      {
        v10 = v3 - 1;
        if (v10)
        {
          v7 = 0;
          v11 = (unsigned __int8 *)v20 + 1;
          while (1)
          {
            v12 = *v11 - 48;
            if (v12 > 9)
              break;
            if (!is_mul_ok(v7, 0xAuLL))
              break;
            v13 = 10 * v7 >= v12;
            v7 = 10 * v7 - v12;
            if (!v13)
              break;
            v9 = 0;
            ++v11;
            if (!--v10)
              goto LABEL_37;
          }
        }
LABEL_36:
        v7 = 0;
        v9 = 1;
        goto LABEL_37;
      }
      __break(1u);
    }
    __break(1u);
    return result;
  }
  v7 = sub_1A44CC85C(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1A44CDE44);
  v9 = v19;
LABEL_37:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

uint64_t _sSb19ReminderKitInternalE15queryItemStringSbSgSS_tcfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  char v4;

  v0 = sub_1A46908F4();
  v2 = v1;
  swift_bridgeObjectRelease();
  if (v0 == 1702195828 && v2 == 0xE400000000000000
    || (sub_1A4691A40() & 1) != 0
    || v0 == 49 && v2 == 0xE100000000000000
    || (sub_1A4691A40() & 1) != 0
    || v0 == 7562617 && v2 == 0xE300000000000000
    || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (v0 == 0x65736C6166 && v2 == 0xE500000000000000
         || (sub_1A4691A40() & 1) != 0
         || v0 == 48 && v2 == 0xE100000000000000
         || (sub_1A4691A40() & 1) != 0
         || v0 == 28526 && v2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v4 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v4 & 1) == 0)
      return 2;
  }
  return result;
}

uint64_t sub_1A44CF2DC(_QWORD *a1)
{
  uint64_t v1;

  return sub_1A44ACAFC(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t sub_1A44CF2F8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = MEMORY[0x1A859E164](*a1, a1[1], a1[2], a1[3]);
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v3);
}

uint64_t sub_1A44CF358@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v7;

  result = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v2 + 32) + 8))(*(_QWORD *)(v2 + 16));
  if (v3)
  {
    *a1 = v3;
  }
  else
  {
    *a2 = result;
    a2[1] = v7;
  }
  return result;
}

uint64_t dispatch thunk of URLQueryItemValueDecodable.init(queryItemString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of URLQueryItemValueEncodable.queryItemStringRepresentation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of URLQueryItemValueDirectStringInitializable.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

_BYTE *sub_1A44CF3D4@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1A44CF40C(a1, MEMORY[0x1E0DEEA50], a2);
}

_BYTE *sub_1A44CF3F0@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1A44CF40C(a1, MEMORY[0x1E0DEEA58], a2);
}

_BYTE *sub_1A44CF40C@<X0>(_BYTE *result@<X0>, uint64_t (*a2)(void)@<X1>, BOOL *a3@<X8>)
{
  unsigned int v4;
  BOOL v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;

  v4 = *result;
  v5 = v4 > 0x20;
  v6 = (1 << v4) & 0x100003E01;
  v7 = v5 || v6 == 0;
  v8 = v7 && (result = (_BYTE *)a2()) != 0 && *result == 0;
  *a3 = v8;
  return result;
}

uint64_t URLQueryItemDecoder.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t URLQueryItemDecoder.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t URLQueryItemDecoder.decode<A>(_:from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  type metadata accessor for QueryItems();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a2;
  type metadata accessor for InternalDecoder();
  v4 = (_QWORD *)swift_allocObject();
  v5 = MEMORY[0x1E0DEE9E0];
  v4[2] = MEMORY[0x1E0DEE9D8];
  v4[3] = v5;
  v4[4] = v3;
  sub_1A44CF5A0();
  swift_bridgeObjectRetain();
  return sub_1A4690D44();
}

uint64_t type metadata accessor for QueryItems()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for InternalDecoder()
{
  return objc_opt_self();
}

unint64_t sub_1A44CF5A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE71E260;
  if (!qword_1EE71E260)
  {
    v1 = type metadata accessor for InternalDecoder();
    result = MEMORY[0x1A85A0000](&unk_1A4699F18, v1);
    atomic_store(result, (unint64_t *)&qword_1EE71E260);
  }
  return result;
}

uint64_t URLQueryItemDecoder.decodeIfPresent<A>(_:from:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void *v37;
  void *v38;

  v36 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E268);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A46914B8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v35 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v34 - v13;
  v15 = *(_QWORD *)(a2 - 8);
  v16 = MEMORY[0x1E0C80A78](v12);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v37;
  URLQueryItemDecoder.decode<A>(_:from:)(v16, a1);
  if (!v19)
  {
    v32 = v36;
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v36, v18, a2);
    v30 = 0;
    v31 = v32;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v31, v30, 1, a2);
  }
  v20 = v15;
  v21 = v36;
  v38 = v19;
  v22 = v19;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED243A28);
  v23 = swift_dynamicCast();
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if ((v23 & 1) != 0)
  {
    v25 = a2;
    v24(v7, 0, 1, v8);
    v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v26(v14, v7, v8);
    v27 = (uint64_t)v35;
    v26(v35, v14, v8);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v9 + 88))(v27, v8) == *MEMORY[0x1E0DEC448])
    {

      (*(void (**)(uint64_t, uint64_t))(v9 + 96))(v27, v8);
      v28 = v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242A38) + 48);
      v29 = sub_1A46914AC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
      __swift_destroy_boxed_opaque_existential_1(v27);
      v30 = 1;
      a2 = v25;
      v31 = v21;
      v15 = v20;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v31, v30, 1, a2);
    }
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v27, v8);
  }
  else
  {
    v24(v7, 1, 1, v8);
    sub_1A44CF894((uint64_t)v7);
  }
  return swift_willThrow();
}

uint64_t sub_1A44CF894(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E268);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t URLQueryItemDecoder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t URLQueryItemDecoder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for URLQueryItemDecoder()
{
  return objc_opt_self();
}

uint64_t method lookup function for URLQueryItemDecoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of URLQueryItemDecoder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1A44CF920(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  _QWORD *v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;

  v60 = a1;
  v4 = sub_1A468FC28();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v54 = (uint64_t)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v47 - v8;
  v10 = sub_1A46914AC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v53 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v55 = a2 + 16;
  v56 = (char *)v47 - v14;
  swift_beginAccess();
  v15 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16);
  if (!v15)
  {
LABEL_10:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E4E0);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1A4695C10;
    v25 = v60;
    sub_1A443E484((uint64_t)v60, v24 + 32);
    v58 = 0;
    v59 = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    v58 = 0xD000000000000018;
    v59 = 0x80000001A46BE540;
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    sub_1A4691DAC();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v26 = v56;
    sub_1A46914A0();
    v27 = sub_1A46914B8();
    swift_allocError();
    v29 = v28;
    v30 = v28 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242A38) + 48);
    sub_1A443E484((uint64_t)v25, v29);
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v30, v26, v10);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x1E0DEC448], v27);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v26, v10);
    return v27 & 1;
  }
  v47[1] = v2;
  v48 = v11;
  v49 = v10;
  v50 = v9;
  v51 = v5;
  v52 = v4;
  v16 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v57 = *(_QWORD *)(v5 + 72);
  swift_bridgeObjectRetain();
  v17 = 0;
  while (1)
  {
    v18 = sub_1A468FC10();
    v20 = v19;
    __swift_project_boxed_opaque_existential_1(v60, v60[3]);
    if (v18 == sub_1A4691DAC() && v20 == v21)
      break;
    v23 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0)
      goto LABEL_13;
    ++v17;
    v16 += v57;
    if (v15 == v17)
    {
      swift_bridgeObjectRelease();
      v11 = v48;
      v10 = v49;
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_13:
  result = swift_bridgeObjectRelease();
  v33 = v51;
  v32 = v52;
  v34 = v50;
  if (v17 < *(_QWORD *)(*(_QWORD *)v55 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v51 + 16))(v50, *(_QWORD *)v55 + v16, v52);
    sub_1A468FC1C();
    if (v35)
    {
      v36 = _sSb19ReminderKitInternalE15queryItemStringSbSgSS_tcfC_0();
      if (v36 == 2)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E4E0);
        v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = xmmword_1A4695C10;
        v38 = v60;
        sub_1A443E484((uint64_t)v60, v37 + 32);
        v58 = 0;
        v59 = 0xE000000000000000;
        sub_1A4691410();
        swift_bridgeObjectRelease();
        v58 = 34;
        v59 = 0xE100000000000000;
        sub_1A468FC1C();
        sub_1A4690984();
        swift_bridgeObjectRelease();
        sub_1A4690984();
        __swift_project_boxed_opaque_existential_1(v38, v38[3]);
        sub_1A4691DAC();
        sub_1A4690984();
        swift_bridgeObjectRelease();
        sub_1A4690984();
        v39 = v53;
        sub_1A46914A0();
        v27 = sub_1A46914B8();
        swift_allocError();
        v41 = v40;
        v42 = (char *)v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8) + 48);
        *v41 = MEMORY[0x1E0DEAFA0];
        v44 = v48;
        v43 = v49;
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v42, v39, v49);
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v41, *MEMORY[0x1E0DEC450], v27);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v39, v43);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
        return v27 & 1;
      }
      LOBYTE(v27) = v36 & 1;
    }
    else
    {
      LOBYTE(v27) = 1;
    }
    swift_beginAccess();
    v45 = v54;
    sub_1A44D0554(v17, v54);
    swift_endAccess();
    v46 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v46(v45, v32);
    v46((uint64_t)v34, v32);
    return v27 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A44CFEE0@<X0>(_QWORD *a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *);
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  _QWORD *v80;

  v71 = a2;
  v69 = a5;
  v70 = a3;
  v80 = a1;
  v7 = sub_1A46914AC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v76 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v59 - v11;
  v13 = sub_1A46911A0();
  v66 = *(_QWORD *)(v13 - 8);
  v67 = v13;
  MEMORY[0x1E0C80A78](v13);
  v73 = (char *)&v59 - v14;
  v15 = sub_1A468FC28();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v68 = (uint64_t)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v74 = (char *)&v59 - v19;
  v75 = v5 + 16;
  swift_beginAccess();
  v20 = *(_QWORD *)(*(_QWORD *)(v5 + 16) + 16);
  if (!v20)
  {
LABEL_10:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E4E0);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1A4695C10;
    v30 = v80;
    sub_1A443E484((uint64_t)v80, v29 + 32);
    v78 = 0;
    v79 = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    v78 = 0xD000000000000018;
    v79 = 0x80000001A46BE540;
    __swift_project_boxed_opaque_existential_1(v30, v30[3]);
    sub_1A4691DAC();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v31 = v76;
    sub_1A46914A0();
    v32 = sub_1A46914B8();
    swift_allocError();
    v34 = v33;
    v35 = v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242A38) + 48);
    sub_1A443E484((uint64_t)v30, v34);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v35, v31, v7);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, *MEMORY[0x1E0DEC448], v32);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v31, v7);
  }
  v60 = v12;
  v61 = a4;
  v65 = v15;
  v62 = v8;
  v63 = v7;
  v64 = v16;
  v21 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v77 = *(_QWORD *)(v16 + 72);
  swift_bridgeObjectRetain();
  v22 = 0;
  while (1)
  {
    v23 = sub_1A468FC10();
    v25 = v24;
    __swift_project_boxed_opaque_existential_1(v80, v80[3]);
    if (v23 == sub_1A4691DAC() && v25 == v26)
      break;
    v28 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v28 & 1) != 0)
      goto LABEL_12;
    ++v22;
    v21 += v77;
    if (v20 == v22)
    {
      swift_bridgeObjectRelease();
      v7 = v63;
      v8 = v62;
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_12:
  v37 = v64;
  result = swift_bridgeObjectRelease();
  v38 = v65;
  v39 = v73;
  if (v22 >= *(_QWORD *)(*(_QWORD *)v75 + 16))
  {
    __break(1u);
  }
  else
  {
    v40 = *(_QWORD *)v75 + v21;
    v41 = v74;
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v74, v40, v65);
    v42 = v72;
    v71(v41);
    if (v42)
    {
      v43 = *(uint64_t (**)(char *, uint64_t))(v37 + 8);
      v44 = v41;
    }
    else
    {
      v45 = v61;
      v46 = *(_QWORD *)(v61 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v39, 1, v61) != 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v69, v39, v45);
        swift_beginAccess();
        v57 = v68;
        sub_1A44D0554(v22, v68);
        swift_endAccess();
        v58 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
        v58(v57, v38);
        return ((uint64_t (*)(char *, uint64_t))v58)(v41, v38);
      }
      (*(void (**)(char *, uint64_t))(v66 + 8))(v39, v67);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E4E0);
      v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = xmmword_1A4695C10;
      v48 = v80;
      sub_1A443E484((uint64_t)v80, v47 + 32);
      v78 = 0;
      v79 = 0xE000000000000000;
      sub_1A4691410();
      swift_bridgeObjectRelease();
      v78 = 34;
      v79 = 0xE100000000000000;
      sub_1A468FC1C();
      sub_1A4690984();
      swift_bridgeObjectRelease();
      sub_1A4690984();
      v49 = v37;
      __swift_project_boxed_opaque_existential_1(v48, v48[3]);
      sub_1A4691DAC();
      sub_1A4690984();
      swift_bridgeObjectRelease();
      sub_1A4690984();
      v50 = v60;
      sub_1A46914A0();
      v51 = sub_1A46914B8();
      swift_allocError();
      v53 = v52;
      v54 = (char *)v52 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8) + 48);
      *v53 = v45;
      v55 = v62;
      v56 = v63;
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v54, v50, v63);
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v51 - 8) + 104))(v53, *MEMORY[0x1E0DEC450], v51);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v50, v56);
      v43 = *(uint64_t (**)(char *, uint64_t))(v49 + 8);
      v44 = v74;
    }
    return v43(v44, v38);
  }
  return result;
}

uint64_t sub_1A44D0554@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1A46143F4(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 - 1;
  v8 = sub_1A468FC28();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + v10 * a1;
  result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v9 + 32))(a2, v11, v8);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    result = sub_1A46916F8();
    __break(1u);
    return result;
  }
  if (v10 > 0 || v11 >= v11 + v10 + v10 * (v7 - a1))
  {
    result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v10)
  {
    result = swift_arrayInitWithTakeBackToFront();
  }
  *(_QWORD *)(v5 + 16) = v7;
  *v2 = v5;
  return result;
}

uint64_t sub_1A44D0690(uint64_t a1, _QWORD *a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v20 = a5;
  v23 = sub_1A46914AC();
  v7 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A468FC1C();
  if (v11)
  {
    a3(v10);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E4E0);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1A4695C10;
    sub_1A443E484((uint64_t)a2, v13 + 32);
    v21 = 0;
    v22 = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    v21 = 0xD000000000000013;
    v22 = 0x80000001A46BE580;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1A4691DAC();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A46914A0();
    v14 = sub_1A46914B8();
    swift_allocError();
    v16 = v15;
    v17 = (char *)v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8) + 48);
    *v16 = v20;
    v18 = v23;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v17, v9, v23);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x1E0DEC460], v14);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  }
}

uint64_t sub_1A44D089C()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A44D08C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for InternalKeyedContainer(0, a2, a3, a4);
  swift_retain();
  MEMORY[0x1A85A0000](&unk_1A4699FBC, v4);
  return sub_1A46917F4();
}

uint64_t sub_1A44D093C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1A44D0970()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A44D097C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A44D0988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D08C0(a1, a2, a3, a4);
}

uint64_t sub_1A44D09A8(uint64_t a1, uint64_t a2)
{
  return sub_1A44D0A00(a1, a2, 0xD000000000000010, 0x80000001A46BE4C0);
}

uint64_t sub_1A44D09D4(uint64_t a1, uint64_t a2)
{
  return sub_1A44D0A00(a1, a2, 0xD000000000000014, 0x80000001A46BE4A0);
}

uint64_t sub_1A44D0A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;

  sub_1A44D0A58();
  swift_allocError();
  *v6 = a3;
  v6[1] = a4;
  return swift_willThrow();
}

unint64_t sub_1A44D0A58()
{
  unint64_t result;

  result = qword_1EE71E458[0];
  if (!qword_1EE71E458[0])
  {
    result = MEMORY[0x1A85A0000](&unk_1A469A13C, &type metadata for URLQueryItemDecodingError);
    atomic_store(result, qword_1EE71E458);
  }
  return result;
}

uint64_t type metadata accessor for InternalKeyedContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InternalKeyedContainer);
}

uint64_t sub_1A44D0AA8()
{
  return swift_allocateGenericValueMetadata();
}

ValueMetadata *type metadata accessor for URLQueryItemDecodingError()
{
  return &type metadata for URLQueryItemDecodingError;
}

uint64_t sub_1A44D0AC0(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_1A44D0ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_0;
  char v8;
  uint64_t v10[5];

  v10[3] = a3;
  v10[4] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_0, a1, a3);
  v8 = sub_1A44CF920(v10, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v8 & 1;
}

uint64_t sub_1A44D0B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v21;
  uint64_t v23;
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[5];
  _QWORD v38[6];

  v36 = a3;
  v15 = sub_1A46914AC();
  v34 = *(_QWORD *)(v15 - 8);
  v35 = v15;
  MEMORY[0x1E0C80A78](v15);
  v33 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_conformsToProtocol2();
  if (v17)
    v18 = v17;
  else
    v18 = 0;
  if (v17)
    v19 = a1;
  else
    v19 = 0;
  if (v19)
  {
    v37[3] = a4;
    v37[4] = a6;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v37);
    v21 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_0, a2, a4);
    MEMORY[0x1E0C80A78](v21);
    *(&v32 - 6) = a4;
    *(&v32 - 5) = a5;
    *(&v32 - 4) = a6;
    *(&v32 - 3) = a7;
    *(&v32 - 2) = v19;
    *(&v32 - 1) = v18;
    v38[2] = a5;
    v38[3] = v37;
    v38[4] = sub_1A44D17F0;
    v38[5] = &v32 - 8;
    sub_1A44CFEE0(v37, (void (*)(char *))sub_1A44D1800, (uint64_t)v38, a5, a8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E4E0);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1A4695C10;
    *(_QWORD *)(v23 + 56) = a4;
    *(_QWORD *)(v23 + 64) = a6;
    v24 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v23 + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v24, a2, a4);
    v38[0] = 0;
    v38[1] = 0xE000000000000000;
    sub_1A4691410();
    sub_1A4690984();
    sub_1A4691A1C();
    sub_1A4690984();
    sub_1A4691DD0();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v25 = v33;
    sub_1A46914A0();
    v26 = sub_1A46914B8();
    swift_allocError();
    v28 = v27;
    v29 = (char *)v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8) + 48);
    *v28 = a1;
    v31 = v34;
    v30 = v35;
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v29, v25, v35);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x1E0DEC450], v26);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v25, v30);
  }
}

uint64_t sub_1A44D0E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *boxed_opaque_existential_0;
  int v19;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8);
  v13 = sub_1A46911A0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v21 - v15;
  swift_bridgeObjectRetain();
  v12(a1, a2, a3, a4);
  v17 = *(_QWORD *)(a3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v23 = 0;
    v21 = 0u;
    v22 = 0u;
  }
  else
  {
    *((_QWORD *)&v22 + 1) = a3;
    v23 = a4;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v21);
    (*(void (**)(uint64_t *, char *, uint64_t))(v17 + 32))(boxed_opaque_existential_0, v16, a3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E4E8);
  v19 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 56))(a6, v19 ^ 1u, 1, a5);
}

uint64_t sub_1A44D0F6C()
{
  _QWORD *v0;

  sub_1A44D0A58();
  swift_allocError();
  *v0 = 0x6F4364657473656ELL;
  v0[1] = 0xEF72656E6961746ELL;
  return swift_willThrow();
}

uint64_t sub_1A44D0FD4()
{
  char *v0;

  sub_1A44D0A58();
  swift_allocError();
  strcpy(v0, "superDecoder");
  v0[13] = 0;
  *((_WORD *)v0 + 7) = -5120;
  return swift_willThrow();
}

uint64_t sub_1A44D1038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v8;

  sub_1A44D0A58();
  swift_allocError();
  *v8 = a5;
  v8[1] = a6;
  return swift_willThrow();
}

uint64_t sub_1A44D1090()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1A44D109C()
{
  return sub_1A44D19A8();
}

uint64_t sub_1A44D10A8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  return sub_1A44D0AC8(a1, *v2, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_1A44D10B8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1A44D0ACC(a1, *v2, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24)) & 1;
}

uint64_t sub_1A44D10DC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  result = sub_1A44D0B4C(MEMORY[0x1E0DEA968], a1, *v2, *(_QWORD *)(a2 + 16), MEMORY[0x1E0DEA968], *(_QWORD *)(a2 + 24), MEMORY[0x1E0DEA9A0], (uint64_t)&v5);
  if (!v3)
    return v5;
  return result;
}

double sub_1A44D112C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  double result;
  double v5;

  sub_1A44D0B4C(MEMORY[0x1E0DEB070], a1, *v2, *(_QWORD *)(a2 + 16), MEMORY[0x1E0DEB070], *(_QWORD *)(a2 + 24), MEMORY[0x1E0DEB0A8], (uint64_t)&v5);
  if (!v3)
    return v5;
  return result;
}

float sub_1A44D117C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  float result;
  float v5;

  sub_1A44D0B4C(MEMORY[0x1E0DEB188], a1, *v2, *(_QWORD *)(a2 + 16), MEMORY[0x1E0DEB188], *(_QWORD *)(a2 + 24), MEMORY[0x1E0DEB1C0], (uint64_t)&v5);
  if (!v3)
    return v5;
  return result;
}

uint64_t sub_1A44D11CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D1420(a1, a2, a3, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB448]);
}

uint64_t sub_1A44D11F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D12DC(a1, a2, a3, MEMORY[0x1E0DEDA70], MEMORY[0x1E0DEDA90]);
}

uint64_t sub_1A44D1214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D1348(a1, a2, a3, MEMORY[0x1E0DEDB58], MEMORY[0x1E0DEDB78]);
}

uint64_t sub_1A44D1238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D13B4(a1, a2, a3, MEMORY[0x1E0DEDBC8], MEMORY[0x1E0DEDBF8]);
}

uint64_t sub_1A44D125C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D1420(a1, a2, a3, MEMORY[0x1E0DEDC60], MEMORY[0x1E0DEDC90]);
}

uint64_t sub_1A44D1280()
{
  return sub_1A4691AE8();
}

uint64_t sub_1A44D1294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D1420(a1, a2, a3, MEMORY[0x1E0DEBB98], MEMORY[0x1E0DEBBC8]);
}

uint64_t sub_1A44D12B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D12DC(a1, a2, a3, MEMORY[0x1E0DEDE70], MEMORY[0x1E0DEDE98]);
}

uint64_t sub_1A44D12DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t result;
  unsigned __int8 v8;

  result = sub_1A44D0B4C(a4, a1, *v5, *(_QWORD *)(a2 + 16), a4, *(_QWORD *)(a2 + 24), a5, (uint64_t)&v8);
  if (!v6)
    return v8;
  return result;
}

uint64_t sub_1A44D1324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D1348(a1, a2, a3, MEMORY[0x1E0DEE068], MEMORY[0x1E0DEE098]);
}

uint64_t sub_1A44D1348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t result;
  unsigned __int16 v8;

  result = sub_1A44D0B4C(a4, a1, *v5, *(_QWORD *)(a2 + 16), a4, *(_QWORD *)(a2 + 24), a5, (uint64_t)&v8);
  if (!v6)
    return v8;
  return result;
}

uint64_t sub_1A44D1390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D13B4(a1, a2, a3, MEMORY[0x1E0DEE0F8], MEMORY[0x1E0DEE128]);
}

uint64_t sub_1A44D13B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t result;
  unsigned int v8;

  result = sub_1A44D0B4C(a4, a1, *v5, *(_QWORD *)(a2 + 16), a4, *(_QWORD *)(a2 + 24), a5, (uint64_t)&v8);
  if (!v6)
    return v8;
  return result;
}

uint64_t sub_1A44D13FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D1420(a1, a2, a3, MEMORY[0x1E0DEE190], MEMORY[0x1E0DEE1C0]);
}

uint64_t sub_1A44D1420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  result = sub_1A44D0B4C(a4, a1, *v5, *(_QWORD *)(a2 + 16), a4, *(_QWORD *)(a2 + 24), a5, (uint64_t)&v8);
  if (!v6)
    return v8;
  return result;
}

uint64_t sub_1A44D1468()
{
  return sub_1A4691AF4();
}

uint64_t sub_1A44D147C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t *v6;

  return sub_1A44D0B4C(a1, a2, *v6, *(_QWORD *)(a5 + 16), a3, *(_QWORD *)(a5 + 24), a4, a6);
}

uint64_t sub_1A44D14A4()
{
  return sub_1A4691A94();
}

uint64_t sub_1A44D14B8()
{
  return sub_1A4691A88();
}

uint64_t sub_1A44D14CC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1A4691AA0();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1A44D14EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D167C(a1, a2, a3, MEMORY[0x1E0DED7E8]);
}

uint64_t sub_1A44D1508()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1A4691AAC();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1A44D1528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D15F4(a1, a2, a3, MEMORY[0x1E0DED808]);
}

uint64_t sub_1A44D1544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D1638(a1, a2, a3, MEMORY[0x1E0DED810]);
}

uint64_t sub_1A44D1560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D167C(a1, a2, a3, MEMORY[0x1E0DED818]);
}

uint64_t sub_1A44D157C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1A4691AD0();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1A44D159C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D16E8(a1, a2, a3, MEMORY[0x1E0DED830]);
}

uint64_t sub_1A44D15B8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1A4691AB8();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1A44D15D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D15F4(a1, a2, a3, MEMORY[0x1E0DED828]);
}

uint64_t sub_1A44D15F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FF;
}

uint64_t sub_1A44D161C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D1638(a1, a2, a3, MEMORY[0x1E0DED838]);
}

uint64_t sub_1A44D1638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FFFF;
}

uint64_t sub_1A44D1660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D167C(a1, a2, a3, MEMORY[0x1E0DED840]);
}

uint64_t sub_1A44D167C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v4;

  v4 = a4();
  return v4 | ((HIDWORD(v4) & 1) << 32);
}

uint64_t sub_1A44D16AC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1A4691ADC();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1A44D16CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D16E8(a1, a2, a3, MEMORY[0x1E0DED850]);
}

uint64_t sub_1A44D16E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  result = a4();
  if (v4)
    return v6;
  return result;
}

uint64_t sub_1A44D170C()
{
  return sub_1A4691AC4();
}

uint64_t sub_1A44D1734()
{
  return sub_1A44D0F6C();
}

uint64_t sub_1A44D175C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1A44D1038(a1, *v2, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), 0xD000000000000016, 0x80000001A46BE4E0);
}

uint64_t sub_1A44D1794()
{
  return sub_1A44D0FD4();
}

uint64_t sub_1A44D17B4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1A44D1038(a1, *v2, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), 0x6365447265707573, 0xEC0000007265646FLL);
}

uint64_t sub_1A44D17F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_1A44D0E1C(a1, a2, v3[6], v3[7], v3[3], a3);
}

uint64_t sub_1A44D1800(uint64_t a1)
{
  uint64_t v1;

  return sub_1A44D0690(a1, *(_QWORD **)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A44D181C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;

  v5 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  swift_beginAccess();
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v21 = v5;
    v10 = *(_QWORD *)(sub_1A468FC28() - 8);
    v11 = v8 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v12 = *(_QWORD *)(v10 + 72);
    v20[1] = v8;
    swift_bridgeObjectRetain();
    v13 = v9 - 1;
    while (1)
    {
      v14 = v13;
      v15 = sub_1A468FC10();
      v17 = v16;
      if (v15 == sub_1A4691DAC() && v17 == v18)
        break;
      LOBYTE(v9) = sub_1A4691A40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
      {
        v13 = v14 - 1;
        v11 += v12;
        if (v14)
          continue;
      }
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v9) = 1;
LABEL_9:
    swift_bridgeObjectRelease();
    v5 = v21;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a3);
  return v9 & 1;
}

uint64_t sub_1A44D19A8()
{
  return sub_1A4690BF4();
}

uint64_t URLQueryItemEncoder.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t URLQueryItemEncoder.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t URLQueryItemEncoder.encode<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[5];

  v1 = type metadata accessor for InternalEncoder();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = MEMORY[0x1E0DEE9D8];
  v3 = v2 + 16;
  v5[3] = v1;
  v5[4] = sub_1A44D1AE0();
  v5[0] = v2;
  swift_retain();
  sub_1A46907C8();
  if (v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    swift_beginAccess();
    v3 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v3;
}

uint64_t type metadata accessor for InternalEncoder()
{
  return objc_opt_self();
}

unint64_t sub_1A44D1AE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE71E4F0;
  if (!qword_1EE71E4F0)
  {
    v1 = type metadata accessor for InternalEncoder();
    result = MEMORY[0x1A85A0000](&unk_1A469A1C0, v1);
    atomic_store(result, (unint64_t *)&qword_1EE71E4F0);
  }
  return result;
}

uint64_t URLQueryItemEncoder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t URLQueryItemEncoder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for URLQueryItemEncoder()
{
  return objc_opt_self();
}

uint64_t method lookup function for URLQueryItemEncoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of URLQueryItemEncoder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1A44D1B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = _s19ReminderKitInternal22InternalKeyedContainerVMa_0(0, a2, a3, a4);
  swift_retain();
  MEMORY[0x1A85A0000](&unk_1A469A29C, v4);
  return sub_1A46918B4();
}

unint64_t sub_1A44D1BE4()
{
  return sub_1A443D244(MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1A44D1BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D1B74(a1, a2, a3, a4);
}

uint64_t sub_1A44D1C10@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A44D1C68(0xD000000000000010, 0x80000001A46BE4C0, (uint64_t)&type metadata for InvalidUnkeyedContanier, (uint64_t (*)(void))sub_1A44D1D70, a1);
}

uint64_t sub_1A44D1C3C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A44D1C68(0xD000000000000014, 0x80000001A46BE4A0, (uint64_t)&type metadata for InvalidSingleValueContanier, (uint64_t (*)(void))sub_1A44D1D2C, a1);
}

uint64_t sub_1A44D1C68@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t (*a4)(void)@<X5>, uint64_t *a5@<X8>)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v11 = *v5;
  sub_1A44D1CE8();
  v12 = swift_allocError();
  *v13 = a1;
  v13[1] = a2;
  a5[3] = a3;
  a5[4] = a4();
  *a5 = v12;
  a5[1] = v11;
  return swift_retain();
}

unint64_t sub_1A44D1CE8()
{
  unint64_t result;

  result = qword_1EE71E590;
  if (!qword_1EE71E590)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469A634, &type metadata for URLQueryItemEncodingError);
    atomic_store(result, (unint64_t *)&qword_1EE71E590);
  }
  return result;
}

unint64_t sub_1A44D1D2C()
{
  unint64_t result;

  result = qword_1EE71E598;
  if (!qword_1EE71E598)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469A57C, &type metadata for InvalidSingleValueContanier);
    atomic_store(result, (unint64_t *)&qword_1EE71E598);
  }
  return result;
}

unint64_t sub_1A44D1D70()
{
  unint64_t result;

  result = qword_1EE71E5A0;
  if (!qword_1EE71E5A0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469A414, &type metadata for InvalidUnkeyedContanier);
    atomic_store(result, (unint64_t *)&qword_1EE71E5A0);
  }
  return result;
}

uint64_t _s19ReminderKitInternal22InternalKeyedContainerVMa_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s19ReminderKitInternal22InternalKeyedContainerVMn_0);
}

ValueMetadata *type metadata accessor for InvalidUnkeyedContanier()
{
  return &type metadata for InvalidUnkeyedContanier;
}

ValueMetadata *type metadata accessor for InvalidSingleValueContanier()
{
  return &type metadata for InvalidSingleValueContanier;
}

ValueMetadata *type metadata accessor for URLQueryItemEncodingError()
{
  return &type metadata for URLQueryItemEncodingError;
}

uint64_t sub_1A44D1DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;

  v4 = sub_1A468FC28();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - v7;
  v10 = v9;
  sub_1A4691DAC();
  sub_1A468FC04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(v10, v8, v4);
  v11 = (unint64_t *)(a3 + 16);
  swift_beginAccess();
  v12 = *(_QWORD *)(a3 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a3 + 16) = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v12 = sub_1A4439740(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
    *v11 = v12;
  }
  v15 = *(_QWORD *)(v12 + 16);
  v14 = *(_QWORD *)(v12 + 24);
  if (v15 >= v14 >> 1)
  {
    v12 = sub_1A4439740(v14 > 1, v15 + 1, 1, v12);
    *v11 = v12;
  }
  *(_QWORD *)(v12 + 16) = v15 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v12+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v15, v10, v4);
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1A44D1FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47[2];
  uint64_t v48;
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v42 = a3;
  v52 = sub_1A46914D0();
  v46 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1A468FC28();
  v14 = *(_QWORD *)(v45 - 8);
  v15 = MEMORY[0x1E0C80A78](v45);
  v43 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v44 = (char *)&v41 - v18;
  MEMORY[0x1E0C80A78](v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))((char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E5A8);
  if (swift_dynamicCast())
  {
    sub_1A44D3510(v47, (uint64_t)v49);
    v21 = v50;
    v22 = v51;
    __swift_project_boxed_opaque_existential_1(v49, v50);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
    if (!v6)
    {
      sub_1A4691DAC();
      v23 = v44;
      sub_1A468FC04();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = v43;
      v25 = v45;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v43, v23, v45);
      v26 = v42;
      v27 = (unint64_t *)(v42 + 16);
      swift_beginAccess();
      v28 = *(_QWORD *)(v26 + 16);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v26 + 16) = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v28 = sub_1A4439740(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
        *v27 = v28;
      }
      v31 = *(_QWORD *)(v28 + 16);
      v30 = *(_QWORD *)(v28 + 24);
      if (v31 >= v30 >> 1)
      {
        v28 = sub_1A4439740(v30 > 1, v31 + 1, 1, v28);
        *v27 = v28;
      }
      *(_QWORD *)(v28 + 16) = v31 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v28+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v31, v24, v25);
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v25);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  }
  else
  {
    v48 = 0;
    memset(v47, 0, sizeof(v47));
    sub_1A44D34D0((uint64_t)v47);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E4E0);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1A4695C10;
    *(_QWORD *)(v33 + 56) = a4;
    *(_QWORD *)(v33 + 64) = a6;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v33 + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_0, a2, a4);
    v49[0] = 0;
    v49[1] = 0xE000000000000000;
    sub_1A4691410();
    sub_1A4690984();
    sub_1A4691A1C();
    sub_1A4690984();
    sub_1A4691DD0();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A46914A0();
    v35 = sub_1A46914DC();
    swift_allocError();
    v37 = v36;
    v38 = (char *)v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EE71E5B8) + 48);
    v37[3] = swift_getMetatypeMetadata();
    *v37 = a5;
    v39 = v46;
    v40 = v52;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v38, v13, v52);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v37, *MEMORY[0x1E0DEC4B0], v35);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v13, v40);
  }
}

uint64_t sub_1A44D2444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  sub_1A44D1CE8();
  swift_allocError();
  *v9 = 0x6F4364657473656ELL;
  v9[1] = 0xEF72656E6961746ELL;
  v11 = type metadata accessor for InvalidKeyedContainer(0, a5, a7, v10);
  swift_retain();
  MEMORY[0x1A85A0000](&unk_1A469A6B0, v11);
  return sub_1A46918B4();
}

uint64_t sub_1A44D2504@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;

  sub_1A44D1CE8();
  v4 = swift_allocError();
  *v5 = 0xD000000000000010;
  v5[1] = 0x80000001A46BE4C0;
  a2[3] = (uint64_t)&type metadata for InvalidUnkeyedContanier;
  a2[4] = sub_1A44D1D70();
  *a2 = v4;
  a2[1] = a1;
  return swift_retain();
}

uint64_t sub_1A44D2584@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  a2[3] = type metadata accessor for InternalEncoder();
  a2[4] = sub_1A44D1AE0();
  *a2 = a1;
  return swift_retain();
}

uint64_t sub_1A44D25C0@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  a2[3] = type metadata accessor for InternalEncoder();
  a2[4] = sub_1A44D1AE0();
  *a2 = a1;
  return swift_retain();
}

uint64_t sub_1A44D25FC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1A44D1DFC(a1, a2, *v2);
}

uint64_t sub_1A44D261C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  _QWORD v6[2];

  v6[0] = a1;
  v6[1] = a2;
  return sub_1A44D1FD8((uint64_t)v6, a3, *v4, *(_QWORD *)(a4 + 16), MEMORY[0x1E0DEA968], *(_QWORD *)(a4 + 24));
}

uint64_t sub_1A44D2664(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t *v3;
  double v5;

  v5 = a3;
  return sub_1A44D1FD8((uint64_t)&v5, a1, *v3, *(_QWORD *)(a2 + 16), MEMORY[0x1E0DEB070], *(_QWORD *)(a2 + 24));
}

uint64_t sub_1A44D26A8(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t *v3;
  float v5;

  v5 = a3;
  return sub_1A44D1FD8((uint64_t)&v5, a1, *v3, *(_QWORD *)(a2 + 16), MEMORY[0x1E0DEB188], *(_QWORD *)(a2 + 24));
}

uint64_t sub_1A44D26EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D2904(a1, a2, a3, a4, MEMORY[0x1E0DEB418]);
}

uint64_t sub_1A44D2710(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D27FC(a1, a2, a3, a4, MEMORY[0x1E0DEDA70]);
}

uint64_t sub_1A44D2734(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D2854(a1, a2, a3, a4, MEMORY[0x1E0DEDB58]);
}

uint64_t sub_1A44D2758(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D28AC(a1, a2, a3, a4, MEMORY[0x1E0DEDBC8]);
}

uint64_t sub_1A44D277C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D2904(a1, a2, a3, a4, MEMORY[0x1E0DEDC60]);
}

uint64_t sub_1A44D27A0()
{
  return sub_1A4691B84();
}

uint64_t sub_1A44D27B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D2904(a1, a2, a3, a4, MEMORY[0x1E0DEBB98]);
}

uint64_t sub_1A44D27D8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D27FC(a1, a2, a3, a4, MEMORY[0x1E0DEDE70]);
}

uint64_t sub_1A44D27FC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  char v7;

  v7 = a1;
  return sub_1A44D1FD8((uint64_t)&v7, a2, *v5, *(_QWORD *)(a3 + 16), a5, *(_QWORD *)(a3 + 24));
}

uint64_t sub_1A44D2830(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D2854(a1, a2, a3, a4, MEMORY[0x1E0DEE068]);
}

uint64_t sub_1A44D2854(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  __int16 v7;

  v7 = a1;
  return sub_1A44D1FD8((uint64_t)&v7, a2, *v5, *(_QWORD *)(a3 + 16), a5, *(_QWORD *)(a3 + 24));
}

uint64_t sub_1A44D2888(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D28AC(a1, a2, a3, a4, MEMORY[0x1E0DEE0F8]);
}

uint64_t sub_1A44D28AC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  int v7;

  v7 = a1;
  return sub_1A44D1FD8((uint64_t)&v7, a2, *v5, *(_QWORD *)(a3 + 16), a5, *(_QWORD *)(a3 + 24));
}

uint64_t sub_1A44D28E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D2904(a1, a2, a3, a4, MEMORY[0x1E0DEE190]);
}

uint64_t sub_1A44D2904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v7;

  v7 = a1;
  return sub_1A44D1FD8((uint64_t)&v7, a2, *v5, *(_QWORD *)(a3 + 16), a5, *(_QWORD *)(a3 + 24));
}

uint64_t sub_1A44D2938()
{
  return sub_1A4691B90();
}

uint64_t sub_1A44D294C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;

  return sub_1A44D1FD8(a1, a2, *v5, *(_QWORD *)(a5 + 16), a3, *(_QWORD *)(a5 + 24));
}

uint64_t sub_1A44D2974()
{
  return sub_1A4691B78();
}

uint64_t sub_1A44D299C()
{
  return sub_1A4691B0C();
}

uint64_t sub_1A44D29B0()
{
  return sub_1A4691B00();
}

uint64_t sub_1A44D29C4()
{
  return sub_1A4691B18();
}

uint64_t sub_1A44D29DC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D2B40(a1, a2, a3, a4, MEMORY[0x1E0DED8E8]);
}

uint64_t sub_1A44D29F8()
{
  return sub_1A4691B24();
}

uint64_t sub_1A44D2A10(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D2AC8(a1, a2, a3, a4, MEMORY[0x1E0DED908]);
}

uint64_t sub_1A44D2A2C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D2B04(a1, a2, a3, a4, MEMORY[0x1E0DED910]);
}

uint64_t sub_1A44D2A48(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D2B40(a1, a2, a3, a4, MEMORY[0x1E0DED918]);
}

uint64_t sub_1A44D2A64()
{
  return sub_1A4691B48();
}

uint64_t sub_1A44D2A7C()
{
  return sub_1A4691B54();
}

uint64_t sub_1A44D2A94()
{
  return sub_1A4691B30();
}

uint64_t sub_1A44D2AAC(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D2AC8(a1, a2, a3, a4, MEMORY[0x1E0DED928]);
}

uint64_t sub_1A44D2AC8(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(a1 & 0x1FF);
}

uint64_t sub_1A44D2AE8(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D2B04(a1, a2, a3, a4, MEMORY[0x1E0DED938]);
}

uint64_t sub_1A44D2B04(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(a1 & 0x1FFFF);
}

uint64_t sub_1A44D2B24(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D2B40(a1, a2, a3, a4, MEMORY[0x1E0DED940]);
}

uint64_t sub_1A44D2B40(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  return a5(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_1A44D2B68()
{
  return sub_1A4691B60();
}

uint64_t sub_1A44D2B80()
{
  return sub_1A4691B6C();
}

uint64_t sub_1A44D2B98()
{
  return sub_1A4691B3C();
}

uint64_t sub_1A44D2BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;

  return sub_1A44D2444(a1, a2, *v5, *(_QWORD *)(a5 + 16), a3, *(_QWORD *)(a5 + 24), a4);
}

uint64_t sub_1A44D2BD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_1A44D2504(*v1, a1);
}

uint64_t sub_1A44D2BE8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_1A44D2584(*v1, a1);
}

uint64_t sub_1A44D2BF8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_1A44D25C0(*v1, a1);
}

uint64_t sub_1A44D2C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  sub_1A44D1CE8();
  swift_allocError();
  *v10 = 0x6F4364657473656ELL;
  v10[1] = 0xEF72656E6961746ELL;
  v12 = type metadata accessor for InvalidKeyedContainer(0, a6, a8, v11);
  swift_retain();
  MEMORY[0x1A85A0000](&unk_1A469A6B0, v12);
  return sub_1A46918B4();
}

uint64_t sub_1A44D2CC8@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;

  sub_1A44D1CE8();
  v4 = swift_allocError();
  *v5 = 0xD000000000000016;
  v5[1] = 0x80000001A46BE4E0;
  a2[3] = (uint64_t)&type metadata for InvalidUnkeyedContanier;
  a2[4] = sub_1A44D1D70();
  *a2 = v4;
  a2[1] = a1;
  return swift_retain();
}

uint64_t sub_1A44D2D48@<X0>(uint64_t a1@<X2>, _QWORD *a2@<X8>)
{
  a2[3] = type metadata accessor for InternalEncoder();
  a2[4] = sub_1A44D1AE0();
  *a2 = a1;
  return swift_retain();
}

uint64_t sub_1A44D2D84()
{
  void **v0;

  return sub_1A44D362C(*v0);
}

uint64_t sub_1A44D2DA4()
{
  void **v0;

  return sub_1A44D362C(*v0);
}

uint64_t sub_1A44D2DD4()
{
  void **v0;

  return sub_1A44D362C(*v0);
}

uint64_t sub_1A44D2E00()
{
  void **v0;

  return sub_1A44D362C(*v0);
}

uint64_t sub_1A44D2E30()
{
  void **v0;

  return sub_1A44D362C(*v0);
}

uint64_t sub_1A44D2E60()
{
  void **v0;

  return sub_1A44D362C(*v0);
}

uint64_t sub_1A44D2E90()
{
  void **v0;

  return sub_1A44D362C(*v0);
}

uint64_t sub_1A44D2EC0()
{
  void **v0;

  return sub_1A44D362C(*v0);
}

uint64_t sub_1A44D2EF0()
{
  void **v0;

  return sub_1A44D362C(*v0);
}

uint64_t sub_1A44D2F20()
{
  void **v0;

  return sub_1A44D362C(*v0);
}

uint64_t sub_1A44D2F50()
{
  void **v0;

  return sub_1A44D362C(*v0);
}

uint64_t sub_1A44D2F80()
{
  void **v0;

  return sub_1A44D362C(*v0);
}

uint64_t sub_1A44D2FB0()
{
  void **v0;

  return sub_1A44D362C(*v0);
}

uint64_t sub_1A44D2FE0()
{
  void **v0;

  return sub_1A44D362C(*v0);
}

uint64_t sub_1A44D3010()
{
  void **v0;

  return sub_1A44D362C(*v0);
}

uint64_t sub_1A44D3040()
{
  void **v0;

  return sub_1A44D362C(*v0);
}

uint64_t sub_1A44D3064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;

  return sub_1A44D2C08(a1, a2, *v5, v5[1], *(_QWORD *)(a5 + 16), a3, *(_QWORD *)(a5 + 24), a4);
}

uint64_t sub_1A44D307C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1A44D2CC8(*(_QWORD *)(v1 + 8), a1);
}

uint64_t sub_1A44D308C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A44D25C0(*(_QWORD *)(v1 + 8), a1);
}

uint64_t sub_1A44D309C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A44D2D48(*(_QWORD *)(v1 + 8), a1);
}

uint64_t sub_1A44D30AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A44D1B74(a1, a4, a5, a4);
}

uint64_t sub_1A44D30D4()
{
  return 0;
}

uint64_t sub_1A44D30DC()
{
  id *v0;
  id v1;

  v1 = *v0;
  return swift_willThrow();
}

uint64_t sub_1A44D310C()
{
  return sub_1A44D30DC();
}

uint64_t sub_1A44D3120()
{
  return sub_1A46919EC();
}

uint64_t sub_1A44D3134()
{
  return sub_1A46919F8();
}

uint64_t sub_1A44D3148()
{
  return sub_1A4691914();
}

uint64_t sub_1A44D3170()
{
  return sub_1A4691938();
}

uint64_t sub_1A44D3198()
{
  return sub_1A469192C();
}

uint64_t sub_1A44D31C0()
{
  return sub_1A4691944();
}

uint64_t sub_1A44D31E8()
{
  return sub_1A4691950();
}

uint64_t sub_1A44D3210()
{
  return sub_1A469195C();
}

uint64_t sub_1A44D3238()
{
  return sub_1A4691974();
}

uint64_t sub_1A44D3260()
{
  return sub_1A4691980();
}

uint64_t sub_1A44D3288()
{
  return sub_1A469198C();
}

uint64_t sub_1A44D32B0()
{
  return sub_1A4691998();
}

uint64_t sub_1A44D32D8()
{
  return sub_1A46919B0();
}

uint64_t sub_1A44D3300()
{
  return sub_1A4691968();
}

uint64_t sub_1A44D3328()
{
  return sub_1A46919A4();
}

uint64_t sub_1A44D3350()
{
  return sub_1A46919BC();
}

uint64_t sub_1A44D3378()
{
  return sub_1A46919C8();
}

uint64_t sub_1A44D33A0()
{
  return sub_1A46919D4();
}

uint64_t sub_1A44D33C8()
{
  return sub_1A46919E0();
}

uint64_t sub_1A44D33F0()
{
  return sub_1A4691920();
}

uint64_t sub_1A44D3420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1A44D30AC(a1, *v3, v3[1], a2, a3);
}

uint64_t sub_1A44D3430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;

  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v4;
  a3[1] = v5;
  v6 = v4;
  return swift_retain();
}

uint64_t sub_1A44D3460@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  a1[3] = type metadata accessor for InternalEncoder();
  a1[4] = sub_1A44D1AE0();
  *a1 = v3;
  return swift_retain();
}

uint64_t sub_1A44D349C()
{
  return sub_1A4691A4C();
}

uint64_t sub_1A44D34B0()
{
  return sub_1A4691A58();
}

uint64_t type metadata accessor for InvalidKeyedContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InvalidKeyedContainer);
}

uint64_t sub_1A44D34D0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E5B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A44D3510(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t _s19ReminderKitInternal23InvalidUnkeyedContanierVwxx_0(id *a1)
{

  return swift_release();
}

_QWORD *_s19ReminderKitInternal23InvalidUnkeyedContanierVwCP_0(_QWORD *a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;

  v4 = *(id *)a2;
  v5 = *(id *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = v4;
  a1[1] = v6;
  swift_retain();
  return a1;
}

uint64_t _s19ReminderKitInternal23InvalidUnkeyedContanierVwca_0(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  void *v6;

  v4 = *(id *)a2;
  v5 = *(id *)a2;
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

id *_s19ReminderKitInternal23InvalidUnkeyedContanierVwta_0(id *a1, _OWORD *a2)
{

  *(_OWORD *)a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1A44D362C(void *a1)
{
  id v1;

  v1 = a1;
  return swift_willThrow();
}

uint64_t REMHashtagLabelSpecifier.Operation.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 6581857;
  else
    return 29295;
}

uint64_t REMHashtagLabelSpecifier.Operation.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 6581857;
  else
    return 29295;
}

ReminderKitInternal::REMHashtagLabelSpecifier::Operation_optional __swiftcall REMHashtagLabelSpecifier.Operation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ReminderKitInternal::REMHashtagLabelSpecifier::Operation_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_1A44D3710(char *a1, char *a2)
{
  return sub_1A466B598(*a1, *a2);
}

ReminderKitInternal::REMHashtagLabelSpecifier::Operation_optional sub_1A44D371C(Swift::String *a1)
{
  return REMHashtagLabelSpecifier.Operation.init(rawValue:)(*a1);
}

void sub_1A44D3728(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 29295;
  if (*v1)
    v2 = 6581857;
  v3 = 0xE200000000000000;
  if (*v1)
    v3 = 0xE300000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A44D3754()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A44D37C0()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A44D3808()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A44D3870()
{
  sub_1A44D6E90();
  return sub_1A4690B70();
}

uint64_t sub_1A44D38CC()
{
  sub_1A44D6E90();
  return sub_1A4690B34();
}

uint64_t sub_1A44D3918()
{
  _BYTE *v0;

  if (*v0)
    return 6581857;
  else
    return 29295;
}

void sub_1A44D3940()
{
  qword_1EE71E640 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)algn_1EE71E648 = MEMORY[0x1E0DEE9E8];
  byte_1EE71E650 = 1;
}

unint64_t static REMHashtagLabelSpecifier.empty.getter@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;

  if (qword_1EE71C018 != -1)
    swift_once();
  v2 = qword_1EE71E640;
  v3 = *(_QWORD *)algn_1EE71E648;
  *(_QWORD *)a1 = qword_1EE71E640;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = byte_1EE71E650;
  return sub_1A44D39BC(v2);
}

unint64_t sub_1A44D39BC(unint64_t result)
{
  if (result >= 2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t static REMHashtagLabelSpecifier.labels(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)a2 = a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 16) = 1;
  return swift_bridgeObjectRetain();
}

BOOL REMHashtagLabelSpecifier.isEmpty.getter()
{
  _QWORD *v0;

  if (*v0 < 2uLL)
    return 0;
  if (*(_QWORD *)(*v0 + 16))
    return 0;
  return *(_QWORD *)(v0[1] + 16) == 0;
}

unint64_t REMHashtagLabelSpecifier.addingLabel(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t result;
  uint64_t v11;
  unint64_t v12;

  v6 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v7 = *(_BYTE *)(v3 + 16);
  if (*(_QWORD *)v3 >= 2uLL)
  {
    v7 &= 1u;
    v12 = *(_QWORD *)v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A4465F6C(&v11, a1, a2);
    result = swift_bridgeObjectRelease();
    v6 = v12;
  }
  else
  {
    result = sub_1A44D39BC(*(_QWORD *)v3);
  }
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = v7;
  return result;
}

unint64_t REMHashtagLabelSpecifier.adjusted(toBeCompatibleWith:allowsLenientFallback:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  if (*(_QWORD *)(*(_QWORD *)a1 + 16))
  {
    v5 = *(_QWORD *)v3;
    v6 = *(_QWORD *)(v3 + 8);
    v7 = *(_BYTE *)(v3 + 16);
    if (*(_QWORD *)v3 >= 2uLL)
    {
      if (*(_QWORD *)(v5 + 16) || *(_QWORD *)(v6 + 16))
      {
        v11 = v7 & 1;
        if ((a2 & 1) != 0)
        {
          v21 = v7 & 1;
          MEMORY[0x1E0C80A78](a1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v12 = MEMORY[0x1E0DEE9E8];
          v13 = sub_1A44D61AC(MEMORY[0x1E0DEE9E8], v5, (void (*)(uint64_t *__return_ptr, _QWORD *))sub_1A44D58B8);
          v14 = swift_bridgeObjectRelease();
          MEMORY[0x1E0C80A78](v14);
          v15 = sub_1A44D61AC(v12, v6, (void (*)(uint64_t *__return_ptr, _QWORD *))sub_1A44D63C0);
          result = swift_bridgeObjectRelease();
          if (*(_QWORD *)(v13 + 16) || *(_QWORD *)(v15 + 16))
          {
            v16 = v21;
          }
          else
          {
            swift_bridgeObjectRelease();
            result = swift_bridgeObjectRelease();
            v13 = 0;
            v15 = 0;
            v16 = 0;
          }
          *(_QWORD *)a3 = v13;
          *(_QWORD *)(a3 + 8) = v15;
          *(_BYTE *)(a3 + 16) = v16;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v17 = swift_bridgeObjectRetain();
          v18 = sub_1A44D5738(v17, v5);
          swift_bridgeObjectRelease();
          v19 = swift_bridgeObjectRetain();
          v20 = sub_1A44D5738(v19, v6);
          result = swift_bridgeObjectRelease();
          *(_QWORD *)a3 = v18;
          *(_QWORD *)(a3 + 8) = v20;
          *(_BYTE *)(a3 + 16) = v11;
        }
      }
      else
      {
        *(_QWORD *)a3 = v5;
        *(_QWORD *)(a3 + 8) = v6;
        *(_BYTE *)(a3 + 16) = v7;
        swift_bridgeObjectRetain();
        return swift_bridgeObjectRetain();
      }
    }
    else
    {
      *(_QWORD *)a3 = v5;
      *(_QWORD *)(a3 + 8) = v6;
      *(_BYTE *)(a3 + 16) = v7;
      return sub_1A44D39BC(v5);
    }
  }
  else
  {
    if (qword_1EE71C018 != -1)
      swift_once();
    v9 = qword_1EE71E640;
    v10 = *(_QWORD *)algn_1EE71E648;
    *(_QWORD *)a3 = qword_1EE71E640;
    *(_QWORD *)(a3 + 8) = v10;
    *(_BYTE *)(a3 + 16) = byte_1EE71E650;
    return sub_1A44D39BC(v9);
  }
  return result;
}

uint64_t sub_1A44D3D54@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t *v25;
  _QWORD v26[2];
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[2];
  uint64_t v33;

  v26[1] = a2;
  v27 = a3;
  v4 = sub_1A468FBEC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243000);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4695C10;
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v12;
  v33 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1A469018C();
  v14 = sub_1A4690210();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v10, 0, 1, v14);
  v32[0] = v11;
  v32[1] = v12;
  sub_1A4466118();
  v30 = sub_1A4691260();
  v31 = v15;
  sub_1A468FBC8();
  v16 = sub_1A4691218();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  sub_1A446615C((uint64_t)v10);
  swift_bridgeObjectRetain();
  sub_1A4465F6C(v32, v16, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = inited;
  v29 = v33;
  v19 = swift_bridgeObjectRetain();
  v20 = sub_1A44DFD28(v19, sub_1A44679E0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v21 = sub_1A4461440(v20);
  v23 = v22;
  result = swift_bridgeObjectRelease();
  v25 = v27;
  *v27 = v21;
  v25[1] = v23;
  return result;
}

uint64_t sub_1A44D3FAC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t *v25;
  _QWORD v26[2];
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[2];
  uint64_t v33;

  v26[1] = a2;
  v27 = a3;
  v4 = sub_1A468FBEC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243000);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4695C10;
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v12;
  v33 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1A469018C();
  v14 = sub_1A4690210();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v10, 0, 1, v14);
  v32[0] = v11;
  v32[1] = v12;
  sub_1A4466118();
  v30 = sub_1A4691260();
  v31 = v15;
  sub_1A468FBC8();
  v16 = sub_1A4691218();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  sub_1A446615C((uint64_t)v10);
  swift_bridgeObjectRetain();
  sub_1A4465F6C(v32, v16, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = inited;
  v29 = v33;
  v19 = swift_bridgeObjectRetain();
  v20 = sub_1A44DFD28(v19, sub_1A446619C);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v21 = sub_1A4461440(v20);
  v23 = v22;
  result = swift_bridgeObjectRelease();
  v25 = v27;
  *v27 = v21;
  v25[1] = v23;
  return result;
}

uint64_t REMHashtagLabelSpecifier.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v5;

  v3 = *v1;
  if (!*v1 || v3 == 1)
    return sub_1A4691C98();
  v5 = v1[1];
  sub_1A4691C98();
  sub_1A44D5E98(a1, v3);
  sub_1A44D5E98(a1, v5);
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t REMHashtagLabelSpecifier.hashValue.getter()
{
  unint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  _BYTE v4[72];

  v2 = *v0;
  v1 = v0[1];
  sub_1A4691C8C();
  sub_1A4691C98();
  if (v2 > 1)
  {
    sub_1A44D5E98((uint64_t)v4, v2);
    sub_1A44D5E98((uint64_t)v4, v1);
    sub_1A4690948();
    swift_bridgeObjectRelease();
  }
  return sub_1A4691CC8();
}

uint64_t sub_1A44D4384(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A44D43B0 + 4 * byte_1A469A830[a1]))(1702060386, 0xE400000000000000);
}

unint64_t sub_1A44D43B0()
{
  return 0xD000000000000014;
}

uint64_t sub_1A44D43D8()
{
  return 0x7274536C6562616CLL;
}

uint64_t sub_1A44D43F8()
{
  return 0x6F6974617265706FLL;
}

uint64_t sub_1A44D4414(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A44D4440 + 4 * byte_1A469A835[a1]))(1702060386, 0xE400000000000000);
}

unint64_t sub_1A44D4440()
{
  return 0xD000000000000014;
}

uint64_t sub_1A44D4468()
{
  return 0x7274536C6562616CLL;
}

uint64_t sub_1A44D4488()
{
  return 0x6F6974617265706FLL;
}

uint64_t sub_1A44D44A8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v5;

  v3 = *v1;
  if (!*v1 || v3 == 1)
    return sub_1A4691C98();
  v5 = v1[1];
  sub_1A4691C98();
  sub_1A44D5E98(a1, v3);
  sub_1A44D5E98(a1, v5);
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A44D4568()
{
  unint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  _BYTE v4[72];

  v2 = *v0;
  v1 = v0[1];
  sub_1A4691C8C();
  sub_1A4691C98();
  if (v2 > 1)
  {
    sub_1A44D5E98((uint64_t)v4, v2);
    sub_1A44D5E98((uint64_t)v4, v1);
    sub_1A4690948();
    swift_bridgeObjectRelease();
  }
  return sub_1A4691CC8();
}

void sub_1A44D4624(char *a1)
{
  sub_1A466B78C(*a1);
}

void sub_1A44D4630()
{
  char *v0;

  sub_1A4635C98(*v0);
}

void sub_1A44D4638(uint64_t a1)
{
  char *v1;

  sub_1A4637144(a1, *v1);
}

void sub_1A44D4640(uint64_t a1)
{
  char *v1;

  sub_1A46377C0(a1, *v1);
}

uint64_t sub_1A44D4648@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A44D6DBC();
  *a1 = result;
  return result;
}

uint64_t sub_1A44D4674@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A44D4384(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A44D469C()
{
  unsigned __int8 *v0;

  return sub_1A44D4414(*v0);
}

uint64_t sub_1A44D46A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A44D6DBC();
  *a1 = result;
  return result;
}

void sub_1A44D46C8(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1A44D46D4()
{
  sub_1A44D63D8();
  return sub_1A4691DB8();
}

uint64_t sub_1A44D46FC()
{
  sub_1A44D63D8();
  return sub_1A4691DC4();
}

void sub_1A44D4724(char *a1)
{
  sub_1A466B628(*a1);
}

void sub_1A44D4730()
{
  char *v0;

  sub_1A4635D6C(*v0);
}

void sub_1A44D4738()
{
  __asm { BR              X10 }
}

uint64_t sub_1A44D4778()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A44D47D4(uint64_t a1)
{
  char *v1;

  sub_1A4637890(a1, *v1);
}

uint64_t sub_1A44D47DC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A44D6E48();
  *a1 = result;
  return result;
}

uint64_t sub_1A44D4808()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A44D483C + 4 * byte_1A469A83E[*v0]))();
}

void sub_1A44D483C(_QWORD *a1@<X8>)
{
  *a1 = 0x736C6562614C6F6ELL;
  a1[1] = 0xE800000000000000;
}

void sub_1A44D4858(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000019;
  a1[1] = 0x80000001A46BBF00;
}

void sub_1A44D4878(_QWORD *a1@<X8>)
{
  *a1 = 0x736C6562616CLL;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1A44D4890()
{
  sub_1A44D6E04();
  return sub_1A4690B70();
}

uint64_t sub_1A44D48EC()
{
  sub_1A44D6E04();
  return sub_1A4690B34();
}

uint64_t REMHashtagLabelSpecifier.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E658);
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A44D63D8();
  sub_1A4691D28();
  if (!v1)
  {
    sub_1A44D641C();
    sub_1A46917C4();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t REMHashtagLabelSpecifier.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E678);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = v1[1];
  v12 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A44D63D8();
  sub_1A4691D40();
  if (!v8)
  {
    LOBYTE(v11) = 0;
    goto LABEL_5;
  }
  if (v8 == 1)
  {
    LOBYTE(v11) = 1;
LABEL_5:
    v13 = 0;
    sub_1A44D64A4();
    goto LABEL_6;
  }
  LOBYTE(v11) = 2;
  v13 = 0;
  sub_1A44D64A4();
  sub_1A4691890();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v11 = v8;
  v13 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243F40);
  sub_1A44D64E8(&qword_1ED243130, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
  sub_1A4691890();
  v11 = v10;
  v13 = 2;
  sub_1A4691890();
  LOBYTE(v11) = v12 & 1;
  v13 = 4;
  sub_1A44D6548();
LABEL_6:
  sub_1A4691890();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A44D4E98(_QWORD *a1)
{
  return REMHashtagLabelSpecifier.init(from:)(a1);
}

uint64_t sub_1A44D4EAC(_QWORD *a1)
{
  return REMHashtagLabelSpecifier.encode(to:)(a1);
}

uint64_t REMHashtagLabelSpecifier.description.getter()
{
  _QWORD *v0;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  unint64_t v7;

  if (!*v0)
    return 0x6C6562614C6C6C61;
  if (*v0 == 1)
    return 0x736C6562614C6F6ELL;
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1A4459BD0(v2);
  swift_bridgeObjectRelease();
  v6 = v3;
  sub_1A44D543C((uint64_t *)&v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A4469630();
  sub_1A4690828();
  swift_release();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1A4459BD0(v4);
  swift_bridgeObjectRelease();
  v6 = v5;
  sub_1A44D543C((uint64_t *)&v6);
  sub_1A4690828();
  swift_release();
  v6 = 0;
  v7 = 0xE000000000000000;
  sub_1A4691410();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)0xD000000000000011;
  v7 = 0x80000001A46BE680;
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  return (uint64_t)v6;
}

uint64_t REMHashtagLabelSpecifier.init(stringRepresentation:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  uint64_t result;
  char v13;
  __int128 v14;
  char v15;

  v3 = sub_1A46908DC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A46908D0();
  v7 = sub_1A46908AC();
  v9 = v8;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v9 >> 60 == 15)
  {
    v10 = (void *)objc_opt_self();
    v11 = (void *)sub_1A469087C();
    objc_msgSend(v10, sel_internalErrorWithDebugDescription_, v11);

    return swift_willThrow();
  }
  else
  {
    sub_1A468FB74();
    swift_allocObject();
    sub_1A468FB68();
    sub_1A44D658C();
    sub_1A468FB5C();
    swift_release();
    result = sub_1A44D65D0(v7, v9);
    if (!v1)
    {
      v13 = v15;
      *(_OWORD *)a1 = v14;
      *(_BYTE *)(a1 + 16) = v13;
    }
  }
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> REMHashtagLabelSpecifier.stringRepresentation()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String result;
  _QWORD v18[3];
  char v19;

  v2 = sub_1A46908DC();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v6 = v0[1];
  v7 = (void *)*((unsigned __int8 *)v0 + 16);
  sub_1A468FBB0();
  swift_allocObject();
  sub_1A468FBA4();
  v18[1] = v5;
  v18[2] = v6;
  v19 = (char)v7;
  sub_1A44D65E4();
  v8 = sub_1A468FB98();
  if (!v1)
  {
    v10 = v8;
    v11 = v9;
    sub_1A46908D0();
    v12 = sub_1A46908B8();
    if (v13)
    {
      v4 = (char *)v12;
      v7 = v13;
      sub_1A44695EC(v10, v11);
      swift_release();
      goto LABEL_5;
    }
    v16 = (void *)objc_opt_self();
    v4 = (char *)sub_1A469087C();
    objc_msgSend(v16, sel_internalErrorWithDebugDescription_, v4);

    swift_willThrow();
    sub_1A44695EC(v10, v11);
  }
  swift_release();
LABEL_5:
  v14 = (uint64_t)v4;
  v15 = v7;
  result._object = v15;
  result._countAndFlagsBits = v14;
  return result;
}

uint64_t sub_1A44D543C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A462EBDC(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1A44BBE00(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A44D54A4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F4D0);
  result = sub_1A46913D4();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_1A4691C8C();
    swift_bridgeObjectRetain();
    sub_1A4690948();
    result = sub_1A4691CC8();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A44D5738(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_1A44D58D0((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_1A44D58D0((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x1A85A0114](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1A44D58B8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1A44D3D54(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1A44D58D0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t i;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v21;
  unint64_t j;
  unint64_t v23;
  _QWORD *v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = a2;
  v31 = *(_QWORD *)(a3 + 16);
  if (!v31)
  {
    v26 = 0;
    goto LABEL_27;
  }
  v32 = a4 + 56;
  v30 = a3 + 32;
  swift_bridgeObjectRetain();
  v28 = 0;
  for (i = 0; i != v31; ++i)
  {
    v7 = (uint64_t *)(v30 + 16 * i);
    v9 = *v7;
    v8 = v7[1];
    sub_1A4691C8C();
    swift_bridgeObjectRetain();
    sub_1A4690948();
    v10 = sub_1A4691CC8();
    v11 = -1 << *(_BYTE *)(a4 + 32);
    v12 = v10 & ~v11;
    v13 = v12 >> 6;
    v14 = 1 << v12;
    if (((1 << v12) & *(_QWORD *)(v32 + 8 * (v12 >> 6))) == 0)
      goto LABEL_3;
    v15 = *(_QWORD *)(a4 + 48);
    v16 = (_QWORD *)(v15 + 16 * v12);
    v17 = *v16 == v9 && v16[1] == v8;
    if (!v17 && (sub_1A4691A40() & 1) == 0)
    {
      v21 = ~v11;
      for (j = v12 + 1; ; j = v23 + 1)
      {
        v23 = j & v21;
        if (((*(_QWORD *)(v32 + (((j & v21) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v21)) & 1) == 0)
          break;
        v24 = (_QWORD *)(v15 + 16 * v23);
        v25 = *v24 == v9 && v24[1] == v8;
        if (v25 || (sub_1A4691A40() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v13 = v23 >> 6;
          v14 = 1 << v23;
          goto LABEL_12;
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      continue;
    }
    result = swift_bridgeObjectRelease();
LABEL_12:
    v19 = a1[v13];
    a1[v13] = v14 | v19;
    if ((v14 & v19) == 0 && __OFADD__(v28++, 1))
    {
      __break(1u);
      return result;
    }
  }
  swift_bridgeObjectRelease();
  v5 = a2;
  v26 = v28;
LABEL_27:
  swift_retain();
  return sub_1A44D54A4(a1, v5, v26, a4);
}

uint64_t sub_1A44D5AE0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v12;
  int64_t v13;

  result = sub_1A4691CC8();
  v4 = 0;
  v5 = 0;
  v6 = a2 + 56;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v9 &= v9 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v5++, 1))
      goto LABEL_19;
    if (v5 >= v10)
      return sub_1A4691C98();
    v12 = *(_QWORD *)(v6 + 8 * v5);
    if (!v12)
      break;
LABEL_16:
    v9 = (v12 - 1) & v12;
LABEL_5:
    sub_1A4691C8C();
    sub_1A4691C98();
    result = sub_1A4691CC8();
    v4 ^= result;
  }
  v13 = v5 + 1;
  if (v5 + 1 >= v10)
    return sub_1A4691C98();
  v12 = *(_QWORD *)(v6 + 8 * v13);
  if (v12)
  {
    ++v5;
    goto LABEL_16;
  }
  while (1)
  {
    v5 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v5 >= v10)
      return sub_1A4691C98();
    v12 = *(_QWORD *)(v6 + 8 * v5);
    ++v13;
    if (v12)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

void sub_1A44D5C48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;

  sub_1A4691CC8();
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1A46912D8();
    sub_1A44C178C();
    sub_1A4460634();
    sub_1A4690DB0();
    a2 = v21;
    v3 = v22;
    v4 = v23;
    v5 = v24;
    v6 = v25;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a2 + 32);
    v3 = a2 + 56;
    v4 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    v5 = 0;
  }
  v10 = 0;
  v11 = (unint64_t)(v4 + 64) >> 6;
  while (a2 < 0)
  {
    if (!sub_1A4691338())
      goto LABEL_26;
    sub_1A44C178C();
    swift_dynamicCast();
    v15 = v20;
    if (!v20)
      goto LABEL_26;
    v14 = v5;
    v12 = v6;
LABEL_10:
    v17 = sub_1A4691134();

    v10 ^= v17;
    v5 = v14;
    v6 = v12;
  }
  if (v6)
  {
    v12 = (v6 - 1) & v6;
    v13 = __clz(__rbit64(v6)) | (v5 << 6);
    v14 = v5;
LABEL_9:
    v15 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v13);
    v20 = v15;
    v16 = v15;
    if (!v15)
      goto LABEL_26;
    goto LABEL_10;
  }
  v14 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v14 >= v11)
      goto LABEL_26;
    v18 = *(_QWORD *)(v3 + 8 * v14);
    if (!v18)
    {
      v14 = v5 + 2;
      if (v5 + 2 >= v11)
        goto LABEL_26;
      v18 = *(_QWORD *)(v3 + 8 * v14);
      if (!v18)
      {
        v19 = v5 + 3;
        while (v11 != v19)
        {
          v18 = *(_QWORD *)(v3 + 8 * v19++);
          if (v18)
          {
            v14 = v19 - 1;
            goto LABEL_22;
          }
        }
LABEL_26:
        sub_1A4460EDC();
        sub_1A4691C98();
        return;
      }
    }
LABEL_22:
    v12 = (v18 - 1) & v18;
    v13 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_1A44D5E98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v13;
  int64_t v14;

  sub_1A4691CC8();
  v3 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1))
      goto LABEL_19;
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_1A4691C98();
    }
    v13 = *(_QWORD *)(v3 + 8 * v10);
    if (!v13)
      break;
LABEL_16:
    v6 = (v13 - 1) & v13;
LABEL_5:
    sub_1A4691C8C();
    swift_bridgeObjectRetain();
    sub_1A4690948();
    v11 = sub_1A4691CC8();
    result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  v14 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_17;
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    v10 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v10 >= v7)
      goto LABEL_17;
    v13 = *(_QWORD *)(v3 + 8 * v10);
    ++v14;
    if (v13)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t _s19ReminderKitInternal24REMHashtagLabelSpecifierO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  if (!*(_QWORD *)a1)
  {
    if (!v6)
    {
      v3 = 0;
      v8 = 1;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v3 == 1)
  {
    if (v6 == 1)
    {
      v3 = 1;
      v8 = 1;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v6 < 2)
  {
LABEL_8:
    sub_1A44D39BC(*(_QWORD *)a2);
    sub_1A44D39BC(v3);
LABEL_9:
    v8 = 0;
    goto LABEL_10;
  }
  sub_1A44D39BC(*(_QWORD *)a2);
  sub_1A44D39BC(v3);
  if ((sub_1A4464338(v3, v6) & 1) == 0 || (sub_1A4464338(v2, v5) & 1) == 0)
    goto LABEL_9;
  if ((v4 & 1) != 0)
    v10 = 6581857;
  else
    v10 = 29295;
  if ((v4 & 1) != 0)
    v11 = 0xE300000000000000;
  else
    v11 = 0xE200000000000000;
  if ((v7 & 1) != 0)
    v12 = 6581857;
  else
    v12 = 29295;
  if ((v7 & 1) != 0)
    v13 = 0xE300000000000000;
  else
    v13 = 0xE200000000000000;
  if (v10 == v12 && v11 == v13)
  {
    swift_bridgeObjectRelease_n();
    v8 = 1;
  }
  else
  {
    v8 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_10:
  sub_1A44D6ED4(v3);
  sub_1A44D6ED4(v6);
  return v8 & 1;
}

uint64_t sub_1A44D61AC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, _QWORD *))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  unint64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;

  v23 = a1;
  v6 = a2 + 56;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 56);
  v19 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  if (v9)
    goto LABEL_6;
LABEL_7:
  if (__OFADD__(v11++, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v11 >= v19)
    goto LABEL_29;
  v15 = *(_QWORD *)(v6 + 8 * v11);
  if (v15)
    goto LABEL_19;
  v16 = v11 + 1;
  if (v11 + 1 >= v19)
  {
LABEL_29:
    swift_release();
    return v23;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (!v15)
  {
    v16 = v11 + 2;
    if (v11 + 2 >= v19)
      goto LABEL_29;
    v15 = *(_QWORD *)(v6 + 8 * v16);
    if (!v15)
    {
      v16 = v11 + 3;
      if (v11 + 3 >= v19)
        goto LABEL_29;
      v15 = *(_QWORD *)(v6 + 8 * v16);
      if (!v15)
      {
        v16 = v11 + 4;
        if (v11 + 4 < v19)
        {
          v15 = *(_QWORD *)(v6 + 8 * v16);
          if (v15)
            goto LABEL_18;
          while (1)
          {
            v11 = v16 + 1;
            if (__OFADD__(v16, 1))
              break;
            if (v11 >= v19)
              goto LABEL_29;
            v15 = *(_QWORD *)(v6 + 8 * v11);
            ++v16;
            if (v15)
              goto LABEL_19;
          }
LABEL_31:
          __break(1u);
          return result;
        }
        goto LABEL_29;
      }
    }
  }
LABEL_18:
  v11 = v16;
LABEL_19:
  v9 = (v15 - 1) & v15;
  for (i = __clz(__rbit64(v15)) + (v11 << 6); ; i = v12 | (v11 << 6))
  {
    v17 = (_QWORD *)(*(_QWORD *)(a2 + 48) + 16 * i);
    v18 = v17[1];
    v22[0] = *v17;
    v22[1] = v18;
    swift_bridgeObjectRetain();
    a3(&v20, v22);
    if (v3)
      break;
    if (v21)
    {
      sub_1A4465F6C(&v20, v20, v21);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (!v9)
        goto LABEL_7;
    }
    else
    {
      result = swift_bridgeObjectRelease();
      if (!v9)
        goto LABEL_7;
    }
LABEL_6:
    v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A44D63C0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1A44D3FAC(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_1A44D63D8()
{
  unint64_t result;

  result = qword_1EE71E660;
  if (!qword_1EE71E660)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469AC88, &type metadata for REMHashtagLabelSpecifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71E660);
  }
  return result;
}

unint64_t sub_1A44D641C()
{
  unint64_t result;

  result = qword_1EE71E668;
  if (!qword_1EE71E668)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469AC60, &type metadata for REMHashtagLabelSpecifier.Base);
    atomic_store(result, (unint64_t *)&qword_1EE71E668);
  }
  return result;
}

unint64_t sub_1A44D6460()
{
  unint64_t result;

  result = qword_1EE71E670;
  if (!qword_1EE71E670)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelSpecifier.Operation, &type metadata for REMHashtagLabelSpecifier.Operation);
    atomic_store(result, (unint64_t *)&qword_1EE71E670);
  }
  return result;
}

unint64_t sub_1A44D64A4()
{
  unint64_t result;

  result = qword_1EE71E680;
  if (!qword_1EE71E680)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469AC38, &type metadata for REMHashtagLabelSpecifier.Base);
    atomic_store(result, (unint64_t *)&qword_1EE71E680);
  }
  return result;
}

uint64_t sub_1A44D64E8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED243F40);
    v8 = a2;
    result = MEMORY[0x1A85A0000](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A44D6548()
{
  unint64_t result;

  result = qword_1EE71E688;
  if (!qword_1EE71E688)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelSpecifier.Operation, &type metadata for REMHashtagLabelSpecifier.Operation);
    atomic_store(result, (unint64_t *)&qword_1EE71E688);
  }
  return result;
}

unint64_t sub_1A44D658C()
{
  unint64_t result;

  result = qword_1EE71E690;
  if (!qword_1EE71E690)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelSpecifier, &type metadata for REMHashtagLabelSpecifier);
    atomic_store(result, (unint64_t *)&qword_1EE71E690);
  }
  return result;
}

uint64_t sub_1A44D65D0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1A44695EC(a1, a2);
  return a1;
}

unint64_t sub_1A44D65E4()
{
  unint64_t result;

  result = qword_1EE71E698;
  if (!qword_1EE71E698)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelSpecifier, &type metadata for REMHashtagLabelSpecifier);
    atomic_store(result, (unint64_t *)&qword_1EE71E698);
  }
  return result;
}

unint64_t sub_1A44D662C()
{
  unint64_t result;

  result = qword_1EE71E6A0;
  if (!qword_1EE71E6A0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelSpecifier.Operation, &type metadata for REMHashtagLabelSpecifier.Operation);
    atomic_store(result, (unint64_t *)&qword_1EE71E6A0);
  }
  return result;
}

unint64_t sub_1A44D6674()
{
  unint64_t result;

  result = qword_1EE71E6A8;
  if (!qword_1EE71E6A8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelSpecifier, &type metadata for REMHashtagLabelSpecifier);
    atomic_store(result, (unint64_t *)&qword_1EE71E6A8);
  }
  return result;
}

unint64_t destroy for REMHashtagLabelSpecifier(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s19ReminderKitInternal24REMHashtagLabelSpecifierOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for REMHashtagLabelSpecifier(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v6 = *a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_OWORD *)a1 = v6;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(_QWORD *)a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

uint64_t assignWithTake for REMHashtagLabelSpecifier(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
LABEL_6:
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMHashtagLabelSpecifier(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 17))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for REMHashtagLabelSpecifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_1A44D695C(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1A44D6974(uint64_t result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)(result + 8) = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelSpecifier()
{
  return &type metadata for REMHashtagLabelSpecifier;
}

uint64_t storeEnumTagSinglePayload for REMHashtagLabelSpecifier.Operation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A44D69F4 + 4 * byte_1A469A84B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A44D6A28 + 4 * byte_1A469A846[v4]))();
}

uint64_t sub_1A44D6A28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44D6A30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A44D6A38);
  return result;
}

uint64_t sub_1A44D6A44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A44D6A4CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A44D6A50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44D6A58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelSpecifier.Operation()
{
  return &type metadata for REMHashtagLabelSpecifier.Operation;
}

uint64_t storeEnumTagSinglePayload for REMHashtagLabelSpecifier.Base(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A44D6AC0 + 4 * byte_1A469A855[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A44D6AF4 + 4 * byte_1A469A850[v4]))();
}

uint64_t sub_1A44D6AF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44D6AFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A44D6B04);
  return result;
}

uint64_t sub_1A44D6B10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A44D6B18);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A44D6B1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44D6B24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelSpecifier.Base()
{
  return &type metadata for REMHashtagLabelSpecifier.Base;
}

uint64_t getEnumTagSinglePayload for REMHashtagLabelSpecifier.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for REMHashtagLabelSpecifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A44D6C1C + 4 * byte_1A469A85F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A44D6C50 + 4 * byte_1A469A85A[v4]))();
}

uint64_t sub_1A44D6C50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44D6C58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A44D6C60);
  return result;
}

uint64_t sub_1A44D6C6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A44D6C74);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A44D6C78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44D6C80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelSpecifier.CodingKeys()
{
  return &type metadata for REMHashtagLabelSpecifier.CodingKeys;
}

unint64_t sub_1A44D6CA0()
{
  unint64_t result;

  result = qword_1EE71E6B0;
  if (!qword_1EE71E6B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469AB70, &type metadata for REMHashtagLabelSpecifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71E6B0);
  }
  return result;
}

unint64_t sub_1A44D6CE8()
{
  unint64_t result;

  result = qword_1EE71E6B8;
  if (!qword_1EE71E6B8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469AC10, &type metadata for REMHashtagLabelSpecifier.Base);
    atomic_store(result, (unint64_t *)&qword_1EE71E6B8);
  }
  return result;
}

unint64_t sub_1A44D6D30()
{
  unint64_t result;

  result = qword_1EE71E6C0;
  if (!qword_1EE71E6C0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469AAA8, &type metadata for REMHashtagLabelSpecifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71E6C0);
  }
  return result;
}

unint64_t sub_1A44D6D78()
{
  unint64_t result;

  result = qword_1EE71E6C8;
  if (!qword_1EE71E6C8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469AAD0, &type metadata for REMHashtagLabelSpecifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71E6C8);
  }
  return result;
}

uint64_t sub_1A44D6DBC()
{
  unint64_t v0;

  v0 = sub_1A469171C();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

unint64_t sub_1A44D6E04()
{
  unint64_t result;

  result = qword_1EE71E6D0;
  if (!qword_1EE71E6D0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469AB98, &type metadata for REMHashtagLabelSpecifier.Base);
    atomic_store(result, (unint64_t *)&qword_1EE71E6D0);
  }
  return result;
}

uint64_t sub_1A44D6E48()
{
  unint64_t v0;

  v0 = sub_1A469171C();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_1A44D6E90()
{
  unint64_t result;

  result = qword_1EE71E6D8;
  if (!qword_1EE71E6D8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelSpecifier.Operation, &type metadata for REMHashtagLabelSpecifier.Operation);
    atomic_store(result, (unint64_t *)&qword_1EE71E6D8);
  }
  return result;
}

unint64_t sub_1A44D6ED4(unint64_t result)
{
  if (result >= 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall REMChangeItemWithUnsavedSectionIDsOrdering.updateOrderingOfSections(withSectionIDsOrdering:)(Swift::OpaquePointer withSectionIDsOrdering)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v3 = v2;
  v4 = v1;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 40);
  v6 = swift_bridgeObjectRetain();
  v5(v6, v4, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(1, v4, v3);
}

id sub_1A44D6F50()
{
  void *v0;

  return objc_msgSend(v0, sel_shouldUpdateSectionsOrdering);
}

id sub_1A44D6F70(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setShouldUpdateSectionsOrdering_, a1 & 1);
}

id (*sub_1A44D6F84(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_shouldUpdateSectionsOrdering);
  return sub_1A44D6FC4;
}

id sub_1A44D6FC4(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setShouldUpdateSectionsOrdering_, *(unsigned __int8 *)(a1 + 8));
}

uint64_t (*sub_1A44D6FE4(uint64_t **a1))()
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_1A44D7028(v2);
  return sub_1A445F918;
}

uint64_t (*sub_1A44D7028(uint64_t *a1))()
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;

  a1[1] = (uint64_t)v1;
  v3 = objc_msgSend(v1, sel_unsavedSectionIDsOrdering);
  if (v3)
  {
    v4 = v3;
    sub_1A44C178C();
    v5 = sub_1A4690BA0();

  }
  else
  {
    v5 = 0;
  }
  *a1 = v5;
  return sub_1A44D70A4;
}

id (*sub_1A44D70A8(uint64_t a1))(uint64_t)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_shouldUpdateSectionsOrdering);
  return sub_1A44D72B4;
}

uint64_t sub_1A44D70E8()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_unsavedSectionIDsOrdering);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1A44C178C();
  v3 = sub_1A4690BA0();

  return v3;
}

void sub_1A44D7148(uint64_t a1)
{
  void *v1;
  id v2;

  if (a1)
  {
    sub_1A44C178C();
    v2 = (id)sub_1A4690B94();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  objc_msgSend(v1, sel_setUnsavedSectionIDsOrdering_, v2);

}

uint64_t dispatch thunk of REMChangeItemWithUnsavedSectionIDsOrdering.shouldUpdateSectionsOrdering.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of REMChangeItemWithUnsavedSectionIDsOrdering.shouldUpdateSectionsOrdering.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of REMChangeItemWithUnsavedSectionIDsOrdering.shouldUpdateSectionsOrdering.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of REMChangeItemWithUnsavedSectionIDsOrdering.unsavedSectionIDsOrdering.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of REMChangeItemWithUnsavedSectionIDsOrdering.unsavedSectionIDsOrdering.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of REMChangeItemWithUnsavedSectionIDsOrdering.unsavedSectionIDsOrdering.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

void sub_1A44D71E0(uint64_t *a1, char a2)
{
  uint64_t v3;
  id v4;

  v3 = *a1;
  if ((a2 & 1) != 0)
  {
    if (v3)
    {
      sub_1A44C178C();
      swift_bridgeObjectRetain();
      v4 = (id)sub_1A4690B94();
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = 0;
    }
    objc_msgSend((id)a1[1], sel_setUnsavedSectionIDsOrdering_, v4);
    swift_bridgeObjectRelease();
  }
  else if (v3)
  {
    sub_1A44C178C();
    v4 = (id)sub_1A4690B94();
    swift_bridgeObjectRelease();
    objc_msgSend((id)a1[1], sel_setUnsavedSectionIDsOrdering_, v4);
  }
  else
  {
    v4 = 0;
    objc_msgSend((id)a1[1], sel_setUnsavedSectionIDsOrdering_, 0);
  }

}

uint64_t REMBertTokenizer.__allocating_init(url:maxLen:asciiOnly:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  REMBertTokenizer.init(url:maxLen:asciiOnly:)(a1, a2, a3);
  return v6;
}

uint64_t REMBertTokenizer.init(url:maxLen:asciiOnly:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  char v39;
  unint64_t v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  char v46;
  _QWORD *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  char v51;
  char v52;
  unint64_t v53;
  uint64_t v54;
  _BOOL8 v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  char v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t result;
  _QWORD v67[6];
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[2];
  uint64_t v75;

  v5 = v3;
  type metadata accessor for BasicTokenizer();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = &unk_1E4C0FF70;
  *(_QWORD *)(v3 + 16) = v9;
  v10 = sub_1A4690870();
  if (v4)
  {
    v12 = sub_1A468FF7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
    swift_release();
    swift_deallocPartialClassInstance();
    return v5;
  }
  v13 = v10;
  v14 = v11;
  v68 = a2;
  v69 = a3;
  v70 = a1;
  v72 = v5;
  v74[0] = 10;
  v74[1] = 0xE100000000000000;
  MEMORY[0x1E0C80A78](v10);
  v67[2] = v74;
  swift_bridgeObjectRetain();
  v15 = sub_1A44AAF38(0x7FFFFFFFFFFFFFFFLL, 1, sub_1A44CF2DC, (uint64_t)v67, v13, v14);
  v71 = 0;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v74[0] = MEMORY[0x1E0DEE9D8];
    sub_1A445A8BC(0, v16, 0);
    v17 = v74[0];
    v18 = (uint64_t *)(v15 + 56);
    do
    {
      v20 = *(v18 - 3);
      v19 = *(v18 - 2);
      v21 = *(v18 - 1);
      v22 = *v18;
      swift_bridgeObjectRetain();
      v23 = MEMORY[0x1A859E164](v20, v19, v21, v22);
      v25 = v24;
      swift_bridgeObjectRelease();
      v74[0] = v17;
      v27 = *(_QWORD *)(v17 + 16);
      v26 = *(_QWORD *)(v17 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1A445A8BC(v26 > 1, v27 + 1, 1);
        v17 = v74[0];
      }
      *(_QWORD *)(v17 + 16) = v27 + 1;
      v28 = v17 + 16 * v27;
      *(_QWORD *)(v28 + 32) = v23;
      *(_QWORD *)(v28 + 40) = v25;
      v18 += 4;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x1E0DEE9D8];
  }
  v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v30 = (_QWORD *)sub_1A443D3E0(MEMORY[0x1E0DEE9D8]);
  v31 = (_QWORD *)sub_1A444AA78(v29);
  v73 = *(_QWORD *)(v17 + 16);
  v67[5] = v17;
  if (!v73)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    v5 = v72;
    *(_QWORD *)(v72 + 48) = v30;
    *(_QWORD *)(v5 + 56) = v31;
    *(_QWORD *)(v5 + 32) = v68;
    *(_BYTE *)(v5 + 40) = v69 & 1;
    type metadata accessor for WordpieceTokenizer();
    v63 = (_QWORD *)swift_allocObject();
    v63[2] = 0x5D4B4E555BLL;
    v63[3] = 0xE500000000000000;
    v63[4] = 100;
    v63[5] = v30;
    v64 = sub_1A468FF7C();
    v65 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8);
    swift_bridgeObjectRetain();
    v65(v70, v64);
    *(_QWORD *)(v5 + 24) = v63;
    return v5;
  }
  v32 = v17;
  v33 = 0;
  v34 = (uint64_t *)(v32 + 40);
  while (1)
  {
    v36 = *(v34 - 1);
    v37 = *v34;
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v74[0] = v30;
    v75 = v36;
    v40 = sub_1A443E4C8(v36, v37);
    v41 = v30[2];
    v42 = (v39 & 1) == 0;
    v43 = v41 + v42;
    if (__OFADD__(v41, v42))
      break;
    v44 = v39;
    if (v30[3] >= v43)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v30 = (_QWORD *)v74[0];
        if ((v39 & 1) != 0)
          goto LABEL_21;
      }
      else
      {
        sub_1A44472A8();
        v30 = (_QWORD *)v74[0];
        if ((v44 & 1) != 0)
          goto LABEL_21;
      }
    }
    else
    {
      sub_1A4440FA8(v43, isUniquelyReferenced_nonNull_native);
      v45 = sub_1A443E4C8(v75, v37);
      if ((v44 & 1) != (v46 & 1))
        goto LABEL_42;
      v40 = v45;
      v30 = (_QWORD *)v74[0];
      if ((v44 & 1) != 0)
      {
LABEL_21:
        *(_QWORD *)(v30[7] + 8 * v40) = v33;
        goto LABEL_25;
      }
    }
    v30[(v40 >> 6) + 8] |= 1 << v40;
    v47 = (_QWORD *)(v30[6] + 16 * v40);
    *v47 = v75;
    v47[1] = v37;
    *(_QWORD *)(v30[7] + 8 * v40) = v33;
    v48 = v30[2];
    v49 = __OFADD__(v48, 1);
    v50 = v48 + 1;
    if (v49)
      goto LABEL_40;
    v30[2] = v50;
    swift_bridgeObjectRetain();
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v51 = swift_isUniquelyReferenced_nonNull_native();
    v74[0] = v31;
    v53 = sub_1A443E654(v33);
    v54 = v31[2];
    v55 = (v52 & 1) == 0;
    v56 = v54 + v55;
    if (__OFADD__(v54, v55))
      goto LABEL_39;
    v57 = v52;
    if (v31[3] >= v56)
    {
      if ((v51 & 1) != 0)
      {
        v31 = (_QWORD *)v74[0];
        if ((v52 & 1) != 0)
          goto LABEL_12;
      }
      else
      {
        sub_1A4447B74();
        v31 = (_QWORD *)v74[0];
        if ((v57 & 1) != 0)
          goto LABEL_12;
      }
    }
    else
    {
      sub_1A4441BF8(v56, v51);
      v58 = sub_1A443E654(v33);
      if ((v57 & 1) != (v59 & 1))
        goto LABEL_43;
      v53 = v58;
      v31 = (_QWORD *)v74[0];
      if ((v57 & 1) != 0)
      {
LABEL_12:
        v35 = (_QWORD *)(v31[7] + 16 * v53);
        swift_bridgeObjectRelease();
        *v35 = v75;
        v35[1] = v37;
        goto LABEL_13;
      }
    }
    v31[(v53 >> 6) + 8] |= 1 << v53;
    *(_QWORD *)(v31[6] + 8 * v53) = v33;
    v60 = (_QWORD *)(v31[7] + 16 * v53);
    *v60 = v75;
    v60[1] = v37;
    v61 = v31[2];
    v49 = __OFADD__(v61, 1);
    v62 = v61 + 1;
    if (v49)
      goto LABEL_41;
    v31[2] = v62;
LABEL_13:
    ++v33;
    v34 += 2;
    swift_bridgeObjectRelease();
    if (v73 == v33)
      goto LABEL_36;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  sub_1A4691C08();
  __break(1u);
LABEL_43:
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for BasicTokenizer()
{
  return objc_opt_self();
}

_QWORD *REMBertTokenizer.tokenize(text:addSpecialTokens:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = v3;
  v6 = *(_QWORD **)(v3 + 16);
  v7 = sub_1A44D7AC8(a1, a2, *(_BYTE *)(v4 + 40));
  v27 = *(_QWORD *)(v7 + 16);
  if (v27)
  {
    v24 = a3;
    v8 = 0;
    v25 = v7 + 32;
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v26 = v7;
    do
    {
      if (v8 >= *(_QWORD *)(v7 + 16))
      {
        __break(1u);
        goto LABEL_22;
      }
      v10 = (uint64_t *)(v25 + 16 * v8);
      v11 = *v10;
      v12 = v10[1];
      swift_bridgeObjectRetain();
      v6 = (_QWORD *)sub_1A44D7D7C(v11, v12);
      swift_bridgeObjectRelease();
      v13 = v6[2];
      if (v13)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_1A4438920(0, v9[2] + 1, 1, v9);
        v14 = v6 + 5;
        do
        {
          v16 = *(v14 - 1);
          v15 = *v14;
          v17 = v9[2];
          v18 = v9[3];
          swift_bridgeObjectRetain();
          if (v17 >= v18 >> 1)
            v9 = sub_1A4438920((_QWORD *)(v18 > 1), v17 + 1, 1, v9);
          v14 += 2;
          v9[2] = v17 + 1;
          v19 = &v9[2 * v17];
          v19[4] = v16;
          v19[5] = v15;
          --v13;
        }
        while (v13);
      }
      ++v8;
      swift_bridgeObjectRelease();
      v7 = v26;
    }
    while (v8 != v27);
    swift_bridgeObjectRelease();
    if ((v24 & 1) != 0)
      goto LABEL_16;
  }
  else
  {
    swift_bridgeObjectRelease();
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if ((a3 & 1) != 0)
    {
LABEL_16:
      sub_1A4458C1C((uint64_t)v9);
      v6 = &unk_1E4C0FFE0;
      swift_bridgeObjectRetain();
      v9 = &unk_1E4C0FFE0;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_22:
        v9 = sub_1A4438920(0, v6[2] + 1, 1, v6);
      v21 = v9[2];
      v20 = v9[3];
      if (v21 >= v20 >> 1)
        v9 = sub_1A4438920((_QWORD *)(v20 > 1), v21 + 1, 1, v9);
      v9[2] = v21 + 1;
      v22 = &v9[2 * v21];
      v22[4] = 0x5D5045535BLL;
      v22[5] = 0xE500000000000000;
      swift_bridgeObjectRelease();
    }
  }
  return v9;
}

uint64_t sub_1A44D7AC8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v28[2];
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;

  v4 = v3;
  v8 = sub_1A468FBEC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a1;
  v31 = a2;
  v15 = sub_1A4690210();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_1A4466118();
  v16 = sub_1A4691260();
  v18 = v17;
  sub_1A446615C((uint64_t)v14);
  if ((a3 & 1) != 0)
  {
    v30 = v16;
    v31 = v18;
    strcpy((char *)v29, "[^\\p{ASCII}]+");
    HIWORD(v29[1]) = -4864;
    v28[0] = 32;
    v28[1] = 0xE100000000000000;
    v16 = sub_1A4691224();
    v20 = v19;
    swift_bridgeObjectRelease();
    v18 = v20;
  }
  v30 = v16;
  v31 = v18;
  v21 = objc_msgSend((id)objc_opt_self(), sel_whitespaceCharacterSet);
  sub_1A468FBD4();

  v22 = sub_1A46911F4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease();
  v29[0] = MEMORY[0x1E0DEE9D8];
  v23 = *(_QWORD *)(v22 + 16);
  if (v23)
  {
    swift_bridgeObjectRetain();
    v24 = (uint64_t *)(v22 + 40);
    do
    {
      v25 = *v24;
      v30 = *(v24 - 1);
      v31 = v25;
      swift_bridgeObjectRetain();
      sub_1A44D8310((uint64_t)&v30, v4, v28);
      v24 += 2;
      swift_bridgeObjectRelease();
      sub_1A4458C1C(v28[0]);
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease_n();
    return v29[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
}

unint64_t sub_1A44D7D7C(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  unint64_t v26;
  _QWORD *v28;
  uint64_t v29;

  v3 = v2;
  if (sub_1A4690954() >= 101)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243000);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1A4695C10;
    v7 = *(_QWORD *)(v3 + 24);
    *(_QWORD *)(v6 + 32) = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v6 + 40) = v7;
    swift_bridgeObjectRetain();
    return v6;
  }
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v29 = MEMORY[0x1E0DEE9D8];
  if (sub_1A4690954() < 1)
  {
LABEL_20:
    sub_1A4458C1C((uint64_t)v8);
    return v29;
  }
  v9 = sub_1A4690954();
  if (v9 >= 1)
  {
    v10 = v9;
    v11 = 0;
    v12 = *(_QWORD *)(v2 + 40);
    v28 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (2)
    {
      v13 = -v11;
      while (1)
      {
        v6 = sub_1A4690978();
        v14 = (unint64_t)sub_1A4690978() >> 14;
        if (v14 < v6 >> 14)
        {
          __break(1u);
          goto LABEL_26;
        }
        v15 = sub_1A4690A5C();
        v16 = MEMORY[0x1A859E164](v15);
        v18 = v17;
        swift_bridgeObjectRelease();
        if (v11 >= 1)
        {
          sub_1A4690984();
          swift_bridgeObjectRelease();
          v16 = 8995;
          v18 = 0xE200000000000000;
        }
        if (*(_QWORD *)(v12 + 16))
        {
          swift_bridgeObjectRetain();
          sub_1A443E4C8(v16, v18);
          v20 = v19;
          swift_bridgeObjectRelease();
          if ((v20 & 1) != 0)
            break;
        }
        swift_bridgeObjectRelease();
        if (v11 >= --v10)
          goto LABEL_21;
      }
      v8 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1A4438920(0, v28[2] + 1, 1, v28);
      v22 = v8[2];
      v21 = v8[3];
      if (v22 >= v21 >> 1)
        v8 = sub_1A4438920((_QWORD *)(v21 > 1), v22 + 1, 1, v8);
      v8[2] = v22 + 1;
      v23 = &v8[2 * v22];
      v23[4] = v16;
      v23[5] = v18;
      if (v10 < sub_1A4690954())
      {
        v28 = v8;
        v24 = sub_1A4690954();
        v11 = v10;
        v25 = v10 < v24;
        v10 = v24;
        if (v25)
          continue;
LABEL_21:
        swift_bridgeObjectRelease();
        break;
      }
      goto LABEL_20;
    }
  }
  a1 = *(_QWORD *)(v3 + 16);
  v3 = *(_QWORD *)(v3 + 24);
  swift_bridgeObjectRetain();
  v6 = (unint64_t)sub_1A4438920(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v13 = *(_QWORD *)(v6 + 16);
  v14 = *(_QWORD *)(v6 + 24);
  a2 = v13 + 1;
  if (v13 >= v14 >> 1)
LABEL_26:
    v6 = (unint64_t)sub_1A4438920((_QWORD *)(v14 > 1), a2, 1, (_QWORD *)v6);
  *(_QWORD *)(v6 + 16) = a2;
  v26 = v6 + 16 * v13;
  *(_QWORD *)(v26 + 32) = a1;
  *(_QWORD *)(v26 + 40) = v3;
  return v6;
}

uint64_t sub_1A44D8064(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v1 + 32) >= *(_QWORD *)(a1 + 16))
  {
    swift_retain();
    v2 = sub_1A44D8714(a1, v1);
    swift_release();
  }
  else
  {
    sub_1A4691410();
    sub_1A4690984();
    sub_1A46918D8();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A46918D8();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v2 = 0xE000000000000000;
    sub_1A44D8898();
    swift_allocError();
    *(_QWORD *)v3 = 0;
    *(_QWORD *)(v3 + 8) = 0xE000000000000000;
    *(_BYTE *)(v3 + 16) = 0;
    swift_willThrow();
  }
  return v2;
}

uint64_t REMBertTokenizer.tokenizeToIds(text:addSpecialTokens:)(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = REMBertTokenizer.tokenize(text:addSpecialTokens:)(a1, a2, a3);
  v4 = sub_1A44D8064((uint64_t)v3);
  swift_bridgeObjectRelease();
  return v4;
}

Swift::Int __swiftcall REMBertTokenizer.tokenToId(token:)(Swift::String token)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  unint64_t v5;
  char v6;
  Swift::Int v7;
  Swift::Int result;

  v2 = *(_QWORD *)(v1 + 48);
  if (*(_QWORD *)(v2 + 16))
  {
    object = token._object;
    countAndFlagsBits = token._countAndFlagsBits;
    swift_bridgeObjectRetain();
    v5 = sub_1A443E4C8(countAndFlagsBits, (uint64_t)object);
    if ((v6 & 1) != 0)
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v5);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  else
  {
    __break(1u);
  }
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t REMBertTokenizer.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMBertTokenizer.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

_QWORD *sub_1A44D8310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  _QWORD *result;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;

  v5 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD **)(a2 + 16);
  v7 = v6[2];
  if (!v7)
    goto LABEL_17;
  v8 = (_QWORD *)v6[4] == v5 && v6[5] == v4;
  if (v8 || (sub_1A4691A40() & 1) != 0)
  {
LABEL_7:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243000);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1A4695C10;
    *(_QWORD *)(v9 + 32) = v5;
    *(_QWORD *)(v9 + 40) = v4;
    *a3 = v9;
    return (_QWORD *)swift_bridgeObjectRetain();
  }
  if (v7 == 1)
  {
LABEL_17:
    sub_1A46908F4();
    v15 = sub_1A469099C();
    if (v16)
    {
      v17 = v15;
      v18 = v16;
      v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        if ((sub_1A46907F8() & 1) != 0
          || (sub_1A4690804() & 1) != 0
          || v17 == 45250 && v18 == 0xA200000000000000
          || (sub_1A4691A40() & 1) != 0)
        {
          sub_1A4690984();
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v19 = sub_1A4438920(0, v19[2] + 1, 1, v19);
          v22 = v19[2];
          v21 = v19[3];
          v23 = v22 + 1;
          if (v22 >= v21 >> 1)
          {
            v25 = sub_1A4438920((_QWORD *)(v21 > 1), v22 + 1, 1, v19);
            v23 = v22 + 1;
            v19 = v25;
          }
          v19[2] = v23;
          v24 = &v19[2 * v22];
          v24[4] = v17;
          v24[5] = v18;
        }
        v17 = sub_1A469099C();
        v18 = v20;
      }
      while (v20);
    }
    else
    {
      v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  else
  {
    v11 = v6 + 7;
    v12 = 1;
    while (1)
    {
      v13 = v12 + 1;
      if (__OFADD__(v12, 1))
        break;
      v14 = (_QWORD *)*(v11 - 1) == v5 && *v11 == v4;
      if (v14 || (sub_1A4691A40() & 1) != 0)
        goto LABEL_7;
      v11 += 2;
      ++v12;
      if (v13 == v7)
        goto LABEL_17;
    }
    __break(1u);
    result = sub_1A4438920(0, v5[2] + 1, 1, v5);
    v19 = result;
    v27 = result[2];
    v26 = result[3];
    if (v27 >= v26 >> 1)
    {
      result = sub_1A4438920((_QWORD *)(v26 > 1), v27 + 1, 1, result);
      v19 = result;
    }
    v19[2] = v27 + 1;
    v28 = &v19[2 * v27];
    v28[4] = v11;
    v28[5] = v4;
  }
  *a3 = (uint64_t)v19;
  return result;
}

uint64_t sub_1A44D86E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A44D8714(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v16 = MEMORY[0x1E0DEE9D8];
  sub_1A445A898(0, v2, 0);
  v3 = v16;
  v6 = *(_QWORD *)(a2 + 48);
  v7 = (uint64_t *)(a1 + 40);
  while (*(_QWORD *)(v6 + 16))
  {
    v8 = *(v7 - 1);
    v9 = *v7;
    swift_bridgeObjectRetain_n();
    v10 = sub_1A443E4C8(v8, v9);
    if ((v11 & 1) == 0)
      goto LABEL_10;
    v12 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v10);
    swift_bridgeObjectRelease_n();
    v14 = *(_QWORD *)(v16 + 16);
    v13 = *(_QWORD *)(v16 + 24);
    if (v14 >= v13 >> 1)
      sub_1A445A898(v13 > 1, v14 + 1, 1);
    *(_QWORD *)(v16 + 16) = v14 + 1;
    *(_QWORD *)(v16 + 8 * v14 + 32) = v12;
    v7 += 2;
    if (!--v2)
      return v3;
  }
  __break(1u);
LABEL_10:
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for WordpieceTokenizer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for REMBertTokenizer()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMBertTokenizer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMBertTokenizer.__allocating_init(url:maxLen:asciiOnly:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

unint64_t sub_1A44D8898()
{
  unint64_t result;

  result = qword_1EE71E8F8;
  if (!qword_1EE71E8F8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469AE88, &type metadata for REMBertTokenizerError);
    atomic_store(result, (unint64_t *)&qword_1EE71E8F8);
  }
  return result;
}

uint64_t sub_1A44D88E0()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for REMBertTokenizerError()
{
  return sub_1A44D88F8();
}

uint64_t sub_1A44D88F8()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s19ReminderKitInternal21REMBertTokenizerErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1A44D88E0();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for REMBertTokenizerError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1A44D88E0();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A44D88F8();
  return a1;
}

uint64_t assignWithTake for REMBertTokenizerError(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A44D88F8();
  return a1;
}

ValueMetadata *type metadata accessor for REMBertTokenizerError()
{
  return &type metadata for REMBertTokenizerError;
}

uint64_t REMSmartListCustomContextChangeItem.filter.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  id v6;
  id v7;
  BOOL v9;
  BOOL v11;

  v1 = objc_msgSend(v0, sel_smartListChangeItem);
  v2 = objc_msgSend(v1, sel_filterData);

  if (!v2)
    return 0;
  v3 = sub_1A468FFC4();
  v5 = v4;

  v6 = objc_msgSend(v0, sel_smartListChangeItem);
  v7 = objc_msgSend(v6, sel_minimumSupportedVersion);

  v9 = v7 != (id)*MEMORY[0x1E0D84B50] && v7 == (id)*MEMORY[0x1E0D84B40];
  v11 = v9;
  return sub_1A452280C(v3, v5, (unsigned __int8 *)&v11);
}

void REMSmartListCustomContextChangeItem.filter.setter(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  BOOL v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20[3];

  v2 = v1;
  v20[2] = *(id *)MEMORY[0x1E0C80C00];
  if (a1)
  {
    v3 = a1;
    v4 = objc_msgSend(v2, sel_smartListChangeItem);
    v5 = REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter();
    v7 = v5 != *MEMORY[0x1E0D84B50] && v5 == *MEMORY[0x1E0D84B40];
    LOBYTE(v20[0]) = v7;
    sub_1A451DD90((unsigned __int8 *)v20);
    v8 = (void *)objc_opt_self();
    v9 = (void *)sub_1A46906F0();
    swift_bridgeObjectRelease();
    v20[0] = 0;
    v10 = objc_msgSend(v8, sel_dataWithJSONObject_options_error_, v9, 0, v20);

    v11 = v20[0];
    if (v10)
    {
      v12 = sub_1A468FFC4();
      v14 = v13;

      v15 = (void *)sub_1A468FFAC();
      sub_1A44695EC(v12, v14);
    }
    else
    {
      v17 = v11;
      v18 = (void *)sub_1A468FE68();

      swift_willThrow();
      v15 = 0;
    }
    objc_msgSend(v4, sel_setFilterData_, v15);

    v16 = objc_msgSend(v2, sel_smartListChangeItem);
    objc_msgSend(v16, sel_setMinimumSupportedVersion_, REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter());

  }
  else
  {
    v19 = objc_msgSend(v1, sel_smartListChangeItem);
    objc_msgSend(v19, sel_setFilterData_, 0);

  }
}

void (*REMSmartListCustomContextChangeItem.filter.modify(uint64_t *a1))(void **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = REMSmartListCustomContextChangeItem.filter.getter();
  return sub_1A44D8D84;
}

void sub_1A44D8D84(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    REMSmartListCustomContextChangeItem.filter.setter(v2);

  }
  else
  {
    REMSmartListCustomContextChangeItem.filter.setter(*a1);
  }
}

uint64_t sub_1A44D8DD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = REMSmartListCustomContextChangeItem.filter.getter();
  *a1 = result;
  return result;
}

void sub_1A44D8E00(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  REMSmartListCustomContextChangeItem.filter.setter(v1);
}

uint64_t sub_1A44D8E2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  sub_1A44D90A8(a1, v3, v4, v5);
  return v2;
}

Swift::Void __swiftcall DeferredPromise.cancel()()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
  {
    swift_retain();
    sub_1A4451218();
    swift_release();
  }
  *(_QWORD *)(v0 + 24) = 0;
  swift_release();
}

uint64_t DeferredPromise.reject(_:)(void *a1)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 24))
  {
    swift_retain();
    sub_1A44511B0(a1);
    swift_release();
  }
  *(_QWORD *)(v1 + 24) = 0;
  return swift_release();
}

uint64_t DeferredPromise.resolve(_:)(uint64_t a1)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 24))
  {
    swift_retain();
    sub_1A4451148(a1);
    swift_release();
  }
  *(_QWORD *)(v1 + 24) = 0;
  return swift_release();
}

uint64_t DeferredPromise.promise.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t DeferredPromise.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_allocObject();
  DeferredPromise.init()(v0, v1, v2, v3);
  return v0;
}

_QWORD *DeferredPromise.init()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD *v13;

  v5 = v4;
  v6 = *v4;
  v4[3] = 0;
  v4[2] = 0;
  v7 = v4 + 2;
  type metadata accessor for Promise(0, *(_QWORD *)(v6 + 80), a3, a4);
  type metadata accessor for UnfairLock();
  v8 = swift_allocObject();
  v9 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v8 + 16) = v9;
  *v9 = 0;
  *(_DWORD *)(v8 + 24) = 0;
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  v13 = v4;
  v10 = sub_1A444B7C4(v8, (void (*)(void))sub_1A44D9268, (uint64_t)&v12);
  swift_unownedRelease();
  swift_unownedRelease();
  swift_beginAccess();
  *v7 = v10;
  swift_release();
  return v5;
}

uint64_t *sub_1A44D90A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];

  v5 = v4;
  v7 = *v5;
  v5[3] = 0;
  v5[2] = 0;
  type metadata accessor for Promise(0, *(_QWORD *)(v7 + 80), a3, a4);
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  v10[2] = v5;
  v8 = sub_1A444B7C4(a1, (void (*)(void))sub_1A44D9250, (uint64_t)v10);
  swift_unownedRelease();
  swift_unownedRelease();
  swift_beginAccess();
  v5[2] = v8;
  swift_release();
  return v5;
}

uint64_t sub_1A44D9160(uint64_t a1, uint64_t a2)
{
  swift_unownedRetainStrong();
  *(_QWORD *)(a2 + 24) = a1;
  swift_release();
  swift_retain();
  return swift_release();
}

uint64_t DeferredPromise.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t DeferredPromise.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1A44D91F0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DeferredPromise(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DeferredPromise);
}

uint64_t method lookup function for DeferredPromise()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DeferredPromise.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1A44D9250(uint64_t a1)
{
  uint64_t v1;

  return sub_1A44D9160(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A44D926C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  type metadata accessor for Seal.Resolution(255, *(_QWORD *)(a1 + 80), a3, a4);
  result = sub_1A46911A0();
  if (v5 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1A44D9310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  sub_1A44D9AA4(a1, a2, v5, v6);
  return v4;
}

uint64_t sub_1A44D935C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  sub_1A44D9C0C(a1, a2, v5, v6);
  return v4;
}

uint64_t sub_1A44D93A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  sub_1A44D9A08(a1, v3, v4, v5);
  return v2;
}

uint64_t sub_1A44D93E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v6 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v7 = type metadata accessor for Seal.Resolution(0, v6, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - v9;
  v11 = *(_QWORD *)(v4 + 16);
  os_unfair_lock_lock_with_options();
  if ((*(_BYTE *)(v4 + 24) & 1) != 0)
  {
    v12 = (void (*)(void))nullsub_1;
  }
  else
  {
    *(_BYTE *)(v4 + 24) = 1;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v10, a1, v6);
    swift_storeEnumTagMultiPayload();
    v12 = (void (*)(void))sub_1A44D9D5C((uint64_t)v10, v13, v14, v15);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  v12();
  return swift_release();
}

uint64_t sub_1A44D94E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void (*v11)(void);
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v6 = type metadata accessor for Seal.Resolution(0, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v17 - v8);
  v10 = *(_QWORD *)(v4 + 16);
  os_unfair_lock_lock_with_options();
  if ((*(_BYTE *)(v4 + 24) & 1) != 0)
  {
    v11 = (void (*)(void))nullsub_1;
  }
  else
  {
    *(_BYTE *)(v4 + 24) = 1;
    *v9 = a1;
    swift_storeEnumTagMultiPayload();
    v12 = a1;
    v11 = (void (*)(void))sub_1A44D9D5C((uint64_t)v9, v13, v14, v15);
    (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
  v11();
  return swift_release();
}

uint64_t sub_1A44D95D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = type metadata accessor for Seal.Resolution(0, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - v7;
  v9 = *(_QWORD *)(v4 + 16);
  os_unfair_lock_lock_with_options();
  if ((*(_BYTE *)(v4 + 24) & 1) != 0)
  {
    v10 = (void (*)(void))nullsub_1;
  }
  else
  {
    *(_BYTE *)(v4 + 24) = 1;
    swift_storeEnumTagMultiPayload();
    v10 = (void (*)(void))sub_1A44D9D5C((uint64_t)v8, v11, v12, v13);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  v10();
  return swift_release();
}

uint64_t sub_1A44D96B0(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void);

  v15 = *v9;
  v16 = v9[2];
  os_unfair_lock_lock_with_options();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v15 + 80);
  *(_QWORD *)(v17 + 24) = a1;
  *(_QWORD *)(v17 + 32) = a2;
  *(_BYTE *)(v17 + 40) = a3 & 1;
  *(_QWORD *)(v17 + 48) = a8;
  *(_QWORD *)(v17 + 56) = a9;
  *(_QWORD *)(v17 + 64) = a6;
  *(_QWORD *)(v17 + 72) = a7;
  *(_QWORD *)(v17 + 80) = a4;
  *(_QWORD *)(v17 + 88) = a5;
  v18 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  v21 = (void (*)(void))sub_1A44DAA30((uint64_t)sub_1A44DC840, v17, v19, v20);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 16));
  v21();
  return swift_release();
}

uint64_t sub_1A44D97B4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D97DC(a1, a2, a3, (uint64_t)&unk_1E4C1A440, (uint64_t)sub_1A44DC7F0);
}

uint64_t sub_1A44D97C8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44D97DC(a1, a2, a3, (uint64_t)&unk_1E4C1A418, (uint64_t)sub_1A44DC7B4);
}

uint64_t sub_1A44D97DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void);

  v10 = *v5;
  v11 = v5[2];
  os_unfair_lock_lock_with_options();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = *(_QWORD *)(v10 + 80);
  v12[3] = a1;
  v12[4] = a2;
  v12[5] = a3;
  v13 = a1;
  swift_retain();
  v16 = (void (*)(void))sub_1A44DAA30(a5, (uint64_t)v12, v14, v15);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  v16();
  return swift_release();
}

uint64_t sub_1A44D988C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE71E900);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE71E900);
  if (qword_1ED244120 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2568D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

BOOL sub_1A44D991C(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1A44D992C()
{
  return sub_1A4691C98();
}

uint64_t sub_1A44D9950()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

BOOL sub_1A44D9994(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A44D991C(*a1, *a2);
}

uint64_t sub_1A44D99A4()
{
  return sub_1A44D9950();
}

uint64_t sub_1A44D99B4()
{
  return sub_1A44D992C();
}

uint64_t sub_1A44D99C4()
{
  sub_1A4691C8C();
  sub_1A44D992C();
  return sub_1A4691CC8();
}

uint64_t sub_1A44D9A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for Seal.Resolution(255, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
  swift_getFunctionTypeMetadata1();
  *(_QWORD *)(v4 + 32) = sub_1A46906CC();
  v6 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 112);
  v7 = swift_checkMetadataState();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_BYTE *)(v4 + 24) = 0;
  return v4;
}

uint64_t sub_1A44D9AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v16;

  v7 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v8 = type metadata accessor for Seal.Resolution(255, v7, a3, a4);
  v9 = sub_1A46911A0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - v11;
  swift_getFunctionTypeMetadata1();
  *(_QWORD *)(v4 + 32) = sub_1A46906CC();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v13(v4 + *(_QWORD *)(*(_QWORD *)v4 + 112), 1, 1, v8);
  *(_QWORD *)(v4 + 16) = a1;
  *(_BYTE *)(v4 + 24) = 1;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v12, a2, v7);
  swift_storeEnumTagMultiPayload();
  v13((uint64_t)v12, 0, 1, v8);
  v14 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 112);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v14, v12, v9);
  swift_endAccess();
  return v4;
}

uint64_t sub_1A44D9C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(_QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v15;

  v7 = type metadata accessor for Seal.Resolution(255, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
  v8 = sub_1A46911A0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v15 - v10);
  swift_getFunctionTypeMetadata1();
  *(_QWORD *)(v4 + 32) = sub_1A46906CC();
  v12 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v12((_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 112)), 1, 1, v7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_BYTE *)(v4 + 24) = 1;
  *v11 = a2;
  swift_storeEnumTagMultiPayload();
  v12(v11, 0, 1, v7);
  v13 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 112);
  swift_beginAccess();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v9 + 40))(v13, v11, v8);
  swift_endAccess();
  return v4;
}

uint64_t (*sub_1A44D9D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;

  v22 = a1;
  v24 = *(_QWORD *)(*v4 + 80);
  v6 = type metadata accessor for Seal.Resolution(0, v24, a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v23 = (char *)&v21 - v8;
  v9 = sub_1A46911A0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - v11;
  v13 = v4[2];
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v13 + 16));
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v14(v12, a1, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  v15 = (char *)v4 + *(_QWORD *)(*v4 + 112);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v15, v12, v9);
  swift_endAccess();
  swift_beginAccess();
  v16 = v4[4];
  swift_beginAccess();
  swift_getFunctionTypeMetadata1();
  sub_1A4690C78();
  swift_bridgeObjectRetain();
  sub_1A4690C6C();
  swift_endAccess();
  v17 = v23;
  v14(v23, v22, v6);
  v18 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = v24;
  *((_QWORD *)v19 + 3) = v13;
  *((_QWORD *)v19 + 4) = v16;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v19[v18], v17, v6);
  swift_retain();
  return sub_1A44DC76C;
}

void sub_1A44D9F7C(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void (*a7)(void *), uint64_t a8, uint64_t (*a9)(void), uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  void *v27;
  id v28;
  char v29;
  void (*v30)(char *, void **, uint64_t);
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(void *);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;

  v36 = a7;
  v37 = a5;
  v38 = a6;
  v39 = a3;
  v40 = a2;
  v14 = *(_QWORD *)(a11 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v35 - v18;
  v22 = type metadata accessor for Seal.Resolution(0, a11, v20, v21);
  MEMORY[0x1E0C80A78](v22);
  v24 = (void **)((char *)&v35 - v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))((char *)&v35 - v23, a1, v22);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v27 = *v24;
      swift_retain();
      v28 = v27;
      sub_1A44DBD30(v40, 0, 1, v36, a8, v27);

      swift_release();
    }
    else
    {
      sub_1A44DA18C((uint64_t)v40, 0, 1, a9, a10);
    }
  }
  else
  {
    v29 = a4 & 1;
    v30 = *(void (**)(char *, void **, uint64_t))(v14 + 32);
    v30(v19, v24, a11);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, a11);
    v31 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v32 = (char *)swift_allocObject();
    v33 = v37;
    v34 = v38;
    *((_QWORD *)v32 + 2) = a11;
    *((_QWORD *)v32 + 3) = v33;
    *((_QWORD *)v32 + 4) = v34;
    v30(&v32[v31], (void **)v17, a11);
    swift_retain();
    sub_1A44DA18C((uint64_t)v40, v39, v29, sub_1A44DC8E8, (uint64_t)v32);
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, a11);
  }
}

uint64_t sub_1A44DA18C(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  double v21;
  void (*v22)(char *, uint64_t);
  void *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void *v32;
  void *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void *v37;
  double v38;
  void (*v39)(char *, uint64_t);
  void *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(void);
  uint64_t v56;
  uint64_t v57;
  uint64_t aBlock;
  uint64_t v59;
  uint64_t (*v60)(uint64_t);
  void *v61;
  uint64_t (*v62)(void);
  uint64_t v63;

  v55 = a4;
  v56 = a5;
  v53 = sub_1A46905A0();
  v50 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v49 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1A46905DC();
  v52 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v51 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A4690588();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1A4690600();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v48 - v19;
  if ((a3 & 1) != 0 || *(double *)&a2 <= 0.0)
  {
    if (qword_1ED243C50 != -1)
      swift_once();
    if (qword_1ED2431A0 != a1)
    {
      if (qword_1ED242788 != -1)
        swift_once();
      if (qword_1ED241948 != a1)
      {
        v62 = v55;
        v63 = v56;
        aBlock = MEMORY[0x1E0C809B0];
        v59 = 1107296256;
        v60 = sub_1A44AE6A0;
        v61 = &block_descriptor_3;
        v27 = _Block_copy(&aBlock);
        swift_retain();
        v28 = v51;
        sub_1A46905C4();
        v57 = MEMORY[0x1E0DEE9D8];
        sub_1A44A6088();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
        sub_1A44A60D0();
        v29 = v49;
        v30 = v53;
        sub_1A46912A8();
        MEMORY[0x1A859E8FC](0, v28, v29, v27);
        _Block_release(v27);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v29, v30);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v54);
        return swift_release();
      }
      if (!objc_msgSend((id)objc_opt_self(), sel_isMainThread))
      {
        sub_1A44DBBA4();
        v32 = (void *)sub_1A469108C();
        v62 = v55;
        v63 = v56;
        aBlock = MEMORY[0x1E0C809B0];
        v59 = 1107296256;
        v60 = sub_1A44AE6A0;
        v61 = &block_descriptor_3;
        v33 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        v34 = v51;
        sub_1A46905C4();
        aBlock = MEMORY[0x1E0DEE9D8];
        sub_1A44A6088();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
        sub_1A44A60D0();
        v35 = v49;
        v36 = v53;
        sub_1A46912A8();
        MEMORY[0x1A859E8FC](0, v34, v35, v33);
        _Block_release(v33);

        (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v36);
        return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v34, v54);
      }
    }
    return v55();
  }
  if (qword_1ED242788 != -1)
    swift_once();
  if (qword_1ED241948 == a1)
  {
    sub_1A44DBBA4();
    v37 = (void *)sub_1A469108C();
    sub_1A46905F4();
    v38 = *(double *)&a2 * 1000000.0;
    if ((~COERCE__INT64(*(double *)&a2 * 1000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v38 > -9.22337204e18)
      {
        if (v38 < 9.22337204e18)
        {
          *v13 = (uint64_t)v38;
          (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF488], v10);
          MEMORY[0x1A859DE70](v18, v13);
          (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
          v39 = *(void (**)(char *, uint64_t))(v15 + 8);
          v39(v18, v14);
          v62 = v55;
          v63 = v56;
          aBlock = MEMORY[0x1E0C809B0];
          v59 = 1107296256;
          v60 = sub_1A44AE6A0;
          v61 = &block_descriptor_9;
          v40 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          v41 = v51;
          sub_1A46905C4();
          aBlock = MEMORY[0x1E0DEE9D8];
          sub_1A44A6088();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
          sub_1A44A60D0();
          v42 = v49;
          v43 = v53;
          sub_1A46912A8();
          MEMORY[0x1A859E8A8](v20, v41, v42, v40);
          _Block_release(v40);

          (*(void (**)(char *, uint64_t))(v50 + 8))(v42, v43);
          (*(void (**)(char *, uint64_t))(v52 + 8))(v41, v54);
          return ((uint64_t (*)(char *, uint64_t))v39)(v20, v14);
        }
        goto LABEL_37;
      }
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (qword_1ED243C50 != -1)
    swift_once();
  if (qword_1ED2431A0 != a1)
  {
    sub_1A46905F4();
    v21 = *(double *)&a2 * 1000000.0;
    if ((~COERCE__INT64(*(double *)&a2 * 1000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v21 > -9.22337204e18)
      {
        if (v21 < 9.22337204e18)
        {
          *v13 = (uint64_t)v21;
          (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF488], v10);
          MEMORY[0x1A859DE70](v18, v13);
          (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
          v22 = *(void (**)(char *, uint64_t))(v15 + 8);
          v22(v18, v14);
          v62 = v55;
          v63 = v56;
          aBlock = MEMORY[0x1E0C809B0];
          v59 = 1107296256;
          v60 = sub_1A44AE6A0;
          v61 = &block_descriptor_6;
          v23 = _Block_copy(&aBlock);
          swift_retain();
          v24 = v51;
          sub_1A46905C4();
          v57 = MEMORY[0x1E0DEE9D8];
          sub_1A44A6088();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
          sub_1A44A60D0();
          v25 = v49;
          v26 = v53;
          sub_1A46912A8();
          MEMORY[0x1A859E8A8](v20, v24, v25, v23);
          _Block_release(v23);
          (*(void (**)(char *, uint64_t))(v50 + 8))(v25, v26);
          (*(void (**)(char *, uint64_t))(v52 + 8))(v24, v54);
          v22(v20, v14);
          return swift_release();
        }
        goto LABEL_34;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (qword_1EE71C020 != -1)
LABEL_38:
    swift_once();
  v44 = sub_1A4690318();
  __swift_project_value_buffer(v44, (uint64_t)qword_1EE71E900);
  v45 = sub_1A469030C();
  v46 = sub_1A4690FFC();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v47 = 0;
    _os_log_impl(&dword_1A442D000, v45, v46, "Seal.invoke(on:afterDelay:block:) will not respect positive delay when input queue is zalgo", v47, 2u);
    MEMORY[0x1A85A0114](v47, -1, -1);
  }

  return v55();
}

uint64_t (*sub_1A44DAA30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*result)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)();
  _QWORD *v32;

  v29 = a1;
  v30 = a2;
  v5 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v6 = type metadata accessor for Seal.Resolution(255, v5, a3, a4);
  v7 = sub_1A46911A0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v28 - v10;
  v12 = *(_QWORD *)(v6 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x1E0C80A78](v9);
  v28 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v28 - v15;
  v17 = *(_QWORD *)(v4 + 16);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v17 + 16));
  if ((*(_BYTE *)(v4 + 24) & 1) != 0)
  {
    v18 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 112);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v18, v7);
    result = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v6);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v20(v16, v11, v6);
      v21 = v28;
      v20(v28, v16, v6);
      v22 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v23 = (char *)swift_allocObject();
      *((_QWORD *)v23 + 2) = v5;
      *((_QWORD *)v23 + 3) = v17;
      v24 = v30;
      *((_QWORD *)v23 + 4) = v29;
      *((_QWORD *)v23 + 5) = v24;
      v20(&v23[v22], v21, v6);
      swift_retain();
      swift_retain();
      return sub_1A44DBC90;
    }
  }
  else
  {
    v25 = (_QWORD *)swift_allocObject();
    v26 = v29;
    v27 = v30;
    v25[2] = v5;
    v25[3] = v26;
    v25[4] = v27;
    v31 = sub_1A44DBD10;
    v32 = v25;
    swift_beginAccess();
    swift_getFunctionTypeMetadata1();
    sub_1A4690C78();
    swift_retain();
    sub_1A4690C3C();
    swift_endAccess();
    return (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))nullsub_1;
  }
  return result;
}

uint64_t sub_1A44DAC98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v9 = type metadata accessor for Seal.Resolution(0, a5, (uint64_t)a3, a4);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v14 - v11, a1, v9);
  if (swift_getEnumCaseMultiPayload() > 1)
    return sub_1A44DA18C(a2, 0, 1, a3, a4);
  else
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1A44DAD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t FunctionTypeMetadata1;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  char v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  BOOL v16;
  uint64_t result;

  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(a1 + 16));
  type metadata accessor for Seal.Resolution(255, a4, v7, v8);
  FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
  v10 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1A859E4AC](v10, FunctionTypeMetadata1))
    return swift_bridgeObjectRelease();
  v11 = 0;
  for (i = a2 + 40; ; i += 16)
  {
    v13 = sub_1A4690C0C();
    sub_1A4690BD0();
    if ((v13 & 1) == 0)
      break;
    v14 = *(void (**)(uint64_t))(i - 8);
    v15 = v11 + 1;
    v16 = __OFADD__(v11, 1);
    result = swift_retain();
    if (v16)
      goto LABEL_11;
    v14(a3);
    swift_release();
    ++v11;
    if (v15 == MEMORY[0x1A859E4AC](a2, FunctionTypeMetadata1))
      return swift_bridgeObjectRelease();
  }
  result = sub_1A469147C();
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t *sub_1A44DAE88()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  swift_release();
  swift_bridgeObjectRelease();
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 112);
  type metadata accessor for Seal.Resolution(255, *(_QWORD *)(v1 + 80), v3, v4);
  v5 = sub_1A46911A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  return v0;
}

uint64_t sub_1A44DAEF8()
{
  sub_1A44DAE88();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Seal(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Seal);
}

uint64_t type metadata accessor for Seal.Resolution(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Seal.Resolution);
}

uint64_t sub_1A44DAF34(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A44DAF80 + 4 * byte_1A469AF35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A44DAFB4 + 4 * byte_1A469AF30[v4]))();
}

uint64_t sub_1A44DAFB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44DAFBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A44DAFC4);
  return result;
}

uint64_t sub_1A44DAFD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A44DAFD8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A44DAFDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44DAFE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for Seal.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Seal.State);
}

uint64_t sub_1A44DAFFC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id *sub_1A44DB06C(id *__dst, id *a2, uint64_t a3)
{
  id *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char *v8;
  unsigned int v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = __dst;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = (char *)*a2;
    *v3 = *a2;
    v3 = (id *)&v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X14 }
    }
    if (v9 == 1)
    {
      v11 = *a2;
      v12 = *a2;
      *v3 = v11;
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(id *))(v4 + 16))(__dst);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

void sub_1A44DB1A4(id *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *((unsigned __int8 *)a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)

    else
      (*(void (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    ((void (*)(void))((char *)&loc_1A44DB1EC + 4 * byte_1A469AF3F[v5]))();
  }
}

_BYTE *sub_1A44DB24C(_BYTE *__dst, id *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  id v8;
  id v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    v8 = *a2;
    v9 = *a2;
    *(_QWORD *)__dst = v8;
    __dst[v5] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *))(v4 + 16))(__dst);
    __dst[v5] = 0;
  }
  return __dst;
}

id *sub_1A44DB344(id *__dst, void **__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  void *v12;
  id v13;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)__dst + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)__src + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      v12 = *__src;
      v13 = v12;
      *__dst = v12;
      *((_BYTE *)__dst + v7) = 1;
    }
    else
    {
      (*(void (**)(id *, void **, uint64_t))(v6 + 16))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 0;
    }
  }
  return __dst;
}

_BYTE *sub_1A44DB4F4(_BYTE *__dst, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *(_QWORD *)__dst = *a2;
    __dst[v5] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *))(v4 + 32))(__dst);
    __dst[v5] = 0;
  }
  return __dst;
}

id *sub_1A44DB5DC(id *__dst, id *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)__dst + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)__src + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *__dst = *__src;
      *((_BYTE *)__dst + v7) = 1;
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 0;
    }
  }
  return __dst;
}

uint64_t sub_1A44DB784(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A44DB848 + 4 * byte_1A469AF62[(v4 - 1)]))();
}

void sub_1A44DB894(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v8 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_1A44DBA3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A44DBA84 + 4 * byte_1A469AF70[v3]))();
}

void sub_1A44DBACC(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

void sub_1A44DBB94()
{
  JUMPOUT(0x1A85A0000);
}

unint64_t sub_1A44DBBA4()
{
  unint64_t result;

  result = qword_1ED243E38;
  if (!qword_1ED243E38)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED243E38);
  }
  return result;
}

uint64_t sub_1A44DBBE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Seal.Resolution(0, v5, a3, a4) - 8) + 80);
  v7 = (v6 + 48) & ~v6;
  swift_release();
  swift_release();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {

  }
  else if (!EnumCaseMultiPayload)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v7, v5);
  }
  return swift_deallocObject();
}

uint64_t sub_1A44DBC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(char *);
  char *v8;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Seal.Resolution(0, v4[2], a3, a4) - 8) + 80);
  v6 = v4[3];
  v7 = (uint64_t (*)(char *))v4[4];
  v8 = (char *)v4 + ((v5 + 48) & ~v5);
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(v6 + 16));
  return v7(v8);
}

uint64_t sub_1A44DBCEC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A44DBD10()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1A44DBD30(void *a1, uint64_t a2, char a3, void (*a4)(void *), uint64_t a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  double v24;
  id v25;
  void *v26;
  double v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  void *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  id v35;
  void *v36;
  void *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void *v42;
  void *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  void *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  char *v61;
  uint64_t v62;
  void (*v63)(void *);
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t aBlock;
  uint64_t v73;
  uint64_t (*v74)(uint64_t);
  void *v75;
  uint64_t (*v76)();
  _QWORD *v77;

  v70 = a1;
  v68 = sub_1A46905A0();
  v65 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v64 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_1A46905DC();
  v67 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v66 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A4690588();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char **)((char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v62 = sub_1A4690600();
  v17 = *(_QWORD *)(v62 - 8);
  v18 = MEMORY[0x1E0C80A78](v62);
  v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v61 = (char *)&v61 - v21;
  v22 = (_QWORD *)swift_allocObject();
  v63 = a4;
  v22[2] = a4;
  v22[3] = a5;
  v23 = v22;
  v22[4] = a6;
  if ((a3 & 1) == 0)
  {
    v24 = *(double *)&a2;
    if (*(double *)&a2 > 0.0)
    {
      swift_retain();
      v25 = a6;
      if (qword_1ED242788 != -1)
        swift_once();
      v26 = v70;
      if ((void *)qword_1ED241948 == v70)
      {
        sub_1A44DBBA4();
        v47 = sub_1A469108C();
        sub_1A46905F4();
        v48 = v24 * 1000000.0;
        if ((~COERCE__INT64(v24 * 1000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v48 > -9.22337204e18)
          {
            v70 = (void *)v47;
            if (v48 < 9.22337204e18)
            {
              *v16 = (uint64_t)v48;
              (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF488], v13);
              v49 = v61;
              MEMORY[0x1A859DE70](v20, v16);
              (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
              v50 = *(void (**)(char *, uint64_t))(v17 + 8);
              v51 = v62;
              v50(v20, v62);
              v76 = sub_1A4452D5C;
              v77 = v23;
              aBlock = MEMORY[0x1E0C809B0];
              v73 = 1107296256;
              v74 = sub_1A44AE6A0;
              v75 = &block_descriptor_27;
              v52 = _Block_copy(&aBlock);
              swift_retain();
              swift_release();
              v53 = v66;
              sub_1A46905C4();
              aBlock = MEMORY[0x1E0DEE9D8];
              sub_1A44A6088();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
              sub_1A44A60D0();
              v54 = v64;
              v55 = v68;
              sub_1A46912A8();
              v56 = v70;
              MEMORY[0x1A859E8A8](v49, v53, v54, v52);
              _Block_release(v52);

              (*(void (**)(char *, uint64_t))(v65 + 8))(v54, v55);
              (*(void (**)(char *, uint64_t))(v67 + 8))(v53, v69);
              v50(v49, v51);
              return swift_release();
            }
            goto LABEL_38;
          }
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if (qword_1ED243C50 != -1)
        swift_once();
      if ((void *)qword_1ED2431A0 == v26)
      {
        if (qword_1EE71C020 == -1)
        {
LABEL_29:
          v57 = sub_1A4690318();
          __swift_project_value_buffer(v57, (uint64_t)qword_1EE71E900);
          v58 = sub_1A469030C();
          v59 = sub_1A4690FFC();
          if (os_log_type_enabled(v58, v59))
          {
            v60 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v60 = 0;
            _os_log_impl(&dword_1A442D000, v58, v59, "Seal.invoke(on:afterDelay:block:) will not respect positive delay when input queue is zalgo", v60, 2u);
            MEMORY[0x1A85A0114](v60, -1, -1);
          }

          goto LABEL_32;
        }
LABEL_39:
        swift_once();
        goto LABEL_29;
      }
      sub_1A46905F4();
      v27 = v24 * 1000000.0;
      if ((~COERCE__INT64(v24 * 1000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v27 > -9.22337204e18)
        {
          if (v27 < 9.22337204e18)
          {
            *v16 = (uint64_t)v27;
            (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF488], v13);
            v28 = v61;
            MEMORY[0x1A859DE70](v20, v16);
            (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
            v29 = *(void (**)(char *, uint64_t))(v17 + 8);
            v30 = v62;
            v29(v20, v62);
            v76 = sub_1A4452D5C;
            v77 = v23;
            aBlock = MEMORY[0x1E0C809B0];
            v73 = 1107296256;
            v74 = sub_1A44AE6A0;
            v75 = &block_descriptor_24;
            v31 = _Block_copy(&aBlock);
            swift_retain();
            v32 = v66;
            sub_1A46905C4();
            v71 = MEMORY[0x1E0DEE9D8];
            sub_1A44A6088();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
            sub_1A44A60D0();
            v33 = v64;
            v34 = v68;
            sub_1A46912A8();
            MEMORY[0x1A859E8A8](v28, v32, v33, v31);
            _Block_release(v31);
            (*(void (**)(char *, uint64_t))(v65 + 8))(v33, v34);
            (*(void (**)(char *, uint64_t))(v67 + 8))(v32, v69);
            v29(v28, v30);
LABEL_20:
            swift_release();
            return swift_release();
          }
          goto LABEL_35;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  swift_retain();
  v35 = a6;
  if (qword_1ED243C50 != -1)
    swift_once();
  v36 = v70;
  if ((void *)qword_1ED2431A0 != v70)
  {
    if (qword_1ED242788 != -1)
      swift_once();
    if ((void *)qword_1ED241948 != v36)
    {
      v76 = sub_1A4452D5C;
      v77 = v23;
      aBlock = MEMORY[0x1E0C809B0];
      v73 = 1107296256;
      v74 = sub_1A44AE6A0;
      v75 = &block_descriptor_18;
      v37 = _Block_copy(&aBlock);
      swift_retain();
      v38 = v66;
      sub_1A46905C4();
      v71 = MEMORY[0x1E0DEE9D8];
      sub_1A44A6088();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
      sub_1A44A60D0();
      v39 = v64;
      v40 = v68;
      sub_1A46912A8();
      MEMORY[0x1A859E8FC](0, v38, v39, v37);
      _Block_release(v37);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v39, v40);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v38, v69);
      goto LABEL_20;
    }
    if ((objc_msgSend((id)objc_opt_self(), sel_isMainThread) & 1) == 0)
    {
      sub_1A44DBBA4();
      v42 = (void *)sub_1A469108C();
      v76 = sub_1A4452D5C;
      v77 = v23;
      aBlock = MEMORY[0x1E0C809B0];
      v73 = 1107296256;
      v74 = sub_1A44AE6A0;
      v75 = &block_descriptor_21_0;
      v43 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      v44 = v66;
      sub_1A46905C4();
      aBlock = MEMORY[0x1E0DEE9D8];
      sub_1A44A6088();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
      sub_1A44A60D0();
      v45 = v64;
      v46 = v68;
      sub_1A46912A8();
      MEMORY[0x1A859E8FC](0, v44, v45, v43);
      _Block_release(v43);

      (*(void (**)(char *, uint64_t))(v65 + 8))(v45, v46);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v44, v69);
      return swift_release();
    }
  }
LABEL_32:
  v63(a6);
  return swift_release();
}

uint64_t sub_1A44DC690()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A44DC6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Seal.Resolution(0, v5, a3, a4) - 8) + 80);
  v7 = (v6 + 40) & ~v6;
  swift_release();
  swift_bridgeObjectRelease();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {

  }
  else if (!EnumCaseMultiPayload)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v7, v5);
  }
  return swift_deallocObject();
}

uint64_t sub_1A44DC76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v5 = v4[2];
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Seal.Resolution(0, v5, a3, a4) - 8) + 80);
  return sub_1A44DAD6C(v4[3], v4[4], (uint64_t)v4 + ((v6 + 40) & ~v6), v5);
}

uint64_t sub_1A44DC7B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1A44DAC98(a1, *(_QWORD *)(v1 + 24), *(uint64_t (**)(void))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16));
}

uint64_t objectdestroy_32Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A44DC7F0()
{
  uint64_t v0;

  return sub_1A44DA18C(*(_QWORD *)(v0 + 24), 0, 1, *(uint64_t (**)(void))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1A44DC804()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1A44DC840(uint64_t a1)
{
  uint64_t v1;

  sub_1A44D9F7C(a1, *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(void (**)(void *))(v1 + 64), *(_QWORD *)(v1 + 72), *(uint64_t (**)(void))(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A44DC87C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A44DC8E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + 24))(v0 + ((v1 + 40) & ~v1));
}

uint64_t Sequence.mapToSet<A>(_:)()
{
  return sub_1A44DCE44();
}

uint64_t Sequence<>.filterToSet(_:)()
{
  swift_getAssociatedTypeWitness();
  return Sequence.compactMapToSet<A>(_:)();
}

uint64_t Sequence.completeCompactMap<A>(_:)(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, unsigned int (*a5)(char *, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t, _QWORD);
  uint64_t AssociatedConformanceWitness;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v51)(char *);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v6 = v5;
  v51 = a1;
  v52 = a2;
  v10 = sub_1A46911A0();
  v41 = *(_QWORD *)(v10 - 8);
  v42 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v40 - v12;
  v14 = *(_QWORD *)(a4 - 8);
  v15 = MEMORY[0x1E0C80A78](v11);
  v50 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v49 = (char *)&v40 - v17;
  v47 = a5;
  v18 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v22 = (char *)&v40 - v21;
  v23 = sub_1A46911A0();
  v24 = MEMORY[0x1E0C80A78](v23);
  v44 = (char *)&v40 - v25;
  v48 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v28;
  v53 = swift_getAssociatedTypeWitness();
  v43 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v54 = (char *)&v40 - v30;
  v56 = sub_1A46906CC();
  v31 = *(void (**)(char *, uint64_t, _QWORD))(v48 + 16);
  v46 = v29;
  v31(v27, v55, v29);
  sub_1A4690A68();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v33 = v44;
  v48 = AssociatedConformanceWitness;
  sub_1A46911B8();
  v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v47(v33, 1, AssociatedTypeWitness) == 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v43 + 8))(v54, v53);
    return v56;
  }
  else
  {
    v34 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v45 = AssociatedTypeWitness;
    v46 = v34;
    while (1)
    {
      v46(v22, v33, AssociatedTypeWitness);
      v51(v22);
      if (v6)
      {
        (*(void (**)(char *, uint64_t))(v20 + 8))(v22, AssociatedTypeWitness);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v54, v53);
        return swift_bridgeObjectRelease();
      }
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a4) == 1)
        break;
      v35 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v55 = 0;
      v36 = v20;
      v37 = v49;
      v35(v49, v13, a4);
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v50, v37, a4);
      sub_1A4690C78();
      sub_1A4690C3C();
      v38 = v37;
      v20 = v36;
      AssociatedTypeWitness = v45;
      v6 = v55;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v38, a4);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, AssociatedTypeWitness);
      sub_1A46911B8();
      if (v47(v33, 1, AssociatedTypeWitness) == 1)
        goto LABEL_6;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v54, v53);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v42);
    return 0;
  }
}

uint64_t Sequence.compactMapToSet<A>(_:)()
{
  return sub_1A44DCE44();
}

uint64_t sub_1A44DCE44()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  sub_1A46906E4();
  sub_1A4690DC8();
  result = sub_1A4690AD4();
  if (!v0)
    return v2;
  return result;
}

uint64_t Sequence.elements<A>(ofType:)()
{
  return sub_1A44DCFE8();
}

uint64_t sub_1A44DCF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v11 - v8, a1, AssociatedTypeWitness);
  v9 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, v9 ^ 1u, 1, a2);
}

uint64_t Sequence.elements<A>(ofExactType:)()
{
  return sub_1A44DCFE8();
}

uint64_t sub_1A44DCFE8()
{
  return sub_1A4690A98();
}

uint64_t sub_1A44DD02C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = (char *)&v15 - v8;
  if (swift_getDynamicType() != a2)
  {
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56);
LABEL_5:
    v12 = a3;
    v13 = 1;
    return v10(v12, v13, 1, a2);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, AssociatedTypeWitness);
  v11 = swift_dynamicCast();
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56);
  if (!v11)
    goto LABEL_5;
  v12 = a3;
  v13 = 0;
  return v10(v12, v13, 1, a2);
}

uint64_t Sequence.indexBy<A, B>(key:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v12 = a3;
  v13 = a4;
  v14 = a5;
  v15 = a1;
  v16 = a2;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v17 = sub_1A4460F34((void (*)(char *, char *))sub_1A44DEC98, (uint64_t)v11, a3, TupleTypeMetadata2, MEMORY[0x1E0DEDCE8], a4, MEMORY[0x1E0DEDD18], v8);
  v9 = sub_1A4690C78();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v9);
  return sub_1A4690798();
}

uint64_t sub_1A44DD254()
{
  swift_getTupleTypeMetadata2();
  swift_getAtKeyPath();
  return swift_getAtKeyPath();
}

uint64_t Sequence.compactIndexBy<A, B>(key:value:)()
{
  uint64_t v0;

  swift_getTupleTypeMetadata2();
  sub_1A4690A98();
  v0 = sub_1A4690C78();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v0);
  return sub_1A4690798();
}

uint64_t sub_1A44DD3F4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a3;
  v3 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a2 + 8);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v16 - v6;
  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v5);
  v11 = (char *)&v16 - v10;
  swift_getAtKeyPath();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(v17, 1, 1, TupleTypeMetadata2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v14 = swift_getTupleTypeMetadata2();
    v15 = v17;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v17, v11, v8);
    swift_getAtKeyPath();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v15, 0, 1, v14);
  }
}

uint64_t Sequence.firstMap<A>(_:)@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t AssociatedConformanceWitness;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v41 = a2;
  v40 = a1;
  v33 = a6;
  v43 = a4;
  v9 = sub_1A46911A0();
  v38 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v32 - v10;
  v36 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v32 - v13;
  v15 = sub_1A46911A0();
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v32 - v17;
  v37 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = swift_getAssociatedTypeWitness();
  v34 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v32 - v22;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
  v35 = a3;
  v24(v20, v42, a3);
  sub_1A4690A68();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v42 = v21;
  v37 = AssociatedConformanceWitness;
  sub_1A46911B8();
  v26 = v44;
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
  if (v27(v18, 1, AssociatedTypeWitness) == 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v42);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v33, 1, 1);
  }
  else
  {
    v28 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    while (1)
    {
      v28(v14, v18, AssociatedTypeWitness);
      v40(v14);
      if (v6)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v14, AssociatedTypeWitness);
        return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v23, v42);
      }
      (*(void (**)(char *, uint64_t))(v44 + 8))(v14, AssociatedTypeWitness);
      v29 = *(_QWORD *)(v43 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v29 + 48))(v11, 1) != 1)
        break;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v39);
      sub_1A46911B8();
      if (v27(v18, 1, AssociatedTypeWitness) == 1)
        goto LABEL_6;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v42);
    v31 = v33;
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v33, v11, v43);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v29 + 56))(v31, 0, 1);
  }
}

uint64_t Sequence.map<A>(skippingError:_:)()
{
  return sub_1A4690A98();
}

void sub_1A44DD980(uint64_t a1@<X0>, void (*a2)(void)@<X1>, uint64_t (*a3)(uint64_t, void *)@<X3>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  void *v5;

  a2();
  if (v5)
  {
    if ((a3(a1, v5) & 1) != 0)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))(a5, 1, 1, a4);

    }
    else
    {
      swift_willThrow();
    }
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))(a5, 0, 1, a4);
  }
}

uint64_t sub_1A44DDA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t result;
  void (*v20)(char *, uint64_t);
  _QWORD v21[2];

  v8 = *(_QWORD *)(a6 - 8);
  v9 = MEMORY[0x1E0C80A78](a1);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)v21 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v21 - v15;
  result = v18(v17);
  if (!v6)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v16, a6);
    sub_1A4690DC8();
    sub_1A4690DA4();
    v20 = *(void (**)(char *, uint64_t))(v8 + 8);
    v20(v14, a6);
    return ((uint64_t (*)(char *, uint64_t))v20)(v16, a6);
  }
  return result;
}

uint64_t sub_1A44DDB5C(uint64_t a1, uint64_t a2)
{
  return sub_1A44DEC3C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A44DDA40);
}

uint64_t sub_1A44DDB78(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  _QWORD v27[2];
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;

  v27[0] = a1;
  v27[1] = a8;
  v29 = a3;
  v10 = sub_1A46911A0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v27 - v13;
  v28 = *(_QWORD *)(a6 - 8);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)v27 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v27 - v21;
  v23 = v30;
  result = v29(a2);
  if (!v23)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v14, 1, a6) == 1)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
    else
    {
      v25 = v28;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v22, v14, a6);
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v17, v22, a6);
      sub_1A4690DC8();
      sub_1A4690DA4();
      v26 = *(void (**)(char *, uint64_t))(v25 + 8);
      v26(v20, a6);
      return ((uint64_t (*)(char *, uint64_t))v26)(v22, a6);
    }
  }
  return result;
}

uint64_t Sequence.asyncMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v6[9] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[10] = AssociatedTypeWitness;
  v6[11] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6[12] = swift_task_alloc();
  sub_1A46911A0();
  v6[13] = swift_task_alloc();
  v6[14] = *(_QWORD *)(a3 - 8);
  v6[15] = swift_task_alloc();
  v9 = swift_getAssociatedTypeWitness();
  v6[16] = v9;
  v6[17] = *(_QWORD *)(v9 - 8);
  v6[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A44DDE5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v10;
  _QWORD *v11;
  int *v12;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 16) = sub_1A46906CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_1A4690A68();
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 88);
  swift_getAssociatedConformanceWitness();
  sub_1A46911B8();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
    v8 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
  }
  else
  {
    v10 = *(int **)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
    v12 = (int *)((char *)v10 + *v10);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v11;
    *v11 = v0;
    v11[1] = sub_1A44DDFF8;
    return ((uint64_t (*)(_QWORD, _QWORD))v12)(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 96));
  }
}

uint64_t sub_1A44DDFF8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1A44DE064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v9;
  _QWORD *v10;
  int *v11;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  sub_1A4690C78();
  sub_1A4690C3C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  swift_getAssociatedConformanceWitness();
  sub_1A46911B8();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
    v7 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
  }
  else
  {
    v9 = *(int **)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
    v11 = (int *)((char *)v9 + *v9);
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v10;
    *v10 = v0;
    v10[1] = sub_1A44DDFF8;
    return ((uint64_t (*)(_QWORD, _QWORD))v11)(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 96));
  }
}

uint64_t sub_1A44DE1EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Sequence.asyncReduce<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  v8[10] = *(_QWORD *)(a6 - 8);
  v8[11] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[12] = AssociatedTypeWitness;
  v8[13] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[14] = swift_task_alloc();
  sub_1A46911A0();
  v8[15] = swift_task_alloc();
  v8[16] = *(_QWORD *)(a5 - 8);
  v8[17] = swift_task_alloc();
  v11 = swift_getAssociatedTypeWitness();
  v8[18] = v11;
  v8[19] = *(_QWORD *)(v11 - 8);
  v8[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A44DE3BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v9;
  _QWORD *v10;
  int *v11;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 48);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 16))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_1A4690A68();
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 104);
  swift_getAssociatedConformanceWitness();
  sub_1A46911B8();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v9 = *(int **)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
    v11 = (int *)((char *)v9 + *v9);
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v10;
    *v10 = v0;
    v10[1] = sub_1A44DE554;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v11)(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 112));
  }
}

uint64_t sub_1A44DE554()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A44DE5B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v9;
  _QWORD *v10;
  int *v11;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 104);
  swift_getAssociatedConformanceWitness();
  sub_1A46911B8();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v9 = *(int **)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
    v11 = (int *)((char *)v9 + *v9);
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v10;
    *v10 = v0;
    v10[1] = sub_1A44DE554;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v11)(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 112));
  }
}

uint64_t sub_1A44DE740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Sequence.removingNils<A>()()
{
  return sub_1A4690A98();
}

uint64_t Sequence.sorted<A>(using:elementIdentifier:)()
{
  return sub_1A4690AEC();
}

BOOL sub_1A44DE898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  int v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v14 = *(_QWORD *)(a8 - 8);
  v15 = MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v18;
  v36 = v19;
  v20(v15);
  v22 = type metadata accessor for OrderedSet(0, a8, a10, v21);
  v33 = OrderedSet.index(of:)((uint64_t)v17, v22);
  v32 = v23;
  v24 = *(void (**)(char *, uint64_t))(v14 + 8);
  v24(v17, a8);
  v35 = a3;
  v36 = a4;
  a5(v34);
  v25 = OrderedSet.index(of:)((uint64_t)v17, v22);
  v27 = v26;
  v24(v17, a8);
  v28 = 0x7FFFFFFFFFFFFFFFLL;
  if ((v27 & 1) == 0)
    v28 = v25;
  return (v32 & 1) == 0 && v33 < v28;
}

uint64_t Sequence<>.sum()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v13[10];

  v13[0] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)v13 - v9;
  v11 = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](v11);
  swift_getAssociatedConformanceWitness();
  sub_1A4691BD8();
  sub_1A4691A28();
  v13[4] = a1;
  v13[5] = a2;
  v13[6] = a3;
  v13[7] = AssociatedTypeWitness;
  sub_1A4690AE0();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
}

uint64_t sub_1A44DEB4C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;

  result = a2();
  if (!v3)
  {
    v7 = result;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
    if ((v7 & 1) != 0)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a3, a1, AssociatedTypeWitness);
      v10 = 0;
    }
    else
    {
      v10 = 1;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, v10, 1, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_1A44DEC04(uint64_t a1)
{
  return sub_1A44DECEC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A44DEB4C);
}

uint64_t sub_1A44DEC20(uint64_t a1, uint64_t a2)
{
  return sub_1A44DEC3C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A44DDB78);
}

uint64_t sub_1A44DEC3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[6], v3[7], v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1A44DEC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A44DCF04(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1A44DEC7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A44DD02C(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1A44DEC98()
{
  return sub_1A44DD254();
}

uint64_t sub_1A44DECBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1A44DED10(a1);
}

uint64_t sub_1A44DECD0(uint64_t a1)
{
  return sub_1A44DECEC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A44DD3F4);
}

uint64_t sub_1A44DECEC(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[5], v2[6], v2[2], v2[3], v2[4]);
}

uint64_t sub_1A44DED10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 32) - 8) + 16))(a1);
}

void sub_1A44DED44(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1A44DD980(a1, *(void (**)(void))(v2 + 40), *(uint64_t (**)(uint64_t, void *))(v2 + 56), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1A44DED68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1A46911A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

BOOL sub_1A44DEDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A44DE898(a1, a2, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(void (**)(uint64_t))(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1A44DEDF0()
{
  swift_getAssociatedTypeWitness();
  return sub_1A469165C();
}

uint64_t Sequence.count(where:)(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t AssociatedConformanceWitness;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char v25;
  char v26;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *);
  uint64_t v33;
  char *v34;
  uint64_t v35;

  v32 = a1;
  v33 = a2;
  v34 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v30 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = (char *)&v29 - v7;
  v9 = sub_1A46911A0();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v29 - v11;
  v13 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v29 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v35, a3);
  sub_1A4690A68();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v34 = v18;
  v35 = v16;
  v20 = v30;
  v31 = AssociatedConformanceWitness;
  sub_1A46911B8();
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v21(v12, 1, AssociatedTypeWitness) == 1)
  {
    v22 = 0;
  }
  else
  {
    v22 = 0;
    v23 = v20;
    v24 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v24(v8, v12, AssociatedTypeWitness);
    while (1)
    {
      v25 = v32(v8);
      if (v4)
        break;
      v26 = v25;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v8, AssociatedTypeWitness);
      if ((v26 & 1) != 0 && __OFADD__(v22++, 1))
      {
        __break(1u);
        break;
      }
      sub_1A46911B8();
      if (v21(v12, 1, AssociatedTypeWitness) == 1)
        goto LABEL_12;
      v24(v8, v12, AssociatedTypeWitness);
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, AssociatedTypeWitness);
  }
LABEL_12:
  (*(void (**)(char *, uint64_t))(v29 + 8))(v34, v35);
  return v22;
}

uint64_t BidirectionalCollection<>.slices(by:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[10];

  result = sub_1A4690E4C();
  if (a1)
  {
    v12[7] = 0;
    v12[8] = result;
    v12[9] = a1;
    MEMORY[0x1E0C80A78](result);
    v12[2] = a2;
    v12[3] = a3;
    v12[4] = v3;
    v12[5] = a1;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E9A8);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v10 = sub_1A443AD20(&qword_1EE71E9B0, &qword_1EE71E9A8, MEMORY[0x1E0DEE898]);
    return sub_1A4460F34((void (*)(char *, char *))sub_1A44DF2A8, (uint64_t)v12, v8, AssociatedTypeWitness, MEMORY[0x1E0DEDCE8], v10, MEMORY[0x1E0DEDD18], v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t *sub_1A44DF210(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = *result;
  v4 = *result + a3;
  if (__OFADD__(*result, a3))
  {
    __break(1u);
  }
  else
  {
    result = (uint64_t *)sub_1A4690E4C();
    if ((uint64_t)result >= v4)
      v5 = (_QWORD *)v4;
    else
      v5 = result;
    if ((uint64_t)v5 >= v3)
      return (uint64_t *)sub_1A4690EE8();
  }
  __break(1u);
  return result;
}

uint64_t *sub_1A44DF2A8(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A44DF210(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

int64_t BidirectionalCollection<>.lazySlices(by:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t result;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[2];

  v7 = *(_QWORD *)(a2 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1A4690E4C();
  if (a1)
  {
    v14[0] = sub_1A44DFA14(0, result, a1);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3, a2);
    v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v12 = (v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = a2;
    *(_QWORD *)(v13 + 24) = a3;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v13 + v11, v9, a2);
    *(_QWORD *)(v13 + v12) = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F6F0);
    swift_getAssociatedTypeWitness();
    sub_1A443AD20(&qword_1ED23F6E8, &qword_1ED23F6F0, MEMORY[0x1E0DEC330]);
    sub_1A4691704();
    swift_release();
    swift_bridgeObjectRelease();
    return v14[1];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t *sub_1A44DF458(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = *result;
  v4 = *result + a3;
  if (__OFADD__(*result, a3))
  {
    __break(1u);
  }
  else
  {
    result = (uint64_t *)sub_1A4690E4C();
    if ((uint64_t)result >= v4)
      v5 = (_QWORD *)v4;
    else
      v5 = result;
    if ((uint64_t)v5 >= v3)
      return (uint64_t *)sub_1A4690EE8();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A44DF4E0(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    result = swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 0;
    v5 = v2 + 4;
    v6 = (uint64_t *)(result + 40);
    while (1)
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      if (v3)
      {
        result = swift_bridgeObjectRetain();
        v9 = __OFSUB__(v3--, 1);
        if (v9)
          goto LABEL_28;
      }
      else
      {
        v10 = v2[3];
        if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_29;
        v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1)
          v12 = 1;
        else
          v12 = v11;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D098);
        v13 = (_QWORD *)swift_allocObject();
        v14 = (uint64_t)(_swift_stdlib_malloc_size(v13) - 32) / 24;
        v13[2] = v12;
        v13[3] = 2 * v14;
        v15 = v13 + 4;
        v16 = v2[3] >> 1;
        v5 = &v13[3 * v16 + 4];
        v17 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        if (v2[2])
        {
          if (v13 != v2 || v15 >= &v2[3 * v16 + 4])
            memmove(v15, v2 + 4, 24 * v16);
          swift_bridgeObjectRetain();
          v2[2] = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        result = swift_release();
        v2 = v13;
        v9 = __OFSUB__(v17, 1);
        v3 = v17 - 1;
        if (v9)
        {
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
      }
      *v5 = v4;
      v5[1] = v7;
      v5[2] = v8;
      v5 += 3;
      v6 += 2;
      if (v1 == ++v4)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
  }
  v3 = 0;
LABEL_24:
  v19 = v2[3];
  if (v19 >= 2)
  {
    v20 = v19 >> 1;
    v9 = __OFSUB__(v20, v3);
    v21 = v20 - v3;
    if (v9)
      goto LABEL_30;
    v2[2] = v21;
  }
  return (uint64_t)v2;
}

uint64_t sub_1A44DF69C(uint64_t result, int64_t a2, int64_t a3)
{
  int64_t v3;
  int64_t v4;
  float64x2_t *v5;
  unint64_t v6;
  uint64_t v7;
  float64_t *v8;
  uint64_t v9;
  uint64_t v10;
  float64_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64x2_t v19;
  float64x2_t *v20;
  double *v21;
  int64x2_t v22;
  unint64_t v23;
  double *v24;
  float64x2_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  float64_t v30;
  int64_t v31;
  unint64_t v32;
  char *v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  int64_t v37;
  uint64_t v38;
  float64_t *v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  BOOL v46;
  int64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  int64_t v51;
  char *v52;
  unint64_t v53;
  int64_t v54;
  float64x2x2_t v55;

  v3 = a3 - a2;
  if (__OFSUB__(a3, a2))
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  v4 = a3;
  v5 = (float64x2_t *)result;
  v6 = *(_QWORD *)(result + 16);
  if (v3 >= (uint64_t)v6)
    v7 = *(_QWORD *)(result + 16);
  else
    v7 = a3 - a2;
  v54 = a2;
  if (v7 <= 0)
  {
    if (v7 < 0)
    {
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    v8 = (float64_t *)MEMORY[0x1E0DEE9D8];
    v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 24) >> 1;
    if (!v6)
      goto LABEL_60;
    v11 = (float64_t *)(MEMORY[0x1E0DEE9D8] + 32);
    v16 = a2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242278);
    v8 = (float64_t *)swift_allocObject();
    result = _swift_stdlib_malloc_size(v8);
    a2 = v54;
    v9 = result - 32;
    if (result < 32)
      v9 = result - 17;
    v10 = v9 >> 4;
    *((_QWORD *)v8 + 2) = v7;
    *((_QWORD *)v8 + 3) = 2 * v10;
    if (v4 < v54)
      goto LABEL_70;
    if (!v6)
    {
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    if (v7 - 1 >= v6)
    {
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    v11 = v8 + 4;
    v12 = (v10 & 0x7FFFFFFFFFFFFFFFLL) - v7;
    if (v7 - 1 >= (unint64_t)v3)
      v13 = v3;
    else
      v13 = v7 - 1;
    if (v13 >= v6)
      v13 = v6;
    if (v13 > 3)
    {
      v17 = v13 + 1;
      v18 = v17 & 3;
      if ((v17 & 3) == 0)
        v18 = 4;
      v14 = v17 - v18;
      v11 += 2 * v14;
      v15 = v14 + v54;
      v19 = vaddq_s64(vdupq_n_s64(v54), (int64x2_t)xmmword_1A469B0A0);
      v20 = v5 + 3;
      v21 = v8 + 8;
      v22 = vdupq_n_s64(2uLL);
      v23 = v14;
      do
      {
        v24 = v21 - 4;
        v55.val[1] = (float64x2_t)vaddq_s64(v19, v22);
        v25 = v20[-1];
        v55.val[0] = *v20;
        vst2q_f64(v24, *(float64x2x2_t *)(&v19 - 1));
        vst2q_f64(v21, v55);
        v19 = vaddq_s64(v19, vdupq_n_s64(4uLL));
        v20 += 2;
        v21 += 8;
        v23 -= 4;
      }
      while (v23);
    }
    else
    {
      v14 = 0;
      v15 = v54;
    }
    v26 = 0;
    v27 = v7 - v14;
    v28 = (uint64_t)&v5[2].f64[v14];
    v29 = v6 - v14;
    do
    {
      if (v29 == v26)
      {
        __break(1u);
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
      if (!(v15 - v4 + v26))
        goto LABEL_65;
      *v11 = *(float64_t *)(v28 + 8 * v26);
      *((_QWORD *)v11 + 1) = v15 + v26;
      v11 += 2;
      ++v26;
    }
    while (v27 != v26);
    if ((uint64_t)v6 <= v3)
      goto LABEL_60;
    v16 = v15 + v26;
  }
  if (v7 >= v6)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if (v16 == v4)
    goto LABEL_60;
  if (v4 >= a2)
  {
    v30 = v5[2].f64[v7];
    result = swift_bridgeObjectRetain();
    v31 = v54;
    if (v16 >= v54 && v16 < v4)
    {
      v32 = v6 - 1;
      v33 = (char *)&v5[2].f64[1];
      v34 = v4 - 1;
      v52 = (char *)&v5[2].f64[1];
      v53 = v6 - 1;
      v51 = v4 - 1;
      while (1)
      {
        if (!v12)
        {
          v35 = *((_QWORD *)v8 + 3);
          if ((uint64_t)((v35 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_67;
          v36 = v4;
          v37 = v35 & 0xFFFFFFFFFFFFFFFELL;
          if (v37 <= 1)
            v38 = 1;
          else
            v38 = v37;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242278);
          v39 = (float64_t *)swift_allocObject();
          v40 = _swift_stdlib_malloc_size(v39);
          v41 = v40 - 32;
          if (v40 < 32)
            v41 = v40 - 17;
          v42 = v41 >> 4;
          *((_QWORD *)v39 + 2) = v38;
          *((_QWORD *)v39 + 3) = 2 * (v41 >> 4);
          v43 = (unint64_t)(v39 + 4);
          v44 = *((_QWORD *)v8 + 3) >> 1;
          if (*((_QWORD *)v8 + 2))
          {
            if (v39 != v8 || v43 >= (unint64_t)&v8[2 * v44 + 4])
              memmove(v39 + 4, v8 + 4, 16 * v44);
            v8[2] = 0.0;
          }
          v11 = (float64_t *)(v43 + 16 * v44);
          v12 = (v42 & 0x7FFFFFFFFFFFFFFFLL) - v44;
          result = swift_release();
          v8 = v39;
          v4 = v36;
          v32 = v53;
          v31 = v54;
          v34 = v51;
          v33 = v52;
        }
        v46 = __OFSUB__(v12--, 1);
        if (v46)
          break;
        *v11 = v30;
        *((_QWORD *)v11 + 1) = v16;
        if (v32 == v7 || v34 == v16)
          goto LABEL_59;
        v47 = v16 + 1;
        if (v16 + 1 >= v31)
        {
          v30 = *(double *)&v33[8 * v7];
          v11 += 2;
          ++v7;
          ++v16;
          if (v47 < v4)
            continue;
        }
        goto LABEL_58;
      }
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
LABEL_58:
    __break(1u);
LABEL_59:
    result = swift_bridgeObjectRelease();
LABEL_60:
    v48 = *((_QWORD *)v8 + 3);
    if (v48 >= 2)
    {
      v49 = v48 >> 1;
      v46 = __OFSUB__(v49, v12);
      v50 = v49 - v12;
      if (v46)
      {
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
      *((_QWORD *)v8 + 2) = v50;
    }
    return (uint64_t)v8;
  }
LABEL_75:
  __break(1u);
  return result;
}

uint64_t sub_1A44DFA14(uint64_t result, int64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  _BOOL4 v9;
  BOOL v10;
  int64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t *v14;
  uint64_t v15;
  BOOL v16;
  int64_t v17;
  BOOL v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t *v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  BOOL v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;

  v5 = result;
  v6 = 0;
  v7 = 32;
  v8 = result;
  while (1)
  {
    v9 = v8 <= a2;
    if (a3 > 0)
      v9 = v8 >= a2;
    if (v9)
      break;
    v10 = __OFADD__(v8, a3);
    v8 += a3;
    if (v10)
      v8 = (v8 >> 63) ^ 0x8000000000000000;
    v7 += 8;
    v10 = __OFADD__(v6++, 1);
    if (v10)
    {
      __break(1u);
      break;
    }
  }
  if (v6 > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243008);
    v11 = (int64_t *)swift_allocObject();
    result = _swift_stdlib_malloc_size(v11);
    v12 = result - 32;
    if (result < 32)
      v12 = result - 25;
    v13 = v12 >> 3;
    v11[2] = v6;
    v11[3] = 2 * v13;
    v14 = v11 + 4;
    v15 = v13 & 0x7FFFFFFFFFFFFFFFLL;
LABEL_15:
    v15 -= v6;
    while (1)
    {
      v16 = v5 <= a2;
      if (a3 > 0)
        v16 = v5 >= a2;
      if (v16)
        break;
      if (__OFADD__(v5, a3))
        v17 = ((v5 + a3) >> 63) ^ 0x8000000000000000;
      else
        v17 = v5 + a3;
      *v14++ = v5;
      v5 = v17;
      if (!--v6)
        goto LABEL_23;
    }
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v11 = (int64_t *)MEMORY[0x1E0DEE9D8];
  v14 = (int64_t *)(MEMORY[0x1E0DEE9D8] + 32);
  v15 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 24) >> 1;
  if (v6)
    goto LABEL_15;
  v17 = result;
LABEL_23:
  v18 = v17 <= a2;
  if (a3 > 0)
    v18 = v17 >= a2;
  if (!v18)
  {
    v19 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
    do
    {
      v20 = v17 + a3;
      if (__OFADD__(v17, a3))
      {
        v20 = v19;
        if (!v15)
          goto LABEL_32;
        v20 = v19;
      }
      else if (!v15)
      {
LABEL_32:
        v21 = v11[3];
        if ((uint64_t)((v21 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_58;
        v22 = v21 & 0xFFFFFFFFFFFFFFFELL;
        if (v22 <= 1)
          v23 = 1;
        else
          v23 = v22;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243008);
        v24 = (int64_t *)swift_allocObject();
        v25 = _swift_stdlib_malloc_size(v24);
        v26 = v25 - 32;
        if (v25 < 32)
          v26 = v25 - 25;
        v27 = v26 >> 3;
        v24[2] = v23;
        v24[3] = 2 * (v26 >> 3);
        v28 = (unint64_t)(v24 + 4);
        v29 = (unint64_t)v11[3] >> 1;
        if (v11[2])
        {
          if (v24 != v11 || v28 >= (unint64_t)&v11[v29 + 4])
            memmove(v24 + 4, v11 + 4, 8 * v29);
          v11[2] = 0;
        }
        v14 = (int64_t *)(v28 + 8 * v29);
        v15 = (v27 & 0x7FFFFFFFFFFFFFFFLL) - v29;
        result = swift_release();
        v11 = v24;
        v19 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
      }
      v10 = __OFSUB__(v15--, 1);
      if (v10)
        goto LABEL_57;
      *v14++ = v17;
      v31 = v20 <= a2;
      if (a3 > 0)
        v31 = v20 >= a2;
      v17 = v20;
    }
    while (!v31);
  }
  v32 = v11[3];
  if (v32 < 2)
    return (uint64_t)v11;
  v33 = v32 >> 1;
  v10 = __OFSUB__(v33, v15);
  v34 = v33 - v15;
  if (!v10)
  {
    v11[2] = v34;
    return (uint64_t)v11;
  }
LABEL_59:
  __break(1u);
  return result;
}

uint64_t sub_1A44DFC94()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t *sub_1A44DFCF8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 16) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_1A44DF458(a1, v1 + v3, *(_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A44DFD28(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t *i;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11[2];
  uint64_t v12;

  result = MEMORY[0x1E0DEE9E8];
  v12 = MEMORY[0x1E0DEE9E8];
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      v9 = *(i - 1);
      v8 = *i;
      v11[0] = v9;
      v11[1] = v8;
      swift_bridgeObjectRetain();
      v10 = a2(v11);
      if (v2)
        break;
      if ((v10 & 1) != 0)
      {
        swift_bridgeObjectRetain();
        sub_1A4465F6C(v11, v9, v8);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void _sSd19ReminderKitInternalE7lngammayS2dFZ_0(long double a1)
{
  long double v2;

  if (a1 < 0.0)
  {
    __break(1u);
  }
  else
  {
    v2 = 0.00000368991827 / (a1 + 14.0)
       + 1.0
       + -0.0000261908384 / (a1 + 13.0)
       + 0.000084418224 / (a1 + 12.0)
       + -0.000164318107 / (a1 + 11.0)
       + 0.000217439618 / (a1 + 10.0)
       + -0.000210264442 / (a1 + 9.0)
       + 0.000158088703 / (a1 + 8.0)
       + -0.0000983744753 / (a1 + 7.0)
       + 0.0000465236289 / (a1 + 6.0)
       + 0.00003399465 / (a1 + 5.0)
       + -0.491913816 / (a1 + 4.0)
       + 14.136098 / (a1 + 3.0)
       + -59.5979604 / (a1 + 2.0)
       + 57.1562357 / (a1 + 1.0);
    log(a1 + 4.7421875 + 0.5);
    log(v2);
    log(a1);
  }
}

uint64_t sub_1A44DFFD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE71E9B8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE71E9B8);
  if (qword_1ED23E620 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

BOOL static REMApplicationIconFormat.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t REMApplicationIconFormat.hash(into:)()
{
  return sub_1A4691C98();
}

uint64_t REMApplicationIconFormat.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

id REMUserActivity.appIconAndName(format:scale:)(char *a1, double a2)
{
  char v3;
  void *v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  char v13;

  v3 = *a1;
  sub_1A44E0744();
  if (!v4)
    return 0;
  v5 = v4;
  sub_1A44E0B20(v4);
  if (!v7)
  {

    return 0;
  }
  v8 = v6;
  v9 = v7;
  v10 = objc_msgSend(v5, sel_localizedName);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  v13 = v3;
  v11 = sub_1A44E1F58(v8, v9, &v13, a2);
  swift_bridgeObjectRelease();
  return v11;
}

id static REMUserActivity.blankAppIcon(format:scale:)(char *a1, double a2)
{
  char v3;
  id v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v17;
  uint64_t v18;

  v3 = *a1;
  v4 = objc_msgSend((id)objc_opt_self(), sel_genericApplicationIcon);
  if (qword_1EE71C028 != -1)
    swift_once();
  v5 = sub_1A4690318();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EE71E9B8);
  v6 = v4;
  v7 = sub_1A469030C();
  v8 = sub_1A4691008();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v18 = v17;
    *(_DWORD *)v9 = 138412802;
    v11 = v3;
    v12 = v6;
    sub_1A46911D0();
    *v10 = v6;

    v3 = v11;
    *(_WORD *)(v9 + 12) = 2080;
    v13 = sub_1A46908E8();
    sub_1A4431120(v13, v14, &v18);
    sub_1A46911D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 22) = 2048;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v7, v8, "resolved icon %@ for generic application (format: %s, scale: %f)", (uint8_t *)v9, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v17, -1, -1);
    MEMORY[0x1A85A0114](v9, -1, -1);

  }
  else
  {

  }
  LOBYTE(v18) = v3;
  v15 = sub_1A44E1D68(v6, (unsigned __int8 *)&v18, a2);

  return v15;
}

Swift::Void __swiftcall REMUserActivity.launch()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;

  v1 = v0;
  v2 = sub_1A4690318();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A468FF7C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v28 - v14;
  v16 = objc_msgSend(v1, sel_type);
  if (v16 != (id)3)
  {
    if (v16 == (id)2)
    {
      v17 = objc_msgSend(v1, sel_userActivity);
      if (v17)
      {
        v18 = v17;
        sub_1A44E0744();
        v29 = v19;
        sub_1A44E09FC((uint64_t)v19);

      }
    }
    else if (v16 == (id)1)
    {
      v20 = objc_msgSend(v1, sel_universalLink);
      if (v20)
      {
        v21 = v20;
        sub_1A468FF1C();

        v22 = 0;
      }
      else
      {
        v22 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v13, v22, 1, v6);
      sub_1A44E2280((uint64_t)v13, (uint64_t)v15);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
      {
        sub_1A44E22C8((uint64_t)v15);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v15, v6);
        v23 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
        if (v23)
        {
          v24 = v23;
          sub_1A44E1128((uint64_t)v9);

        }
        v25 = *(void (**)(char *, uint64_t))(v7 + 8);
        v25(v9, v6);
        v25(v15, v6);
      }
    }
    else
    {
      if (qword_1EE71C028 != -1)
        swift_once();
      v26 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE71E9B8);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v26, v2);
      v27 = MEMORY[0x1E0DEE9D8];
      sub_1A443CDB8(MEMORY[0x1E0DEE9D8]);
      sub_1A443CDB8(v27);
      sub_1A4510F48((uint64_t)"unknown user activity type", 26, 2);
      __break(1u);
    }
  }
}

void sub_1A44E0744()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = sub_1A4690318();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A468FF7C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v24 - v14;
  v16 = objc_msgSend(v1, sel_type);
  if (v16 != (id)3)
  {
    if (v16 == (id)2)
    {
      v17 = objc_msgSend(v1, sel_userActivity);
      v18 = v17;
      if (v17)
      {
        _sSo19LSApplicationRecordC19ReminderKitInternalE011applicationB015forUserActivityABSgSo06NSUserI0C_tFZ_0(v17);

      }
    }
    else if (v16 == (id)1)
    {
      v19 = objc_msgSend(v1, sel_universalLink);
      if (v19)
      {
        v20 = v19;
        sub_1A468FF1C();

        v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v21(v8, v13, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
        {
          v21(v15, v8, v9);
          sub_1A450FF20((uint64_t)v15);
          (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
      }
      sub_1A44E22C8((uint64_t)v8);
    }
    else
    {
      if (qword_1EE71C028 != -1)
        swift_once();
      v22 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE71E9B8);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v22, v2);
      v23 = MEMORY[0x1E0DEE9D8];
      sub_1A443CDB8(MEMORY[0x1E0DEE9D8]);
      sub_1A443CDB8(v23);
      sub_1A4510F48((uint64_t)"unknown user activity type", 26, 2);
      __break(1u);
    }
  }
}

void sub_1A44E09FC(uint64_t a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  _QWORD v10[6];

  v3 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CA5938]), sel_init);
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v1;
    v10[4] = sub_1A44E24C8;
    v10[5] = v6;
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 1107296256;
    v10[2] = sub_1A4621D78;
    v10[3] = &block_descriptor_4;
    v7 = _Block_copy(v10);
    v8 = v5;
    v9 = v1;
    swift_release();
    objc_msgSend(v4, sel_openUserActivity_usingApplicationRecord_configuration_completionHandler_, v9, a1, v8, v7);
    _Block_release(v7);

  }
}

void sub_1A44E0B20(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v4 = sub_1A4690318();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A468FF7C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v26 - v16;
  v18 = objc_msgSend(v2, sel_type);
  if (v18 != (id)3)
  {
    if (v18 == (id)2)
    {
      v19 = objc_msgSend(v2, sel_userActivity);
      if (v19)
      {
        v20 = v19;
        sub_1A44E1B90(v19, a1);

      }
    }
    else if (v18 == (id)1)
    {
      v21 = objc_msgSend(v2, sel_universalLink);
      if (v21)
      {
        v22 = v21;
        sub_1A468FF1C();

        v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v23(v10, v15, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
        {
          v23(v17, v10, v11);
          sub_1A44E1910((uint64_t)v17, (uint64_t)a1);
          (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
      }
      sub_1A44E22C8((uint64_t)v10);
    }
    else
    {
      if (qword_1EE71C028 != -1)
        swift_once();
      v24 = __swift_project_value_buffer(v4, (uint64_t)qword_1EE71E9B8);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v24, v4);
      v25 = MEMORY[0x1E0DEE9D8];
      sub_1A443CDB8(MEMORY[0x1E0DEE9D8]);
      sub_1A443CDB8(v25);
      sub_1A4510F48((uint64_t)"unknown user activity type", 26, 2);
      __break(1u);
    }
  }
}

void sub_1A44E0DEC()
{
  uint64_t v0;
  id v1;
  id v2;
  char v3;

  type metadata accessor for IOSUniversalLinkAppIconBundleIDResolver();
  v0 = swift_allocObject();
  v1 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
  v2 = sub_1A450FE48(0xD000000000000015, 0x80000001A46BEA80, 0);
  if (v2)
  {

    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  *(_BYTE *)(v0 + 16) = v3;
  qword_1EE71E9D0 = v0;
  *(_QWORD *)algn_1EE71E9D8 = &off_1E4C1A598;
}

void sub_1A44E0E98(char a1, void *a2, void *a3)
{
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  os_log_type_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  NSObject *oslog;
  uint64_t v19;

  if ((a1 & 1) == 0)
  {
    if (qword_1EE71C028 != -1)
      swift_once();
    v5 = sub_1A4690318();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EE71E9B8);
    v6 = a3;
    v7 = a2;
    v8 = v6;
    v9 = a2;
    oslog = sub_1A469030C();
    v10 = sub_1A4690FF0();
    if (os_log_type_enabled(oslog, v10))
    {
      v11 = swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v19 = v13;
      *(_DWORD *)v11 = 138412546;
      v14 = v8;
      sub_1A46911D0();
      *v12 = v8;

      *(_WORD *)(v11 + 12) = 2080;
      if (a2)
      {
        swift_getErrorValue();
        v15 = sub_1A4691C2C();
        v17 = v16;
      }
      else
      {
        v17 = 0xE300000000000000;
        v15 = 7104878;
      }
      sub_1A4431120(v15, v17, &v19);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A442D000, oslog, v10, "LSApplicationWorkspace cannot open the NSUserActivity. {userActivity: %@, error: %s}", (uint8_t *)v11, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v12, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v13, -1, -1);
      MEMORY[0x1A85A0114](v11, -1, -1);

    }
    else
    {

    }
  }
}

void sub_1A44E1128(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t inited;
  uint64_t v22;
  void *v23;
  unsigned int v24;
  id v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  id v41[13];

  v2 = v1;
  v41[11] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1A468FF7C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v39 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v39 - v15;
  v17 = (void *)sub_1A468FED4();
  v18 = objc_msgSend(v1, sel_URLOverrideForURL_, v17);

  if (v18)
  {
    sub_1A468FF1C();

    v19 = 0;
  }
  else
  {
    v19 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v14, v19, 1, v4);
  sub_1A44E2280((uint64_t)v14, (uint64_t)v16);
  sub_1A44E245C((uint64_t)v16, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    v20 = 0;
  }
  else
  {
    v20 = (void *)sub_1A468FED4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4695C10;
  *(_QWORD *)(inited + 32) = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  *(_QWORD *)(inited + 40) = v22;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 48) = 1;
  sub_1A443CDB8(inited);
  v23 = (void *)sub_1A46906F0();
  swift_bridgeObjectRelease();
  v41[0] = 0;
  v24 = objc_msgSend(v2, sel_openURL_withOptions_error_, v20, v23, v41);

  v25 = v41[0];
  if (v24)
  {
    sub_1A44E22C8((uint64_t)v16);
  }
  else
  {
    v26 = v25;
    v27 = (void *)sub_1A468FE68();

    swift_willThrow();
    sub_1A44E22C8((uint64_t)v16);
    if (qword_1EE71C028 != -1)
      swift_once();
    v28 = sub_1A4690318();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EE71E9B8);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v29 = v27;
    v30 = v27;
    v31 = sub_1A469030C();
    v32 = sub_1A4690FF0();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v39 = (void *)swift_slowAlloc();
      v41[0] = v39;
      *(_DWORD *)v33 = 136315394;
      v34 = sub_1A468FE98();
      v40 = sub_1A4431120(v34, v35, (uint64_t *)v41);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      *(_WORD *)(v33 + 12) = 2080;
      swift_getErrorValue();
      v36 = sub_1A4691C2C();
      v40 = sub_1A4431120(v36, v37, (uint64_t *)v41);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A442D000, v31, v32, "Error launching URL via LSApplicationWorkspace {url: %s, error: %s}", (uint8_t *)v33, 0x16u);
      v38 = v39;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v38, -1, -1);
      MEMORY[0x1A85A0114](v33, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

uint64_t sub_1A44E15EC()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1A44E15FC(int a1, id a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(a2, sel_bundleIdentifier);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v4;
}

uint64_t sub_1A44E1660(int a1, id a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;

  v3 = v2;
  v4 = objc_msgSend(a2, sel_bundleIdentifier);
  if (v4)
  {
    v5 = v4;
    v6 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v8 = v7;

    v9 = sub_1A468FF4C();
    if (!v10)
      return v6;
  }
  else
  {
    v6 = 0;
    v8 = 0;
    v9 = sub_1A468FF4C();
    if (!v10)
      return v6;
  }
  v11 = v9;
  v12 = v10;
  if (v9 == 7103860 && v10 == 0xE300000000000000
    || (sub_1A4691A40() & 1) != 0
    || v11 == 0x656D697465636166 && v12 == 0xEE006F696475612DLL
    || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_BYTE *)(v3 + 16))
      return 0xD000000000000015;
    else
      return 0xD000000000000012;
  }
  if (v11 == 0x656D697465636166 && v12 == 0xE800000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    v6 = 0xD000000000000012;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v6;
  }
  if (v11 == 1886680168 && v12 == 0xE400000000000000
    || (sub_1A4691A40() & 1) != 0
    || v11 == 0x7370747468 && v12 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    if (v8)
      return v6;
    return 0xD000000000000016;
  }
  v14 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0 && !v8)
    return 0xD000000000000016;
  return v6;
}

uint64_t sub_1A44E18FC()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1A44E1910(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = sub_1A468FF7C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE71C030 != -1)
    swift_once();
  v8 = *(_QWORD *)algn_1EE71E9D8;
  ObjectType = swift_getObjectType();
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(a1, a2, ObjectType, v8);
  if (!v11)
  {
    if (qword_1EE71C028 != -1)
      swift_once();
    v12 = sub_1A4690318();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EE71E9B8);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v13 = sub_1A469030C();
    v14 = sub_1A4690FF0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v27 = v16;
      *(_DWORD *)v15 = 136315138;
      v17 = sub_1A468FF4C();
      v24 = v16;
      if (v18)
      {
        v25 = v17;
        v26 = v18;
        v19 = sub_1A46908E8();
        v21 = v20;
      }
      else
      {
        v21 = 0xE300000000000000;
        v19 = 7104878;
      }
      v25 = sub_1A4431120(v19, v21, &v27);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl(&dword_1A442D000, v13, v14, "Cannot resolve bundle ID for universal link {scheme: %s}", v15, 0xCu);
      v22 = v24;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v22, -1, -1);
      MEMORY[0x1A85A0114](v15, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }

  }
  return v10;
}

uint64_t sub_1A44E1B90(void *a1, id a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;

  v3 = objc_msgSend(a2, sel_bundleIdentifier);
  if (v3)
  {
    v4 = v3;
    v5 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  }
  else
  {
    if (qword_1EE71C028 != -1)
      swift_once();
    v6 = sub_1A4690318();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EE71E9B8);
    v7 = a1;
    v8 = sub_1A469030C();
    v9 = sub_1A4690FF0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138412290;
      v12 = v7;
      sub_1A46911D0();
      *v11 = v7;

      _os_log_impl(&dword_1A442D000, v8, v9, "LSApplicationRecord bundle ID is nil for user activity %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v11, -1, -1);
      MEMORY[0x1A85A0114](v10, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  return v5;
}

id sub_1A44E1D68(void *a1, unsigned __int8 *a2, double a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;

  if (*a2 >= 3u)
  {
    if (qword_1EE71C028 != -1)
      swift_once();
    v5 = sub_1A4690318();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EE71E9B8);
    v6 = sub_1A469030C();
    v7 = sub_1A4690FFC();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1A442D000, v6, v7, "Unexpected macOS enum case encountered in UIKit code", v8, 2u);
      MEMORY[0x1A85A0114](v8, -1, -1);
    }

  }
  v9 = objc_msgSend((id)objc_opt_self(), sel_imageDescriptorNamed_, *MEMORY[0x1E0D3A890]);
  objc_msgSend(v9, sel_setScale_, a3);
  objc_msgSend(v9, sel_setDrawBorder_, 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F360);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1A469B0E0;
  *(_QWORD *)(v10 + 32) = v9;
  sub_1A4690BB8();
  sub_1A44E24D0();
  v11 = v9;
  v12 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_prepareImagesForImageDescriptors_, v12);

  v13 = objc_msgSend(objc_retainAutorelease(a1), sel_CGImageForDescriptor_, v11);
  return v13;
}

id sub_1A44E1F58(uint64_t a1, unint64_t a2, char *a3, double a4)
{
  char v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v23;
  os_log_type_t type;
  uint64_t v25;
  uint64_t v26;

  v7 = *a3;
  v8 = objc_allocWithZone(MEMORY[0x1E0D3A820]);
  swift_bridgeObjectRetain();
  v9 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, sel_initWithBundleIdentifier_, v9);

  if (qword_1EE71C028 != -1)
    swift_once();
  v11 = sub_1A4690318();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EE71E9B8);
  swift_bridgeObjectRetain_n();
  v12 = v10;
  v13 = sub_1A469030C();
  v14 = sub_1A4691008();
  if (os_log_type_enabled(v13, v14))
  {
    v23 = a1;
    v15 = swift_slowAlloc();
    v16 = (_QWORD *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v26 = v25;
    *(_DWORD *)v15 = 138413058;
    type = v14;
    v17 = v7;
    v18 = v12;
    sub_1A46911D0();
    *v16 = v12;

    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1A4431120(v23, a2, &v26);
    v7 = v17;
    sub_1A46911D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 22) = 2080;
    v19 = sub_1A46908E8();
    sub_1A4431120(v19, v20, &v26);
    sub_1A46911D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 32) = 2048;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v13, type, "resolved icon %@ for %s (format: %s, scale: %f)", (uint8_t *)v15, 0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v16, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v25, -1, -1);
    MEMORY[0x1A85A0114](v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  LOBYTE(v26) = v7;
  v21 = sub_1A44E1D68(v12, (unsigned __int8 *)&v26, a4);

  return v21;
}

uint64_t sub_1A44E2280(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A44E22C8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A44E230C()
{
  unint64_t result;

  result = qword_1EE71E9E0;
  if (!qword_1EE71E9E0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMApplicationIconFormat, &type metadata for REMApplicationIconFormat);
    atomic_store(result, (unint64_t *)&qword_1EE71E9E0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for REMApplicationIconFormat(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A44E239C + 4 * byte_1A469B0F5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A44E23D0 + 4 * byte_1A469B0F0[v4]))();
}

uint64_t sub_1A44E23D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44E23D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A44E23E0);
  return result;
}

uint64_t sub_1A44E23EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A44E23F4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A44E23F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44E2400(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMApplicationIconFormat()
{
  return &type metadata for REMApplicationIconFormat;
}

uint64_t type metadata accessor for DefaultUniversalLinkAppIconBundleIDResolver()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for IOSUniversalLinkAppIconBundleIDResolver()
{
  return objc_opt_self();
}

uint64_t sub_1A44E245C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A44E24A4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A44E24C8(char a1, void *a2)
{
  uint64_t v2;

  sub_1A44E0E98(a1, a2, *(void **)(v2 + 16));
}

unint64_t sub_1A44E24D0()
{
  unint64_t result;

  result = qword_1EE71EB20;
  if (!qword_1EE71EB20)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE71EB20);
  }
  return result;
}

uint64_t UnfairLock.__allocating_init(options:)(_DWORD *a1)
{
  uint64_t v2;
  _DWORD *v3;

  v2 = swift_allocObject();
  LODWORD(a1) = *a1;
  v3 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = 0;
  *(_DWORD *)(v2 + 24) = (a1 & 1) << 16;
  return v2;
}

Swift::Void __swiftcall UnfairLock.lock()()
{
  os_unfair_lock_lock_with_options();
}

Swift::Void __swiftcall UnfairLock.unlock()()
{
  uint64_t v0;

  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 16));
}

Swift::Void __swiftcall UnfairLock.assertOwner()()
{
  uint64_t v0;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v0 + 16));
}

Swift::Void __swiftcall UnfairLock.assertNotOwner()()
{
  uint64_t v0;

  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(v0 + 16));
}

ReminderKitInternal::UnfairLock::Options __swiftcall UnfairLock.Options.init(rawValue:)(ReminderKitInternal::UnfairLock::Options rawValue)
{
  ReminderKitInternal::UnfairLock::Options *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static UnfairLock.Options.dataSynchronization.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t UnfairLock.Options.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t UnfairLock.deinit()
{
  uint64_t v0;

  MEMORY[0x1A85A0114](*(_QWORD *)(v0 + 16), -1, -1);
  return v0;
}

uint64_t MutexLock.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  v1 = swift_slowAlloc();
  *(_QWORD *)(v0 + 16) = v1;
  *(_OWORD *)v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  pthread_mutex_init((pthread_mutex_t *)v1, 0);
  return v0;
}

uint64_t MutexLock.init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_slowAlloc();
  *(_QWORD *)(v0 + 16) = v1;
  *(_OWORD *)v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  pthread_mutex_init((pthread_mutex_t *)v1, 0);
  return v0;
}

uint64_t MutexLock.__deallocating_deinit()
{
  return sub_1A44300E8();
}

Swift::Void __swiftcall MutexLock.lock()()
{
  uint64_t v0;

  pthread_mutex_lock(*(pthread_mutex_t **)(v0 + 16));
}

Swift::Void __swiftcall MutexLock.unlock()()
{
  uint64_t v0;

  pthread_mutex_unlock(*(pthread_mutex_t **)(v0 + 16));
}

unint64_t sub_1A44E2670()
{
  unint64_t result;

  result = qword_1EE71EB28;
  if (!qword_1EE71EB28)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for UnfairLock.Options, &type metadata for UnfairLock.Options);
    atomic_store(result, (unint64_t *)&qword_1EE71EB28);
  }
  return result;
}

unint64_t sub_1A44E26B8()
{
  unint64_t result;

  result = qword_1EE71EB30;
  if (!qword_1EE71EB30)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for UnfairLock.Options, &type metadata for UnfairLock.Options);
    atomic_store(result, (unint64_t *)&qword_1EE71EB30);
  }
  return result;
}

unint64_t sub_1A44E2700()
{
  unint64_t result;

  result = qword_1ED241870;
  if (!qword_1ED241870)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for UnfairLock.Options, &type metadata for UnfairLock.Options);
    atomic_store(result, (unint64_t *)&qword_1ED241870);
  }
  return result;
}

unint64_t sub_1A44E2748()
{
  unint64_t result;

  result = qword_1ED241910;
  if (!qword_1ED241910)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for UnfairLock.Options, &type metadata for UnfairLock.Options);
    atomic_store(result, (unint64_t *)&qword_1ED241910);
  }
  return result;
}

uint64_t sub_1A44E278C()
{
  uint64_t v0;

  return pthread_mutex_lock(*(pthread_mutex_t **)(*(_QWORD *)v0 + 16));
}

uint64_t sub_1A44E2798()
{
  uint64_t v0;

  return pthread_mutex_unlock(*(pthread_mutex_t **)(*(_QWORD *)v0 + 16));
}

uint64_t dispatch thunk of Lock.lock()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Lock.unlock()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for UnfairLock()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UnfairLock.__allocating_init(options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

ValueMetadata *type metadata accessor for UnfairLock.Options()
{
  return &type metadata for UnfairLock.Options;
}

uint64_t type metadata accessor for MutexLock()
{
  return objc_opt_self();
}

uint64_t method lookup function for MutexLock()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MutexLock.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1A44E2810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE71EBD8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE71EBD8);
  if (qword_1ED244120 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2568D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void NSFileManager.rem_createDirectoryIfNecessary(at:)()
{
  void *v0;
  void *v1;
  void *v2;
  unsigned __int8 v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  unsigned int v8;
  id v9;
  id v10;
  char v11;
  uint64_t v12;

  v1 = v0;
  v12 = *MEMORY[0x1E0C80C00];
  v11 = 0;
  sub_1A468FF40();
  v2 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v0, sel_fileExistsAtPath_isDirectory_, v2, &v11);

  if ((v3 & 1) != 0)
  {
    if ((v11 & 1) != 0)
      return;
    v4 = (void *)objc_opt_self();
    sub_1A4691410();
    swift_bridgeObjectRelease();
    sub_1A468FF40();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v5 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v4, sel_internalErrorWithDebugDescription_, v5, 0x20746120656C6946, 0xE800000000000000);
  }
  else
  {
    v7 = (void *)sub_1A468FED4();
    v10 = 0;
    v8 = objc_msgSend(v1, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v7, 1, 0, &v10);

    if (v8)
    {
      v9 = v10;
      return;
    }
    v5 = v10;
    sub_1A468FE68();
  }

  swift_willThrow();
}

uint64_t sub_1A44E2A80(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v8;

  v2 = sub_1A468FF7C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A468FF1C();
  v6 = a1;
  NSFileManager.rem_createDirectoryIfNecessary(at:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

  return 1;
}

id NSFileManager.rem_fileExists(at:)()
{
  void *v0;
  void *v1;
  id v2;

  sub_1A468FF40();
  v1 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_fileExistsAtPath_isDirectory_, v1, 0);

  return v2;
}

id sub_1A44E2BE0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v10;

  v2 = sub_1A468FF7C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A468FF1C();
  v6 = a1;
  sub_1A468FF40();
  v7 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_fileExistsAtPath_isDirectory_, v7, 0);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v8;
}

id NSFileManager.rem_fileExists(at:isDirectory:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v4;
  id v5;

  sub_1A468FF40();
  v4 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v2, sel_fileExistsAtPath_isDirectory_, v4, a2);

  return v5;
}

id sub_1A44E2D24(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v14;

  v6 = sub_1A468FF7C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A468FF1C();
  v10 = a1;
  sub_1A468FF40();
  v11 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v10, sel_fileExistsAtPath_isDirectory_, v11, a4);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v12;
}

BOOL NSFileManager.rem_isEmptyDirectory(at:skipsHiddenFiles:)(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v5;
  unsigned int v6;
  _BOOL8 result;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  id v28[2];

  v3 = v2;
  v28[1] = *(id *)MEMORY[0x1E0C80C00];
  v27 = 0;
  v5 = (void *)sub_1A468FED4();
  v6 = objc_msgSend(v2, sel_rem_fileExistsAtURL_isDirectory_, v5, &v27);

  result = 0;
  if (v6)
  {
    if (v27 == 1)
    {
      v8 = (void *)sub_1A468FED4();
      if ((a2 & 1) != 0)
        v9 = 4;
      else
        v9 = 0;
      v28[0] = 0;
      v10 = objc_msgSend(v3, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v8, 0, v9, v28);

      v11 = v28[0];
      if (v10)
      {
        sub_1A468FF7C();
        v12 = sub_1A4690BA0();
        v13 = v11;

        v14 = *(_QWORD *)(v12 + 16);
        swift_bridgeObjectRelease();
        return v14 == 0;
      }
      v15 = v28[0];
      v16 = (void *)sub_1A468FE68();

      swift_willThrow();
      if (qword_1EE71C038 != -1)
        swift_once();
      v17 = sub_1A4690318();
      __swift_project_value_buffer(v17, (uint64_t)qword_1EE71EBD8);
      v18 = v16;
      v19 = v16;
      v20 = sub_1A469030C();
      v21 = sub_1A4690FF0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        v23 = (void *)swift_slowAlloc();
        v28[0] = v23;
        *(_DWORD *)v22 = 136315138;
        swift_getErrorValue();
        v24 = Error.rem_errorDescription.getter(v26);
        sub_1A4431120(v24, v25, (uint64_t *)v28);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1A442D000, v20, v21, "rem_isEmptyDirectory: contentsOfDirectory throws error: %s", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v23, -1, -1);
        MEMORY[0x1A85A0114](v22, -1, -1);

      }
      else
      {

      }
    }
    return 0;
  }
  return result;
}

BOOL sub_1A44E30F0(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  BOOL v11;
  uint64_t v13;

  v6 = sub_1A468FF7C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A468FF1C();
  v10 = a1;
  v11 = NSFileManager.rem_isEmptyDirectory(at:skipsHiddenFiles:)((uint64_t)v9, a4);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v11;
}

void RDVectorDistanceCalculator.distance(_:_:)(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  double v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  float64x2_t *v35;
  float64x2_t *v36;
  float64x2_t v37;
  float64x2_t v38;
  float64x2_t v39;
  float64x2_t v40;
  uint64_t v41;
  unint64_t v42;
  float64x2_t *v43;
  float64x2_t *v44;
  float64x2_t v45;
  float64x2_t v46;
  float64x2_t v47;
  float64x2_t v48;
  float64x2_t v49;
  float64x2_t v50;
  float64x2_t v51;
  float64x2_t v52;
  double v53;
  double v54;
  double v55;
  double v56;

  if (*v2)
  {
    if (*v2 == 1)
    {
      sub_1A44E3540(a1, a2);
      return;
    }
    swift_beginAccess();
    v17 = *(_QWORD *)(a1 + 24);
    if (v17 < 0)
      goto LABEL_50;
    v18 = 0.0;
    v19 = 0.0;
    v20 = 0.0;
    if (!v17)
    {
LABEL_42:
      v55 = sqrt(v19) * sqrt(v20);
      v56 = v18 / v55;
      if ((*(_QWORD *)&v55 & 0x7FFFFFFFFFFFFFFFLL) == 0)
        v56 = 0.0;
      acos(v56);
      return;
    }
    v21 = a2 + 16;
    swift_beginAccess();
    swift_beginAccess();
    v22 = *(_QWORD *)(a1 + 16);
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      v24 = *(_QWORD *)v21;
      v25 = *(_QWORD *)(*(_QWORD *)v21 + 16);
      if (!v25)
      {
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      v26 = v22 + 32;
      v27 = *(double *)(v22 + 32);
      v28 = v24 + 32;
      v29 = *(double *)(v24 + 32);
      v19 = v27 * v27;
      v20 = v29 * v29;
      v18 = v27 * v29 + 0.0;
      if (v17 != 1)
      {
        v30 = v25 - 1;
        if (v25 - 1 >= v23 - 1)
          v30 = v23 - 1;
        if (v30 >= v17 - 2)
          v30 = v17 - 2;
        v31 = v30 + 1;
        if (v31 > 4)
        {
          v41 = v31 & 3;
          if ((v31 & 3) == 0)
            v41 = 4;
          v42 = v31 - v41;
          v32 = v42 + 1;
          v43 = (float64x2_t *)(v22 + 56);
          v44 = (float64x2_t *)(v24 + 56);
          do
          {
            v45 = v43[-1];
            v46 = v44[-1];
            v47 = vmulq_f64(v45, v45);
            v48 = vmulq_f64(*v43, *v43);
            v49 = vmulq_f64(v46, v46);
            v50 = vmulq_f64(*v44, *v44);
            v51 = vmulq_f64(v45, v46);
            v52 = vmulq_f64(*v43, *v44);
            v18 = v18 + v51.f64[0] + v51.f64[1] + v52.f64[0] + v52.f64[1];
            v19 = v19 + v47.f64[0] + v47.f64[1] + v48.f64[0] + v48.f64[1];
            v20 = v20 + v49.f64[0] + v49.f64[1] + v50.f64[0] + v50.f64[1];
            v43 += 2;
            v44 += 2;
            v42 -= 4;
          }
          while (v42);
        }
        else
        {
          v32 = 1;
        }
        while (v23 != v32)
        {
          if (v32 >= v25)
            goto LABEL_48;
          v53 = *(double *)(v26 + 8 * v32);
          v54 = *(double *)(v28 + 8 * v32);
          v19 = v19 + v53 * v53;
          v20 = v20 + v54 * v54;
          v18 = v18 + v53 * v54;
          if (v17 == ++v32)
            goto LABEL_42;
        }
        goto LABEL_47;
      }
      goto LABEL_42;
    }
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  swift_beginAccess();
  v5 = *(_QWORD *)(a1 + 24);
  if (v5 < 0)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    return;
  }
  if (v5)
  {
    v6 = a2 + 16;
    swift_beginAccess();
    swift_beginAccess();
    v7 = *(_QWORD *)(a1 + 16);
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      v9 = *(_QWORD *)v6;
      v10 = *(_QWORD *)(*(_QWORD *)v6 + 16);
      if (!v10)
      {
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      v11 = v7 + 32;
      v12 = v9 + 32;
      v13 = (*(double *)(v7 + 32) - *(double *)(v9 + 32)) * (*(double *)(v7 + 32) - *(double *)(v9 + 32));
      if (v5 == 1)
        return;
      v14 = v10 - 1;
      if (v10 - 1 >= v8 - 1)
        v14 = v8 - 1;
      if (v14 >= v5 - 2)
        v14 = v5 - 2;
      v15 = v14 + 1;
      if (v15 > 4)
      {
        v33 = v15 & 3;
        if ((v15 & 3) == 0)
          v33 = 4;
        v34 = v15 - v33;
        v16 = v34 + 1;
        v35 = (float64x2_t *)(v7 + 56);
        v36 = (float64x2_t *)(v9 + 56);
        do
        {
          v37 = vsubq_f64(v35[-1], v36[-1]);
          v38 = vsubq_f64(*v35, *v36);
          v39 = vmulq_f64(v37, v37);
          v40 = vmulq_f64(v38, v38);
          v13 = v13 + v39.f64[0] + v39.f64[1] + v40.f64[0] + v40.f64[1];
          v35 += 2;
          v36 += 2;
          v34 -= 4;
        }
        while (v34);
      }
      else
      {
        v16 = 1;
      }
      while (v8 != v16)
      {
        if (v16 >= v10)
          goto LABEL_46;
        v13 = v13
            + (*(double *)(v11 + 8 * v16) - *(double *)(v12 + 8 * v16))
            * (*(double *)(v11 + 8 * v16) - *(double *)(v12 + 8 * v16));
        if (v5 == ++v16)
          return;
      }
    }
    __break(1u);
    goto LABEL_46;
  }
}

uint64_t sub_1A44E3540(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  double v11;
  double v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  float64x2_t *v34;
  float64x2_t *v35;
  float64x2_t v36;
  float64x2_t v37;
  float64x2_t v38;
  float64x2_t v39;
  float64x2_t v40;
  float64x2_t v41;
  float64x2_t v42;
  float64x2_t v43;
  double v44;
  double v45;

  v4 = (uint64_t *)(a1 + 24);
  result = swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 24);
  if (v6 < 0)
    goto LABEL_38;
  if (v6)
  {
    v7 = a1 + 16;
    v8 = a2 + 16;
    swift_beginAccess();
    result = swift_beginAccess();
    v9 = 0;
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (v9 < *(_QWORD *)(*(_QWORD *)v7 + 16))
    {
      if (v9 >= *(_QWORD *)(*(_QWORD *)v8 + 16))
        goto LABEL_35;
      v11 = *(double *)(*(_QWORD *)v7 + 8 * v9 + 32);
      v12 = *(double *)(*(_QWORD *)v8 + 8 * v9 + 32);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A4438D64(0, v10[2] + 1, 1, v10);
        v10 = (_QWORD *)result;
      }
      v14 = v10[2];
      v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        result = (uint64_t)sub_1A4438D64((_QWORD *)(v13 > 1), v14 + 1, 1, v10);
        v10 = (_QWORD *)result;
      }
      ++v9;
      v10[2] = v14 + 1;
      *(double *)&v10[v14 + 4] = v11 - v12;
      if (v6 == v9)
        goto LABEL_13;
    }
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_13:
  type metadata accessor for RDVector();
  *(_QWORD *)(swift_initStackObject() + 16) = v10;
  v15 = sub_1A46134B8();
  result = swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    v16 = *v4;
    if (v16 < 0)
    {
LABEL_39:
      __break(1u);
      return result;
    }
    if (v16)
    {
      v17 = (uint64_t *)(a2 + 16);
      swift_beginAccess();
      result = swift_beginAccess();
      v18 = *(_QWORD *)(a1 + 16);
      v19 = *(_QWORD *)(v18 + 16);
      if (!v19)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      v20 = *v17;
      v21 = *(_QWORD *)(*v17 + 16);
      if (!v21)
      {
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      v22 = v18 + 32;
      v23 = *(double *)(v18 + 32);
      v24 = v20 + 32;
      v25 = *(double *)(v20 + 32);
      v26 = v23 * v23;
      v27 = v25 * v25;
      v28 = v23 * v25 + 0.0;
      if (v16 != 1)
      {
        v29 = v21 - 1;
        if (v21 - 1 >= v19 - 1)
          v29 = v19 - 1;
        if (v29 >= v16 - 2)
          v29 = v16 - 2;
        v30 = v29 + 1;
        if (v30 > 4)
        {
          v32 = v30 & 3;
          if ((v30 & 3) == 0)
            v32 = 4;
          v33 = v30 - v32;
          v31 = v33 + 1;
          v34 = (float64x2_t *)(v18 + 56);
          v35 = (float64x2_t *)(v20 + 56);
          do
          {
            v36 = v34[-1];
            v37 = v35[-1];
            v38 = vmulq_f64(v36, v36);
            v39 = vmulq_f64(*v34, *v34);
            v40 = vmulq_f64(v37, v37);
            v41 = vmulq_f64(*v35, *v35);
            v42 = vmulq_f64(v36, v37);
            v43 = vmulq_f64(*v34, *v35);
            v28 = v28 + v42.f64[0] + v42.f64[1] + v43.f64[0] + v43.f64[1];
            v26 = v26 + v38.f64[0] + v38.f64[1] + v39.f64[0] + v39.f64[1];
            v27 = v27 + v40.f64[0] + v40.f64[1] + v41.f64[0] + v41.f64[1];
            v34 += 2;
            v35 += 2;
            v33 -= 4;
          }
          while (v33);
        }
        else
        {
          v31 = 1;
        }
        while (v19 != v31)
        {
          if (v31 >= v21)
            goto LABEL_37;
          v44 = *(double *)(v22 + 8 * v31);
          v45 = *(double *)(v24 + 8 * v31);
          v26 = v26 + v44 * v44;
          v27 = v27 + v45 * v45;
          v28 = v28 + v44 * v45;
          if (v16 == ++v31)
            return result;
        }
        goto LABEL_36;
      }
    }
  }
  return result;
}

BOOL static RDVectorDistanceCalculator.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t RDVectorDistanceCalculator.hash(into:)()
{
  return sub_1A4691C98();
}

uint64_t RDVectorDistanceCalculator.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

unint64_t sub_1A44E392C()
{
  unint64_t result;

  result = qword_1EE71EBF0;
  if (!qword_1EE71EBF0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for RDVectorDistanceCalculator, &type metadata for RDVectorDistanceCalculator);
    atomic_store(result, (unint64_t *)&qword_1EE71EBF0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RDVectorDistanceCalculator(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A44E39BC + 4 * byte_1A469B4A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A44E39F0 + 4 * byte_1A469B4A0[v4]))();
}

uint64_t sub_1A44E39F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44E39F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A44E3A00);
  return result;
}

uint64_t sub_1A44E3A0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A44E3A14);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A44E3A18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44E3A20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RDVectorDistanceCalculator()
{
  return &type metadata for RDVectorDistanceCalculator;
}

__C::REMSortingStyle_optional __swiftcall REMSortingStyle.init(stringValue:)(Swift::String stringValue)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v3;
  void *v4;
  char v6;
  void *v7;
  char v9;
  void *v10;
  char v12;
  void *v13;
  id v14;
  Swift::Bool v15;
  void *v16;
  char v17;
  void *v18;
  char v19;
  void *v20;
  char v21;
  void *v22;
  char v23;
  void *v24;
  char v25;
  void *v26;
  char v27;
  void *v28;
  char v29;
  __C::REMSortingStyle_optional result;

  object = stringValue._object;
  countAndFlagsBits = stringValue._countAndFlagsBits;
  v3 = (void *)*MEMORY[0x1E0D84A48];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == stringValue._countAndFlagsBits
    && v4 == object)
  {
    goto LABEL_18;
  }
  v6 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    goto LABEL_19;
  v3 = (void *)*MEMORY[0x1E0D84A60];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v7 == object)
    goto LABEL_18;
  v9 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v3 = (void *)*MEMORY[0x1E0D84A58];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v10 == object)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  v12 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    goto LABEL_19;
  v3 = (void *)*MEMORY[0x1E0D84A50];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v13 == object)
    goto LABEL_18;
  v17 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
    goto LABEL_19;
  v3 = (void *)*MEMORY[0x1E0D84A70];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v18 == object)
    goto LABEL_18;
  v19 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    goto LABEL_19;
  v3 = (void *)*MEMORY[0x1E0D84A68];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v20 == object)
    goto LABEL_18;
  v21 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
    goto LABEL_19;
  v3 = (void *)*MEMORY[0x1E0D84A40];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v22 == object)
    goto LABEL_18;
  v23 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
    goto LABEL_19;
  v3 = (void *)*MEMORY[0x1E0D84A38];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v24 == object)
    goto LABEL_18;
  v25 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
    goto LABEL_19;
  v3 = (void *)*MEMORY[0x1E0D84A78];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v26 == object)
    goto LABEL_18;
  v27 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v27 & 1) != 0)
    goto LABEL_19;
  v3 = (void *)*MEMORY[0x1E0D84A80];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v28 == object)
    goto LABEL_18;
  v29 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v29 & 1) == 0)
  {
    v3 = 0;
    goto LABEL_21;
  }
LABEL_20:
  v14 = v3;
LABEL_21:
  v16 = v3;
  result.value._rawValue = v16;
  result.is_nil = v15;
  return result;
}

uint64_t REMSortingStyle.init(sortingStyle:)(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1A44E3D94 + 4 * byte_1A469B550[*a1 >> 5]))();
}

id sub_1A44E3D94@<X0>(char a1@<W8>)
{
  id *v1;

  if ((a1 & 1) != 0)
    v1 = (id *)MEMORY[0x1E0D84A50];
  else
    v1 = (id *)MEMORY[0x1E0D84A58];
  return *v1;
}

uint64_t REMSortingStyle.dataViewSortingStyle.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;

  v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v4 = v3;
  if (v2 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v4 == v5)
  {
    v9 = 0x80;
LABEL_8:
    result = swift_bridgeObjectRelease_n();
    goto LABEL_9;
  }
  v7 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    v9 = 0x80;
    goto LABEL_9;
  }
  v10 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v12 = v11;
  if (v10 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v12 == v13)
  {
    v9 = -127;
    goto LABEL_8;
  }
  v15 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
    v9 = -127;
    goto LABEL_9;
  }
  v16 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v18 = v17;
  if (v16 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v18 == v19)
  {
    v9 = 0;
    goto LABEL_8;
  }
  v20 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v9 = 0;
  if ((v20 & 1) != 0)
    goto LABEL_9;
  v21 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v23 = v22;
  if (v21 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v23 == v24)
  {
    v9 = 1;
    goto LABEL_8;
  }
  v25 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
  {
    v9 = 1;
    goto LABEL_9;
  }
  v26 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v28 = v27;
  if (v26 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v28 == v29)
  {
    v9 = 32;
    goto LABEL_8;
  }
  v30 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v30 & 1) != 0)
  {
    v9 = 32;
    goto LABEL_9;
  }
  v31 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v33 = v32;
  if (v31 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v33 == v34)
  {
    v9 = 33;
    goto LABEL_8;
  }
  v35 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v35 & 1) != 0)
  {
    v9 = 33;
    goto LABEL_9;
  }
  v36 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v38 = v37;
  if (v36 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v38 == v39)
  {
    v9 = 64;
    goto LABEL_8;
  }
  v40 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v40 & 1) != 0)
  {
    v9 = 64;
    goto LABEL_9;
  }
  v41 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v43 = v42;
  if (v41 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v43 == v44)
  {
    v9 = 65;
    goto LABEL_8;
  }
  v45 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v45 & 1) != 0)
  {
    v9 = 65;
    goto LABEL_9;
  }
  v46 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v48 = v47;
  if (v46 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v48 == v49)
  {
    v9 = 96;
    goto LABEL_8;
  }
  v50 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v50 & 1) != 0)
  {
    v9 = 96;
    goto LABEL_9;
  }
  v51 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v53 = v52;
  if (v51 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v53 == v54)
  {
    v9 = 97;
    goto LABEL_8;
  }
  v55 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v55 & 1) != 0)
    v9 = 97;
  else
    v9 = 0x80;
LABEL_9:
  *a1 = v9;
  return result;
}

uint64_t sub_1A44E42CC()
{
  return _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
}

uint64_t Locale.languageCodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_1A46901F8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240F98);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A4690204();
  sub_1A46901D4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7 = sub_1A4690144();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1A445404C((uint64_t)v6, &qword_1ED240F98);
    return 0;
  }
  else
  {
    v9 = sub_1A4690138();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  return v9;
}

uint64_t sub_1A44E4404()
{
  uint64_t v0;

  v0 = sub_1A4690210();
  __swift_allocate_value_buffer(v0, qword_1EE71EBF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE71EBF8);
  return sub_1A469012C();
}

uint64_t static Locale.rem_unitTestDefaultLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE71C040 != -1)
    swift_once();
  v2 = sub_1A4690210();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE71EBF8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

__C::NLLanguage __swiftcall Locale.Components.rem_language()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[4];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240F10);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A46901BC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v23 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240F98);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A4690108();
  sub_1A4690198();
  v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v13(v9, v3);
  v14 = sub_1A4690144();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
    sub_1A445404C((uint64_t)v12, &qword_1ED240F98);
    v16 = 0;
    v17 = 0xE000000000000000;
  }
  else
  {
    v16 = sub_1A4690138();
    v17 = v18;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  }
  v23[2] = v16;
  v23[3] = v17;
  sub_1A4690108();
  sub_1A46901B0();
  v13(v7, v3);
  v19 = sub_1A4690180();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v2, 1, v19) == 1)
  {
    sub_1A445404C((uint64_t)v2, &qword_1ED240F10);
  }
  else
  {
    sub_1A4690138();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v2, v19);
    v23[0] = 45;
    v23[1] = 0xE100000000000000;
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    swift_bridgeObjectRelease();
  }
  v21 = sub_1A469087C();
  swift_bridgeObjectRelease();
  return (__C::NLLanguage)v21;
}

Swift::String __swiftcall Locale.Components.rem_languageAndScriptWithRegion()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  Swift::String result;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FFC8);
  MEMORY[0x1E0C80A78](v1);
  v34 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240F10);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A46901BC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v33 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v33 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240F98);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v0;
  sub_1A4690108();
  sub_1A4690198();
  v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v15, v6);
  v20 = sub_1A4690144();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) == 1)
  {
    sub_1A445404C((uint64_t)v18, &qword_1ED240F98);
    v22 = 0;
    v23 = 0xE000000000000000;
  }
  else
  {
    v22 = sub_1A4690138();
    v23 = v24;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
  }
  v37 = v22;
  v38 = (void *)v23;
  sub_1A4690108();
  sub_1A46901B0();
  v19(v13, v6);
  v25 = sub_1A4690180();
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v5, 1, v25) == 1)
  {
    sub_1A445404C((uint64_t)v5, &qword_1ED240F10);
  }
  else
  {
    sub_1A4690138();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v25);
    v35 = 45;
    v36 = 0xE100000000000000;
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    swift_bridgeObjectRelease();
  }
  sub_1A4690108();
  v27 = (uint64_t)v34;
  sub_1A46901A4();
  v19(v10, v6);
  v28 = sub_1A4690168();
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    sub_1A445404C(v27, &qword_1ED23FFC8);
  }
  else
  {
    sub_1A4690138();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    v35 = 95;
    v36 = 0xE100000000000000;
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    swift_bridgeObjectRelease();
  }
  v30 = v37;
  v31 = v38;
  result._object = v31;
  result._countAndFlagsBits = v30;
  return result;
}

uint64_t sub_1A44E4AC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE71EC10);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE71EC10);
  if (qword_1ED243128 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256898);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t REMSmartListType.hasPredefinedObjectID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v0 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v2 = v1;
  if (v0 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v2 == v3)
    goto LABEL_14;
  v5 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    v7 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v9 = v8;
    if (v7 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v9 != v10)
    {
      v12 = sub_1A4691A40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
        return 1;
      v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v15 = v14;
      if (v13 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v15 != v16)
      {
        v18 = sub_1A4691A40();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v18 & 1) != 0)
          return 1;
        v19 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v21 = v20;
        if (v19 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v21 != v22)
        {
          v23 = sub_1A4691A40();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v23 & 1) != 0)
            return 1;
          v24 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          v26 = v25;
          if (v24 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v26 != v27)
          {
            v28 = sub_1A4691A40();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v28 & 1) != 0)
              return 1;
            v29 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
            v31 = v30;
            if (v29 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v31 != v32)
            {
              v33 = sub_1A4691A40();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v33 & 1) != 0)
                return 1;
              v34 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
              v36 = v35;
              if (v34 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v36 != v37)
              {
                v38 = sub_1A4691A40();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v38 & 1) != 0)
                  return 1;
                v39 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
                v41 = v40;
                if (v39 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v41 != v42)
                {
                  v43 = sub_1A4691A40();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v43 & 1) != 0)
                    return 1;
                  v44 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
                  v46 = v45;
                  if (v44 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v46 != v47)
                    sub_1A4691A40();
                  v6 = 0;
LABEL_15:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  return v6;
                }
              }
            }
          }
        }
      }
    }
LABEL_14:
    v6 = 1;
    goto LABEL_15;
  }
  return 1;
}

uint64_t REMSmartListType.hasPredefinedManualOrderingObjectID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v0 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v2 = v1;
  if (v0 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v2 == v3)
    goto LABEL_14;
  v5 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    v7 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v9 = v8;
    if (v7 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v9 != v10)
    {
      v12 = sub_1A4691A40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
        return 1;
      v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v15 = v14;
      if (v13 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v15 != v16)
      {
        v18 = sub_1A4691A40();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v18 & 1) != 0)
          return 1;
        v19 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v21 = v20;
        if (v19 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v21 != v22)
        {
          v23 = sub_1A4691A40();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v23 & 1) != 0)
            return 1;
          v24 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          v26 = v25;
          if (v24 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v26 != v27)
          {
            v28 = sub_1A4691A40();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v28 & 1) != 0)
              return 1;
            v29 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
            v31 = v30;
            if (v29 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v31 != v32)
            {
              v33 = sub_1A4691A40();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v33 & 1) != 0)
                return 1;
              v34 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
              v36 = v35;
              if (v34 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v36 != v37)
              {
                v38 = sub_1A4691A40();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v38 & 1) != 0)
                  return 1;
                v39 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
                v41 = v40;
                if (v39 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v41 == v42)
                  goto LABEL_32;
                v43 = sub_1A4691A40();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v6 = 0;
                if ((v43 & 1) != 0)
                  return v6;
                v44 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
                v46 = v45;
                if (v44 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v46 == v47)
                {
LABEL_32:
                  v6 = 0;
                }
                else
                {
                  sub_1A4691A40();
                  v6 = 0;
                }
LABEL_15:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return v6;
              }
            }
          }
        }
      }
    }
LABEL_14:
    v6 = 1;
    goto LABEL_15;
  }
  return 1;
}

uint64_t static REMSmartListType.manualOrderablePredefinedSmartListTypes.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F7D0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A469B5A0;
  v1 = (void *)*MEMORY[0x1E0D84A30];
  v2 = (void *)*MEMORY[0x1E0D84A18];
  *(_QWORD *)(v0 + 32) = *MEMORY[0x1E0D84A30];
  *(_QWORD *)(v0 + 40) = v2;
  v3 = (void *)*MEMORY[0x1E0D849F0];
  v4 = (void *)*MEMORY[0x1E0D84A10];
  *(_QWORD *)(v0 + 48) = *MEMORY[0x1E0D849F0];
  *(_QWORD *)(v0 + 56) = v4;
  v5 = (void *)*MEMORY[0x1E0D84A00];
  v6 = (void *)*MEMORY[0x1E0D849F8];
  *(_QWORD *)(v0 + 64) = *MEMORY[0x1E0D84A00];
  *(_QWORD *)(v0 + 72) = v6;
  v7 = v1;
  v8 = v2;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v12 = v6;
  return v0;
}

uint64_t REMSmartListType.supportsUserDefinedVisibility.getter(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;

  v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v4 = v3;
  if (v2 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v4 == v5)
    goto LABEL_13;
  v7 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
    return 1;
  v8 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v10 = v9;
  if (v8 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v10 == v11)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  v13 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
    return 1;
  v14 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v16 = v15;
  if (v14 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v16 == v17)
    goto LABEL_13;
  v19 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    return 1;
  v20 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v22 = v21;
  if (v20 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v22 == v23)
    goto LABEL_13;
  v24 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v24 & 1) != 0)
    return 1;
  v25 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v27 = v26;
  if (v25 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v27 == v28)
    goto LABEL_13;
  v29 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v29 & 1) != 0)
    return 1;
  v30 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v32 = v31;
  if (v30 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v32 == v33)
    goto LABEL_13;
  v34 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v34 & 1) != 0)
    return 1;
  v35 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v37 = v36;
  if (v35 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v37 == v38)
    goto LABEL_28;
  v39 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v39 & 1) == 0)
  {
    v40 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v42 = v41;
    if (v40 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v42 == v43)
      goto LABEL_28;
    v44 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v44 & 1) != 0)
      return result;
    v45 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v47 = v46;
    if (v45 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v47 == v48)
    {
LABEL_28:
      swift_bridgeObjectRelease_n();
      return 0;
    }
    v49 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v49 & 1) == 0)
    {
      if (qword_1EE71C048 != -1)
        swift_once();
      v50 = sub_1A4690318();
      __swift_project_value_buffer(v50, (uint64_t)qword_1EE71EC10);
      v51 = a1;
      v52 = sub_1A469030C();
      v53 = sub_1A4690FFC();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc();
        v55 = swift_slowAlloc();
        v58 = v55;
        *(_DWORD *)v54 = 136315138;
        v56 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        sub_1A4431120(v56, v57, &v58);
        sub_1A46911D0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v52, v53, "REMSmartListType.supportsUserDefinedVisibility: Unhandled smartListType {smartListType: %s}", v54, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v55, -1, -1);
        MEMORY[0x1A85A0114](v54, -1, -1);

      }
      else
      {

      }
      return 0;
    }
  }
  return result;
}

void *_sSo16REMSmartListTypea19ReminderKitInternalE11stringValueABSgSS_tcfC_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  id v15;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;

  v4 = (void *)*MEMORY[0x1E0D84A30];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == a1 && v5 == a2)
    goto LABEL_18;
  v7 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
    goto LABEL_19;
  v4 = (void *)*MEMORY[0x1E0D84A10];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == a1 && v8 == a2)
    goto LABEL_18;
  v10 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v4 = (void *)*MEMORY[0x1E0D84A18];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == a1 && v11 == a2)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  v13 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
    goto LABEL_19;
  v4 = (void *)*MEMORY[0x1E0D849F0];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == a1 && v14 == a2)
    goto LABEL_18;
  v17 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
    goto LABEL_19;
  v4 = (void *)*MEMORY[0x1E0D849F8];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == a1 && v18 == a2)
    goto LABEL_18;
  v19 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    goto LABEL_19;
  v4 = (void *)*MEMORY[0x1E0D84A20];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == a1 && v20 == a2)
    goto LABEL_18;
  v21 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
    goto LABEL_19;
  v4 = (void *)*MEMORY[0x1E0D84A08];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == a1 && v22 == a2)
    goto LABEL_18;
  v23 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
    goto LABEL_19;
  v4 = (void *)*MEMORY[0x1E0D84A28];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == a1 && v24 == a2)
    goto LABEL_18;
  v25 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
    goto LABEL_19;
  v4 = (void *)*MEMORY[0x1E0D84A00];
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == a1 && v26 == a2)
    goto LABEL_18;
  v27 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0)
    return 0;
LABEL_20:
  v15 = v4;
  return v4;
}

id sub_1A44E5BC0()
{
  return (id)sub_1A44E5D44();
}

id REMOrderedIdentifierMap.IdentifiableContainer.remObjectID.getter()
{
  return (id)sub_1A44E5D44();
}

uint64_t REMOrderedIdentifierMap.IdentifiableContainer.nonIdentifiable.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 96));
}

char *REMOrderedIdentifierMap.IdentifiableContainer.__allocating_init(remObjectID:nonIdentifiable:)(uint64_t a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)swift_allocObject();
  v5 = *(_QWORD *)v4;
  *((_QWORD *)v4 + 2) = a1;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 80) - 8) + 32))(&v4[*(_QWORD *)(v5 + 96)], a2);
  return v4;
}

char *REMOrderedIdentifierMap.IdentifiableContainer.init(remObjectID:nonIdentifiable:)(uint64_t a1)
{
  char *v1;
  uint64_t v2;

  v2 = *(_QWORD *)v1;
  *((_QWORD *)v1 + 2) = a1;
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 32))(&v1[*(_QWORD *)(v2 + 96)]);
  return v1;
}

id *REMOrderedIdentifierMap.IdentifiableContainer.deinit()
{
  id *v0;
  _QWORD *v1;

  v1 = *v0;

  (*(void (**)(char *))(*(_QWORD *)(v1[10] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 12));
  return v0;
}

uint64_t REMOrderedIdentifierMap.IdentifiableContainer.__deallocating_deinit()
{
  id *v0;
  _QWORD *v1;

  v1 = *v0;

  (*(void (**)(char *))(*(_QWORD *)(v1[10] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 12));
  return swift_deallocClassInstance();
}

uint64_t sub_1A44E5D44()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1A44E5D4C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for REMOrderedIdentifierMap.IdentifiableContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for REMOrderedIdentifierMap.IdentifiableContainer);
}

uint64_t method lookup function for REMOrderedIdentifierMap.IdentifiableContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMOrderedIdentifierMap.IdentifiableContainer.__allocating_init(remObjectID:nonIdentifiable:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t Result.eraseToCodableError()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[16];
  __int128 v8;
  uint64_t v9;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(_BYTE *))(v5 + 16))(&v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v8 = *(_OWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 32);
  sub_1A44E60C8();
  return sub_1A44E5F7C((void (*)(char *))sub_1A44E5F70, a1, a2);
}

void sub_1A44E5E98(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  v8 = sub_1A4691A04();
  if (v8)
  {
    v9 = (void *)v8;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a2);
  }
  else
  {
    v9 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10, v7, a2);
  }
  CodableError.init(_:)(v9, a3);
}

void sub_1A44E5F70(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1A44E5E98(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1A44E5F7C@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v10, v3, v7);
    a1(v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 32))(a3, v3, *(_QWORD *)(a2 + 16));
  }
  sub_1A4691D10();
  return swift_storeEnumTagMultiPayload();
}

unint64_t sub_1A44E60C8()
{
  unint64_t result;

  result = qword_1ED243028;
  if (!qword_1ED243028)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for CodableError, &type metadata for CodableError);
    atomic_store(result, (unint64_t *)&qword_1ED243028);
  }
  return result;
}

uint64_t Result.get(replacingErrorWith:failureDescription:log:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD v24[8];
  uint64_t v25;
  char *v26;
  uint64_t v27;

  v24[2] = a2;
  v24[3] = a4;
  v24[5] = a3;
  v24[7] = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EC88);
  MEMORY[0x1E0C80A78](v8);
  v25 = sub_1A4690318();
  v9 = MEMORY[0x1E0C80A78](v25);
  v26 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v24[1] = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v24[4] = (char *)v24 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v24 - v20;
  MEMORY[0x1E0C80A78](v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v13, v27, a5);
  v27 = a6;
  v24[6] = a5;
  return sub_1A44E65C0(a5, (uint64_t)v21, a6);
}

uint64_t sub_1A44E65C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 32))(a3, v3);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 32))(a2, v3, *(_QWORD *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t Result.zip<A>(_:)@<X0>(uint64_t a1@<X8>)
{
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED243A28);
  return sub_1A44E6940((void (*)(_BYTE *))sub_1A44E7B04, a1);
}

uint64_t sub_1A44E66D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a7;
  v36 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  v34[1] = a5;
  v35 = sub_1A4691D10();
  v34[0] = *(_QWORD *)(v35 - 8);
  v14 = MEMORY[0x1E0C80A78](v35);
  v16 = (char *)v34 - v15;
  v17 = *(_QWORD *)(a4 - 8);
  v18 = MEMORY[0x1E0C80A78](v14);
  v20 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v34 - v21;
  v37 = a3;
  v38 = a6;
  v23 = sub_1A4691D10();
  MEMORY[0x1E0C80A78](v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))((char *)v34 - v25, a1, v23);
  v26 = v40;
  sub_1A44E65C0(v23, (uint64_t)v22, a8);
  if (v26)
  {
    v27 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v27(v20, v22, a4);
    v28 = sub_1A4691A04();
    if (v28)
    {
      v29 = v28;
      result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, a4);
    }
    else
    {
      v29 = swift_allocError();
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v27)(v33, v20, a4);
    }
    *v39 = v29;
  }
  else
  {
    v31 = a8 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    v32 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v34[0] + 16))(v16, v36, v35);
    return sub_1A44E65C0(v32, (uint64_t)&v41, v31);
  }
  return result;
}

uint64_t sub_1A44E6940@<X0>(void (*a1)(_BYTE *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  MEMORY[0x1E0C80A78](a1);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1A4691D10();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v11[-v8];
  a1(v5);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(a2, v9, v6);
}

uint64_t Result.valueOrNil()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[16];

  v4 = MEMORY[0x1E0C80A78](a1);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(_BYTE *))(v8 + 16))(&v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  sub_1A44E65C0(a1, (uint64_t)v6, a2);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 56))(a2, 0, 1);
}

uint64_t Result.failureOrNil()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, char *, _QWORD))(v9 + 32))(a2, v6, *(_QWORD *)(a1 + 24));
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v9 + 56))(a2, 1, 1, *(_QWORD *)(a1 + 24));
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }
}

uint64_t Result<>.tryMap<A>(transform:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_1A44E6C84((void (*)(char *))sub_1A44E7B28, a1, a2);
}

uint64_t sub_1A44E6C84@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, char *, _QWORD))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 32))(a3, v12, *(_QWORD *)(a2 + 24));
    sub_1A4691D10();
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    a1(v10);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

uint64_t sub_1A44E6DD0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x54746E65746E6F63 && a2 == 0xEB00000000657079;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A44E6ED8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x64616F6C796170;
  else
    return 0x54746E65746E6F63;
}

uint64_t sub_1A44E6F18(uint64_t a1)
{
  unsigned int v1;

  if (a1 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (a1)
    return v1;
  else
    return 0;
}

uint64_t sub_1A44E6F30(char a1)
{
  return a1 & 1;
}

BOOL sub_1A44E6F38(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A44D991C(*a1, *a2);
}

uint64_t sub_1A44E6F60()
{
  return sub_1A44D9950();
}

uint64_t sub_1A44E6F68()
{
  return sub_1A44D992C();
}

uint64_t sub_1A44E6F88()
{
  sub_1A4691C8C();
  sub_1A44D992C();
  return sub_1A4691CC8();
}

uint64_t sub_1A44E6FC4()
{
  char *v0;

  return sub_1A44E6ED8(*v0);
}

uint64_t sub_1A44E6FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A44E6DD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A44E6FF8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A44373D8();
  *a1 = result;
  return result;
}

uint64_t sub_1A44E7030(uint64_t a1)
{
  MEMORY[0x1A85A0000](&unk_1A469B8C0, a1);
  return sub_1A4691DB8();
}

uint64_t sub_1A44E7064(uint64_t a1)
{
  MEMORY[0x1A85A0000](&unk_1A469B8C0, a1);
  return sub_1A4691DC4();
}

uint64_t sub_1A44E7098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85A0000](&unk_1A469B7D0, a3);
  return sub_1A4691A7C();
}

uint64_t sub_1A44E70EC(uint64_t a1)
{
  MEMORY[0x1A85A0000](&unk_1A469B7D0, a1);
  return sub_1A4690B4C();
}

uint64_t sub_1A44E7138()
{
  MEMORY[0x1A85A0000](&unk_1A469B7D0);
  return sub_1A4690B64();
}

uint64_t sub_1A44E7188()
{
  MEMORY[0x1A85A0000](&unk_1A469B7D0);
  return sub_1A4690B58();
}

uint64_t sub_1A44E71D8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1A44E6F18(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1A44E7200@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;

  result = sub_1A44E6F30(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1A44E7228()
{
  MEMORY[0x1A85A0000](&unk_1A469B7D0);
  return sub_1A4690B7C();
}

uint64_t sub_1A44E728C()
{
  MEMORY[0x1A85A0000](&unk_1A469B7D0);
  return sub_1A4690B40();
}

void Result<>.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[26];

  v14[5] = a3;
  v14[3] = *(_QWORD *)(a2 - 8);
  v3 = MEMORY[0x1E0C80A78](a1);
  v14[6] = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[4] = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v3);
  v14[7] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[18] = v7;
  v14[19] = v8;
  v14[13] = v9;
  v14[14] = v10;
  v14[20] = v9;
  v14[21] = v11;
  v14[10] = v11;
  v14[11] = v12;
  v14[22] = v10;
  v14[23] = v12;
  v14[24] = v13;
  _s10CodingKeysOMa_0();
}

uint64_t sub_1A44E73A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  MEMORY[0x1A85A0000](&unk_1A469B8C0, a1);
  v6 = sub_1A46917E8();
  *(_QWORD *)(v5 - 224) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 - 216) = v6;
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)(v5 - 168) = v1;
  *(_QWORD *)(v5 - 160) = v2;
  *(_QWORD *)(v5 - 192) = v3;
  v7 = sub_1A4691D10();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - v9;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  v11 = *(_QWORD *)(v5 - 152);
  sub_1A4691D28();
  if (!v11)
  {
    *(_QWORD *)(v5 - 280) = v10;
    *(_QWORD *)(v5 - 272) = v8;
    v13 = *(_QWORD *)(v5 - 168);
    v12 = *(_QWORD *)(v5 - 160);
    *(_QWORD *)(v5 - 152) = v7;
    *(_QWORD *)(v5 - 144) = v12;
    v15 = *(_QWORD *)(v5 - 184);
    v14 = *(_QWORD *)(v5 - 176);
    *(_QWORD *)(v5 - 136) = v13;
    *(_QWORD *)(v5 - 128) = v15;
    *(_QWORD *)(v5 - 120) = *(_QWORD *)(v5 - 208);
    *(_QWORD *)(v5 - 112) = v14;
    v16 = *(_QWORD *)(v5 - 192);
    *(_QWORD *)(v5 - 104) = *(_QWORD *)(v5 - 200);
    *(_QWORD *)(v5 - 96) = v16;
    _s11ContentTypeOMa();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

void Result<>.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[24];

  v15[1] = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v2 = MEMORY[0x1E0C80A78](a1);
  v15[3] = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(_QWORD *)(*(_QWORD *)(v4 + 16) - 8);
  v5 = MEMORY[0x1E0C80A78](v2);
  v15[2] = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = *(_QWORD *)(v7 + 32);
  v15[8] = v9;
  v15[9] = v10;
  v15[16] = v10;
  v15[17] = v11;
  v15[11] = v11;
  v15[5] = v12;
  v15[6] = v13;
  v15[18] = v12;
  v15[19] = v14;
  v15[7] = v14;
  v15[20] = v13;
  v15[21] = v9;
  v15[4] = v8;
  v15[22] = v8;
  _s10CodingKeysOMa_0();
}

void sub_1A44E7790(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  MEMORY[0x1A85A0000](&unk_1A469B8C0, a1);
  v6 = sub_1A46918A8();
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 - 168) = v6;
  *(_QWORD *)(v5 - 160) = v7;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - v8;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_QWORD *)(v5 - 176) = v9;
  sub_1A4691D40();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v1, *(_QWORD *)(v5 - 152), v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = *(_QWORD *)(v5 - 184);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 264) + 32))(*(_QWORD *)(v5 - 248), v1, v10);
    *(_BYTE *)(v5 - 65) = 1;
    *(_BYTE *)(v5 - 66) = 0;
    v11 = *(_QWORD *)(v5 - 208);
    *(_QWORD *)(v5 - 144) = *(_QWORD *)(v5 - 200);
    *(_QWORD *)(v5 - 136) = v10;
    v12 = *(_QWORD *)(v5 - 216);
    *(_QWORD *)(v5 - 128) = *(_QWORD *)(v5 - 232);
    *(_QWORD *)(v5 - 120) = v12;
    *(_QWORD *)(v5 - 112) = *(_QWORD *)(v5 - 224);
    *(_QWORD *)(v5 - 104) = v11;
    *(_QWORD *)(v5 - 96) = *(_QWORD *)(v5 - 240);
    _s11ContentTypeOMa();
  }
  v13 = *(_QWORD *)(v5 - 200);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 272) + 32))(*(_QWORD *)(v5 - 256), v1, v13);
  *(_WORD *)(v5 - 66) = 0;
  v14 = *(_QWORD *)(v5 - 184);
  *(_QWORD *)(v5 - 144) = v13;
  *(_QWORD *)(v5 - 136) = v14;
  v15 = *(_QWORD *)(v5 - 216);
  *(_QWORD *)(v5 - 128) = *(_QWORD *)(v5 - 232);
  *(_QWORD *)(v5 - 120) = v15;
  v16 = *(_QWORD *)(v5 - 208);
  *(_QWORD *)(v5 - 112) = *(_QWORD *)(v5 - 224);
  *(_QWORD *)(v5 - 104) = v16;
  *(_QWORD *)(v5 - 96) = *(_QWORD *)(v5 - 240);
  _s11ContentTypeOMa();
}

void sub_1A44E7984(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  MEMORY[0x1A85A0000](&unk_1A469B870, a1);
  v5 = *(_QWORD *)(v4 - 192);
  sub_1A4691890();
  if (!v5)
  {
    *(_BYTE *)(v4 - 144) = 1;
    sub_1A4691890();
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  JUMPOUT(0x1A44E7A0CLL);
}

void sub_1A44E7A34(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  Result<>.init(from:)(a1, *(_QWORD *)(a2 + 24), a3);
}

void sub_1A44E7A5C(uint64_t a1, uint64_t a2)
{
  Result<>.encode(to:)(a1, a2);
}

uint64_t sub_1A44E7A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EC88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A44E7AC4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EC88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A44E7B04@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1A44E66D4(v2[6], v2[7], v2[2], v2[3], v2[4], v2[5], a1, a2);
}

uint64_t sub_1A44E7B28@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED243A28);
  return sub_1A44E6940((void (*)(_BYTE *))sub_1A44E7CBC, a1);
}

void _s10CodingKeysOMa_0()
{
  JUMPOUT(0x1A859FF40);
}

void _s11ContentTypeOMa()
{
  JUMPOUT(0x1A859FF40);
}

uint64_t sub_1A44E7BB4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A44E7BC0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A44E7C0C + 4 * byte_1A469B615[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A44E7C40 + 4 * byte_1A469B610[v4]))();
}

uint64_t sub_1A44E7C40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44E7C48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A44E7C50);
  return result;
}

uint64_t sub_1A44E7C5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A44E7C64);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A44E7C68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44E7C70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1A44E7C7C()
{
  JUMPOUT(0x1A85A0000);
}

void sub_1A44E7C8C()
{
  JUMPOUT(0x1A85A0000);
}

void sub_1A44E7C9C()
{
  JUMPOUT(0x1A85A0000);
}

void sub_1A44E7CAC()
{
  JUMPOUT(0x1A85A0000);
}

uint64_t sub_1A44E7CBC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD))(v1 + 32))(*(_QWORD *)(v1 + 48));
  if (v2)
    *a1 = v2;
  return result;
}

uint64_t REMTemplate.publicLinkStatus.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void (*v16)(char *, char *, uint64_t);
  id v17;
  uint64_t v18;
  id v19;
  void (*v20)(char *, uint64_t);
  uint64_t result;
  char v22;
  uint64_t v23;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A46900B4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v23 - v12;
  v14 = objc_msgSend(v2, sel_mostRecentPublicLinkUpdateRequestDate);
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_6;
  }
  v15 = v14;
  sub_1A4690084();

  v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v6, v11, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_6:
    result = sub_1A449C92C((uint64_t)v6);
    v18 = 0;
    v22 = 0;
    goto LABEL_7;
  }
  v16(v13, v6, v7);
  v17 = objc_msgSend(v2, sel_publicLink);
  if (v17)
  {
    v18 = (uint64_t)v17;
    v19 = objc_msgSend(v17, sel_lastModifiedDate);
    sub_1A4690084();

    LOBYTE(v19) = sub_1A469003C();
    v20 = *(void (**)(char *, uint64_t))(v8 + 8);
    v20(v11, v7);
    result = ((uint64_t (*)(char *, uint64_t))v20)(v13, v7);
    v22 = v19 & 1;
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v22 = 0;
    v18 = 1;
  }
LABEL_7:
  *(_QWORD *)a1 = v18;
  *(_BYTE *)(a1 + 8) = v22;
  return result;
}

uint64_t _sSo11REMTemplateC19ReminderKitInternalE16PublicLinkStatusO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  char v3;
  id v4;
  char v5;
  char v6;
  char v7;

  v2 = *(void **)a1;
  v3 = *(_BYTE *)(a1 + 8);
  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  if (!*(_QWORD *)a1)
  {
    if (!v4)
    {
      sub_1A44E829C(0);
      sub_1A44E829C(0);
      v6 = 1;
      return v6 & 1;
    }
    goto LABEL_8;
  }
  if (v2 == (void *)1)
  {
    if (v4 == (id)1)
    {
      v6 = 1;
      sub_1A44E829C((id)1);
      sub_1A44E829C((id)1);
      return v6 & 1;
    }
LABEL_8:
    sub_1A44E828C(*(id *)a2);
    sub_1A44E828C(v2);
    sub_1A44E829C(v2);
    sub_1A44E829C(v4);
    v6 = 0;
    return v6 & 1;
  }
  if ((unint64_t)v4 < 2)
    goto LABEL_8;
  sub_1A44E82AC();
  sub_1A44E828C(v4);
  sub_1A44E828C(v2);
  v7 = sub_1A4691140();
  sub_1A44E829C(v2);
  sub_1A44E829C(v4);
  if ((v7 & 1) != 0)
    v6 = ((v3 & 1) == 0) ^ v5;
  else
    v6 = 0;
  return v6 & 1;
}

uint64_t _s16PublicLinkStatusOwCP(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  }
  else
  {
    *(_QWORD *)a1 = v3;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v4 = v3;
  }
  return a1;
}

void _s16PublicLinkStatusOwxx(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

uint64_t _s16PublicLinkStatusOwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = v5;
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v7 = v5;
      return a1;
    }
LABEL_7:
    v8 = *(void **)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    *(_QWORD *)a1 = v8;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    goto LABEL_7;
  }
  *(_QWORD *)a1 = v5;
  v6 = v5;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t _s16PublicLinkStatusOwta(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {

LABEL_5:
    *(_QWORD *)a1 = *(_QWORD *)a2;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;

LABEL_6:
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t _s16PublicLinkStatusOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 9))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t _s16PublicLinkStatusOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_1A44E825C(uint64_t result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    *(_BYTE *)(result + 8) = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for REMTemplate.PublicLinkStatus()
{
  return &type metadata for REMTemplate.PublicLinkStatus;
}

id sub_1A44E828C(id result)
{
  if ((unint64_t)result >= 2)
    return result;
  return result;
}

void sub_1A44E829C(id a1)
{
  if ((unint64_t)a1 >= 2)

}

unint64_t sub_1A44E82AC()
{
  unint64_t result;

  result = qword_1ED2439F0;
  if (!qword_1ED2439F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2439F0);
  }
  return result;
}

uint64_t Collection<>.contains(hashtagOfType:)()
{
  return sub_1A4690B04() & 1;
}

BOOL sub_1A44E8334(id *a1)
{
  uint64_t v1;
  id v2;

  v2 = *(id *)(v1 + 16);
  return objc_msgSend(*a1, sel_type) == v2;
}

uint64_t sub_1A44E8370(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  id v13;
  char v14;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_1A46916A4())
  {
    v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v5 = (id)MEMORY[0x1A859ECE0](0, a2);
LABEL_5:
      v6 = v5;
      type metadata accessor for REMObjectID_Codable();
      v7 = sub_1A4691140();

      if ((v7 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1)
        goto LABEL_18;
      if (v4)
        break;
      v4 = 5;
      while (1)
      {
        v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        v13 = *(id *)(a2 + 8 * v4);
        v14 = sub_1A4691140();

        if ((v14 & 1) != 0)
          goto LABEL_6;
        ++v4;
        if (v12 == v3)
          goto LABEL_18;
      }
      __break(1u);
    }
    v9 = 1;
    while (1)
    {
      MEMORY[0x1A859ECE0](v9, a2);
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v11 = sub_1A4691140();
      swift_unknownObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_6;
      ++v9;
      if (v10 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A44E84E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE71EC90);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE71EC90);
  if (qword_1ED244120 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2568D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

BOOL static REMCustomSmartListFilterDescriptor.Operation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t REMCustomSmartListFilterDescriptor.Operation.hash(into:)()
{
  return sub_1A4691C98();
}

uint64_t REMCustomSmartListFilterDescriptor.Operation.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t REMCustomSmartListFilterDescriptor.FilterHashtags.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  if (*v0 && v1 != 1)
  {
    v2 = v0[1];
    sub_1A4691C98();
    sub_1A4691C98();
    v3 = *(_QWORD *)(v1 + 16);
    if (v3)
    {
      v4 = v1 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1A4690948();
        swift_bridgeObjectRelease();
        v4 += 16;
        --v3;
      }
      while (v3);
    }
    sub_1A4691C98();
    v5 = *(_QWORD *)(v2 + 16);
    if (v5)
    {
      v6 = v2 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1A4690948();
        swift_bridgeObjectRelease();
        v6 += 16;
        --v5;
      }
      while (v5);
    }
  }
  return sub_1A4691C98();
}

uint64_t REMCustomSmartListFilterDescriptor.FilterHashtags.hashValue.getter()
{
  sub_1A4691C8C();
  REMCustomSmartListFilterDescriptor.FilterHashtags.hash(into:)();
  return sub_1A4691CC8();
}

uint64_t sub_1A44E8744()
{
  sub_1A4691C8C();
  REMCustomSmartListFilterDescriptor.FilterHashtags.hash(into:)();
  return sub_1A4691CC8();
}

uint64_t sub_1A44E8798()
{
  sub_1A4691C8C();
  REMCustomSmartListFilterDescriptor.FilterHashtags.hash(into:)();
  return sub_1A4691CC8();
}

ReminderKitInternal::REMCustomSmartListFilterDescriptor::FilterDate::RelativeRange::Direction_optional __swiftcall REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (ReminderKitInternal::REMCustomSmartListFilterDescriptor::FilterDate::RelativeRange::Direction_optional)rawValue;
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

_QWORD *sub_1A44E880C@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_1A44E882C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

ReminderKitInternal::REMCustomSmartListFilterDescriptor::FilterDate::RelativeRange::Units_optional __swiftcall REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)rawValue < 5)
    v2 = rawValue;
  *v1 = v2;
  return (ReminderKitInternal::REMCustomSmartListFilterDescriptor::FilterDate::RelativeRange::Units_optional)rawValue;
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

ReminderKitInternal::REMCustomSmartListFilterDescriptor::FilterDate::RelativeRange::Units_optional sub_1A44E8854(Swift::Int *a1)
{
  return REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.init(rawValue:)(*a1);
}

void REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.direction.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.magnitude.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

void REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.units.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.includePastDue.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

ReminderKitInternal::REMCustomSmartListFilterDescriptor::FilterDate::RelativeRange __swiftcall REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.init(direction:magnitude:units:includePastDue:)(ReminderKitInternal::REMCustomSmartListFilterDescriptor::FilterDate::RelativeRange::Direction direction, Swift::Int magnitude, ReminderKitInternal::REMCustomSmartListFilterDescriptor::FilterDate::RelativeRange::Units units, Swift::Bool includePastDue)
{
  uint64_t v4;
  char v5;
  ReminderKitInternal::REMCustomSmartListFilterDescriptor::FilterDate::RelativeRange result;

  v5 = *(_BYTE *)units;
  *(_BYTE *)v4 = *(_BYTE *)direction;
  *(_QWORD *)(v4 + 8) = magnitude;
  *(_BYTE *)(v4 + 16) = v5;
  *(_BYTE *)(v4 + 17) = includePastDue;
  result.magnitude = magnitude;
  result.units = units;
  result.direction = direction;
  return result;
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.hash(into:)()
{
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691C98();
  return sub_1A4691CA4();
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691CA4();
  return sub_1A4691CC8();
}

uint64_t sub_1A44E8984()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691CA4();
  return sub_1A4691CC8();
}

uint64_t sub_1A44E8A08()
{
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691C98();
  return sub_1A4691CA4();
}

uint64_t sub_1A44E8A64()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691CA4();
  return sub_1A4691CC8();
}

void REMCustomSmartListFilterDescriptor.FilterDate.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = sub_1A46900B4();
  MEMORY[0x1E0C80A78](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  MEMORY[0x1E0C80A78](v3);
  sub_1A4497EE8(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_1A44E8BF0 + 4 * byte_1A469B960[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A44E8BF0()
{
  sub_1A4691C98();
  return sub_1A4691CA4();
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.hashValue.getter()
{
  return sub_1A44EC704((void (*)(_BYTE *))REMCustomSmartListFilterDescriptor.FilterDate.hash(into:));
}

uint64_t sub_1A44E8DAC(uint64_t a1, uint64_t a2)
{
  return sub_1A44EC750(a1, a2, (void (*)(_BYTE *))REMCustomSmartListFilterDescriptor.FilterDate.hash(into:));
}

uint64_t sub_1A44E8DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44EC7A0(a1, a2, a3, (void (*)(_BYTE *))REMCustomSmartListFilterDescriptor.FilterDate.hash(into:));
}

uint64_t REMCustomSmartListFilterDescriptor.FilterTime.matches(_:)(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  int v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v28 = sub_1A4690294();
  v3 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1A46902AC();
  v6 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A46900B4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ECC8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *v1;
  v18 = (uint64_t)&v16[*(int *)(v14 + 48)];
  *v16 = v17;
  sub_1A4497EE8(a1, v18, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime.DateType);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v18, 1, v9);
  if (v17 == 5)
  {
    if ((_DWORD)result != 1)
    {
      sub_1A4497F2C(v18, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime.DateType);
      return 0;
    }
  }
  else if ((_DWORD)result == 1)
  {
    return 0;
  }
  else if (v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, v18, v9);
    sub_1A469027C();
    v20 = v28;
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CB1140], v28);
    v26 = sub_1A46902A0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v27);
    v30 = v17;
    sub_1A44E9044();
    v22 = v21;
    v29 = v17;
    sub_1A44E90D0();
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if (v22 >= v24)
      return v26 >= v22 || v26 < v24;
    else
      return v26 >= v22 && v26 < v24;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v18, v9);
    return 1;
  }
  return result;
}

void sub_1A44E9044()
{
  __asm { BR              X9 }
}

void sub_1A44E9070()
{
  REMTimeOfDay.startHour.getter();
}

void sub_1A44E90D0()
{
  __asm { BR              X10 }
}

void sub_1A44E9100()
{
  REMTimeOfDay.endHour.getter();
}

uint64_t REMCustomSmartListFilterDescriptor.FilterTime.matches(_:)(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  char v10;
  _BYTE v12[16];

  v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime.DateType(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *v1;
  if (objc_msgSend(a1, sel_isAllDay))
  {
    v12[14] = v6;
    v7 = sub_1A46900B4();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  }
  else
  {
    v12[15] = v6;
    v8 = objc_msgSend(a1, sel_date);
    sub_1A4690084();

    v9 = sub_1A46900B4();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 0, 1, v9);
  }
  v10 = REMCustomSmartListFilterDescriptor.FilterTime.matches(_:)((uint64_t)v5);
  sub_1A4497F2C((uint64_t)v5, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime.DateType);
  return v10 & 1;
}

uint64_t REMCustomSmartListFilterDescriptor.FilterTime.hash(into:)()
{
  return sub_1A4691C98();
}

BOOL static REMCustomSmartListFilterDescriptor.FilterTime.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t REMCustomSmartListFilterDescriptor.FilterTime.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

BOOL REMCustomSmartListFilterDescriptor.FilterLocation.matches(_:)(void *a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  unint64_t v5;
  double v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;

  if (!*(_BYTE *)(v1 + 48))
    return 0;
  v2 = *(double *)(v1 + 16);
  v3 = *(double *)(v1 + 24);
  v4 = *(double *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  if (*(_BYTE *)(v1 + 48) == 1)
  {
    if (objc_msgSend(a1, sel_proximity) == (id)v5)
    {
      v7 = v2;
      v8 = objc_allocWithZone(MEMORY[0x1E0C9E368]);
      v9 = (void *)sub_1A469087C();
      v10 = objc_msgSend(v8, sel_initWithCenter_radius_identifier_, v9, v7, v3, v4);

      v11 = objc_msgSend(a1, sel_structuredLocation);
      v12 = REMStructuredLocation.clCircularRegion.getter();

      LOBYTE(v11) = CLCircularRegion.overlaps(_:)((CLCircularRegion)v10);
      return v11 & 1;
    }
    return 0;
  }
  return (*(_QWORD *)(v1 + 8) | *(_QWORD *)v1 | *(_QWORD *)&v2 | *(_QWORD *)&v3 | *(_QWORD *)&v4 | v5) == 0;
}

{
  int8x16_t *v1;
  unint64_t v2;
  int8x16_t v5;

  v2 = v1->i64[0];
  if (v1[3].i8[0])
  {
    if (v1[3].i8[0] == 1)
      return 0;
    v5 = vorrq_s8(v1[1], v1[2]);
    return (*(_QWORD *)&vorr_s8(*(int8x8_t *)v5.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v5, v5, 8uLL)) | v1->i64[1] | v2) == 0;
  }
  else
  {
    return objc_msgSend(a1, sel_event) == (id)v2;
  }
}

Swift::Bool __swiftcall REMCustomSmartListFilterDescriptor.FilterLocation.matches(_:)(Swift::OpaquePointer_optional a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  int v4;
  unint64_t rawValue;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  double v36;
  uint64_t v37;
  double v38;
  double v39;
  unint64_t v40;
  unint64_t v41;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(double *)(v1 + 16);
  v38 = *(double *)(v1 + 32);
  v39 = *(double *)(v1 + 24);
  v40 = *(_QWORD *)(v1 + 40);
  v41 = *(_QWORD *)v1;
  v4 = *(unsigned __int8 *)(v1 + 48);
  if (!a1.value._rawValue)
  {
    v12 = 0;
    v13 = 0;
    if (v4)
      goto LABEL_38;
LABEL_11:
    if (v12)
    {
      v14 = objc_msgSend(v12, sel_event);

      return v14 == (id)v41;
    }
    goto LABEL_45;
  }
  rawValue = (unint64_t)a1.value._rawValue;
  v37 = *(_QWORD *)(v1 + 8);
  v6 = (uint64_t)a1.value._rawValue & 0xFFFFFFFFFFFFFF8;
  v7 = (unint64_t)a1.value._rawValue >> 62;
  if ((unint64_t)a1.value._rawValue >> 62)
    goto LABEL_59;
  v8 = *(_QWORD *)(((uint64_t)a1.value._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v8)
    goto LABEL_60;
  while (1)
  {
    v36 = v3;
    if ((rawValue & 0xC000000000000001) == 0)
      break;
    v9 = 0;
    v3 = COERCE_DOUBLE(0x1E0D84000uLL);
    while (1)
    {
      MEMORY[0x1A859ECE0](v9, rawValue);
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      objc_opt_self();
      v11 = swift_dynamicCastObjCClass();
      if (v11)
      {
        v13 = (void *)v11;
        goto LABEL_20;
      }
      swift_unknownObjectRelease();
      ++v9;
      if (v10 == v8)
        goto LABEL_17;
    }
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    while (1)
    {
      __break(1u);
LABEL_59:
      swift_bridgeObjectRetain_n();
      v8 = sub_1A46916A4();
      if (v8)
        break;
LABEL_60:
      swift_bridgeObjectRelease_n();
      v13 = 0;
      if (!v7)
        goto LABEL_22;
LABEL_61:
      swift_bridgeObjectRetain_n();
      v21 = sub_1A46916A4();
      if (!v21)
        goto LABEL_33;
LABEL_23:
      if ((rawValue & 0xC000000000000001) != 0)
      {
        v22 = 0;
        v7 = 0x1E0D84000uLL;
        while (1)
        {
          v23 = MEMORY[0x1A859ECE0](v22, rawValue);
          v24 = v22 + 1;
          if (__OFADD__(v22, 1))
            goto LABEL_56;
          v6 = v23;
          objc_opt_self();
          v25 = swift_dynamicCastObjCClass();
          if (v25)
          {
            v12 = (void *)v25;
            goto LABEL_36;
          }
          swift_unknownObjectRelease();
          ++v22;
          if (v24 == v21)
            goto LABEL_33;
        }
      }
      v6 = 0;
      v7 = 0x1E0D84000uLL;
      while (1)
      {
        v26 = v6 + 1;
        if (__OFADD__(v6, 1))
          break;
        v27 = *(void **)(rawValue + 8 * v6 + 32);
        objc_opt_self();
        v28 = swift_dynamicCastObjCClass();
        if (v28)
        {
          v12 = (void *)v28;
          v29 = v27;
LABEL_36:
          swift_bridgeObjectRelease_n();
          goto LABEL_37;
        }
        ++v6;
        if (v26 == v21)
          goto LABEL_33;
      }
    }
  }
  v16 = 0;
  v3 = COERCE_DOUBLE(0x1E0D84000uLL);
  while (1)
  {
    v17 = v16 + 1;
    if (__OFADD__(v16, 1))
      goto LABEL_57;
    v18 = *(void **)(rawValue + 8 * v16 + 32);
    objc_opt_self();
    v19 = swift_dynamicCastObjCClass();
    if (v19)
      break;
    ++v16;
    if (v17 == v8)
    {
LABEL_17:
      swift_bridgeObjectRelease_n();
      v13 = 0;
      goto LABEL_21;
    }
  }
  v13 = (void *)v19;
  v20 = v18;
LABEL_20:
  swift_bridgeObjectRelease_n();
LABEL_21:
  v3 = v36;
  if (v7)
    goto LABEL_61;
LABEL_22:
  v21 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRetain_n();
  if (v21)
    goto LABEL_23;
LABEL_33:
  swift_bridgeObjectRelease_n();
  v12 = 0;
LABEL_37:
  v2 = v37;
  if (!v4)
    goto LABEL_11;
LABEL_38:
  if (v4 == 1)
  {
    if (v13)
    {
      v30 = v13;
      if (objc_msgSend(v30, sel_proximity) == (id)v40)
      {
        v31 = objc_allocWithZone(MEMORY[0x1E0C9E368]);
        v32 = (void *)sub_1A469087C();
        v33 = objc_msgSend(v31, sel_initWithCenter_radius_identifier_, v32, v3, v39, v38);

        v34 = objc_msgSend(v30, sel_structuredLocation);
        v35 = REMStructuredLocation.clCircularRegion.getter();

        LOBYTE(v34) = CLCircularRegion.overlaps(_:)((CLCircularRegion)v33);
        return v34 & 1;
      }

    }
    goto LABEL_50;
  }
  if (*(_QWORD *)&v3 | v2 | v41 | *(_QWORD *)&v39 | *(_QWORD *)&v38 | v40)
  {
    if (v13)
    {

LABEL_45:
      return 0;
    }
    if (v12)
    {
LABEL_50:

      return 0;
    }
  }
  else if (v13)
  {

  }
  else
  {
    if (!v12)
      return 0;

  }
  return 1;
}

uint64_t REMCustomSmartListFilterDescriptor.FilterLocation.hash(into:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 48))
  {
    if (*(_BYTE *)(v0 + 48) == 1)
    {
      sub_1A4691C98();
      sub_1A4690948();
      sub_1A4691CBC();
      sub_1A4691CBC();
      sub_1A4691CBC();
    }
  }
  else
  {
    sub_1A4691C98();
  }
  return sub_1A4691C98();
}

uint64_t REMCustomSmartListFilterDescriptor.FilterLocation.hashValue.getter()
{
  sub_1A4691C8C();
  REMCustomSmartListFilterDescriptor.FilterLocation.hash(into:)();
  return sub_1A4691CC8();
}

uint64_t sub_1A44E99FC()
{
  sub_1A4691C8C();
  REMCustomSmartListFilterDescriptor.FilterLocation.hash(into:)();
  return sub_1A4691CC8();
}

uint64_t sub_1A44E9A58()
{
  sub_1A4691C8C();
  REMCustomSmartListFilterDescriptor.FilterLocation.hash(into:)();
  return sub_1A4691CC8();
}

uint64_t static REMCustomSmartListFilterDescriptor.FilterLists.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_1A44648E8(*a1, *a2) & 1) != 0)
    return sub_1A44648E8(v2, v3);
  else
    return 0;
}

void REMCustomSmartListFilterDescriptor.FilterLists.hash(into:)(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  unint64_t v4;

  v3 = *v1;
  v4 = v1[1];
  sub_1A4691C98();
  sub_1A44F1DB0(a1, v3);
  sub_1A44F1DB0(a1, v4);
}

uint64_t REMCustomSmartListFilterDescriptor.FilterLists.hashValue.getter()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  v2 = v0[1];
  sub_1A4691C8C();
  sub_1A4691C98();
  sub_1A44F1DB0((uint64_t)v4, v1);
  sub_1A44F1DB0((uint64_t)v4, v2);
  return sub_1A4691CC8();
}

uint64_t sub_1A44E9BA4(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_1A44648E8(*a1, *a2) & 1) != 0)
    return sub_1A44648E8(v2, v3);
  else
    return 0;
}

uint64_t sub_1A44E9BEC()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  v2 = v0[1];
  sub_1A4691C8C();
  sub_1A4691C98();
  sub_1A44F1DB0((uint64_t)v4, v1);
  sub_1A44F1DB0((uint64_t)v4, v2);
  return sub_1A4691CC8();
}

void sub_1A44E9C50(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  unint64_t v4;

  v3 = *v1;
  v4 = v1[1];
  sub_1A4691C98();
  sub_1A44F1DB0(a1, v3);
  sub_1A44F1DB0(a1, v4);
}

uint64_t sub_1A44E9C98()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  v2 = v0[1];
  sub_1A4691C8C();
  sub_1A4691C98();
  sub_1A44F1DB0((uint64_t)v4, v1);
  sub_1A44F1DB0((uint64_t)v4, v2);
  return sub_1A4691CC8();
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicateType.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

ReminderKitInternal::REMCustomSmartListFilterDescriptor::PostFetchPredicateType __swiftcall REMCustomSmartListFilterDescriptor.PostFetchPredicateType.init(rawValue:)(ReminderKitInternal::REMCustomSmartListFilterDescriptor::PostFetchPredicateType rawValue)
{
  ReminderKitInternal::REMCustomSmartListFilterDescriptor::PostFetchPredicateType *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.hashtags.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.date.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.partOfDay.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.priorities.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.flagged.getter(_QWORD *a1@<X8>)
{
  *a1 = 16;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.location.getter(_QWORD *a1@<X8>)
{
  *a1 = 32;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.lists.getter(_QWORD *a1@<X8>)
{
  *a1 = 64;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.completed.getter(_QWORD *a1@<X8>)
{
  *a1 = 128;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.account.getter(_QWORD *a1@<X8>)
{
  *a1 = 256;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.and.getter(_QWORD *a1@<X8>)
{
  *a1 = 512;
}

void static REMCustomSmartListFilterDescriptor.PostFetchPredicateType.or.getter(_QWORD *a1@<X8>)
{
  *a1 = 1024;
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicateType.description.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EAA0);
  v1 = sub_1A46908E8();
  sub_1A4690984();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  return v1;
}

void REMCustomSmartListFilterDescriptor.PostFetchPredicate.MatchingObjects.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)v1;
  if (*(_BYTE *)(v1 + 8) && *(_BYTE *)(v1 + 8) != 1)
  {
    sub_1A4691C98();
  }
  else
  {
    sub_1A4691C98();
    sub_1A44D5C48(a1, v3);
  }
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.MatchingObjects.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  sub_1A4691C8C();
  sub_1A4691C98();
  if (v2 <= 1)
    sub_1A44D5C48((uint64_t)v4, v1);
  return sub_1A4691CC8();
}

uint64_t sub_1A44EA074()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  sub_1A4691C8C();
  sub_1A4691C98();
  if (v2 <= 1)
    sub_1A44D5C48((uint64_t)v4, v1);
  return sub_1A4691CC8();
}

void sub_1A44EA0F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)v1;
  if (*(_BYTE *)(v1 + 8) && *(_BYTE *)(v1 + 8) != 1)
  {
    sub_1A4691C98();
  }
  else
  {
    sub_1A4691C98();
    sub_1A44D5C48(a1, v3);
  }
}

uint64_t sub_1A44EA160()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  sub_1A4691C8C();
  sub_1A4691C98();
  if (v2 <= 1)
    sub_1A44D5C48((uint64_t)v4, v1);
  return sub_1A4691CC8();
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A444ABF4(v1, a1, &qword_1ED243170);
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.listIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A44EFFE8(type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder, &qword_1ED243170, a1);
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.accountIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0);
  return sub_1A444ABF4(v1 + *(int *)(v3 + 24), a1, &qword_1ED243170);
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.displayDateDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0);
  return sub_1A444ABF4(v1 + *(int *)(v3 + 28), a1, &qword_1ED243190);
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.displayDateIsAllDay.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0)
                                     + 32));
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.alarmTriggers.getter()
{
  type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0);
  return swift_bridgeObjectRetain();
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.priority.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0
                   + *(int *)(type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0)
                            + 40));
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.flagged.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0)
                                     + 44));
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.completed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0)
                                     + 48));
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.init(identifier:listIdentifier:accountIdentifier:displayDateDate:displayDateIsAllDay:alarmTriggers:priority:flagged:completed:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, char a10, char a11)
{
  int *v17;
  uint64_t result;
  uint64_t v19;

  sub_1A44C6CC8(a1, a9, &qword_1ED243170);
  v17 = (int *)type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0);
  sub_1A44C6CC8(a2, a9 + v17[5], &qword_1ED243170);
  sub_1A44C6CC8(a3, a9 + v17[6], &qword_1ED243170);
  result = sub_1A44C6CC8(a4, a9 + v17[7], &qword_1ED243190);
  *(_BYTE *)(a9 + v17[8]) = a5;
  *(_QWORD *)(a9 + v17[9]) = a6;
  v19 = a9 + v17[10];
  *(_QWORD *)v19 = a7;
  *(_BYTE *)(v19 + 8) = a8 & 1;
  *(_BYTE *)(a9 + v17[11]) = a10;
  *(_BYTE *)(a9 + v17[12]) = a11;
  return result;
}

void REMCustomSmartListFilterDescriptor.PostFetchPredicate.evaluate(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t Predicate;
  uint64_t v60;
  uint64_t (*v61)(_QWORD);
  char *v62;
  _QWORD v63[6];
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v98 = a1;
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DFA8);
  MEMORY[0x1E0C80A78](v89);
  v90 = (char *)v63 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2422A0);
  v2 = MEMORY[0x1E0C80A78](v64);
  v65 = (char *)v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v63[3] = (char *)v63 - v4;
  v69 = sub_1A46902AC();
  v67 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v68 = (char *)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71ECD8);
  MEMORY[0x1E0C80A78](v6);
  v78 = (char *)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
  v77 = *(_QWORD *)(v80 - 8);
  v8 = MEMORY[0x1E0C80A78](v80);
  v72 = (char *)v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v63[5] = (char *)v63 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v63[4] = (char *)v63 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v63[1] = (char *)v63 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v63[2] = (char *)v63 - v17;
  MEMORY[0x1E0C80A78](v16);
  v74 = (char *)v63 - v18;
  v92 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  v19 = MEMORY[0x1E0C80A78](v92);
  v71 = (char *)v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v86 = (char *)v63 - v22;
  MEMORY[0x1E0C80A78](v21);
  v91 = (char *)v63 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v25 = MEMORY[0x1E0C80A78](v24);
  v85 = (char *)v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v82 = (char *)v63 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v87 = (char *)v63 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v88 = (char *)v63 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v76 = (char *)v63 - v34;
  MEMORY[0x1E0C80A78](v33);
  v75 = (char *)v63 - v35;
  v36 = sub_1A46900FC();
  v96 = *(_QWORD *)(v36 - 8);
  v97 = v36;
  v37 = MEMORY[0x1E0C80A78](v36);
  v83 = (char *)v63 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x1E0C80A78](v37);
  v84 = (char *)v63 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v93 = (char *)v63 - v42;
  v43 = MEMORY[0x1E0C80A78](v41);
  v73 = (char *)v63 - v44;
  MEMORY[0x1E0C80A78](v43);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v46 = MEMORY[0x1E0C80A78](v45);
  v47 = MEMORY[0x1E0C80A78](v46);
  v48 = MEMORY[0x1E0C80A78](v47);
  MEMORY[0x1E0C80A78](v48);
  v49 = sub_1A46900B4();
  v94 = *(_QWORD *)(v49 - 8);
  v95 = v49;
  v50 = MEMORY[0x1E0C80A78](v49);
  v70 = (char *)v63 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = MEMORY[0x1E0C80A78](v50);
  v66 = (char *)v63 - v53;
  v54 = MEMORY[0x1E0C80A78](v52);
  v81 = (char *)v63 - v55;
  v56 = MEMORY[0x1E0C80A78](v54);
  v79 = (char *)v63 - v57;
  MEMORY[0x1E0C80A78](v56);
  v58 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime.DateType(0);
  MEMORY[0x1E0C80A78](v58);
  Predicate = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  MEMORY[0x1E0C80A78](Predicate);
  sub_1A4497EE8(v99, (uint64_t)v63 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0), v61);
  v62 = (char *)&loc_1A44EAAC4 + dword_1A44EBC8C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A44EAAD4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v5 = *v0;
  v6 = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(0);
  v7 = *(_QWORD *)(v4 - 192);
  if ((*(_BYTE *)(v7 + *(int *)(v6 + 32)) & 1) != 0)
  {
    *(_BYTE *)(v4 - 176) = v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 - 224) + 56))(v3, 1, 1, *(_QWORD *)(v4 - 216));
    v10 = REMCustomSmartListFilterDescriptor.FilterTime.matches(_:)(v3);
    sub_1A4497F2C(v3, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime.DateType);
  }
  else
  {
    sub_1A444ABF4(v7 + *(int *)(v6 + 28), v1, &qword_1ED243190);
    v9 = *(_QWORD *)(v4 - 224);
    v8 = *(_QWORD *)(v4 - 216);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v1, 1, v8) == 1)
    {
      sub_1A445404C(v1, &qword_1ED243190);
      v10 = 0;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v2, v1, v8);
      *(_BYTE *)(v4 - 176) = v5;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v3, v2, v8);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v3, 0, 1, v8);
      v10 = REMCustomSmartListFilterDescriptor.FilterTime.matches(_:)(v3);
      sub_1A4497F2C(v3, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime.DateType);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v8);
    }
  }
  return v10 & 1;
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.closedRange(now:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  uint64_t result;
  uint64_t v35;
  char *v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v53 = a2;
  v48 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2422A0);
  v3 = MEMORY[0x1E0C80A78](v48);
  v49 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v46 = (char *)&v45 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
  v51 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  MEMORY[0x1E0C80A78](v6);
  v47 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v45 - v12;
  v14 = sub_1A46900B4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v50 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v45 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ECE0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(0);
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  REMCustomSmartListFilterDescriptor.FilterDate.range(now:)(a1, (uint64_t)v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_1A445404C((uint64_t)v22, (uint64_t *)&unk_1EE71ECE0);
    v27 = 1;
    v29 = v52;
    v28 = v53;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v28, v27, 1, v29);
  }
  sub_1A44683E0((uint64_t)v22, (uint64_t)v26, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange);
  sub_1A444ABF4((uint64_t)v26, (uint64_t)v13, &qword_1ED243190);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v31 = v19;
  if (v30(v13, 1, v14) == 1)
  {
    sub_1A4690000();
    sub_1A445404C((uint64_t)v13, &qword_1ED243190);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v13, v14);
  }
  v32 = v50;
  sub_1A444ABF4((uint64_t)&v26[*(int *)(v23 + 20)], (uint64_t)v11, &qword_1ED243190);
  if (v30(v11, 1, v14) == 1)
  {
    sub_1A469000C();
    sub_1A445404C((uint64_t)v11, &qword_1ED243190);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v32, v11, v14);
  }
  sub_1A4436344((unint64_t *)&qword_1ED243CF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  v33 = sub_1A469084C();
  result = sub_1A4497F2C((uint64_t)v26, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange);
  if ((v33 & 1) != 0)
  {
    v35 = v48;
    v36 = v46;
    v37 = &v46[*(int *)(v48 + 48)];
    v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v38(v46, v31, v14);
    v38(v37, v32, v14);
    v39 = v49;
    v40 = &v49[*(int *)(v35 + 48)];
    v41 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    v41(v49, v36, v14);
    v41(v40, v37, v14);
    v42 = (uint64_t)v47;
    v38(v47, v39, v14);
    v43 = *(void (**)(char *, uint64_t))(v15 + 8);
    v43(v40, v14);
    v44 = &v39[*(int *)(v35 + 48)];
    v38(v39, v36, v14);
    v38(v44, v37, v14);
    v29 = v52;
    v38((char *)(v42 + *(int *)(v52 + 36)), v44, v14);
    v43(v39, v14);
    v28 = v53;
    sub_1A44C6CC8(v42, v53, (uint64_t *)&unk_1ED243DF8);
    v27 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v28, v27, 1, v29);
  }
  __break(1u);
  return result;
}

void REMCustomSmartListFilterDescriptor.PostFetchPredicate.postFetchPredicateType.getter()
{
  uint64_t v0;
  uint64_t Predicate;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  Predicate = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  MEMORY[0x1E0C80A78](Predicate);
  sub_1A4497EE8(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1A44EC1EC + 4 * byte_1A469B9B4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1A44EC1EC()
{
  _QWORD *v0;

  *v0 = 4;
}

void REMCustomSmartListFilterDescriptor.PostFetchPredicate.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Predicate;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v1 = sub_1A46900FC();
  v9 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  MEMORY[0x1E0C80A78](v2);
  Predicate = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  v4 = MEMORY[0x1E0C80A78](Predicate);
  v5 = MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  sub_1A4497EE8(v0, (uint64_t)&v9 - v6, v7);
  v8 = (char *)sub_1A44EC3F0 + 4 * byte_1A469B9BF[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A44EC3F0()
{
  sub_1A4691C98();
  return sub_1A4691C98();
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.hashValue.getter()
{
  return sub_1A44EC704((void (*)(_BYTE *))REMCustomSmartListFilterDescriptor.PostFetchPredicate.hash(into:));
}

uint64_t sub_1A44EC704(void (*a1)(_BYTE *))
{
  _BYTE v3[72];

  sub_1A4691C8C();
  a1(v3);
  return sub_1A4691CC8();
}

uint64_t sub_1A44EC744(uint64_t a1, uint64_t a2)
{
  return sub_1A44EC750(a1, a2, (void (*)(_BYTE *))REMCustomSmartListFilterDescriptor.PostFetchPredicate.hash(into:));
}

uint64_t sub_1A44EC750(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *))
{
  _BYTE v5[72];

  sub_1A4691C8C();
  a3(v5);
  return sub_1A4691CC8();
}

uint64_t sub_1A44EC794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A44EC7A0(a1, a2, a3, (void (*)(_BYTE *))REMCustomSmartListFilterDescriptor.PostFetchPredicate.hash(into:));
}

uint64_t sub_1A44EC7A0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v6[72];

  sub_1A4691C8C();
  a4(v6);
  return sub_1A4691CC8();
}

void REMCustomSmartListFilterDescriptor.operation.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation);
}

unint64_t REMCustomSmartListFilterDescriptor.hashtags.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(v2 + 16);
  return sub_1A44F34BC(v3);
}

uint64_t REMCustomSmartListFilterDescriptor.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A444ABF4(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, a1, (uint64_t *)&unk_1EE71ED00);
}

void REMCustomSmartListFilterDescriptor.time.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
}

uint64_t REMCustomSmartListFilterDescriptor.priorities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMCustomSmartListFilterDescriptor.flagged.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
}

uint64_t REMCustomSmartListFilterDescriptor.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_BYTE *)(v2 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  return sub_1A44F34CC(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t REMCustomSmartListFilterDescriptor.lists.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists + 8);
  *a1 = v2;
  a1[1] = v3;
  return sub_1A44F34F8(v2);
}

id REMCustomSmartListFilterDescriptor.__allocating_init(operation:hashtags:date:time:priorities:flagged:location:lists:)(char *a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5, char a6, __int128 *a7, uint64_t *a8)
{
  objc_class *v8;
  id v17;

  v17 = objc_allocWithZone(v8);
  return REMCustomSmartListFilterDescriptor.init(operation:hashtags:date:time:priorities:flagged:location:lists:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

id REMCustomSmartListFilterDescriptor.init(operation:hashtags:date:time:priorities:flagged:location:lists:)(char *a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5, char a6, __int128 *a7, uint64_t *a8)
{
  _BYTE *v8;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  _QWORD *v24;
  id v25;
  __int128 v27;
  __int128 v28;
  objc_class *ObjectType;
  objc_super v31;

  ObjectType = (objc_class *)swift_getObjectType();
  v16 = *a1;
  v17 = *(_BYTE *)(a2 + 16);
  LOBYTE(a4) = *a4;
  v27 = a7[1];
  v28 = *a7;
  v18 = *((_QWORD *)a7 + 4);
  v19 = *((_QWORD *)a7 + 5);
  LOBYTE(a7) = *((_BYTE *)a7 + 48);
  v21 = *a8;
  v20 = a8[1];
  v8[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v16;
  v22 = &v8[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  *(_OWORD *)v22 = *(_OWORD *)a2;
  v22[16] = v17;
  sub_1A444ABF4(a3, (uint64_t)&v8[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1EE71ED00);
  v8[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = (_BYTE)a4;
  *(_QWORD *)&v8[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = a5;
  v8[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = a6;
  v23 = &v8[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  *(_OWORD *)v23 = v28;
  *((_OWORD *)v23 + 1) = v27;
  *((_QWORD *)v23 + 4) = v18;
  *((_QWORD *)v23 + 5) = v19;
  v23[48] = (char)a7;
  v24 = &v8[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  *v24 = v21;
  v24[1] = v20;
  v31.receiver = v8;
  v31.super_class = ObjectType;
  v25 = objc_msgSendSuper2(&v31, sel_init);
  sub_1A445404C(a3, (uint64_t *)&unk_1EE71ED00);
  return v25;
}

id REMCustomSmartListFilterDescriptor.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id REMCustomSmartListFilterDescriptor.init()()
{
  objc_class *ObjectType;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _BYTE *v5;
  char *v6;
  char *v7;
  _QWORD *v8;
  id v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = objc_allocWithZone(ObjectType);
  v5[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = 0;
  v6 = &v5[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  *(_OWORD *)v6 = xmmword_1A4696740;
  v6[16] = 0;
  sub_1A444ABF4((uint64_t)v3, (uint64_t)&v5[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1EE71ED00);
  v5[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = 6;
  *(_QWORD *)&v5[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = 0;
  v5[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = 2;
  v7 = &v5[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_OWORD *)v7 + 2) = 0u;
  v7[48] = -1;
  v8 = &v5[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  *v8 = 0;
  v8[1] = 0;
  v11.receiver = v5;
  v11.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  sub_1A445404C((uint64_t)v3, (uint64_t *)&unk_1EE71ED00);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v9;
}

id REMCustomSmartListFilterDescriptor.__allocating_init(source:operation:)(void *a1, unsigned __int8 *a2)
{
  id v3;

  v3 = sub_1A44F37B8((uint64_t)a1, a2);

  return v3;
}

id REMCustomSmartListFilterDescriptor.__allocating_init(source:hashtags:)(void *a1, uint64_t *a2)
{
  id v3;

  v3 = sub_1A44F3A20((uint64_t)a1, a2);

  return v3;
}

id REMCustomSmartListFilterDescriptor.__allocating_init(source:date:)(void *a1, uint64_t a2)
{
  id v3;

  v3 = sub_1A44F3C68((uint64_t)a1, a2);

  return v3;
}

id REMCustomSmartListFilterDescriptor.__allocating_init(source:time:)(void *a1, unsigned __int8 *a2)
{
  id v3;

  v3 = sub_1A44F3EE8((uint64_t)a1, a2);

  return v3;
}

id REMCustomSmartListFilterDescriptor.__allocating_init(source:priorities:)(void *a1, uint64_t a2)
{
  id v3;

  v3 = sub_1A44F4144((uint64_t)a1, a2);

  return v3;
}

id REMCustomSmartListFilterDescriptor.__allocating_init(source:flagged:)(void *a1, int a2)
{
  id v3;

  v3 = sub_1A44F4390((uint64_t)a1, a2);

  return v3;
}

id REMCustomSmartListFilterDescriptor.__allocating_init(source:location:)(void *a1, __int128 *a2)
{
  id v3;

  v3 = sub_1A44F45E8((uint64_t)a1, a2);

  return v3;
}

id REMCustomSmartListFilterDescriptor.__allocating_init(source:lists:)(_BYTE *a1, uint64_t *a2)
{
  objc_class *v2;
  objc_class *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _BYTE *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  uint64_t v28;
  int v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  char *v38;
  objc_class *v39;
  uint64_t v40;
  uint64_t v41;
  objc_super v42;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a2;
  v40 = a2[1];
  v41 = v9;
  v37 = a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation];
  v10 = *(_QWORD *)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8];
  v30 = *(_QWORD *)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  v11 = v30;
  v36 = v10;
  v12 = a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16];
  v29 = v12;
  v38 = v8;
  sub_1A444ABF4((uint64_t)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t)v8, (uint64_t *)&unk_1EE71ED00);
  v35 = a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time];
  v34 = *(_QWORD *)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities];
  v33 = a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged];
  v13 = *(_QWORD *)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8];
  v28 = *(_QWORD *)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  v14 = v28;
  v15 = *(_QWORD *)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24];
  v31 = *(_QWORD *)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16];
  v32 = v13;
  v16 = *(_QWORD *)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32];
  v17 = *(_QWORD *)&a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40];
  v18 = a1[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48];
  v19 = objc_allocWithZone(v3);
  v19[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v37;
  v20 = &v19[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  *(_QWORD *)v20 = v11;
  *((_QWORD *)v20 + 1) = v36;
  v20[16] = v12;
  sub_1A444ABF4((uint64_t)v8, (uint64_t)&v19[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1EE71ED00);
  v19[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = v35;
  *(_QWORD *)&v19[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = v34;
  v19[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = v33;
  v21 = &v19[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  *(_QWORD *)v21 = v14;
  v22 = v31;
  v23 = v32;
  *((_QWORD *)v21 + 1) = v32;
  *((_QWORD *)v21 + 2) = v22;
  *((_QWORD *)v21 + 3) = v15;
  *((_QWORD *)v21 + 4) = v16;
  *((_QWORD *)v21 + 5) = v17;
  v21[48] = v18;
  v24 = &v19[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  v25 = v40;
  *v24 = v41;
  v24[1] = v25;
  sub_1A44F34BC(v30);
  swift_bridgeObjectRetain();
  sub_1A44F34CC(v28, v23, v22, v15, v16, v17, v18);
  v42.receiver = v19;
  v42.super_class = v39;
  v26 = objc_msgSendSuper2(&v42, sel_init);
  sub_1A445404C((uint64_t)v38, (uint64_t *)&unk_1EE71ED00);

  return v26;
}

Swift::Void __swiftcall REMCustomSmartListFilterDescriptor.encode(with:)(NSCoder with)
{
  uint64_t v2;
  BOOL v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  id v18[3];

  v18[2] = *(id *)MEMORY[0x1E0C80C00];
  v2 = REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter();
  v4 = v2 != *MEMORY[0x1E0D84B50] && v2 == *MEMORY[0x1E0D84B40];
  LOBYTE(v18[0]) = v4;
  sub_1A451DD90((unsigned __int8 *)v18);
  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_1A46906F0();
  swift_bridgeObjectRelease();
  v18[0] = 0;
  v7 = objc_msgSend(v5, sel_dataWithJSONObject_options_error_, v6, 0, v18);

  v8 = v18[0];
  if (v7)
  {
    v9 = sub_1A468FFC4();
    v11 = v10;

    v12 = (void *)sub_1A468FFAC();
    v13 = (void *)sub_1A469087C();
    -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v12, v13);

    v14 = REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter();
    v15 = (void *)sub_1A469087C();
    -[objc_class encodeInteger:forKey:](with.super.isa, sel_encodeInteger_forKey_, v14, v15);

    sub_1A44695EC(v9, v11);
  }
  else
  {
    v16 = v8;
    v17 = (void *)sub_1A468FE68();

    swift_willThrow();
  }
}

uint64_t REMCustomSmartListFilterDescriptor.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return REMCustomSmartListFilterDescriptor.init(coder:)(a1);
}

uint64_t REMCustomSmartListFilterDescriptor.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  BOOL v12;
  uint64_t v13;
  BOOL v15;

  sub_1A444AA40(0, &qword_1ED2430F8);
  v3 = v1;
  v4 = sub_1A46910EC();
  if (v4)
  {
    v5 = (void *)v4;
    v6 = sub_1A468FFC4();
    v8 = v7;

    v9 = (void *)sub_1A469087C();
    v10 = objc_msgSend(a1, sel_decodeIntegerForKey_, v9);

    swift_getObjectType();
    v12 = v10 != (id)*MEMORY[0x1E0D84B50] && v10 == (id)*MEMORY[0x1E0D84B40];
    v15 = v12;
    v13 = sub_1A452280C(v6, v8, (unsigned __int8 *)&v15);

    swift_deallocPartialClassInstance();
  }
  else
  {

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v13;
}

uint64_t static REMCustomSmartListFilterDescriptor.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t REMCustomSmartListFilterDescriptor.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned __int8 v18;
  int v19;
  unsigned __int8 *v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char v24;
  char v25;
  int v26;
  int v27;
  _QWORD *v28;
  _QWORD *v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  unsigned __int8 *v39;
  uint64_t v40;
  unsigned __int8 *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  unsigned __int8 *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;

  swift_getObjectType();
  v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED10);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A444ABF4(a1, (uint64_t)&v84, &qword_1ED243E68);
  if (!v87)
  {
    sub_1A445404C((uint64_t)&v84, &qword_1ED243E68);
    goto LABEL_41;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation) != v77[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation])
    {

      goto LABEL_41;
    }
    v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
    v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8);
    v15 = *(unsigned __int8 *)(v1
                             + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags
                             + 16);
    v76 = (char *)v77;
    v17 = *(unsigned __int8 **)&v77[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
    v16 = *(_QWORD *)&v77[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8];
    v18 = v77[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16];
    if (v14 == 2)
    {
      LODWORD(v75) = v15;
      if (v17 == (unsigned __int8 *)2)
        goto LABEL_14;
    }
    else
    {
      v84 = v14;
      v85 = v13;
      LOBYTE(v86) = v15;
      if (v17 != (unsigned __int8 *)2)
      {
        v77 = v17;
        v78 = v16;
        LOBYTE(v79) = v18;
        sub_1A44F34BC(v14);
        sub_1A44F34BC(v14);
        LODWORD(v75) = _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC0G8HashtagsO2eeoiySbAE_AEtFZ_0(&v84, (unint64_t *)&v77);
        sub_1A44D6ED4(v84);
        sub_1A44F4804(v14);
        if ((v75 & 1) == 0)
          goto LABEL_12;
LABEL_14:
        v20 = (unsigned __int8 *)v76;
        v21 = &v76[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date];
        v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
        sub_1A444ABF4(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v12, (uint64_t *)&unk_1EE71ED00);
        sub_1A444ABF4((uint64_t)v21, v22, (uint64_t *)&unk_1EE71ED00);
        v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
        if (v23((uint64_t)v12, 1, v3) == 1)
        {
          if (v23(v22, 1, v3) == 1)
          {
            sub_1A445404C((uint64_t)v12, (uint64_t *)&unk_1EE71ED00);
LABEL_21:
            v26 = *(unsigned __int8 *)(v1
                                     + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
            v27 = v20[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time];
            if (v26 == 6)
            {
              if (v27 != 6)
                goto LABEL_40;
            }
            else if (v27 == 6 || v26 != v27)
            {
              goto LABEL_40;
            }
            v28 = *(_QWORD **)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
            v29 = *(_QWORD **)&v20[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities];
            if (v28)
            {
              if (!v29 || !sub_1A4465258(v28, v29))
                goto LABEL_40;
LABEL_31:
              v30 = *(unsigned __int8 *)(v1
                                       + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
              v31 = v20[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged];
              if (v30 == 2)
              {
                if (v31 != 2)
                  goto LABEL_40;
              }
              else if (v31 == 2 || ((((v30 & 1) == 0) ^ v31) & 1) == 0)
              {
                goto LABEL_40;
              }
              v32 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
              v33 = *(_QWORD *)(v1
                              + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                              + 8);
              v35 = *(_QWORD *)(v1
                              + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                              + 16);
              v34 = *(_QWORD *)(v1
                              + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                              + 24);
              v37 = *(_QWORD *)(v1
                              + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                              + 32);
              v36 = *(_QWORD *)(v1
                              + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                              + 40);
              v38 = *(unsigned __int8 *)(v1
                                       + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                                       + 48);
              v39 = &v20[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
              v41 = *(unsigned __int8 **)&v20[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
              v40 = *(_QWORD *)&v20[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                                  + 8];
              v43 = *(_QWORD *)&v20[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                                  + 16];
              v42 = *(_QWORD *)&v20[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                                  + 24];
              v45 = *(_QWORD *)&v20[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                                  + 32];
              v44 = *((_QWORD *)v39 + 5);
              v46 = v39[48];
              if (v38 == 255)
              {
                v74 = *(_QWORD *)(v1
                                + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                                + 40);
                v75 = v32;
                v70 = v33;
                v71 = v35;
                v72 = v34;
                v73 = v37;
                if (v46 == 255)
                  goto LABEL_44;
              }
              else
              {
                v84 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
                v85 = v33;
                v86 = v35;
                v87 = v34;
                v88 = v37;
                v89 = v36;
                v90 = v38;
                if (v46 != 255)
                {
                  v77 = v41;
                  v78 = v40;
                  v79 = v43;
                  v80 = v42;
                  v81 = v45;
                  v82 = v44;
                  v83 = v46;
                  v47 = v32;
                  v48 = v35;
                  v49 = v35;
                  v50 = v37;
                  v51 = v36;
                  sub_1A44F34CC(v32, v33, v49, v34, v37, v36, v38);
                  sub_1A44F34CC(v47, v33, v48, v34, v37, v51, v38);
                  v52 = _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC0G8LocationO2eeoiySbAE_AEtFZ_0((uint64_t)&v84, (uint64_t)&v77);
                  sub_1A44F3490(v84, v85, v86, v87, v88, v89, v90);
                  sub_1A44F4820(v47, v33, v48, v34, v50, v51, v38);
                  if ((v52 & 1) != 0)
                  {
LABEL_44:
                    v55 = v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists;
                    v57 = *(_QWORD *)(v1
                                    + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
                    v56 = *(_QWORD *)(v55 + 8);
                    v58 = v76;
                    v60 = *(_QWORD *)&v76[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
                    v59 = *(_QWORD *)&v76[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists
                                        + 8];
                    if (v57)
                    {
                      if (v60)
                      {
                        sub_1A44F34F8(v57);
                        sub_1A44F34F8(v60);
                        sub_1A44F34F8(v57);
                        if ((sub_1A44648E8(v57, v60) & 1) != 0)
                        {
                          v53 = sub_1A44648E8(v56, v59);

                          sub_1A44F4834(v60);
                          sub_1A44F4834(v57);
                          sub_1A44F4834(v57);
                          return v53 & 1;
                        }

                        sub_1A44F4834(v60);
                        sub_1A44F4834(v57);
                        sub_1A44F4834(v57);
                        goto LABEL_41;
                      }
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();

                    }
                    else
                    {
                      sub_1A44F34F8(*(_QWORD *)&v76[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists]);

                      if (!v60)
                      {
                        v53 = 1;
                        return v53 & 1;
                      }
                    }
                    sub_1A44F4834(v57);
                    sub_1A44F4834(v60);
                    goto LABEL_41;
                  }
LABEL_12:

                  goto LABEL_41;
                }
                v75 = v32;
                v67 = v41;
                v68 = v40;
                v66 = v43;
                v69 = v44;
                v61 = v36;
                sub_1A44F34E0(v32, v33, v35, v34, v37, v36, v38);
                v62 = v75;
                sub_1A44F34E0(v75, v33, v35, v34, v37, v61, v38);
                v70 = v33;
                v71 = v35;
                v72 = v34;
                v73 = v37;
                v74 = v61;
                sub_1A44F3490(v62, v33, v35, v34, v37, v61, v38);
                v41 = v67;
                v40 = v68;
                v43 = v66;
                v44 = v69;
              }
              v63 = (uint64_t)v41;
              v64 = v40;
              v65 = v44;
              sub_1A44F34CC((uint64_t)v41, v40, v43, v42, v45, v44, v46);
              sub_1A44F4820(v75, v70, v71, v72, v73, v74, v38);
              sub_1A44F4820(v63, v64, v43, v42, v45, v65, v46);
              goto LABEL_12;
            }
            if (!v29)
              goto LABEL_31;
LABEL_40:

            goto LABEL_41;
          }
        }
        else
        {
          sub_1A444ABF4((uint64_t)v12, (uint64_t)v9, (uint64_t *)&unk_1EE71ED00);
          if (v23(v22, 1, v3) != 1)
          {
            sub_1A44683E0(v22, (uint64_t)v6, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
            _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC0G4DateO2eeoiySbAE_AEtFZ_0((uint64_t)v9, (uint64_t)v6);
            v25 = v24;
            sub_1A4497F2C((uint64_t)v6, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
            sub_1A4497F2C((uint64_t)v9, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
            sub_1A445404C((uint64_t)v12, (uint64_t *)&unk_1EE71ED00);
            if ((v25 & 1) == 0)
              goto LABEL_40;
            goto LABEL_21;
          }
          sub_1A4497F2C((uint64_t)v9, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
        }
        sub_1A445404C((uint64_t)v12, (uint64_t *)&unk_1EE71ED10);
        goto LABEL_40;
      }
      v19 = v15;
      sub_1A44D39BC(v14);
      sub_1A44D39BC(v14);
      LODWORD(v75) = v19;
      sub_1A44D6ED4(v14);
    }
    sub_1A44F34BC((unint64_t)v17);
    sub_1A44F4804(v14);
    sub_1A44F4804((unint64_t)v17);
    goto LABEL_12;
  }
LABEL_41:
  v53 = 0;
  return v53 & 1;
}

uint64_t REMCustomSmartListFilterDescriptor.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[16];
  _QWORD v26[2];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26[0] = ObjectType;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71ED20);
  v26[0] = sub_1A46908E8();
  v26[1] = v6;
  sub_1A4690984();
  v8 = v26[0];
  v7 = v26[1];
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_1A4690984();
  v25[15] = *(_BYTE *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation);
  sub_1A4691590();
  sub_1A4690984();
  v26[0] = v8;
  v26[1] = v7;
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v26[0];
  v10 = v26[1];
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_1A4691410();
  swift_bridgeObjectRelease();
  v26[0] = 0xD000000000000012;
  v26[1] = 0x80000001A46BEC30;
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  v26[0] = v9;
  v26[1] = v10;
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v26[0];
  v11 = v26[1];
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_1A4691410();
  swift_bridgeObjectRelease();
  strcpy((char *)v26, "hasDateFilter:");
  HIBYTE(v26[1]) = -18;
  sub_1A444ABF4(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v5, (uint64_t *)&unk_1EE71ED00);
  v13 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v5, 1, v13);
  sub_1A445404C((uint64_t)v5, (uint64_t *)&unk_1EE71ED00);
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  v26[0] = v12;
  v26[1] = v11;
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v26[0];
  v14 = v26[1];
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_1A4691410();
  swift_bridgeObjectRelease();
  strcpy((char *)v26, "hasTimeFilter:");
  HIBYTE(v26[1]) = -18;
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  v26[0] = v15;
  v26[1] = v14;
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = v26[0];
  v16 = v26[1];
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_1A4691410();
  swift_bridgeObjectRelease();
  v26[0] = 0xD000000000000014;
  v26[1] = 0x80000001A46BEC50;
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  v26[0] = v17;
  v26[1] = v16;
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = v26[0];
  v18 = v26[1];
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_1A4691410();
  swift_bridgeObjectRelease();
  v26[0] = 0xD000000000000011;
  v26[1] = 0x80000001A46BEC70;
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  v26[0] = v19;
  v26[1] = v18;
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = v26[0];
  v20 = v26[1];
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_1A4691410();
  swift_bridgeObjectRelease();
  v26[0] = 0xD000000000000012;
  v26[1] = 0x80000001A46BEC90;
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  v26[0] = v21;
  v26[1] = v20;
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = v26[0];
  v22 = v26[1];
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_1A4691410();
  swift_bridgeObjectRelease();
  v26[0] = 0x737473694C736168;
  v26[1] = 0xEF3A7265746C6946;
  sub_1A4690984();
  swift_bridgeObjectRelease();
  v26[0] = v23;
  v26[1] = v22;
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  return v26[0];
}

uint64_t REMCustomSmartListFilterDescriptor.isEmpty.getter()
{
  char v0;
  _QWORD v2[3];
  Class ObjectType;

  ObjectType = (Class)swift_getObjectType();
  v2[0] = objc_msgSend(objc_allocWithZone(ObjectType), sel_init);
  v0 = REMCustomSmartListFilterDescriptor.isEqual(_:)((uint64_t)v2);
  sub_1A445404C((uint64_t)v2, &qword_1ED243E68);
  return v0 & 1;
}

uint64_t REMCustomSmartListFilterDescriptor.enabledFilterCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  ValueMetadata *v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_0;
  ValueMetadata *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  ValueMetadata *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  ValueMetadata *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t i;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD v38[3];
  __int128 v39;
  uint64_t v40;
  _OWORD v41[2];
  _OWORD v42[4];
  _QWORD v43[2];
  uint64_t v44;
  ValueMetadata *v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  ValueMetadata *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  ValueMetadata *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  ValueMetadata *v67;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42[3] = xmmword_1A469C580;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8);
  if (v4 == 2)
  {
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v44 = 0;
  }
  else
  {
    LOBYTE(v44) = *(_BYTE *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16);
    v8 = &type metadata for REMCustomSmartListFilterDescriptor.FilterHashtags;
    v6 = v4;
    v7 = v5;
  }
  v43[0] = v6;
  v43[1] = v7;
  v45 = v8;
  sub_1A444ABF4(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v3, (uint64_t *)&unk_1EE71ED00);
  v9 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v3, 1, v9) == 1)
  {
    sub_1A44F34BC(v4);
    sub_1A445404C((uint64_t)v3, (uint64_t *)&unk_1EE71ED00);
    v46 = 0u;
    v47 = 0u;
  }
  else
  {
    *((_QWORD *)&v47 + 1) = v9;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v46);
    sub_1A44683E0((uint64_t)v3, (uint64_t)boxed_opaque_existential_0, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
    sub_1A44F34BC(v4);
  }
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time) == 6)
  {
    v11 = 0;
    v48 = 0;
    v49 = 0;
    v50 = 0;
  }
  else
  {
    LOBYTE(v48) = *(_BYTE *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
    v11 = &type metadata for REMCustomSmartListFilterDescriptor.FilterTime;
  }
  v51 = v11;
  v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
  if (v12)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71ED28);
    v14 = v12;
  }
  else
  {
    v14 = 0;
    v13 = 0;
    v53 = 0;
    v54 = 0;
  }
  v52 = v14;
  v55 = v13;
  v15 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
  v38[1] = v12;
  if (v15 == 2)
  {
    v16 = 0;
    v56 = 0;
    v57 = 0;
    v58 = 0;
  }
  else
  {
    LOBYTE(v56) = v15 & 1;
    v16 = MEMORY[0x1E0DEAFA0];
  }
  v59 = v16;
  v17 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  v18 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8);
  v19 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16);
  v20 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
  v22 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32);
  v21 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40);
  v23 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48);
  if (v23 == 255)
  {
    v24 = 0;
    v25 = 0;
    v61 = 0;
    v62 = 0;
  }
  else
  {
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = v17;
    *(_QWORD *)(v24 + 24) = v18;
    *(_QWORD *)(v24 + 32) = v19;
    *(_QWORD *)(v24 + 40) = v20;
    *(_QWORD *)(v24 + 48) = v22;
    *(_QWORD *)(v24 + 56) = v21;
    v25 = &type metadata for REMCustomSmartListFilterDescriptor.FilterLocation;
    *(_BYTE *)(v24 + 64) = v23;
  }
  v38[2] = v43;
  v60 = v24;
  v63 = v25;
  v26 = v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists;
  v27 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
  v28 = *(_QWORD *)(v26 + 8);
  if (v27)
  {
    v29 = &type metadata for REMCustomSmartListFilterDescriptor.FilterLists;
    v30 = v27;
    v31 = v28;
  }
  else
  {
    v30 = 0;
    v31 = 0;
    v29 = 0;
    v66 = 0;
  }
  v64 = v30;
  v65 = v31;
  v67 = v29;
  swift_bridgeObjectRetain();
  sub_1A44F34CC(v17, v18, v19, v20, v22, v21, v23);
  sub_1A44F34F8(v27);
  v32 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  for (i = 2; i != 16; i += 2)
  {
    sub_1A444ABF4((uint64_t)&v42[i + 2], (uint64_t)v42, &qword_1ED243E68);
    sub_1A44C6CC8((uint64_t)v42, (uint64_t)&v39, &qword_1ED243E68);
    if (v40)
    {
      sub_1A444A940(&v39, v41);
      sub_1A444A940(v41, &v39);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v32 = sub_1A44390AC(0, v32[2] + 1, 1, v32);
      v35 = v32[2];
      v34 = v32[3];
      if (v35 >= v34 >> 1)
        v32 = sub_1A44390AC((_QWORD *)(v34 > 1), v35 + 1, 1, v32);
      v32[2] = v35 + 1;
      sub_1A444A940(&v39, &v32[4 * v35 + 4]);
    }
    else
    {
      sub_1A445404C((uint64_t)&v39, &qword_1ED243E68);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E68);
  swift_arrayDestroy();
  v36 = v32[2];
  swift_bridgeObjectRelease();
  return v36;
}

unint64_t REMCustomSmartListFilterDescriptor.postFetchPredicates(for:reminderIDsWithMatchingHashtagsProvider:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t *v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int v34;
  _BYTE *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t *v46;
  int v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t *v88;
  _BYTE *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t Predicate;
  _QWORD v94[3];

  v3 = v2;
  v87 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v86 = (uint64_t)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Predicate = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  v11 = *(_BYTE **)(Predicate - 8);
  v12 = MEMORY[0x1E0C80A78](Predicate);
  v90 = (uint64_t *)((char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x1E0C80A78](v12);
  v88 = (uint64_t *)((char *)&v84 - v15);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v84 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v89 = (char *)&v84 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v85 = (uint64_t)&v84 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v84 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = (uint64_t *)((char *)&v84 - v26);
  v28 = sub_1A4462860(8, a1);
  v92 = v3;
  if (v28)
  {
    if (*(_QWORD *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities))
    {
      v91 = a1;
      v29 = swift_bridgeObjectRetain();
      v30 = sub_1A446D064(v29);
      swift_bridgeObjectRelease();
      *v27 = v30;
      swift_storeEnumTagMultiPayload();
      v31 = sub_1A4439868(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v33 = *(_QWORD *)(v31 + 16);
      v32 = *(_QWORD *)(v31 + 24);
      if (v33 >= v32 >> 1)
        v31 = sub_1A4439868(v32 > 1, v33 + 1, 1, v31);
      *(_QWORD *)(v31 + 16) = v33 + 1;
      sub_1A44683E0((uint64_t)v27, v31+ ((v11[80] + 32) & ~(unint64_t)v11[80])+ *((_QWORD *)v11 + 9) * v33, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      a1 = v91;
      v3 = v92;
    }
    else
    {
      v31 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    v31 = MEMORY[0x1E0DEE9D8];
  }
  if (sub_1A4462860(16, a1))
  {
    v34 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
    if (v34 != 2)
    {
      *v25 = v34 & 1;
      swift_storeEnumTagMultiPayload();
      v35 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v31 = sub_1A4439868(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
      v37 = *(_QWORD *)(v31 + 16);
      v36 = *(_QWORD *)(v31 + 24);
      if (v37 >= v36 >> 1)
        v31 = sub_1A4439868(v36 > 1, v37 + 1, 1, v31);
      *(_QWORD *)(v31 + 16) = v37 + 1;
      v38 = v31
          + ((v35[80] + 32) & ~(unint64_t)v35[80])
          + *((_QWORD *)v35 + 9) * v37;
      v11 = v35;
      sub_1A44683E0((uint64_t)v25, v38, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      v3 = v92;
    }
  }
  if (sub_1A4462860(2, a1))
  {
    sub_1A444ABF4(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v7, (uint64_t *)&unk_1EE71ED00);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_1A445404C((uint64_t)v7, (uint64_t *)&unk_1EE71ED00);
    }
    else
    {
      v39 = v86;
      sub_1A44683E0((uint64_t)v7, v86, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      v40 = v85;
      sub_1A4497EE8(v39, v85, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      swift_storeEnumTagMultiPayload();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v31 = sub_1A4439868(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
      v42 = *(_QWORD *)(v31 + 16);
      v41 = *(_QWORD *)(v31 + 24);
      if (v42 >= v41 >> 1)
        v31 = sub_1A4439868(v41 > 1, v42 + 1, 1, v31);
      *(_QWORD *)(v31 + 16) = v42 + 1;
      sub_1A44683E0(v40, v31+ ((v11[80] + 32) & ~(unint64_t)v11[80])+ *((_QWORD *)v11 + 9) * v42, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
      sub_1A4497F2C(v39, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
    }
  }
  if (sub_1A4462860(4, a1))
  {
    v43 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
    if (v43 != 6)
    {
      *v89 = v43;
      swift_storeEnumTagMultiPayload();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v31 = sub_1A4439868(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
      v45 = *(_QWORD *)(v31 + 16);
      v44 = *(_QWORD *)(v31 + 24);
      if (v45 >= v44 >> 1)
        v31 = sub_1A4439868(v44 > 1, v45 + 1, 1, v31);
      *(_QWORD *)(v31 + 16) = v45 + 1;
      sub_1A44683E0((uint64_t)v89, v31+ ((v11[80] + 32) & ~(unint64_t)v11[80])+ *((_QWORD *)v11 + 9) * v45, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
    }
  }
  if (sub_1A4462860(32, a1))
  {
    v46 = (uint64_t *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
    v47 = *(unsigned __int8 *)(v3
                             + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location
                             + 48);
    if (v47 != 255)
    {
      v91 = a1;
      v48 = v11;
      v50 = v46[4];
      v49 = v46[5];
      v52 = v46[2];
      v51 = v46[3];
      v54 = *v46;
      v53 = v46[1];
      *(_QWORD *)v18 = *v46;
      *((_QWORD *)v18 + 1) = v53;
      *((_QWORD *)v18 + 2) = v52;
      *((_QWORD *)v18 + 3) = v51;
      *((_QWORD *)v18 + 4) = v50;
      *((_QWORD *)v18 + 5) = v49;
      v18[48] = v47;
      swift_storeEnumTagMultiPayload();
      sub_1A44F34E0(v54, v53, v52, v51, v50, v49, v47);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v31 = sub_1A4439868(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
      v56 = *(_QWORD *)(v31 + 16);
      v55 = *(_QWORD *)(v31 + 24);
      v11 = v48;
      v3 = v92;
      if (v56 >= v55 >> 1)
        v31 = sub_1A4439868(v55 > 1, v56 + 1, 1, v31);
      a1 = v91;
      *(_QWORD *)(v31 + 16) = v56 + 1;
      sub_1A44683E0((uint64_t)v18, v31+ ((v11[80] + 32) & ~(unint64_t)v11[80])+ *((_QWORD *)v11 + 9) * v56, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
    }
  }
  if (sub_1A4462860(1, a1))
  {
    v57 = *(_QWORD *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
    if (v57)
    {
      if (v57 == 1)
      {
        v67 = v87[3];
        v68 = v87[4];
        __swift_project_boxed_opaque_existential_1(v87, v67);
        v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 16))(v67, v68);
        v71 = sub_1A44EF868(v69);
        swift_bridgeObjectRelease();
        v72 = 0;
      }
      else
      {
        if (v57 == 2)
          goto LABEL_49;
        v91 = a1;
        v89 = v11;
        v58 = *(_BYTE *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16) & 1;
        v59 = v87[3];
        v60 = v87[4];
        __swift_project_boxed_opaque_existential_1(v87, v59);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v61 = sub_1A446C748(v57);
        swift_bridgeObjectRelease();
        v62 = swift_bridgeObjectRetain();
        v63 = sub_1A446C748(v62);
        swift_bridgeObjectRelease();
        LOBYTE(v94[0]) = v58;
        v70 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(v60 + 8))(v61, v63, v94, v59, v60);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v71 = sub_1A44EF868(v70);
        swift_bridgeObjectRelease();
        v72 = 0;
        a1 = v91;
        v3 = v92;
        v11 = v89;
      }
    }
    else
    {
      v64 = v87[3];
      v65 = v87[4];
      __swift_project_boxed_opaque_existential_1(v87, v64);
      v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 16))(v64, v65);
      v71 = sub_1A44EF868(v66);
      swift_bridgeObjectRelease();
      v72 = 1;
    }
    v73 = (uint64_t)v88;
    *v88 = v71;
    *(_BYTE *)(v73 + 8) = v72;
    swift_storeEnumTagMultiPayload();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v31 = sub_1A4439868(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
    v75 = *(_QWORD *)(v31 + 16);
    v74 = *(_QWORD *)(v31 + 24);
    if (v75 >= v74 >> 1)
      v31 = sub_1A4439868(v74 > 1, v75 + 1, 1, v31);
    *(_QWORD *)(v31 + 16) = v75 + 1;
    sub_1A44683E0(v73, v31+ ((v11[80] + 32) & ~(unint64_t)v11[80])+ *((_QWORD *)v11 + 9) * v75, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
  }
LABEL_49:
  if (sub_1A4462860(64, a1))
  {
    v76 = *(_QWORD *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
    if (v76)
    {
      v77 = *(_QWORD *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists + 8);
      v78 = v90;
      *v90 = v76;
      v78[1] = v77;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v31 = sub_1A4439868(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
      v80 = *(_QWORD *)(v31 + 16);
      v79 = *(_QWORD *)(v31 + 24);
      if (v80 >= v79 >> 1)
        v31 = sub_1A4439868(v79 > 1, v80 + 1, 1, v31);
      *(_QWORD *)(v31 + 16) = v80 + 1;
      sub_1A44683E0((uint64_t)v90, v31+ ((v11[80] + 32) & ~(unint64_t)v11[80])+ *((_QWORD *)v11 + 9) * v80, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
    }
  }
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation) == 1
    && *(_QWORD *)(v31 + 16) >= 2uLL)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED30);
    v81 = (v11[80] + 32) & ~(unint64_t)v11[80];
    v82 = swift_allocObject();
    *(_OWORD *)(v82 + 16) = xmmword_1A4695C10;
    *(_QWORD *)(v82 + v81) = v31;
    swift_storeEnumTagMultiPayload();
    return v82;
  }
  return v31;
}

uint64_t sub_1A44EF868(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v1 = a1;
  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_1A4691308())
      goto LABEL_3;
LABEL_6:
    v3 = MEMORY[0x1E0DEE9E8];
    if (v2)
      goto LABEL_4;
LABEL_7:
    v8 = -1 << *(_BYTE *)(v1 + 32);
    v29 = v1 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(v1 + 56);
    swift_bridgeObjectRetain();
    result = swift_retain();
    v6 = 0;
    goto LABEL_11;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71EEE0);
  v3 = sub_1A46913D4();
  if (!v2)
    goto LABEL_7;
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A46912D8();
  type metadata accessor for REMObjectID_Codable();
  sub_1A4436344((unint64_t *)&qword_1EE71D198, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, MEMORY[0x1E0DEFCF8]);
  result = sub_1A4690DB0();
  v1 = v31;
  v29 = v32;
  v5 = v33;
  v6 = v34;
  v7 = v35;
LABEL_11:
  v11 = (unint64_t)(v5 + 64) >> 6;
  v12 = v3 + 56;
  while (v1 < 0)
  {
    if (!sub_1A4691338())
      goto LABEL_45;
    type metadata accessor for REMObjectID_Codable();
    swift_dynamicCast();
    v16 = v30;
LABEL_36:
    result = sub_1A4691134();
    v22 = -1 << *(_BYTE *)(v3 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v16;
    ++*(_QWORD *)(v3 + 16);
  }
  if (v7)
  {
    v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v15 = v14 | (v6 << 6);
LABEL_35:
    v16 = *(void **)(*(_QWORD *)(v1 + 48) + 8 * v15);
    v30 = v16;
    v21 = v16;
    goto LABEL_36;
  }
  v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v11)
      goto LABEL_45;
    v18 = *(_QWORD *)(v29 + 8 * v17);
    v19 = v6 + 1;
    if (!v18)
    {
      v19 = v6 + 2;
      if (v6 + 2 >= v11)
        goto LABEL_45;
      v18 = *(_QWORD *)(v29 + 8 * v19);
      if (!v18)
      {
        v19 = v6 + 3;
        if (v6 + 3 >= v11)
          goto LABEL_45;
        v18 = *(_QWORD *)(v29 + 8 * v19);
        if (!v18)
        {
          v19 = v6 + 4;
          if (v6 + 4 >= v11)
            goto LABEL_45;
          v18 = *(_QWORD *)(v29 + 8 * v19);
          if (!v18)
          {
            v19 = v6 + 5;
            if (v6 + 5 >= v11)
              goto LABEL_45;
            v18 = *(_QWORD *)(v29 + 8 * v19);
            if (!v18)
            {
              v20 = v6 + 6;
              while (v11 != v20)
              {
                v18 = *(_QWORD *)(v29 + 8 * v20++);
                if (v18)
                {
                  v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_1A4460EDC();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    v7 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v19 << 6);
    v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1A44EFBFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71EED0);
    v2 = sub_1A46913D4();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E8];
  }
  v3 = a1 + 56;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(63 - v4) >> 6;
  v8 = v2 + 56;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v13 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_28;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v7)
      goto LABEL_37;
    v16 = *(_QWORD *)(v3 + 8 * v15);
    v17 = v10 + 1;
    if (!v16)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v7)
        goto LABEL_37;
      v16 = *(_QWORD *)(v3 + 8 * v17);
      if (!v16)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v7)
          goto LABEL_37;
        v16 = *(_QWORD *)(v3 + 8 * v17);
        if (!v16)
        {
          v17 = v10 + 4;
          if (v10 + 4 >= v7)
            goto LABEL_37;
          v16 = *(_QWORD *)(v3 + 8 * v17);
          if (!v16)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
    v10 = v17;
LABEL_28:
    v19 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v14);
    type metadata accessor for Dataclass(0);
    v20 = v19;
    swift_dynamicCast();
    result = sub_1A469135C();
    v21 = -1 << *(_BYTE *)(v2 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v8 + 8 * v23);
      }
      while (v27 == -1);
      v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v2 + 48) + 40 * v11;
    *(_OWORD *)v12 = v28;
    *(_OWORD *)(v12 + 16) = v29;
    *(_QWORD *)(v12 + 32) = v30;
    ++*(_QWORD *)(v2 + 16);
  }
  v18 = v10 + 5;
  if (v10 + 5 >= v7)
  {
LABEL_37:
    swift_release();
    sub_1A4460EDC();
    return v2;
  }
  v16 = *(_QWORD *)(v3 + 8 * v18);
  if (v16)
  {
    v17 = v10 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v7)
      goto LABEL_37;
    v16 = *(_QWORD *)(v3 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

id REMCustomSmartListFilterDescriptor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange.lowerBound.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A444ABF4(v1, a1, &qword_1ED243190);
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange.upperBound.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A44EFFE8(type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange, &qword_1ED243190, a1);
}

uint64_t sub_1A44EFFE8@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_1A444ABF4(v3 + *(int *)(v6 + 20), a3, a2);
}

BOOL REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange.contains(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v20;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v20 - v6;
  v8 = sub_1A46900B4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v20 - v13;
  sub_1A444ABF4(v1, (uint64_t)v7, &qword_1ED243190);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v15(v7, 1, v8) == 1)
  {
    sub_1A445404C((uint64_t)v7, &qword_1ED243190);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    v16 = sub_1A4690048();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    if ((v16 & 1) != 0)
      return 0;
  }
  v17 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(0);
  sub_1A444ABF4(v1 + *(int *)(v17 + 20), (uint64_t)v5, &qword_1ED243190);
  if (v15(v5, 1, v8) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v5, v8);
    v18 = sub_1A469003C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return (v18 & 1) == 0;
  }
  sub_1A445404C((uint64_t)v5, &qword_1ED243190);
  return 1;
}

void REMCustomSmartListFilterDescriptor.FilterDate.range(now:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD v32[20];

  v32[16] = a2;
  v32[8] = a1;
  v2 = sub_1A46900B4();
  v32[12] = *(_QWORD *)(v2 - 8);
  v32[13] = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v4 = MEMORY[0x1E0C80A78](v3);
  v32[7] = (char *)v32 - v5;
  v6 = MEMORY[0x1E0C80A78](v4);
  v7 = MEMORY[0x1E0C80A78](v6);
  v32[3] = (char *)v32 - v8;
  MEMORY[0x1E0C80A78](v7);
  v32[4] = (char *)v32 - v9;
  v10 = sub_1A4690294();
  v32[5] = *(_QWORD *)(v10 - 8);
  v32[6] = v10;
  MEMORY[0x1E0C80A78](v10);
  v32[9] = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
  MEMORY[0x1E0C80A78](v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v14 = MEMORY[0x1E0C80A78](v13);
  v32[2] = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v32[1] = (char *)v32 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v32[0] = (char *)v32 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v21 = MEMORY[0x1E0C80A78](v20);
  v32[10] = (char *)v32 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v32[11] = (char *)v32 - v24;
  MEMORY[0x1E0C80A78](v23);
  v25 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)v32 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1A46902AC();
  v32[14] = *(_QWORD *)(v28 - 8);
  v32[15] = v28;
  v29 = MEMORY[0x1E0C80A78](v28);
  MEMORY[0x1E0C80A78](v29);
  v32[18] = (char *)v32 - v30;
  sub_1A469027C();
  sub_1A4497EE8(v32[17], (uint64_t)v27, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
  v31 = (char *)&loc_1A44F0534 + dword_1A44F10A4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A44F0544()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 128) + 8))(*(_QWORD *)(v0 - 96), *(_QWORD *)(v0 - 120));
  v1 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(0);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(*(_QWORD *)(v0 - 112), 1, 1, v1);
}

ReminderKitInternal::REMCustomSmartListFilterDescriptor::Operation __swiftcall REMCustomSmartListFilterDescriptor.Operation.init(hashtagLabelSpecifierOperation:)(ReminderKitInternal::REMCustomSmartListFilterDescriptor::Operation hashtagLabelSpecifierOperation)
{
  BOOL *v1;

  *v1 = (*(_BYTE *)hashtagLabelSpecifierOperation & 1) == 0;
  return hashtagLabelSpecifierOperation;
}

unint64_t REMCustomSmartListFilterDescriptor.FilterHashtags.init(hashtagLabelSpecifier:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v3 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    if (v3 == 1)
    {
      v4 = 0;
      v3 = 0;
      v5 = 0;
    }
    else
    {
      v6 = *(_QWORD *)(result + 8);
      v7 = *(_BYTE *)(result + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v4 = (uint64_t)sub_1A4459BD0(v3);
      swift_bridgeObjectRelease();
      v8 = sub_1A4459BD0(v6);
      swift_bridgeObjectRelease();
      result = sub_1A44D6ED4(v3);
      v5 = (v7 & 1) == 0;
      v3 = (unint64_t)v8;
    }
  }
  else
  {
    v5 = 0;
    v4 = 1;
  }
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 16) = v5;
  return result;
}

uint64_t Sequence<>.evaluate(with:)()
{
  return sub_1A4690A8C() & 1;
}

uint64_t sub_1A44F11D8(uint64_t a1)
{
  uint64_t Predicate;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  _QWORD v15[4];

  Predicate = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  v3 = MEMORY[0x1E0C80A78](Predicate);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)v15 - v7;
  MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v15 - v10;
  result = MEMORY[0x1E0DEE9E8];
  v15[3] = MEMORY[0x1E0DEE9E8];
  if (*(_QWORD *)(a1 + 16))
  {
    v13 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v15[0] = a1;
    swift_bridgeObjectRetain();
    v15[1] = v5;
    sub_1A4497EE8(v13, (uint64_t)v11, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
    sub_1A4497EE8((uint64_t)v11, (uint64_t)v8, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
    v14 = (char *)&loc_1A44F1328 + 4 * byte_1A469B9CA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  return result;
}

uint64_t Sequence<>.postFetchPredicateTypes.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F6C8);
  sub_1A4690AD4();
  return v1;
}

void sub_1A44F152C(uint64_t a1, uint64_t a2)
{
  uint64_t Predicate;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  Predicate = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  MEMORY[0x1E0C80A78](Predicate);
  sub_1A4497EE8(a2, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_1A44F15C4 + 4 * byte_1A469B9E0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A44F15C4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  REMCustomSmartListFilterDescriptor.PostFetchPredicate.postFetchPredicateType.getter();
  return sub_1A4466B40((uint64_t *)(v0 - 40), *(_QWORD *)(v0 - 56));
}

uint64_t sub_1A44F1664()
{
  uint64_t result;

  result = sub_1A446D0F4((uint64_t)&unk_1E4C10610);
  qword_1EE71ECA8 = result;
  return result;
}

uint64_t static Set<>.typesIndescribableByNSPredicate.getter()
{
  return sub_1A44F16E4(&qword_1EE71C058);
}

uint64_t sub_1A44F16A4()
{
  uint64_t result;

  result = sub_1A446D0F4((uint64_t)&unk_1E4C10650);
  qword_1EE71ECB0 = result;
  return result;
}

uint64_t static Set<>.typesSupportedByCustomSmartList.getter()
{
  return sub_1A44F16E4(&qword_1EE71C060);
}

uint64_t sub_1A44F16E4(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

id REMCustomSmartListFilterDescriptor.FilterLists.alternateTargetList(for:defaultListID:)(void *a1, void *a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;

  v6 = *v2;
  v5 = v2[1];
  if (!((unint64_t)*v2 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    if (!(v5 >> 62))
    {
      if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
        return 0;
      return sub_1A44F1854(a1, v5, a2);
    }
LABEL_13:
    swift_bridgeObjectRetain();
    v10 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (!v10)
      return 0;
    return sub_1A44F1854(a1, v5, a2);
  }
  swift_bridgeObjectRetain();
  if (!sub_1A46916A4())
    goto LABEL_8;
LABEL_3:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v8 = (id)MEMORY[0x1A859ECE0](0, v6);
    goto LABEL_6;
  }
  if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_13;
  }
  v8 = *(id *)(v6 + 32);
LABEL_6:
  v9 = v8;
  swift_bridgeObjectRelease();
  return v9;
}

void *sub_1A44F1854(void *a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  objc_class *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  char v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  objc_class *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  unint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  objc_super v55;
  objc_super v56;
  id v57[2];

  v4 = v3;
  v57[1] = *(id *)MEMORY[0x1E0C80C00];
  v8 = sub_1A46900FC();
  v54 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = v9;
  if (a3)
  {
    v12 = v8;
    v13 = (objc_class *)type metadata accessor for REMObjectID_Codable();
    v14 = objc_allocWithZone(v13);
    v15 = a3;
    v16 = objc_msgSend(v15, sel_uuid);
    sub_1A46900F0();

    v17 = (void *)sub_1A46900D8();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v11, v12);
    v18 = objc_msgSend(v15, sel_entityName);
    if (!v18)
    {
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v53 = v14;
      v18 = (id)sub_1A469087C();
      v4 = v3;
      v14 = v53;
      swift_bridgeObjectRelease();
    }
    v55.receiver = v14;
    v55.super_class = v13;
    v19 = objc_msgSendSuper2(&v55, sel_initWithUUID_entityName_, v17, v18);

    v20 = sub_1A44E8370((uint64_t)v19, a2);
    v8 = v50;
    if ((v20 & 1) == 0)
      return 0;
  }
  v21 = objc_msgSend(a1, sel_customContext);
  if (!v21)
  {
LABEL_27:
    v39 = (void *)objc_opt_self();
    v45 = (void *)sub_1A469087C();
    objc_msgSend(v39, sel_internalErrorWithDebugDescription_, v45);

    swift_willThrow();
    return v39;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, sel_account);

  v57[0] = 0;
  v24 = objc_msgSend(v23, sel_fetchListsAndSublistsWithError_, v57);

  v25 = v57[0];
  if (!v24)
  {
    v42 = v57[0];
    v43 = (void *)sub_1A468FE68();

    swift_willThrow();
    goto LABEL_27;
  }
  sub_1A444AA40(0, &qword_1EE71D5F0);
  v26 = sub_1A4690BA0();
  v27 = v25;

  if (!(v26 >> 62))
  {
    v28 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v28)
    {
      v48 = a2;
      v49 = v4;
      v57[0] = (id)MEMORY[0x1E0DEE9D8];
      sub_1A469153C();
      goto LABEL_10;
    }
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  v44 = sub_1A46916A4();
  swift_bridgeObjectRelease();
  if (!v44)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v48 = a2;
  v49 = v4;
  swift_bridgeObjectRetain();
  v28 = sub_1A46916A4();
  swift_bridgeObjectRelease();
  if (!v28)
  {
    swift_bridgeObjectRelease();
    v40 = (id)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  v57[0] = (id)MEMORY[0x1E0DEE9D8];
  sub_1A469153C();
  if (v28 < 0)
  {
    __break(1u);
    goto LABEL_26;
  }
LABEL_10:
  v29 = 0;
  v51 = v26 & 0xC000000000000001;
  v52 = v28;
  v53 = (id)v26;
  do
  {
    if (v51)
      v30 = (id)MEMORY[0x1A859ECE0](v29, v26);
    else
      v30 = *(id *)(v26 + 8 * v29 + 32);
    v31 = v30;
    v32 = objc_msgSend(v30, sel_objectID);
    v33 = (objc_class *)type metadata accessor for REMObjectID_Codable();
    v34 = objc_allocWithZone(v33);
    v35 = v32;
    v36 = objc_msgSend(v35, sel_uuid);
    sub_1A46900F0();

    v37 = (void *)sub_1A46900D8();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v11, v8);
    v38 = objc_msgSend(v35, sel_entityName);
    if (!v38)
    {
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v38 = (id)sub_1A469087C();
      v8 = v50;
      swift_bridgeObjectRelease();
    }
    ++v29;
    v56.receiver = v34;
    v56.super_class = v33;
    objc_msgSendSuper2(&v56, sel_initWithUUID_entityName_, v37, v38);

    sub_1A4691518();
    sub_1A4691548();
    sub_1A4691554();
    sub_1A4691524();
    v26 = (unint64_t)v53;
  }
  while (v52 != v29);
  v40 = v57[0];
  swift_bridgeObjectRelease();
LABEL_19:
  v41 = v48;
  swift_bridgeObjectRetain();
  v39 = sub_1A44F3524((unint64_t)v40, v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v39)
    goto LABEL_27;
  return v39;
}

void sub_1A44F1DB0(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t i;
  void **v5;
  void *v6;
  id v7;

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1A46916A4();
    swift_bridgeObjectRelease();
    sub_1A4691C98();
    swift_bridgeObjectRetain();
    v3 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (!v3)
      return;
  }
  else
  {
    sub_1A4691C98();
    v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
      return;
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v3; ++i)
    {
      MEMORY[0x1A859ECE0](i, a2);
      sub_1A469114C();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    v5 = (void **)(a2 + 32);
    do
    {
      v6 = *v5++;
      v7 = v6;
      sub_1A469114C();

      --v3;
    }
    while (v3);
  }
}

uint64_t _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC0G4DateO13RelativeRangeV2eeoiySbAG_AGtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;

  v2 = (*((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1)) & ~(*a1 ^ *a2);
  if (a1[16] != a2[16])
    v2 = 0;
  return v2 & (a2[17] ^ a1[17] ^ 1u);
}

BOOL _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC0G8HashtagsO2eeoiySbAE_AEtFZ_0(unint64_t *a1, unint64_t *a2)
{
  _QWORD *v2;
  unint64_t v3;
  unsigned __int8 v4;
  _QWORD *v5;
  unint64_t v6;
  unsigned __int8 v7;
  char v8;

  v3 = *a1;
  v2 = (_QWORD *)a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v6 = *a2;
  v5 = (_QWORD *)a2[1];
  v7 = *((_BYTE *)a2 + 16);
  if (!*a1)
  {
    if (!v6)
    {
      sub_1A44D6ED4(0);
      sub_1A44D6ED4(0);
      return 1;
    }
    goto LABEL_12;
  }
  if (v3 == 1)
  {
    if (v6 == 1)
    {
      sub_1A44D6ED4(1uLL);
      sub_1A44D6ED4(1uLL);
      return v6;
    }
LABEL_12:
    sub_1A44D39BC(v6);
    sub_1A44D39BC(v3);
    sub_1A44D6ED4(v3);
    sub_1A44D6ED4(v6);
    return 0;
  }
  if (v6 < 2 || (sub_1A4464B60((_QWORD *)*a1, (_QWORD *)*a2) & 1) == 0)
    goto LABEL_12;
  v8 = sub_1A4464B60(v2, v5);
  sub_1A44D39BC(v6);
  sub_1A44D39BC(v3);
  sub_1A44D6ED4(v3);
  sub_1A44D6ED4(v6);
  return (v8 & 1) != 0 && ((v7 ^ v4) & 1) == 0;
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1ED242938);
}

uint64_t _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC0G8LocationO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = *(unsigned __int8 *)(a1 + 48);
  v8 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(uint64_t *)(a2 + 16);
  v11 = *(uint64_t *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 40);
  v14 = *(unsigned __int8 *)(a2 + 48);
  v52 = *(_QWORD *)(a1 + 16);
  v53 = v6;
  if (!*(_BYTE *)(a1 + 48))
  {
    v50 = *(_QWORD *)a1;
    v51 = *(_QWORD *)(a1 + 8);
    if (!*(_BYTE *)(a2 + 48))
    {
      v27 = *(_QWORD *)a2;
      sub_1A44F3490(v3, v51, v52, v4, v6, v5, 0);
      sub_1A44F3490(v27, v9, v10, v11, v13, v12, 0);
      return v3 == v27;
    }
LABEL_17:
    v34 = v9;
    v35 = v9;
    v36 = v8;
    v37 = v4;
    v38 = v13;
    v39 = v13;
    v40 = v5;
    sub_1A44F34E0(v8, v34, v10, v11, v38, v12, v14);
    sub_1A44F3490(v50, v51, v52, v37, v53, v40, v7);
    sub_1A44F3490(v36, v35, v10, v11, v39, v12, v14);
    return 0;
  }
  if (v7 != 1)
  {
    v50 = *(_QWORD *)a1;
    v51 = *(_QWORD *)(a1 + 8);
    if (*(_QWORD *)(a1 + 16) | v2 | v3 | v4 | v6 | v5)
    {
      if (v14 == 2 && v8 == 1 && !(v10 | v9 | v11 | v13 | v12))
      {
        v26 = 1;
        sub_1A44F3490(1, 0, 0, v4, v6, v5, 2);
        sub_1A44F3490(1, 0, 0, v11, v13, v12, 2);
        return v26;
      }
    }
    else if (v14 == 2 && !(v10 | v9 | v8 | v11 | v13 | v12))
    {
      sub_1A44F3490(0, 0, 0, v4, v6, v5, 2);
      sub_1A44F3490(0, 0, 0, v11, v13, v12, 2);
      return 1;
    }
    goto LABEL_17;
  }
  if (v14 != 1)
  {
    v50 = *(_QWORD *)a1;
    v51 = *(_QWORD *)(a1 + 8);
    v28 = *(_QWORD *)(a2 + 24);
    v29 = *(_QWORD *)(a2 + 32);
    v30 = *(_QWORD *)(a1 + 40);
    v31 = *(_QWORD *)(a1 + 24);
    v32 = *(_QWORD *)(a2 + 8);
    v33 = *(_QWORD *)a2;
    swift_bridgeObjectRetain();
    v8 = v33;
    v9 = v32;
    v4 = v31;
    v5 = v30;
    v13 = v29;
    v11 = v28;
    goto LABEL_17;
  }
  v15 = *(double *)(a1 + 16);
  v16 = *(double *)(a1 + 24);
  v17 = *(double *)(a1 + 32);
  v18 = *(double *)(a2 + 32);
  if (v3 == v8 && v2 == v9)
  {
    v19 = *(_QWORD *)(a1 + 16);
    v20 = *(_QWORD *)(a1 + 24);
    v21 = *(_QWORD *)(a1 + 40);
    sub_1A44F34E0(v3, v2, v10, v11, v13, v12, 1);
    sub_1A44F34E0(v3, v2, v19, v20, v6, v21, 1);
    v22 = v20;
    v23 = v13;
    v24 = v21;
    sub_1A44F3490(v3, v2, v19, v22, v6, v21, 1);
    v25 = v12;
    sub_1A44F3490(v3, v2, v10, v11, v23, v12, 1);
    v26 = 0;
  }
  else
  {
    v42 = *(_QWORD *)a2;
    v48 = *(_QWORD *)a2;
    v43 = *(_QWORD *)(a1 + 24);
    v44 = *(_QWORD *)(a1 + 40);
    v49 = sub_1A4691A40();
    sub_1A44F34E0(v42, v9, v10, v11, v13, v12, 1);
    sub_1A44F34E0(v3, v2, v52, v43, v53, v44, 1);
    v45 = v3;
    v46 = v13;
    v24 = v44;
    sub_1A44F3490(v45, v2, v52, v43, v53, v44, 1);
    v47 = v9;
    v25 = v12;
    sub_1A44F3490(v48, v47, v10, v11, v46, v12, 1);
    v26 = 0;
    if ((v49 & 1) == 0)
      return v26;
  }
  if (v15 == *(double *)&v10 && v16 == *(double *)&v11 && v17 == v18)
    return v24 == v25;
  return v26;
}

uint64_t _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC18PostFetchPredicateO15MatchingObjectsO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  char v5;
  char v6;

  v2 = *(_QWORD *)a2;
  v3 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8))
  {
    if (*(_BYTE *)(a1 + 8) != 1)
    {
      if (v3 != 2 || v2 != 0)
        goto LABEL_11;
      swift_bridgeObjectRelease();
      v6 = 1;
LABEL_13:
      swift_bridgeObjectRelease();
      return v6 & 1;
    }
    if (v3 != 1)
      goto LABEL_11;
LABEL_6:
    swift_bridgeObjectRetain();
    v4 = swift_bridgeObjectRetain();
    sub_1A4463B98(v4, v2);
    v6 = v5;
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (!*(_BYTE *)(a2 + 8))
    goto LABEL_6;
LABEL_11:
  v6 = 0;
  return v6 & 1;
}

void _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC18PostFetchPredicateO2eeoiySbAE_AEtFZ_0(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Predicate;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  _QWORD v27[3];
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;

  v34 = a1;
  v35 = a2;
  v28 = sub_1A46900FC();
  v27[2] = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v27[0] = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  MEMORY[0x1E0C80A78](v3);
  v27[1] = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Predicate = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  v6 = MEMORY[0x1E0C80A78](Predicate);
  v30 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v33 = (char *)v27 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v29 = (char *)v27 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v31 = (char *)v27 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v15 = MEMORY[0x1E0C80A78](v14);
  v16 = MEMORY[0x1E0C80A78](v15);
  v32 = (char *)v27 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v19 = MEMORY[0x1E0C80A78](v18);
  v20 = MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EEF0);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)v27 + *(int *)(v22 + 48) - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A4497EE8(v34, (uint64_t)v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
  v25 = (uint64_t)v35;
  v35 = v24;
  sub_1A4497EE8(v25, (uint64_t)v24, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
  v26 = (char *)sub_1A44F27FC + 4 * word_1A469B9EC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

BOOL sub_1A44F27FC()
{
  uint64_t v0;
  unsigned __int8 *v1;
  uint64_t v2;
  unsigned __int8 *v3;
  BOOL v4;

  sub_1A4497EE8(v0, (uint64_t)v1, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
  v3 = *(unsigned __int8 **)(v2 - 208);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1A445404C(v0, &qword_1EE71EEF0);
    return 0;
  }
  else
  {
    v4 = *v1 == *v3;
    sub_1A4497F2C(v0, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
  }
  return v4;
}

void _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC0G4DateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a1;
  v35 = a2;
  v2 = sub_1A46900B4();
  v32 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v26 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v31 = (char *)&v24 - v6;
  MEMORY[0x1E0C80A78](v5);
  v30 = (char *)&v24 - v7;
  v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
  v8 = MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v28 = (char *)&v24 - v11;
  MEMORY[0x1E0C80A78](v10);
  v29 = (char *)&v24 - v12;
  v13 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v15 = MEMORY[0x1E0C80A78](v14);
  v16 = MEMORY[0x1E0C80A78](v15);
  v17 = MEMORY[0x1E0C80A78](v16);
  v18 = MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EEF8);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v24 + *(int *)(v20 + 48) - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A4497EE8(v34, (uint64_t)&v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
  sub_1A4497EE8(v35, (uint64_t)v22, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
  v23 = (char *)sub_1A44F3010 + 4 * byte_1A469BA02[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A44F3010()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;
  char v3;
  char v4;

  sub_1A4497EE8(v0, (uint64_t)v2, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1A445404C(v0, &qword_1EE71EEF8);
    v4 = 0;
  }
  else
  {
    v3 = *v2 ^ *v1;
    sub_1A4497F2C(v0, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime.DateType(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE71EE28);
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1ED23E928);
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1ED23E9E8);
}

uint64_t sub_1A44F3490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  if (a7 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE71EE98);
}

unint64_t sub_1A44F34BC(unint64_t result)
{
  if (result != 2)
    return sub_1A44D39BC(result);
  return result;
}

uint64_t sub_1A44F34CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 != -1)
    return sub_1A44F34E0(a1, a2, a3, a4, a5, a6, a7);
  return a1;
}

uint64_t sub_1A44F34E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  if (a7 == 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1A44F34F8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_1A44F3524(unint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v9;
  id v10;
  void *v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_37;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1A46916A4())
  {
    v5 = 0;
    v20 = v3 + 32;
    v21 = v3;
    v23 = a2 & 0xC000000000000001;
    v22 = v3 & 0xC000000000000001;
    v19 = v4;
LABEL_4:
    while (1)
    {
      v6 = v22 ? (id)MEMORY[0x1A859ECE0](v5, v3) : *(id *)(v20 + 8 * v5);
      v7 = v6;
      if (__OFADD__(v5++, 1))
        break;
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        v9 = sub_1A46916A4();
        if (!v9)
          goto LABEL_32;
      }
      else
      {
        v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v9)
          goto LABEL_32;
      }
      if (v23)
        v10 = (id)MEMORY[0x1A859ECE0](0, a2);
      else
        v10 = *(id *)(a2 + 32);
      v11 = v10;
      type metadata accessor for REMObjectID_Codable();
      v12 = sub_1A4691140();

      if ((v12 & 1) == 0)
      {
        if (v9 == 1)
        {
LABEL_32:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v7;
        }
        if (v23)
        {
          v13 = 1;
          while (1)
          {
            MEMORY[0x1A859ECE0](v13, a2);
            v3 = v13 + 1;
            if (__OFADD__(v13, 1))
              break;
            v14 = sub_1A4691140();
            swift_unknownObjectRelease();
            if ((v14 & 1) != 0)
              goto LABEL_29;
            ++v13;
            if (v3 == v9)
              goto LABEL_32;
          }
          __break(1u);
        }
        else
        {
          v15 = 5;
          while (1)
          {
            v3 = v15 - 3;
            if (__OFADD__(v15 - 4, 1))
              break;
            v16 = *(id *)(a2 + 8 * v15);
            v17 = sub_1A4691140();

            if ((v17 & 1) != 0)
            {
LABEL_29:

              swift_bridgeObjectRelease();
              v3 = v21;
              v4 = v19;
              if (v5 != v19)
                goto LABEL_4;
              goto LABEL_38;
            }
            ++v15;
            if (v3 == v9)
              goto LABEL_32;
          }
        }
        __break(1u);
        break;
      }

      swift_bridgeObjectRelease();
      if (v5 == v4)
        goto LABEL_38;
    }
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
  }
LABEL_38:
  swift_bridgeObjectRelease();
  return 0;
}

id sub_1A44F37B8(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _BYTE *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  char *v34;
  Class v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  objc_super v39;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  MEMORY[0x1E0C80A78](v4);
  v33 = *a2;
  v36 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
  v38 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8);
  v37 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v6;
  sub_1A444ABF4(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v6, (uint64_t *)&unk_1EE71ED00);
  v7 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
  v31 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
  v32 = v7;
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8);
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16);
  v28 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
  v29 = v9;
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32);
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40);
  v14 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists + 8);
  v27 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
  v15 = v27;
  v30 = v14;
  v16 = *(_BYTE *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48);
  v35 = (Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0);
  v17 = objc_allocWithZone(v35);
  v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v33;
  v18 = &v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  v19 = v38;
  *(_QWORD *)v18 = v36;
  *((_QWORD *)v18 + 1) = v19;
  v18[16] = v37;
  sub_1A444ABF4((uint64_t)v6, (uint64_t)&v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1EE71ED00);
  v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = v32;
  *(_QWORD *)&v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = v8;
  v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = v31;
  v20 = &v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  v21 = v28;
  v22 = v29;
  *(_QWORD *)v20 = v29;
  *((_QWORD *)v20 + 1) = v10;
  *((_QWORD *)v20 + 2) = v11;
  *((_QWORD *)v20 + 3) = v21;
  *((_QWORD *)v20 + 4) = v12;
  *((_QWORD *)v20 + 5) = v13;
  v20[48] = v16;
  v23 = (uint64_t *)&v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  *v23 = v15;
  v23[1] = v30;
  sub_1A44F34BC(v36);
  swift_bridgeObjectRetain();
  sub_1A44F34CC(v22, v10, v11, v21, v12, v13, v16);
  sub_1A44F34F8(v27);
  v39.receiver = v17;
  v39.super_class = v35;
  v24 = objc_msgSendSuper2(&v39, sel_init);
  sub_1A445404C((uint64_t)v34, (uint64_t *)&unk_1EE71ED00);
  return v24;
}

id sub_1A44F3A20(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  char *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  Class v33;
  objc_super v34;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a2;
  v31 = a2[1];
  v32 = v7;
  v30 = *((unsigned __int8 *)a2 + 16);
  HIDWORD(v24) = *(unsigned __int8 *)(a1
                                    + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation);
  v29 = v6;
  sub_1A444ABF4(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v6, (uint64_t *)&unk_1EE71ED00);
  v28 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
  v27 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
  v26 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8);
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16);
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32);
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40);
  v14 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
  v25 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists + 8);
  LOBYTE(a1) = *(_BYTE *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48);
  v33 = (Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0);
  v15 = objc_allocWithZone(v33);
  v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = BYTE4(v24);
  v16 = &v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  v17 = v31;
  *(_QWORD *)v16 = v32;
  *((_QWORD *)v16 + 1) = v17;
  v16[16] = v30;
  sub_1A444ABF4((uint64_t)v6, (uint64_t)&v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1EE71ED00);
  v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = v28;
  *(_QWORD *)&v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = v27;
  v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = v26;
  v18 = &v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  *(_QWORD *)v18 = v8;
  *((_QWORD *)v18 + 1) = v9;
  *((_QWORD *)v18 + 2) = v10;
  *((_QWORD *)v18 + 3) = v11;
  *((_QWORD *)v18 + 4) = v12;
  *((_QWORD *)v18 + 5) = v13;
  v19 = v13;
  v18[48] = a1;
  v20 = (uint64_t *)&v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  v21 = v25;
  *v20 = v14;
  v20[1] = v21;
  swift_bridgeObjectRetain();
  sub_1A44F34CC(v8, v9, v10, v11, v12, v19, a1);
  sub_1A44F34F8(v14);
  v34.receiver = v15;
  v34.super_class = v33;
  v22 = objc_msgSendSuper2(&v34, sel_init);
  sub_1A445404C((uint64_t)v29, (uint64_t *)&unk_1EE71ED00);
  return v22;
}

id sub_1A44F3C68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _BYTE *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  char *v33;
  Class v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  objc_super v39;

  v35 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  MEMORY[0x1E0C80A78](v4);
  v31 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation);
  v36 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
  v38 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8);
  v37 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16);
  v6 = a2;
  v7 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v7;
  sub_1A444ABF4(v6, (uint64_t)v7, (uint64_t *)&unk_1EE71ED00);
  v32 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
  v30 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8);
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16);
  v27 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
  v28 = v9;
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32);
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40);
  v14 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists + 8);
  v26 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
  v15 = v26;
  v29 = v14;
  v16 = *(_BYTE *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48);
  v34 = (Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0);
  v17 = objc_allocWithZone(v34);
  v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v31;
  v18 = &v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  v19 = v38;
  *(_QWORD *)v18 = v36;
  *((_QWORD *)v18 + 1) = v19;
  v18[16] = v37;
  sub_1A444ABF4((uint64_t)v7, (uint64_t)&v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1EE71ED00);
  v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = v32;
  *(_QWORD *)&v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = v8;
  v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = v30;
  v20 = &v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  v21 = v27;
  v22 = v28;
  *(_QWORD *)v20 = v28;
  *((_QWORD *)v20 + 1) = v10;
  *((_QWORD *)v20 + 2) = v11;
  *((_QWORD *)v20 + 3) = v21;
  *((_QWORD *)v20 + 4) = v12;
  *((_QWORD *)v20 + 5) = v13;
  v20[48] = v16;
  v23 = (uint64_t *)&v17[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  *v23 = v15;
  v23[1] = v29;
  sub_1A44F34BC(v36);
  swift_bridgeObjectRetain();
  sub_1A44F34CC(v22, v10, v11, v21, v12, v13, v16);
  sub_1A44F34F8(v26);
  v39.receiver = v17;
  v39.super_class = v34;
  v24 = objc_msgSendSuper2(&v39, sel_init);
  sub_1A445404C((uint64_t)v33, (uint64_t *)&unk_1EE71ED00);
  sub_1A445404C(v35, (uint64_t *)&unk_1EE71ED00);
  return v24;
}

id sub_1A44F3EE8(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _BYTE *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  char *v29;
  Class v30;
  int v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  objc_super v36;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *a2;
  v28 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation);
  v32 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
  v34 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8);
  v33 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16);
  v29 = v6;
  sub_1A444ABF4(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v6, (uint64_t *)&unk_1EE71ED00);
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
  v27 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8);
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16);
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32);
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40);
  v14 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists + 8);
  v35 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
  v25 = v8;
  v26 = v14;
  v15 = *(_BYTE *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48);
  v30 = (Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0);
  v16 = objc_allocWithZone(v30);
  v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v28;
  v17 = &v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  v18 = v34;
  *(_QWORD *)v17 = v32;
  *((_QWORD *)v17 + 1) = v18;
  v17[16] = v33;
  sub_1A444ABF4((uint64_t)v6, (uint64_t)&v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1EE71ED00);
  v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = v31;
  *(_QWORD *)&v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = v7;
  v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = v27;
  v19 = &v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  v20 = v25;
  v21 = v26;
  *(_QWORD *)v19 = v25;
  *((_QWORD *)v19 + 1) = v9;
  *((_QWORD *)v19 + 2) = v11;
  *((_QWORD *)v19 + 3) = v10;
  *((_QWORD *)v19 + 4) = v12;
  *((_QWORD *)v19 + 5) = v13;
  v19[48] = v15;
  v22 = &v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  *v22 = v35;
  v22[1] = v21;
  sub_1A44F34BC(v32);
  swift_bridgeObjectRetain();
  sub_1A44F34CC(v20, v9, v11, v10, v12, v13, v15);
  sub_1A44F34F8(v35);
  v36.receiver = v16;
  v36.super_class = v30;
  v23 = objc_msgSendSuper2(&v36, sel_init);
  sub_1A445404C((uint64_t)v29, (uint64_t *)&unk_1EE71ED00);
  return v23;
}

id sub_1A44F4144(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  _BYTE *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  id v23;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  char *v32;
  Class v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  objc_super v37;

  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation);
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
  v35 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8);
  v36 = v6;
  v7 = *(_BYTE *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16);
  v32 = v5;
  sub_1A444ABF4(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v5, (uint64_t *)&unk_1EE71ED00);
  v26 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
  v30 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8);
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16);
  v27 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
  v28 = v8;
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32);
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40);
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists + 8);
  v29 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
  v14 = *(_BYTE *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48);
  v25 = v14;
  v33 = (Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0);
  v15 = objc_allocWithZone(v33);
  v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v31;
  v16 = &v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  v17 = v35;
  *(_QWORD *)v16 = v36;
  *((_QWORD *)v16 + 1) = v17;
  v16[16] = v7;
  sub_1A444ABF4((uint64_t)v5, (uint64_t)&v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1EE71ED00);
  v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = v26;
  *(_QWORD *)&v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = v34;
  v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = v30;
  v18 = &v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  v20 = v27;
  v19 = v28;
  *(_QWORD *)v18 = v9;
  *((_QWORD *)v18 + 1) = v19;
  *((_QWORD *)v18 + 2) = v10;
  *((_QWORD *)v18 + 3) = v20;
  *((_QWORD *)v18 + 4) = v11;
  *((_QWORD *)v18 + 5) = v12;
  v18[48] = v14;
  v21 = (uint64_t *)&v15[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  v22 = v29;
  *v21 = v29;
  v21[1] = v13;
  sub_1A44F34BC(v36);
  sub_1A44F34CC(v9, v19, v10, v20, v11, v12, v25);
  sub_1A44F34F8(v22);
  v37.receiver = v15;
  v37.super_class = v33;
  v23 = objc_msgSendSuper2(&v37, sel_init);
  sub_1A445404C((uint64_t)v32, (uint64_t *)&unk_1EE71ED00);
  return v23;
}

id sub_1A44F4390(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  _BYTE *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  char *v38;
  Class v39;
  int v40;
  objc_super v41;

  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation);
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8);
  v30 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
  v6 = v30;
  v8 = *(_BYTE *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16);
  v29 = v8;
  v38 = v5;
  sub_1A444ABF4(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v5, (uint64_t *)&unk_1EE71ED00);
  v31 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8);
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16);
  v33 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
  v34 = v12;
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40);
  v32 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32);
  v28 = v13;
  v14 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
  v35 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists + 8);
  v36 = v14;
  v15 = *(_BYTE *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48);
  HIDWORD(v27) = v15;
  v39 = (Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0);
  v16 = objc_allocWithZone(v39);
  v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v37;
  v17 = &v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  *(_QWORD *)v17 = v6;
  *((_QWORD *)v17 + 1) = v7;
  v17[16] = v8;
  sub_1A444ABF4((uint64_t)v5, (uint64_t)&v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1EE71ED00);
  v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = v31;
  *(_QWORD *)&v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = v9;
  v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = v40;
  v18 = &v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  *(_QWORD *)v18 = v11;
  *((_QWORD *)v18 + 1) = v10;
  v19 = v33;
  v20 = v34;
  *((_QWORD *)v18 + 2) = v34;
  *((_QWORD *)v18 + 3) = v19;
  v21 = v32;
  *((_QWORD *)v18 + 4) = v32;
  *((_QWORD *)v18 + 5) = v13;
  v18[48] = v15;
  v22 = (uint64_t *)&v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  v24 = v35;
  v23 = v36;
  *v22 = v36;
  v22[1] = v24;
  sub_1A44F34BC(v30);
  swift_bridgeObjectRetain();
  sub_1A44F34CC(v11, v10, v20, v19, v21, v28, SBYTE4(v27));
  sub_1A44F34F8(v23);
  v41.receiver = v16;
  v41.super_class = v39;
  v25 = objc_msgSendSuper2(&v41, sel_init);
  sub_1A445404C((uint64_t)v38, (uint64_t *)&unk_1EE71ED00);
  return v25;
}

id sub_1A44F45E8(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  _BYTE *v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t *v23;
  id v24;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  objc_super v33;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a2;
  v31 = a2[1];
  v32 = v7;
  v8 = *((_QWORD *)a2 + 4);
  v29 = *((_QWORD *)a2 + 5);
  v30 = v8;
  LODWORD(v8) = *((unsigned __int8 *)a2 + 48);
  v27 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation);
  v28 = v8;
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 8);
  v11 = *(_BYTE *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16);
  sub_1A444ABF4(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v6, (uint64_t *)&unk_1EE71ED00);
  HIDWORD(v26) = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
  v13 = *(_BYTE *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
  v14 = a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists;
  v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
  v16 = *(_QWORD *)(v14 + 8);
  v17 = (objc_class *)type metadata accessor for REMCustomSmartListFilterDescriptor(0);
  v18 = objc_allocWithZone(v17);
  v18[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v27;
  v19 = &v18[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  *(_QWORD *)v19 = v9;
  *((_QWORD *)v19 + 1) = v10;
  v19[16] = v11;
  sub_1A444ABF4((uint64_t)v6, (uint64_t)&v18[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1EE71ED00);
  v18[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = BYTE4(v26);
  *(_QWORD *)&v18[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = v12;
  v18[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = v13;
  v20 = &v18[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  v21 = v31;
  *(_OWORD *)v20 = v32;
  *((_OWORD *)v20 + 1) = v21;
  v22 = v29;
  *((_QWORD *)v20 + 4) = v30;
  *((_QWORD *)v20 + 5) = v22;
  v20[48] = v28;
  v23 = (uint64_t *)&v18[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  *v23 = v15;
  v23[1] = v16;
  sub_1A44F34BC(v9);
  swift_bridgeObjectRetain();
  sub_1A44F34F8(v15);
  v33.receiver = v18;
  v33.super_class = v17;
  v24 = objc_msgSendSuper2(&v33, sel_init);
  sub_1A445404C((uint64_t)v6, (uint64_t *)&unk_1EE71ED00);
  return v24;
}

unint64_t sub_1A44F4804(unint64_t result)
{
  if (result != 2)
    return sub_1A44D6ED4(result);
  return result;
}

uint64_t sub_1A44F4820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 != -1)
    return sub_1A44F3490(a1, a2, a3, a4, a5, a6, a7);
  return a1;
}

uint64_t sub_1A44F4834(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A44F4860()
{
  uint64_t v0;

  sub_1A44F3490(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_1A44F4890()
{
  uint64_t v0;
  char v1;

  REMCustomSmartListFilterDescriptor.PostFetchPredicate.evaluate(with:)(*(_QWORD *)(v0 + 16));
  return v1 & 1;
}

unint64_t sub_1A44F48C8()
{
  unint64_t result;

  result = qword_1EE71ED40;
  if (!qword_1EE71ED40)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.Operation, &type metadata for REMCustomSmartListFilterDescriptor.Operation);
    atomic_store(result, (unint64_t *)&qword_1EE71ED40);
  }
  return result;
}

unint64_t sub_1A44F4910()
{
  unint64_t result;

  result = qword_1EE71ED48;
  if (!qword_1EE71ED48)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.FilterHashtags, &type metadata for REMCustomSmartListFilterDescriptor.FilterHashtags);
    atomic_store(result, (unint64_t *)&qword_1EE71ED48);
  }
  return result;
}

unint64_t sub_1A44F4958()
{
  unint64_t result;

  result = qword_1EE71ED50;
  if (!qword_1EE71ED50)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction, &type metadata for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction);
    atomic_store(result, (unint64_t *)&qword_1EE71ED50);
  }
  return result;
}

unint64_t sub_1A44F49A0()
{
  unint64_t result;

  result = qword_1EE71ED58;
  if (!qword_1EE71ED58)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units, &type metadata for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units);
    atomic_store(result, (unint64_t *)&qword_1EE71ED58);
  }
  return result;
}

unint64_t sub_1A44F49E8()
{
  unint64_t result;

  result = qword_1EE71ED60;
  if (!qword_1EE71ED60)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange, &type metadata for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange);
    atomic_store(result, (unint64_t *)&qword_1EE71ED60);
  }
  return result;
}

uint64_t sub_1A44F4A2C()
{
  return sub_1A4436344(&qword_1EE71ED68, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate, (uint64_t)&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.FilterDate);
}

unint64_t sub_1A44F4A5C()
{
  unint64_t result;

  result = qword_1EE71ED70;
  if (!qword_1EE71ED70)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.FilterTime, &type metadata for REMCustomSmartListFilterDescriptor.FilterTime);
    atomic_store(result, (unint64_t *)&qword_1EE71ED70);
  }
  return result;
}

unint64_t sub_1A44F4AA4()
{
  unint64_t result;

  result = qword_1EE71ED78;
  if (!qword_1EE71ED78)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.FilterLocation, &type metadata for REMCustomSmartListFilterDescriptor.FilterLocation);
    atomic_store(result, (unint64_t *)&qword_1EE71ED78);
  }
  return result;
}

unint64_t sub_1A44F4AEC()
{
  unint64_t result;

  result = qword_1EE71ED80;
  if (!qword_1EE71ED80)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.FilterLists, &type metadata for REMCustomSmartListFilterDescriptor.FilterLists);
    atomic_store(result, (unint64_t *)&qword_1EE71ED80);
  }
  return result;
}

unint64_t sub_1A44F4B34()
{
  unint64_t result;

  result = qword_1EE71ED88;
  if (!qword_1EE71ED88)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.PostFetchPredicateType, &type metadata for REMCustomSmartListFilterDescriptor.PostFetchPredicateType);
    atomic_store(result, (unint64_t *)&qword_1EE71ED88);
  }
  return result;
}

unint64_t sub_1A44F4B7C()
{
  unint64_t result;

  result = qword_1EE71ED90;
  if (!qword_1EE71ED90)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.PostFetchPredicateType, &type metadata for REMCustomSmartListFilterDescriptor.PostFetchPredicateType);
    atomic_store(result, (unint64_t *)&qword_1EE71ED90);
  }
  return result;
}

unint64_t sub_1A44F4BC4()
{
  unint64_t result;

  result = qword_1ED23EA98;
  if (!qword_1ED23EA98)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.PostFetchPredicateType, &type metadata for REMCustomSmartListFilterDescriptor.PostFetchPredicateType);
    atomic_store(result, (unint64_t *)&qword_1ED23EA98);
  }
  return result;
}

unint64_t sub_1A44F4C0C()
{
  unint64_t result;

  result = qword_1EE71EDA0;
  if (!qword_1EE71EDA0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.PostFetchPredicateType, &type metadata for REMCustomSmartListFilterDescriptor.PostFetchPredicateType);
    atomic_store(result, (unint64_t *)&qword_1EE71EDA0);
  }
  return result;
}

unint64_t sub_1A44F4C54()
{
  unint64_t result;

  result = qword_1EE71EDA8;
  if (!qword_1EE71EDA8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.MatchingObjects, &type metadata for REMCustomSmartListFilterDescriptor.PostFetchPredicate.MatchingObjects);
    atomic_store(result, (unint64_t *)&qword_1EE71EDA8);
  }
  return result;
}

uint64_t sub_1A44F4C98()
{
  return sub_1A4436344(&qword_1ED23E9E0, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate, (uint64_t)&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
}

uint64_t sub_1A44F4CC4()
{
  return type metadata accessor for REMCustomSmartListFilterDescriptor(0);
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1ED242770);
}

void sub_1A44F4CE0()
{
  unint64_t v0;

  sub_1A44F84E4(319, &qword_1ED242980, (void (*)(uint64_t))type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for REMCustomSmartListFilterDescriptor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMCustomSmartListFilterDescriptor.__allocating_init(operation:hashtags:date:time:priorities:flagged:location:lists:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.Operation()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.Operation;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.FilterHashtags;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMCustomSmartListFilterDescriptor.FilterDate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v7 = sub_1A46900B4();
        v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
        v8(a1, a2, v7);
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
        v8((uint64_t *)((char *)a1 + *(int *)(v9 + 36)), (uint64_t *)((char *)a2 + *(int *)(v9 + 36)), v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 4u:
      case 5u:
        v12 = sub_1A46900B4();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for REMCustomSmartListFilterDescriptor.FilterDate(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      v4 = sub_1A46900B4();
      v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
      v6(a1, v4);
      v5 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8) + 36);
      result = ((uint64_t (*)(uint64_t, uint64_t))v6)(v5, v4);
      break;
    case 3:
    case 4:
    case 5:
      v3 = sub_1A46900B4();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for REMCustomSmartListFilterDescriptor.FilterDate(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  uint64_t v9;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v6 = sub_1A46900B4();
      v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
      v7(&a1[*(int *)(v8 + 36)], &a2[*(int *)(v8 + 36)], v6);
      goto LABEL_5;
    case 3u:
    case 4u:
    case 5u:
      v9 = sub_1A46900B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for REMCustomSmartListFilterDescriptor.FilterDate(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1A4497F2C((uint64_t)a1, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v6 = sub_1A46900B4();
        v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
        v7(a1, a2, v6);
        v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
        v7(&a1[*(int *)(v8 + 36)], &a2[*(int *)(v8 + 36)], v6);
        goto LABEL_6;
      case 3u:
      case 4u:
      case 5u:
        v9 = sub_1A46900B4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for REMCustomSmartListFilterDescriptor.FilterDate(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  uint64_t v9;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v6 = sub_1A46900B4();
      v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
      v7(&a1[*(int *)(v8 + 36)], &a2[*(int *)(v8 + 36)], v6);
      goto LABEL_5;
    case 3u:
    case 4u:
    case 5u:
      v9 = sub_1A46900B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for REMCustomSmartListFilterDescriptor.FilterDate(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1A4497F2C((uint64_t)a1, type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v6 = sub_1A46900B4();
        v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
        v7(a1, a2, v6);
        v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
        v7(&a1[*(int *)(v8 + 36)], &a2[*(int *)(v8 + 36)], v6);
        goto LABEL_6;
      case 3u:
      case 4u:
      case 5u:
        v9 = sub_1A46900B4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSearchCriterion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for REMSearchCriterion(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1A44F5604()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_1A44F5614()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A44F56AC();
  if (v0 <= 0x3F)
  {
    sub_1A46900B4();
    if (v1 <= 0x3F)
      swift_initEnumMetadataMultiPayload();
  }
}

void sub_1A44F56AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED243E08)
  {
    sub_1A46900B4();
    sub_1A4436344((unint64_t *)&qword_1ED243CF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v0 = sub_1A4690858();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED243E08);
  }
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[18])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange;
}

uint64_t _s19ReminderKitInternal34REMCustomSmartListFilterDescriptorC9OperationOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A44F581C + 4 * byte_1A469BA2D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A44F5850 + 4 * byte_1A469BA28[v4]))();
}

uint64_t sub_1A44F5850(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44F5858(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A44F5860);
  return result;
}

uint64_t sub_1A44F586C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A44F5874);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A44F5878(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44F5880(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction;
}

uint64_t storeEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A44F58E8 + 4 * byte_1A469BA37[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A44F591C + 4 * byte_1A469BA32[v4]))();
}

uint64_t sub_1A44F591C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44F5924(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A44F592CLL);
  return result;
}

uint64_t sub_1A44F5938(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A44F5940);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A44F5944(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44F594C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributeOutput.Pipeline(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterTime(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A44F5A44 + 4 * byte_1A469BA41[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A44F5A78 + 4 * byte_1A469BA3C[v4]))();
}

uint64_t sub_1A44F5A78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44F5A80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A44F5A88);
  return result;
}

uint64_t sub_1A44F5A94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A44F5A9CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A44F5AA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44F5AA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.FilterTime;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMCustomSmartListFilterDescriptor.FilterTime.DateType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1A46900B4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for REMCustomSmartListFilterDescriptor.FilterTime.DateType(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1A46900B4();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for REMCustomSmartListFilterDescriptor.FilterTime.DateType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A46900B4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for REMCustomSmartListFilterDescriptor.FilterTime.DateType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1A46900B4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for REMCustomSmartListFilterDescriptor.FilterTime.DateType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A46900B4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for REMCustomSmartListFilterDescriptor.FilterTime.DateType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1A46900B4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterTime.DateType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A44F5F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1A46900B4();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterTime.DateType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A44F5F80(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1A46900B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1A44F5FD0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A46900B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1A44F6008(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A46900B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_1A44F6048()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A46900B4();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t destroy for REMCustomSmartListFilterDescriptor.FilterLocation(uint64_t a1)
{
  return sub_1A44F3490(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for REMCustomSmartListFilterDescriptor.FilterLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1A44F34E0(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for REMCustomSmartListFilterDescriptor.FilterLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1A44F34E0(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_1A44F3490(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for REMCustomSmartListFilterDescriptor.FilterLocation(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_1A44F3490(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterLocation(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterLocation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A44F62C4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 1u)
    return *(unsigned __int8 *)(a1 + 48);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A44F62DC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)(result + 40) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLocation()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.FilterLocation;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.FilterLists;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicateType()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.PostFetchPredicateType;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMCustomSmartListFilterDescriptor.PostFetchPredicate(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (uint64_t *)(v14 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v7 = *(_QWORD *)a2;
        v8 = *((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        v10 = *((_QWORD *)a2 + 3);
        v11 = *((_QWORD *)a2 + 4);
        v12 = *((_QWORD *)a2 + 5);
        v13 = a2[48];
        sub_1A44F34E0(v7, v8, v9, v10, v11, v12, v13);
        *a1 = v7;
        a1[1] = v8;
        a1[2] = v9;
        a1[3] = v10;
        a1[4] = v11;
        a1[5] = v12;
        *((_BYTE *)a1 + 48) = v13;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v16 = a2[8];
        *a1 = *(_QWORD *)a2;
        *((_BYTE *)a1 + 8) = v16;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v17 = *(_QWORD *)a2;
        v18 = *((_QWORD *)a2 + 1);
        *a1 = v17;
        a1[1] = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v19 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            v20 = sub_1A46900B4();
            v21 = *(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
            v21(a1, a2, v20);
            v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
            v21((uint64_t *)((char *)a1 + *(int *)(v22 + 36)), &a2[*(int *)(v22 + 36)], v20);
            goto LABEL_15;
          case 3u:
          case 4u:
          case 5u:
            v24 = sub_1A46900B4();
            (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, a2, v24);
LABEL_15:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
            break;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
      case 9u:
      case 0xAu:
        *a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        v23 = sub_1A46900FC();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for REMCustomSmartListFilterDescriptor.PostFetchPredicate(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      result = sub_1A44F3490(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
      break;
    case 2:
    case 5:
    case 9:
    case 10:
      goto LABEL_3;
    case 3:
      swift_bridgeObjectRelease();
LABEL_3:
      result = swift_bridgeObjectRelease();
      break;
    case 4:
      type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
      result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 1:
          v7 = sub_1A46900B4();
          v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
          v8(a1, v7);
          v6 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8) + 36);
          v4 = v7;
          v5 = (uint64_t (*)(uint64_t, uint64_t))v8;
          goto LABEL_9;
        case 3:
        case 4:
        case 5:
          v3 = sub_1A46900B4();
          goto LABEL_8;
        default:
          return result;
      }
    case 7:
      v3 = sub_1A46900FC();
LABEL_8:
      v4 = v3;
      v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v6 = a1;
LABEL_9:
      result = v5(v6, v4);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for REMCustomSmartListFilterDescriptor.PostFetchPredicate(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v6 = *(_QWORD *)a2;
      v7 = *((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      v9 = *((_QWORD *)a2 + 3);
      v10 = *((_QWORD *)a2 + 4);
      v11 = *((_QWORD *)a2 + 5);
      v12 = a2[48];
      sub_1A44F34E0(v6, v7, v8, v9, v10, v11, v12);
      *a1 = v6;
      a1[1] = v7;
      a1[2] = v8;
      a1[3] = v9;
      a1[4] = v10;
      a1[5] = v11;
      *((_BYTE *)a1 + 48) = v12;
      goto LABEL_13;
    case 2u:
      v13 = a2[8];
      *a1 = *(_QWORD *)a2;
      *((_BYTE *)a1 + 8) = v13;
      swift_bridgeObjectRetain();
      goto LABEL_13;
    case 3u:
      v14 = *(_QWORD *)a2;
      v15 = *((_QWORD *)a2 + 1);
      *a1 = v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_13;
    case 4u:
      v16 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          v17 = sub_1A46900B4();
          v18 = *(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
          v18(a1, a2, v17);
          v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
          v18((uint64_t *)((char *)a1 + *(int *)(v19 + 36)), &a2[*(int *)(v19 + 36)], v17);
          goto LABEL_12;
        case 3u:
        case 4u:
        case 5u:
          v21 = sub_1A46900B4();
          (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
LABEL_12:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
          break;
      }
      goto LABEL_13;
    case 5u:
    case 9u:
    case 0xAu:
      *a1 = *(_QWORD *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_13;
    case 7u:
      v20 = sub_1A46900FC();
      (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for REMCustomSmartListFilterDescriptor.PostFetchPredicate(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a1 != (uint64_t *)a2)
  {
    sub_1A4497F2C((uint64_t)a1, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v6 = *(_QWORD *)a2;
        v7 = *((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        v9 = *((_QWORD *)a2 + 3);
        v10 = *((_QWORD *)a2 + 4);
        v11 = *((_QWORD *)a2 + 5);
        v12 = a2[48];
        sub_1A44F34E0(v6, v7, v8, v9, v10, v11, v12);
        *a1 = v6;
        a1[1] = v7;
        a1[2] = v8;
        a1[3] = v9;
        a1[4] = v10;
        a1[5] = v11;
        *((_BYTE *)a1 + 48) = v12;
        goto LABEL_14;
      case 2u:
        v13 = a2[8];
        *a1 = *(_QWORD *)a2;
        *((_BYTE *)a1 + 8) = v13;
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 3u:
        *a1 = *(_QWORD *)a2;
        a1[1] = *((_QWORD *)a2 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 4u:
        v14 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            v15 = sub_1A46900B4();
            v16 = *(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
            v16(a1, a2, v15);
            v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
            v16((uint64_t *)((char *)a1 + *(int *)(v17 + 36)), &a2[*(int *)(v17 + 36)], v15);
            goto LABEL_13;
          case 3u:
          case 4u:
          case 5u:
            v19 = sub_1A46900B4();
            (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
LABEL_13:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
            break;
        }
        goto LABEL_14;
      case 5u:
      case 9u:
      case 0xAu:
        *a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 7u:
        v18 = sub_1A46900FC();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for REMCustomSmartListFilterDescriptor.PostFetchPredicate(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 7)
  {
    v11 = sub_1A46900FC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
LABEL_10:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (EnumCaseMultiPayload == 4)
  {
    v7 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v8 = sub_1A46900B4();
        v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
        v9(a1, a2, v8);
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
        v9(&a1[*(int *)(v10 + 36)], &a2[*(int *)(v10 + 36)], v8);
        goto LABEL_9;
      case 3u:
      case 4u:
      case 5u:
        v12 = sub_1A46900B4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    goto LABEL_10;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for REMCustomSmartListFilterDescriptor.PostFetchPredicate(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_1A4497F2C((uint64_t)a1, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 7)
    {
      v11 = sub_1A46900FC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (EnumCaseMultiPayload == 4)
    {
      v7 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          v8 = sub_1A46900B4();
          v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
          v9(a1, a2, v8);
          v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
          v9(&a1[*(int *)(v10 + 36)], &a2[*(int *)(v10 + 36)], v8);
          goto LABEL_10;
        case 3u:
        case 4u:
        case 5u:
          v12 = sub_1A46900B4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
LABEL_10:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      goto LABEL_11;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1A44F7198()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(319);
  if (v1 <= 0x3F)
  {
    result = sub_1A46900FC();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for REMPCASolver.ComponentOption(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMPCASolver.ComponentOption(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A44F72F0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A44F7308(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.MatchingObjects()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.PostFetchPredicate.MatchingObjects;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A46900FC();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = a3[5];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    v16 = a3[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    if (v9((uint64_t *)((char *)a2 + v16), 1, v7))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
    v20 = a3[7];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_1A46900B4();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v26 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *(uint64_t *)((char *)a1 + v26) = *(uint64_t *)((char *)a2 + v26);
    v27 = a3[10];
    v28 = a3[11];
    v29 = (char *)a1 + v27;
    v30 = (char *)a2 + v27;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    *((_BYTE *)a1 + v28) = *((_BYTE *)a2 + v28);
    *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_1A46900FC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = a1 + a2[5];
  if (!v6(v7, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  v8 = a1 + a2[6];
  if (!v6(v8, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  v9 = a1 + a2[7];
  v10 = sub_1A46900B4();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;

  v6 = sub_1A46900FC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_1A46900B4();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v24 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(_QWORD *)&a1[v24] = *(_QWORD *)&a2[v24];
  v25 = a3[10];
  v26 = a3[11];
  v27 = &a1[v25];
  v28 = &a2[v25];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  a1[v26] = a2[v26];
  a1[a3[12]] = a2[a3[12]];
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v6 = sub_1A46900FC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = v8(&a1[v18], 1, v6);
  v22 = v8(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
LABEL_19:
  v24 = a3[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_1A46900B4();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_24;
  }
  if (v31)
  {
LABEL_24:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_25:
  a1[a3[8]] = a2[a3[8]];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = a3[10];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v36 = *(_QWORD *)v35;
  v34[8] = v35[8];
  *(_QWORD *)v34 = v36;
  a1[a3[11]] = a2[a3[11]];
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

char *initializeWithTake for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;

  v6 = sub_1A46900FC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_1A46900B4();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v24 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(_QWORD *)&a1[v24] = *(_QWORD *)&a2[v24];
  v25 = a3[10];
  v26 = a3[11];
  v27 = &a1[v25];
  v28 = &a2[v25];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  a1[v26] = a2[v26];
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

char *assignWithTake for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;

  v6 = sub_1A46900FC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = v8(&a1[v18], 1, v6);
  v22 = v8(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
LABEL_19:
  v24 = a3[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_1A46900B4();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v25, v26, v27);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_24;
  }
  if (v31)
  {
LABEL_24:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_25:
  v33 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(_QWORD *)&a1[v33] = *(_QWORD *)&a2[v33];
  swift_bridgeObjectRelease();
  v34 = a3[10];
  v35 = a3[11];
  v36 = &a1[v34];
  v37 = &a2[v34];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  v36[8] = v37[8];
  a1[v35] = a2[v35];
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

uint64_t getEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A44F82A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A44F8370(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = a2;
  return result;
}

void sub_1A44F841C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A44F84E4(319, (unint64_t *)&qword_1ED242A70, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  if (v0 <= 0x3F)
  {
    sub_1A44F84E4(319, (unint64_t *)&qword_1ED243020, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1A44F84E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1A46911A0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A46900B4();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = *(int *)(a3 + 20);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    if (v9((uint64_t *)v14, 1, v7))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v4 = sub_1A46900B4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = a1 + *(int *)(a2 + 20);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  return result;
}

char *initializeWithCopy for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = sub_1A46900B4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = *(int *)(a3 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(v12, 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;

  v6 = sub_1A46900B4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  return a1;
}

char *initializeWithTake for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = sub_1A46900B4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = *(int *)(a3 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(v12, 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;

  v6 = sub_1A46900B4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A44F8CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for REMCustomSmartListFilterDescriptor.FilterDate.OptionalDateRange()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A44F8D18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_1A44F8D5C()
{
  unint64_t v0;

  sub_1A44F84E4(319, (unint64_t *)&qword_1ED243020, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t dispatch thunk of ReminderIDsWithMatchingHashtagsProviding.fetchReminderIDs(include:exclude:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of ReminderIDsWithMatchingHashtagsProviding.fetchAllTaggedReminderIDs()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1A44F8E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1A4690D08();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1A4690CFC();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1A445404C(a1, &qword_1EE71CC08);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A4690CC0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1A44F8F58(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        return swift_release();
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          return swift_release();
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            return swift_release();
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    result = sub_1A4466B40(&v13, *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v9));
  }
  v12 = v10 + 4;
  if (v12 >= v7)
    return swift_release();
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A44F90A0(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v7)
        return swift_release();
      v14 = *(_QWORD *)(v3 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v7)
          return swift_release();
        v14 = *(_QWORD *)(v3 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v7)
            return swift_release();
          v14 = *(_QWORD *)(v3 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_1A4465F6C(&v16, v11, v12);
    result = swift_bridgeObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v7)
    return swift_release();
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A44F920C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1ED240018);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED240018);
  if (qword_1ED244120 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2568D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

unint64_t REMTrialNamespace.name.getter()
{
  return 0xD000000000000011;
}

uint64_t static REMTrialNamespace.== infix(_:_:)()
{
  return 1;
}

uint64_t REMTrialNamespace.hash(into:)()
{
  return sub_1A4691C98();
}

void *static REMTrialNamespace.allCases.getter()
{
  return &unk_1E4C106A8;
}

uint64_t REMTrialNamespace.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

void sub_1A44F9330(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FA98;
}

uint64_t sub_1A44F9340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  __swift_allocate_value_buffer(v0, qword_1EE71EF10);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE71EF10);
  v2 = sub_1A468FF7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t static REMTrialClient.debug_assetFixtureURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED23FC30 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE71EF10);
  swift_beginAccess();
  return sub_1A44E245C(v3, a1);
}

uint64_t static REMTrialClient.debug_assetFixtureURL.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED23FC30 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE71EF10);
  swift_beginAccess();
  sub_1A44F94D0(a1, v3);
  swift_endAccess();
  return sub_1A445404C(a1, &qword_1ED243160);
}

uint64_t sub_1A44F94D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t (*static REMTrialClient.debug_assetFixtureURL.modify())()
{
  uint64_t v0;

  if (qword_1ED23FC30 != -1)
    swift_once();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE71EF10);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t REMTrialClient.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_DWORD *)(v0 + 24) = 304;
  *(_QWORD *)(v0 + 16) = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 304);
  return v0;
}

uint64_t REMTrialClient.init()()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 24) = 304;
  *(_QWORD *)(v0 + 16) = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 304);
  return v0;
}

uint64_t sub_1A44F9654()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_1A469087C();
  LODWORD(v1) = objc_msgSend(v1, sel_compatibilityVersionWithNamespaceName_, v2);

  return v1;
}

uint64_t sub_1A44F96C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED23FC30 != -1)
    swift_once();
  v4 = 0x6C6F725F6C6C756ELL;
  v5 = __swift_project_value_buffer(v1, (uint64_t)qword_1EE71EF10);
  swift_beginAccess();
  sub_1A44E245C(v5, (uint64_t)v3);
  v6 = sub_1A468FF7C();
  LODWORD(v5) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v3, 1, v6);
  sub_1A445404C((uint64_t)v3, &qword_1ED243160);
  if ((_DWORD)v5 == 1)
  {
    v7 = *(void **)(v0 + 16);
    v8 = (void *)sub_1A469087C();
    v9 = objc_msgSend(v7, sel_rolloutIdentifiersWithNamespaceName_, v8);

    if (v9)
    {
      v10 = objc_msgSend(v9, sel_rampId);
      if (v10)
      {
        v11 = v10;
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

        v12 = objc_msgSend(v9, sel_rolloutId);
        v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v15 = v14;

        v22 = v13;
        v23 = v15;
        sub_1A4690984();
        sub_1A4690984();

        swift_bridgeObjectRelease();
      }
      else
      {
        v16 = objc_msgSend(v9, sel_rolloutId);
        v17 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v19 = v18;

        v22 = v17;
        v23 = v19;
        sub_1A4690984();

      }
      return v22;
    }
  }
  return v4;
}

void sub_1A44F9914(uint64_t a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  char v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CC08);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    sub_1A44FA418(&v19);
    if (!v4)
    {
      swift_bridgeObjectRetain();
      v11 = sub_1A44FBF74(MEMORY[0x1E0DEE9E8], a1);
      swift_bridgeObjectRelease_n();
      v12 = swift_bridgeObjectRetain();
      v13 = sub_1A4459BD0(v12);
      swift_bridgeObjectRelease();
      v14 = (_QWORD *)swift_allocObject();
      v14[2] = v13;
      v14[3] = a2;
      v14[4] = a3;
      v14[5] = v11;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1A44FC184((uint64_t)a2);
      sub_1A44FB5EC((uint64_t)v13, sub_1A44FC178, (uint64_t)v14);
      swift_release();
      swift_release();
      sub_1A44FB0D4(v11);
      v16 = v15;
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        v17 = sub_1A4690D08();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
        v18 = (_QWORD *)swift_allocObject();
        v18[2] = 0;
        v18[3] = 0;
        v18[4] = v3;
        swift_retain();
        sub_1A44F8E0C((uint64_t)v10, (uint64_t)&unk_1EE71EF30, (uint64_t)v18);
        swift_release();
      }
    }
  }
  else if (a2)
  {
    a2(MEMORY[0x1E0DEE9E8]);
  }
}

void sub_1A44F9AFC(uint64_t a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  Swift::String v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t inited;
  uint64_t v18;
  Swift::String base;
  uint64_t v20;
  ReminderKitInternal::REMGroceryLocaleMapping::LocaleSetting v21;

  v3 = *a2;
  v2 = (void *)a2[1];
  v4._countAndFlagsBits = *a2;
  v4._object = v2;
  REMGroceryLocaleMapping.localeSetting(for:)(&v21, v4);
  if (v5)
  {
    if (qword_1ED240038 != -1)
      swift_once();
    v6 = sub_1A4690318();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED240018);
    swift_bridgeObjectRetain();
    v7 = v5;
    swift_bridgeObjectRetain();
    v8 = v5;
    v9 = sub_1A469030C();
    v10 = sub_1A4690FF0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v21.base._countAndFlagsBits = v12;
      *(_DWORD *)v11 = 136315394;
      swift_bridgeObjectRetain();
      sub_1A4431120(v3, (unint64_t)v2, &v21.base._countAndFlagsBits);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v11 + 12) = 2080;
      swift_getErrorValue();
      v13 = Error.rem_errorDescription.getter(v20);
      sub_1A4431120(v13, v14, &v21.base._countAndFlagsBits);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A442D000, v9, v10, "Required LocaleId not found for %s with error: %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v12, -1, -1);
      MEMORY[0x1A85A0114](v11, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    base = v21.base;
    countAndFlagsBits = v21.meta._countAndFlagsBits;
    object = v21.meta._object;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243000);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A4696430;
    *(Swift::String *)(inited + 32) = base;
    *(_QWORD *)(inited + 48) = countAndFlagsBits;
    *(_QWORD *)(inited + 56) = object;
    swift_bridgeObjectRelease();
    v18 = sub_1A446C748(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    sub_1A44F90A0(v18);
  }
}

void sub_1A44F9DDC(char a1, void *a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  if (!a2)
  {
    if ((a1 & 1) == 0)
    {
      if (qword_1ED240038 != -1)
        swift_once();
      v23 = sub_1A4690318();
      __swift_project_value_buffer(v23, (uint64_t)qword_1ED240018);
      swift_bridgeObjectRetain_n();
      v24 = sub_1A469030C();
      v25 = sub_1A4690FF0();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        v27 = swift_slowAlloc();
        v35 = v27;
        *(_DWORD *)v26 = 136446210;
        v28 = swift_bridgeObjectRetain();
        v29 = MEMORY[0x1A859E404](v28, MEMORY[0x1E0DEA968]);
        v31 = v30;
        swift_bridgeObjectRelease();
        sub_1A4431120(v29, v31, &v35);
        sub_1A46911D0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v24, v25, "Failed to download for grocery with factors: '%{public}s'", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v27, -1, -1);
        MEMORY[0x1A85A0114](v26, -1, -1);

        if (!a4)
          return;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        if (!a4)
          return;
      }
      goto LABEL_15;
    }
LABEL_14:
    if (!a4)
      return;
    goto LABEL_15;
  }
  if (qword_1ED240038 != -1)
    swift_once();
  v9 = sub_1A4690318();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED240018);
  swift_bridgeObjectRetain();
  v10 = a2;
  swift_bridgeObjectRetain();
  v11 = a2;
  v12 = sub_1A469030C();
  v13 = sub_1A4690FF0();
  if (!os_log_type_enabled(v12, v13))
  {
    swift_bridgeObjectRelease_n();

    goto LABEL_14;
  }
  v14 = swift_slowAlloc();
  v32 = swift_slowAlloc();
  v35 = v32;
  *(_DWORD *)v14 = 136446466;
  v15 = swift_bridgeObjectRetain();
  v33 = a6;
  v16 = MEMORY[0x1A859E404](v15, MEMORY[0x1E0DEA968]);
  v18 = v17;
  swift_bridgeObjectRelease();
  sub_1A4431120(v16, v18, &v35);
  sub_1A46911D0();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v14 + 12) = 2080;
  swift_getErrorValue();
  v19 = a2;
  v20 = Error.rem_errorDescription.getter(v34);
  v22 = v21;

  sub_1A4431120(v20, v22, &v35);
  a6 = v33;
  sub_1A46911D0();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_1A442D000, v12, v13, "Failed to download for grocery with factors: '%{public}s', error: %s", (uint8_t *)v14, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x1A85A0114](v32, -1, -1);
  MEMORY[0x1A85A0114](v14, -1, -1);

  if (!a4)
    return;
LABEL_15:
  a4(a6);
}

uint64_t sub_1A44FA224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_1A44FA23C()
{
  uint64_t v0;

  sub_1A44FB4E8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1A44FA418(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v3 = sub_1A468FF7C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v10 - v8;
  sub_1A44FB744((uint64_t)&v10 - v8);
  if (!v1)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    REMGroceryLocaleMapping.init(url:)((uint64_t)v7, a1);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
}

void sub_1A44FA59C(char a1, void *a2)
{
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  NSObject *oslog;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    if (qword_1ED240038 != -1)
      swift_once();
    v3 = sub_1A4690318();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED240018);
    v4 = a2;
    v5 = a2;
    oslog = sub_1A469030C();
    v6 = sub_1A4690FF0();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v18 = v8;
      *(_DWORD *)v7 = 136315138;
      swift_getErrorValue();
      v9 = a2;
      v10 = Error.rem_errorDescription.getter(v17);
      v12 = v11;

      sub_1A4431120(v10, v12, &v18);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A442D000, oslog, v6, "Failed to download locale_mapping for grocery with error: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v8, -1, -1);
      MEMORY[0x1A85A0114](v7, -1, -1);

      return;
    }

    goto LABEL_13;
  }
  if ((a1 & 1) == 0)
  {
    if (qword_1ED240038 != -1)
      swift_once();
    v13 = sub_1A4690318();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED240018);
    oslog = sub_1A469030C();
    v14 = sub_1A4690FF0();
    if (os_log_type_enabled(oslog, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1A442D000, oslog, v14, "Failed to download locale_mapping for grocery", v15, 2u);
      MEMORY[0x1A85A0114](v15, -1, -1);
    }
LABEL_13:

  }
}

void sub_1A44FA85C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  id v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;

  v73 = a1;
  v74 = a2;
  v72 = a3;
  v3 = sub_1A468FE8C();
  v67 = *(_QWORD *)(v3 - 8);
  v68 = v3;
  MEMORY[0x1E0C80A78](v3);
  v69 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A468FF7C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v71 = (char *)&v63 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v63 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v63 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  v18 = MEMORY[0x1E0C80A78](v17);
  v66 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v63 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v63 - v23;
  if (qword_1ED23FC30 != -1)
    swift_once();
  v25 = __swift_project_value_buffer(v17, (uint64_t)qword_1EE71EF10);
  swift_beginAccess();
  sub_1A44E245C(v25, (uint64_t)v24);
  v70 = v6;
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v27 = v26(v24, 1, v5);
  sub_1A445404C((uint64_t)v24, &qword_1ED243160);
  if (v27 != 1)
  {
    sub_1A44E245C(v25, (uint64_t)v22);
    if (v26(v22, 1, v5) != 1)
    {
      v40 = v70;
      (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v14, v22, v5);
      sub_1A468FEEC();
      v41 = *(void (**)(char *, uint64_t))(v40 + 8);
      v41(v14, v5);
      v42 = v71;
      sub_1A468FEEC();
      sub_1A468FEEC();
      v41(v42, v5);
      v41(v16, v5);
      return;
    }
    sub_1A445404C((uint64_t)v22, &qword_1ED243160);
    v38 = (void *)objc_opt_self();
    v39 = (void *)sub_1A469087C();
    objc_msgSend(v38, sel_internalErrorWithDebugDescription_, v39);

    goto LABEL_19;
  }
  sub_1A44FC220();
  v28 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_daemonUserDefaults);
  v29 = objc_msgSend(v28, sel_trialAssetsDirectoryDebugOverride);

  if (!v29)
  {
    v43 = *(void **)(v65 + 16);
    v44 = (void *)sub_1A469087C();
    v45 = (void *)sub_1A469087C();
    v46 = objc_msgSend(v43, sel_levelForFactor_withNamespaceName_, v44, v45);

    if (v46)
    {
      v47 = objc_msgSend(v46, sel_directoryValue);
      if (v47)
      {
        v48 = v47;
        v49 = objc_msgSend(v47, sel_path);

        if (v49)
        {
          _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

          v50 = v70;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v66, 1, 1, v5);
          (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v69, *MEMORY[0x1E0CAFD78], v68);
          v51 = v71;
          sub_1A468FF64();
          sub_1A468FEF8();

          (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v5);
        }
        else
        {
          v75 = 0;
          v76 = 0xE000000000000000;
          sub_1A4691410();
          swift_bridgeObjectRelease();
          v75 = 0x203A726F74636146;
          v76 = 0xE800000000000000;
          sub_1A4690984();
          sub_1A4690984();
          sub_1A4690984();
          v60 = v75;
          v61 = v76;
          sub_1A44FC25C();
          swift_allocError();
          *(_QWORD *)v62 = v60;
          *(_QWORD *)(v62 + 8) = v61;
          *(_BYTE *)(v62 + 16) = 2;
          swift_willThrow();

        }
      }
      else
      {
        __break(1u);
      }
      return;
    }
    v75 = 0;
    v76 = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    v75 = 0x203A726F74636146;
    v76 = 0xE800000000000000;
    sub_1A4690984();
    sub_1A4690984();
    sub_1A4690984();
    v57 = v75;
    v58 = v76;
    sub_1A44FC25C();
    swift_allocError();
    *(_QWORD *)v59 = v57;
    *(_QWORD *)(v59 + 8) = v58;
    *(_BYTE *)(v59 + 16) = 1;
LABEL_19:
    swift_willThrow();
    return;
  }
  v64 = v9;
  v30 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v32 = v31;

  if (qword_1ED240038 != -1)
    swift_once();
  v65 = v30;
  v33 = sub_1A4690318();
  __swift_project_value_buffer(v33, (uint64_t)qword_1ED240018);
  swift_bridgeObjectRetain_n();
  v34 = sub_1A469030C();
  v35 = sub_1A4690FE4();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v75 = v37;
    *(_DWORD *)v36 = 136315138;
    swift_bridgeObjectRetain();
    v77 = sub_1A4431120(v65, v32, &v75);
    sub_1A46911D0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A442D000, v34, v35, "REMTrialClient.groceryDirectoryURL, overrided assets dir: %s", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v37, -1, -1);
    MEMORY[0x1A85A0114](v36, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v53 = v69;
  v52 = v70;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v66, 1, 1, v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v53, *MEMORY[0x1E0CAFD78], v68);
  v54 = v64;
  sub_1A468FF64();
  v55 = v71;
  sub_1A468FEF8();
  v56 = *(void (**)(char *, uint64_t))(v52 + 8);
  v56(v54, v5);
  sub_1A468FEF8();
  v56(v55, v5);
}

void sub_1A44FB0D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  unsigned __int8 v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  int64_t v38;
  uint64_t v39;

  v2 = v1;
  v3 = a1;
  v4 = a1 + 56;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  v9 = 0;
  v37 = v8;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v38 = v9;
      v11 = v10 | (v9 << 6);
      goto LABEL_21;
    }
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v12 >= v8)
      goto LABEL_31;
    v13 = *(_QWORD *)(v4 + 8 * v12);
    v14 = v9 + 1;
    if (!v13)
    {
      v14 = v9 + 2;
      if (v9 + 2 >= v8)
        goto LABEL_31;
      v13 = *(_QWORD *)(v4 + 8 * v14);
      if (!v13)
      {
        v14 = v9 + 3;
        if (v9 + 3 >= v8)
          goto LABEL_31;
        v13 = *(_QWORD *)(v4 + 8 * v14);
        if (!v13)
          break;
      }
    }
LABEL_20:
    v7 = (v13 - 1) & v13;
    v38 = v14;
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_21:
    v16 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v18 = *v16;
    v17 = v16[1];
    v19 = *(void **)(v2 + 16);
    swift_bridgeObjectRetain();
    v20 = (void *)sub_1A469087C();
    v21 = (void *)sub_1A469087C();
    v22 = objc_msgSend(v19, sel_levelForFactor_withNamespaceName_, v20, v21);

    if (!v22)
      goto LABEL_26;
    v23 = objc_msgSend(v22, sel_directoryValue);

    if (!v23)
      goto LABEL_34;
    v24 = objc_msgSend(v23, sel_path);

    if (v24)
    {
      swift_bridgeObjectRelease();
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

      v25 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      v26 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      v27 = objc_msgSend(v25, sel_fileExistsAtPath_, v26);

      v9 = v38;
      if ((v27 & 1) == 0)
      {
LABEL_31:
        swift_release();
        return;
      }
    }
    else
    {
LABEL_26:
      if (qword_1ED240038 != -1)
        swift_once();
      v28 = sub_1A4690318();
      __swift_project_value_buffer(v28, (uint64_t)qword_1ED240018);
      swift_bridgeObjectRetain();
      v29 = sub_1A469030C();
      v30 = sub_1A4690FF0();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = swift_slowAlloc();
        v32 = v3;
        v33 = v4;
        v34 = v2;
        v35 = swift_slowAlloc();
        v39 = v35;
        *(_DWORD *)v31 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v31 + 4) = sub_1A4431120(v18, v17, &v39);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A442D000, v29, v30, "REMTrialClient: Failed to find path for the factor, ignore the factor: %s", (uint8_t *)v31, 0xCu);
        swift_arrayDestroy();
        v36 = v35;
        v2 = v34;
        v4 = v33;
        v3 = v32;
        v8 = v37;
        MEMORY[0x1A85A0114](v36, -1, -1);
        MEMORY[0x1A85A0114](v31, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v9 = v38;
    }
  }
  v15 = v9 + 4;
  if (v9 + 4 >= v8)
    goto LABEL_31;
  v13 = *(_QWORD *)(v4 + 8 * v15);
  if (v13)
  {
    v14 = v9 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v14 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v14 >= v8)
      goto LABEL_31;
    v13 = *(_QWORD *)(v4 + 8 * v14);
    ++v15;
    if (v13)
      goto LABEL_20;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

id sub_1A44FB4E8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  unsigned int v3;
  id v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + 16);
  sub_1A462EDF8((uint64_t)&unk_1E4C10700);
  swift_arrayDestroy();
  v2 = (void *)sub_1A4690D5C();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  v3 = objc_msgSend(v1, sel_immediateDownloadForNamespaceNames_allowExpensiveNetworking_error_, v2, 0, v6);

  if (v3)
    return v6[0];
  v5 = v6[0];
  sub_1A468FE68();

  return (id)swift_willThrow();
}

void sub_1A44FB5EC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD v11[6];

  v6 = *(void **)(v3 + 16);
  v7 = (void *)sub_1A4690B94();
  v8 = (void *)sub_1A469087C();
  if (qword_1ED2427A8 != -1)
    swift_once();
  v9 = qword_1ED241960;
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC0A10]), sel_initWithAllowsCellular_discretionaryBehavior_, 0, 0);
  if (a2)
  {
    v11[4] = a2;
    v11[5] = a3;
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 1107296256;
    v11[2] = sub_1A4621D78;
    v11[3] = &block_descriptor_5;
    a2 = _Block_copy(v11);
    swift_retain();
    swift_release();
  }
  objc_msgSend(v6, sel_downloadLevelsForFactors_withNamespace_queue_options_progress_completion_, v7, v8, v9, v10, 0, a2);
  _Block_release(a2);

}

void sub_1A44FB744(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  void *v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;

  v58 = a1;
  v56 = sub_1A468FE8C();
  v54 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v55 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A468FF7C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v53 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v51 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v51 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  v13 = MEMORY[0x1E0C80A78](v12);
  v52 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v51 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v51 - v18;
  if (qword_1ED23FC30 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v12, (uint64_t)qword_1EE71EF10);
  swift_beginAccess();
  sub_1A44E245C(v20, (uint64_t)v19);
  v57 = v4;
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  v22 = v21(v19, 1, v3);
  sub_1A445404C((uint64_t)v19, &qword_1ED243160);
  if (v22 != 1)
  {
    sub_1A44E245C(v20, (uint64_t)v17);
    if (v21(v17, 1, v3) != 1)
    {
      v35 = v57;
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v9, v17, v3);
      sub_1A468FEEC();
      v36 = *(void (**)(char *, uint64_t))(v35 + 8);
      v36(v9, v3);
      sub_1A468FEEC();
      v36(v11, v3);
      return;
    }
    sub_1A445404C((uint64_t)v17, &qword_1ED243160);
    v33 = (void *)objc_opt_self();
    v34 = (void *)sub_1A469087C();
    objc_msgSend(v33, sel_internalErrorWithDebugDescription_, v34);

    goto LABEL_19;
  }
  sub_1A44FC220();
  v23 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_daemonUserDefaults);
  v24 = objc_msgSend(v23, sel_trialAssetsDirectoryDebugOverride);

  if (!v24)
  {
    v37 = *(void **)(v1 + 16);
    v38 = (void *)sub_1A469087C();
    v39 = (void *)sub_1A469087C();
    v40 = objc_msgSend(v37, sel_levelForFactor_withNamespaceName_, v38, v39);

    if (v40)
    {
      v41 = objc_msgSend(v40, sel_fileValue);
      if (v41)
      {
        v42 = v41;
        v43 = objc_msgSend(v41, sel_path);

        if (v43)
        {
          _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

          sub_1A468FEBC();
          swift_bridgeObjectRelease();
        }
        else
        {
          v59 = 0;
          v60 = 0xE000000000000000;
          sub_1A4691410();
          swift_bridgeObjectRelease();
          sub_1A44FC25C();
          swift_allocError();
          *(_QWORD *)v50 = 0xD000000000000035;
          *(_QWORD *)(v50 + 8) = 0x80000001A46BEE30;
          *(_BYTE *)(v50 + 16) = 2;
          swift_willThrow();

        }
      }
      else
      {
        __break(1u);
      }
      return;
    }
    v59 = 0;
    v60 = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    sub_1A44FC25C();
    swift_allocError();
    *(_QWORD *)v49 = 0xD000000000000035;
    *(_QWORD *)(v49 + 8) = 0x80000001A46BEE30;
    *(_BYTE *)(v49 + 16) = 1;
LABEL_19:
    swift_willThrow();
    return;
  }
  v25 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v27 = v26;

  if (qword_1ED240038 != -1)
    swift_once();
  v28 = sub_1A4690318();
  __swift_project_value_buffer(v28, (uint64_t)qword_1ED240018);
  swift_bridgeObjectRetain_n();
  v29 = sub_1A469030C();
  v30 = sub_1A4690FE4();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v59 = v32;
    *(_DWORD *)v31 = 136315138;
    swift_bridgeObjectRetain();
    v61 = sub_1A4431120(v25, v27, &v59);
    sub_1A46911D0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A442D000, v29, v30, "REMTrialClient.groceryLocaleMappingFileURL, overrided assets dir: %s", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v32, -1, -1);
    MEMORY[0x1A85A0114](v31, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v45 = v56;
  v44 = v57;
  v47 = v54;
  v46 = v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v52, 1, 1, v3);
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v46, *MEMORY[0x1E0CAFD78], v45);
  v48 = v53;
  sub_1A468FF64();
  sub_1A468FEF8();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v48, v3);
}

uint64_t REMTrialClient.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t REMTrialClient.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1A44FBEC4(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1A44FBF28;
  return v6(a1);
}

uint64_t sub_1A44FBF28()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A44FBF74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18[2];
  uint64_t v19;

  v19 = a1;
  v4 = a2 + 56;
  v5 = 1 << *(_BYTE *)(a2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a2 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * i);
    v17 = v16[1];
    v18[0] = *v16;
    v18[1] = v17;
    swift_bridgeObjectRetain();
    sub_1A44F9AFC((uint64_t)&v19, v18);
    if (v2)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v10 >= v8)
      goto LABEL_26;
    v14 = *(_QWORD *)(v4 + 8 * v10);
    if (!v14)
      break;
LABEL_17:
    v7 = (v14 - 1) & v14;
  }
  v15 = v10 + 1;
  if (v10 + 1 >= v8)
    goto LABEL_26;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v10 + 2;
  if (v10 + 2 >= v8)
    goto LABEL_26;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v10 + 3;
  if (v10 + 3 >= v8)
    goto LABEL_26;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v10 + 4;
  if (v10 + 4 >= v8)
  {
LABEL_26:
    swift_release();
    return v19;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_16:
    v10 = v15;
    goto LABEL_17;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      goto LABEL_26;
    v14 = *(_QWORD *)(v4 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A44FC13C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A44FC178(char a1, void *a2)
{
  uint64_t v2;

  sub_1A44F9DDC(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1A44FC184(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_1A44FC194()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A44FC1C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1A4452388;
  v3[3] = v2;
  return swift_task_switch();
}

unint64_t sub_1A44FC220()
{
  unint64_t result;

  result = qword_1ED240F80;
  if (!qword_1ED240F80)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED240F80);
  }
  return result;
}

unint64_t sub_1A44FC25C()
{
  unint64_t result;

  result = qword_1EE71EF38;
  if (!qword_1EE71EF38)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469C6B4, &type metadata for REMTrialClientError);
    atomic_store(result, (unint64_t *)&qword_1EE71EF38);
  }
  return result;
}

unint64_t sub_1A44FC2A4()
{
  unint64_t result;

  result = qword_1EE71EF40;
  if (!qword_1EE71EF40)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMTrialNamespace, &type metadata for REMTrialNamespace);
    atomic_store(result, (unint64_t *)&qword_1EE71EF40);
  }
  return result;
}

unint64_t sub_1A44FC2EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE71EF48;
  if (!qword_1EE71EF48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71EF50);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE71EF48);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for REMTrialNamespace(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A44FC378 + 4 * byte_1A469C5A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A44FC398 + 4 * byte_1A469C5A5[v4]))();
}

_BYTE *sub_1A44FC378(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A44FC398(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A44FC3A0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A44FC3A8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A44FC3B0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A44FC3B8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMTrialNamespace()
{
  return &type metadata for REMTrialNamespace;
}

uint64_t type metadata accessor for REMTrialClient()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMTrialClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMTrialClient.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of REMTrialClient.version(for:)()
{
  uint64_t v0;
  unint64_t v1;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

uint64_t dispatch thunk of REMTrialClient.deploymentId(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of REMTrialClient.requestGroceryModelAssetsForLocales(withLocaleIdentifiers:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of REMTrialClient.loadGroceryLocaleMapping()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of REMTrialClient.groceryDirectoryURL(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t sub_1A44FC4AC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for REMTrialClientError(uint64_t a1)
{
  return sub_1A44FC4D4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1A44FC4D4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s19ReminderKitInternal19REMTrialClientErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A44FC4AC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for REMTrialClientError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A44FC4AC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A44FC4D4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for REMTrialClientError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A44FC4D4(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for REMTrialClientError()
{
  return &type metadata for REMTrialClientError;
}

uint64_t sub_1A44FC5DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A44FC600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A4452388;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE71EF58 + dword_1EE71EF58))(a1, v4);
}

uint64_t sub_1A44FC670(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  int64_t v47;
  unint64_t v48;
  unint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;

  v3 = sub_1A468FBEC();
  v74 = *(_QWORD *)(v3 - 8);
  v75 = v3;
  MEMORY[0x1E0C80A78](v3);
  v73 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C8);
  MEMORY[0x1E0C80A78](v5);
  v72 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
    v8 = sub_1A4691308();
  else
    v8 = *(_QWORD *)(a1 + 16);
  v87 = MEMORY[0x1E0DEE9D8];
  sub_1A445A8BC(0, v8 & ~(v8 >> 63), 0);
  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_1A46912D8();
    sub_1A444AA40(0, &qword_1EE71F360);
    sub_1A450F828();
    result = sub_1A4690DB0();
    a1 = v82;
    v70 = v83;
    v10 = v84;
    v7 = v85;
    v11 = v86;
    if ((v8 & 0x8000000000000000) == 0)
      goto LABEL_6;
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v37 = -1 << *(_BYTE *)(a1 + 32);
  v38 = *(_QWORD *)(a1 + 56);
  v70 = a1 + 56;
  v39 = ~v37;
  v40 = -v37;
  if (v40 < 64)
    v41 = ~(-1 << v40);
  else
    v41 = -1;
  v11 = v41 & v38;
  result = swift_bridgeObjectRetain();
  v10 = v39;
  if (v8 < 0)
    goto LABEL_42;
LABEL_6:
  v1 = MEMORY[0x1E0DEE9B0];
  v66 = v10;
  if (v8)
  {
    v71 = v7;
    v12 = 0;
    v68 = a1 & 0x7FFFFFFFFFFFFFFFLL;
    v69 = (unint64_t)(v10 + 64) >> 6;
    v65 = v69 - 1;
    v67 = MEMORY[0x1E0DEE9B0] + 8;
    v76 = a1;
    do
    {
      if (v12 == v8)
      {
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
        return result;
      }
      if (a1 < 0)
      {
        result = sub_1A4691338();
        if (!result)
          goto LABEL_77;
        v78 = result;
        sub_1A444AA40(0, &qword_1EE71F360);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v15 = v80;
        result = swift_unknownObjectRelease();
      }
      else
      {
        if (v11)
        {
          v13 = __clz(__rbit64(v11));
          v11 &= v11 - 1;
          v14 = v13 | (v71 << 6);
        }
        else
        {
          v16 = v71 + 1;
          if (__OFADD__(v71, 1))
            goto LABEL_75;
          if (v16 >= v69)
            goto LABEL_77;
          v17 = *(_QWORD *)(v70 + 8 * v16);
          v18 = v71 + 1;
          if (!v17)
          {
            v18 = v71 + 2;
            if ((uint64_t)(v71 + 2) >= v69)
              goto LABEL_77;
            v17 = *(_QWORD *)(v70 + 8 * v18);
            if (!v17)
            {
              v18 = v71 + 3;
              if ((uint64_t)(v71 + 3) >= v69)
                goto LABEL_77;
              v17 = *(_QWORD *)(v70 + 8 * v18);
              if (!v17)
              {
                v18 = v71 + 4;
                if ((uint64_t)(v71 + 4) >= v69)
                  goto LABEL_77;
                v17 = *(_QWORD *)(v70 + 8 * v18);
                if (!v17)
                {
                  v18 = v71 + 5;
                  if ((uint64_t)(v71 + 5) >= v69)
                    goto LABEL_77;
                  v17 = *(_QWORD *)(v70 + 8 * v18);
                  if (!v17)
                  {
                    v19 = v71 + 6;
                    do
                    {
                      if (v69 == v19)
                        goto LABEL_77;
                      v17 = *(_QWORD *)(v70 + 8 * v19++);
                    }
                    while (!v17);
                    v18 = v19 - 1;
                  }
                }
              }
            }
          }
          v11 = (v17 - 1) & v17;
          v14 = __clz(__rbit64(v17)) + (v18 << 6);
          v71 = v18;
        }
        result = (uint64_t)*(id *)(*(_QWORD *)(a1 + 48) + 8 * v14);
        v15 = (void *)result;
      }
      if (!v15)
        goto LABEL_77;
      v20 = v8;
      v77 = v11;
      v21 = objc_msgSend(v15, sel_name);
      v22 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v24 = v23;

      v25 = (uint64_t)v72;
      sub_1A469018C();
      v26 = sub_1A4690210();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 0, 1, v26);
      v80 = (void *)v22;
      v81 = v24;
      sub_1A4466118();
      v78 = sub_1A4691260();
      v79 = v27;
      v28 = v73;
      sub_1A468FBC8();
      v29 = sub_1A4691218();
      v31 = v30;
      (*(void (**)(char *, uint64_t))(v74 + 8))(v28, v75);
      swift_bridgeObjectRelease();
      sub_1A445404C(v25, &qword_1ED23E4C8);

      swift_bridgeObjectRelease();
      v32 = v87;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1A445A8BC(0, *(_QWORD *)(v32 + 16) + 1, 1);
        v32 = v87;
      }
      v8 = v20;
      v1 = MEMORY[0x1E0DEE9B0];
      v34 = *(_QWORD *)(v32 + 16);
      v33 = *(_QWORD *)(v32 + 24);
      if (v34 >= v33 >> 1)
      {
        result = sub_1A445A8BC(v33 > 1, v34 + 1, 1);
        v32 = v87;
      }
      ++v12;
      *(_QWORD *)(v32 + 16) = v34 + 1;
      v35 = v32 + 16 * v34;
      *(_QWORD *)(v35 + 32) = v29;
      *(_QWORD *)(v35 + 40) = v31;
      a1 = v76;
      v11 = v77;
    }
    while (v12 != v8);
    v7 = v71;
    v36 = v65;
    goto LABEL_44;
  }
LABEL_43:
  v68 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v69 = (unint64_t)(v10 + 64) >> 6;
  v36 = v69 - 1;
LABEL_44:
  v71 = v36 - 5;
  v67 = v70 + 48;
  v76 = a1;
  v77 = v1 + 8;
  if (a1 < 0)
    goto LABEL_47;
  while (1)
  {
    if (v11)
    {
      v42 = (v11 - 1) & v11;
      v43 = __clz(__rbit64(v11)) | (v7 << 6);
      v44 = v7;
      goto LABEL_66;
    }
    v47 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_76;
    if (v47 >= v69)
      goto LABEL_73;
    v48 = *(_QWORD *)(v70 + 8 * v47);
    v44 = v7 + 1;
    if (!v48)
    {
      v44 = v7 + 2;
      if ((uint64_t)(v7 + 2) >= v69)
        goto LABEL_73;
      v48 = *(_QWORD *)(v70 + 8 * v44);
      if (!v48)
      {
        v44 = v7 + 3;
        if ((uint64_t)(v7 + 3) >= v69)
          goto LABEL_73;
        v48 = *(_QWORD *)(v70 + 8 * v44);
        if (!v48)
        {
          v44 = v7 + 4;
          if ((uint64_t)(v7 + 4) >= v69)
            goto LABEL_73;
          v48 = *(_QWORD *)(v70 + 8 * v44);
          if (!v48)
          {
            v44 = v7 + 5;
            if ((uint64_t)(v7 + 5) >= v69)
              goto LABEL_73;
            v48 = *(_QWORD *)(v70 + 8 * v44);
            if (!v48)
              break;
          }
        }
      }
    }
LABEL_65:
    v42 = (v48 - 1) & v48;
    v43 = __clz(__rbit64(v48)) + (v44 << 6);
LABEL_66:
    v46 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v43);
    if (!v46)
      goto LABEL_73;
    while (1)
    {
      v50 = objc_msgSend(v46, sel_name, v65, v66);
      v51 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v53 = v52;

      v54 = (uint64_t)v72;
      sub_1A469018C();
      v55 = sub_1A4690210();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v54, 0, 1, v55);
      v80 = (void *)v51;
      v81 = v53;
      sub_1A4466118();
      v78 = sub_1A4691260();
      v79 = v56;
      v57 = v73;
      sub_1A468FBC8();
      v58 = sub_1A4691218();
      v60 = v59;
      (*(void (**)(char *, uint64_t))(v74 + 8))(v57, v75);
      swift_bridgeObjectRelease();
      sub_1A445404C(v54, &qword_1ED23E4C8);

      swift_bridgeObjectRelease();
      v61 = v87;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1A445A8BC(0, *(_QWORD *)(v61 + 16) + 1, 1);
        v61 = v87;
      }
      v63 = *(_QWORD *)(v61 + 16);
      v62 = *(_QWORD *)(v61 + 24);
      if (v63 >= v62 >> 1)
      {
        result = sub_1A445A8BC(v62 > 1, v63 + 1, 1);
        v61 = v87;
      }
      *(_QWORD *)(v61 + 16) = v63 + 1;
      v64 = v61 + 16 * v63;
      *(_QWORD *)(v64 + 32) = v58;
      *(_QWORD *)(v64 + 40) = v60;
      v7 = v44;
      v11 = v42;
      a1 = v76;
      if ((v76 & 0x8000000000000000) == 0)
        break;
LABEL_47:
      v45 = sub_1A4691338();
      if (v45)
      {
        v78 = v45;
        sub_1A444AA40(0, &qword_1EE71F360);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v46 = v80;
        swift_unknownObjectRelease();
        v44 = v7;
        v42 = v11;
        if (v46)
          continue;
      }
      goto LABEL_73;
    }
  }
  v49 = v7;
  while (v71 != v49)
  {
    v48 = *(_QWORD *)(v67 + 8 * v49++);
    if (v48)
    {
      v44 = v49 + 5;
      goto LABEL_65;
    }
  }
LABEL_73:
  sub_1A4460EDC();
  return v87;
}

ReminderKitInternal::REMSuggestedAttributeOutput::Source __swiftcall REMSuggestedAttributeOutput.Source.init(pipeline:)(ReminderKitInternal::REMSuggestedAttributeOutput::Pipeline pipeline)
{
  ReminderKitInternal::REMSuggestedAttributeOutput::Source *v1;
  ReminderKitInternal::REMSuggestedAttributeOutput::Source *v2;
  char v3;
  uint64_t inited;
  ReminderKitInternal::REMSuggestedAttributeOutput::Source result;

  v2 = v1;
  v3 = *(_BYTE *)pipeline;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4695C10;
  *(_BYTE *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = MEMORY[0x1E0DEE9E8];
  sub_1A443D024(inited);
  v2->predictors._rawValue = result.predictors._rawValue;
  return result;
}

uint64_t REMSuggestedList.__allocating_init(stringLiteral:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;

  v0 = sub_1A46900FC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  sub_1A46900C0();
  swift_bridgeObjectRelease();
  sub_1A444ABF4((uint64_t)v9, (uint64_t)v7, &qword_1ED243170);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v7, 1, v0) == 1)
  {
    sub_1A445404C((uint64_t)v9, &qword_1ED243170);
    sub_1A445404C((uint64_t)v7, &qword_1ED243170);
    v10 = 0xE500000000000000;
    v11 = 0x296C696E28;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v7, v0);
    v11 = sub_1A46900CC();
    v10 = v12;
    sub_1A445404C((uint64_t)v9, &qword_1ED243170);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v11;
  *(_QWORD *)(result + 24) = v10;
  return result;
}

uint64_t sub_1A44FD0A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE71EF68);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE71EF68);
  if (qword_1ED2427D8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256848);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t static REMSuggestedWeekDay.nilValue.getter()
{
  return 0;
}

uint64_t REMSuggestedWeekDay.CodingKeys.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1A44FF5C8(a1);
}

uint64_t REMSuggestedWeekDay.CodingKeys.init(stringValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1A44FF5C8(a1);
}

uint64_t REMSuggestedWeekDay.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedWeekDay.CodingKeys.rawValue.getter()
{
  return 0x64497373616C63;
}

uint64_t REMSuggestedWeekDay.CodingKeys.stringValue.getter()
{
  return 0x64497373616C63;
}

uint64_t sub_1A44FD194()
{
  return sub_1A4505150();
}

uint64_t sub_1A44FD1AC()
{
  return sub_1A4690948();
}

uint64_t sub_1A44FD1C4()
{
  return sub_1A45051D4();
}

uint64_t sub_1A44FD1DC@<X0>(BOOL *a1@<X8>)
{
  return sub_1A4505228(a1);
}

uint64_t sub_1A44FD1E8()
{
  return 0x64497373616C63;
}

uint64_t sub_1A44FD200@<X0>(BOOL *a1@<X8>)
{
  return sub_1A45052BC(a1);
}

uint64_t sub_1A44FD20C()
{
  sub_1A450A914();
  return sub_1A4691DB8();
}

uint64_t sub_1A44FD234()
{
  sub_1A450A914();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedWeekDay.__allocating_init(_:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1A46918D8();
  *(_QWORD *)(v0 + 24) = v1;
  return v0;
}

uint64_t REMSuggestedWeekDay.init(_:)()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = sub_1A46918D8();
  *(_QWORD *)(v0 + 24) = v1;
  return v0;
}

uint64_t REMSuggestedWeekDay.__allocating_init(stringLiteral:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  REMSuggestedWeekDay.init(stringLiteral:)(a1, a2);
  return v4;
}

uint64_t REMSuggestedWeekDay.init(stringLiteral:)(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  char v26;
  _QWORD v27[3];

  v3 = v2;
  v5 = HIBYTE(a2) & 0xF;
  v6 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v7 = v5;
  else
    v7 = result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    swift_bridgeObjectRelease();
    v21 = 0;
LABEL_47:
    v27[0] = v21;
    *(_QWORD *)(v3 + 16) = sub_1A46918D8();
    *(_QWORD *)(v3 + 24) = v22;
    return v3;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v9 = (uint64_t)sub_1A45D8530(result, a2, 10);
    v11 = v26;
LABEL_44:
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
      v21 = 0;
    else
      v21 = v9;
    goto LABEL_47;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_1A46914E8();
    v9 = (uint64_t)sub_1A45D828C(v8, v6, 10);
    v11 = v10 & 1;
    goto LABEL_44;
  }
  v27[0] = result;
  v27[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v5)
      goto LABEL_58;
    if (v5 == 1 || (BYTE1(result) - 48) > 9u)
      goto LABEL_31;
    v9 = (BYTE1(result) - 48);
    if (v5 != 2)
    {
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_31;
      v9 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      v12 = v5 - 3;
      if (v12)
      {
        v13 = (unsigned __int8 *)v27 + 3;
        while (1)
        {
          v14 = *v13 - 48;
          if (v14 > 9)
            goto LABEL_31;
          v15 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            goto LABEL_31;
          v9 = v15 + v14;
          if (__OFADD__(v15, v14))
            goto LABEL_31;
          v11 = 0;
          ++v13;
          if (!--v12)
            goto LABEL_44;
        }
      }
    }
LABEL_43:
    v11 = 0;
    goto LABEL_44;
  }
  if (result != 45)
  {
    if (!v5 || (result - 48) > 9u)
      goto LABEL_31;
    v9 = (result - 48);
    if (v5 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_31;
      v9 = 10 * (result - 48) + (BYTE1(result) - 48);
      v16 = v5 - 2;
      if (v16)
      {
        v17 = (unsigned __int8 *)v27 + 2;
        while (1)
        {
          v18 = *v17 - 48;
          if (v18 > 9)
            goto LABEL_31;
          v19 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            goto LABEL_31;
          v9 = v19 + v18;
          if (__OFADD__(v19, v18))
            goto LABEL_31;
          v11 = 0;
          ++v17;
          if (!--v16)
            goto LABEL_44;
        }
      }
    }
    goto LABEL_43;
  }
  if (v5)
  {
    if (v5 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v5 == 2)
      {
        v11 = 0;
        v9 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        v9 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        v20 = v5 - 3;
        if (!v20)
          goto LABEL_43;
        v23 = (unsigned __int8 *)v27 + 3;
        while (1)
        {
          v24 = *v23 - 48;
          if (v24 > 9)
            break;
          v25 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            break;
          v9 = v25 - v24;
          if (__OFSUB__(v25, v24))
            break;
          v11 = 0;
          ++v23;
          if (!--v20)
            goto LABEL_44;
        }
      }
    }
LABEL_31:
    v9 = 0;
    v11 = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

uint64_t REMSuggestedWeekDay.__allocating_init(from:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v2 = sub_1A46902AC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A468FDE4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A444ABF4(a1, (uint64_t)v8, &qword_1ED23E4C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_1A469027C();
    v15 = DateComponents.dayOfWeek(with:)((uint64_t)v5);
    v17 = v16;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((v17 & 1) != 0)
    {
      v13 = swift_allocObject();
    }
    else
    {
      v13 = swift_allocObject();
      if ((unint64_t)(v15 - 8) > 0xFFFFFFFFFFFFFFF8)
        goto LABEL_8;
    }
    v15 = 0;
LABEL_8:
    v21 = v15;
    *(_QWORD *)(v13 + 16) = sub_1A46918D8();
    *(_QWORD *)(v13 + 24) = v18;
    sub_1A445404C(a1, &qword_1ED23E4C0);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return v13;
  }
  sub_1A445404C((uint64_t)v8, &qword_1ED23E4C0);
  v13 = swift_allocObject();
  v21 = 0;
  *(_QWORD *)(v13 + 16) = sub_1A46918D8();
  *(_QWORD *)(v13 + 24) = v14;
  sub_1A445404C(a1, &qword_1ED23E4C0);
  return v13;
}

uint64_t REMSuggestedWeekDay.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  REMSuggestedWeekDay.init(from:)(a1);
  return v2;
}

_QWORD *REMSuggestedWeekDay.init(from:)(_QWORD *a1)
{
  return sub_1A44FFB4C(a1, &qword_1ED2425A8, (void (*)(void))sub_1A450A914);
}

void REMSuggestedWeekDay.value.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  _QWORD v22[3];

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = HIBYTE(v1) & 0xF;
  v4 = v2 & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0)
    v5 = HIBYTE(v1) & 0xF;
  else
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (!v5)
    return;
  if ((v1 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1A45D8530(v2, v1, 10);
    swift_bridgeObjectRelease();
    return;
  }
  if ((v1 & 0x2000000000000000) == 0)
  {
    if ((v2 & 0x1000000000000000) != 0)
      v6 = (unsigned __int8 *)((v1 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v6 = (unsigned __int8 *)sub_1A46914E8();
    sub_1A45D828C(v6, v4, 10);
    return;
  }
  v22[0] = *(_QWORD *)(v0 + 16);
  v22[1] = v1 & 0xFFFFFFFFFFFFFFLL;
  if (v2 == 43)
  {
    if (!v3)
      goto LABEL_54;
    if (v3 != 1 && (BYTE1(v2) - 48) <= 9u && v3 != 2 && (BYTE2(v2) - 48) <= 9u)
    {
      v7 = 10 * (BYTE1(v2) - 48) + (BYTE2(v2) - 48);
      v8 = v3 - 3;
      if (v8)
      {
        v9 = (unsigned __int8 *)v22 + 3;
        do
        {
          v10 = *v9 - 48;
          if (v10 > 9)
            break;
          v11 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            break;
          v7 = v11 + v10;
          if (__OFADD__(v11, v10))
            break;
          ++v9;
          --v8;
        }
        while (v8);
      }
    }
  }
  else
  {
    if (v2 == 45)
    {
      if (v3)
      {
        if (v3 != 1 && (BYTE1(v2) - 48) <= 9u && v3 != 2 && (BYTE2(v2) - 48) <= 9u)
        {
          v17 = -10 * (BYTE1(v2) - 48) - (BYTE2(v2) - 48);
          v18 = v3 - 3;
          if (v18)
          {
            v19 = (unsigned __int8 *)v22 + 3;
            do
            {
              v20 = *v19 - 48;
              if (v20 > 9)
                break;
              v21 = 10 * v17;
              if ((unsigned __int128)(v17 * (__int128)10) >> 64 != (10 * v17) >> 63)
                break;
              v17 = v21 - v20;
              if (__OFSUB__(v21, v20))
                break;
              ++v19;
              --v18;
            }
            while (v18);
          }
        }
        return;
      }
      __break(1u);
LABEL_54:
      __break(1u);
      return;
    }
    if (v3)
    {
      if ((v2 - 48) <= 9u && v3 != 1 && (BYTE1(v2) - 48) <= 9u)
      {
        v12 = 10 * (v2 - 48) + (BYTE1(v2) - 48);
        v13 = v3 - 2;
        if (v13)
        {
          v14 = (unsigned __int8 *)v22 + 2;
          do
          {
            v15 = *v14 - 48;
            if (v15 > 9)
              break;
            v16 = 10 * v12;
            if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
              break;
            v12 = v16 + v15;
            if (__OFADD__(v16, v15))
              break;
            ++v14;
            --v13;
          }
          while (v13);
        }
      }
    }
  }
}

BOOL REMSuggestedWeekDay.isNil.getter()
{
  uint64_t v0;

  REMSuggestedWeekDay.value.getter();
  return v0 == 0;
}

uint64_t REMSuggestedWeekDay.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  uint64_t v22;
  char v23;
  char v24;
  _QWORD v25[3];

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = HIBYTE(v1) & 0xF;
  v4 = v2 & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0)
    v5 = HIBYTE(v1) & 0xF;
  else
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (!v5)
    return 0x296C696E28;
  if ((v1 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v9 = (uint64_t)sub_1A45D8530(v2, v1, 10);
    v24 = v23;
    swift_bridgeObjectRelease();
    if ((v24 & 1) != 0)
      return 0x296C696E28;
    goto LABEL_38;
  }
  if ((v1 & 0x2000000000000000) == 0)
  {
    if ((v2 & 0x1000000000000000) != 0)
      v6 = (unsigned __int8 *)((v1 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v6 = (unsigned __int8 *)sub_1A46914E8();
    v7 = sub_1A45D828C(v6, v4, 10);
    if ((v8 & 1) == 0)
    {
      v9 = (uint64_t)v7;
      goto LABEL_38;
    }
    return 0x296C696E28;
  }
  v25[0] = *(_QWORD *)(v0 + 16);
  v25[1] = v1 & 0xFFFFFFFFFFFFFFLL;
  if (v2 != 43)
  {
    if (v2 != 45)
    {
      if (!v3 || (v2 - 48) > 9u)
        goto LABEL_34;
      v9 = (v2 - 48);
      if (v3 != 1)
      {
        if ((BYTE1(v2) - 48) > 9u)
          goto LABEL_34;
        v9 = 10 * (v2 - 48) + (BYTE1(v2) - 48);
        if (v3 != 2)
        {
          if ((BYTE2(v2) - 48) > 9u)
            goto LABEL_34;
          v9 = 10 * v9 + (BYTE2(v2) - 48);
          v15 = v3 - 3;
          if (v3 != 3)
          {
            v16 = (unsigned __int8 *)v25 + 3;
            while (1)
            {
              v17 = *v16 - 48;
              if (v17 > 9)
                goto LABEL_34;
              v18 = 10 * v9;
              if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
                goto LABEL_34;
              v9 = v18 + v17;
              if (__OFADD__(v18, v17))
                goto LABEL_34;
              LOBYTE(v3) = 0;
              ++v16;
              if (!--v15)
                goto LABEL_37;
            }
          }
        }
      }
      goto LABEL_36;
    }
    if (v3)
    {
      if (v3 != 1)
      {
        if ((BYTE1(v2) - 48) > 9u)
          goto LABEL_34;
        if (v3 == 2)
        {
          LOBYTE(v3) = 0;
          v9 = -(uint64_t)(BYTE1(v2) - 48);
          goto LABEL_37;
        }
        if ((BYTE2(v2) - 48) > 9u)
          goto LABEL_34;
        v9 = -10 * (BYTE1(v2) - 48) - (BYTE2(v2) - 48);
        if (v3 != 3)
        {
          if ((BYTE3(v2) - 48) <= 9u)
          {
            v9 = 10 * (int)v9 - (BYTE3(v2) - 48);
            v19 = v3 - 4;
            if (v3 != 4)
            {
              v20 = (unsigned __int8 *)v25 + 4;
              while (1)
              {
                v21 = *v20 - 48;
                if (v21 > 9)
                  goto LABEL_34;
                v22 = 10 * v9;
                if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
                  goto LABEL_34;
                v9 = v22 - v21;
                if (__OFSUB__(v22, v21))
                  goto LABEL_34;
                LOBYTE(v3) = 0;
                ++v20;
                if (!--v19)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v9 = 0;
          LOBYTE(v3) = 1;
          goto LABEL_37;
        }
LABEL_36:
        LOBYTE(v3) = 0;
        goto LABEL_37;
      }
      goto LABEL_69;
    }
    __break(1u);
LABEL_71:
    __break(1u);
    JUMPOUT(0x1A44FDFF8);
  }
  if (!v3)
    goto LABEL_71;
  if (v3 != 1)
  {
    if ((BYTE1(v2) - 48) > 9u)
      goto LABEL_34;
    v9 = (BYTE1(v2) - 48);
    if (v3 != 2)
    {
      if ((BYTE2(v2) - 48) > 9u)
        goto LABEL_34;
      v9 = 10 * (BYTE1(v2) - 48) + (BYTE2(v2) - 48);
      if (v3 != 3)
      {
        if ((BYTE3(v2) - 48) > 9u)
          goto LABEL_34;
        v9 = 10 * v9 + (BYTE3(v2) - 48);
        v10 = v3 - 4;
        if (v3 != 4)
        {
          v11 = (unsigned __int8 *)v25 + 4;
          while (1)
          {
            v12 = *v11 - 48;
            if (v12 > 9)
              goto LABEL_34;
            v13 = 10 * v9;
            if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
              goto LABEL_34;
            v9 = v13 + v12;
            if (__OFADD__(v13, v12))
              goto LABEL_34;
            LOBYTE(v3) = 0;
            ++v11;
            if (!--v10)
              goto LABEL_37;
          }
        }
      }
    }
    goto LABEL_36;
  }
LABEL_69:
  v9 = 0;
LABEL_37:
  if ((v3 & 1) != 0)
    return 0x296C696E28;
LABEL_38:
  result = 0x7961646E7553;
  switch(v9)
  {
    case 1:
      return result;
    case 2:
      result = 0x7961646E6F4DLL;
      break;
    case 3:
      result = 0x79616473657554;
      break;
    case 4:
      result = 0x616473656E646557;
      break;
    case 5:
      result = 0x7961647372756854;
      break;
    case 6:
      result = 0x796164697246;
      break;
    case 7:
      result = 0x7961647275746153;
      break;
    default:
      return 0x296C696E28;
  }
  return result;
}

void REMSuggestedWeekDay.__allocating_init(_:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void REMSuggestedWeekDay.init(_:)()
{
  sub_1A44FFCDC();
}

uint64_t static REMSuggestedList.defaultValue.getter()
{
  return swift_initStaticObject();
}

uint64_t REMSuggestedList.CodingKeys.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1A44FF5C8(a1);
}

uint64_t REMSuggestedList.CodingKeys.init(stringValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1A44FF5C8(a1);
}

void REMSuggestedList.CodingKeys.init(intValue:)(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t REMSuggestedList.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedList.CodingKeys.rawValue.getter()
{
  return 0x64497373616C63;
}

uint64_t REMSuggestedList.CodingKeys.stringValue.getter()
{
  return 0x64497373616C63;
}

uint64_t sub_1A44FE0CC@<X0>(BOOL *a1@<X8>)
{
  return sub_1A4505228(a1);
}

void sub_1A44FE0D8(_QWORD *a1@<X8>)
{
  *a1 = 0x64497373616C63;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1A44FE0F4@<X0>(BOOL *a1@<X8>)
{
  return sub_1A45052BC(a1);
}

uint64_t sub_1A44FE100()
{
  sub_1A450F75C();
  return sub_1A4691DB8();
}

uint64_t sub_1A44FE128()
{
  sub_1A450F75C();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedList.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMSuggestedList.listIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMSuggestedList.__allocating_init(from:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;

  v2 = sub_1A46900FC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v18 - v10;
  v12 = objc_msgSend(a1, sel_objectID);
  v13 = objc_msgSend(v12, sel_uuid);

  sub_1A46900F0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  sub_1A444ABF4((uint64_t)v11, (uint64_t)v9, &qword_1ED243170);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
  {
    sub_1A445404C((uint64_t)v11, &qword_1ED243170);
    sub_1A445404C((uint64_t)v9, &qword_1ED243170);
    v14 = 0xE500000000000000;
    v15 = 0x296C696E28;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    v15 = sub_1A46900CC();
    v14 = v16;
    sub_1A445404C((uint64_t)v11, &qword_1ED243170);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v15;
  *(_QWORD *)(result + 24) = v14;
  return result;
}

uint64_t sub_1A44FE398(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2425A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A450F75C();
  sub_1A4691D28();
  if (!v2)
  {
    v10 = sub_1A4691788();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v10;
    *(_QWORD *)(v3 + 24) = v12;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t REMSuggestedList.isValid.getter()
{
  uint64_t v0;
  char v2;

  if (*(_QWORD *)(v0 + 16) == *(_QWORD *)aNil && *(_QWORD *)(v0 + 24) == unk_1EE71C278)
    v2 = 0;
  else
    v2 = sub_1A4691A40() ^ 1;
  return v2 & 1;
}

void REMSuggestedList.__allocating_init(_:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void REMSuggestedList.init(_:)()
{
  sub_1A44FFCDC();
}

uint64_t REMSuggestedList.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

_QWORD *sub_1A44FE57C()
{
  _QWORD *result;

  type metadata accessor for REMSuggestedContact();
  result = (_QWORD *)swift_allocObject();
  result[4] = 0;
  result[5] = 0xE000000000000000;
  result[2] = 0x296C696E28;
  result[3] = 0xE500000000000000;
  qword_1ED23E4B8 = (uint64_t)result;
  return result;
}

_QWORD *REMSuggestedContact.__allocating_init(stringLiteral:)(uint64_t a1, unint64_t a2)
{
  _QWORD *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v4 = (_QWORD *)swift_allocObject();
  if (a1 == 0x296C696E28 && a2 == 0xE500000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    v4[4] = 0;
    v4[5] = 0xE000000000000000;
  }
  else
  {
    v5 = _sSo24REMContactRepresentationC19ReminderKitInternalE5parse4fromABSgSS_tFZ_0(a1, a2);
    if (v5)
    {
      v6 = v5;
      REMContactRepresentation.quickName.getter();
      v8 = v7;
      v10 = v9;
      swift_retain();

    }
    else
    {
      swift_retain();
      v8 = 0;
      v10 = 0xE000000000000000;
    }
    v4[4] = v8;
    v4[5] = v10;
    swift_release();
  }
  v4[2] = a1;
  v4[3] = a2;
  return v4;
}

uint64_t static REMSuggestedContact.defaultValue.getter()
{
  if (qword_1ED23E4E0 != -1)
    swift_once();
  return swift_retain();
}

ReminderKitInternal::REMSuggestedContact::CodingKeys_optional __swiftcall REMSuggestedContact.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ReminderKitInternal::REMSuggestedContact::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedContact::CodingKeys_optional __swiftcall REMSuggestedContact.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ReminderKitInternal::REMSuggestedContact::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  if (v3)
  {
    if (v3 == 1)
      v5 = 1;
    else
      v5 = 2;
  }
  else
  {
    v5 = 0;
  }
  *v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedContact::CodingKeys_optional __swiftcall REMSuggestedContact.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 2;
  return (ReminderKitInternal::REMSuggestedContact::CodingKeys_optional)intValue;
}

uint64_t REMSuggestedContact.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedContact.CodingKeys.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1701667182;
  else
    return 0x64497373616C63;
}

uint64_t REMSuggestedContact.CodingKeys.stringValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1701667182;
  else
    return 0x64497373616C63;
}

uint64_t sub_1A44FE838(char *a1, char *a2)
{
  return sub_1A466BDBC(*a1, *a2);
}

uint64_t sub_1A44FE844()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A44FE8BC()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A44FE910()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

ReminderKitInternal::REMSuggestedContact::CodingKeys_optional sub_1A44FE984(Swift::String *a1)
{
  return REMSuggestedContact.CodingKeys.init(rawValue:)(*a1);
}

void sub_1A44FE990(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1701667182;
  if (!*v1)
    v2 = 0x64497373616C63;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A44FE9C8()
{
  _BYTE *v0;

  if (*v0)
    return 1701667182;
  else
    return 0x64497373616C63;
}

uint64_t sub_1A44FEA00()
{
  sub_1A450F718();
  return sub_1A4691DB8();
}

uint64_t sub_1A44FEA28()
{
  sub_1A450F718();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedContact.shortDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

Swift::String *REMSuggestedContact.__allocating_init(_:)(void *a1)
{
  Swift::String *v2;

  swift_allocObject();
  v2 = sub_1A450B0F8(a1);

  return v2;
}

Swift::String *REMSuggestedContact.init(_:)(void *a1)
{
  Swift::String *v2;

  v2 = sub_1A450B0F8(a1);

  return v2;
}

void REMContactRepresentation.quickName.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;

  v1 = objc_msgSend(v0, sel_phones);
  v2 = sub_1A4690BA0();

  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRelease();
  if (v3)
  {
    v4 = objc_msgSend(v0, sel_phones);
    v5 = sub_1A4690BA0();

    if (*(_QWORD *)(v5 + 16))
      goto LABEL_6;
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  v6 = objc_msgSend(v0, sel_emails);
  v7 = sub_1A4690BA0();

  v8 = *(_QWORD *)(v7 + 16);
  swift_bridgeObjectRelease();
  if (v8)
  {
    v9 = objc_msgSend(v0, sel_emails);
    v10 = sub_1A4690BA0();

    if (*(_QWORD *)(v10 + 16))
    {
LABEL_6:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1A4690984();
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_9;
  }
}

Swift::String __swiftcall REMContactRepresentation.parsableString()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  Swift::String result;
  id v39[2];

  v1 = v0;
  v39[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_1A46908DC();
  MEMORY[0x1E0C80A78](v2);
  v3 = objc_msgSend(v0, sel_phones);
  v4 = sub_1A4690BA0();

  v5 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  if (v5)
  {
    v7 = objc_msgSend(v1, sel_phones);
    v8 = sub_1A4690BA0();

    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v39[0] = v6;
    sub_1A445E37C(v8, 0x73656E6F6870, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  v10 = objc_msgSend(v1, sel_emails);
  v11 = sub_1A4690BA0();

  v12 = *(_QWORD *)(v11 + 16);
  swift_bridgeObjectRelease();
  if (v12)
  {
    v13 = objc_msgSend(v1, sel_emails);
    v14 = sub_1A4690BA0();

    v15 = swift_isUniquelyReferenced_nonNull_native();
    v39[0] = v6;
    sub_1A445E37C(v14, 0x6C69616D65, 0xE500000000000000, v15);
    swift_bridgeObjectRelease();
  }
  if (!v6[2])
  {
    v25 = 7104878;
    swift_bridgeObjectRelease();
LABEL_17:
    v26 = 0xE300000000000000;
    goto LABEL_18;
  }
  v16 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  v17 = (void *)sub_1A46906F0();
  swift_bridgeObjectRelease();
  v39[0] = 0;
  v18 = objc_msgSend(v16, sel_dataWithJSONObject_options_error_, v17, 0, v39);

  v19 = v39[0];
  if (!v18)
  {
    v27 = v19;
    v28 = (void *)sub_1A468FE68();

    swift_willThrow();
    if (qword_1EE71C068 != -1)
      swift_once();
    v25 = 7104878;
    v29 = sub_1A4690318();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EE71EF68);
    swift_bridgeObjectRetain();
    v30 = sub_1A469030C();
    v31 = sub_1A4690FF0();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = (void *)swift_slowAlloc();
      v39[0] = v33;
      *(_DWORD *)v32 = 136315138;
      v34 = sub_1A4690714();
      sub_1A4431120(v34, v35, (uint64_t *)v39);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v30, v31, "Failed to convert contact {%s} to string", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v33, -1, -1);
      MEMORY[0x1A85A0114](v32, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  v20 = sub_1A468FFC4();
  v22 = v21;

  sub_1A46908D0();
  v23 = sub_1A46908B8();
  if (!v24)
  {
    v25 = 7104878;
    sub_1A44695EC(v20, v22);
    goto LABEL_17;
  }
  v25 = v23;
  v26 = v24;
  sub_1A44695EC(v20, v22);
LABEL_18:
  v36 = v25;
  v37 = (void *)v26;
  result._object = v37;
  result._countAndFlagsBits = v36;
  return result;
}

uint64_t sub_1A44FF144(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1A44FF190(a1);
  return v2;
}

_QWORD *sub_1A44FF190(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  v3 = v1;
  v17 = *v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EAD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A450F718();
  swift_retain();
  sub_1A4691D28();
  if (v2)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v19 = 0;
    v9 = sub_1A4691788();
    v12 = v11;
    v17 = v9;
    v18 = 1;
    v13 = sub_1A4691788();
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v3[4] = v13;
    v3[5] = v15;
    swift_release();
    v3[2] = v17;
    v3[3] = v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v3;
}

_QWORD *REMSuggestedContact.init(stringLiteral:)(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3 = sub_1A450B028(a1, a2, v2);
  swift_release();
  return v3;
}

uint64_t REMSuggestedContact.isValid.getter()
{
  uint64_t v0;
  char v2;

  if (*(_QWORD *)(v0 + 16) == 0x296C696E28 && *(_QWORD *)(v0 + 24) == 0xE500000000000000)
    v2 = 0;
  else
    v2 = sub_1A4691A40() ^ 1;
  return v2 & 1;
}

id REMSuggestedContact.contactRepresentation.getter()
{
  uint64_t v0;

  return _sSo24REMContactRepresentationC19ReminderKitInternalE5parse4fromABSgSS_tFZ_0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void REMSuggestedContact.__allocating_init(_:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void REMSuggestedContact.init(_:)()
{
  sub_1A44FFCDC();
}

uint64_t sub_1A44FF434()
{
  return swift_bridgeObjectRelease();
}

uint64_t REMSuggestedContact.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMSuggestedContact.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t REMSuggestedLocation.LocationValue.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *v0;
  if (!*((_BYTE *)v0 + 8))
  {
    v2 = 0x682E657669727261;
    v3 = 1701670760;
    v4 = 1701670760;
    if (v1 == 2)
      v4 = 0x6F682E657661656CLL;
    goto LABEL_7;
  }
  if (*((_BYTE *)v0 + 8) == 1)
  {
    v2 = 0x772E657669727261;
    v3 = 1802661751;
    v4 = 1802661751;
    if (v1 == 2)
      v4 = 0x6F772E657661656CLL;
LABEL_7:
    if (v1 != 1)
      v2 = v4;
    if (v1)
      return v2;
    else
      return v3;
  }
  v6 = 7496035;
  if (v1 != 1)
    v6 = 0x726568746FLL;
  if (v1)
    return v6;
  else
    return 0x296C696E28;
}

uint64_t REMSuggestedLocation.CodingKeys.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1A44FF5C8(a1);
}

uint64_t sub_1A44FF5C8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t REMSuggestedLocation.CodingKeys.init(stringValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1A44FF5C8(a1);
}

uint64_t REMSuggestedLocation.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedLocation.CodingKeys.rawValue.getter()
{
  return 0x64497373616C63;
}

uint64_t REMSuggestedLocation.CodingKeys.stringValue.getter()
{
  return 0x64497373616C63;
}

uint64_t sub_1A44FF660@<X0>(BOOL *a1@<X8>)
{
  return sub_1A4505228(a1);
}

uint64_t sub_1A44FF66C@<X0>(BOOL *a1@<X8>)
{
  return sub_1A45052BC(a1);
}

uint64_t sub_1A44FF678()
{
  sub_1A450F6D4();
  return sub_1A4691DB8();
}

uint64_t sub_1A44FF6A0()
{
  sub_1A450F6D4();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedLocation.__allocating_init(_:)(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;

  v1 = *a1;
  if (!*((_BYTE *)a1 + 8))
  {
    v2 = 0xEB00000000656D6FLL;
    v3 = 0x682E657669727261;
    v4 = 1701670760;
    v7 = 0x6F682E657661656CLL;
    v8 = 0xEA0000000000656DLL;
    if (v1 != 2)
    {
      v7 = 1701670760;
      v8 = 0xE400000000000000;
    }
    if (v1 != 1)
    {
      v3 = v7;
      v2 = v8;
    }
    goto LABEL_11;
  }
  if (*((_BYTE *)a1 + 8) == 1)
  {
    v2 = 0xEB000000006B726FLL;
    v3 = 0x772E657669727261;
    v4 = 1802661751;
    v5 = 0xEA00000000006B72;
    v6 = 0x6F772E657661656CLL;
    if (v1 != 2)
    {
      v6 = 1802661751;
      v5 = 0xE400000000000000;
    }
    if (v1 != 1)
    {
      v3 = v6;
      v2 = v5;
    }
LABEL_11:
    if (v1)
      v9 = v3;
    else
      v9 = v4;
    if (v1)
      v10 = v2;
    else
      v10 = 0xE400000000000000;
    goto LABEL_25;
  }
  v11 = 0xE300000000000000;
  v12 = 7496035;
  if (v1 != 1)
  {
    v12 = 0x726568746FLL;
    v11 = 0xE500000000000000;
  }
  if (v1)
    v9 = v12;
  else
    v9 = 0x296C696E28;
  if (v1)
    v10 = v11;
  else
    v10 = 0xE500000000000000;
LABEL_25:
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v9;
  *(_QWORD *)(result + 24) = v10;
  return result;
}

uint64_t REMSuggestedLocation.__allocating_init(stringLiteral:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t REMSuggestedLocation.init(stringLiteral:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t String.containsNameOfHomeLocation.getter()
{
  return sub_1A44FF898();
}

uint64_t String.containsNameOfWorkLocation.getter()
{
  return sub_1A44FF898();
}

uint64_t sub_1A44FF898()
{
  sub_1A4466118();
  return sub_1A4691248() & 1;
}

uint64_t static REMSuggestedLocation.expectedLocation(of:)(void *a1)
{
  id v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;

  v1 = objc_msgSend(a1, sel_alarms);
  if (v1)
  {
    v2 = v1;
    sub_1A444AA40(0, &qword_1EE71EF80);
    v3 = sub_1A4690BA0();

    v4 = _s19ReminderKitInternal20REMSuggestedLocationC08expectedE02ofACSaySo8REMAlarmCG_tFZ_0(v3);
    swift_bridgeObjectRelease();
    return v4;
  }
  else
  {
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0x296C696E28;
    *(_QWORD *)(result + 24) = 0xE500000000000000;
  }
  return result;
}

uint64_t REMSuggestedLocation.isSpecificLocation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  sub_1A4466118();
  if ((sub_1A469126C() & 1) != 0 || (sub_1A469126C() & 1) != 0 || v1 == 7496035 && v2 == 0xE300000000000000)
    v3 = 1;
  else
    v3 = sub_1A4691A40();
  return v3 & 1;
}

uint64_t REMSuggestedLocation.isHome.getter()
{
  return sub_1A44FFA90();
}

uint64_t REMSuggestedLocation.isWork.getter()
{
  return sub_1A44FFA90();
}

uint64_t sub_1A44FFA90()
{
  sub_1A4466118();
  return sub_1A469126C() & 1;
}

uint64_t sub_1A44FFAE8(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1A44FFB4C(a1, &qword_1ED2425B0, (void (*)(void))sub_1A450F6D4);
  return v2;
}

_QWORD *sub_1A44FFB4C(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];

  v5 = v3;
  v16[1] = *v3;
  v16[0] = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v16[0] - 8);
  MEMORY[0x1E0C80A78](v16[0]);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  v10 = v16[3];
  sub_1A4691D28();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v11 = v16[0];
    v13 = sub_1A4691788();
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v11);
    v5[2] = v13;
    v5[3] = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v5;
}

void REMSuggestedLocation.__allocating_init(_:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void REMSuggestedLocation.init(_:)()
{
  sub_1A44FFCDC();
}

void sub_1A44FFCDC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t _s19ReminderKitInternal19REMSuggestedWeekDayCfD_0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A44FFD2C()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_name);
  v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v2;
}

uint64_t Sequence<>.canonicalTagSet.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[6];

  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  v8 = sub_1A4460F34((void (*)(char *, char *))sub_1A450B8D8, (uint64_t)v11, a1, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], a2, MEMORY[0x1E0DEDD18], a8);
  v9 = sub_1A446C748(v8);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1A44FFE00@<X0>(uint64_t a1@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v23 = a2;
  v3 = sub_1A468FBEC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = v10(AssociatedTypeWitness, a1);
  v14 = v13;
  sub_1A469018C();
  v15 = sub_1A4690210();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 0, 1, v15);
  v26 = v12;
  v27 = v14;
  sub_1A4466118();
  v24 = sub_1A4691260();
  v25 = v16;
  sub_1A468FBC8();
  v17 = sub_1A4691218();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRelease();
  sub_1A445404C((uint64_t)v9, &qword_1ED23E4C8);
  result = swift_bridgeObjectRelease();
  v21 = v23;
  *v23 = v17;
  v21[1] = v19;
  return result;
}

ReminderKitInternal::REMSuggestedAttributeInput::CodingKeys_optional __swiftcall REMSuggestedAttributeInput.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMSuggestedAttributeInput::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 12;
  if (v3 < 0xC)
    v5 = v3;
  *v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedAttributeInput::CodingKeys_optional __swiftcall REMSuggestedAttributeInput.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  ReminderKitInternal::REMSuggestedAttributeInput::CodingKeys_optional result;
  char v4;

  v2 = v1;
  result.value = REMSuggestedAttributeInput.CodingKeys.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

ReminderKitInternal::REMSuggestedAttributeInput::CodingKeys_optional __swiftcall REMSuggestedAttributeInput.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 12;
  return (ReminderKitInternal::REMSuggestedAttributeInput::CodingKeys_optional)intValue;
}

void *static REMSuggestedAttributeInput.CodingKeys.allCases.getter()
{
  return &unk_1E4C0FB88;
}

uint64_t REMSuggestedAttributeInput.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedAttributeInput.CodingKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A4500098 + 4 * byte_1A469C700[*v0]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_1A4500098()
{
  return 0x7265646E696D6572;
}

uint64_t sub_1A45000B4()
{
  return 0x6E6F697461657263;
}

uint64_t sub_1A4500134()
{
  return 0x64656767616C66;
}

uint64_t sub_1A450014C()
{
  return 0x797469726F697270;
}

uint64_t sub_1A4500164()
{
  return 1936154996;
}

uint64_t sub_1A4500174()
{
  return 0x746361746E6F63;
}

uint64_t sub_1A450018C()
{
  return 0x6E65727275636572;
}

uint64_t REMSuggestedAttributeInput.CodingKeys.stringValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45001D4 + 4 * byte_1A469C70C[*v0]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_1A45001D4()
{
  return 0x7265646E696D6572;
}

uint64_t sub_1A45001F0()
{
  return 0x6E6F697461657263;
}

uint64_t sub_1A4500270()
{
  return 0x64656767616C66;
}

uint64_t sub_1A4500288()
{
  return 0x797469726F697270;
}

uint64_t sub_1A45002A0()
{
  return 1936154996;
}

uint64_t sub_1A45002B0()
{
  return 0x746361746E6F63;
}

uint64_t sub_1A45002C8()
{
  return 0x6E65727275636572;
}

uint64_t sub_1A45002E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A466AB24(*a1, *a2);
}

uint64_t sub_1A45002F0()
{
  sub_1A4691C8C();
  REMSuggestedAttributeInput.CodingKeys.rawValue.getter();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A4500354()
{
  REMSuggestedAttributeInput.CodingKeys.rawValue.getter();
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45003A4()
{
  sub_1A4691C8C();
  REMSuggestedAttributeInput.CodingKeys.rawValue.getter();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

ReminderKitInternal::REMSuggestedAttributeInput::CodingKeys_optional sub_1A4500404(Swift::String *a1)
{
  return REMSuggestedAttributeInput.CodingKeys.init(rawValue:)(*a1);
}

uint64_t sub_1A4500410@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = REMSuggestedAttributeInput.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ReminderKitInternal::REMSuggestedAttributeInput::CodingKeys_optional sub_1A4500438@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  ReminderKitInternal::REMSuggestedAttributeInput::CodingKeys_optional result;
  char v5;

  result.value = REMSuggestedAttributeInput.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A450046C(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

void sub_1A4500478(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FB88;
}

uint64_t sub_1A4500488()
{
  sub_1A450C454();
  return sub_1A4691DB8();
}

uint64_t sub_1A45004B0()
{
  sub_1A450C454();
  return sub_1A4691DC4();
}

id REMSuggestedAttributeInput.reminderID.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

uint64_t REMSuggestedAttributeInput.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_creationDate;
  v4 = sub_1A46900B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t REMSuggestedAttributeInput.list.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInput.dueDayOfWeek.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInput.dueDateTime.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDateTime);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMSuggestedAttributeInput.location.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInput.flagged.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_flagged);
}

uint64_t REMSuggestedAttributeInput.priority.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_priority);
}

uint64_t REMSuggestedAttributeInput.tags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributeInput.contact.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInput.recurrence.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributeInput.__allocating_init(reminder:)(void *a1)
{
  uint64_t v2;

  swift_allocObject();
  v2 = sub_1A450B90C(a1);

  return v2;
}

uint64_t REMSuggestedAttributeInput.init(reminder:)(void *a1)
{
  uint64_t v2;

  v2 = sub_1A450B90C(a1);

  return v2;
}

uint64_t REMSuggestedAttributeInput.__allocating_init(reminderTitle:reminderID:list:creationDate:dueDayOfWeek:dueDateTime:location:flagged:priority:tags:contact:recurrence:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v19;

  v19 = swift_allocObject();
  REMSuggestedAttributeInput.init(reminderTitle:reminderID:list:creationDate:dueDayOfWeek:dueDateTime:location:flagged:priority:tags:contact:recurrence:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 & 1, a13, a14, a15);
  return v19;
}

char *REMSuggestedAttributeInput.init(reminderTitle:reminderID:list:creationDate:dueDayOfWeek:dueDateTime:location:flagged:priority:tags:contact:recurrence:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  char *v15;
  char *v16;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  objc_class *v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  id v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  objc_super v63;

  v16 = v15;
  v57 = a7;
  v58 = a8;
  v60 = a6;
  v61 = a5;
  v54 = a3;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1A46900B4();
  v55 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v56 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1A46900FC();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v16 + 2) = a1;
  *((_QWORD *)v16 + 3) = a2;
  *(_QWORD *)&v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_list] = a4;
  v29 = (objc_class *)type metadata accessor for REMObjectID_Codable();
  v30 = objc_allocWithZone(v29);
  v59 = a4;
  swift_retain();
  v31 = v54;
  v32 = objc_msgSend(v31, sel_uuid);
  sub_1A46900F0();

  v33 = (void *)sub_1A46900D8();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  v34 = objc_msgSend(v31, sel_entityName);
  if (!v34)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v34 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v63.receiver = v30;
  v63.super_class = v29;
  v35 = objc_msgSendSuper2(&v63, sel_initWithUUID_entityName_, v33, v34);

  *((_QWORD *)v16 + 4) = v35;
  sub_1A444ABF4(v61, (uint64_t)v22, &qword_1ED243190);
  v36 = v55;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v22, 1, v23) == 1)
  {
    v37 = v56;
    sub_1A46900A8();
    sub_1A445404C((uint64_t)v22, &qword_1ED243190);
    v38 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  }
  else
  {
    v38 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
    v37 = v56;
    v38(v56, v22, v23);
  }
  v39 = v60;
  v38(&v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_creationDate], v37, v23);
  v40 = v57;
  if (!v58)
    v40 = 0;
  v41 = 0xE000000000000000;
  if (v58)
    v41 = v58;
  v42 = &v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDateTime];
  *(_QWORD *)v42 = v40;
  *((_QWORD *)v42 + 1) = v41;
  if (v39)
  {
    v43 = v39;
  }
  else
  {
    type metadata accessor for REMSuggestedWeekDay();
    v43 = swift_allocObject();
    v62 = 0;
    *(_QWORD *)(v43 + 16) = sub_1A46918D8();
    *(_QWORD *)(v43 + 24) = v44;
  }
  v45 = a14;
  *(_QWORD *)&v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDayOfWeek] = v43;
  if (a9)
  {
    v46 = a9;
  }
  else
  {
    type metadata accessor for REMSuggestedLocation();
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = 0x296C696E28;
    *(_QWORD *)(v46 + 24) = 0xE500000000000000;
  }
  v47 = a15;
  *(_QWORD *)&v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_location] = v46;
  v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_flagged] = a10 & 1;
  if ((a12 & 1) != 0)
    a11 = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_priority] = a11;
  v49 = MEMORY[0x1E0DEE9E8];
  if (a13)
    v50 = a13;
  else
    v50 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_tags] = v50;
  if (a14)
  {
    swift_retain();
  }
  else
  {
    v51 = qword_1ED23E4E0;
    swift_retain();
    swift_retain();
    if (v51 != -1)
      swift_once();
    v45 = qword_1ED23E4B8;
  }
  swift_retain();
  *(_QWORD *)&v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_contact] = v45;

  swift_release();
  swift_release();
  swift_release();
  if (!a15)
    v47 = v49;
  sub_1A445404C(v61, &qword_1ED243190);
  *(_QWORD *)&v16[OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_recurrence] = v47;
  return v16;
}

uint64_t REMSuggestedAttributeInput.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  REMSuggestedAttributeInput.init(from:)(a1);
  return v2;
}

_QWORD *REMSuggestedAttributeInput.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  v31 = *v1;
  v27 = sub_1A46900B4();
  v3 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2425B8);
  v6 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A450C454();
  v28 = v8;
  v9 = v30;
  v10 = v1;
  sub_1A4691D28();
  if (v9)
  {
    swift_deallocPartialClassInstance();
    v22 = (uint64_t)a1;
  }
  else
  {
    v11 = v5;
    v30 = v6;
    v25 = v3;
    v26 = a1;
    LOBYTE(v33) = 0;
    v1[2] = sub_1A4691788();
    v1[3] = v12;
    type metadata accessor for REMObjectID_Codable();
    v32 = 1;
    sub_1A450C498(&qword_1ED243F80, 255, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    sub_1A46917C4();
    v1[4] = v33;
    LOBYTE(v33) = 2;
    sub_1A450C498((unint64_t *)&unk_1ED243010, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v13 = v27;
    sub_1A46917C4();
    v24 = v1;
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))((uint64_t)v1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_creationDate, v11, v13);
    type metadata accessor for REMSuggestedList();
    v32 = 3;
    sub_1A450C498(&qword_1ED242350, v14, (uint64_t (*)(uint64_t))type metadata accessor for REMSuggestedList, (uint64_t)&protocol conformance descriptor for ClassificationLabel);
    v23 = 0;
    sub_1A46917C4();
    *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_list) = v33;
    LOBYTE(v33) = 5;
    v15 = sub_1A4691788();
    v16 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDateTime);
    *v16 = v15;
    v16[1] = v17;
    type metadata accessor for REMSuggestedWeekDay();
    v32 = 4;
    sub_1A450C498(&qword_1ED242470, v18, (uint64_t (*)(uint64_t))type metadata accessor for REMSuggestedWeekDay, (uint64_t)&protocol conformance descriptor for ClassificationLabel);
    sub_1A46917C4();
    *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDayOfWeek) = v33;
    type metadata accessor for REMSuggestedLocation();
    v32 = 6;
    sub_1A450C498(&qword_1ED242498, v19, (uint64_t (*)(uint64_t))type metadata accessor for REMSuggestedLocation, (uint64_t)&protocol conformance descriptor for ClassificationLabel);
    sub_1A46917C4();
    *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_location) = v33;
    LOBYTE(v33) = 7;
    *((_BYTE *)v1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_flagged) = sub_1A4691794() & 1;
    LOBYTE(v33) = 8;
    *(_QWORD *)((char *)v24 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_priority) = sub_1A46917B8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243F40);
    v32 = 9;
    sub_1A44D64E8(&qword_1ED243198, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
    sub_1A46917C4();
    *(_QWORD *)((char *)v24 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_tags) = v33;
    type metadata accessor for REMSuggestedContact();
    v32 = 10;
    sub_1A450C498(&qword_1ED23E8F0, v21, (uint64_t (*)(uint64_t))type metadata accessor for REMSuggestedContact, (uint64_t)&protocol conformance descriptor for ClassificationLabel);
    sub_1A46917C4();
    *(_QWORD *)((char *)v24 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_contact) = v33;
    v32 = 11;
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
    v10 = v24;
    *(_QWORD *)((char *)v24 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_recurrence) = v33;
    v22 = (uint64_t)v26;
  }
  __swift_destroy_boxed_opaque_existential_1(v22);
  return v10;
}

uint64_t REMSuggestedAttributeInput.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  _QWORD v8[2];
  uint64_t v9;
  unint64_t v10;

  v1 = v0;
  v2 = sub_1A46900FC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = 0xE000000000000000;
  sub_1A4691410();
  sub_1A4690984();
  v6 = objc_msgSend(*(id *)(v0 + 32), sel_uuid);
  sub_1A46900F0();

  sub_1A46900CC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  sub_1A468FFF4();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  swift_retain();
  REMSuggestedWeekDay.description.getter();
  sub_1A4690984();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  v8[1] = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_priority);
  sub_1A46918D8();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  sub_1A4690D80();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  sub_1A4690D80();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  return v9;
}

uint64_t REMSuggestedAttributeInput.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242230);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A450C454();
  sub_1A4691D40();
  LOBYTE(v15) = 0;
  sub_1A4691854();
  if (!v2)
  {
    v15 = *(_QWORD *)(v3 + 32);
    HIBYTE(v14) = 1;
    type metadata accessor for REMObjectID_Codable();
    sub_1A450C498(&qword_1ED243370, 255, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    sub_1A4691890();
    LOBYTE(v15) = 2;
    sub_1A46900B4();
    sub_1A450C498(&qword_1ED243168, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1A4691890();
    v15 = *(_QWORD *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_list);
    HIBYTE(v14) = 3;
    type metadata accessor for REMSuggestedList();
    sub_1A450C498(&qword_1ED241B00, v9, (uint64_t (*)(uint64_t))type metadata accessor for REMSuggestedList, (uint64_t)&protocol conformance descriptor for ClassificationLabel);
    sub_1A4691890();
    LOBYTE(v15) = 5;
    sub_1A4691854();
    v15 = *(_QWORD *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDayOfWeek);
    HIBYTE(v14) = 4;
    type metadata accessor for REMSuggestedWeekDay();
    sub_1A450C498(&qword_1ED241BC0, v10, (uint64_t (*)(uint64_t))type metadata accessor for REMSuggestedWeekDay, (uint64_t)&protocol conformance descriptor for ClassificationLabel);
    sub_1A4691890();
    v15 = *(_QWORD *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_location);
    HIBYTE(v14) = 6;
    type metadata accessor for REMSuggestedLocation();
    sub_1A450C498(&qword_1ED241BD0, v11, (uint64_t (*)(uint64_t))type metadata accessor for REMSuggestedLocation, (uint64_t)&protocol conformance descriptor for ClassificationLabel);
    sub_1A4691890();
    LOBYTE(v15) = 7;
    sub_1A4691860();
    LOBYTE(v15) = 8;
    sub_1A4691884();
    v15 = *(_QWORD *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_tags);
    HIBYTE(v14) = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243F40);
    sub_1A44D64E8(&qword_1ED243130, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    sub_1A4691890();
    v15 = *(_QWORD *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_contact);
    HIBYTE(v14) = 10;
    type metadata accessor for REMSuggestedContact();
    sub_1A450C498(qword_1ED23E4E8, v12, (uint64_t (*)(uint64_t))type metadata accessor for REMSuggestedContact, (uint64_t)&protocol conformance descriptor for ClassificationLabel);
    sub_1A4691890();
    v15 = *(_QWORD *)(v3 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_recurrence);
    HIBYTE(v14) = 11;
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t REMSuggestedAttributeInput.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();

  v1 = v0 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_creationDate;
  v2 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMSuggestedAttributeInput.__deallocating_deinit()
{
  return sub_1A4502CAC((void (*)(void))REMSuggestedAttributeInput.deinit);
}

_QWORD *sub_1A4501D90@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = REMSuggestedAttributeInput.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1A4501DE4(_QWORD *a1)
{
  return REMSuggestedAttributeInput.encode(to:)(a1);
}

uint64_t sub_1A4501E08()
{
  return REMSuggestedAttributeInput.description.getter();
}

uint64_t sub_1A4501E28(uint64_t *a1, uint64_t *a2)
{
  return _s19ReminderKitInternal26REMSuggestedAttributeInputC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1A4501E34(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4501E90()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A4501ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A4501F28())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A4501F64@<X0>(uint64_t a1@<X8>)
{
  return sub_1A4502114(&OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_reminderIdentifier, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998], a1);
}

uint64_t sub_1A4501F78(uint64_t a1)
{
  return sub_1A4502194(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_reminderIdentifier, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

uint64_t (*sub_1A4501F8C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A4501FD0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t (*a3)(_QWORD)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *a1 + *a2;
  swift_beginAccess();
  v7 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v6, v7);
}

uint64_t sub_1A4502040(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), _QWORD *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v9 = a5(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v15 - v11, a1, v9);
  v13 = *a2 + *a6;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v13, v12, v9);
  return swift_endAccess();
}

uint64_t sub_1A4502100@<X0>(uint64_t a1@<X8>)
{
  return sub_1A4502114(&OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_creationDate, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], a1);
}

uint64_t sub_1A4502114@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *a1;
  swift_beginAccess();
  v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t sub_1A4502180(uint64_t a1)
{
  return sub_1A4502194(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_creationDate, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

uint64_t sub_1A4502194(uint64_t a1, _QWORD *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *a2;
  swift_beginAccess();
  v7 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v6, a1, v7);
  return swift_endAccess();
}

uint64_t (*sub_1A4502208())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A450224C()
{
  return sub_1A4502748();
}

uint64_t sub_1A4502258(uint64_t a1)
{
  return sub_1A45028AC(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_list, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEEE30]);
}

uint64_t (*sub_1A450226C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A45022B0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_listName);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4502318()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_listName);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1A450236C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_listName);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A45023C8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A450240C()
{
  return sub_1A4502748();
}

uint64_t sub_1A4502418(uint64_t a1)
{
  return sub_1A45028AC(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_dueDayOfWeek, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEEE30]);
}

uint64_t (*sub_1A450242C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A4502470()
{
  return sub_1A4502748();
}

uint64_t sub_1A450247C(uint64_t a1)
{
  return sub_1A45028AC(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_location, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEEE30]);
}

uint64_t (*sub_1A4502490())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A45024D4()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_flagged);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1A4502518(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_flagged);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1A4502560())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A45025A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_priority;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1A45025E8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_priority);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1A4502630())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A4502674()
{
  return sub_1A4502854();
}

uint64_t sub_1A4502680(uint64_t a1)
{
  return sub_1A45028AC(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_tags, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEEB08]);
}

uint64_t (*sub_1A4502694())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A45026D8(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v6 = v5;
  swift_retain();
  return swift_release();
}

uint64_t sub_1A450273C()
{
  return sub_1A4502748();
}

uint64_t sub_1A4502748()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1A450278C(uint64_t a1)
{
  return sub_1A45028AC(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_contact, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEEE30]);
}

uint64_t (*sub_1A45027A0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A45027E4(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v6 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4502848()
{
  return sub_1A4502854();
}

uint64_t sub_1A4502854()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A4502898(uint64_t a1)
{
  return sub_1A45028AC(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_recurrences, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1A45028AC(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;

  v6 = (uint64_t *)(v3 + *a2);
  swift_beginAccess();
  v7 = *v6;
  *v6 = a1;
  return a3(v7);
}

uint64_t (*sub_1A4502904())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t REMSuggestedAttributeReminderDataSource.__allocating_init(title:reminderIdentifier:creationDate:list:listName:dueDayOfWeek:location:flagged:priority:tags:contact:recurrences:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v19;

  v19 = swift_allocObject();
  REMSuggestedAttributeReminderDataSource.init(title:reminderIdentifier:creationDate:list:listName:dueDayOfWeek:location:flagged:priority:tags:contact:recurrences:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  return v19;
}

uint64_t REMSuggestedAttributeReminderDataSource.init(title:reminderIdentifier:creationDate:list:listName:dueDayOfWeek:location:flagged:priority:tags:contact:recurrences:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  v20 = v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_reminderIdentifier;
  v21 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a3, v21);
  v22 = v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_creationDate;
  v23 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a4, v23);
  *(_QWORD *)(v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_list) = a5;
  v24 = (_QWORD *)(v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_listName);
  *v24 = a6;
  v24[1] = a7;
  *(_QWORD *)(v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_dueDayOfWeek) = a8;
  *(_QWORD *)(v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_location) = a9;
  *(_BYTE *)(v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_flagged) = a10;
  *(_QWORD *)(v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_priority) = a11;
  *(_QWORD *)(v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_tags) = a12;
  *(_QWORD *)(v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_contact) = a13;
  *(_QWORD *)(v14 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_recurrences) = a14;
  return v14;
}

uint64_t sub_1A4502B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_list;
  swift_beginAccess();
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t REMSuggestedAttributeReminderDataSource.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_reminderIdentifier;
  v2 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_creationDate;
  v4 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMSuggestedAttributeReminderDataSource.__deallocating_deinit()
{
  return sub_1A4502CAC((void (*)(void))REMSuggestedAttributeReminderDataSource.deinit);
}

uint64_t sub_1A4502CAC(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t REMSuggestedAttributeInputDataFrame.index.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributeInputDataFrame.title.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.reminderID.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.creationDate.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.list.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.dueDayOfWeek.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.location.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.flagged.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.priority.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.tags.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.recurrences.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.contact.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributeInputDataFrame.size.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

uint64_t REMSuggestedAttributeInputDataFrame.init(reminderDataSourceArray:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  void (*v46)(char *, uint64_t);
  id v47;
  objc_class *v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char v87;
  unint64_t v88;
  unint64_t v89;
  _QWORD *v90;
  unint64_t v91;
  char *v92;
  char v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  _QWORD *v102;
  unint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  _QWORD *v113;
  unint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int64_t v139;
  int64_t *v140;
  id v141;
  objc_class *v142;
  id v143;
  id v144;
  char *v145;
  void *v146;
  id v147;
  unint64_t v148;
  uint64_t v149;
  int64_t v150;
  int64_t *v151;
  uint64_t v152;
  uint64_t inited;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  int64_t v157;
  int64_t *v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  int64_t v164;
  int64_t *v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  int64_t v169;
  int64_t *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  int64_t v175;
  int64_t *v176;
  uint64_t v177;
  uint64_t v178;
  int64_t v179;
  int64_t *v180;
  uint64_t v181;
  uint64_t v182;
  int64_t v183;
  int64_t *v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  uint64_t v189;
  int64_t v190;
  int64_t *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  int64_t v195;
  int64_t *v196;
  _QWORD *v197;
  uint64_t v198;
  unint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  __int128 v203;
  _OWORD *v204;
  uint64_t v205;
  char *v206;
  unint64_t v207;
  unint64_t v208;
  uint64_t v209;
  char *v210;
  _QWORD *v211;
  int64_t v212;
  id v213;
  char *v214;
  unint64_t v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  unint64_t v219;
  objc_super v220;
  __int128 v221;
  _QWORD *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  unint64_t v227;
  unint64_t v228;
  uint64_t v229;
  void *v230;
  objc_super v231;
  uint64_t v232;
  __int128 v233;

  v5 = (_QWORD *)sub_1A46900B4();
  v6 = *(v5 - 1);
  v7 = MEMORY[0x1E0C80A78](v5);
  v209 = (uint64_t)&v201 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v201 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v201 - v12;
  v14 = sub_1A46900FC();
  v215 = *(_QWORD *)(v14 - 8);
  v216 = v14;
  MEMORY[0x1E0C80A78](v14);
  v214 = (char *)&v201 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (v17 < 0)
    {
      __break(1u);
      goto LABEL_117;
    }
  }
  else
  {
    v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v18 = sub_1A445A21C(0, v17);
  sub_1A4504738((uint64_t)v18, &v233);
  v203 = v233;
  if (v16)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v204 = (_OWORD *)a2;
  v210 = v11;
  if (v19)
  {
    v232 = MEMORY[0x1E0DEE9D8];
    v212 = v19 & ~(v19 >> 63);
    result = sub_1A445A8BC(0, v212, 0);
    v219 = v19;
    if (v19 < 0)
      goto LABEL_128;
    v206 = v13;
    v207 = v6;
    v208 = (unint64_t)v5;
    v21 = v232;
    v217 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v22 = 0;
      do
      {
        v23 = MEMORY[0x1A859ECE0](v22, a1);
        swift_beginAccess();
        v25 = *(_QWORD *)(v23 + 16);
        v24 = *(_QWORD *)(v23 + 24);
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        v232 = v21;
        v27 = *(_QWORD *)(v21 + 16);
        v26 = *(_QWORD *)(v21 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_1A445A8BC(v26 > 1, v27 + 1, 1);
          v21 = v232;
        }
        ++v22;
        *(_QWORD *)(v21 + 16) = v27 + 1;
        v28 = v21 + 16 * v27;
        *(_QWORD *)(v28 + 32) = v25;
        *(_QWORD *)(v28 + 40) = v24;
      }
      while (v219 != v22);
    }
    else
    {
      v30 = (uint64_t *)(a1 + 32);
      v31 = v219;
      do
      {
        v32 = *v30;
        swift_beginAccess();
        v34 = *(_QWORD *)(v32 + 16);
        v33 = *(_QWORD *)(v32 + 24);
        v232 = v21;
        v36 = *(_QWORD *)(v21 + 16);
        v35 = *(_QWORD *)(v21 + 24);
        swift_bridgeObjectRetain();
        if (v36 >= v35 >> 1)
        {
          sub_1A445A8BC(v35 > 1, v36 + 1, 1);
          v21 = v232;
        }
        *(_QWORD *)(v21 + 16) = v36 + 1;
        v37 = v21 + 16 * v36;
        *(_QWORD *)(v37 + 32) = v34;
        *(_QWORD *)(v37 + 40) = v33;
        ++v30;
        --v31;
      }
      while (v31);
    }
    v202 = v21;
    v230 = (void *)MEMORY[0x1E0DEE9D8];
    sub_1A469153C();
    v213 = (id)objc_opt_self();
    v38 = a1;
    v39 = 0;
    v218 = v38;
    v211 = (_QWORD *)(v38 + 32);
    v40 = v214;
    do
    {
      if (v217)
      {
        v41 = MEMORY[0x1A859ECE0](v39, v218);
      }
      else
      {
        v41 = *(_QWORD *)(v218 + 8 * v39 + 32);
        swift_retain();
      }
      v42 = v41 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_reminderIdentifier;
      swift_beginAccess();
      v43 = v215;
      v44 = v216;
      (*(void (**)(char *, uint64_t, uint64_t))(v215 + 16))(v40, v42, v216);
      v45 = (void *)sub_1A46900D8();
      v46 = *(void (**)(char *, uint64_t))(v43 + 8);
      v46(v40, v44);
      v47 = objc_msgSend(v213, sel_objectIDWithUUID_, v45);

      v48 = (objc_class *)type metadata accessor for REMObjectID_Codable();
      v49 = objc_allocWithZone(v48);
      v50 = v47;
      v51 = objc_msgSend(v50, sel_uuid);
      sub_1A46900F0();

      v52 = (void *)sub_1A46900D8();
      v46(v40, v44);
      v53 = objc_msgSend(v50, sel_entityName);
      if (!v53)
      {
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v53 = (id)sub_1A469087C();
        swift_bridgeObjectRelease();
      }
      ++v39;
      v231.receiver = v49;
      v231.super_class = v48;
      objc_msgSendSuper2(&v231, sel_initWithUUID_entityName_, v52, v53);
      swift_release();

      sub_1A4691518();
      sub_1A4691548();
      sub_1A4691554();
      sub_1A4691524();
    }
    while (v219 != v39);
    v213 = v230;
    v229 = MEMORY[0x1E0DEE9D8];
    sub_1A445A9A4(0, v212, 0);
    v54 = v229;
    v55 = v208;
    v56 = v209;
    if (v217)
    {
      v57 = 0;
      v59 = v206;
      v58 = v207;
      do
      {
        v60 = MEMORY[0x1A859ECE0](v57, v218)
            + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_creationDate;
        swift_beginAccess();
        (*(void (**)(char *, uint64_t, unint64_t))(v58 + 16))(v59, v60, v55);
        swift_unknownObjectRelease();
        v229 = v54;
        v62 = *(_QWORD *)(v54 + 16);
        v61 = *(_QWORD *)(v54 + 24);
        if (v62 >= v61 >> 1)
        {
          sub_1A445A9A4(v61 > 1, v62 + 1, 1);
          v54 = v229;
        }
        ++v57;
        *(_QWORD *)(v54 + 16) = v62 + 1;
        (*(void (**)(unint64_t, char *, unint64_t))(v58 + 32))(v54+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(_QWORD *)(v58 + 72) * v62, v59, v55);
      }
      while (v219 != v57);
    }
    else
    {
      v63 = v211;
      v64 = v219;
      v65 = v207;
      do
      {
        v66 = *v63 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_creationDate;
        swift_beginAccess();
        (*(void (**)(uint64_t, uint64_t, unint64_t))(v65 + 16))(v56, v66, v55);
        v229 = v54;
        v67 = v55;
        v69 = *(_QWORD *)(v54 + 16);
        v68 = *(_QWORD *)(v54 + 24);
        if (v69 >= v68 >> 1)
        {
          sub_1A445A9A4(v68 > 1, v69 + 1, 1);
          v54 = v229;
        }
        *(_QWORD *)(v54 + 16) = v69 + 1;
        (*(void (**)(unint64_t, uint64_t, unint64_t))(v65 + 32))(v54+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(_QWORD *)(v65 + 72) * v69, v56, v67);
        ++v63;
        --v64;
        v55 = v67;
      }
      while (v64);
    }
    v228 = MEMORY[0x1E0DEE9D8];
    v70 = v219;
    sub_1A469153C();
    if (v217)
    {
      v71 = 0;
      v72 = v218;
      do
      {
        v73 = v71 + 1;
        MEMORY[0x1A859ECE0]();
        swift_beginAccess();
        swift_retain();
        swift_unknownObjectRelease();
        sub_1A4691518();
        sub_1A4691548();
        sub_1A4691554();
        sub_1A4691524();
        v71 = v73;
      }
      while (v70 != v73);
    }
    else
    {
      v74 = v211;
      v75 = v70;
      v72 = v218;
      do
      {
        ++v74;
        swift_beginAccess();
        swift_retain();
        sub_1A4691518();
        sub_1A4691548();
        sub_1A4691554();
        sub_1A4691524();
        --v75;
      }
      while (v75);
    }
    v207 = v228;
    v227 = MEMORY[0x1E0DEE9D8];
    sub_1A469153C();
    if (v217)
    {
      v76 = 0;
      do
      {
        v77 = v76 + 1;
        MEMORY[0x1A859ECE0]();
        swift_beginAccess();
        swift_retain();
        swift_unknownObjectRelease();
        sub_1A4691518();
        sub_1A4691548();
        sub_1A4691554();
        sub_1A4691524();
        v76 = v77;
      }
      while (v70 != v77);
    }
    else
    {
      v78 = v211;
      v79 = v70;
      do
      {
        ++v78;
        swift_beginAccess();
        swift_retain();
        sub_1A4691518();
        sub_1A4691548();
        sub_1A4691554();
        sub_1A4691524();
        --v79;
      }
      while (v79);
    }
    v208 = v227;
    v226 = (char *)MEMORY[0x1E0DEE9D8];
    sub_1A469153C();
    if (v217)
    {
      v80 = 0;
      do
      {
        v81 = v80 + 1;
        MEMORY[0x1A859ECE0]();
        swift_beginAccess();
        swift_retain();
        swift_unknownObjectRelease();
        sub_1A4691518();
        sub_1A4691548();
        sub_1A4691554();
        sub_1A4691524();
        v80 = v81;
      }
      while (v70 != v81);
    }
    else
    {
      v82 = v211;
      v83 = v70;
      do
      {
        ++v82;
        swift_beginAccess();
        swift_retain();
        sub_1A4691518();
        sub_1A4691548();
        sub_1A4691554();
        sub_1A4691524();
        --v83;
      }
      while (v83);
    }
    v206 = v226;
    v225 = MEMORY[0x1E0DEE9D8];
    sub_1A445A988(0, v212, 0);
    v209 = v54;
    if (v217)
    {
      v84 = 0;
      v85 = v225;
      do
      {
        v86 = (char *)(MEMORY[0x1A859ECE0](v84, v72)
                     + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_flagged);
        swift_beginAccess();
        v87 = *v86;
        swift_unknownObjectRelease();
        v225 = v85;
        v89 = *(_QWORD *)(v85 + 16);
        v88 = *(_QWORD *)(v85 + 24);
        if (v89 >= v88 >> 1)
        {
          sub_1A445A988(v88 > 1, v89 + 1, 1);
          v85 = v225;
        }
        ++v84;
        *(_QWORD *)(v85 + 16) = v89 + 1;
        *(_BYTE *)(v85 + v89 + 32) = v87;
      }
      while (v70 != v84);
    }
    else
    {
      v90 = v211;
      v91 = v70;
      v85 = v225;
      do
      {
        v92 = (char *)(*v90 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_flagged);
        swift_beginAccess();
        v93 = *v92;
        v225 = v85;
        v94 = v85;
        v95 = *(_QWORD *)(v85 + 16);
        v96 = *(_QWORD *)(v94 + 24);
        if (v95 >= v96 >> 1)
        {
          sub_1A445A988(v96 > 1, v95 + 1, 1);
          v94 = v225;
        }
        *(_QWORD *)(v94 + 16) = v95 + 1;
        *(_BYTE *)(v94 + v95 + 32) = v93;
        ++v90;
        --v91;
        v85 = v94;
      }
      while (v91);
    }
    v205 = v85;
    v224 = MEMORY[0x1E0DEE9D8];
    sub_1A445A964(0, v212, 0);
    a2 = v224;
    if (v217)
    {
      v97 = 0;
      do
      {
        v98 = (uint64_t *)(MEMORY[0x1A859ECE0](v97, v72)
                        + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_priority);
        swift_beginAccess();
        v99 = *v98;
        swift_unknownObjectRelease();
        v224 = a2;
        v101 = *(_QWORD *)(a2 + 16);
        v100 = *(_QWORD *)(a2 + 24);
        if (v101 >= v100 >> 1)
        {
          sub_1A445A964(v100 > 1, v101 + 1, 1);
          a2 = v224;
        }
        ++v97;
        *(_QWORD *)(a2 + 16) = v101 + 1;
        *(_QWORD *)(a2 + 8 * v101 + 32) = v99;
      }
      while (v70 != v97);
    }
    else
    {
      v102 = v211;
      v103 = v70;
      do
      {
        v104 = (uint64_t *)(*v102
                         + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_priority);
        swift_beginAccess();
        v105 = *v104;
        v224 = a2;
        v107 = *(_QWORD *)(a2 + 16);
        v106 = *(_QWORD *)(a2 + 24);
        if (v107 >= v106 >> 1)
        {
          sub_1A445A964(v106 > 1, v107 + 1, 1);
          a2 = v224;
        }
        *(_QWORD *)(a2 + 16) = v107 + 1;
        *(_QWORD *)(a2 + 8 * v107 + 32) = v105;
        ++v102;
        --v103;
      }
      while (v103);
    }
    v223 = (char *)MEMORY[0x1E0DEE9D8];
    sub_1A445A948(0, v212, 0);
    v11 = v223;
    if (v217)
    {
      v108 = 0;
      do
      {
        v109 = (uint64_t *)(MEMORY[0x1A859ECE0](v108, v218)
                         + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_tags);
        swift_beginAccess();
        v110 = *v109;
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        v223 = v11;
        v112 = *((_QWORD *)v11 + 2);
        v111 = *((_QWORD *)v11 + 3);
        if (v112 >= v111 >> 1)
        {
          sub_1A445A948(v111 > 1, v112 + 1, 1);
          v11 = v223;
        }
        ++v108;
        *((_QWORD *)v11 + 2) = v112 + 1;
        *(_QWORD *)&v11[8 * v112 + 32] = v110;
      }
      while (v219 != v108);
    }
    else
    {
      v113 = v211;
      v114 = v70;
      do
      {
        v115 = (uint64_t *)(*v113 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_tags);
        swift_beginAccess();
        v116 = *v115;
        v223 = v11;
        v118 = *((_QWORD *)v11 + 2);
        v117 = *((_QWORD *)v11 + 3);
        swift_bridgeObjectRetain();
        if (v118 >= v117 >> 1)
        {
          sub_1A445A948(v117 > 1, v118 + 1, 1);
          v11 = v223;
        }
        *((_QWORD *)v11 + 2) = v118 + 1;
        *(_QWORD *)&v11[8 * v118 + 32] = v116;
        ++v113;
        --v114;
      }
      while (v114);
    }
    v222 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v119 = v219;
    sub_1A469153C();
    if (v217)
    {
      v120 = 0;
      v121 = v218;
      do
      {
        v122 = v120 + 1;
        MEMORY[0x1A859ECE0]();
        swift_beginAccess();
        swift_retain();
        swift_unknownObjectRelease();
        sub_1A4691518();
        sub_1A4691548();
        sub_1A4691554();
        sub_1A4691524();
        v120 = v122;
      }
      while (v119 != v122);
    }
    else
    {
      v123 = v119;
      v121 = v218;
      v124 = v211;
      do
      {
        ++v124;
        swift_beginAccess();
        swift_retain();
        sub_1A4691518();
        sub_1A4691548();
        sub_1A4691554();
        sub_1A4691524();
        --v123;
      }
      while (v123);
    }
    v125 = v222;
    *(_QWORD *)&v221 = MEMORY[0x1E0DEE9D8];
    sub_1A445A948(0, v212, 0);
    v13 = (char *)v221;
    v211 = v125;
    if (v217)
    {
      v126 = 0;
      do
      {
        v127 = (uint64_t *)(MEMORY[0x1A859ECE0](v126, v121)
                         + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_recurrences);
        swift_beginAccess();
        v128 = *v127;
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        *(_QWORD *)&v221 = v13;
        v130 = *((_QWORD *)v13 + 2);
        v129 = *((_QWORD *)v13 + 3);
        if (v130 >= v129 >> 1)
        {
          sub_1A445A948(v129 > 1, v130 + 1, 1);
          v13 = (char *)v221;
        }
        ++v126;
        *((_QWORD *)v13 + 2) = v130 + 1;
        *(_QWORD *)&v13[8 * v130 + 32] = v128;
        v121 = v218;
      }
      while (v219 != v126);
    }
    else
    {
      v131 = 0;
      do
      {
        v132 = (uint64_t *)(*(_QWORD *)(v121 + 8 * v131 + 32)
                         + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_recurrences);
        swift_beginAccess();
        v133 = *v132;
        *(_QWORD *)&v221 = v13;
        v135 = *((_QWORD *)v13 + 2);
        v134 = *((_QWORD *)v13 + 3);
        swift_bridgeObjectRetain();
        if (v135 >= v134 >> 1)
        {
          sub_1A445A948(v134 > 1, v135 + 1, 1);
          v13 = (char *)v221;
        }
        ++v131;
        *((_QWORD *)v13 + 2) = v135 + 1;
        *(_QWORD *)&v13[8 * v135 + 32] = v133;
        v121 = v218;
      }
      while (v219 != v131);
    }
    swift_bridgeObjectRelease();
    v29 = v202;
  }
  else
  {
    swift_bridgeObjectRelease();
    v13 = (char *)MEMORY[0x1E0DEE9D8];
    v211 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v11 = (char *)MEMORY[0x1E0DEE9D8];
    a2 = MEMORY[0x1E0DEE9D8];
    v205 = MEMORY[0x1E0DEE9D8];
    v206 = (char *)MEMORY[0x1E0DEE9D8];
    v207 = MEMORY[0x1E0DEE9D8];
    v208 = MEMORY[0x1E0DEE9D8];
    v209 = MEMORY[0x1E0DEE9D8];
    v213 = (id)MEMORY[0x1E0DEE9D8];
    v29 = MEMORY[0x1E0DEE9D8];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EF88);
  v136 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EF90);
  swift_allocObject();
  v137 = swift_bridgeObjectRetain();
  v138 = sub_1A450C518(v137, 0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v136 + 16) = v138;
  v139 = *(_QWORD *)(v29 + 16);
  swift_bridgeObjectRelease();
  v140 = sub_1A445A21C(0, v139);
  sub_1A4504738((uint64_t)v140, &v221);
  *(_OWORD *)(v136 + 32) = v221;
  v218 = v136;
  *(_BYTE *)(v136 + 24) = 1;
  v141 = objc_msgSend((id)objc_opt_self(), sel_newObjectID);
  v142 = (objc_class *)type metadata accessor for REMObjectID_Codable();
  v143 = objc_allocWithZone(v142);
  v6 = (unint64_t)v141;
  v144 = objc_msgSend((id)v6, sel_uuid);
  v145 = v214;
  sub_1A46900F0();

  v146 = (void *)sub_1A46900D8();
  (*(void (**)(char *, uint64_t))(v215 + 8))(v145, v216);
  a1 = (unint64_t)objc_msgSend((id)v6, sel_entityName);
  if (!a1)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    a1 = sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v220.receiver = v143;
  v220.super_class = v142;
  v147 = objc_msgSendSuper2(&v220, sel_initWithUUID_entityName_, v146, a1);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EF98);
  v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EFA0);
  swift_allocObject();
  v5 = v147;
  v16 = (unint64_t)v213;
  v148 = swift_bridgeObjectRetain();
  v149 = sub_1A450C6E4(v148, (unint64_t)v5);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = v149;
  if (!(v16 >> 62))
  {
    v150 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    goto LABEL_105;
  }
LABEL_117:
  swift_bridgeObjectRetain();
  v150 = sub_1A46916A4();
  swift_bridgeObjectRelease_n();
  if (v150 < 0)
  {
    __break(1u);
    goto LABEL_119;
  }
LABEL_105:
  v6 = v208;
  v151 = sub_1A445A21C(0, v150);
  sub_1A4504738((uint64_t)v151, &v221);

  *(_OWORD *)(v2 + 32) = v221;
  *(_BYTE *)(v2 + 24) = 1;
  v152 = (uint64_t)v210;
  sub_1A46900A8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EFA8);
  swift_allocObject();
  v217 = sub_1A4508FF4(v209, v152);
  type metadata accessor for REMSuggestedList();
  inited = swift_initStaticObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EFB0);
  a1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EFB8);
  v16 = swift_allocObject();
  v154 = v207;
  v155 = swift_bridgeObjectRetain();
  v156 = sub_1A450D400(v155, inited, (void (*)(void))sub_1A44426D8, (unint64_t)sub_1A444820C);
  swift_bridgeObjectRelease();
  v219 = a1;
  *(_QWORD *)(a1 + 16) = v156;
  if (!(v154 >> 62))
  {
    v157 = *(_QWORD *)((v154 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    goto LABEL_107;
  }
LABEL_119:
  swift_bridgeObjectRetain();
  v157 = sub_1A46916A4();
  swift_bridgeObjectRelease_n();
  if (v157 < 0)
  {
    __break(1u);
    goto LABEL_121;
  }
LABEL_107:
  v16 = (unint64_t)v206;
  v158 = sub_1A445A21C(0, v157);
  sub_1A4504738((uint64_t)v158, &v221);
  v159 = v219;
  *(_OWORD *)(v219 + 32) = v221;
  *(_BYTE *)(v159 + 24) = 1;
  type metadata accessor for REMSuggestedWeekDay();
  v160 = swift_allocObject();
  *(_QWORD *)&v221 = 0;
  *(_QWORD *)(v160 + 16) = sub_1A46918D8();
  *(_QWORD *)(v160 + 24) = v161;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EFC0);
  a1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EFC8);
  swift_allocObject();
  swift_retain();
  v162 = swift_bridgeObjectRetain();
  v163 = sub_1A450D400(v162, v160, (void (*)(void))sub_1A44426CC, (unint64_t)sub_1A4448200);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = v163;
  if (!(v6 >> 62))
  {
    v164 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    goto LABEL_109;
  }
LABEL_121:
  swift_bridgeObjectRetain();
  v164 = sub_1A46916A4();
  swift_bridgeObjectRelease_n();
  if (v164 < 0)
  {
    __break(1u);
    goto LABEL_123;
  }
LABEL_109:
  v165 = sub_1A445A21C(0, v164);
  sub_1A4504738((uint64_t)v165, &v221);
  swift_release();
  *(_OWORD *)(a1 + 32) = v221;
  *(_BYTE *)(a1 + 24) = 1;
  type metadata accessor for REMSuggestedLocation();
  v166 = swift_allocObject();
  *(_QWORD *)(v166 + 16) = 0x296C696E28;
  *(_QWORD *)(v166 + 24) = 0xE500000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EFD0);
  v6 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EFD8);
  swift_allocObject();
  swift_retain();
  v167 = swift_bridgeObjectRetain();
  v168 = sub_1A450D400(v167, v166, (void (*)(void))sub_1A44426C0, (unint64_t)sub_1A44481F4);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v6 + 16) = v168;
  v215 = a1;
  v216 = v2;
  if (!(v16 >> 62))
  {
    v169 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    goto LABEL_111;
  }
LABEL_123:
  swift_bridgeObjectRetain();
  v169 = sub_1A46916A4();
  swift_bridgeObjectRelease_n();
  if (v169 < 0)
  {
    __break(1u);
    goto LABEL_125;
  }
LABEL_111:
  v170 = sub_1A445A21C(0, v169);
  sub_1A4504738((uint64_t)v170, &v221);
  swift_release();
  *(_OWORD *)(v6 + 32) = v221;
  v214 = (char *)v6;
  *(_BYTE *)(v6 + 24) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EFE0);
  v171 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EFE8);
  swift_allocObject();
  v172 = v205;
  v173 = swift_bridgeObjectRetain();
  v174 = sub_1A450CEF8(v173, 0);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v171 + 16) = v174;
  v175 = *(_QWORD *)(v172 + 16);
  swift_bridgeObjectRelease();
  v176 = sub_1A445A21C(0, v175);
  sub_1A4504738((uint64_t)v176, &v221);
  *(_OWORD *)(v171 + 32) = v221;
  v213 = (id)v171;
  *(_BYTE *)(v171 + 24) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EFF0);
  v16 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71EFF8);
  swift_allocObject();
  v177 = swift_bridgeObjectRetain();
  v178 = sub_1A450D0A8(v177, 0);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 16) = v178;
  v179 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v180 = sub_1A445A21C(0, v179);
  sub_1A4504738((uint64_t)v180, &v221);
  *(_OWORD *)(v16 + 32) = v221;
  *(_BYTE *)(v16 + 24) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71F000);
  a2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71F008);
  swift_allocObject();
  v181 = swift_bridgeObjectRetain();
  v182 = sub_1A450D254(v181, MEMORY[0x1E0DEE9E8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v182;
  v183 = *((_QWORD *)v11 + 2);
  swift_bridgeObjectRelease();
  v184 = sub_1A445A21C(0, v183);
  sub_1A4504738((uint64_t)v184, &v221);
  *(_OWORD *)(a2 + 32) = v221;
  *(_BYTE *)(a2 + 24) = 1;
  if (qword_1ED23E4E0 != -1)
LABEL_125:
    swift_once();
  v185 = qword_1ED23E4B8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71F010);
  v186 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71F018);
  swift_allocObject();
  swift_retain_n();
  v187 = (unint64_t)v211;
  v188 = swift_bridgeObjectRetain();
  v189 = sub_1A450D400(v188, v185, (void (*)(void))sub_1A4441EB8, (unint64_t)sub_1A4447D2C);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v186 + 16) = v189;
  if (!(v187 >> 62))
  {
    v190 = *(_QWORD *)((v187 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
LABEL_114:
    v191 = sub_1A445A21C(0, v190);
    sub_1A4504738((uint64_t)v191, &v221);
    swift_release();
    *(_OWORD *)(v186 + 32) = v221;
    *(_BYTE *)(v186 + 24) = 1;
    v192 = swift_allocObject();
    swift_allocObject();
    v193 = swift_bridgeObjectRetain();
    v194 = sub_1A450D254(v193, MEMORY[0x1E0DEE9E8]);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v192 + 16) = v194;
    v195 = *((_QWORD *)v13 + 2);
    swift_bridgeObjectRelease();
    v196 = sub_1A445A21C(0, v195);
    result = sub_1A4504738((uint64_t)v196, &v221);
    *(_OWORD *)(v192 + 32) = v221;
    *(_BYTE *)(v192 + 24) = 1;
    v197 = v204;
    *v204 = v203;
    v198 = v216;
    v197[2] = v218;
    v197[3] = v198;
    v199 = v219;
    v197[4] = v217;
    v197[5] = v199;
    v200 = v214;
    v197[6] = v215;
    v197[7] = v200;
    v197[8] = v213;
    v197[9] = v16;
    v197[10] = a2;
    v197[11] = v192;
    v197[12] = v186;
    return result;
  }
  swift_bridgeObjectRetain();
  v190 = sub_1A46916A4();
  result = swift_bridgeObjectRelease_n();
  if ((v190 & 0x8000000000000000) == 0)
    goto LABEL_114;
  __break(1u);
LABEL_128:
  __break(1u);
  return result;
}

uint64_t sub_1A4504738@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_23:
    result = swift_bridgeObjectRelease();
    *a2 = v5;
    a2[1] = v4;
    return result;
  }
  v3 = (uint64_t *)(a1 + 32);
  v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v7 = *v3++;
    v6 = v7;
    if (!v4[2])
      break;
    sub_1A443E654(v6);
    if ((v8 & 1) == 0)
      break;
LABEL_4:
    if (!--v2)
      goto LABEL_23;
  }
  v9 = v5[2];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = sub_1A443E654(v6);
  v13 = v4[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (!__OFADD__(v13, v14))
  {
    v16 = v11;
    if (v4[3] < v15)
    {
      sub_1A4441EAC(v15, isUniquelyReferenced_nonNull_native);
      v17 = sub_1A443E654(v6);
      if ((v16 & 1) != (v18 & 1))
        goto LABEL_26;
      v12 = v17;
      if ((v16 & 1) == 0)
        goto LABEL_16;
LABEL_14:
      *(_QWORD *)(v4[7] + 8 * v12) = v9;
LABEL_18:
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_1A4438B4C(0, v5[2] + 1, 1, v5);
      v24 = v5[2];
      v23 = v5[3];
      if (v24 >= v23 >> 1)
        v5 = sub_1A4438B4C((_QWORD *)(v23 > 1), v24 + 1, 1, v5);
      v5[2] = v24 + 1;
      v5[v24 + 4] = v6;
      goto LABEL_4;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1A4447D20();
      if ((v16 & 1) != 0)
        goto LABEL_14;
    }
LABEL_16:
    v4[(v12 >> 6) + 8] |= 1 << v12;
    v19 = 8 * v12;
    *(_QWORD *)(v4[6] + v19) = v6;
    *(_QWORD *)(v4[7] + v19) = v9;
    v20 = v4[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_25;
    v4[2] = v22;
    goto LABEL_18;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t REMSuggestedAttributeInputDataFrame.iloc(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[5];
  id v24;
  uint64_t v25;
  uint64_t v26;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1[9];
  v23[0] = v1[8];
  v23[1] = v6;
  v7 = v1[10];
  v23[4] = v1[11];
  v8 = v1[12];
  v23[2] = v7;
  v23[3] = v8;
  v9 = sub_1A450D6B4(a1);
  v25 = v10;
  v26 = v9;
  v11 = (void *)sub_1A450923C(a1);
  v12 = sub_1A450923C(a1);
  swift_bridgeObjectRetain();
  v24 = v11;
  swift_retain();
  sub_1A45090F0(a1, (uint64_t)v5);
  v13 = sub_1A46900B4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 0, 1, v13);
  v14 = sub_1A450923C(a1);
  v15 = sub_1A450923C(a1);
  v16 = sub_1A450918C(a1) & 1;
  v17 = sub_1A450923C(a1);
  v18 = sub_1A450923C(a1);
  v19 = sub_1A450923C(a1);
  v20 = sub_1A450923C(a1);
  type metadata accessor for REMSuggestedAttributeInput(0);
  v21 = swift_allocObject();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  REMSuggestedAttributeInput.init(reminderTitle:reminderID:list:creationDate:dueDayOfWeek:dueDateTime:location:flagged:priority:tags:contact:recurrence:)(v26, v25, v24, v12, (uint64_t)v5, v14, 0, 0, v15, v16, v17, 0, v18, v19, v20);
  return v21;
}

uint64_t REMSuggestedAttributeInputDataFrame.iloc(index:)@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *a1;
  v4 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_1A45092E8(v3, v4, &qword_1EE71EF88);
  v14 = sub_1A45092E8(v3, v4, &qword_1EE71EF98);
  v13 = sub_1A45092E8(v3, v4, &qword_1EE71EFA8);
  v12 = sub_1A45092E8(v3, v4, &qword_1EE71EFB0);
  v11 = sub_1A45092E8(v3, v4, &qword_1EE71EFC0);
  v5 = sub_1A45092E8(v3, v4, &qword_1EE71EFD0);
  v6 = sub_1A45092E8(v3, v4, &qword_1EE71EFE0);
  v7 = sub_1A45092E8(v3, v4, &qword_1EE71EFF0);
  v8 = sub_1A45092E8(v3, v4, &qword_1EE71F000);
  v9 = sub_1A45092E8(v3, v4, &qword_1EE71F010);
  result = sub_1A45092E8(v3, v4, &qword_1EE71F000);
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v15;
  a2[3] = v14;
  a2[4] = v13;
  a2[5] = v12;
  a2[6] = v11;
  a2[7] = v5;
  a2[8] = v6;
  a2[9] = v7;
  a2[10] = v8;
  a2[11] = result;
  a2[12] = v9;
  return result;
}

ReminderKitInternal::REMSuggestedAttributeOutput::Pipeline_optional __swiftcall REMSuggestedAttributeOutput.Pipeline.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMSuggestedAttributeOutput::Pipeline_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static REMSuggestedAttributeOutput.Pipeline.allCases.getter()
{
  return &unk_1E4C0FBB8;
}

uint64_t REMSuggestedAttributeOutput.Pipeline.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A4504DF0 + 4 * byte_1A469C718[*v0]))(0x5079726575516C6ELL, 0xED00007265737261);
}

uint64_t sub_1A4504DF0()
{
  return 5131883;
}

uint64_t sub_1A4504E00()
{
  return 0x6168654265726F63;
}

uint64_t sub_1A4504E20()
{
  return 0x6974736972756568;
}

uint64_t sub_1A4504E3C()
{
  return 0x6465726F68636E61;
}

uint64_t sub_1A4504E60()
{
  return 0x6867696C746F7073;
}

void sub_1A4504E80(char *a1)
{
  sub_1A4668644(*a1);
}

void sub_1A4504E8C()
{
  char *v0;

  sub_1A4635E30(*v0);
}

void sub_1A4504E94()
{
  __asm { BR              X10 }
}

uint64_t sub_1A4504EDC()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A4504F80(uint64_t a1)
{
  char *v1;

  sub_1A4637BB0(a1, *v1);
}

ReminderKitInternal::REMSuggestedAttributeOutput::Pipeline_optional sub_1A4504F88(Swift::String *a1)
{
  return REMSuggestedAttributeOutput.Pipeline.init(rawValue:)(*a1);
}

uint64_t sub_1A4504F94()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A4504FD0 + 4 * byte_1A469C724[*v0]))();
}

void sub_1A4504FD0(_QWORD *a1@<X8>)
{
  *a1 = 5131883;
  a1[1] = 0xE300000000000000;
}

void sub_1A4504FE4(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "coreBehavior");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1A4505008(_QWORD *a1@<X8>)
{
  *a1 = 0x6974736972756568;
  a1[1] = 0xE900000000000063;
}

void sub_1A4505028(char *a1@<X8>)
{
  strcpy(a1, "anchoredBubble");
  a1[15] = -18;
}

void sub_1A4505050(_QWORD *a1@<X8>)
{
  *a1 = 0x6867696C746F7073;
  a1[1] = 0xE900000000000074;
}

uint64_t sub_1A4505074()
{
  sub_1A450F7E4();
  return sub_1A4690B70();
}

uint64_t sub_1A45050D0()
{
  sub_1A450F7E4();
  return sub_1A4690B34();
}

void sub_1A450511C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FBB8;
}

uint64_t REMSuggestedAttributeOutput.Source.predictors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A4505134()
{
  return sub_1A4505150();
}

uint64_t sub_1A4505150()
{
  sub_1A4691C8C();
  sub_1A4690948();
  return sub_1A4691CC8();
}

uint64_t sub_1A450519C()
{
  return sub_1A4690948();
}

uint64_t sub_1A45051B8()
{
  return sub_1A45051D4();
}

uint64_t sub_1A45051D4()
{
  sub_1A4691C8C();
  sub_1A4690948();
  return sub_1A4691CC8();
}

uint64_t sub_1A450521C@<X0>(BOOL *a1@<X8>)
{
  return sub_1A4505228(a1);
}

uint64_t sub_1A4505228@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A4505274(_QWORD *a1@<X8>)
{
  *a1 = 0x6F74636964657270;
  a1[1] = 0xEA00000000007372;
}

uint64_t sub_1A4505294()
{
  return 0x6F74636964657270;
}

uint64_t sub_1A45052B0@<X0>(BOOL *a1@<X8>)
{
  return sub_1A45052BC(a1);
}

uint64_t sub_1A45052BC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1A450530C()
{
  sub_1A450D778();
  return sub_1A4691DB8();
}

uint64_t sub_1A4505334()
{
  sub_1A450D778();
  return sub_1A4691DC4();
}

ReminderKitInternal::REMSuggestedAttributeOutput::Source __swiftcall REMSuggestedAttributeOutput.Source.init(_:)(ReminderKitInternal::REMSuggestedAttributeOutput::Source result)
{
  ReminderKitInternal::REMSuggestedAttributeOutput::Source *v1;

  v1->predictors._rawValue = result.predictors._rawValue;
  return result;
}

ReminderKitInternal::REMSuggestedAttributeOutput::Source __swiftcall REMSuggestedAttributeOutput.Source.init(pipeline:predictor:)(ReminderKitInternal::REMSuggestedAttributeOutput::Pipeline pipeline, Swift::String predictor)
{
  ReminderKitInternal::REMSuggestedAttributeOutput::Source *v2;
  void *object;
  uint64_t countAndFlagsBits;
  ReminderKitInternal::REMSuggestedAttributeOutput::Source *v5;
  char v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  ReminderKitInternal::REMSuggestedAttributeOutput::Source result;

  object = predictor._object;
  countAndFlagsBits = predictor._countAndFlagsBits;
  v5 = v2;
  v6 = *(_BYTE *)pipeline;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4695C10;
  *(_BYTE *)(inited + 32) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243000);
  v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = xmmword_1A4695C10;
  *(_QWORD *)(v8 + 32) = countAndFlagsBits;
  *(_QWORD *)(v8 + 40) = object;
  v9 = sub_1A446C748(v8);
  swift_setDeallocating();
  swift_arrayDestroy();
  *(_QWORD *)(inited + 40) = v9;
  sub_1A443D024(inited);
  v5->predictors._rawValue = result.predictors._rawValue;
  return result;
}

uint64_t REMSuggestedAttributeOutput.Source.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EAF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A450D778();
  sub_1A4691D28();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240078);
    sub_1A450D7BC();
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t REMSuggestedAttributeOutput.Source.description.getter()
{
  return sub_1A450558C(0);
}

uint64_t sub_1A450558C(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  char v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  char *v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v30;
  unint64_t v31;
  _QWORD *v32;
  _QWORD v33[2];

  v2 = *v1;
  if (!*(_QWORD *)(*v1 + 16))
    goto LABEL_39;
  sub_1A443E52C(0);
  if ((v4 & 1) == 0)
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!*(_QWORD *)(v2 + 16))
      goto LABEL_39;
    goto LABEL_9;
  }
  v5 = sub_1A4438920(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v7 = v5[2];
  v6 = v5[3];
  if (v7 >= v6 >> 1)
    v5 = sub_1A4438920((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
  v5[2] = v7 + 1;
  v8 = (char *)&v5[2 * v7];
  strcpy(v8 + 32, "nlQueryParser");
  *((_WORD *)v8 + 23) = -4864;
  if (*(_QWORD *)(v2 + 16))
  {
LABEL_9:
    sub_1A443E52C(1);
    if ((v9 & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_1A4438920(0, v5[2] + 1, 1, v5);
      v11 = v5[2];
      v10 = v5[3];
      if (v11 >= v10 >> 1)
        v5 = sub_1A4438920((_QWORD *)(v10 > 1), v11 + 1, 1, v5);
      v5[2] = v11 + 1;
      v12 = &v5[2 * v11];
      v12[4] = 5131883;
      v12[5] = 0xE300000000000000;
    }
    if (*(_QWORD *)(v2 + 16))
    {
      sub_1A443E52C(2);
      if ((v13 & 1) != 0)
      {
        v14 = 0x6168654265726F63;
        if ((a1 & 1) != 0)
        {
          strcpy((char *)v33, "coreBehavior:");
          HIWORD(v33[1]) = -4864;
          swift_bridgeObjectRetain();
          sub_1A4690D80();
          swift_bridgeObjectRelease();
          sub_1A4690984();
          swift_bridgeObjectRelease();
          v14 = v33[0];
          v15 = v33[1];
        }
        else
        {
          v15 = 0xEC000000726F6976;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1A4438920(0, v5[2] + 1, 1, v5);
        v16 = v5[2];
        v17 = v5[3];
        v18 = v16 + 1;
        if (v16 >= v17 >> 1)
        {
          v30 = v5;
          v31 = v5[2];
          v32 = sub_1A4438920((_QWORD *)(v17 > 1), v16 + 1, 1, v30);
          v16 = v31;
          v5 = v32;
        }
        v5[2] = v18;
        v19 = &v5[2 * v16];
        v19[4] = v14;
        v19[5] = v15;
      }
      if (*(_QWORD *)(v2 + 16))
      {
        sub_1A443E52C(3);
        if ((v20 & 1) != 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v5 = sub_1A4438920(0, v5[2] + 1, 1, v5);
          v22 = v5[2];
          v21 = v5[3];
          if (v22 >= v21 >> 1)
            v5 = sub_1A4438920((_QWORD *)(v21 > 1), v22 + 1, 1, v5);
          v5[2] = v22 + 1;
          v23 = &v5[2 * v22];
          v23[4] = 0x6974736972756568;
          v23[5] = 0xE900000000000063;
        }
        if (*(_QWORD *)(v2 + 16))
        {
          sub_1A443E52C(4);
          if ((v24 & 1) != 0)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v5 = sub_1A4438920(0, v5[2] + 1, 1, v5);
            v26 = v5[2];
            v25 = v5[3];
            if (v26 >= v25 >> 1)
              v5 = sub_1A4438920((_QWORD *)(v25 > 1), v26 + 1, 1, v5);
            v5[2] = v26 + 1;
            v27 = (char *)&v5[2 * v26];
            strcpy(v27 + 32, "anchoredBubble");
            v27[47] = -18;
          }
        }
      }
    }
  }
LABEL_39:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A443AD20((unint64_t *)&qword_1ED2421A0, &qword_1ED242FF0, MEMORY[0x1E0DEAF20]);
  v28 = sub_1A4690828();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t REMSuggestedAttributeOutput.Source.debugDescription.getter()
{
  return sub_1A450558C(1);
}

ReminderKitInternal::REMSuggestedAttributeOutput::Source __swiftcall REMSuggestedAttributeOutput.Source.union(_:)(ReminderKitInternal::REMSuggestedAttributeOutput::Source a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  char v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  ReminderKitInternal::REMSuggestedAttributeOutput::Source result;
  _QWORD *v38;
  uint64_t v39;

  v38 = v1;
  v3 = *(_QWORD *)a1.predictors._rawValue;
  v4 = (_QWORD *)*v2;
  v39 = *(_QWORD *)a1.predictors._rawValue + 64;
  v5 = 1 << *(_BYTE *)(*(_QWORD *)a1.predictors._rawValue + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(*(_QWORD *)a1.predictors._rawValue + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = 0;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v9 << 6);
LABEL_22:
    v16 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v12);
    v17 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v12);
    v18 = v4[2];
    swift_bridgeObjectRetain();
    if (v18 && (sub_1A443E52C(v16), (v20 & 1) != 0))
    {
      v21 = *(_QWORD *)(v4[7] + 8 * v19);
      swift_bridgeObjectRetain();
      v22 = sub_1A4505E20(v17, v21);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1A445E734(v22, v16, isUniquelyReferenced_nonNull_native);
    }
    else
    {
      v24 = swift_isUniquelyReferenced_nonNull_native();
      sub_1A443E52C(v16);
      v27 = v26;
      v28 = v4[2];
      v29 = (v25 & 1) == 0;
      v30 = v28 + v29;
      if (__OFADD__(v28, v29))
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      v31 = v25;
      if (v4[3] >= v30)
      {
        if ((v24 & 1) != 0)
        {
          if ((v25 & 1) != 0)
            goto LABEL_4;
        }
        else
        {
          sub_1A4448770();
          if ((v31 & 1) != 0)
            goto LABEL_4;
        }
      }
      else
      {
        sub_1A4442F74(v30, v24);
        sub_1A443E52C(v16);
        if ((v31 & 1) != (v33 & 1))
          goto LABEL_41;
        v27 = v32;
        if ((v31 & 1) != 0)
        {
LABEL_4:
          v10 = v4[7];
          swift_bridgeObjectRelease();
          *(_QWORD *)(v10 + 8 * v27) = v17;
          goto LABEL_5;
        }
      }
      v4[(v27 >> 6) + 8] |= 1 << v27;
      *(_BYTE *)(v4[6] + v27) = v16;
      *(_QWORD *)(v4[7] + 8 * v27) = v17;
      v34 = v4[2];
      v35 = __OFADD__(v34, 1);
      v36 = v34 + 1;
      if (v35)
        goto LABEL_39;
      v4[2] = v36;
    }
LABEL_5:
    swift_bridgeObjectRelease();
  }
  v13 = v9 + 1;
  if (__OFADD__(v9, 1))
    goto LABEL_38;
  if (v13 >= v8)
  {
LABEL_36:
    result.predictors._rawValue = (void *)swift_release();
    *v38 = v4;
    return result;
  }
  v14 = *(_QWORD *)(v39 + 8 * v13);
  ++v9;
  if (v14)
    goto LABEL_21;
  v9 = v13 + 1;
  if (v13 + 1 >= v8)
    goto LABEL_36;
  v14 = *(_QWORD *)(v39 + 8 * v9);
  if (v14)
    goto LABEL_21;
  v9 = v13 + 2;
  if (v13 + 2 >= v8)
    goto LABEL_36;
  v14 = *(_QWORD *)(v39 + 8 * v9);
  if (v14)
  {
LABEL_21:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
    goto LABEL_22;
  }
  v15 = v13 + 3;
  if (v15 >= v8)
    goto LABEL_36;
  v14 = *(_QWORD *)(v39 + 8 * v15);
  if (v14)
  {
    v9 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v8)
      goto LABEL_36;
    v14 = *(_QWORD *)(v39 + 8 * v9);
    ++v15;
    if (v14)
      goto LABEL_21;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  result.predictors._rawValue = (void *)sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A4505CC8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = result;
  v3 = 0;
  v15 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_1A4466454(&v14, *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1A4505E20(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1A4465F6C(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

Swift::Void __swiftcall REMSuggestedAttributeOutput.Source.append(pipeline:predictor:)(ReminderKitInternal::REMSuggestedAttributeOutput::Pipeline pipeline, Swift::String predictor)
{
  uint64_t *v2;
  uint64_t *v3;
  void *object;
  uint64_t countAndFlagsBits;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  object = predictor._object;
  countAndFlagsBits = predictor._countAndFlagsBits;
  v6 = *(_BYTE *)pipeline;
  v7 = *v2;
  if (!*(_QWORD *)(*v2 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain();
  sub_1A443E52C(v6);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243000);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A4695C10;
    *(_QWORD *)(inited + 32) = countAndFlagsBits;
    *(_QWORD *)(inited + 40) = object;
    swift_bridgeObjectRetain();
    v11 = sub_1A446C748(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    goto LABEL_6;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = v10;
  swift_bridgeObjectRetain();
  sub_1A4465F6C(&v15, countAndFlagsBits, (uint64_t)object);
  swift_bridgeObjectRelease();
  v11 = v16;
LABEL_6:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = v7;
  sub_1A445E734(v11, v6, isUniquelyReferenced_nonNull_native);
  v14 = v15;
  swift_bridgeObjectRelease();
  *v3 = v14;
}

Swift::Bool __swiftcall REMSuggestedAttributeOutput.Source.contains(_:)(ReminderKitInternal::REMSuggestedAttributeOutput::Pipeline a1)
{
  uint64_t v1;
  char v2;

  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    sub_1A443E52C(*(_BYTE *)a1);
  else
    v2 = 0;
  return v2 & 1;
}

uint64_t REMSuggestedAttributeOutput.Source.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E838);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A450D778();
  sub_1A4691D40();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240078);
  sub_1A450D884();
  sub_1A4691890();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMSuggestedAttributeOutput.Source.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1A45098B4(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t static REMSuggestedAttributeOutput.Source.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1A450626C(*a1, *a2);
}

uint64_t sub_1A450626C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;

  if (result == a2)
    return 1;
  v2 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_22;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v8)
      return 1;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        return 1;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          return 1;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
          break;
      }
    }
LABEL_21:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_22:
    v14 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v10);
    v15 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v10);
    swift_bridgeObjectRetain();
    sub_1A443E52C(v15);
    if ((v16 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v17 = swift_bridgeObjectRetain();
    v18 = sub_1A4464338(v17, v14);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
      return 0;
  }
  v13 = v11 + 3;
  if (v13 >= v8)
    return 1;
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      return 1;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1A4506414(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  int64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  char *v44;
  int64_t v45;
  _BOOL4 v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v4 = sub_1A46900FC();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  MEMORY[0x1E0C80A78](v4);
  v44 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FC28);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v40 - v11;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v45 = 0;
  v43 = a1;
  v15 = *(_QWORD *)(a1 + 64);
  v14 = a1 + 64;
  v13 = v15;
  v16 = 1 << *(_BYTE *)(v14 - 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v13;
  v41 = v14;
  v42 = (unint64_t)(v16 + 63) >> 6;
  v40 = v42 - 1;
  v19 = (uint64_t *)&unk_1ED23FE88;
  v47 = (char *)&v40 - v11;
  v20 = (uint64_t)v44;
  v21 = v49;
  while (1)
  {
    if (v18)
    {
      v22 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v23 = v22 | (v45 << 6);
LABEL_8:
      v24 = v43;
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v9, *(_QWORD *)(v43 + 48) + *(_QWORD *)(v48 + 72) * v23, v49);
      v25 = *(_QWORD *)(v24 + 56);
      v26 = __swift_instantiateConcreteTypeFromMangledName(v19);
      *(_QWORD *)&v9[*(int *)(v26 + 48)] = *(_QWORD *)(v25 + 8 * v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 0, 1, v26);
      v12 = v47;
      goto LABEL_30;
    }
    v27 = v45 + 1;
    if (__OFADD__(v45, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v27 < v42)
    {
      v28 = *(_QWORD *)(v41 + 8 * v27);
      if (v28)
        goto LABEL_12;
      v29 = v45 + 2;
      ++v45;
      if (v27 + 1 < v42)
      {
        v28 = *(_QWORD *)(v41 + 8 * v29);
        if (v28)
          goto LABEL_15;
        v45 = v27 + 1;
        if (v27 + 2 < v42)
        {
          v28 = *(_QWORD *)(v41 + 8 * (v27 + 2));
          if (v28)
          {
            v27 += 2;
            goto LABEL_12;
          }
          v45 = v27 + 2;
          if (v27 + 3 < v42)
          {
            v28 = *(_QWORD *)(v41 + 8 * (v27 + 3));
            if (v28)
            {
              v27 += 3;
              goto LABEL_12;
            }
            v29 = v27 + 4;
            v45 = v27 + 3;
            if (v27 + 4 < v42)
              break;
          }
        }
      }
    }
LABEL_29:
    v30 = __swift_instantiateConcreteTypeFromMangledName(v19);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v9, 1, 1, v30);
    v18 = 0;
LABEL_30:
    sub_1A44C6CC8((uint64_t)v9, (uint64_t)v12, &qword_1ED23FC28);
    v31 = __swift_instantiateConcreteTypeFromMangledName(v19);
    v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v12, 1, v31);
    v46 = v32 == 1;
    if (v32 != 1)
    {
      v33 = v19;
      v34 = *(int *)(v31 + 48);
      v35 = v48;
      (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v20, v12, v21);
      v36 = *(_QWORD *)&v12[v34];
      v37 = sub_1A443E6BC(v20);
      v39 = v38;
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v20, v21);
      if ((v39 & 1) != 0)
      {
        v12 = v47;
        v19 = v33;
        if (*(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v37) == v36)
          continue;
      }
    }
    return v46;
  }
  v28 = *(_QWORD *)(v41 + 8 * v29);
  if (v28)
  {
LABEL_15:
    v27 = v29;
LABEL_12:
    v18 = (v28 - 1) & v28;
    v23 = __clz(__rbit64(v28)) + (v27 << 6);
    v45 = v27;
    goto LABEL_8;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v42)
    {
      v45 = v40;
      goto LABEL_29;
    }
    v28 = *(_QWORD *)(v41 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_12;
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_1A45067C8(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  id v15;
  unint64_t v16;
  char v17;
  char v18;
  int32x2_t v19;
  int64x2_t v20;

  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9)
      return;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v20 = *(int64x2_t *)(*(_QWORD *)(a1 + 56) + 16 * v11);
    v15 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v11);
    v16 = sub_1A443E68C((uint64_t)v15);
    v18 = v17;

    if ((v18 & 1) != 0)
    {
      v19 = vmovn_s64(vceqq_s64(*(int64x2_t *)(*(_QWORD *)(a2 + 56) + 16 * v16), v20));
      if ((v19.i32[0] & v19.i32[1] & 1) != 0)
        continue;
    }
    return;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
}

uint64_t REMSuggestedAttributeOutput.Source.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A4691C8C();
  sub_1A45098B4((uint64_t)v3, v1);
  return sub_1A4691CC8();
}

uint64_t sub_1A45069C4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMSuggestedAttributeOutput.Source.init(from:)(a1, a2);
}

uint64_t sub_1A45069D8(_QWORD *a1)
{
  return REMSuggestedAttributeOutput.Source.encode(to:)(a1);
}

uint64_t sub_1A45069EC()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A4691C8C();
  sub_1A45098B4((uint64_t)v3, v1);
  return sub_1A4691CC8();
}

uint64_t sub_1A4506A30(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A45098B4(a1, *v1);
}

uint64_t sub_1A4506A38()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A4691C8C();
  sub_1A45098B4((uint64_t)v3, v1);
  return sub_1A4691CC8();
}

uint64_t sub_1A4506A78()
{
  return sub_1A450558C(0);
}

uint64_t sub_1A4506AAC(uint64_t *a1, uint64_t *a2)
{
  return sub_1A450626C(*a1, *a2);
}

void REMSuggestedAttributeOutput.description.getter()
{
  sub_1A4507244();
}

void sub_1A4506AC0()
{
  uint64_t v1;

  v1 = sub_1A4690318();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X10 }
}

uint64_t sub_1A4506B3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 80) = 0;
  *(_QWORD *)(v1 - 72) = 0xE000000000000000;
  swift_retain();
  sub_1A4691410();
  swift_bridgeObjectRelease();
  strcpy((char *)(v1 - 80), "list(source: ");
  *(_WORD *)(v1 - 66) = -4864;
  *(_QWORD *)(v1 - 88) = v0;
  sub_1A450558C(0);
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_release();
  swift_bridgeObjectRelease();
  return *(_QWORD *)(v1 - 80);
}

void REMSuggestedAttributeOutput.debugDescription.getter()
{
  sub_1A4507244();
}

void sub_1A4507244()
{
  sub_1A4506AC0();
}

void REMSuggestedAttributeOutput.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_1A45072BC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A4691C98();
  swift_retain();
  sub_1A45098B4(v0, v1);
  swift_bridgeObjectRetain();
  sub_1A4690948();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t REMSuggestedAttributeOutput.hashValue.getter()
{
  sub_1A4691C8C();
  REMSuggestedAttributeOutput.hash(into:)();
  return sub_1A4691CC8();
}

uint64_t sub_1A45074B4()
{
  sub_1A4691C8C();
  REMSuggestedAttributeOutput.hash(into:)();
  return sub_1A4691CC8();
}

uint64_t sub_1A4507508()
{
  sub_1A4691C8C();
  REMSuggestedAttributeOutput.hash(into:)();
  return sub_1A4691CC8();
}

void sub_1A4507554()
{
  sub_1A4507564();
}

void sub_1A450755C()
{
  sub_1A4507564();
}

void sub_1A4507564()
{
  sub_1A4506AC0();
}

ReminderKitInternal::REMSuggestedAttributeOutput::CodingKeys_optional __swiftcall REMSuggestedAttributeOutput.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMSuggestedAttributeOutput::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedAttributeOutput::CodingKeys_optional __swiftcall REMSuggestedAttributeOutput.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  ReminderKitInternal::REMSuggestedAttributeOutput::CodingKeys_optional result;
  char v4;

  v2 = v1;
  result.value = REMSuggestedAttributeOutput.CodingKeys.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

ReminderKitInternal::REMSuggestedAttributeOutput::CodingKeys_optional __swiftcall REMSuggestedAttributeOutput.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 4;
  return (ReminderKitInternal::REMSuggestedAttributeOutput::CodingKeys_optional)intValue;
}

uint64_t REMSuggestedAttributeOutput.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedAttributeOutput.CodingKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A4507680 + 4 * byte_1A469C734[*v0]))(0x54746E65746E6F63, 0xEB00000000657079);
}

uint64_t sub_1A4507680()
{
  return 0x64616F6C796170;
}

uint64_t sub_1A4507698()
{
  return 0x656372756F73;
}

uint64_t sub_1A45076AC()
{
  return 0x546E4965676E6172;
}

uint64_t REMSuggestedAttributeOutput.CodingKeys.stringValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A4507704 + 4 * byte_1A469C738[*v0]))(0x54746E65746E6F63, 0xEB00000000657079);
}

uint64_t sub_1A4507704()
{
  return 0x64616F6C796170;
}

uint64_t sub_1A450771C()
{
  return 0x656372756F73;
}

uint64_t sub_1A4507730()
{
  return 0x546E4965676E6172;
}

void sub_1A4507750(char *a1)
{
  sub_1A466A9B0(*a1);
}

void sub_1A450775C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A4691C8C();
  __asm { BR              X9 }
}

uint64_t sub_1A45077B0()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4507824()
{
  __asm { BR              X10 }
}

uint64_t sub_1A4507868()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A45078C8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A4691C8C();
  __asm { BR              X9 }
}

uint64_t sub_1A4507918()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

ReminderKitInternal::REMSuggestedAttributeOutput::CodingKeys_optional sub_1A450798C(Swift::String *a1)
{
  return REMSuggestedAttributeOutput.CodingKeys.init(rawValue:)(*a1);
}

uint64_t sub_1A4507998()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A45079D0 + 4 * byte_1A469C748[*v0]))();
}

void sub_1A45079D0(_QWORD *a1@<X8>)
{
  *a1 = 0x64616F6C796170;
  a1[1] = 0xE700000000000000;
}

void sub_1A45079EC(_QWORD *a1@<X8>)
{
  *a1 = 0x656372756F73;
  a1[1] = 0xE600000000000000;
}

void sub_1A4507A04(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "rangeInTitle");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1A4507A28()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A4507A60 + 4 * byte_1A469C74C[*v0]))(0x54746E65746E6F63, 0xEB00000000657079);
}

uint64_t sub_1A4507A60()
{
  return 0x64616F6C796170;
}

uint64_t sub_1A4507A78()
{
  return 0x656372756F73;
}

uint64_t sub_1A4507A8C()
{
  return 0x546E4965676E6172;
}

ReminderKitInternal::REMSuggestedAttributeOutput::CodingKeys_optional sub_1A4507AAC@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  ReminderKitInternal::REMSuggestedAttributeOutput::CodingKeys_optional result;
  char v5;

  result.value = REMSuggestedAttributeOutput.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

uint64_t sub_1A4507AE0()
{
  sub_1A450D94C();
  return sub_1A4691DB8();
}

uint64_t sub_1A4507B08()
{
  sub_1A450D94C();
  return sub_1A4691DC4();
}

ReminderKitInternal::REMSuggestedAttributeOutput::ContentType_optional __swiftcall REMSuggestedAttributeOutput.ContentType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMSuggestedAttributeOutput::ContentType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 11;
  if (v3 < 0xB)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t REMSuggestedAttributeOutput.ContentType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A4507BB0 + 4 * byte_1A469C750[*v0]))(1953720684, 0xE400000000000000);
}

uint64_t sub_1A4507BB0()
{
  return 0x616F626574736170;
}

unint64_t sub_1A4507BD4()
{
  return 0xD000000000000013;
}

uint64_t sub_1A4507BF0()
{
  return 0x664F796144657564;
}

uint64_t sub_1A4507C10()
{
  return 0x636F4C6D72616C61;
}

uint64_t sub_1A4507C34()
{
  return 0x656C6369686576;
}

uint64_t sub_1A4507C4C()
{
  return 0x65656E6769737361;
}

uint64_t sub_1A4507C64()
{
  return 0x64656767616C66;
}

uint64_t sub_1A4507C7C()
{
  return 6775156;
}

uint64_t sub_1A4507C8C()
{
  return 0x746361746E6F63;
}

uint64_t sub_1A4507CA4()
{
  return 0x797469726F697270;
}

void sub_1A4507CBC(char *a1)
{
  sub_1A466A6B4(*a1);
}

uint64_t sub_1A4507CC8()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A4691C8C();
  sub_1A4636FEC((uint64_t)v3, v1);
  return sub_1A4691CC8();
}

void sub_1A4507D0C(uint64_t a1)
{
  char *v1;

  sub_1A4636FEC(a1, *v1);
}

uint64_t sub_1A4507D14()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A4691C8C();
  sub_1A4636FEC((uint64_t)v3, v1);
  return sub_1A4691CC8();
}

ReminderKitInternal::REMSuggestedAttributeOutput::ContentType_optional sub_1A4507D54(Swift::String *a1)
{
  return REMSuggestedAttributeOutput.ContentType.init(rawValue:)(*a1);
}

uint64_t sub_1A4507D60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = REMSuggestedAttributeOutput.ContentType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A4507D84()
{
  sub_1A450F7A0();
  return sub_1A4690B70();
}

uint64_t sub_1A4507DE0()
{
  sub_1A450F7A0();
  return sub_1A4690B34();
}

uint64_t REMSuggestedAttributeOutput.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71F020);
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A450D94C();
  sub_1A4691D28();
  if (!v1)
  {
    sub_1A450D990();
    sub_1A46917C4();
    sub_1A450D9D4();
    sub_1A46917C4();
    __asm { BR              X9 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1A4507FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for REMSuggestedLocation();
  *(_BYTE *)(v6 - 72) = 1;
  sub_1A450C498(&qword_1ED242498, v7, (uint64_t (*)(uint64_t))type metadata accessor for REMSuggestedLocation, (uint64_t)&protocol conformance descriptor for ClassificationLabel);
  sub_1A46917C4();
  if (v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v6 - 104) = v4;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v2);
    v8 = *(_QWORD *)(v6 - 96);
    *(_QWORD *)v1 = *(_QWORD *)(v6 - 104);
    *(_QWORD *)(v1 + 8) = v8;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_BYTE *)(v1 + 32) = 3;
  }
  JUMPOUT(0x1A4507F60);
}

void REMSuggestedAttributeOutput.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71F040);
  MEMORY[0x1E0C80A78](v3);
  v4 = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A450D94C();
  sub_1A4691D40();
  __asm { BR              X9 }
}

uint64_t sub_1A450857C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 96) = 0;
  *(_BYTE *)(v3 - 65) = 0;
  sub_1A450DA18();
  v4 = *(_QWORD *)(v3 - 112);
  swift_retain();
  sub_1A4691890();
  if (!v1)
  {
    *(_QWORD *)(v3 - 96) = *(_QWORD *)(v3 - 120);
    *(_BYTE *)(v3 - 65) = 2;
    sub_1A450DA5C();
    sub_1A4691890();
    *(_QWORD *)(v3 - 96) = v4;
    *(_BYTE *)(v3 - 65) = 1;
    type metadata accessor for REMSuggestedList();
    sub_1A450C498(&qword_1ED241B00, v5, (uint64_t (*)(uint64_t))type metadata accessor for REMSuggestedList, (uint64_t)&protocol conformance descriptor for ClassificationLabel);
    sub_1A4691890();
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 104) + 8))(v0, v2);
  return swift_release();
}

uint64_t sub_1A4508D30(_QWORD *a1)
{
  return REMSuggestedAttributeOutput.init(from:)(a1);
}

void sub_1A4508D44(_QWORD *a1)
{
  REMSuggestedAttributeOutput.encode(to:)(a1);
}

uint64_t sub_1A4508D58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;

  v2 = v1;
  if (*(_QWORD *)(*(_QWORD *)(v1 + 24) + 16)
    && (sub_1A443E654(a1), (v4 & 1) != 0)
    && (v5 = *(_QWORD *)(v1 + 32), *(_QWORD *)(v5 + 16))
    && (v6 = sub_1A443E654(a1), (v7 & 1) != 0))
  {
    v8 = *(_QWORD *)(v5 + 56) + 8 * v6;
  }
  else
  {
    v8 = v2 + 40;
  }
  return *(_QWORD *)v8;
}

uint64_t sub_1A4508DC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unsigned __int8 *v8;

  v2 = v1;
  if (*(_QWORD *)(*(_QWORD *)(v1 + 24) + 16)
    && (sub_1A443E654(a1), (v4 & 1) != 0)
    && (v5 = *(_QWORD *)(v1 + 32), *(_QWORD *)(v5 + 16))
    && (v6 = sub_1A443E654(a1), (v7 & 1) != 0))
  {
    v8 = (unsigned __int8 *)(*(_QWORD *)(v5 + 56) + v6);
  }
  else
  {
    v8 = (unsigned __int8 *)(v2 + 40);
  }
  return *v8;
}

uint64_t sub_1A4508E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v2[3] + 16) && (sub_1A443E654(a1), (v9 & 1) != 0))
  {
    v10 = v2[4];
    if (*(_QWORD *)(v10 + 16) && (v11 = sub_1A443E654(a1), (v12 & 1) != 0))
    {
      v13 = v11;
      v14 = *(_QWORD *)(v10 + 56);
      v15 = sub_1A46900B4();
      v16 = *(_QWORD *)(v15 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v8, v14 + *(_QWORD *)(v16 + 72) * v13, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15) != 1)
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a2, v8, v15);
    }
    else
    {
      v15 = sub_1A46900B4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 1, 1, v15);
    }
    v20 = (char *)v3 + *(_QWORD *)(*v3 + 104);
    sub_1A46900B4();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a2, v20, v15);
    return sub_1A445404C((uint64_t)v8, &qword_1ED243190);
  }
  else
  {
    v18 = (char *)v2 + *(_QWORD *)(*v2 + 104);
    v19 = sub_1A46900B4();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a2, v18, v19);
  }
}

uint64_t sub_1A4508FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  int64_t *v11;
  __int128 v13;

  v3 = v2;
  v6 = sub_1A46900B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71F348);
  swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1A450C904(a1, (uint64_t)v9);
  v10 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRelease();
  v11 = sub_1A445A21C(0, v10);
  sub_1A4504738((uint64_t)v11, &v13);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  *(_OWORD *)(v3 + 32) = v13;
  *(_BYTE *)(v3 + 24) = 1;
  return v3;
}

uint64_t sub_1A45090F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v5;
  uint64_t v7;
  uint64_t v8;

  if (*(_BYTE *)(v2 + 24) == 1)
    return sub_1A4508E28(a1, a2);
  if (*(_QWORD *)(*(_QWORD *)(v2 + 40) + 16))
  {
    sub_1A443E654(a1);
    if ((v5 & 1) != 0)
      return sub_1A4508E28(a1, a2);
  }
  v7 = *(_QWORD *)(v2 + 16) + *(_QWORD *)(**(_QWORD **)(v2 + 16) + 104);
  v8 = sub_1A46900B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, v7, v8);
}

uint64_t sub_1A450918C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v9;

  if (*(_BYTE *)(v1 + 24) == 1)
  {
    v3 = *(_QWORD *)(v1 + 16);
    if (*(_QWORD *)(*(_QWORD *)(v3 + 24) + 16)
      && (sub_1A443E654(a1), (v4 & 1) != 0)
      && (v5 = *(_QWORD *)(v3 + 32), *(_QWORD *)(v5 + 16))
      && (v6 = sub_1A443E654(a1), (v7 & 1) != 0))
    {
      return *(unsigned __int8 *)(*(_QWORD *)(v5 + 56) + v6);
    }
    else
    {
      return *(unsigned __int8 *)(v3 + 40);
    }
  }
  else if (*(_QWORD *)(*(_QWORD *)(v1 + 40) + 16) && (sub_1A443E654(a1), (v9 & 1) != 0))
  {
    return sub_1A4508DC0(a1) & 1;
  }
  else
  {
    return *(unsigned __int8 *)(*(_QWORD *)(v1 + 16) + 40);
  }
}

uint64_t sub_1A450923C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v9;

  if (*(_BYTE *)(v1 + 24) == 1)
  {
    v3 = *(_QWORD **)(v1 + 16);
    if (*(_QWORD *)(v3[3] + 16)
      && (sub_1A443E654(a1), (v4 & 1) != 0)
      && (v5 = v3[4], *(_QWORD *)(v5 + 16))
      && (v6 = sub_1A443E654(a1), (v7 & 1) != 0))
    {
      return *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
    }
    else
    {
      return v3[5];
    }
  }
  else if (*(_QWORD *)(*(_QWORD *)(v1 + 40) + 16) && (sub_1A443E654(a1), (v9 & 1) != 0))
  {
    return sub_1A4508D58(a1);
  }
  else
  {
    return *(_QWORD *)(*(_QWORD *)(v1 + 16) + 40);
  }
}

uint64_t sub_1A45092E8(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;

  v7 = *(_QWORD *)(v3 + 32);
  v8 = (_QWORD *)(v7 + 16);
  if (*(_QWORD *)(a1 + 16) >= *(_QWORD *)(v7 + 16))
  {
    v10 = *(_QWORD *)(v3 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1A4612250(v7, v10, a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1A450A958(a1, a2, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  if (*(_BYTE *)(v3 + 24) == 1)
    v8 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16) + 16);
  if (*(_QWORD *)(v9 + 16) == *v8)
  {
    swift_retain();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)(v3 + 16);
    swift_retain();
    sub_1A4504738(v9, &v14);
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v11;
    v12 = v14;
    *(_OWORD *)(v3 + 32) = v14;
    *(_BYTE *)(v3 + 24) = *(_QWORD *)(*(_QWORD *)(v11 + 16) + 16) == *(_QWORD *)(v12 + 16);
  }
  return v3;
}

_OWORD *sub_1A4509488(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_1A444A940(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

_OWORD *sub_1A4509500(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1A444A940(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

_OWORD *sub_1A4509568(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  _OWORD *result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1A46915B4();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_1A444A940(a3, (_OWORD *)(a4[7] + 32 * a1));
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_1A450960C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_1A4509654(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, double a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a6[(result >> 6) + 8] |= 1 << result;
  v7 = (_QWORD *)(a6[6] + 16 * result);
  *v7 = a2;
  v7[1] = a3;
  v8 = a6[7] + 24 * result;
  *(double *)v8 = a7;
  *(_QWORD *)(v8 + 8) = a4;
  *(_QWORD *)(v8 + 16) = a5;
  v9 = a6[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a6[2] = v11;
  return result;
}

_OWORD *sub_1A45096A8(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1A444A940(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_1A450970C(unint64_t result, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

unint64_t sub_1A4509754(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_1A450979C(unint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a6[(a1 >> 6) + 8] |= 1 << a1;
  v7 = a6[6] + 24 * a1;
  *(_QWORD *)v7 = a2;
  *(_QWORD *)(v7 + 8) = a3;
  *(_BYTE *)(v7 + 16) = a4 & 1;
  result = sub_1A44C6CC8(a5, a6[7] + 40 * a1, &qword_1ED241EB8);
  v9 = a6[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a6[2] = v11;
  return result;
}

unint64_t sub_1A450981C(unint64_t result, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_BYTE *)(a5[7] + result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_1A4509864(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

uint64_t sub_1A45098B4(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (_QWORD *)(a2 + 64);
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v6)
  {
    v8 = __clz(__rbit64(v6));
    goto LABEL_16;
  }
  if (v7 > 1)
  {
    v9 = v3[1];
    v10 = 1;
    if (v9)
      goto LABEL_15;
    v10 = 2;
    if (v7 <= 2)
      goto LABEL_17;
    v9 = v3[2];
    if (v9)
    {
LABEL_15:
      v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_16:
      __asm { BR              X8 }
    }
    v11 = 3;
    if (v7 > 3)
    {
      v9 = v3[3];
      if (v9)
      {
        v10 = 3;
        goto LABEL_15;
      }
      while (1)
      {
        v10 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
          JUMPOUT(0x1A4509B1CLL);
        }
        if (v10 >= v7)
          break;
        v9 = v3[v10];
        ++v11;
        if (v9)
          goto LABEL_15;
      }
    }
  }
LABEL_17:
  swift_release();
  return sub_1A4691C98();
}

uint64_t _s19ReminderKitInternal26REMSuggestedAttributeInputC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  if (!v4 && (sub_1A4691A40() & 1) == 0)
    return 0;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_list);
  v6 = *(_QWORD *)(a2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_list);
  v7 = *(_QWORD *)(v5 + 16) == *(_QWORD *)(v6 + 16) && *(_QWORD *)(v5 + 24) == *(_QWORD *)(v6 + 24);
  if (!v7 && (sub_1A4691A40() & 1) == 0)
    return 0;
  if ((sub_1A4690078() & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDayOfWeek);
  v9 = *(_QWORD *)(a2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDayOfWeek);
  v10 = *(_QWORD *)(v8 + 16) == *(_QWORD *)(v9 + 16) && *(_QWORD *)(v8 + 24) == *(_QWORD *)(v9 + 24);
  if ((v10 || (sub_1A4691A40() & 1) != 0)
    && ((v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_location),
         v12 = *(_QWORD *)(a2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_location),
         *(_QWORD *)(v11 + 16) == *(_QWORD *)(v12 + 16))
      ? (v13 = *(_QWORD *)(v11 + 24) == *(_QWORD *)(v12 + 24))
      : (v13 = 0),
        (v13 || (sub_1A4691A40() & 1) != 0)
     && *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_flagged) == *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_flagged)
     && *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_priority) == *(_QWORD *)(a2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_priority)
     && (sub_1A4464338(*(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_tags), *(_QWORD *)(a2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_tags)) & 1) != 0&& ((v14 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_contact), v15 = *(_QWORD *)(a2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_contact), *(_QWORD *)(v14 + 16) == *(_QWORD *)(v15 + 16))&& *(_QWORD *)(v14 + 24) == *(_QWORD *)(v15 + 24)|| (sub_1A4691A40() & 1) != 0)))
  {
    return sub_1A4464338(*(_QWORD *)(a1 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_recurrence), *(_QWORD *)(a2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_recurrence));
  }
  else
  {
    return 0;
  }
}

void _s19ReminderKitInternal27REMSuggestedAttributeOutputO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1A4509D0C()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  char v11;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;

  if (v9)
  {
    sub_1A44BEFBC(v4, v2, v3, v0, v9);
    sub_1A44BEFBC(v8, v7, v6, v5, v1);
    sub_1A44BF06C(v8, v7, v6, v5, v1);
    v13 = v4;
    v14 = v2;
    v15 = v3;
    v16 = v0;
    v17 = v9;
LABEL_9:
    sub_1A44BF06C(v13, v14, v15, v16, v17);
    v18 = 0;
    return v18 & 1;
  }
  sub_1A44BEFBC(v4, v2, v3, v0, 0);
  sub_1A44BEFBC(v8, v7, v6, v5, 0);
  swift_retain();
  swift_retain();
  if ((sub_1A450626C(v8, v4) & 1) == 0)
  {
    swift_release();
    swift_release();
    sub_1A44BF06C(v8, v7, v6, v5, 0);
    v13 = v4;
    v14 = v2;
    v15 = v3;
    v16 = v0;
    v17 = 0;
    goto LABEL_9;
  }
  if (v7[2] != v2[2] || v7[3] != v2[3])
  {
    v11 = sub_1A4691A40();
    swift_release();
    swift_release();
    sub_1A44BF06C(v8, v7, v6, v5, 0);
    sub_1A44BF06C(v4, v2, v3, v0, 0);
    return v11 & 1;
  }
  swift_release();
  swift_release();
  sub_1A44BF06C(v8, v7, v6, v5, 0);
  sub_1A44BF06C(v4, v2, v3, v0, 0);
  v18 = 1;
  return v18 & 1;
}

uint64_t _s19ReminderKitInternal16REMSuggestedListC8listUUIDAC10Foundation0G0VSg_tcfC_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A46900FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A444ABF4(a1, (uint64_t)v4, &qword_1ED243170);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1A445404C(a1, &qword_1ED243170);
    sub_1A445404C((uint64_t)v4, &qword_1ED243170);
    v9 = 0xE500000000000000;
    v10 = 0x296C696E28;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v10 = sub_1A46900CC();
    v9 = v11;
    sub_1A445404C(a1, &qword_1ED243170);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  type metadata accessor for REMSuggestedList();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 24) = v9;
  return result;
}

unint64_t sub_1A450A914()
{
  unint64_t result;

  result = qword_1ED242458;
  if (!qword_1ED242458)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedWeekDay.CodingKeys, &type metadata for REMSuggestedWeekDay.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242458);
  }
  return result;
}

unint64_t sub_1A450A958(unint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v4 = v3;
  v5 = *(_QWORD *)(result + 16);
  if (!v5)
    return MEMORY[0x1E0DEE9D8];
  v7 = 0;
  v8 = result + 32;
  v9 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (v7 <= v5)
      v10 = v5;
    else
      v10 = v7;
    v11 = v7;
    while (1)
    {
      if (v10 == v11)
      {
        __break(1u);
        return result;
      }
      if (*(_QWORD *)(*(_QWORD *)(a3 + 40) + 16))
      {
        v12 = *(_QWORD *)(v8 + 8 * v11);
        result = sub_1A443E654(v12);
        if ((v13 & 1) != 0)
          break;
      }
      if (v5 == ++v11)
        return v9;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    v16 = v4;
    if ((result & 1) == 0)
      result = sub_1A445A898(0, *(_QWORD *)(v9 + 16) + 1, 1);
    v15 = *(_QWORD *)(v9 + 16);
    v14 = *(_QWORD *)(v9 + 24);
    if (v15 >= v14 >> 1)
      result = sub_1A445A898(v14 > 1, v15 + 1, 1);
    v7 = v11 + 1;
    *(_QWORD *)(v9 + 16) = v15 + 1;
    *(_QWORD *)(v9 + 8 * v15 + 32) = v12;
    v4 = v16;
  }
  while (v5 - 1 != v11);
  return v9;
}

id _sSo24REMContactRepresentationC19ReminderKitInternalE5parse4fromABSgSS_tFZ_0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  _QWORD *v20;
  char v21;
  void *v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  id v29;
  char v31;
  id v32;
  void *v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37[5];

  v37[4] = *MEMORY[0x1E0C80C00];
  v4 = sub_1A46908DC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A46908D0();
  v8 = sub_1A46908AC();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v10 >> 60 != 15)
  {
    v16 = (void *)objc_opt_self();
    v17 = (void *)sub_1A468FFAC();
    v36 = 0;
    v18 = objc_msgSend(v16, sel_JSONObjectWithData_options_error_, v17, 0, &v36);

    v19 = v36;
    if (v18)
    {
      sub_1A4691278();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(qword_1EE71F378);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v20 = v36;
        if (!*((_QWORD *)v36 + 2))
          goto LABEL_26;
        sub_1A443E4C8(0x73656E6F6870, 0xE600000000000000);
        if ((v21 & 1) != 0)
        {
          swift_bridgeObjectRetain();
          if (!v20[2])
            goto LABEL_26;
        }
        else if (!v20[2])
        {
LABEL_26:
          swift_bridgeObjectRelease();
          v32 = objc_allocWithZone(MEMORY[0x1E0D844C0]);
          v33 = (void *)sub_1A4690B94();
          swift_bridgeObjectRelease();
          v34 = (void *)sub_1A4690B94();
          swift_bridgeObjectRelease();
          v29 = objc_msgSend(v32, sel_initWithPhones_emails_, v33, v34);

          sub_1A44D65D0(v8, v10);
          return v29;
        }
        sub_1A443E4C8(0x736C69616D65, 0xE600000000000000);
        if ((v31 & 1) != 0)
          swift_bridgeObjectRetain();
        goto LABEL_26;
      }
    }
    else
    {
      v22 = v19;
      v23 = (void *)sub_1A468FE68();

      swift_willThrow();
    }
    if (qword_1EE71C068 != -1)
      swift_once();
    v24 = sub_1A4690318();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EE71EF68);
    swift_bridgeObjectRetain_n();
    v25 = sub_1A469030C();
    v26 = sub_1A4690FF0();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v37[0] = v28;
      *(_DWORD *)v27 = 136315138;
      swift_bridgeObjectRetain();
      v36 = (id)sub_1A4431120(a1, a2, v37);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A442D000, v25, v26, "Failed to parse dictionary from: {%s}", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v28, -1, -1);
      MEMORY[0x1A85A0114](v27, -1, -1);
      sub_1A44D65D0(v8, v10);

      return 0;
    }
    sub_1A44D65D0(v8, v10);

LABEL_19:
    swift_bridgeObjectRelease_n();
    return 0;
  }
  if (qword_1EE71C068 != -1)
    swift_once();
  v11 = sub_1A4690318();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EE71EF68);
  swift_bridgeObjectRetain_n();
  v12 = sub_1A469030C();
  v13 = sub_1A4690FF0();
  if (!os_log_type_enabled(v12, v13))
  {

    goto LABEL_19;
  }
  v14 = (uint8_t *)swift_slowAlloc();
  v15 = swift_slowAlloc();
  v37[0] = v15;
  *(_DWORD *)v14 = 136315138;
  swift_bridgeObjectRetain();
  v36 = (id)sub_1A4431120(a1, a2, v37);
  sub_1A46911D0();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_1A442D000, v12, v13, "Invalid json string: {%s}", v14, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1A85A0114](v15, -1, -1);
  MEMORY[0x1A85A0114](v14, -1, -1);

  return 0;
}

_QWORD *sub_1A450B028(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  BOOL v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v6 = a1 == 0x296C696E28 && a2 == 0xE500000000000000;
  if (v6 || (sub_1A4691A40() & 1) != 0)
  {
    a3[4] = 0;
    a3[5] = 0xE000000000000000;
    swift_retain();
  }
  else
  {
    swift_retain();
    v7 = _sSo24REMContactRepresentationC19ReminderKitInternalE5parse4fromABSgSS_tFZ_0(a1, a2);
    if (v7)
    {
      v8 = v7;
      REMContactRepresentation.quickName.getter();
      v10 = v9;
      v12 = v11;

    }
    else
    {
      v10 = 0;
      v12 = 0xE000000000000000;
    }
    a3[4] = v10;
    a3[5] = v12;
  }
  a3[2] = a1;
  a3[3] = a2;
  return a3;
}

Swift::String *sub_1A450B0F8(void *a1)
{
  Swift::String *v1;
  Swift::String *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v4 = qword_1EE71C068;
  swift_retain();
  if (v4 != -1)
    swift_once();
  v5 = sub_1A4690318();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EE71EF68);
  v6 = a1;
  v7 = sub_1A469030C();
  v8 = sub_1A4691008();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v18 = v17;
    *(_DWORD *)v9 = 136315138;
    v10 = objc_msgSend(v6, sel_description);
    v11 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v13 = v12;

    sub_1A4431120(v11, v13, &v18);
    sub_1A46911D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v7, v8, "REMContactRepresentation: {%s}", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v17, -1, -1);
    MEMORY[0x1A85A0114](v9, -1, -1);

  }
  else
  {

  }
  REMContactRepresentation.quickName.getter();
  v2[2]._countAndFlagsBits = v14;
  v2[2]._object = v15;
  swift_release();
  v2[1] = REMContactRepresentation.parsableString()();
  return v2;
}

_QWORD *_s19ReminderKitInternal19REMSuggestedContactC08expectedE02ofACSo11REMReminderC_tFZ_0(void *a1)
{
  id v1;
  void *v2;
  id v3;
  _QWORD *v4;

  v1 = objc_msgSend(a1, sel_contactHandles);
  if (v1)
  {
    v2 = v1;
    type metadata accessor for REMSuggestedContact();
    swift_allocObject();
    v3 = v2;
    v4 = sub_1A450B0F8(v3);

  }
  else
  {
    type metadata accessor for REMSuggestedContact();
    v4 = (_QWORD *)swift_allocObject();
    v4[4] = 0;
    v4[5] = 0xE000000000000000;
    v4[2] = 0x296C696E28;
    v4[3] = 0xE500000000000000;
  }
  return v4;
}

uint64_t _s19ReminderKitInternal20REMSuggestedLocationC08expectedE02ofACSaySo8REMAlarmCG_tFZ_0(unint64_t a1)
{
  id v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char **v5;
  id v6;
  void *v7;
  unint64_t v8;
  id v9;
  void *v10;
  void *v11;
  char **v12;
  id v13;
  id v14;
  id v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t result;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;

  v2 = a1;
  if (a1 >> 62)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    v3 = sub_1A46916A4();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      v22 = 0;
      v4 = 0;
      v25 = v2;
      v26 = v2 & 0xC000000000000001;
      v23 = v2 & 0xFFFFFFFFFFFFFF8;
      v24 = v3;
      v5 = &selRef_flagged;
      while (1)
      {
        if (v26)
        {
          v6 = (id)MEMORY[0x1A859ECE0](v4, v2);
        }
        else
        {
          if (v4 >= *(_QWORD *)(v23 + 16))
          {
            __break(1u);
            goto LABEL_36;
          }
          v6 = *(id *)(v2 + 8 * v4 + 32);
        }
        v7 = v6;
        v8 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_32;
        }
        v9 = objc_msgSend(v6, v5[1]);
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {

          swift_bridgeObjectRelease();
          v17 = 0xE300000000000000;
          v18 = 7496035;
          goto LABEL_39;
        }

        v1 = objc_msgSend(v7, v5[1]);
        objc_opt_self();
        v10 = (void *)swift_dynamicCastObjCClass();
        if (!v10)
          goto LABEL_4;
        v11 = v10;
        v12 = v5;
        v13 = objc_msgSend(v10, (SEL)0x1F27BE8E3);
        v14 = objc_msgSend(v13, sel_contactLabel);

        if (v14
          || (v15 = objc_msgSend(v11, (SEL)0x1F27BE8E3),
              v14 = objc_msgSend(v15, sel_title),
              v15,
              v5 = v12,
              v14))
        {
          _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

          sub_1A4466118();
          if ((sub_1A4691248() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v19 = objc_msgSend(v11, sel_proximity);
            if (!v19)
              goto LABEL_29;
            if (v19 != (id)1)
            {
              if (v19 == (id)2)
              {
                v18 = 0x6F682E657661656CLL;
                v17 = 0xEA0000000000656DLL;
                goto LABEL_34;
              }
LABEL_29:
              v17 = 0xE400000000000000;
              v18 = 1701670760;
              goto LABEL_34;
            }
LABEL_32:
            v17 = 0xEB00000000656D6FLL;
            v18 = 0x682E657669727261;
            goto LABEL_34;
          }
          v16 = sub_1A4691248();
          swift_bridgeObjectRelease();
          if ((v16 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v20 = objc_msgSend(v11, sel_proximity);
            if (!v20)
              goto LABEL_30;
            if (v20 == (id)2)
            {
              v17 = 0xEA00000000006B72;
              v18 = 0x6F772E657661656CLL;
              goto LABEL_34;
            }
            if (v20 == (id)1)
            {
              v17 = 0xEB000000006B726FLL;
              v18 = 0x772E657669727261;
            }
            else
            {
LABEL_30:
              v17 = 0xE400000000000000;
              v18 = 1802661751;
            }
LABEL_34:

            goto LABEL_39;
          }

          v22 = 1;
          v4 = v8;
          v5 = v12;
          v2 = v25;
          if (v8 == v24)
          {
            swift_bridgeObjectRelease();
LABEL_20:
            v17 = 0xE500000000000000;
            v18 = 0x726568746FLL;
            goto LABEL_39;
          }
        }
        else
        {
LABEL_4:

          ++v4;
          v2 = v25;
          if (v8 == v24)
          {
            swift_bridgeObjectRelease();
            if ((v22 & 1) == 0)
              goto LABEL_38;
            goto LABEL_20;
          }
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_38:
  v17 = 0xE500000000000000;
  v18 = 0x296C696E28;
LABEL_39:
  type metadata accessor for REMSuggestedLocation();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v18;
  *(_QWORD *)(result + 24) = v17;
  return result;
}

uint64_t sub_1A450B8D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1A44FFE00(*(_QWORD *)(v1 + 32), a1);
}

uint64_t _s19ReminderKitInternal26REMSuggestedAttributeInputC14partialKeyPath3fors07PartialhI0CyACGAC10CodingKeysO_tFZ_0()
{
  return swift_getKeyPath();
}

uint64_t sub_1A450B90C(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  objc_class *v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t inited;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  unint64_t v61;
  id v62;
  void *v63;
  char *v64;
  void (*v65)(uint64_t, char *, uint64_t);
  void (*v66)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t *v82;
  id v83;
  void *v84;
  unint64_t v85;
  uint64_t v86;
  id v87;
  void *v88;
  id v89;
  BOOL v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  void *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t result;
  uint64_t v102;
  id v103;
  void *v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t);
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  id v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  objc_super v129;

  v2 = v1;
  v4 = sub_1A46902AC();
  v113 = *(_QWORD *)(v4 - 8);
  v114 = v4;
  MEMORY[0x1E0C80A78](v4);
  v112 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v119 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v120 = (char *)&v109 - v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v109 - v11;
  v13 = sub_1A468FDE4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v117 = (char *)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v118 = (char *)&v109 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v19 = MEMORY[0x1E0C80A78](v18);
  v115 = (uint64_t)&v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v109 - v21;
  v23 = (_QWORD *)sub_1A46900B4();
  v121 = *(v23 - 1);
  v122 = v23;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1A46900FC();
  v126 = *(_QWORD *)(v26 - 8);
  v27 = MEMORY[0x1E0C80A78](v26);
  v111 = (char *)&v109 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v109 - v29;
  v31 = objc_msgSend(a1, sel_titleAsString);
  v124 = v14;
  v125 = v13;
  v123 = v12;
  v116 = v22;
  if (v31)
  {
    v32 = v31;
    v33 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v35 = v34;

  }
  else
  {
    v33 = 0;
    v35 = 0xE000000000000000;
  }
  v2[2] = v33;
  v2[3] = v35;
  v36 = objc_msgSend(a1, sel_objectID);
  v37 = (objc_class *)type metadata accessor for REMObjectID_Codable();
  v38 = objc_allocWithZone(v37);
  v39 = v36;
  v40 = objc_msgSend(v39, sel_uuid);
  sub_1A46900F0();

  v41 = (void *)sub_1A46900D8();
  v110 = *(void (**)(char *, uint64_t))(v126 + 8);
  v110(v30, v26);
  v42 = objc_msgSend(v39, sel_entityName);
  if (!v42)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v42 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v129.receiver = v38;
  v129.super_class = v37;
  v43 = objc_msgSendSuper2(&v129, sel_initWithUUID_entityName_, v41, v42);

  v2[4] = v43;
  v44 = objc_msgSend(a1, sel_creationDate);
  sub_1A4690084();

  (*(void (**)(uint64_t, char *, id))(v121 + 32))((uint64_t)v2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_creationDate, v25, v122);
  v45 = objc_msgSend(a1, sel_list);
  LODWORD(v43) = objc_msgSend(v45, sel_isPlaceholder);

  if ((_DWORD)v43)
  {
    type metadata accessor for REMSuggestedList();
    inited = swift_initStaticObject();
    v48 = v124;
    v47 = v125;
    v49 = (uint64_t)v123;
  }
  else
  {
    v122 = objc_msgSend(a1, sel_list);
    v50 = objc_msgSend(v122, sel_objectID);
    v51 = objc_msgSend(v50, sel_uuid);

    v52 = (uint64_t)v116;
    sub_1A46900F0();

    v53 = v126;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v126 + 56))(v52, 0, 1, v26);
    v54 = v115;
    sub_1A444ABF4(v52, v115, &qword_1ED243170);
    v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v54, 1, v26);
    v48 = v124;
    v47 = v125;
    v49 = (uint64_t)v123;
    if (v55 == 1)
    {
      v56 = v54;
      v57 = 0x296C696E28;
      sub_1A445404C(v52, &qword_1ED243170);
      sub_1A445404C(v56, &qword_1ED243170);
      v58 = 0xE500000000000000;
    }
    else
    {
      v59 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 32);
      v60 = v111;
      v59(v111, v54, v26);
      v57 = sub_1A46900CC();
      v58 = v61;
      sub_1A445404C(v52, &qword_1ED243170);
      v110(v60, v26);
    }
    type metadata accessor for REMSuggestedList();
    inited = swift_allocObject();
    *(_QWORD *)(inited + 16) = v57;
    *(_QWORD *)(inited + 24) = v58;

  }
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_list) = inited;
  v62 = objc_msgSend(a1, sel_dueDateComponents);
  if (!v62)
  {
    v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
    v66(v49, 1, 1, v47);
    goto LABEL_18;
  }
  v63 = v62;
  v64 = v117;
  sub_1A468FD3C();

  v65 = *(void (**)(uint64_t, char *, uint64_t))(v48 + 32);
  v65(v49, v64, v47);
  v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
  v66(v49, 0, 1, v47);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v49, 1, v47) == 1)
  {
LABEL_18:
    sub_1A445404C(v49, &qword_1ED23E4C0);
    type metadata accessor for REMSuggestedWeekDay();
    v71 = swift_allocObject();
    v127 = 0;
    *(_QWORD *)(v71 + 16) = sub_1A46918D8();
    *(_QWORD *)(v71 + 24) = v72;
    goto LABEL_22;
  }
  v65((uint64_t)v118, (char *)v49, v47);
  v67 = (uint64_t)v112;
  sub_1A469027C();
  v68 = DateComponents.dayOfWeek(with:)(v67);
  v70 = v69;
  (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v67, v114);
  if ((v70 & 1) != 0)
  {
    type metadata accessor for REMSuggestedWeekDay();
    v71 = swift_allocObject();
  }
  else
  {
    type metadata accessor for REMSuggestedWeekDay();
    v71 = swift_allocObject();
    if ((unint64_t)(v68 - 8) > 0xFFFFFFFFFFFFFFF8)
      goto LABEL_21;
  }
  v68 = 0;
LABEL_21:
  v127 = v68;
  *(_QWORD *)(v71 + 16) = sub_1A46918D8();
  *(_QWORD *)(v71 + 24) = v73;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v118, v47);
LABEL_22:
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDayOfWeek) = v71;
  v74 = objc_msgSend(a1, sel_dueDateComponents);
  if (v74)
  {
    v75 = v74;
    v76 = (uint64_t)v119;
    sub_1A468FD3C();

    v77 = 0;
  }
  else
  {
    v77 = 1;
    v76 = (uint64_t)v119;
  }
  v78 = (uint64_t)v120;
  v66(v76, v77, 1, v47);
  sub_1A44C6CC8(v76, v78, &qword_1ED23E4C0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v78, 1, v47) == 1)
  {
    sub_1A445404C(v78, &qword_1ED23E4C0);
    v79 = 0;
    v80 = 0xE000000000000000;
  }
  else
  {
    v79 = sub_1A468FCE8();
    v80 = v81;
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v78, v47);
  }
  v82 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_dueDateTime);
  *v82 = v79;
  v82[1] = v80;
  v83 = objc_msgSend(a1, sel_alarms);
  if (v83)
  {
    v84 = v83;
    sub_1A444AA40(0, &qword_1EE71EF80);
    v85 = sub_1A4690BA0();

    v86 = _s19ReminderKitInternal20REMSuggestedLocationC08expectedE02ofACSaySo8REMAlarmCG_tFZ_0(v85);
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for REMSuggestedLocation();
    v86 = swift_allocObject();
    *(_QWORD *)(v86 + 16) = 0x296C696E28;
    *(_QWORD *)(v86 + 24) = 0xE500000000000000;
  }
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_location) = v86;
  v87 = objc_msgSend(a1, sel_flaggedContext);
  if (v87)
  {
    v88 = v87;
    v89 = objc_msgSend(v87, sel_flagged);

    v90 = v89 != 0;
  }
  else
  {
    v90 = 0;
  }
  *((_BYTE *)v2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_flagged) = v90;
  v91 = objc_msgSend(a1, sel_priority);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_priority) = v91;
  v92 = objc_msgSend(a1, sel_hashtags);
  sub_1A444AA40(0, &qword_1EE71F360);
  sub_1A450F828();
  v93 = sub_1A4690D74();

  v94 = sub_1A44FC670(v93);
  v95 = sub_1A446C748(v94);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_tags) = v95;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_contact) = _s19ReminderKitInternal19REMSuggestedContactC08expectedE02ofACSo11REMReminderC_tFZ_0(a1);
  v96 = objc_msgSend(a1, sel_recurrenceRules);
  v97 = MEMORY[0x1E0DEE9E8];
  if (!v96)
    goto LABEL_46;
  v98 = v96;
  sub_1A444AA40(0, &qword_1EE71F370);
  v99 = sub_1A4690BA0();

  v128 = v97;
  if (!(v99 >> 62))
  {
    v100 = *(_QWORD *)((v99 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v100)
      goto LABEL_37;
    goto LABEL_45;
  }
  swift_bridgeObjectRetain();
  result = sub_1A46916A4();
  v100 = result;
  if (!result)
  {
LABEL_45:
    swift_bridgeObjectRelease_n();
    v97 = MEMORY[0x1E0DEE9E8];
LABEL_46:
    *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_recurrence) = v97;
    return (uint64_t)v2;
  }
LABEL_37:
  if (v100 >= 1)
  {
    v102 = 0;
    do
    {
      if ((v99 & 0xC000000000000001) != 0)
        v103 = (id)MEMORY[0x1A859ECE0](v102, v99);
      else
        v103 = *(id *)(v99 + 8 * v102 + 32);
      v104 = v103;
      ++v102;
      v105 = objc_msgSend(v103, sel_iCalendarDescription);
      v106 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v108 = v107;

      swift_bridgeObjectRetain();
      sub_1A4465F6C(&v127, v106, v108);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    while (v100 != v102);
    swift_bridgeObjectRelease_n();
    v97 = v128;
    goto LABEL_46;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for REMSuggestedWeekDay()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for REMSuggestedLocation()
{
  return objc_opt_self();
}

unint64_t sub_1A450C454()
{
  unint64_t result;

  result = qword_1ED2435A0;
  if (!qword_1ED2435A0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeInput.CodingKeys, &type metadata for REMSuggestedAttributeInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2435A0);
  }
  return result;
}

uint64_t sub_1A450C498(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1A85A0000](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for REMSuggestedList()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for REMSuggestedContact()
{
  return objc_opt_self();
}

uint64_t sub_1A450C518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int64_t v5;
  int64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;
  _QWORD *v29;
  __int128 v30;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = sub_1A445A21C(0, v5);
  sub_1A4504738((uint64_t)v6, &v30);
  v29 = (_QWORD *)v3;
  *(_OWORD *)(v3 + 16) = v30;
  if (!v5)
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_17:
    result = (uint64_t)v29;
    v29[4] = v9;
    v29[5] = a2;
    v29[6] = a3;
    return result;
  }
  v7 = 0;
  v8 = (uint64_t *)(a1 + 40);
  v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v11 = *(v8 - 1);
    v12 = *v8;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v30 = v9;
    v15 = sub_1A443E654(v7);
    v16 = v9[2];
    v17 = (v14 & 1) == 0;
    v18 = v16 + v17;
    if (__OFADD__(v16, v17))
      break;
    v19 = v14;
    if (v9[3] >= v18)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v9 = (_QWORD *)v30;
        if ((v14 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1A4447B74();
        v9 = (_QWORD *)v30;
        if ((v19 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1A4441BF8(v18, isUniquelyReferenced_nonNull_native);
      v20 = sub_1A443E654(v7);
      if ((v19 & 1) != (v21 & 1))
        goto LABEL_20;
      v15 = v20;
      v9 = (_QWORD *)v30;
      if ((v19 & 1) != 0)
      {
LABEL_3:
        v10 = (_QWORD *)(v9[7] + 16 * v15);
        swift_bridgeObjectRelease();
        *v10 = v11;
        v10[1] = v12;
        goto LABEL_4;
      }
    }
    v9[(v15 >> 6) + 8] |= 1 << v15;
    *(_QWORD *)(v9[6] + 8 * v15) = v7;
    v22 = (_QWORD *)(v9[7] + 16 * v15);
    *v22 = v11;
    v22[1] = v12;
    v23 = v9[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_19;
    v9[2] = v25;
LABEL_4:
    ++v7;
    v8 += 2;
    swift_bridgeObjectRelease();
    if (v5 == v7)
      goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A450C6E4(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  int64_t v5;
  int64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;

  if (a1 >> 62)
    goto LABEL_27;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    v27 = a2;
    v6 = sub_1A445A21C(0, v5);
    sub_1A4504738((uint64_t)v6, &v29);
    v28 = v2;
    *(_OWORD *)(v2 + 16) = v29;
    if (!v5)
    {
      v2 = MEMORY[0x1E0DEE9E0];
LABEL_23:
      result = v28;
      *(_QWORD *)(v28 + 32) = v2;
      *(_QWORD *)(v28 + 40) = v27;
      return result;
    }
    v7 = 0;
    a2 = a1 & 0xC000000000000001;
    v2 = MEMORY[0x1E0DEE9E0];
    while (1)
    {
      v10 = a2 ? (id)MEMORY[0x1A859ECE0](v7, a1) : *(id *)(a1 + 8 * v7 + 32);
      v11 = v10;
      v12 = v7 + 1;
      if (__OFADD__(v7, 1))
        break;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v29 = v2;
      v15 = sub_1A443E654(v7);
      v16 = *(_QWORD *)(v2 + 16);
      v17 = (v14 & 1) == 0;
      v18 = v16 + v17;
      if (__OFADD__(v16, v17))
        goto LABEL_25;
      v19 = v14;
      if (*(_QWORD *)(v2 + 24) >= v18)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v2 = v29;
          if ((v14 & 1) != 0)
            goto LABEL_5;
        }
        else
        {
          sub_1A44485D0();
          v2 = v29;
          if ((v19 & 1) != 0)
            goto LABEL_5;
        }
      }
      else
      {
        sub_1A4442CC4(v18, isUniquelyReferenced_nonNull_native);
        v20 = sub_1A443E654(v7);
        if ((v19 & 1) != (v21 & 1))
          goto LABEL_29;
        v15 = v20;
        v2 = v29;
        if ((v19 & 1) != 0)
        {
LABEL_5:
          v8 = *(_QWORD *)(v2 + 56);
          v9 = 8 * v15;

          *(_QWORD *)(v8 + v9) = v11;
          goto LABEL_6;
        }
      }
      *(_QWORD *)(v2 + 8 * (v15 >> 6) + 64) |= 1 << v15;
      v22 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v2 + 48) + v22) = v7;
      *(_QWORD *)(*(_QWORD *)(v2 + 56) + v22) = v11;
      v23 = *(_QWORD *)(v2 + 16);
      v24 = __OFADD__(v23, 1);
      v25 = v23 + 1;
      if (v24)
        goto LABEL_26;
      *(_QWORD *)(v2 + 16) = v25;
LABEL_6:
      swift_bridgeObjectRelease();
      ++v7;
      if (v12 == v5)
        goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    v5 = sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  while ((v5 & 0x8000000000000000) == 0);
  __break(1u);
LABEL_29:
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A450C904(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  int64_t *v25;
  unint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  int v43;
  unint64_t v44;
  char v45;
  unint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char v51;
  unint64_t v52;
  uint64_t v53;
  _BOOL8 v54;
  uint64_t v55;
  char v56;
  unint64_t v57;
  char v58;
  _QWORD *v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t result;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t *v74;
  unint64_t v75;
  char *v76;
  char *v77;
  _QWORD *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  __int128 v82;

  v67 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71F350);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v70 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v8 = MEMORY[0x1E0C80A78](v7);
  v71 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v66 - v11;
  MEMORY[0x1E0C80A78](v10);
  v77 = (char *)&v66 - v13;
  v14 = sub_1A46900B4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v76 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v69 = (char *)&v66 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71F358);
  v20 = MEMORY[0x1E0C80A78](v19);
  v78 = (uint64_t *)((char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v20);
  v23 = (uint64_t *)((char *)&v66 - v22);
  v72 = a1;
  v24 = *(_QWORD *)(a1 + 16);
  v25 = sub_1A445A21C(0, v24);
  sub_1A4504738((uint64_t)v25, &v82);
  v81 = 0;
  v26 = 0;
  v68 = v2;
  *(_OWORD *)(v2 + 16) = v82;
  v27 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v73 = v12;
  v74 = v23;
  v79 = v15;
  v75 = v24;
  v28 = v24 == 0;
  if (v24)
    goto LABEL_6;
LABEL_5:
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v32 = (uint64_t)v77;
  v31(v77, 1, 1, v14);
  v80 = v24;
  v33 = v81;
LABEL_8:
  sub_1A445404C(v32, &qword_1ED243190);
  v34 = 1;
  while (1)
  {
    v39 = (uint64_t)v78;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v78, v34, 1, v4);
    sub_1A44C6CC8(v39, (uint64_t)v23, &qword_1EE71F358);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(v23, 1, v4) == 1)
    {
      v63 = v67;
      v64 = v68;
      *(_QWORD *)(v68 + 32) = v27;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v64 + *(_QWORD *)(*(_QWORD *)v64 + 104), v63, v14);
      return v64;
    }
    v40 = *v23;
    v41 = (char *)v23 + *(int *)(v4 + 48);
    v42 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v42(v12, v41, v14);
    v31(v12, 0, 1, v14);
    v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14);
    v81 = v33;
    if (v43 == 1)
    {
      sub_1A445404C((uint64_t)v12, &qword_1ED243190);
      v44 = sub_1A443E654(v40);
      if ((v45 & 1) != 0)
      {
        v46 = v44;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v82 = v27;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A44483B0();
          v27 = (_QWORD *)v82;
        }
        v30 = (uint64_t)v71;
        v42(v71, (char *)(v27[7] + *(_QWORD *)(v79 + 72) * v46), v14);
        sub_1A45A8FD4(v46, (uint64_t)v27);
        swift_bridgeObjectRelease();
        v29 = 0;
      }
      else
      {
        v29 = 1;
        v30 = (uint64_t)v71;
      }
      v31((char *)v30, v29, 1, v14);
      sub_1A445404C(v30, &qword_1ED243190);
      v15 = v79;
      v26 = v80;
      v23 = v74;
      v24 = v75;
      v28 = v80 >= v75;
      if (v80 == v75)
        goto LABEL_5;
    }
    else
    {
      v48 = v5;
      v49 = v4;
      v42(v76, v12, v14);
      v50 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v82 = v27;
      v52 = sub_1A443E654(v40);
      v53 = v27[2];
      v54 = (v51 & 1) == 0;
      v55 = v53 + v54;
      if (__OFADD__(v53, v54))
        goto LABEL_31;
      v56 = v51;
      if (v27[3] >= v55)
      {
        if ((v50 & 1) == 0)
          sub_1A44483B0();
      }
      else
      {
        sub_1A4442994(v55, v50);
        v57 = sub_1A443E654(v40);
        if ((v56 & 1) != (v58 & 1))
          goto LABEL_34;
        v52 = v57;
      }
      v24 = v75;
      v59 = (_QWORD *)v82;
      if ((v56 & 1) != 0)
      {
        v15 = v79;
        (*(void (**)(unint64_t, char *, uint64_t))(v79 + 40))(*(_QWORD *)(v82 + 56) + *(_QWORD *)(v79 + 72) * v52, v76, v14);
      }
      else
      {
        *(_QWORD *)(v82 + 8 * (v52 >> 6) + 64) |= 1 << v52;
        *(_QWORD *)(v59[6] + 8 * v52) = v40;
        v42((char *)(v59[7] + *(_QWORD *)(v79 + 72) * v52), v76, v14);
        v60 = v59[2];
        v61 = __OFADD__(v60, 1);
        v62 = v60 + 1;
        if (v61)
          goto LABEL_33;
        v59[2] = v62;
        v15 = v79;
      }
      v27 = (_QWORD *)v82;
      swift_bridgeObjectRelease();
      v4 = v49;
      v5 = v48;
      v12 = v73;
      v23 = v74;
      v26 = v80;
      v28 = v80 >= v24;
      if (v80 == v24)
        goto LABEL_5;
    }
LABEL_6:
    v32 = (uint64_t)v77;
    v33 = v81;
    if (v28)
      break;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v77, v72+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v26, v14);
    v80 = v26 + 1;
    v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v31((char *)v32, 0, 1, v14);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v32, 1, v14) == 1)
      goto LABEL_8;
    v35 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 32);
    v36 = v69;
    v35(v69, v32, v14);
    v37 = &v70[*(int *)(v4 + 48)];
    v35(v37, (uint64_t)v36, v14);
    if (__OFADD__(v33, 1))
      goto LABEL_32;
    v38 = (char *)v78 + *(int *)(v4 + 48);
    *v78 = v33;
    v35(v38, (uint64_t)v37, v14);
    v34 = 0;
    ++v33;
    v12 = v73;
    v15 = v79;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A450CEF8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v5;
  int64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  char isUniquelyReferenced_nonNull_native;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t result;
  __int128 v25;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = sub_1A445A21C(0, v5);
  sub_1A4504738((uint64_t)v6, &v25);
  *(_OWORD *)(v3 + 16) = v25;
  if (!v5)
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_17:
    *(_QWORD *)(v3 + 32) = v9;
    *(_BYTE *)(v3 + 40) = a2 & 1;
    return v3;
  }
  v7 = 0;
  v8 = a1 + 32;
  v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v10 = *(_BYTE *)(v8 + v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v25 = v9;
    v13 = sub_1A443E654(v7);
    v14 = v9[2];
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
      break;
    v17 = v12;
    if (v9[3] >= v16)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v9 = (_QWORD *)v25;
        if ((v12 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1A4448068();
        v9 = (_QWORD *)v25;
        if ((v17 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1A4442424(v16, isUniquelyReferenced_nonNull_native);
      v18 = sub_1A443E654(v7);
      if ((v17 & 1) != (v19 & 1))
        goto LABEL_20;
      v13 = v18;
      v9 = (_QWORD *)v25;
      if ((v17 & 1) != 0)
      {
LABEL_3:
        *(_BYTE *)(v9[7] + v13) = v10;
        goto LABEL_4;
      }
    }
    v9[(v13 >> 6) + 8] |= 1 << v13;
    *(_QWORD *)(v9[6] + 8 * v13) = v7;
    *(_BYTE *)(v9[7] + v13) = v10;
    v20 = v9[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_19;
    v9[2] = v22;
LABEL_4:
    ++v7;
    swift_bridgeObjectRelease();
    if (v5 == v7)
      goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A450D0A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v5;
  int64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;
  __int128 v26;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = sub_1A445A21C(0, v5);
  sub_1A4504738((uint64_t)v6, &v26);
  *(_OWORD *)(v3 + 16) = v26;
  if (!v5)
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_17:
    *(_QWORD *)(v3 + 32) = v9;
    *(_QWORD *)(v3 + 40) = a2;
    return v3;
  }
  v7 = 0;
  v8 = a1 + 32;
  v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v10 = *(_QWORD *)(v8 + 8 * v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v26 = v9;
    v13 = sub_1A443E654(v7);
    v14 = v9[2];
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
      break;
    v17 = v12;
    if (v9[3] >= v16)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v9 = (_QWORD *)v26;
        if ((v12 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1A4447ED8();
        v9 = (_QWORD *)v26;
        if ((v17 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1A4442178(v16, isUniquelyReferenced_nonNull_native);
      v18 = sub_1A443E654(v7);
      if ((v17 & 1) != (v19 & 1))
        goto LABEL_20;
      v13 = v18;
      v9 = (_QWORD *)v26;
      if ((v17 & 1) != 0)
      {
LABEL_3:
        *(_QWORD *)(v9[7] + 8 * v13) = v10;
        goto LABEL_4;
      }
    }
    v9[(v13 >> 6) + 8] |= 1 << v13;
    v20 = 8 * v13;
    *(_QWORD *)(v9[6] + v20) = v7;
    *(_QWORD *)(v9[7] + v20) = v10;
    v21 = v9[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_19;
    v9[2] = v23;
LABEL_4:
    ++v7;
    swift_bridgeObjectRelease();
    if (v5 == v7)
      goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A450D254(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v5;
  int64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;
  __int128 v26;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = sub_1A445A21C(0, v5);
  sub_1A4504738((uint64_t)v6, &v26);
  *(_OWORD *)(v3 + 16) = v26;
  if (v5)
  {
    v7 = 0;
    v8 = a1 + 32;
    v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    while (1)
    {
      v11 = *(_QWORD *)(v8 + 8 * v7);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v26 = v9;
      v14 = sub_1A443E654(v7);
      v15 = v9[2];
      v16 = (v13 & 1) == 0;
      v17 = v15 + v16;
      if (__OFADD__(v15, v16))
        break;
      v18 = v13;
      if (v9[3] >= v17)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1A4447D38();
      }
      else
      {
        sub_1A4441EC4(v17, isUniquelyReferenced_nonNull_native);
        v19 = sub_1A443E654(v7);
        if ((v18 & 1) != (v20 & 1))
          goto LABEL_18;
        v14 = v19;
      }
      v9 = (_QWORD *)v26;
      if ((v18 & 1) != 0)
      {
        v10 = *(_QWORD *)(v26 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v10 + 8 * v14) = v11;
      }
      else
      {
        *(_QWORD *)(v26 + 8 * (v14 >> 6) + 64) |= 1 << v14;
        *(_QWORD *)(v9[6] + 8 * v14) = v7;
        *(_QWORD *)(v9[7] + 8 * v14) = v11;
        v21 = v9[2];
        v22 = __OFADD__(v21, 1);
        v23 = v21 + 1;
        if (v22)
          goto LABEL_17;
        v9[2] = v23;
      }
      ++v7;
      swift_bridgeObjectRelease();
      if (v5 == v7)
        goto LABEL_15;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    result = sub_1A4691C08();
    __break(1u);
  }
  else
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_15:
    *(_QWORD *)(v3 + 32) = v9;
    *(_QWORD *)(v3 + 40) = a2;
    return v3;
  }
  return result;
}

uint64_t sub_1A450D400(unint64_t a1, uint64_t isUniquelyReferenced_nonNull_native, void (*a3)(void), unint64_t a4)
{
  uint64_t v4;
  int64_t v8;
  int64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _BOOL8 v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t result;
  void (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  __int128 v28;

  if (a1 >> 62)
    goto LABEL_28;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    v25 = isUniquelyReferenced_nonNull_native;
    v9 = sub_1A445A21C(0, v8);
    sub_1A4504738((uint64_t)v9, &v28);
    v26 = v4;
    *(_OWORD *)(v4 + 16) = v28;
    if (!v8)
    {
      v4 = MEMORY[0x1E0DEE9E0];
LABEL_24:
      result = v26;
      *(_QWORD *)(v26 + 32) = v4;
      *(_QWORD *)(v26 + 40) = v25;
      return result;
    }
    v24 = (void (*)(void))a4;
    v10 = 0;
    v4 = MEMORY[0x1E0DEE9E0];
    while ((a1 & 0xC000000000000001) != 0)
    {
      v11 = MEMORY[0x1A859ECE0](v10, a1);
      v12 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_25;
LABEL_12:
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v28 = v4;
      a4 = sub_1A443E654(v10);
      v14 = *(_QWORD *)(v4 + 16);
      v15 = (v13 & 1) == 0;
      if (__OFADD__(v14, v15))
        goto LABEL_26;
      v16 = v13;
      if (*(_QWORD *)(v4 + 24) >= v14 + v15)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v4 = v28;
          if ((v13 & 1) != 0)
            goto LABEL_5;
        }
        else
        {
          v24();
          v4 = v28;
          if ((v16 & 1) != 0)
            goto LABEL_5;
        }
      }
      else
      {
        a3();
        v17 = sub_1A443E654(v10);
        if ((v16 & 1) != (v18 & 1))
          goto LABEL_30;
        a4 = v17;
        v4 = v28;
        if ((v16 & 1) != 0)
        {
LABEL_5:
          isUniquelyReferenced_nonNull_native = *(_QWORD *)(v4 + 56);
          a4 *= 8;
          swift_release();
          *(_QWORD *)(isUniquelyReferenced_nonNull_native + a4) = v11;
          goto LABEL_6;
        }
      }
      *(_QWORD *)(v4 + 8 * (a4 >> 6) + 64) |= 1 << a4;
      v19 = 8 * a4;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + v19) = v10;
      *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v11;
      v20 = *(_QWORD *)(v4 + 16);
      v21 = __OFADD__(v20, 1);
      v22 = v20 + 1;
      if (v21)
        goto LABEL_27;
      *(_QWORD *)(v4 + 16) = v22;
LABEL_6:
      swift_bridgeObjectRelease();
      ++v10;
      if (v12 == v8)
        goto LABEL_24;
    }
    v11 = *(_QWORD *)(a1 + 8 * v10 + 32);
    swift_retain();
    v12 = v10 + 1;
    if (!__OFADD__(v10, 1))
      goto LABEL_12;
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    v8 = sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  while ((v8 & 0x8000000000000000) == 0);
  __break(1u);
LABEL_30:
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A450D640(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;

  v2 = v1;
  if (*(_QWORD *)(*(_QWORD *)(v1 + 24) + 16)
    && (sub_1A443E654(a1), (v4 & 1) != 0)
    && (v5 = *(_QWORD *)(v1 + 32), *(_QWORD *)(v5 + 16))
    && (v6 = sub_1A443E654(a1), (v7 & 1) != 0))
  {
    v8 = *(_QWORD *)(v5 + 56) + 16 * v6;
  }
  else
  {
    v8 = v2 + 40;
  }
  return *(_QWORD *)v8;
}

uint64_t sub_1A450D6B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v9;

  if (*(_BYTE *)(v1 + 24) == 1)
  {
    v3 = *(_QWORD **)(v1 + 16);
    if (*(_QWORD *)(v3[3] + 16)
      && (sub_1A443E654(a1), (v4 & 1) != 0)
      && (v5 = v3[4], *(_QWORD *)(v5 + 16))
      && (v6 = sub_1A443E654(a1), (v7 & 1) != 0))
    {
      return *(_QWORD *)(*(_QWORD *)(v5 + 56) + 16 * v6);
    }
    else
    {
      return v3[5];
    }
  }
  else if (*(_QWORD *)(*(_QWORD *)(v1 + 40) + 16) && (sub_1A443E654(a1), (v9 & 1) != 0))
  {
    return sub_1A450D640(a1);
  }
  else
  {
    return *(_QWORD *)(*(_QWORD *)(v1 + 16) + 40);
  }
}

uint64_t type metadata accessor for REMSuggestedAttributeInput(uint64_t a1)
{
  return sub_1A4468368(a1, (uint64_t *)&unk_1ED2435B8);
}

unint64_t sub_1A450D778()
{
  unint64_t result;

  result = qword_1ED240258;
  if (!qword_1ED240258)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469D8F8, &type metadata for REMSuggestedAttributeOutput.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240258);
  }
  return result;
}

unint64_t sub_1A450D7BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED23EAA8;
  if (!qword_1ED23EAA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED240078);
    v2[0] = sub_1A450D840();
    v2[1] = sub_1A44D64E8(&qword_1ED243198, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED23EAA8);
  }
  return result;
}

unint64_t sub_1A450D840()
{
  unint64_t result;

  result = qword_1ED23E920;
  if (!qword_1ED23E920)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeOutput.Pipeline, &type metadata for REMSuggestedAttributeOutput.Pipeline);
    atomic_store(result, (unint64_t *)&qword_1ED23E920);
  }
  return result;
}

unint64_t sub_1A450D884()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED23E730;
  if (!qword_1ED23E730)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED240078);
    v2[0] = sub_1A450D908();
    v2[1] = sub_1A44D64E8(&qword_1ED243130, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED23E730);
  }
  return result;
}

unint64_t sub_1A450D908()
{
  unint64_t result;

  result = qword_1ED23E608;
  if (!qword_1ED23E608)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeOutput.Pipeline, &type metadata for REMSuggestedAttributeOutput.Pipeline);
    atomic_store(result, (unint64_t *)&qword_1ED23E608);
  }
  return result;
}

unint64_t sub_1A450D94C()
{
  unint64_t result;

  result = qword_1EE71F028;
  if (!qword_1EE71F028)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeOutput.CodingKeys, &type metadata for REMSuggestedAttributeOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71F028);
  }
  return result;
}

unint64_t sub_1A450D990()
{
  unint64_t result;

  result = qword_1EE71F030;
  if (!qword_1EE71F030)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeOutput.ContentType, &type metadata for REMSuggestedAttributeOutput.ContentType);
    atomic_store(result, (unint64_t *)&qword_1EE71F030);
  }
  return result;
}

unint64_t sub_1A450D9D4()
{
  unint64_t result;

  result = qword_1ED23E918;
  if (!qword_1ED23E918)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeOutput.Source, &type metadata for REMSuggestedAttributeOutput.Source);
    atomic_store(result, (unint64_t *)&qword_1ED23E918);
  }
  return result;
}

unint64_t sub_1A450DA18()
{
  unint64_t result;

  result = qword_1EE71F048;
  if (!qword_1EE71F048)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeOutput.ContentType, &type metadata for REMSuggestedAttributeOutput.ContentType);
    atomic_store(result, (unint64_t *)&qword_1EE71F048);
  }
  return result;
}

unint64_t sub_1A450DA5C()
{
  unint64_t result;

  result = qword_1ED23E600;
  if (!qword_1ED23E600)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeOutput.Source, &type metadata for REMSuggestedAttributeOutput.Source);
    atomic_store(result, (unint64_t *)&qword_1ED23E600);
  }
  return result;
}

unint64_t sub_1A450DAA4()
{
  unint64_t result;

  result = qword_1EE71F058;
  if (!qword_1EE71F058)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedWeekDay.CodingKeys, &type metadata for REMSuggestedWeekDay.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71F058);
  }
  return result;
}

unint64_t sub_1A450DAEC()
{
  unint64_t result;

  result = qword_1ED242468;
  if (!qword_1ED242468)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedWeekDay.CodingKeys, &type metadata for REMSuggestedWeekDay.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242468);
  }
  return result;
}

unint64_t sub_1A450DB34()
{
  unint64_t result;

  result = qword_1ED242460;
  if (!qword_1ED242460)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedWeekDay.CodingKeys, &type metadata for REMSuggestedWeekDay.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242460);
  }
  return result;
}

unint64_t sub_1A450DB7C()
{
  unint64_t result;

  result = qword_1EE71F060;
  if (!qword_1EE71F060)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedList.CodingKeys, &type metadata for REMSuggestedList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71F060);
  }
  return result;
}

unint64_t sub_1A450DBC4()
{
  unint64_t result;

  result = qword_1ED242348;
  if (!qword_1ED242348)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedList.CodingKeys, &type metadata for REMSuggestedList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242348);
  }
  return result;
}

unint64_t sub_1A450DC0C()
{
  unint64_t result;

  result = qword_1ED242340;
  if (!qword_1ED242340)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedList.CodingKeys, &type metadata for REMSuggestedList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242340);
  }
  return result;
}

unint64_t sub_1A450DC54()
{
  unint64_t result;

  result = qword_1EE71F068;
  if (!qword_1EE71F068)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedContact.CodingKeys, &type metadata for REMSuggestedContact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71F068);
  }
  return result;
}

unint64_t sub_1A450DC9C()
{
  unint64_t result;

  result = qword_1ED23E8E8;
  if (!qword_1ED23E8E8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedContact.CodingKeys, &type metadata for REMSuggestedContact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED23E8E8);
  }
  return result;
}

unint64_t sub_1A450DCE4()
{
  unint64_t result;

  result = qword_1ED23E8E0;
  if (!qword_1ED23E8E0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedContact.CodingKeys, &type metadata for REMSuggestedContact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED23E8E0);
  }
  return result;
}

unint64_t sub_1A450DD2C()
{
  unint64_t result;

  result = qword_1EE71F070;
  if (!qword_1EE71F070)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedLocation.CodingKeys, &type metadata for REMSuggestedLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71F070);
  }
  return result;
}

unint64_t sub_1A450DD74()
{
  unint64_t result;

  result = qword_1ED242490;
  if (!qword_1ED242490)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedLocation.CodingKeys, &type metadata for REMSuggestedLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242490);
  }
  return result;
}

unint64_t sub_1A450DDBC()
{
  unint64_t result;

  result = qword_1ED242488;
  if (!qword_1ED242488)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedLocation.CodingKeys, &type metadata for REMSuggestedLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242488);
  }
  return result;
}

unint64_t sub_1A450DE04()
{
  unint64_t result;

  result = qword_1EE71F078;
  if (!qword_1EE71F078)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeInput.CodingKeys, &type metadata for REMSuggestedAttributeInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71F078);
  }
  return result;
}

unint64_t sub_1A450DE48(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1A450DE74();
  result = sub_1A450C454();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A450DE74()
{
  unint64_t result;

  result = qword_1EE71F080;
  if (!qword_1EE71F080)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeInput.CodingKeys, &type metadata for REMSuggestedAttributeInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71F080);
  }
  return result;
}

unint64_t sub_1A450DEBC()
{
  unint64_t result;

  result = qword_1ED2435B0;
  if (!qword_1ED2435B0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeInput.CodingKeys, &type metadata for REMSuggestedAttributeInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2435B0);
  }
  return result;
}

unint64_t sub_1A450DF04()
{
  unint64_t result;

  result = qword_1ED2435A8;
  if (!qword_1ED2435A8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeInput.CodingKeys, &type metadata for REMSuggestedAttributeInput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2435A8);
  }
  return result;
}

uint64_t sub_1A450DF48()
{
  return sub_1A443AD20(&qword_1EE71F088, &qword_1EE71F090, MEMORY[0x1E0DEAF50]);
}

uint64_t sub_1A450DF7C(uint64_t a1)
{
  uint64_t result;

  result = sub_1A450C498(&qword_1ED2424C8, 255, type metadata accessor for REMSuggestedAttributeInput, (uint64_t)&protocol conformance descriptor for REMSuggestedAttributeInput);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A450DFC0()
{
  unint64_t result;

  result = qword_1ED240270;
  if (!qword_1ED240270)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeOutput.Pipeline, &type metadata for REMSuggestedAttributeOutput.Pipeline);
    atomic_store(result, (unint64_t *)&qword_1ED240270);
  }
  return result;
}

uint64_t sub_1A450E004()
{
  return sub_1A443AD20(&qword_1EE71F0D0, &qword_1EE71F0D8, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1A450E034()
{
  unint64_t result;

  result = qword_1EE71F0E0;
  if (!qword_1EE71F0E0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeOutput.Source, &type metadata for REMSuggestedAttributeOutput.Source);
    atomic_store(result, (unint64_t *)&qword_1EE71F0E0);
  }
  return result;
}

unint64_t sub_1A450E07C()
{
  unint64_t result;

  result = qword_1EE71F0E8;
  if (!qword_1EE71F0E8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeOutput, &type metadata for REMSuggestedAttributeOutput);
    atomic_store(result, (unint64_t *)&qword_1EE71F0E8);
  }
  return result;
}

unint64_t sub_1A450E0C4()
{
  unint64_t result;

  result = qword_1EE71F0F0;
  if (!qword_1EE71F0F0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeOutput.CodingKeys, &type metadata for REMSuggestedAttributeOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71F0F0);
  }
  return result;
}

unint64_t sub_1A450E10C()
{
  unint64_t result;

  result = qword_1EE71F0F8;
  if (!qword_1EE71F0F8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeOutput.CodingKeys, &type metadata for REMSuggestedAttributeOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71F0F8);
  }
  return result;
}

unint64_t sub_1A450E154()
{
  unint64_t result;

  result = qword_1EE71F100;
  if (!qword_1EE71F100)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeOutput.CodingKeys, &type metadata for REMSuggestedAttributeOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71F100);
  }
  return result;
}

unint64_t sub_1A450E19C()
{
  unint64_t result;

  result = qword_1ED23F128;
  if (!qword_1ED23F128)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeOutput.ContentType, &type metadata for REMSuggestedAttributeOutput.ContentType);
    atomic_store(result, (unint64_t *)&qword_1ED23F128);
  }
  return result;
}

uint64_t sub_1A450E1E0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A450E22C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A4501FD0(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_reminderIdentifier, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998], a2);
}

uint64_t sub_1A450E250(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A4502040(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998], &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_reminderIdentifier);
}

uint64_t sub_1A450E274@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A4501FD0(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_creationDate, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], a2);
}

uint64_t sub_1A450E298(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A4502040(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_creationDate);
}

uint64_t sub_1A450E2BC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_list, a2);
}

uint64_t sub_1A450E2C8(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A45026D8(a1, a2, a3, a4, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_list);
}

uint64_t sub_1A450E2E4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_listName);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A450E33C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_dueDayOfWeek, a2);
}

uint64_t sub_1A450E348(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A45026D8(a1, a2, a3, a4, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_dueDayOfWeek);
}

uint64_t sub_1A450E364@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_location, a2);
}

uint64_t sub_1A450E370(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A45026D8(a1, a2, a3, a4, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_location);
}

uint64_t sub_1A450E38C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_flagged);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1A450E3DC(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_flagged);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_1A450E428@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_priority);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1A450E478(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_priority);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_1A450E4C4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_17Tm(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_tags, a2);
}

uint64_t sub_1A450E4D0(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A45027E4(a1, a2, a3, a4, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_tags);
}

uint64_t sub_1A450E4EC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_contact, a2);
}

uint64_t keypath_get_5Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;

  v4 = (_QWORD *)(*a1 + *a2);
  swift_beginAccess();
  *a3 = *v4;
  return swift_retain();
}

uint64_t sub_1A450E548(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A45026D8(a1, a2, a3, a4, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_contact);
}

uint64_t sub_1A450E564@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_17Tm(a1, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_recurrences, a2);
}

uint64_t keypath_get_17Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;

  v4 = (_QWORD *)(*a1 + *a2);
  swift_beginAccess();
  *a3 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A450E5C0(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A45027E4(a1, a2, a3, a4, &OBJC_IVAR____TtC19ReminderKitInternal39REMSuggestedAttributeReminderDataSource_recurrences);
}

uint64_t method lookup function for REMSuggestedWeekDay()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMSuggestedWeekDay.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

ValueMetadata *type metadata accessor for REMSuggestedWeekDay.CodingKeys()
{
  return &type metadata for REMSuggestedWeekDay.CodingKeys;
}

uint64_t method lookup function for REMSuggestedList()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for REMSuggestedList.CodingKeys()
{
  return &type metadata for REMSuggestedList.CodingKeys;
}

uint64_t method lookup function for REMSuggestedContact()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMSuggestedContact.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t storeEnumTagSinglePayload for REMSuggestedContact.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A450E690 + 4 * byte_1A469C79F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A450E6C4 + 4 * byte_1A469C79A[v4]))();
}

uint64_t sub_1A450E6C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A450E6CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A450E6D4);
  return result;
}

uint64_t sub_1A450E6E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A450E6E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A450E6EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A450E6F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedContact.CodingKeys()
{
  return &type metadata for REMSuggestedContact.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSuggestedLocation.LocationValue()
{
  return &type metadata for REMSuggestedLocation.LocationValue;
}

ValueMetadata *type metadata accessor for REMSuggestedLocation.CodingKeys()
{
  return &type metadata for REMSuggestedLocation.CodingKeys;
}

uint64_t dispatch thunk of REMSuggestedAttributesCanonicalTagDataSource.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A450E738()
{
  return type metadata accessor for REMSuggestedAttributeInput(0);
}

uint64_t sub_1A450E740()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A46900B4();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t method lookup function for REMSuggestedAttributeInput()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMSuggestedAttributeInput.__allocating_init(reminder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of REMSuggestedAttributeInput.__allocating_init(reminderTitle:reminderID:list:creationDate:dueDayOfWeek:dueDateTime:location:flagged:priority:tags:contact:recurrence:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 184))(a1, a2, a3);
}

uint64_t dispatch thunk of REMSuggestedAttributeInput.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributeInput.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributeInput.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1A450E940 + 4 * byte_1A469C7A9[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1A450E974 + 4 * byte_1A469C7A4[v4]))();
}

uint64_t sub_1A450E974(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A450E97C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A450E984);
  return result;
}

uint64_t sub_1A450E990(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A450E998);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1A450E99C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A450E9A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributeInput.CodingKeys()
{
  return &type metadata for REMSuggestedAttributeInput.CodingKeys;
}

uint64_t sub_1A450E9C0()
{
  return type metadata accessor for REMSuggestedAttributeReminderDataSource(0);
}

uint64_t type metadata accessor for REMSuggestedAttributeReminderDataSource(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE71F130);
}

uint64_t sub_1A450E9DC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1A46900FC();
  if (v1 <= 0x3F)
  {
    result = sub_1A46900B4();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for REMSuggestedAttributeReminderDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.title.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.title.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.title.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.reminderIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.reminderIdentifier.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.reminderIdentifier.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.creationDate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.creationDate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.creationDate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.list.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.list.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.list.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.listName.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.listName.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.listName.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.dueDayOfWeek.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.dueDayOfWeek.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.dueDayOfWeek.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.location.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.location.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.location.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.flagged.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.flagged.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.flagged.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.priority.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.priority.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.priority.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.tags.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.tags.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.tags.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.contact.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.contact.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.contact.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.recurrences.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.recurrences.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.recurrences.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.__allocating_init(title:reminderIdentifier:creationDate:list:listName:dueDayOfWeek:location:flagged:priority:tags:contact:recurrences:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 464))();
}

uint64_t dispatch thunk of REMSuggestedAttributeReminderDataSource.listUUIDString.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t destroy for REMSuggestedAttributeInputDataFrame()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for REMSuggestedAttributeInputDataFrame(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for REMSuggestedAttributeInputDataFrame(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for REMSuggestedAttributeInputDataFrame(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributeInputDataFrame(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributeInputDataFrame(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributeInputDataFrame()
{
  return &type metadata for REMSuggestedAttributeInputDataFrame;
}

void destroy for REMSuggestedAttributeOutput(uint64_t a1)
{
  sub_1A44BF06C(*(_QWORD *)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for REMSuggestedAttributeOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A44BEFBC(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for REMSuggestedAttributeOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A44BEFBC(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(void **)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1A44BF06C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for REMSuggestedAttributeOutput(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(void **)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1A44BF06C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributeOutput(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF7 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 247);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 9)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributeOutput(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF6)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 247;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF7)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xF7)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A450F2CC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1A450F2D4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributeOutput()
{
  return &type metadata for REMSuggestedAttributeOutput;
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributeOutput.Pipeline(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A450F338 + 4 * byte_1A469C7B7[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A450F36C + 4 * byte_1A469C7B2[v4]))();
}

uint64_t sub_1A450F36C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A450F374(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A450F37CLL);
  return result;
}

uint64_t sub_1A450F388(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A450F390);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A450F394(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A450F39C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributeOutput.Pipeline()
{
  return &type metadata for REMSuggestedAttributeOutput.Pipeline;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributeOutput.Source()
{
  return &type metadata for REMSuggestedAttributeOutput.Source;
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributeOutput.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A450F414 + 4 * byte_1A469C7C1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A450F448 + 4 * byte_1A469C7BC[v4]))();
}

uint64_t sub_1A450F448(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A450F450(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A450F458);
  return result;
}

uint64_t sub_1A450F464(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A450F46CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A450F470(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A450F478(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributeOutput.CodingKeys()
{
  return &type metadata for REMSuggestedAttributeOutput.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributeOutput.ContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1A450F4E0 + 4 * byte_1A469C7CB[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1A450F514 + 4 * byte_1A469C7C6[v4]))();
}

uint64_t sub_1A450F514(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A450F51C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A450F524);
  return result;
}

uint64_t sub_1A450F530(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A450F538);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1A450F53C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A450F544(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributeOutput.ContentType()
{
  return &type metadata for REMSuggestedAttributeOutput.ContentType;
}

uint64_t _s19ReminderKitInternal19REMSuggestedWeekDayC10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A450F5A0 + 4 * byte_1A469C7D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A450F5C0 + 4 * byte_1A469C7D5[v4]))();
}

_BYTE *sub_1A450F5A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A450F5C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A450F5C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A450F5D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A450F5D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A450F5E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributeOutput.Source.CodingKeys()
{
  return &type metadata for REMSuggestedAttributeOutput.Source.CodingKeys;
}

unint64_t sub_1A450F600()
{
  unint64_t result;

  result = qword_1EE71F338;
  if (!qword_1EE71F338)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469D8D0, &type metadata for REMSuggestedAttributeOutput.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71F338);
  }
  return result;
}

unint64_t sub_1A450F648()
{
  unint64_t result;

  result = qword_1ED240268;
  if (!qword_1ED240268)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469D808, &type metadata for REMSuggestedAttributeOutput.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240268);
  }
  return result;
}

unint64_t sub_1A450F690()
{
  unint64_t result;

  result = qword_1ED240260;
  if (!qword_1ED240260)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469D830, &type metadata for REMSuggestedAttributeOutput.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240260);
  }
  return result;
}

unint64_t sub_1A450F6D4()
{
  unint64_t result;

  result = qword_1ED242480;
  if (!qword_1ED242480)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedLocation.CodingKeys, &type metadata for REMSuggestedLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242480);
  }
  return result;
}

unint64_t sub_1A450F718()
{
  unint64_t result;

  result = qword_1ED23E8D8;
  if (!qword_1ED23E8D8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedContact.CodingKeys, &type metadata for REMSuggestedContact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED23E8D8);
  }
  return result;
}

unint64_t sub_1A450F75C()
{
  unint64_t result;

  result = qword_1ED242338;
  if (!qword_1ED242338)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedList.CodingKeys, &type metadata for REMSuggestedList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242338);
  }
  return result;
}

unint64_t sub_1A450F7A0()
{
  unint64_t result;

  result = qword_1EE71F340;
  if (!qword_1EE71F340)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeOutput.ContentType, &type metadata for REMSuggestedAttributeOutput.ContentType);
    atomic_store(result, (unint64_t *)&qword_1EE71F340);
  }
  return result;
}

unint64_t sub_1A450F7E4()
{
  unint64_t result;

  result = qword_1ED240278;
  if (!qword_1ED240278)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeOutput.Pipeline, &type metadata for REMSuggestedAttributeOutput.Pipeline);
    atomic_store(result, (unint64_t *)&qword_1ED240278);
  }
  return result;
}

unint64_t sub_1A450F828()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE71F368;
  if (!qword_1EE71F368)
  {
    v1 = sub_1A444AA40(255, &qword_1EE71F360);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE71F368);
  }
  return result;
}

uint64_t REMLazy.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = sub_1A46911A0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v11 = &v16[-v10];
  v12 = (uint64_t)v1 + *(_QWORD *)(v3 + 88);
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v11, v12, v5);
  v13 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v4) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v13 + 32))(a1, v11, v4);
  v14 = (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  (*(void (**)(uint64_t))((char *)v1 + *(_QWORD *)(*v1 + 96)))(v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v9, a1, v4);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v4);
  swift_beginAccess();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 40))(v12, v9, v5);
  return swift_endAccess();
}

uint64_t sub_1A450FA38(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  MEMORY[0x1E0C80A78](a1);
  v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return sub_1A450FAAC((uint64_t)v2);
}

uint64_t sub_1A450FAAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = sub_1A46911A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - v6;
  v8 = *(_QWORD *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))((char *)&v11 - v6, a1, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v3);
  v9 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 88);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v9, v7, v4);
  return swift_endAccess();
}

uint64_t REMLazy.__allocating_init(closure:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;

  v4 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v4 + 80) - 8) + 56))(v4 + *(_QWORD *)(*(_QWORD *)v4 + 88), 1, 1);
  v5 = (_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 96));
  *v5 = a1;
  v5[1] = a2;
  return v4;
}

uint64_t REMLazy.init(closure:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 80) - 8) + 56))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 88), 1, 1);
  v5 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96));
  *v5 = a1;
  v5[1] = a2;
  return v2;
}

uint64_t REMLazy.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 88);
  v2 = sub_1A46911A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t REMLazy.__deallocating_deinit()
{
  REMLazy.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1A450FCDC@<X0>(uint64_t a1@<X8>)
{
  return REMLazy.value.getter(a1);
}

uint64_t sub_1A450FD00()
{
  return 8;
}

_QWORD *sub_1A450FD0C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A450FD18()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A46911A0();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for REMLazy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for REMLazy);
}

uint64_t method lookup function for REMLazy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMLazy.__allocating_init(closure:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1A450FDB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE71F400);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE71F400);
  if (qword_1ED23E620 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_1A450FE48(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithBundleIdentifier_allowPlaceholder_error_, v5, a3 & 1, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_1A468FE68();

    swift_willThrow();
  }
  return v6;
}

id sub_1A450FF20(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  unint64_t v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  uint64_t v43;
  char *v44;
  id v45;
  id v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  void *v57;
  id v58;
  unint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  void *v63;
  uint64_t v64;
  void *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74[2];

  v74[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  v4 = MEMORY[0x1E0C80A78](v3);
  v70 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v66 - v6;
  v71 = sub_1A468FF7C();
  v8 = *(_QWORD *)(v71 - 8);
  v9 = MEMORY[0x1E0C80A78](v71);
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v66 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v66 - v15;
  v17 = (void *)objc_opt_self();
  v18 = (void *)sub_1A468FED4();
  v74[0] = 0;
  v19 = objc_msgSend(v17, sel_appLinksWithURL_limit_error_, v18, 1, v74);

  v20 = v74[0];
  if (!v19)
  {
    v67 = v14;
    v69 = v16;
    v26 = v74[0];
    v1 = (void *)sub_1A468FE68();

    swift_willThrow();
    if (qword_1EE71C078 == -1)
    {
LABEL_10:
      v27 = sub_1A4690318();
      __swift_project_value_buffer(v27, (uint64_t)qword_1EE71F400);
      v28 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      v68 = a1;
      v28(v11, a1, v71);
      v29 = v1;
      v30 = v1;
      v31 = sub_1A469030C();
      v32 = sub_1A4690FD8();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = swift_slowAlloc();
        v66 = (void *)swift_slowAlloc();
        v74[0] = v66;
        *(_DWORD *)v33 = 136315394;
        swift_getErrorValue();
        v34 = Error.rem_errorDescription.getter(v73);
        v72 = sub_1A4431120(v34, v35, (uint64_t *)v74);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v33 + 12) = 2080;
        v36 = sub_1A468FE98();
        v72 = sub_1A4431120(v36, v37, (uint64_t *)v74);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v71);
        _os_log_impl(&dword_1A442D000, v31, v32, "Failed to get appLink {error: %s, url: %s}", (uint8_t *)v33, 0x16u);
        v38 = v66;
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v38, -1, -1);
        MEMORY[0x1A85A0114](v33, -1, -1);

      }
      else
      {

        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v71);
      }
      a1 = v68;
      v16 = v69;
      v14 = v67;
      goto LABEL_16;
    }
LABEL_36:
    swift_once();
    goto LABEL_10;
  }
  sub_1A444AA40(0, &qword_1EE71F420);
  v21 = sub_1A4690BA0();
  v22 = v20;

  if (!(v21 >> 62))
  {
    if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v39 = sub_1A46916A4();
  swift_bridgeObjectRelease();
  if (!v39)
    goto LABEL_15;
LABEL_4:
  if ((v21 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v23 = *(id *)(v21 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_36;
  }
  v23 = (id)MEMORY[0x1A859ECE0](0, v21);
LABEL_7:
  v24 = v23;
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v24, sel_targetApplicationRecord);

  if (v25)
    return v25;
LABEL_16:
  v40 = (void *)objc_opt_self();
  v41 = objc_msgSend(v40, sel_defaultWorkspace);
  v42 = v41;
  if (v41)
  {
    v43 = (uint64_t)v7;
    v44 = v14;
    v45 = v41;
    v46 = v41;
    v47 = a1;
    v48 = (void *)sub_1A468FED4();
    v49 = objc_msgSend(v46, sel_URLOverrideForURL_, v48);

    if (v49)
    {
      v50 = (uint64_t)v70;
      sub_1A468FF1C();

      v51 = 0;
      v14 = v44;
    }
    else
    {
      v51 = 1;
      v14 = v44;
      v50 = (uint64_t)v70;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v50, v51, 1, v71);
    v7 = (char *)v43;
    sub_1A44E2280(v50, v43);
    a1 = v47;
    v42 = v45;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v7, 1, 1, v71);
  }
  v52 = a1;
  v53 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v14, v52, v71);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v53) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v14, v71);
    sub_1A44E22C8((uint64_t)v7);
  }
  else
  {
    v54 = v71;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v71);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v7, v54);
  }
  v55 = objc_msgSend(v40, sel_defaultWorkspace);
  if (!v55)
    goto LABEL_39;
  v56 = v55;
  v57 = (void *)sub_1A468FED4();
  v58 = objc_msgSend(v56, sel_applicationsAvailableForOpeningURL_, v57);

  if (!v58)
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v71);
    return 0;
  }
  sub_1A444AA40(0, &qword_1EE71F418);
  v59 = sub_1A4690BA0();

  if (v59 >> 62)
  {
    swift_bridgeObjectRetain();
    v64 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (v64)
      goto LABEL_29;
    goto LABEL_38;
  }
  if (!*(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_38:
    swift_bridgeObjectRelease();
LABEL_39:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v71);

    return 0;
  }
LABEL_29:
  if ((v59 & 0xC000000000000001) != 0)
  {
    v60 = v8;
    v61 = v42;
    v62 = (id)MEMORY[0x1A859ECE0](0, v59);
  }
  else
  {
    if (!*(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10))
      __break(1u);
    v60 = v8;
    v61 = v42;
    v62 = *(id *)(v59 + 32);
  }
  v63 = v62;
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v63, sel_correspondingApplicationRecord);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v16, v71);
  return v25;
}

uint64_t sub_1A45106B0(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  id v15;
  id v16;
  _QWORD *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1A443D4F0(MEMORY[0x1E0DEE9D8]);
  v2 = (void *)sub_1A46906F0();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(a1, sel__determineMatchingApplicationBundleIdentifierWithOptions_, v2);

  if (v3)
  {
    v4 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v6 = v5;

    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243000);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1A4695C10;
    *(_QWORD *)(v7 + 32) = v4;
    *(_QWORD *)(v7 + 40) = v6;
    return v7;
  }
  v8 = objc_msgSend(a1, sel_activityType);
  v9 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v11 = v10;

  if (v9 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v11 == v12)
  {
    swift_bridgeObjectRelease_n();
    return (uint64_t)&unk_1E4C105E0;
  }
  v14 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
    return (uint64_t)&unk_1E4C105E0;
  v15 = objc_msgSend(a1, sel_activityType);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  LOBYTE(v15) = sub_1A4690A14();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
    return MEMORY[0x1E0DEE9D8];
  v16 = objc_msgSend(a1, sel_activityType);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  sub_1A4466118();
  v17 = (_QWORD *)sub_1A4691200();
  swift_bridgeObjectRelease();
  if (v17[2] < 3uLL)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v7 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    sub_1A4469630();
    v19 = sub_1A4690828();
    v21 = v20;
    swift_bridgeObjectRelease();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1A4438920(0, *(_QWORD *)(v7 + 16) + 1, 1, (_QWORD *)v7);
      v7 = result;
    }
    v23 = *(_QWORD *)(v7 + 16);
    v22 = *(_QWORD *)(v7 + 24);
    if (v23 >= v22 >> 1)
    {
      result = (uint64_t)sub_1A4438920((_QWORD *)(v22 > 1), v23 + 1, 1, (_QWORD *)v7);
      v7 = result;
    }
    *(_QWORD *)(v7 + 16) = v23 + 1;
    v24 = v7 + 16 * v23;
    *(_QWORD *)(v24 + 32) = v19;
    *(_QWORD *)(v24 + 40) = v21;
    if (!v17[2])
      break;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      v25 = v17[2];
      if (!v25)
        goto LABEL_26;
    }
    else
    {
      v17 = sub_1A4614408(v17);
      v25 = v17[2];
      if (!v25)
      {
LABEL_26:
        __break(1u);
LABEL_27:
        swift_bridgeObjectRelease();
        return v7;
      }
    }
    v17[2] = v25 - 1;
    swift_bridgeObjectRelease();
    if (v17[2] <= 2uLL)
      goto LABEL_27;
  }
  __break(1u);
  return result;
}

id _sSo19LSApplicationRecordC19ReminderKitInternalE011applicationB015forUserActivityABSgSo06NSUserI0C_tFZ_0(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;

  v1 = (_QWORD *)sub_1A45106B0(a1);
  if (v1[2])
  {
    v3 = v1[4];
    v2 = v1[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v4 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
    swift_bridgeObjectRetain();
    v5 = sub_1A450FE48(v3, v2, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v5;
}

id static REMStructuredLocation.testing_appleInc.getter()
{
  return sub_1A4510D28(37.332093, -122.030255);
}

id static REMStructuredLocation.testing_applePark.getter()
{
  return sub_1A4510D28(37.3349, -122.00902);
}

id sub_1A4510D28(double a1, double a2)
{
  id v4;
  void *v5;
  id v6;

  v4 = objc_allocWithZone(MEMORY[0x1E0D846C8]);
  v5 = (void *)sub_1A469087C();
  v6 = objc_msgSend(v4, sel_initWithTitle_, v5);

  objc_msgSend(v6, sel_setLatitude_, a1);
  objc_msgSend(v6, sel_setLongitude_, a2);
  objc_msgSend(v6, sel_setRadius_, 100.0);
  return v6;
}

id static REMStructuredLocation.testing_outbackSteakhouse.getter()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0D846C8]);
  v1 = (void *)sub_1A469087C();
  v2 = objc_msgSend(v0, sel_initWithTitle_, v1);

  objc_msgSend(v2, sel_setLatitude_, 37.331554);
  objc_msgSend(v2, sel_setLongitude_, -122.033371);
  objc_msgSend(v2, sel_setRadius_, 100.0);
  return v2;
}

id static REMStructuredLocation.testing_outbackSteakhouse(radius:)(double a1)
{
  id v2;
  void *v3;
  id v4;

  v2 = objc_allocWithZone(MEMORY[0x1E0D846C8]);
  v3 = (void *)sub_1A469087C();
  v4 = objc_msgSend(v2, sel_initWithTitle_, v3);

  objc_msgSend(v4, sel_setLatitude_, 37.331554);
  objc_msgSend(v4, sel_setLongitude_, -122.033371);
  objc_msgSend(v4, sel_setRadius_, a1);
  return v4;
}

void sub_1A4510F48(uint64_t a1, uint64_t a2, char a3)
{
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v5 = sub_1A469030C();
  v6 = sub_1A4690FFC();
  v18 = a1;
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v19 = v16;
    *(_DWORD *)v7 = 136446722;
    v8 = sub_1A4691434();
    sub_1A4431120(v8, v9, &v19);
    sub_1A46911D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    swift_bridgeObjectRetain();
    v17 = a3;
    v10 = sub_1A4690714();
    v12 = v11;
    swift_bridgeObjectRelease();
    sub_1A4431120(v10, v12, &v19);
    sub_1A46911D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 22) = 2082;
    swift_bridgeObjectRetain();
    v13 = sub_1A4690714();
    v15 = v14;
    swift_bridgeObjectRelease();
    sub_1A4431120(v13, v15, &v19);
    sub_1A46911D0();
    swift_bridgeObjectRelease_n();
    a3 = v17;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v5, v6, "%{public}s; UserInfo=%s; PublicUserInfo=%{public}s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v16, -1, -1);
    MEMORY[0x1A85A0114](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  if ((a3 & 1) != 0)
  {
    __break(1u);
  }
  else if (v18)
  {
    rdi_os_crash();
  }
  __break(1u);
}

uint64_t sub_1A45111C8(uint64_t a1)
{
  return sub_1A45112E0(a1, qword_1ED256830, 0x1E0D84588, (SEL *)&selRef_ui);
}

uint64_t sub_1A45111E4(uint64_t a1)
{
  return sub_1A45112E0(a1, qword_1EE75B8A0, 0x1E0D84588, (SEL *)&selRef_notification);
}

uint64_t sub_1A4511200(uint64_t a1)
{
  return sub_1A45112E0(a1, qword_1ED2568D8, 0x1E0D84588, (SEL *)&selRef_utility);
}

uint64_t sub_1A451121C(uint64_t a1)
{
  return sub_1A45112E0(a1, qword_1ED256848, 0x1E0D84588, (SEL *)&selRef_suggestedAttributes);
}

uint64_t sub_1A4511238(uint64_t a1)
{
  return sub_1A45112E0(a1, qword_1EE75B8B8, 0x1E0D84588, (SEL *)&selRef_intelligentGrocery);
}

uint64_t sub_1A4511254(uint64_t a1)
{
  return sub_1A45112E0(a1, qword_1ED256870, 0x1E0D84588, (SEL *)&selRef_analytics);
}

uint64_t sub_1A4511270(uint64_t a1)
{
  return sub_1A45112E0(a1, qword_1EE75B8D0, 0x1E0D84588, (SEL *)&selRef_siriKit);
}

uint64_t sub_1A451128C(uint64_t a1)
{
  return sub_1A45112E0(a1, qword_1ED256898, 0x1E0D84590, (SEL *)&selRef_read);
}

uint64_t sub_1A45112A8(uint64_t a1)
{
  return sub_1A45112E0(a1, qword_1EE75B8E8, 0x1E0D84590, (SEL *)&selRef_write);
}

uint64_t sub_1A45112C4(uint64_t a1)
{
  return sub_1A45112E0(a1, qword_1EE75B900, 0x1E0D84590, (SEL *)&selRef_utility);
}

uint64_t sub_1A45112E0(uint64_t a1, uint64_t *a2, uint64_t a3, SEL *a4)
{
  uint64_t v6;
  id v7;

  v6 = sub_1A4690318();
  __swift_allocate_value_buffer(v6, a2);
  __swift_project_value_buffer(v6, (uint64_t)a2);
  v7 = objc_msgSend((id)objc_opt_self(), *a4);
  return sub_1A4690324();
}

uint64_t sub_1A4511350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE71F428);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE71F428);
  if (qword_1ED244120 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2568D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

Swift::Int32 __swiftcall Int32.init(timeIntervalSinceReferenceDate:)(Swift::Double timeIntervalSinceReferenceDate)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if ((~*(_QWORD *)&timeIntervalSinceReferenceDate & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (timeIntervalSinceReferenceDate <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (timeIntervalSinceReferenceDate >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if ((uint64_t)timeIntervalSinceReferenceDate <= 2147483646)
  {
    if (timeIntervalSinceReferenceDate > -2147483650.0)
    {
      if (timeIntervalSinceReferenceDate < 2147483650.0)
        return (int)timeIntervalSinceReferenceDate;
      goto LABEL_16;
    }
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (qword_1EE71C0C0 != -1)
LABEL_17:
    swift_once();
  v2 = sub_1A4690318();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EE71F428);
  v3 = sub_1A469030C();
  v4 = sub_1A4690FFC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v9 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = sub_1A4690D2C();
    sub_1A4431120(v7, v8, &v9);
    sub_1A46911D0();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v6, -1, -1);
    MEMORY[0x1A85A0114](v5, -1, -1);
  }

  return 0x7FFFFFFF;
}

uint64_t sub_1A45115E0()
{
  uint64_t v0;

  v0 = sub_1A46900B4();
  __swift_allocate_value_buffer(v0, qword_1EE71F440);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE71F440);
  return sub_1A468FFDC();
}

uint64_t static Date.referenceDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE71C0C8 != -1)
    swift_once();
  v2 = sub_1A46900B4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE71F440);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

_QWORD *ExtendedDiff.remainingIndexes.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _BYTE *v5;
  unint64_t v6;
  unint64_t v7;
  __int128 v9;
  _QWORD *v10;

  v1 = *(_QWORD **)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 32);
  v10 = v1;
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v4 = v10;
    v5 = (_BYTE *)(v2 + 48);
    do
    {
      if (*v5 == 3)
      {
        v9 = *((_OWORD *)v5 - 1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v1 = sub_1A4438C58(0, v1[2] + 1, 1, v1);
        v7 = v1[2];
        v6 = v1[3];
        if (v7 >= v6 >> 1)
          v1 = sub_1A4438C58((_QWORD *)(v6 > 1), v7 + 1, 1, v1);
        v1[2] = v7 + 1;
        *(_OWORD *)&v1[2 * v7 + 4] = v9;
        v4 = v1;
      }
      v5 += 24;
      --v3;
    }
    while (v3);
    v10 = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_1A45117B4(&v10);
  return v10;
}

uint64_t sub_1A45117B4(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A461441C(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_1A4511820(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A4511820(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t i;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *__dst;

  v3 = a1[1];
  result = sub_1A46918CC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v83 = 0;
      v84 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v86 = *(_QWORD *)(v84 + 16 * i);
        v87 = v83;
        do
        {
          if (v86 >= *(_QWORD *)(v84 + v87))
            break;
          if (!v84)
            goto LABEL_140;
          v88 = (_QWORD *)(v84 + v87);
          v89 = *(_QWORD *)(v84 + v87 + 24);
          *(_OWORD *)(v84 + v87 + 16) = *(_OWORD *)(v84 + v87);
          *v88 = v86;
          v88[1] = v89;
          v87 -= 16;
        }
        while (v87 != -16);
        v83 += 16;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v6 = result;
  v98 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_102:
      v90 = v12;
      v101 = v9;
      if (v13 >= 2)
      {
        v91 = *v98;
        do
        {
          v92 = v13 - 2;
          if (v13 < 2)
            goto LABEL_131;
          if (!v91)
            goto LABEL_144;
          v93 = v90;
          v94 = *(_QWORD *)&v90[16 * v92 + 32];
          v95 = *(_QWORD *)&v90[16 * v13 + 24];
          sub_1A4511EE4((char *)(v91 + 16 * v94), (char *)(v91 + 16 * *(_QWORD *)&v90[16 * v13 + 16]), v91 + 16 * v95, __dst);
          if (v1)
            break;
          if (v95 < v94)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v93 = sub_1A462EBC8((uint64_t)v93);
          if (v92 >= *((_QWORD *)v93 + 2))
            goto LABEL_133;
          v96 = &v93[16 * v92 + 32];
          *(_QWORD *)v96 = v94;
          *((_QWORD *)v96 + 1) = v95;
          v97 = *((_QWORD *)v93 + 2);
          if (v13 > v97)
            goto LABEL_134;
          memmove(&v93[16 * v13 + 16], &v93[16 * v13 + 32], 16 * (v97 - v13));
          v90 = v93;
          *((_QWORD *)v93 + 2) = v97 - 1;
          v13 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v101 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v101 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_1A4690C00();
    *(_QWORD *)(v8 + 16) = v7;
    v101 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v99 = *a1 - 16;
  v100 = *a1 + 32;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v102 = v6;
  v103 = v3;
  v104 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_QWORD *)(v11 + 16 * v10);
      v16 = *(_QWORD *)(v11 + 16 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (uint64_t *)(v100 + 16 * v14);
        v18 = v15;
        while (1)
        {
          v20 = *v17;
          v17 += 2;
          v19 = v20;
          if (v15 < v16 == v20 >= v18)
            break;
          ++v10;
          v18 = v19;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_137;
        if (v14 < v10)
        {
          v21 = (__int128 *)(v99 + 16 * v10);
          v22 = v10;
          v23 = v14;
          v24 = (__int128 *)(v11 + 16 * v14);
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_143;
              v25 = *v24;
              *v24 = *v21;
              *v21 = v25;
            }
            ++v23;
            --v21;
            ++v24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_135;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v26 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_138;
    if (v26 >= v3)
      v26 = v3;
    if (v26 < v14)
      break;
    if (v10 != v26)
    {
      v27 = v99 + 16 * v10;
      do
      {
        v28 = *(_QWORD *)(v11 + 16 * v10);
        v29 = v14;
        v30 = v27;
        do
        {
          if (v28 >= *(_QWORD *)v30)
            break;
          if (!v11)
            goto LABEL_141;
          v31 = *(_QWORD *)(v30 + 24);
          *(_OWORD *)(v30 + 16) = *(_OWORD *)v30;
          *(_QWORD *)v30 = v28;
          *(_QWORD *)(v30 + 8) = v31;
          v30 -= 16;
          ++v29;
        }
        while (v10 != v29);
        ++v10;
        v27 += 16;
      }
      while (v10 != v26);
      v10 = v26;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A462E5B0(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v33 = *((_QWORD *)v12 + 2);
    v32 = *((_QWORD *)v12 + 3);
    v13 = v33 + 1;
    v11 = v104;
    if (v33 >= v32 >> 1)
    {
      v82 = sub_1A462E5B0((char *)(v32 > 1), v33 + 1, 1, v12);
      v11 = v104;
      v12 = v82;
    }
    *((_QWORD *)v12 + 2) = v13;
    v34 = v12 + 32;
    v35 = &v12[16 * v33 + 32];
    *(_QWORD *)v35 = v14;
    *((_QWORD *)v35 + 1) = v10;
    if (v33)
    {
      while (1)
      {
        v36 = v13 - 1;
        if (v13 >= 4)
        {
          v41 = &v34[16 * v13];
          v42 = *((_QWORD *)v41 - 8);
          v43 = *((_QWORD *)v41 - 7);
          v47 = __OFSUB__(v43, v42);
          v44 = v43 - v42;
          if (v47)
            goto LABEL_119;
          v46 = *((_QWORD *)v41 - 6);
          v45 = *((_QWORD *)v41 - 5);
          v47 = __OFSUB__(v45, v46);
          v39 = v45 - v46;
          v40 = v47;
          if (v47)
            goto LABEL_120;
          v48 = v13 - 2;
          v49 = &v34[16 * v13 - 32];
          v51 = *(_QWORD *)v49;
          v50 = *((_QWORD *)v49 + 1);
          v47 = __OFSUB__(v50, v51);
          v52 = v50 - v51;
          if (v47)
            goto LABEL_122;
          v47 = __OFADD__(v39, v52);
          v53 = v39 + v52;
          if (v47)
            goto LABEL_125;
          if (v53 >= v44)
          {
            v71 = &v34[16 * v36];
            v73 = *(_QWORD *)v71;
            v72 = *((_QWORD *)v71 + 1);
            v47 = __OFSUB__(v72, v73);
            v74 = v72 - v73;
            if (v47)
              goto LABEL_129;
            v64 = v39 < v74;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v65 = *((_QWORD *)v12 + 4);
            v66 = *((_QWORD *)v12 + 5);
            v47 = __OFSUB__(v66, v65);
            v58 = v66 - v65;
            v59 = v47;
            goto LABEL_77;
          }
          v38 = *((_QWORD *)v12 + 4);
          v37 = *((_QWORD *)v12 + 5);
          v47 = __OFSUB__(v37, v38);
          v39 = v37 - v38;
          v40 = v47;
        }
        if ((v40 & 1) != 0)
          goto LABEL_121;
        v48 = v13 - 2;
        v54 = &v34[16 * v13 - 32];
        v56 = *(_QWORD *)v54;
        v55 = *((_QWORD *)v54 + 1);
        v57 = __OFSUB__(v55, v56);
        v58 = v55 - v56;
        v59 = v57;
        if (v57)
          goto LABEL_124;
        v60 = &v34[16 * v36];
        v62 = *(_QWORD *)v60;
        v61 = *((_QWORD *)v60 + 1);
        v47 = __OFSUB__(v61, v62);
        v63 = v61 - v62;
        if (v47)
          goto LABEL_127;
        if (__OFADD__(v58, v63))
          goto LABEL_128;
        if (v58 + v63 >= v39)
        {
          v64 = v39 < v63;
LABEL_83:
          if (v64)
            v36 = v48;
          goto LABEL_85;
        }
LABEL_77:
        if ((v59 & 1) != 0)
          goto LABEL_123;
        v67 = &v34[16 * v36];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        v47 = __OFSUB__(v68, v69);
        v70 = v68 - v69;
        if (v47)
          goto LABEL_126;
        if (v70 < v58)
          goto LABEL_15;
LABEL_85:
        v75 = v36 - 1;
        if (v36 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11)
          goto LABEL_142;
        v76 = v12;
        v77 = &v34[16 * v75];
        v78 = *(_QWORD *)v77;
        v79 = &v34[16 * v36];
        v80 = *((_QWORD *)v79 + 1);
        sub_1A4511EE4((char *)(v11 + 16 * *(_QWORD *)v77), (char *)(v11 + 16 * *(_QWORD *)v79), v11 + 16 * v80, __dst);
        if (v1)
          goto LABEL_93;
        if (v80 < v78)
          goto LABEL_116;
        if (v36 > *((_QWORD *)v76 + 2))
          goto LABEL_117;
        *(_QWORD *)v77 = v78;
        *(_QWORD *)&v34[16 * v75 + 8] = v80;
        v81 = *((_QWORD *)v76 + 2);
        if (v36 >= v81)
          goto LABEL_118;
        v12 = v76;
        v13 = v81 - 1;
        memmove(&v34[16 * v36], v79 + 16, 16 * (v81 - 1 - v36));
        *((_QWORD *)v76 + 2) = v81 - 1;
        v11 = v104;
        if (v81 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v102;
    v3 = v103;
    if (v10 >= v103)
    {
      v9 = v101;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t sub_1A4511EE4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v16 = &v4[16 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v17 = (char *)(a3 - 16);
        v18 = v6;
        while (1)
        {
          v19 = v17 + 16;
          v20 = *((_QWORD *)v18 - 2);
          v18 -= 16;
          if (*((_QWORD *)v16 - 2) >= v20)
          {
            v22 = v16 - 16;
            if (v19 < v16 || v17 >= v16 || v19 != v16)
              *(_OWORD *)v17 = *((_OWORD *)v16 - 1);
            v18 = v6;
            v16 -= 16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v19 != v6 || v17 >= v6)
              *(_OWORD *)v17 = *(_OWORD *)v18;
            v24 = v18;
            if (v18 <= v7)
              goto LABEL_42;
          }
          v17 -= 16;
          v6 = v18;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 16;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1A462E918(&v24, &v23, &v22);
    return 1;
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

id zalgo.getter()
{
  return sub_1A4512364(&qword_1ED243C50, (id *)&qword_1ED2431A0);
}

uint64_t sub_1A4512178(uint64_t a1)
{
  return sub_1A45121C0(a1, 0xD000000000000017, 0x80000001A46BF2E0, &qword_1ED2431A0);
}

uint64_t sub_1A451219C(uint64_t a1)
{
  return sub_1A45121C0(a1, 0xD00000000000001DLL, 0x80000001A46BF2C0, &qword_1ED241948);
}

uint64_t sub_1A45121C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];
  uint64_t *v12;
  uint64_t v13;

  v11[1] = a3;
  v12 = a4;
  v4 = sub_1A4691080();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A4691044();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1A46905DC();
  MEMORY[0x1E0C80A78](v9);
  sub_1A44DBBA4();
  sub_1A46905C4();
  v13 = MEMORY[0x1E0DEE9D8];
  sub_1A451239C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E18);
  sub_1A45123E4();
  sub_1A46912A8();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF8D0], v4);
  result = sub_1A46910B0();
  *v12 = result;
  return result;
}

id zalgoIfMain.getter()
{
  return sub_1A4512364(&qword_1ED242788, (id *)&qword_1ED241948);
}

id sub_1A4512364(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

unint64_t sub_1A451239C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED243E30;
  if (!qword_1ED243E30)
  {
    v1 = sub_1A4691044();
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, (unint64_t *)&qword_1ED243E30);
  }
  return result;
}

unint64_t sub_1A45123E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED243E20;
  if (!qword_1ED243E20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED243E18);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED243E20);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> URL.tryStartAccessingSecurityScopedResource()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1A468FF7C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1A468FF28() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
    type metadata accessor for FailedToAccessSecurityScopedURLError(0);
    sub_1A4512510();
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v5, v4, v1);
    swift_willThrow();
  }
}

uint64_t type metadata accessor for FailedToAccessSecurityScopedURLError(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE71F578);
}

unint64_t sub_1A4512510()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE71F458;
  if (!qword_1EE71F458)
  {
    v1 = type metadata accessor for FailedToAccessSecurityScopedURLError(255);
    result = MEMORY[0x1A85A0000](&unk_1A469DB88, v1);
    atomic_store(result, (unint64_t *)&qword_1EE71F458);
  }
  return result;
}

uint64_t URL.withAccessToSecurityScopedResource<A>(_:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;

  v16 = a3;
  v17 = a1;
  v5 = sub_1A468FF7C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1A468FF28() & 1) != 0)
  {
    v13 = v18;
    v17(v3);
    if (!v13)
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v16, v12, a2);
    return sub_1A468FF10();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v3, v5);
    type metadata accessor for FailedToAccessSecurityScopedURLError(0);
    sub_1A4512510();
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v15, v9, v5);
    return swift_willThrow();
  }
}

Swift::Void __swiftcall URL.stopAccessingSecurityScopedResource(whenDeallocating:)(NSObject whenDeallocating)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  const void **v7;
  _QWORD *v8;
  uint64_t v9;

  v3 = sub_1A468FF7C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
  _s23SecurityScopedURLHolderCMa(0);
  v7 = (const void **)swift_allocObject();
  v8 = (_QWORD *)swift_slowAlloc();
  *v8 = 0;
  v7[2] = v8;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))((uint64_t)v7+ OBJC_IVAR____TtCE19ReminderKitInternalV10Foundation3URLP33_C4CF88CCEEBFE10B546F9B83C3AB9A6B23SecurityScopedURLHolder_fileURL, v6, v3);
  objc_setAssociatedObject(whenDeallocating.isa, v7[2], v7, (void *)1);
  swift_release();
}

uint64_t _s23SecurityScopedURLHolderCMa(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE71F490);
}

uint64_t sub_1A45127A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0
     + OBJC_IVAR____TtCE19ReminderKitInternalV10Foundation3URLP33_C4CF88CCEEBFE10B546F9B83C3AB9A6B23SecurityScopedURLHolder_fileURL;
  sub_1A468FF10();
  v2 = sub_1A468FF7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t URL.isHTTPOrHTTPSURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  sub_1A468FF4C();
  if (!v0)
    return 0;
  v1 = sub_1A46908F4();
  v3 = v2;
  swift_bridgeObjectRelease();
  if (v1 == 1886680168 && v3 == 0xE400000000000000
    || (sub_1A4691A40() & 1) != 0
    || v1 == 0x7370747468 && v3 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    return v5 & 1;
  }
}

uint64_t URL.domain.getter()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v0 = sub_1A468FF34();
  v2 = v1;
  if (v1)
  {
    if ((sub_1A4690A14() & 1) != 0)
    {
      v3 = sub_1A4690954();
      v4 = sub_1A4460598(v3, v0, v2);
      v6 = v5;
      v8 = v7;
      v10 = v9;
      swift_bridgeObjectRelease();
      v0 = MEMORY[0x1A859E164](v4, v6, v8, v10);
      v2 = v11;
      swift_bridgeObjectRelease();
    }
    v12 = HIBYTE(v2) & 0xF;
    if ((v2 & 0x2000000000000000) == 0)
      v12 = v0 & 0xFFFFFFFFFFFFLL;
    if (!v12)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v0;
}

uint64_t sub_1A45129CC()
{
  return _s23SecurityScopedURLHolderCMa(0);
}

uint64_t sub_1A45129D4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A468FF7C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1A4512A50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A468FF7C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1A4512A8C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A468FF7C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1A4512AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A468FF7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A4512B04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A468FF7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A4512B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A468FF7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A4512B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A468FF7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A4512BD0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A4512BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A468FF7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1A4512C18()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A4512C24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A468FF7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1A4512C64()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A468FF7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t REMLinearAlgebraDataRef.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
    MEMORY[0x1A85A0114](v1, -1, -1);
  return v0;
}

uint64_t REMLinearAlgebraDataRef.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
    MEMORY[0x1A85A0114](v1, -1, -1);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for REMLinearAlgebraDataRef()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMLinearAlgebraDataRef()
{
  return swift_lookUpClassMethod();
}

uint64_t (*sub_1A4512D50(uint64_t a1, uint64_t a2))()
{
  uint64_t v2;
  uint64_t v5;
  uint64_t (*result)();
  int v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  void *v17;
  char v18;

  v5 = *(_QWORD *)(v2 + 16);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v5 + 16));
  if ((*(_BYTE *)(v2 + 24) & 1) != 0)
  {
    result = (uint64_t (*)())swift_beginAccess();
    v7 = *(unsigned __int8 *)(v2 + 48);
    if (v7 == 255)
    {
      __break(1u);
    }
    else
    {
      v17 = *(void **)(v2 + 40);
      v8 = v17;
      v18 = v7;
      v9 = (_QWORD *)swift_allocObject();
      v9[2] = v5;
      v9[3] = a1;
      v9[4] = a2;
      sub_1A44C6CC8((uint64_t)&v17, (uint64_t)(v9 + 5), &qword_1ED23EC90);
      swift_retain();
      sub_1A4514064(v8, v7);
      swift_retain();
      return sub_1A4513CC0;
    }
  }
  else
  {
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a1;
    *(_QWORD *)(v10 + 24) = a2;
    v11 = (_QWORD *)(v2 + 32);
    swift_beginAccess();
    v12 = *(_QWORD **)(v2 + 32);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v2 + 32) = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v12 = sub_1A44390A0(0, v12[2] + 1, 1, v12);
      *v11 = v12;
    }
    v15 = v12[2];
    v14 = v12[3];
    if (v15 >= v14 >> 1)
    {
      v12 = sub_1A44390A0((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
      *v11 = v12;
    }
    v12[2] = v15 + 1;
    v16 = &v12[2 * v15];
    v16[4] = sub_1A4513D18;
    v16[5] = v10;
    swift_endAccess();
    return nullsub_1;
  }
  return result;
}

uint64_t (*sub_1A4512F00(uint64_t a1, uint64_t a2))()
{
  uint64_t v2;
  uint64_t v5;
  uint64_t (*result)();
  int v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  void *v17;
  char v18;

  v5 = *(_QWORD *)(v2 + 16);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v5 + 16));
  if ((*(_BYTE *)(v2 + 24) & 1) != 0)
  {
    result = (uint64_t (*)())swift_beginAccess();
    v7 = *(unsigned __int8 *)(v2 + 48);
    if (v7 == 255)
    {
      __break(1u);
    }
    else
    {
      v17 = *(void **)(v2 + 40);
      v8 = v17;
      v18 = v7;
      v9 = (_QWORD *)swift_allocObject();
      v9[2] = v5;
      v9[3] = a1;
      v9[4] = a2;
      sub_1A44C6CC8((uint64_t)&v17, (uint64_t)(v9 + 5), &qword_1ED23EC88);
      swift_retain();
      sub_1A4513CC4(v8, v7);
      swift_retain();
      return sub_1A4513CC0;
    }
  }
  else
  {
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a1;
    *(_QWORD *)(v10 + 24) = a2;
    v11 = (_QWORD *)(v2 + 32);
    swift_beginAccess();
    v12 = *(_QWORD **)(v2 + 32);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v2 + 32) = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v12 = sub_1A4439F30(0, v12[2] + 1, 1, v12);
      *v11 = v12;
    }
    v15 = v12[2];
    v14 = v12[3];
    if (v15 >= v14 >> 1)
    {
      v12 = sub_1A4439F30((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
      *v11 = v12;
    }
    v12[2] = v15 + 1;
    v16 = &v12[2 * v15];
    v16[4] = sub_1A4513D18;
    v16[5] = v10;
    swift_endAccess();
    return (uint64_t (*)())nullsub_1;
  }
  return result;
}

uint64_t (*sub_1A45130B0(uint64_t a1, uint64_t a2))()
{
  uint64_t v2;
  uint64_t v5;
  uint64_t (*result)();
  int v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  void *v17;
  char v18;

  v5 = *(_QWORD *)(v2 + 16);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v5 + 16));
  if ((*(_BYTE *)(v2 + 24) & 1) != 0)
  {
    result = (uint64_t (*)())swift_beginAccess();
    v7 = *(unsigned __int8 *)(v2 + 48);
    if (v7 == 255)
    {
      __break(1u);
    }
    else
    {
      v17 = *(void **)(v2 + 40);
      v8 = v17;
      v18 = v7;
      v9 = (_QWORD *)swift_allocObject();
      v9[2] = v5;
      v9[3] = a1;
      v9[4] = a2;
      sub_1A44C6CC8((uint64_t)&v17, (uint64_t)(v9 + 5), (uint64_t *)&unk_1EE720D80);
      swift_retain();
      sub_1A4513CC4(v8, v7);
      swift_retain();
      return sub_1A4513CC0;
    }
  }
  else
  {
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a1;
    *(_QWORD *)(v10 + 24) = a2;
    v11 = (_QWORD *)(v2 + 32);
    swift_beginAccess();
    v12 = *(_QWORD **)(v2 + 32);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v2 + 32) = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v12 = sub_1A443A044(0, v12[2] + 1, 1, v12);
      *v11 = v12;
    }
    v15 = v12[2];
    v14 = v12[3];
    if (v15 >= v14 >> 1)
    {
      v12 = sub_1A443A044((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
      *v11 = v12;
    }
    v12[2] = v15 + 1;
    v16 = &v12[2 * v15];
    v16[4] = sub_1A4513D18;
    v16[5] = v10;
    swift_endAccess();
    return (uint64_t (*)())nullsub_1;
  }
  return result;
}

uint64_t (*sub_1A4513260(uint64_t a1, uint64_t a2))()
{
  uint64_t v2;
  uint64_t v5;
  uint64_t (*result)();
  int v7;
  void *v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD v18[2];
  char v19;

  v5 = *(_QWORD *)(v2 + 16);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v5 + 16));
  if ((*(_BYTE *)(v2 + 24) & 1) != 0)
  {
    result = (uint64_t (*)())swift_beginAccess();
    v7 = *(unsigned __int8 *)(v2 + 56);
    if (v7 == 255)
    {
      __break(1u);
    }
    else
    {
      v8 = *(void **)(v2 + 48);
      v18[0] = *(_QWORD *)(v2 + 40);
      v9 = (void *)v18[0];
      v18[1] = v8;
      v19 = v7;
      v10 = (_QWORD *)swift_allocObject();
      v10[2] = v5;
      v10[3] = a1;
      v10[4] = a2;
      sub_1A44C6CC8((uint64_t)v18, (uint64_t)(v10 + 5), &qword_1EE71F6F0);
      swift_retain();
      sub_1A4513F34(v9, v8, v7);
      swift_retain();
      return sub_1A4513EE0;
    }
  }
  else
  {
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a1;
    *(_QWORD *)(v11 + 24) = a2;
    v12 = (_QWORD *)(v2 + 32);
    swift_beginAccess();
    v13 = *(_QWORD **)(v2 + 32);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v2 + 32) = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v13 = sub_1A443A050(0, v13[2] + 1, 1, v13);
      *v12 = v13;
    }
    v16 = v13[2];
    v15 = v13[3];
    if (v16 >= v15 >> 1)
    {
      v13 = sub_1A443A050((_QWORD *)(v15 > 1), v16 + 1, 1, v13);
      *v12 = v13;
    }
    v13[2] = v16 + 1;
    v17 = &v13[2 * v16];
    v17[4] = sub_1A4513F68;
    v17[5] = v11;
    swift_endAccess();
    return (uint64_t (*)())nullsub_1;
  }
  return result;
}

uint64_t (*sub_1A4513418(uint64_t a1, uint64_t a2))()
{
  uint64_t v2;
  uint64_t v5;
  uint64_t (*result)();
  int v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD v19[3];
  char v20;

  v5 = *(_QWORD *)(v2 + 16);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v5 + 16));
  if ((*(_BYTE *)(v2 + 24) & 1) != 0)
  {
    result = (uint64_t (*)())swift_beginAccess();
    v7 = *(unsigned __int8 *)(v2 + 64);
    if (v7 == 255)
    {
      __break(1u);
    }
    else
    {
      v9 = *(_QWORD *)(v2 + 48);
      v8 = *(_QWORD *)(v2 + 56);
      v19[0] = *(_QWORD *)(v2 + 40);
      v10 = (void *)v19[0];
      v19[1] = v9;
      v19[2] = v8;
      v20 = v7;
      v11 = (_QWORD *)swift_allocObject();
      v11[2] = v5;
      v11[3] = a1;
      v11[4] = a2;
      sub_1A44C6CC8((uint64_t)v19, (uint64_t)(v11 + 5), &qword_1EE720D20);
      swift_retain();
      sub_1A4513DF4(v10, v9, v8, v7);
      swift_retain();
      return sub_1A4513D98;
    }
  }
  else
  {
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = a1;
    *(_QWORD *)(v12 + 24) = a2;
    v13 = (_QWORD *)(v2 + 32);
    swift_beginAccess();
    v14 = *(_QWORD **)(v2 + 32);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v2 + 32) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_1A443A05C(0, v14[2] + 1, 1, v14);
      *v13 = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_1A443A05C((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *v13 = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[2 * v17];
    v18[4] = sub_1A4513E44;
    v18[5] = v12;
    swift_endAccess();
    return (uint64_t (*)())nullsub_1;
  }
  return result;
}

id AsyncBlockOperation.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_class *ObjectType;
  char *v7;
  objc_super v9;

  v5 = (char *)objc_allocWithZone(v2);
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = &v5[qword_1EE71F668];
  *(_QWORD *)v7 = a1;
  *((_QWORD *)v7 + 1) = a2;
  v9.receiver = v5;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

id AsyncBlockOperation.init(_:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = &v2[qword_1EE71F668];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

void AsyncBlockOperation.perform(completion:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void (*v16)(void);
  id v17;

  v5 = *MEMORY[0x1E0DEEDD8] & *v2;
  (*(void (**)(void))((char *)v2 + qword_1EE71F668))();
  v6 = (_QWORD *)swift_allocObject();
  v7 = *(_QWORD *)(v5 + 192);
  v6[2] = v7;
  v6[3] = a1;
  v6[4] = a2;
  v8 = qword_1ED243C50;
  swift_retain();
  if (v8 != -1)
    swift_once();
  v9 = (id)qword_1ED2431A0;
  v10 = sub_1A444B8B0(v9, (uint64_t)sub_1A4513994, (uint64_t)v6, MEMORY[0x1E0DEE9C0] + 8);
  swift_release();
  swift_release();

  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v7;
  v11[3] = a1;
  v11[4] = a2;
  v12 = (void *)qword_1ED2431A0;
  v13 = *(_QWORD *)(*(_QWORD *)(v10 + 16) + 16);
  swift_retain();
  v14 = v12;
  os_unfair_lock_lock_with_options();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = 0;
  *(_BYTE *)(v15 + 32) = 1;
  *(_QWORD *)(v15 + 40) = nullsub_1;
  *(_QWORD *)(v15 + 48) = 0;
  *(_QWORD *)(v15 + 56) = sub_1A4513A70;
  *(_QWORD *)(v15 + 64) = v11;
  *(_QWORD *)(v15 + 72) = nullsub_1;
  *(_QWORD *)(v15 + 80) = 0;
  v17 = v14;
  swift_retain();
  v16 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A4513BC0, v15);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  v16();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1A4513890(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  v7 = sub_1A4691D10();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))((char *)&v12 - v9, a1, a4);
  swift_storeEnumTagMultiPayload();
  a2(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A4513970()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A4513994(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4513890(a1, *(void (**)(char *))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A45139B0(void *a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  v4 = sub_1A4691D10();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - v6;
  *(uint64_t *)((char *)&v10 - v6) = (uint64_t)a1;
  swift_storeEnumTagMultiPayload();
  v8 = a1;
  a2(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A4513A70(void *a1)
{
  uint64_t v1;

  return sub_1A45139B0(a1, *(void (**)(char *))(v1 + 24));
}

id AsyncBlockOperation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AsyncBlockOperation.init()()
{
  sub_1A4513C08();
}

void sub_1A4513AB8()
{
  sub_1A4513C08();
}

uint64_t sub_1A4513AD4()
{
  return swift_release();
}

id AsyncBlockOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A4513B1C()
{
  return swift_release();
}

uint64_t sub_1A4513B30(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void (*a7)(void *), uint64_t a8, uint64_t (*a9)(void), uint64_t a10)
{
  return sub_1A4569D6C(*(void **)a1, *(_BYTE *)(a1 + 8), a2, a3, a4 & 1, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1A4513B84()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A4513BC0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4569D6C(*(void **)a1, *(_BYTE *)(a1 + 8), *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void (**)(void *))(v1 + 56), *(_QWORD *)(v1 + 64), *(uint64_t (**)(void))(v1 + 72), *(_QWORD *)(v1 + 80));
}

void sub_1A4513C08()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1A4513C34()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AsyncBlockOperation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncBlockOperation);
}

uint64_t method lookup function for AsyncBlockOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AsyncBlockOperation.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t sub_1A4513C98()
{
  return objectdestroy_8Tm((void (*)(_QWORD, _QWORD))sub_1A4513CA4);
}

void sub_1A4513CA4(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u)

}

id sub_1A4513CC4(id result, unsigned __int8 a2)
{
  if (a2 != 0xFF)
    return sub_1A4513CD8(result, a2);
  return result;
}

id sub_1A4513CD8(id result, unsigned __int8 a2)
{
  if (a2 <= 1u)
    return result;
  return result;
}

uint64_t sub_1A4513CF4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A4513D1C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_1A4513D58(*(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  return swift_deallocObject();
}

void sub_1A4513D58(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v4;

  if (a4 != 1)
  {
    if (a4)
      return;
    v4 = a1;
    swift_bridgeObjectRelease();
    a1 = v4;
  }

}

uint64_t sub_1A4513D98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(__int128 *);
  uint64_t v3;
  char v4;
  __int128 v6;
  uint64_t v7;
  char v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(uint64_t (**)(__int128 *))(v0 + 24);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_BYTE *)(v0 + 64);
  v6 = *(_OWORD *)(v0 + 40);
  v7 = v3;
  v8 = v4;
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(v1 + 16));
  return v2(&v6);
}

id sub_1A4513DF4(id result, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1)
    return sub_1A4513E08(result, a2, a3, a4);
  return result;
}

id sub_1A4513E08(id result, uint64_t a2, uint64_t a3, char a4)
{
  id v4;

  if (a4 == 1)
    return result;
  if (!a4)
  {
    v4 = result;
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A4513E44(__int128 *a1)
{
  uint64_t v1;
  uint64_t (*v2)(__int128 *);
  uint64_t v3;
  char v4;
  __int128 v6;
  uint64_t v7;
  char v8;

  v2 = *(uint64_t (**)(__int128 *))(v1 + 16);
  v3 = *((_QWORD *)a1 + 2);
  v4 = *((_BYTE *)a1 + 24);
  v6 = *a1;
  v7 = v3;
  v8 = v4;
  return v2(&v6);
}

uint64_t sub_1A4513E88()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_1A4513EC0(*(void **)(v0 + 40), *(id *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocObject();
}

void sub_1A4513EC0(void *a1, id a2, char a3)
{
  if (a3 == 1)
  {

  }
  else if (!a3)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A4513EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(__int128 *);
  char v3;
  __int128 v5;
  char v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(uint64_t (**)(__int128 *))(v0 + 24);
  v3 = *(_BYTE *)(v0 + 56);
  v5 = *(_OWORD *)(v0 + 40);
  v6 = v3;
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(v1 + 16));
  return v2(&v5);
}

id sub_1A4513F34(id result, id a2, char a3)
{
  if (a3 != -1)
    return sub_1A4513F48(result, a2, a3);
  return result;
}

id sub_1A4513F48(id result, id a2, char a3)
{
  if (a3 == 1)
    return result;
  if (!a3)
    return (id)swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1A4513F68(__int128 *a1)
{
  uint64_t v1;
  uint64_t (*v2)(__int128 *);
  char v3;
  __int128 v5;
  char v6;

  v2 = *(uint64_t (**)(__int128 *))(v1 + 16);
  v3 = *((_BYTE *)a1 + 16);
  v5 = *a1;
  v6 = v3;
  return v2(&v5);
}

uint64_t sub_1A4513FA4()
{
  return objectdestroy_8Tm((void (*)(_QWORD, _QWORD))sub_1A45140DC);
}

uint64_t sub_1A4513FB0()
{
  return objectdestroy_8Tm((void (*)(_QWORD, _QWORD))sub_1A4514000);
}

uint64_t objectdestroy_8Tm(void (*a1)(_QWORD, _QWORD))
{
  uint64_t v1;

  swift_release();
  swift_release();
  a1(*(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));
  return swift_deallocObject();
}

void sub_1A4514000(id a1, char a2)
{
  if (a2 == 1)

}

uint64_t sub_1A4514014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  char v3;
  uint64_t v5;
  char v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(uint64_t (**)(uint64_t *))(v0 + 24);
  v3 = *(_BYTE *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = v3;
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(v1 + 16));
  return v2(&v5);
}

id sub_1A4514064(id result, char a2)
{
  if (a2 != -1)
    return sub_1A4514078(result, a2);
  return result;
}

id sub_1A4514078(id result, char a2)
{
  if (a2 == 1)
    return result;
  return result;
}

uint64_t sub_1A451408C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  char v3;
  uint64_t v5;
  char v6;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v3 = *((_BYTE *)a1 + 8);
  v5 = *a1;
  v6 = v3;
  return v2(&v5);
}

void REMSmartList.NonCustom.init(smartListType:)(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  char v52;
  id v53;

  v4 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v6 = v5;
  if (v4 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  v9 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
LABEL_15:

    v20 = 0;
    goto LABEL_16;
  }
  v10 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v12 = v11;
  if (v10 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      v16 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v18 = v17;
      if (v16 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v18 == v19)
      {
        swift_bridgeObjectRelease_n();
LABEL_20:

        v20 = 2;
        goto LABEL_16;
      }
      v21 = sub_1A4691A40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) != 0)
        goto LABEL_20;
      v22 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v24 = v23;
      if (v22 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v24 == v25)
      {
        swift_bridgeObjectRelease_n();
LABEL_25:

        v20 = 3;
        goto LABEL_16;
      }
      v26 = sub_1A4691A40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v26 & 1) != 0)
        goto LABEL_25;
      v27 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v29 = v28;
      if (v27 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v29 == v30)
      {
        swift_bridgeObjectRelease_n();
LABEL_30:

        v20 = 4;
        goto LABEL_16;
      }
      v31 = sub_1A4691A40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v31 & 1) != 0)
        goto LABEL_30;
      v32 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v34 = v33;
      if (v32 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v34 == v35)
      {
        swift_bridgeObjectRelease_n();
LABEL_35:

        v20 = 5;
        goto LABEL_16;
      }
      v36 = sub_1A4691A40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v36 & 1) != 0)
        goto LABEL_35;
      v37 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v39 = v38;
      if (v37 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v39 == v40)
      {
        swift_bridgeObjectRelease_n();
LABEL_40:

        v20 = 6;
        goto LABEL_16;
      }
      v41 = sub_1A4691A40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v41 & 1) != 0)
        goto LABEL_40;
      v42 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v44 = v43;
      if (v42 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v44 == v45)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v46 = sub_1A4691A40();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v46 & 1) == 0)
        {
          v47 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          v49 = v48;
          if (v47 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v49 == v50)
          {
            v51 = a1;

            swift_bridgeObjectRelease_n();
            v20 = 7;
            goto LABEL_16;
          }
          v52 = sub_1A4691A40();
          v53 = a1;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v52 & 1) != 0)
          {
            v20 = 7;
            goto LABEL_16;
          }
          goto LABEL_46;
        }
      }

LABEL_46:
      v20 = 8;
      goto LABEL_16;
    }
  }

  v20 = 1;
LABEL_16:
  *a2 = v20;
}

id REMSmartList.NonCustom.smartListType.getter()
{
  char *v0;

  return **((id **)&unk_1E4C1C3E8 + *v0);
}

void REMSmartList.NonCustom.remObjectID.getter()
{
  uint64_t v1;
  uint64_t v2;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1A46900FC();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

id sub_1A4514668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  sub_1A46900C0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v0) == 1)
  {
    __break(1u);
    JUMPOUT(0x1A451477CLL);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v1, v0);
  v4 = (void *)objc_opt_self();
  v5 = (void *)sub_1A46900D8();
  v6 = objc_msgSend(v4, sel_objectIDWithUUID_, v5);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v0);
  return v6;
}

BOOL static REMSmartList.NonCustom.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t REMSmartList.NonCustom.hash(into:)()
{
  return sub_1A4691C98();
}

void *static REMSmartList.NonCustom.allCases.getter()
{
  return &unk_1E4C0FDB8;
}

uint64_t REMSmartList.NonCustom.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

void sub_1A4514828(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FDB8;
}

unint64_t sub_1A451483C()
{
  unint64_t result;

  result = qword_1EE71F6F8;
  if (!qword_1EE71F6F8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSmartList.NonCustom, &type metadata for REMSmartList.NonCustom);
    atomic_store(result, (unint64_t *)&qword_1EE71F6F8);
  }
  return result;
}

unint64_t sub_1A4514884()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE71F700;
  if (!qword_1EE71F700)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71F708);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE71F700);
  }
  return result;
}

uint64_t _s9NonCustomOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s9NonCustomOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1A45149AC + 4 * byte_1A469DC45[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1A45149E0 + 4 * asc_1A469DC40[v4]))();
}

uint64_t sub_1A45149E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45149E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45149F0);
  return result;
}

uint64_t sub_1A45149FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4514A04);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1A4514A08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4514A10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSmartList.NonCustom()
{
  return &type metadata for REMSmartList.NonCustom;
}

uint64_t sub_1A4514A2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BYTE v12[32];
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1A469153C();
    for (i = a1 + 32; ; i += 32)
    {
      sub_1A44311F0(i, (uint64_t)v12);
      sub_1A44311F0((uint64_t)v12, (uint64_t)&v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
      v6 = swift_dynamicCast();
      v7 = v6;
      if (!v6)
      {
        sub_1A44311F0((uint64_t)v12, (uint64_t)&v10);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EAC0);
        if ((swift_dynamicCast() & 1) == 0)
          break;
      }
      sub_1A44C1A00();
      v10 = v9;
      v11 = v7 ^ 1;
      static REMMembership.fromJSON(_:)(&v10);
      swift_bridgeObjectRelease();
      if (v1)
        goto LABEL_9;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      sub_1A4691518();
      sub_1A4691548();
      sub_1A4691554();
      sub_1A4691524();
      if (!--v3)
        return v13;
    }
    sub_1A4473FBC();
    swift_allocError();
    *(_QWORD *)v8 = 0;
    *(_QWORD *)(v8 + 8) = 0;
    *(_BYTE *)(v8 + 16) = 3;
    swift_willThrow();
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return swift_release();
  }
  return result;
}

void sub_1A4514BEC(unint64_t a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 >> 62)
    goto LABEL_21;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v6 = MEMORY[0x1E0DEE9D8];
    if (!v5)
    {
LABEL_19:
      *(_QWORD *)a2 = v6;
      *(_BYTE *)(a2 + 8) = 1;
      return;
    }
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1A445A92C(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0)
      break;
    v13 = a2;
    v7 = 0;
    v6 = v18;
    while (v5 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1A859ECE0](v7, a1);
      else
        v8 = *(id *)(a1 + 8 * v7 + 32);
      v9 = v8;
      REMMembership.toJSON()(&v14);
      if (v2)
      {
        swift_release();

        return;
      }
      v10 = v14;
      if (v15)
        v11 = &qword_1ED23EAC0;
      else
        v11 = &qword_1EE71E180;
      v17 = __swift_instantiateConcreteTypeFromMangledName(v11);

      *(_QWORD *)&v16 = v10;
      v18 = v6;
      a2 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v6 + 24);
      if (a2 >= v12 >> 1)
      {
        sub_1A445A92C(v12 > 1, a2 + 1, 1);
        v6 = v18;
      }
      ++v7;
      *(_QWORD *)(v6 + 16) = a2 + 1;
      sub_1A444A940(&v16, (_OWORD *)(v6 + 32 * a2 + 32));
      if (v5 == v7)
      {
        a2 = v13;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    v5 = sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  __break(1u);
}

unint64_t REMMemberships.toJSON()@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  char *v35;
  void *v36;
  void (*v37)(char *, uint64_t);
  id v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t inited;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 v70;
  unint64_t v71;

  v3 = v2;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71F710);
  v5 = MEMORY[0x1E0C80A78](v64);
  v63 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v62 = (char *)&v52 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v61 = (char *)&v52 - v10;
  MEMORY[0x1E0C80A78](v9);
  v60 = (char *)&v52 - v11;
  v12 = objc_msgSend(v1, sel_membershipByMemberIdentifier);
  v13 = sub_1A46900FC();
  sub_1A44C1A00();
  sub_1A44C1A3C();
  v59 = v13;
  v14 = sub_1A4690708();

  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v53 = v2;
    v54 = a1;
    v71 = MEMORY[0x1E0DEE9D8];
    sub_1A469153C();
    result = sub_1A45156AC(v14);
    v18 = result;
    v19 = 0;
    v20 = v14 + 64;
    v21 = *(_BYTE *)(v14 + 32);
    v55 = v14 + 80;
    v68 = v14;
    v56 = v15;
    v57 = v17;
    v58 = v14 + 64;
    v22 = (uint64_t)v62;
    while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << v21)
    {
      v24 = (unint64_t)v18 >> 6;
      if ((*(_QWORD *)(v20 + 8 * ((unint64_t)v18 >> 6)) & (1 << v18)) == 0)
        goto LABEL_28;
      if (*(_DWORD *)(v14 + 36) != (_DWORD)v17)
        goto LABEL_29;
      v66 = 1 << v18;
      v65 = v19;
      v25 = v64;
      v26 = *(int *)(v64 + 48);
      v27 = *(_QWORD *)(v14 + 48);
      v28 = v59;
      v67 = *(_QWORD **)(v59 - 8);
      v29 = (void (*)(char *, uint64_t, uint64_t))v67[2];
      v30 = (uint64_t)v60;
      v29(v60, v27 + v67[9] * v18, v59);
      v31 = *(void **)(*(_QWORD *)(v68 + 56) + 8 * v18);
      *(_QWORD *)(v30 + v26) = v31;
      v32 = (uint64_t)v61;
      v29(v61, v30, v28);
      *(_QWORD *)(v32 + *(int *)(v25 + 48)) = v31;
      sub_1A4515620(v32, v22);
      v33 = v31;
      sub_1A4515668(v30);
      v34 = *(int *)(v25 + 48);
      v35 = v63;
      v29(v63, v22, v28);
      v36 = *(void **)(v22 + v34);
      *(_QWORD *)&v35[v34] = v36;
      v37 = (void (*)(char *, uint64_t))v67[1];
      v38 = v36;
      v39 = v28;
      v14 = v68;
      v37(v35, v39);
      sub_1A4515668(v22);
      sub_1A4691518();
      sub_1A4691548();
      sub_1A4691554();
      result = sub_1A4691524();
      v21 = *(_BYTE *)(v14 + 32);
      v23 = 1 << v21;
      if (v18 >= 1 << v21)
        goto LABEL_30;
      v20 = v58;
      v40 = *(_QWORD *)(v58 + 8 * v24);
      if ((v40 & v66) == 0)
        goto LABEL_31;
      LODWORD(v17) = v57;
      if (*(_DWORD *)(v14 + 36) != (_DWORD)v57)
        goto LABEL_32;
      v41 = v40 & (-2 << (v18 & 0x3F));
      if (v41)
      {
        v23 = __clz(__rbit64(v41)) | v18 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v42 = v24 + 1;
        v43 = (v23 + 63) >> 6;
        if (v24 + 1 < v43)
        {
          v44 = *(_QWORD *)(v58 + 8 * v42);
          if (v44)
          {
LABEL_18:
            v23 = __clz(__rbit64(v44)) + (v42 << 6);
          }
          else
          {
            while (v43 - 2 != v24)
            {
              v44 = *(_QWORD *)(v55 + 8 * v24++);
              if (v44)
              {
                v42 = v24 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      v19 = v65 + 1;
      v18 = v23;
      if (v65 + 1 == v56)
      {
        v45 = v71;
        swift_bridgeObjectRelease();
        a1 = v54;
        v3 = v53;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v45 = MEMORY[0x1E0DEE9D8];
LABEL_21:
    sub_1A4514BEC(v45, (unint64_t)&v69);
    result = swift_bridgeObjectRelease();
    if (!v3)
    {
      v46 = v69;
      v47 = v70;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1A4696430;
      *(_QWORD *)(inited + 32) = 0x68737265626D656DLL;
      *(_QWORD *)(inited + 40) = 0xEB00000000737069;
      if (v47)
        v49 = &qword_1ED23EAC0;
      else
        v49 = &qword_1EE71E180;
      v50 = __swift_instantiateConcreteTypeFromMangledName(v49);
      *(_QWORD *)(inited + 48) = v46;
      *(_QWORD *)(inited + 72) = v50;
      *(_QWORD *)(inited + 80) = 0xD000000000000017;
      v51 = *MEMORY[0x1E0D84B48];
      *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(inited + 88) = 0x80000001A46BEC10;
      *(_QWORD *)(inited + 96) = v51;
      result = sub_1A443CDB8(inited);
      *(_QWORD *)a1 = result;
      *(_BYTE *)(a1 + 8) = 0;
    }
  }
  return result;
}

_QWORD *static REMMemberships.fromJSON(_:)(_BYTE *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[2];
  _OWORD v18[2];
  _OWORD v19[2];

  if ((a1[8] & 1) == 0)
  {
    v1 = *(_QWORD **)a1;
    if (!*(_QWORD *)(*(_QWORD *)a1 + 16)
      || (v5 = sub_1A443E4C8(0xD000000000000017, 0x80000001A46BEC10), (v6 & 1) == 0))
    {
      sub_1A4473FBC();
      swift_allocError();
      *(_QWORD *)v3 = 0xD000000000000017;
      *(_QWORD *)(v3 + 8) = 0x80000001A46BEC10;
      v4 = 1;
      goto LABEL_9;
    }
    sub_1A44311F0(v1[7] + 32 * v5, (uint64_t)v18);
    sub_1A444A940(v18, v19);
    sub_1A44311F0((uint64_t)v19, (uint64_t)v18);
    if (swift_dynamicCast())
    {
      if ((rem_isUnsupportedVersionByRuntime() & 1) != 0)
      {
        sub_1A4473FBC();
        swift_allocError();
        *(_QWORD *)v7 = *(_QWORD *)&v17[0];
        *(_QWORD *)(v7 + 8) = 0;
        *(_BYTE *)(v7 + 16) = 0;
LABEL_19:
        swift_willThrow();
        goto LABEL_20;
      }
      if (v1[2])
      {
        v11 = sub_1A443E4C8(0x68737265626D656DLL, 0xEB00000000737069);
        if ((v12 & 1) != 0)
        {
          sub_1A44311F0(v1[7] + 32 * v11, (uint64_t)v17);
          sub_1A444A940(v17, v18);
          sub_1A44311F0((uint64_t)v18, (uint64_t)v17);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EAC0);
          if (swift_dynamicCast())
          {
            v1 = (_QWORD *)sub_1A4514A2C(v16);
            swift_bridgeObjectRelease();
            if (!v2)
            {
              v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
              sub_1A44C1A00();
              v14 = (void *)sub_1A4690B94();
              swift_bridgeObjectRelease();
              v1 = objc_msgSend(v13, sel_initWithMemberships_, v14);

              __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
              return v1;
            }
          }
          else
          {
            sub_1A4473FBC();
            swift_allocError();
            *(_OWORD *)v15 = xmmword_1A469DD20;
            *(_BYTE *)(v15 + 16) = 2;
            swift_willThrow();
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
LABEL_20:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
          return v1;
        }
      }
      sub_1A4473FBC();
      swift_allocError();
      *(_OWORD *)v9 = xmmword_1A469DD20;
      v10 = 1;
    }
    else
    {
      sub_1A4473FBC();
      swift_allocError();
      *(_QWORD *)v9 = 0xD000000000000017;
      *(_QWORD *)(v9 + 8) = 0x80000001A46BEC10;
      v10 = 2;
    }
    *(_BYTE *)(v9 + 16) = v10;
    goto LABEL_19;
  }
  sub_1A4473FBC();
  swift_allocError();
  *(_QWORD *)v3 = 0;
  *(_QWORD *)(v3 + 8) = 0;
  v4 = 3;
LABEL_9:
  *(_BYTE *)(v3 + 16) = v4;
  swift_willThrow();
  return v1;
}

unint64_t sub_1A45155D8@<X0>(uint64_t a1@<X8>)
{
  return REMMemberships.toJSON()(a1);
}

_QWORD *sub_1A45155F8@<X0>(_BYTE *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = static REMMemberships.fromJSON(_:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A4515620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71F710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A4515668(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71F710);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A45156AC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t static REMPaths.mlModelURL()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v0 = sub_1A468FE8C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A468FF7C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A451586C();
  v9[0] = 0x736C65646F4D4C4DLL;
  v9[1] = 0xE90000000000002FLL;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAFD60], v0);
  sub_1A4466118();
  sub_1A468FF70();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1A451586C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  Swift::Bool v4;
  void *ObjCClassFromMetadata;
  char **v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  char v11;

  v0 = sub_1A468FF7C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 3;
  v10 = 0;
  v4 = REMFeatureFlags.isEnabled(on:)((ReminderKitInternal::REMFeatureFlags::Platforms)&v10);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v6 = &selRef_dataSeparationEnabled_applicationDocumentsURL;
  if (!v4)
    v6 = &selRef_legacy_centralizedDataPath;
  v7 = objc_msgSend(ObjCClassFromMetadata, *v6);
  sub_1A468FF1C();

  v8 = (void *)sub_1A468FED4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = objc_msgSend(v8, sel_rem_URLByAppendingReminderDataContainerPathComponent);
  sub_1A468FF1C();

}

id sub_1A4515980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  void *v12;
  _QWORD v14[2];

  v0 = sub_1A468FE8C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A468FF7C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v14 - v9;
  swift_getObjCClassMetadata();
  sub_1A451586C();
  v14[0] = 0x736C65646F4D4C4DLL;
  v14[1] = 0xE90000000000002FLL;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAFD60], v0);
  sub_1A4466118();
  sub_1A468FF70();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v8, v4);
  v12 = (void *)sub_1A468FED4();
  v11(v10, v4);
  return v12;
}

id static REMPaths.writableURLForMLModel()@<X0>(uint64_t a1@<X8>)
{
  return sub_1A4515BBC((void *)0x736C65646F4D4C4DLL, (void *)0xE90000000000002FLL, a1);
}

id static REMPaths.temporaryURLForMLModel()@<X0>(uint64_t a1@<X8>)
{
  return sub_1A4515BBC((void *)0xD000000000000012, (void *)0x80000001A46BF580, a1);
}

id sub_1A4515BBC@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t);
  id v16;
  void *v17;
  id v18;
  id v20;
  uint64_t v21;
  void *v22;
  id v23[3];

  v22 = a2;
  v21 = a3;
  v23[2] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1A468FE8C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A468FF7C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - v13;
  sub_1A451586C();
  v23[0] = a1;
  v23[1] = v22;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CAFD60], v4);
  sub_1A4466118();
  sub_1A468FF70();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  v16 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v17 = (void *)sub_1A468FED4();
  v23[0] = 0;
  LOBYTE(v4) = objc_msgSend(v16, sel_rem_createDirectoryIfNecessaryAtURL_error_, v17, v23);

  v18 = v23[0];
  if ((v4 & 1) != 0)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v21, v14, v8);
    return v18;
  }
  else
  {
    v20 = v23[0];
    sub_1A468FE68();

    swift_willThrow();
    return (id)((uint64_t (*)(char *, uint64_t))v15)(v14, v8);
  }
}

id static REMPaths._legacy_mlModelURL()()
{
  return sub_1A4515E2C(0x736C65646F4D4C4DLL, 0xE90000000000002FLL);
}

id sub_1A4515E04(uint64_t a1, uint64_t a2)
{
  return sub_1A4515FB8(a1, a2, (void (*)(void))static REMPaths._legacy_mlModelURL());
}

id static REMPaths._legacy_temporaryMLModelURL()()
{
  return sub_1A4515E2C(0xD000000000000012, 0x80000001A46BF580);
}

id sub_1A4515E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id result;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = a2;
  v3 = sub_1A468FE8C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A468FF7C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_legacy_centralizedDataPath);
  if (result)
  {
    v12 = result;
    v13 = objc_msgSend(result, sel_rem_URLByAppendingReminderDataContainerPathComponent);
    sub_1A468FF1C();

    v16 = a1;
    v17 = v15;
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CAFD60], v3);
    sub_1A4466118();
    sub_1A468FF70();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRelease();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1A4515FAC(uint64_t a1, uint64_t a2)
{
  return sub_1A4515FB8(a1, a2, (void (*)(void))static REMPaths._legacy_temporaryMLModelURL());
}

id sub_1A4515FB8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v10;

  v4 = sub_1A468FF7C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjCClassMetadata();
  a3();
  v8 = (void *)sub_1A468FED4();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t KMeans.__allocating_init(k:pointCloud:maxIter:tolerance:randomGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  KMeans.init(k:pointCloud:maxIter:tolerance:randomGenerator:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t sub_1A45160D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE71F718);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE71F718);
  if (qword_1ED2427D8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256848);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t KMeans.TrainingMetrics.clusterVariances.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t KMeans.TrainingMetrics.clusterSizes.getter()
{
  return swift_bridgeObjectRetain();
}

double KMeans.TrainingMetrics.mse.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t sub_1A451617C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[8];
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71F820);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A451D12C();
  sub_1A4691D40();
  v11 = a2;
  v10[7] = 0;
  type metadata accessor for RDVector();
  sub_1A451D170(&qword_1EE71F828, (uint64_t)&protocol conformance descriptor for RDVector);
  sub_1A4691890();
  if (!v2)
  {
    v10[6] = 1;
    sub_1A469186C();
    v10[5] = 2;
    sub_1A4691878();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A45162FC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65636E6169726176;
  if (*v0 != 1)
    v1 = 1702521203;
  if (*v0)
    return v1;
  else
    return 0x7265746E6563;
}

uint64_t sub_1A451634C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A451D4AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A4516370()
{
  sub_1A451D12C();
  return sub_1A4691DB8();
}

uint64_t sub_1A4516398()
{
  sub_1A451D12C();
  return sub_1A4691DC4();
}

void sub_1A45163C0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;

  v6 = sub_1A451CF3C(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v4;
    *(double *)(a2 + 8) = v6;
    *(_QWORD *)(a2 + 16) = v5;
  }
}

uint64_t sub_1A45163F0(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A451617C(a1, *v1);
}

uint64_t KMeans.metrics.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  swift_beginAccess();
  v3 = v1[14];
  v4 = v1[15];
  *a1 = v1[13];
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

_QWORD *KMeans.init(k:pointCloud:maxIter:tolerance:randomGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v11;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  double v18;
  uint64_t v19;
  uint64_t v21;

  v7 = v5;
  v11 = MEMORY[0x1E0DEE9D8];
  v5[12] = MEMORY[0x1E0DEE9D8];
  v5[13] = v11;
  v5[14] = v11;
  v5[15] = 0;
  if (a1 < 1)
  {
    v16 = (void *)objc_opt_self();
    sub_1A4691410();
    sub_1A4690984();
    v21 = a1;
    sub_1A46918D8();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    v17 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_invalidParameterErrorWithDescription_, v17, v21);

    goto LABEL_5;
  }
  swift_beginAccess();
  if (*(_QWORD *)(a2 + 40) < a1)
  {
    v14 = (void *)objc_opt_self();
    v15 = (void *)sub_1A469087C();
    objc_msgSend(v14, sel_invalidParameterErrorWithDescription_, v15);

LABEL_5:
    swift_willThrow();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return v7;
  }
  v7[2] = a1;
  *((_BYTE *)v7 + 24) = *(_BYTE *)(a2 + 57);
  sub_1A443E484(a4, (uint64_t)(v7 + 7));
  v7[4] = a2;
  *((double *)v7 + 5) = a5;
  v7[6] = a3;
  swift_beginAccess();
  v18 = *(double *)(a2 + 32) * a5;
  v19 = swift_retain();
  KMeans.trainCenters(_:_:convergeDistance:)(v19, a3, v18);
  swift_release();
  if (v6)
    swift_release();
  __swift_destroy_boxed_opaque_existential_1(a4);
  return v7;
}

uint64_t KMeans.trainCenters(_:_:convergeDistance:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t inited;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  double v44;
  double v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  double v61;
  double v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  float64x2_t *v113;
  float64x2_t *v114;
  float64x2_t v115;
  float64x2_t v116;
  float64x2_t v117;
  float64x2_t v118;
  uint64_t v119;
  unint64_t v120;
  float64x2_t *v121;
  float64x2_t *v122;
  float64x2_t v123;
  float64x2_t v124;
  float64x2_t v125;
  float64x2_t v126;
  float64x2_t v127;
  float64x2_t v128;
  float64x2_t v129;
  float64x2_t v130;
  double v131;
  double v132;
  double v133;
  double v134;
  uint64_t v135;
  unint64_t v136;
  float64x2_t *v137;
  float64x2_t *v138;
  float64x2_t v139;
  float64x2_t v140;
  float64x2_t v141;
  float64x2_t v142;
  float64x2_t v143;
  float64x2_t v144;
  float64x2_t v145;
  float64x2_t v146;
  double v147;
  double v148;
  double v149;
  double v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  _QWORD *v168;
  unint64_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  uint64_t v173;
  NSObject *v174;
  os_log_type_t v175;
  uint8_t *v176;
  uint64_t v177;
  double *v178;
  unint64_t v179;
  double v180;
  double v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  int64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t *v193;
  int64_t v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t *v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  double v211;
  double *v212;
  uint64_t v213;
  uint64_t v214;
  double *v215;
  double v216;
  double v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unint64_t v222;
  unint64_t v223;
  uint64_t v224;
  unint64_t v225;
  uint64_t v227;
  unint64_t v228;
  unint64_t v229;
  int v230;
  unint64_t v231;
  unint64_t *v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t *v237;
  uint64_t v238;
  unint64_t v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244[3];
  unsigned __int8 v245[24];

  v5 = v4;
  v233 = *(_QWORD *)(v3 + 16);
  if (v233 == 1)
  {
    swift_beginAccess();
    v8 = *(_QWORD *)(a1 + 24);
    if (v8)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D070);
      v9 = a1;
      v10 = (_QWORD *)v3;
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1A4695C10;
      swift_beginAccess();
      v12 = *(_QWORD *)(v9 + 32);
      swift_beginAccess();
      v13 = *(_QWORD *)(v9 + 40);
      *(_QWORD *)(v11 + 32) = v8;
      *(_QWORD *)(v11 + 40) = v12;
      *(_QWORD *)(v11 + 48) = v13;
      v10[12] = v11;
      swift_retain_n();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C898);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1A4695C10;
      *(_QWORD *)(v14 + 32) = *(_QWORD *)(v9 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243008);
      v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1A4695C10;
      *(_QWORD *)(v15 + 32) = *(_QWORD *)(v9 + 40);
      swift_release();
      v16 = *(_QWORD *)(v9 + 32);
      swift_beginAccess();
      v10[13] = v14;
      v10[14] = v15;
      v10[15] = v16;
LABEL_5:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  swift_beginAccess();
  v17 = v3;
  swift_beginAccess();
  v18 = swift_bridgeObjectRetain();
  v19 = sub_1A451A53C(v18, v233, v3 + 56);
  swift_endAccess();
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(a1 + 16);
  v21 = *(unsigned __int8 *)(v3 + 24);
  v245[0] = *(_BYTE *)(v3 + 24);
  swift_bridgeObjectRetain();
  v22 = sub_1A4517D88(v19, v20, v245, 1);
  if (v4)
    goto LABEL_5;
  v24 = v22;
  v231 = v19;
  v232 = (unint64_t *)(a1 + 16);
  v230 = v21;
  v219 = v17;
  isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
  if (v233 < 0)
  {
LABEL_246:
    __break(1u);
LABEL_247:
    __break(1u);
LABEL_248:
    __break(1u);
    goto LABEL_249;
  }
  v26 = 0;
  v27 = MEMORY[0x1E0DEE9D8];
  v218 = a1;
  isUniquelyReferenced_nonNull_native = v24;
  do
  {
    v220 = v26;
    v244[0] = v27;
    v223 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
    if (!v223)
    {
      v19 = v27;
      v29 = v232;
      goto LABEL_45;
    }
    v224 = isUniquelyReferenced_nonNull_native + 32;
    v221 = isUniquelyReferenced_nonNull_native;
    swift_bridgeObjectRetain();
    v28 = 0;
    v29 = v232;
    do
    {
      v227 = v28;
      v30 = *(_QWORD *)(v224 + 16 * v28);
      v31 = v30 >> 62;
      v235 = v30;
      if (v30 >> 62)
      {
        swift_bridgeObjectRetain_n();
        v29 = v232;
        isUniquelyReferenced_nonNull_native = sub_1A46916A4();
        v32 = isUniquelyReferenced_nonNull_native;
        if (!isUniquelyReferenced_nonNull_native)
        {
LABEL_10:
          swift_bridgeObjectRelease_n();
          goto LABEL_11;
        }
      }
      else
      {
        v32 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
        isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain_n();
        if (!v32)
          goto LABEL_10;
      }
      v222 = v31;
      if ((v235 & 0xC000000000000001) != 0)
      {
        v33 = MEMORY[0x1A859ECE0](0, v235);
      }
      else
      {
        if (!*(_QWORD *)((v235 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_243;
        v33 = *(_QWORD *)(v235 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v34 = *(_QWORD *)(v33 + 24);
      type metadata accessor for RDVector();
      inited = swift_initStackObject();
      *(_QWORD *)(inited + 24) = v34;
      v36 = v34;
      v37 = inited;
      isUniquelyReferenced_nonNull_native = sub_1A44A6400(v36, 0.0);
      *(_QWORD *)(v37 + 16) = isUniquelyReferenced_nonNull_native;
      if (v32 < 1)
      {
LABEL_244:
        __break(1u);
LABEL_245:
        __break(1u);
        goto LABEL_246;
      }
      v228 = v5;
      swift_bridgeObjectRetain();
      swift_retain();
      v38 = 0;
      v236 = v32;
      do
      {
        if ((v235 & 0xC000000000000001) != 0)
        {
          v40 = MEMORY[0x1A859ECE0](v38, v235);
        }
        else
        {
          v40 = *(_QWORD *)(v235 + 32 + 8 * v38);
          swift_retain();
        }
        swift_beginAccess();
        v41 = *(_QWORD *)(v37 + 24);
        if (v41 < 0)
          goto LABEL_160;
        v242 = v40;
        if (v41)
        {
          v42 = v37 + 16;
          v5 = v40 + 16;
          swift_beginAccess();
          swift_beginAccess();
          v43 = 0;
          v19 = MEMORY[0x1E0DEE9D8];
          do
          {
            if (v43 >= *(_QWORD *)(*(_QWORD *)v42 + 16))
            {
              __break(1u);
LABEL_157:
              __break(1u);
              goto LABEL_158;
            }
            if (v43 >= *(_QWORD *)(*(_QWORD *)v5 + 16))
              goto LABEL_157;
            v44 = *(double *)(*(_QWORD *)v42 + 8 * v43 + 32);
            v45 = *(double *)(*(_QWORD *)v5 + 8 * v43 + 32);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v19 = (unint64_t)sub_1A4438D64(0, *(_QWORD *)(v19 + 16) + 1, 1, (_QWORD *)v19);
            v47 = *(_QWORD *)(v19 + 16);
            v46 = *(_QWORD *)(v19 + 24);
            if (v47 >= v46 >> 1)
              v19 = (unint64_t)sub_1A4438D64((_QWORD *)(v46 > 1), v47 + 1, 1, (_QWORD *)v19);
            ++v43;
            *(_QWORD *)(v19 + 16) = v47 + 1;
            *(double *)(v19 + 8 * v47 + 32) = v44 + v45;
          }
          while (v41 != v43);
        }
        else
        {
          v19 = MEMORY[0x1E0DEE9D8];
        }
        ++v38;
        v5 = swift_allocObject();
        *(_QWORD *)(v5 + 16) = v19;
        v39 = *(_QWORD *)(v19 + 16);
        swift_release();
        *(_QWORD *)(v5 + 24) = v39;
        swift_release();
        v37 = v5;
      }
      while (v38 != v236);
      swift_release();
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_bridgeObjectRelease();
      if (v222)
      {
        swift_bridgeObjectRetain();
        v48 = sub_1A46916A4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v48 = *(_QWORD *)((v235 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      / infix(_:_:)(v5, (double)v48);
      swift_bridgeObjectRelease();
      v49 = swift_release();
      MEMORY[0x1A859E3E0](v49);
      if (*(_QWORD *)((v244[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v244[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1A4690BDC();
      sub_1A4690C18();
      sub_1A4690BB8();
      v5 = v228;
      v29 = v232;
LABEL_11:
      v28 = v227 + 1;
    }
    while (v227 + 1 != v223);
    swift_bridgeObjectRelease();
    v19 = v244[0];
LABEL_45:
    isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
    v50 = v233;
    v223 = v19;
    if (v233)
    {
      v51 = 0;
      v52 = v231;
      v239 = v19 & 0xC000000000000001;
      v234 = v19 & 0xFFFFFFFFFFFFFF8;
      v53 = 0.0;
      v225 = v19 + 32;
      while (1)
      {
        if (v51 == v50)
        {
          __break(1u);
LABEL_238:
          __break(1u);
LABEL_239:
          __break(1u);
LABEL_240:
          __break(1u);
LABEL_241:
          __break(1u);
LABEL_242:
          __break(1u);
LABEL_243:
          __break(1u);
          goto LABEL_244;
        }
        if ((v231 & 0xC000000000000001) != 0)
        {
          isUniquelyReferenced_nonNull_native = MEMORY[0x1A859ECE0](v51, v52);
          v56 = isUniquelyReferenced_nonNull_native;
          v57 = v230;
          if (v239)
            goto LABEL_53;
        }
        else
        {
          v57 = v230;
          if (v51 >= *(_QWORD *)((v231 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_238;
          v56 = *(_QWORD *)(v231 + 32 + 8 * v51);
          isUniquelyReferenced_nonNull_native = swift_retain();
          if (v239)
          {
LABEL_53:
            v242 = MEMORY[0x1A859ECE0](v51, v19);
            if (!v57)
              goto LABEL_70;
            goto LABEL_54;
          }
        }
        if (v51 >= *(_QWORD *)(v234 + 16))
          goto LABEL_239;
        v242 = *(_QWORD *)(v225 + 8 * v51);
        swift_retain();
        if (!v57)
        {
LABEL_70:
          isUniquelyReferenced_nonNull_native = swift_beginAccess();
          v65 = *(_QWORD *)(v56 + 24);
          if (v65 < 0)
            goto LABEL_242;
          if (v65)
          {
            v66 = v242 + 16;
            swift_beginAccess();
            swift_beginAccess();
            v67 = *(_QWORD *)(v56 + 16);
            v68 = *(_QWORD *)(v67 + 16);
            if (!v68)
              goto LABEL_162;
            v69 = *(_QWORD *)v66;
            v70 = *(_QWORD *)(*(_QWORD *)v66 + 16);
            if (!v70)
              goto LABEL_163;
            v71 = v67 + 32;
            v72 = v69 + 32;
            v73 = *(double *)(v67 + 32) - *(double *)(v69 + 32);
            v54 = v73 * v73;
            if (v65 != 1)
            {
              v74 = v70 - 1;
              if (v70 - 1 >= v68 - 1)
                v74 = v68 - 1;
              if (v74 >= v65 - 2)
                v74 = v65 - 2;
              v75 = v74 + 1;
              if (v75 > 4)
              {
                v111 = v75 & 3;
                if ((v75 & 3) == 0)
                  v111 = 4;
                v112 = v75 - v111;
                v76 = v112 + 1;
                v113 = (float64x2_t *)(v67 + 56);
                v114 = (float64x2_t *)(v69 + 56);
                do
                {
                  v115 = vsubq_f64(v113[-1], v114[-1]);
                  v116 = vsubq_f64(*v113, *v114);
                  v117 = vmulq_f64(v115, v115);
                  v118 = vmulq_f64(v116, v116);
                  v54 = v54 + v117.f64[0] + v117.f64[1] + v118.f64[0] + v118.f64[1];
                  v113 += 2;
                  v114 += 2;
                  v112 -= 4;
                }
                while (v112);
              }
              else
              {
                v76 = 1;
              }
              while (v68 != v76)
              {
                if (v76 >= v70)
                  goto LABEL_163;
                v54 = v54
                    + (*(double *)(v71 + 8 * v76) - *(double *)(v72 + 8 * v76))
                    * (*(double *)(v71 + 8 * v76) - *(double *)(v72 + 8 * v76));
                if (v65 == ++v76)
                  goto LABEL_48;
              }
              goto LABEL_162;
            }
          }
          else
          {
            v54 = 0.0;
          }
LABEL_48:
          swift_release();
          isUniquelyReferenced_nonNull_native = swift_release();
          v55 = sqrt(v54);
          goto LABEL_49;
        }
LABEL_54:
        if (v57 == 1)
        {
          isUniquelyReferenced_nonNull_native = swift_beginAccess();
          v19 = *(_QWORD *)(v56 + 24);
          if ((v19 & 0x8000000000000000) != 0)
            goto LABEL_241;
          v237 = (uint64_t *)(v56 + 24);
          v229 = v5;
          if (v19)
          {
            v58 = v56 + 16;
            v59 = v242 + 16;
            swift_beginAccess();
            swift_beginAccess();
            v5 = 0;
            v60 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            while (v5 < *(_QWORD *)(*(_QWORD *)v58 + 16))
            {
              if (v5 >= *(_QWORD *)(*(_QWORD *)v59 + 16))
                goto LABEL_159;
              v61 = *(double *)(*(_QWORD *)v58 + 8 * v5 + 32);
              v62 = *(double *)(*(_QWORD *)v59 + 8 * v5 + 32);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v60 = sub_1A4438D64(0, v60[2] + 1, 1, v60);
              v64 = v60[2];
              v63 = v60[3];
              if (v64 >= v63 >> 1)
                v60 = sub_1A4438D64((_QWORD *)(v63 > 1), v64 + 1, 1, v60);
              ++v5;
              v60[2] = v64 + 1;
              *(double *)&v60[v64 + 4] = v61 - v62;
              if (v19 == v5)
                goto LABEL_93;
            }
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
            goto LABEL_161;
          }
          v60 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_93:
          type metadata accessor for RDVector();
          isUniquelyReferenced_nonNull_native = swift_initStackObject();
          *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16) = v60;
          v93 = v60[2];
          *(_QWORD *)(isUniquelyReferenced_nonNull_native + 24) = v93;
          if (!v93)
          {
            swift_release();
            v5 = v229;
            v19 = v223;
            goto LABEL_109;
          }
          v94 = v60[4];
          v5 = v229;
          v19 = v223;
          if ((v94 & 0x7FF0000000000000) == 0 && (v94 & 0xFFFFFFFFFFFFFLL) == 0)
          {
            if (v93 == 1)
              goto LABEL_141;
            v151 = v60[5];
            if ((v151 & 0x7FF0000000000000) == 0 && (v151 & 0xFFFFFFFFFFFFFLL) == 0)
            {
              if (v93 != 2)
              {
                v152 = 6;
                while (1)
                {
                  v153 = v152 - 3;
                  if (__OFADD__(v152 - 4, 1))
                    break;
                  v154 = v60[v152];
                  if ((v154 & 0x7FF0000000000000) != 0 || (v154 & 0xFFFFFFFFFFFFFLL) != 0)
                    goto LABEL_96;
                  ++v152;
                  if (v153 == v93)
                    goto LABEL_141;
                }
LABEL_249:
                __break(1u);
LABEL_250:
                v238 = v19 & 0xFFFFFFFFFFFFFF8;
                v156 = isUniquelyReferenced_nonNull_native;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v241 = sub_1A46916A4();
                isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
                goto LABEL_171;
              }
LABEL_141:
              swift_release();
LABEL_109:
              swift_release();
              isUniquelyReferenced_nonNull_native = swift_release();
              v55 = 0.0;
              goto LABEL_49;
            }
          }
LABEL_96:
          isUniquelyReferenced_nonNull_native = swift_release();
          v95 = *v237;
          if (*v237 < 0)
            goto LABEL_245;
          if (v95)
          {
            v96 = v242 + 16;
            swift_beginAccess();
            swift_beginAccess();
            v97 = *(_QWORD *)(v56 + 16);
            v98 = *(_QWORD *)(v97 + 16);
            if (!v98)
              goto LABEL_165;
            v99 = *(_QWORD *)v96;
            v100 = *(_QWORD *)(*(_QWORD *)v96 + 16);
            if (!v100)
              goto LABEL_166;
            v101 = v97 + 32;
            v102 = v99 + 32;
            v103 = *(double *)(v99 + 32);
            v104 = *(double *)(v97 + 32);
            v105 = v104 * v104;
            v106 = v103 * v103;
            v107 = v104 * v103 + 0.0;
            if (v95 != 1)
            {
              v108 = v100 - 1;
              if (v100 - 1 >= v98 - 1)
                v108 = v98 - 1;
              if (v108 >= v95 - 2)
                v108 = v95 - 2;
              v109 = v108 + 1;
              if (v109 > 4)
              {
                v135 = v109 & 3;
                if ((v109 & 3) == 0)
                  v135 = 4;
                v136 = v109 - v135;
                v110 = v136 + 1;
                v137 = (float64x2_t *)(v97 + 56);
                v138 = (float64x2_t *)(v99 + 56);
                do
                {
                  v139 = v137[-1];
                  v140 = v138[-1];
                  v141 = vmulq_f64(v139, v139);
                  v142 = vmulq_f64(*v137, *v137);
                  v143 = vmulq_f64(v140, v140);
                  v144 = vmulq_f64(*v138, *v138);
                  v145 = vmulq_f64(v139, v140);
                  v146 = vmulq_f64(*v137, *v138);
                  v107 = v107 + v145.f64[0] + v145.f64[1] + v146.f64[0] + v146.f64[1];
                  v105 = v105 + v141.f64[0] + v141.f64[1] + v142.f64[0] + v142.f64[1];
                  v106 = v106 + v143.f64[0] + v143.f64[1] + v144.f64[0] + v144.f64[1];
                  v137 += 2;
                  v138 += 2;
                  v136 -= 4;
                }
                while (v136);
              }
              else
              {
                v110 = 1;
              }
              while (v98 != v110)
              {
                if (v110 >= v100)
                  goto LABEL_166;
                v147 = *(double *)(v101 + 8 * v110);
                v148 = *(double *)(v102 + 8 * v110);
                v105 = v105 + v147 * v147;
                v106 = v106 + v148 * v148;
                v107 = v107 + v147 * v148;
                if (v95 == ++v110)
                  goto LABEL_137;
              }
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              isUniquelyReferenced_nonNull_native = v221;
              goto LABEL_168;
            }
          }
          else
          {
            v107 = 0.0;
            v105 = 0.0;
            v106 = 0.0;
          }
LABEL_137:
          swift_release();
          isUniquelyReferenced_nonNull_native = swift_release();
          v149 = sqrt(v105) * sqrt(v106);
          v150 = 1.0 - v107 / v149;
          if ((*(_QWORD *)&v149 & 0x7FFFFFFFFFFFFFFFLL) == 0)
            v150 = 1.0;
          v55 = sqrt(fabs(v150));
        }
        else
        {
          isUniquelyReferenced_nonNull_native = swift_beginAccess();
          v77 = *(_QWORD *)(v56 + 24);
          if (v77 < 0)
            goto LABEL_240;
          if (v77)
          {
            v78 = v242 + 16;
            swift_beginAccess();
            swift_beginAccess();
            v79 = *(_QWORD *)(v56 + 16);
            v80 = *(_QWORD *)(v79 + 16);
            if (!v80)
              goto LABEL_161;
            v81 = *(_QWORD *)v78;
            v82 = *(_QWORD *)(*(_QWORD *)v78 + 16);
            if (!v82)
              goto LABEL_164;
            v83 = v79 + 32;
            v84 = v81 + 32;
            v85 = *(double *)(v81 + 32);
            v86 = *(double *)(v79 + 32);
            v87 = v86 * v86;
            v88 = v85 * v85;
            v89 = v86 * v85 + 0.0;
            if (v77 != 1)
            {
              v90 = v82 - 1;
              if (v82 - 1 >= v80 - 1)
                v90 = v80 - 1;
              if (v90 >= v77 - 2)
                v90 = v77 - 2;
              v91 = v90 + 1;
              if (v91 > 4)
              {
                v119 = v91 & 3;
                if ((v91 & 3) == 0)
                  v119 = 4;
                v120 = v91 - v119;
                v92 = v120 + 1;
                v121 = (float64x2_t *)(v79 + 56);
                v122 = (float64x2_t *)(v81 + 56);
                do
                {
                  v123 = v121[-1];
                  v124 = v122[-1];
                  v125 = vmulq_f64(v123, v123);
                  v126 = vmulq_f64(*v121, *v121);
                  v127 = vmulq_f64(v124, v124);
                  v128 = vmulq_f64(*v122, *v122);
                  v129 = vmulq_f64(v123, v124);
                  v130 = vmulq_f64(*v121, *v122);
                  v89 = v89 + v129.f64[0] + v129.f64[1] + v130.f64[0] + v130.f64[1];
                  v87 = v87 + v125.f64[0] + v125.f64[1] + v126.f64[0] + v126.f64[1];
                  v88 = v88 + v127.f64[0] + v127.f64[1] + v128.f64[0] + v128.f64[1];
                  v121 += 2;
                  v122 += 2;
                  v120 -= 4;
                }
                while (v120);
              }
              else
              {
                v92 = 1;
              }
              while (v80 != v92)
              {
                if (v92 >= v82)
                  goto LABEL_164;
                v131 = *(double *)(v83 + 8 * v92);
                v132 = *(double *)(v84 + 8 * v92);
                v87 = v87 + v131 * v131;
                v88 = v88 + v132 * v132;
                v89 = v89 + v131 * v132;
                if (v77 == ++v92)
                  goto LABEL_126;
              }
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
              goto LABEL_165;
            }
          }
          else
          {
            v89 = 0.0;
            v87 = 0.0;
            v88 = 0.0;
          }
LABEL_126:
          swift_release();
          swift_release();
          v133 = sqrt(v87) * sqrt(v88);
          if ((*(_QWORD *)&v133 & 0x7FFFFFFFFFFFFFFFLL) != 0)
            v134 = v89 / v133;
          else
            v134 = 0.0;
          v55 = acos(v134) / 3.14159265;
        }
LABEL_49:
        v52 = v231;
        v29 = v232;
        ++v51;
        v53 = v53 + v55;
        v50 = v233;
        if (v51 == v233)
          goto LABEL_152;
      }
    }
    v53 = 0.0;
LABEL_152:
    swift_bridgeObjectRelease();
    v155 = *v29;
    LOBYTE(v244[0]) = v230;
    swift_bridgeObjectRetain();
    v221 = sub_1A4517D88(v19, v155, (unsigned __int8 *)v244, 1);
    swift_bridgeObjectRelease();
    if (v53 <= a3)
      goto LABEL_167;
    isUniquelyReferenced_nonNull_native = v221;
    v26 = v220 + 1;
    v231 = v19;
    v27 = MEMORY[0x1E0DEE9D8];
  }
  while (v220 + 1 < a2);
LABEL_168:
  v242 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
  if (v242)
  {
    if (v19 >> 62)
      goto LABEL_250;
    v238 = v19 & 0xFFFFFFFFFFFFFF8;
    v241 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v156 = isUniquelyReferenced_nonNull_native;
    isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain();
LABEL_171:
    v157 = 0;
    v240 = v19 & 0xC000000000000001;
    v158 = (uint64_t *)(v156 + 40);
    v159 = MEMORY[0x1E0DEE9D8];
    while (2)
    {
      v160 = v157 + 1;
      if (__OFADD__(v157, 1))
        goto LABEL_247;
      if (v241 == v157)
        goto LABEL_190;
      v161 = *(v158 - 1);
      v162 = *v158;
      if (v240)
      {
        v169 = v19;
        v164 = v5;
        swift_bridgeObjectRetain();
        v163 = MEMORY[0x1A859ECE0](v157, v169);
        swift_bridgeObjectRetain();
        if ((v161 & 0x8000000000000000) == 0 && (v161 & 0x4000000000000000) == 0)
          goto LABEL_180;
      }
      else
      {
        if (v157 >= *(_QWORD *)(v238 + 16))
          goto LABEL_248;
        v163 = *(_QWORD *)(v19 + 8 * v157 + 32);
        swift_bridgeObjectRetain_n();
        swift_retain();
        v164 = v5;
        if ((v161 & 0x8000000000000000) == 0 && (v161 & 0x4000000000000000) == 0)
        {
LABEL_180:
          v165 = *(_QWORD *)((v161 & 0xFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_181;
        }
      }
      swift_bridgeObjectRetain();
      v165 = sub_1A46916A4();
      swift_bridgeObjectRelease();
LABEL_181:
      swift_bridgeObjectRelease();
      if (v165)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v244[0] = v159;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          isUniquelyReferenced_nonNull_native = sub_1A445A910(0, *(_QWORD *)(v159 + 16) + 1, 1);
          v159 = v244[0];
        }
        v167 = *(_QWORD *)(v159 + 16);
        v166 = *(_QWORD *)(v159 + 24);
        if (v167 >= v166 >> 1)
        {
          isUniquelyReferenced_nonNull_native = sub_1A445A910(v166 > 1, v167 + 1, 1);
          v159 = v244[0];
        }
        *(_QWORD *)(v159 + 16) = v167 + 1;
        v168 = (_QWORD *)(v159 + 24 * v167);
        v168[4] = v161;
        v168[5] = v162;
        v168[6] = v163;
      }
      else
      {
        swift_release();
        isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
      }
      v158 += 2;
      ++v157;
      v5 = v164;
      v19 = v223;
      if (v160 == v242)
      {
LABEL_190:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_192;
      }
      continue;
    }
  }
  swift_bridgeObjectRelease();
  v159 = MEMORY[0x1E0DEE9D8];
LABEL_192:
  v244[0] = v159;
  swift_retain();
  sub_1A44BB34C(v244, (uint64_t (*)(uint64_t))sub_1A462EC04, sub_1A451B2A0);
  if (v5)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_release();
    v170 = v244[0];
    v171 = *(_QWORD *)(v244[0] + 16);
    v172 = *(_QWORD *)(v221 + 16);
    if (v171 < v172)
    {
      if (qword_1EE71C0D0 != -1)
        swift_once();
      v173 = sub_1A4690318();
      __swift_project_value_buffer(v173, (uint64_t)qword_1EE71F718);
      v174 = sub_1A469030C();
      v175 = sub_1A4690FF0();
      if (os_log_type_enabled(v174, v175))
      {
        v176 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v176 = 0;
        _os_log_impl(&dword_1A442D000, v174, v175, "Empty cluster found for k-Mean", v176, 2u);
        MEMORY[0x1A85A0114](v176, -1, -1);
      }

    }
    if (v171)
    {
      v244[0] = MEMORY[0x1E0DEE9D8];
      sub_1A445A8F4(0, v171, 0);
      v177 = v244[0];
      v178 = (double *)(v170 + 48);
      do
      {
        v179 = *((_QWORD *)v178 - 2);
        v180 = *(v178 - 1);
        v181 = *v178;
        swift_retain_n();
        swift_bridgeObjectRetain();
        if (v179 >> 62)
        {
          swift_bridgeObjectRetain();
          v182 = sub_1A46916A4();
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          v182 = *(_QWORD *)((v179 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_release();
        }
        swift_bridgeObjectRelease();
        v244[0] = v177;
        v184 = *(_QWORD *)(v177 + 16);
        v183 = *(_QWORD *)(v177 + 24);
        v185 = v177;
        if (v184 >= v183 >> 1)
        {
          sub_1A445A8F4(v183 > 1, v184 + 1, 1);
          v185 = v244[0];
        }
        *(_QWORD *)(v185 + 16) = v184 + 1;
        v186 = v185 + 24 * v184;
        *(double *)(v186 + 32) = v181;
        *(double *)(v186 + 40) = v180 / (double)v182;
        *(_QWORD *)(v186 + 48) = v182;
        v178 += 3;
        --v171;
        v177 = v185;
      }
      while (v171);
      swift_release();
    }
    else
    {
      swift_release();
      v177 = MEMORY[0x1E0DEE9D8];
    }
    v187 = v219;
    v188 = *(_QWORD *)(v177 + 16);
    v189 = MEMORY[0x1E0DEE9D8];
    v243 = v177;
    if (v188)
    {
      v190 = v177;
      v244[0] = MEMORY[0x1E0DEE9D8];
      sub_1A445A8D8(0, v188, 0);
      v191 = v244[0];
      v192 = *(_QWORD *)(v244[0] + 16);
      v193 = (uint64_t *)(v190 + 40);
      v194 = v188;
      do
      {
        v195 = *v193;
        v244[0] = v191;
        v196 = *(_QWORD *)(v191 + 24);
        if (v192 >= v196 >> 1)
        {
          sub_1A445A8D8(v196 > 1, v192 + 1, 1);
          v191 = v244[0];
        }
        *(_QWORD *)(v191 + 16) = v192 + 1;
        *(_QWORD *)(v191 + 8 * v192 + 32) = v195;
        v193 += 3;
        ++v192;
        --v194;
      }
      while (v194);
      v244[0] = v189;
      sub_1A445A898(0, v188, 0);
      v197 = v244[0];
      v198 = *(_QWORD *)(v244[0] + 16);
      v199 = (uint64_t *)(v243 + 48);
      v187 = v219;
      do
      {
        v201 = *v199;
        v199 += 3;
        v200 = v201;
        v244[0] = v197;
        v202 = *(_QWORD *)(v197 + 24);
        if (v198 >= v202 >> 1)
        {
          sub_1A445A898(v202 > 1, v198 + 1, 1);
          v187 = v219;
          v197 = v244[0];
        }
        *(_QWORD *)(v197 + 16) = v198 + 1;
        *(_QWORD *)(v197 + 8 * v198++ + 32) = v200;
        --v188;
      }
      while (v188);
      v189 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v197 = MEMORY[0x1E0DEE9D8];
      v191 = MEMORY[0x1E0DEE9D8];
    }
    if (v172)
    {
      v244[0] = v189;
      sub_1A445A8D8(0, v172, 0);
      v203 = v221;
      v187 = v219;
      v204 = v244[0];
      v205 = *(_QWORD *)(v244[0] + 16);
      v206 = 40;
      do
      {
        v207 = *(_QWORD *)(v203 + v206);
        v244[0] = v204;
        v208 = *(_QWORD *)(v204 + 24);
        if (v205 >= v208 >> 1)
        {
          sub_1A445A8D8(v208 > 1, v205 + 1, 1);
          v203 = v221;
          v187 = v219;
          v204 = v244[0];
        }
        *(_QWORD *)(v204 + 16) = v205 + 1;
        *(_QWORD *)(v204 + 8 * v205 + 32) = v207;
        v206 += 16;
        ++v205;
        --v172;
      }
      while (v172);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v204 = MEMORY[0x1E0DEE9D8];
    }
    v209 = *(_QWORD *)(v204 + 16);
    if (v209)
    {
      if (v209 == 1)
      {
        v210 = 0;
        v211 = 0.0;
        goto LABEL_234;
      }
      v210 = v209 & 0x7FFFFFFFFFFFFFFELL;
      v212 = (double *)(v204 + 40);
      v211 = 0.0;
      v213 = v209 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        v211 = v211 + *(v212 - 1) + *v212;
        v212 += 2;
        v213 -= 2;
      }
      while (v213);
      if (v209 != v210)
      {
LABEL_234:
        v214 = v209 - v210;
        v215 = (double *)(v204 + 8 * v210 + 32);
        do
        {
          v216 = *v215++;
          v211 = v211 + v216;
          --v214;
        }
        while (v214);
      }
    }
    else
    {
      v211 = 0.0;
    }
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v217 = v211 / (double)*(uint64_t *)(v218 + 40);
    swift_beginAccess();
    *(_QWORD *)(v187 + 104) = v191;
    *(_QWORD *)(v187 + 112) = v197;
    *(double *)(v187 + 120) = v217;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v187 + 96) = v243;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A4517D88(unint64_t a1, unint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  int v20;
  _BOOL4 v21;
  int64_t isa;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t result;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  os_log_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  double v51;
  double v52;
  uint64_t v53;
  double v54;
  double v55;
  uint64_t v56;
  unint64_t v57;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v59;
  unint64_t v60;
  NSObject *v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  NSObject *v79;
  int v80;
  uint64_t v81;
  NSObject *v82;
  int64_t v83;
  NSObject *v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint8_t *v93;
  int64_t v94;
  os_log_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  int64_t v105;
  uint64_t v106;
  unint64_t v107;
  int64_t v108;
  uint64_t *v109;
  NSObject *v110;
  os_log_t v111;
  NSObject *v112;
  unint64_t v113;
  _QWORD *v114;
  double v115;
  double v116;
  unint64_t v117;
  unint64_t v118;
  NSObject *v119;
  uint64_t v120;
  uint64_t v121;
  Class v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  double v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  NSObject *v130;
  uint64_t v131;
  uint64_t v132;
  Class v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  double v137;
  double v138;
  double v139;
  double v140;
  double v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t inited;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  NSObject v149;
  unint64_t v150;
  uint64_t v151;
  char *v152;
  double v153;
  double v154;
  double v155;
  double v156;
  double v157;
  unint64_t v158;
  unint64_t v159;
  unint64_t v160;
  double v161;
  uint64_t v162;
  unint64_t v163;
  float64x2_t *v164;
  float64x2_t *v165;
  float64x2_t v166;
  float64x2_t v167;
  float64x2_t v168;
  float64x2_t v169;
  uint64_t v170;
  unint64_t v171;
  float64x2_t *v172;
  float64x2_t *v173;
  float64x2_t v174;
  float64x2_t v175;
  float64x2_t v176;
  float64x2_t v177;
  float64x2_t v178;
  float64x2_t v179;
  float64x2_t v180;
  float64x2_t v181;
  double v182;
  double v183;
  double v184;
  double v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t *v188;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  float64x2_t *v194;
  float64x2_t *v195;
  float64x2_t v196;
  float64x2_t v197;
  float64x2_t v198;
  float64x2_t v199;
  float64x2_t v200;
  float64x2_t v201;
  float64x2_t v202;
  float64x2_t v203;
  double v204;
  double v205;
  double v206;
  double v207;
  uint64_t v208;
  uint64_t v209;
  double v210;
  uint64_t v211;
  double *v212;
  uint64_t v213;
  double v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t *v218;
  os_log_t v219;
  NSObject *v220;
  Class v221;
  int64_t v222;
  uint64_t v223;
  uint64_t v224;
  objc_class *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  unint64_t v232;
  unint64_t v233;
  Class v234;
  Class v235;
  NSObject *v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  objc_class *v246;
  Class v247;
  NSObject *v248;
  objc_class *v249;
  NSObject *v250;
  NSObject *v251;
  uint64_t v252;
  unint64_t v253;
  unint64_t v254;
  os_log_t v255;
  uint64_t v256;
  uint64_t v257;
  NSObject *v258;
  os_log_type_t v259;
  uint8_t *v260;
  uint64_t v261;
  uint64_t *v262;
  uint64_t v263;
  uint64_t *v264;
  uint64_t v265;
  uint64_t *v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  uint64_t v270;
  __int128 v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  unint64_t *v275;
  __int128 v276;
  int v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  unint64_t *v285;
  objc_class *v286;
  unint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  unint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t *v296;
  uint64_t v297;
  unint64_t *v298;
  uint64_t v299;
  unint64_t v300;
  unint64_t *v301;
  NSObject *v302;
  os_log_t v303;
  __int128 v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307[3];
  os_log_t v308;
  uint64_t v309;
  unint64_t v310;
  uint64_t v311;
  unint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  NSObject *v317;

  v9 = sub_1A4690318();
  v10 = MEMORY[0x1E0C80A78](v9);
  v11 = MEMORY[0x1E0C80A78](v10);
  v12 = MEMORY[0x1E0C80A78](v11);
  if (a4 > 99)
  {
    sub_1A451D1B0();
    swift_allocError();
    *v34 = a4;
    return swift_willThrow();
  }
  v283 = v16;
  v268 = v15;
  v269 = (char *)&v267 - v13;
  v288 = v12;
  v289 = a4;
  v287 = v14;
  LODWORD(v17) = *a3;
  if (qword_1EE71C0D0 != -1)
    goto LABEL_59;
  while (1)
  {
    v18 = __swift_project_value_buffer(v12, (uint64_t)qword_1EE71F718);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v290 = v18;
    v19 = sub_1A469030C();
    v20 = sub_1A4690FE4();
    v21 = os_log_type_enabled(v19, (os_log_type_t)v20);
    isa = a2 >> 62;
    v23 = a1 >> 62;
    LODWORD(v302) = v17;
    v305 = a2;
    if (v21)
    {
      LODWORD(v298) = v20;
      v4 = swift_slowAlloc();
      v297 = swift_slowAlloc();
      v315 = v297;
      *(_DWORD *)v4 = 134218754;
      if (isa)
        goto LABEL_355;
      v24 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_6:
      swift_bridgeObjectRelease();
      v313 = v24;
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v4 + 12) = 2048;
      v303 = (os_log_t)isa;
      if (v23)
      {
        swift_bridgeObjectRetain();
        v25 = sub_1A46916A4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v25 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v26 = v289;
      swift_bridgeObjectRelease();
      v313 = v25;
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v4 + 22) = 2048;
      v313 = v26;
      v296 = &v314;
      sub_1A46911D0();
      v299 = v4;
      *(_WORD *)(v4 + 32) = 2080;
      v4 = MEMORY[0x1E0DEE9D8];
      v300 = (unint64_t)v19;
      v301 = (unint64_t *)v23;
      if (v25)
      {
        v313 = MEMORY[0x1E0DEE9D8];
        sub_1A445A8BC(0, v25 & ~(v25 >> 63), 0);
        if (v25 < 0)
          goto LABEL_358;
        v4 = v313;
        *(_QWORD *)&v304 = a1;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v27 = 0;
          do
          {
            MEMORY[0x1A859ECE0](v27, v304);
            v28 = sub_1A46135FC();
            v30 = v29;
            swift_unknownObjectRelease();
            v313 = v4;
            v32 = *(_QWORD *)(v4 + 16);
            v31 = *(_QWORD *)(v4 + 24);
            if (v32 >= v31 >> 1)
            {
              sub_1A445A8BC(v31 > 1, v32 + 1, 1);
              v4 = v313;
            }
            ++v27;
            *(_QWORD *)(v4 + 16) = v32 + 1;
            v33 = v4 + 16 * v32;
            *(_QWORD *)(v33 + 32) = v28;
            *(_QWORD *)(v33 + 40) = v30;
          }
          while (v25 != v27);
        }
        else
        {
          v36 = a1 + 32;
          do
          {
            swift_retain();
            v37 = sub_1A46135FC();
            v39 = v38;
            swift_release();
            v313 = v4;
            v41 = *(_QWORD *)(v4 + 16);
            v40 = *(_QWORD *)(v4 + 24);
            if (v41 >= v40 >> 1)
            {
              sub_1A445A8BC(v40 > 1, v41 + 1, 1);
              v4 = v313;
            }
            *(_QWORD *)(v4 + 16) = v41 + 1;
            v42 = v4 + 16 * v41;
            *(_QWORD *)(v42 + 32) = v37;
            *(_QWORD *)(v42 + 40) = v39;
            v36 += 8;
            --v25;
          }
          while (v25);
        }
        LODWORD(v17) = (_DWORD)v302;
        a1 = v304;
      }
      isa = (int64_t)v303;
      v43 = (uint8_t *)v299;
      v44 = MEMORY[0x1A859E404](v4, MEMORY[0x1E0DEA968]);
      v46 = v45;
      swift_bridgeObjectRelease();
      v313 = sub_1A4431120(v44, v46, &v315);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v47 = (os_log_t)v300;
      _os_log_impl(&dword_1A442D000, (os_log_t)v300, (os_log_type_t)v298, "KMean: computeClusters() input has %ld points and %ld centers: {iteration: %ld, centers: %s}", v43, 0x2Au);
      v48 = v297;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v48, -1, -1);
      MEMORY[0x1A85A0114](v43, -1, -1);

      a2 = v305;
      v23 = (uint64_t)v301;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    if (v23)
    {
      swift_bridgeObjectRetain();
      v49 = sub_1A46916A4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v49 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v19 = sub_1A44A6300(MEMORY[0x1E0DEE9D8], v49, 0.0);
    v317 = v19;
    if (isa)
      break;
    isa = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!isa)
      goto LABEL_62;
LABEL_28:
    if (isa < 1)
      goto LABEL_354;
    if ((a2 & 0xC000000000000001) != 0)
    {
      v303 = (os_log_t)isa;
      v4 = 0;
      while (1)
      {
        a2 = MEMORY[0x1A859ECE0](v4, a2);
        LOBYTE(v315) = v17;
        v50 = a1;
        a1 = sub_1A451C640(a2, a1, (unsigned __int8 *)&v315);
        v52 = v51;
        swift_unknownObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          if ((a1 & 0x8000000000000000) != 0)
            goto LABEL_53;
        }
        else
        {
          v19 = sub_1A4614364(v19);
          if ((a1 & 0x8000000000000000) != 0)
          {
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
            goto LABEL_57;
          }
        }
        if ((Class)a1 >= v19[2].isa)
          goto LABEL_54;
        v17 = (unint64_t)&v19[4];
        v49 = (uint64_t)&v19[2 * a1 + 4];
        MEMORY[0x1A859E3E0]();
        v23 = *(_QWORD *)((*(_QWORD *)v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if ((unint64_t)v23 >= *(_QWORD *)((*(_QWORD *)v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A4690BDC();
        sub_1A4690C18();
        sub_1A4690BB8();
        if ((Class)a1 >= v19[2].isa)
          goto LABEL_55;
        ++v4;
        *(double *)(v17 + 16 * a1 + 8) = v52 + *(double *)(v17 + 16 * a1 + 8);
        swift_unknownObjectRelease();
        LODWORD(v17) = (_DWORD)v302;
        a2 = v305;
        a1 = v50;
        if (v303 == (os_log_t)v4)
          goto LABEL_52;
      }
    }
    *(_QWORD *)&v304 = a1;
    a1 = 0;
    while (1)
    {
      v4 = *(_QWORD *)(a2 + 8 * a1 + 32);
      LOBYTE(v315) = (_BYTE)v302;
      v53 = swift_retain();
      a2 = sub_1A451C640(v53, v304, (unsigned __int8 *)&v315);
      v55 = v54;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        if ((a2 & 0x8000000000000000) != 0)
          goto LABEL_56;
      }
      else
      {
        v19 = sub_1A4614364(v19);
        if ((a2 & 0x8000000000000000) != 0)
          goto LABEL_56;
      }
      if ((Class)a2 >= v19[2].isa)
        break;
      v17 = (unint64_t)&v19[4];
      v49 = (uint64_t)&v19[2 * a2 + 4];
      MEMORY[0x1A859E3E0]();
      v23 = *(_QWORD *)((*(_QWORD *)v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if ((unint64_t)v23 >= *(_QWORD *)((*(_QWORD *)v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1A4690BDC();
      sub_1A4690C18();
      sub_1A4690BB8();
      if ((Class)a2 >= v19[2].isa)
        goto LABEL_58;
      ++a1;
      *(double *)(v17 + 16 * a2 + 8) = v55 + *(double *)(v17 + 16 * a2 + 8);
      swift_release();
      a2 = v305;
      if (isa == a1)
      {
LABEL_52:
        swift_bridgeObjectRelease();
        v317 = v19;
        goto LABEL_63;
      }
    }
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    swift_once();
    v12 = v288;
  }
  swift_bridgeObjectRetain();
  isa = sub_1A46916A4();
  if (isa)
    goto LABEL_28;
LABEL_62:
  swift_bridgeObjectRelease();
LABEL_63:
  v17 = 0;
  isa = (int64_t)v19[2].isa;
  v56 = MEMORY[0x1E0DEE9D8];
LABEL_64:
  if (v17 <= isa)
    v57 = isa;
  else
    v57 = v17;
  a1 = (unint64_t)&v19[2 * v17 + 4];
  v291 = v56;
  while (isa != v17)
  {
    if (v57 == v17)
      goto LABEL_318;
    if ((Class)v17 >= v19[2].isa)
      goto LABEL_319;
    v49 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v23 = sub_1A46916A4();
      swift_bridgeObjectRelease();
      v56 = v291;
    }
    else
    {
      v23 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    a1 += 16;
    ++v17;
    if (!v23)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v56 = v291;
      v315 = v291;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v49 = (uint64_t)&v315;
        sub_1A445A898(0, *(_QWORD *)(v291 + 16) + 1, 1);
        v56 = v315;
      }
      v60 = *(_QWORD *)(v56 + 16);
      v59 = *(_QWORD *)(v56 + 24);
      v23 = v60 + 1;
      if (v60 >= v59 >> 1)
      {
        v49 = (uint64_t)&v315;
        sub_1A445A898(v59 > 1, v60 + 1, 1);
        v56 = v315;
      }
      *(_QWORD *)(v56 + 16) = v23;
      *(_QWORD *)(v56 + 8 * v60 + 32) = v17 - 1;
      goto LABEL_64;
    }
  }
  v278 = *(_QWORD *)(v56 + 16);
  if (!v278)
    goto LABEL_92;
  LODWORD(v17) = v56;
  swift_bridgeObjectRetain_n();
  v61 = sub_1A469030C();
  v62 = sub_1A4690FE4();
  if (os_log_type_enabled(v61, (os_log_type_t)v62))
  {
    LODWORD(v300) = v62;
    v303 = v61;
    v63 = swift_slowAlloc();
    v299 = swift_slowAlloc();
    v313 = v299;
    *(_DWORD *)v63 = 134218498;
    v315 = v289;
    sub_1A46911D0();
    *(_WORD *)(v63 + 12) = 2080;
    v64 = swift_bridgeObjectRetain();
    v65 = MEMORY[0x1A859E404](v64, MEMORY[0x1E0DEB418]);
    v67 = v66;
    swift_release();
    v315 = sub_1A4431120(v65, v67, &v313);
    v298 = (unint64_t *)&v316;
    sub_1A46911D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    v301 = (unint64_t *)v63;
    *(_WORD *)(v63 + 22) = 2080;
    swift_beginAccess();
    v68 = (uint64_t)v317;
    v312 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1A445A8BC(0, 0, 0);
    a1 = v312;
    v305 = *(_QWORD *)(v68 + 16);
    if (v305)
    {
      swift_bridgeObjectRetain();
      v69 = 0;
      v70 = 32;
      *(_QWORD *)&v304 = v68;
      do
      {
        v71 = *(_QWORD *)(v68 + v70);
        v311 = v69;
        swift_bridgeObjectRetain();
        v315 = sub_1A46918D8();
        v316 = v72;
        sub_1A4690984();
        if (v71 >> 62)
        {
          swift_bridgeObjectRetain();
          v73 = sub_1A46916A4();
          swift_bridgeObjectRelease();
        }
        else
        {
          v73 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v311 = v73;
        sub_1A46918D8();
        sub_1A4690984();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v74 = v315;
        v75 = v316;
        v312 = a1;
        v77 = *(_QWORD *)(a1 + 16);
        v76 = *(_QWORD *)(a1 + 24);
        if (v77 >= v76 >> 1)
        {
          sub_1A445A8BC(v76 > 1, v77 + 1, 1);
          a1 = v312;
        }
        ++v69;
        *(_QWORD *)(a1 + 16) = v77 + 1;
        v78 = a1 + 16 * v77;
        *(_QWORD *)(v78 + 32) = v74;
        *(_QWORD *)(v78 + 40) = v75;
        v70 += 16;
        v68 = v304;
      }
      while (v305 != v69);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v93 = (uint8_t *)v301;
    v19 = MEMORY[0x1A859E404](a1, MEMORY[0x1E0DEA968]);
    isa = v94;
    swift_release();
    v315 = sub_1A4431120((uint64_t)v19, isa, &v313);
    sub_1A46911D0();
    swift_bridgeObjectRelease();
    v95 = v303;
    _os_log_impl(&dword_1A442D000, v303, (os_log_type_t)v300, "KMean: computeClusters() got empty clusters: {iteration: %ld, emptyClusterIdx: %s, clusters[idx].count: %s}", v93, 0x20u);
    v17 = v299;
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v17, -1, -1);
    MEMORY[0x1A85A0114](v93, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  swift_beginAccess();
  v96 = (uint64_t)v317;
  swift_bridgeObjectRetain_n();
  v97 = sub_1A44DF4E0(v96);
  swift_bridgeObjectRelease();
  v313 = v97;
  v98 = v294;
  sub_1A44BB34C(&v313, (uint64_t (*)(uint64_t))sub_1A462EBF0, sub_1A451AB88);
  v294 = v98;
  v4 = v302;
  if (v98)
    goto LABEL_360;
  swift_bridgeObjectRelease();
  v23 = 0;
  v99 = v291;
  v282 = v313;
  v279 = v313 + 32;
  v280 = v291 + 32;
  v274 = v289 + 1;
  v275 = &v310;
  *((_QWORD *)&v100 + 1) = 5;
  v276 = xmmword_1A469DD50;
  *(_QWORD *)&v100 = 134218498;
  v271 = v100;
  v270 = MEMORY[0x1E0DEE9B8] + 8;
  v304 = xmmword_1A4695C10;
  while (1)
  {
    if ((unint64_t)v23 >= *(_QWORD *)(v99 + 16))
      goto LABEL_342;
    if ((unint64_t)v23 >= *(_QWORD *)(v282 + 16))
      goto LABEL_343;
    v286 = *(objc_class **)(v280 + 8 * v23);
    v17 = v279 + 24 * v23;
    v57 = *(_QWORD *)(v17 + 8);
    v101 = *(_QWORD *)(v17 + 16);
    v297 = v57 >> 62;
    if (v57 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v102 = sub_1A46916A4();
      swift_bridgeObjectRelease();
      if (!v102)
      {
LABEL_295:
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRetain();
        v49 = sub_1A469030C();
        LOBYTE(v23) = sub_1A4690FD8();
        if (os_log_type_enabled((os_log_t)v49, (os_log_type_t)v23))
        {
          v17 = swift_slowAlloc();
          *(_DWORD *)v17 = 134217984;
          if (v297)
            goto LABEL_320;
          v256 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_321;
        }

        swift_bridgeObjectRelease();
LABEL_322:
        if (v297)
        {
          swift_bridgeObjectRetain();
          v263 = sub_1A46916A4();
          swift_bridgeObjectRelease();
        }
        else
        {
          v263 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        sub_1A451D1F4();
        swift_allocError();
        *v264 = v263;
        swift_willThrow();
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      v102 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v102)
        goto LABEL_295;
    }
    v285 = (unint64_t *)v17;
    v19 = (v57 & 0xC000000000000001);
    if ((v57 & 0xC000000000000001) != 0)
    {
      v293 = MEMORY[0x1A859ECE0](0, v57);
    }
    else
    {
      if (!*(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_344;
      v293 = *(_QWORD *)(v57 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    if (v102 < 0)
      goto LABEL_359;
    v284 = v23;
    if (v297)
    {
      if ((v57 & 0x8000000000000000) != 0)
        v23 = v57;
      else
        v23 = v57 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n();
      v17 = sub_1A46916A4();
      swift_bridgeObjectRelease();
      if ((uint64_t)v17 < 1)
        goto LABEL_345;
      swift_bridgeObjectRetain();
      v23 = sub_1A46916A4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v23 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v23)
        goto LABEL_345;
    }
    if (v23 < v102)
      goto LABEL_346;
    if (v19 && v102 != 1)
    {
      type metadata accessor for RDVector();
      v103 = 1;
      do
      {
        v17 = v103 + 1;
        sub_1A4691470();
        v103 = v17;
      }
      while (v102 != v17);
    }
    if (v297)
    {
      swift_bridgeObjectRetain();
      v295 = sub_1A46916B0();
      isa = v105;
      v23 = v106;
      v104 = v107;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v295 = v57 & 0xFFFFFFFFFFFFFF8;
      isa = (v57 & 0xFFFFFFFFFFFFFF8) + 32;
      v104 = (2 * v102) | 1;
      v23 = 1;
    }
    a1 = v104 >> 1;
    v108 = (v104 >> 1) - v23;
    if (__OFSUB__(v104 >> 1, v23))
      goto LABEL_347;
    v296 = (uint64_t *)v57;
    if (v108)
      break;
    swift_unknownObjectRelease();
    v109 = (uint64_t *)MEMORY[0x1E0DEE9D8];
    v208 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v208)
      goto LABEL_298;
LABEL_237:
    v209 = v109[4];
    v210 = *((double *)v109 + 5);
    v211 = v208 - 1;
    if (v208 == 1)
    {
      swift_retain();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_retain();
      v212 = (double *)(v109 + 7);
      v213 = v209;
      do
      {
        v214 = *v212;
        if (v210 < *v212)
        {
          v213 = *((_QWORD *)v212 - 1);
          swift_retain();
          swift_release();
          v210 = v214;
        }
        v212 += 2;
        --v211;
      }
      while (v211);
      swift_bridgeObjectRelease();
      v209 = v213;
    }
    swift_bridgeObjectRelease();
    swift_retain();
    if (v210 == 0.0)
    {
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v287 + 16))(v268, v290, v288);
      swift_bridgeObjectRetain();
      v258 = sub_1A469030C();
      v259 = sub_1A4690FD8();
      if (os_log_type_enabled(v258, v259))
      {
        v260 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v260 = 134217984;
        v309 = v101;
        sub_1A46911D0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A442D000, v258, v259, "KMean: Farthest point has distance 0. Cluster sse is %f", v260, 0xCu);
        MEMORY[0x1A85A0114](v260, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(uint64_t, uint64_t))(v287 + 8))(v268, v288);
      if (v297)
      {
        swift_bridgeObjectRetain();
        v261 = sub_1A46916A4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v261 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      sub_1A451D1F4();
      swift_allocError();
      *v262 = v261;
      swift_willThrow();
      swift_release();
      swift_release_n();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F360);
    v215 = swift_allocObject();
    *(_OWORD *)(v215 + 16) = v276;
    v19 = v293;
    *(_QWORD *)(v215 + 32) = v293;
    *(_QWORD *)(v215 + 40) = v209;
    v309 = v215;
    sub_1A4690BB8();
    a1 = v309;
    v17 = v287;
    v23 = v288;
    v216 = v283;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v287 + 16))(v283, v290, v288);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v281 = v209;
    swift_retain();
    swift_retain();
    isa = sub_1A469030C();
    v277 = sub_1A4690FE4();
    if (os_log_type_enabled((os_log_t)isa, (os_log_type_t)v277))
    {
      v217 = swift_slowAlloc();
      v272 = swift_slowAlloc();
      v307[0] = v272;
      *(_DWORD *)v217 = v271;
      v309 = v289;
      sub_1A46911D0();
      v273 = v217;
      *(_WORD *)(v217 + 12) = 2080;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        v23 = sub_1A46916A4();
        swift_bridgeObjectRelease();
        if (v23)
        {
LABEL_248:
          v308 = (os_log_t)MEMORY[0x1E0DEE9D8];
          sub_1A445A8BC(0, v23 & ~(v23 >> 63), 0);
          if ((v23 & 0x8000000000000000) == 0)
          {
            v218 = 0;
            v219 = v308;
            v297 = a1 & 0xC000000000000001;
            v298 = (unint64_t *)v23;
            v292 = a1 + 32;
            v295 = a1;
            v299 = isa;
            while (v218 != (unint64_t *)v23)
            {
              v303 = v219;
              v301 = v218;
              if (v297)
              {
                v220 = MEMORY[0x1A859ECE0]();
              }
              else
              {
                v220 = *(NSObject **)(v292 + 8 * (_QWORD)v218);
                swift_retain();
              }
              v309 = 2636374;
              v310 = 0xE300000000000000;
              swift_beginAccess();
              v300 = (unint64_t)v220;
              v221 = v220[2].isa;
              if (*((_QWORD *)v221 + 2) >= 5uLL)
                v222 = 5;
              else
                v222 = *((_QWORD *)v221 + 2);
              if (v222)
              {
                v306 = MEMORY[0x1E0DEE9D8];
                swift_bridgeObjectRetain();
                sub_1A445A8BC(0, v222, 0);
                v4 = 0;
                v223 = v306;
                v305 = 8 * v222;
                v224 = MEMORY[0x1E0DEB070];
                do
                {
                  v225 = v221;
                  v226 = *(_QWORD *)((char *)v221 + v4 + 32);
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243A20);
                  v227 = swift_allocObject();
                  *(_OWORD *)(v227 + 16) = v304;
                  *(_QWORD *)(v227 + 56) = v224;
                  *(_QWORD *)(v227 + 64) = MEMORY[0x1E0DEB100];
                  *(_QWORD *)(v227 + 32) = v226;
                  v228 = sub_1A46908C4();
                  v230 = v229;
                  v306 = v223;
                  v232 = *(_QWORD *)(v223 + 16);
                  v231 = *(_QWORD *)(v223 + 24);
                  if (v232 >= v231 >> 1)
                  {
                    sub_1A445A8BC(v231 > 1, v232 + 1, 1);
                    v224 = MEMORY[0x1E0DEB070];
                    v223 = v306;
                  }
                  *(_QWORD *)(v223 + 16) = v232 + 1;
                  v233 = v223 + 16 * v232;
                  *(_QWORD *)(v233 + 32) = v228;
                  *(_QWORD *)(v233 + 40) = v230;
                  v4 += 8;
                  v221 = v225;
                }
                while (v305 != v4);
                swift_bridgeObjectRelease();
                a1 = v295;
                v57 = (unint64_t)v296;
              }
              else
              {
                v223 = MEMORY[0x1E0DEE9D8];
              }
              v306 = v223;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
              sub_1A4469630();
              sub_1A4690828();
              swift_bridgeObjectRelease();
              sub_1A4690984();
              swift_bridgeObjectRelease();
              sub_1A4690984();
              swift_release();
              v17 = v309;
              v19 = v310;
              v219 = v303;
              v308 = v303;
              v235 = v303[2].isa;
              v234 = v303[3].isa;
              if ((unint64_t)v235 >= (unint64_t)v234 >> 1)
              {
                sub_1A445A8BC((unint64_t)v234 > 1, (int64_t)v235 + 1, 1);
                v219 = v308;
              }
              v218 = (unint64_t *)((char *)v301 + 1);
              v219[2].isa = (Class)((char *)v235 + 1);
              v236 = &v219[2 * (_QWORD)v235];
              v236[4].isa = (Class)v17;
              v236[5].isa = (Class)v19;
              v23 = (uint64_t)v298;
              isa = v299;
              if (v218 == v298)
                goto LABEL_274;
            }
            __break(1u);
LABEL_337:
            __break(1u);
LABEL_338:
            __break(1u);
LABEL_339:
            __break(1u);
LABEL_340:
            __break(1u);
LABEL_341:
            __break(1u);
LABEL_342:
            __break(1u);
LABEL_343:
            __break(1u);
LABEL_344:
            __break(1u);
LABEL_345:
            __break(1u);
LABEL_346:
            __break(1u);
LABEL_347:
            __break(1u);
LABEL_348:
            __break(1u);
LABEL_349:
            __break(1u);
LABEL_350:
            __break(1u);
LABEL_351:
            __break(1u);
LABEL_352:
            __break(1u);
LABEL_353:
            __break(1u);
LABEL_354:
            __break(1u);
LABEL_355:
            swift_bridgeObjectRetain();
            v24 = sub_1A46916A4();
            swift_bridgeObjectRelease();
            goto LABEL_6;
          }
          __break(1u);
LABEL_358:
          __break(1u);
LABEL_359:
          __break(1u);
LABEL_360:
          result = swift_release();
          __break(1u);
          return result;
        }
      }
      else
      {
        v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v23)
          goto LABEL_248;
      }
      v219 = (os_log_t)MEMORY[0x1E0DEE9D8];
LABEL_274:
      v237 = v273;
      v238 = MEMORY[0x1A859E404](v219, MEMORY[0x1E0DEA968]);
      v17 = v239;
      swift_bridgeObjectRelease();
      v309 = sub_1A4431120(v238, v17, v307);
      v19 = v275;
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v237 + 22) = 2080;
      v240 = Array<A>.truncatedLoggingDescription()(v57);
      v23 = v241;
      v309 = sub_1A4431120(v240, v241, v307);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, (os_log_t)isa, (os_log_type_t)v277, "KMean: computerClusters() will call itself recursively {curr.iteration: %ld, nextCenters: %s, pointsToSplit: %s}", (uint8_t *)v237, 0x20u);
      v242 = v272;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v242, -1, -1);
      MEMORY[0x1A85A0114](v237, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v287 + 8))(v283, v288);
      v4 = v302;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v216, v23);
    }
    LOBYTE(v309) = v4;
    v243 = v294;
    v244 = sub_1A4517D88(a1, v57, &v309, v274);
    v294 = v243;
    if (v243)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release_n();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    v245 = (_QWORD *)v244;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v245[2] < 2uLL)
      goto LABEL_348;
    v23 = v245[6];
    v246 = (objc_class *)v245[7];
    swift_beginAccess();
    v19 = v317;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      v247 = v286;
      if (((unint64_t)v286 & 0x8000000000000000) != 0)
        goto LABEL_349;
    }
    else
    {
      v19 = sub_1A4614364(v19);
      v247 = v286;
      if (((unint64_t)v286 & 0x8000000000000000) != 0)
        goto LABEL_349;
    }
    if (v247 >= v19[2].isa)
      goto LABEL_350;
    v248 = &v19[2 * (_QWORD)v247];
    v248[4].isa = (Class)v23;
    v248[5].isa = v246;
    swift_bridgeObjectRelease();
    v317 = v19;
    if (!v245[2])
      goto LABEL_351;
    v17 = *v285;
    v23 = v245[4];
    v249 = (objc_class *)v245[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v250 = v317;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      if ((v17 & 0x8000000000000000) != 0)
        goto LABEL_289;
    }
    else
    {
      v250 = sub_1A4614364(v250);
      if ((v17 & 0x8000000000000000) != 0)
      {
LABEL_289:
        __break(1u);
        goto LABEL_290;
      }
    }
    if ((Class)v17 >= v250[2].isa)
      goto LABEL_352;
    v251 = &v250[2 * v17];
    v17 = (unint64_t)v251[4].isa;
    v251[4].isa = (Class)v23;
    v23 = v284 + 1;
    v251[5].isa = v249;
    v317 = v250;
    swift_endAccess();
    swift_release_n();
    swift_release();
    swift_bridgeObjectRelease();
    v99 = v291;
    if (v23 == v278)
    {
LABEL_308:
      swift_release();
LABEL_92:
      swift_release();
      v79 = sub_1A469030C();
      v80 = sub_1A4690FE4();
      if (os_log_type_enabled(v79, (os_log_type_t)v80))
      {
        LODWORD(v304) = v80;
        v81 = swift_slowAlloc();
        v303 = (os_log_t)swift_slowAlloc();
        v308 = v303;
        *(_DWORD *)v81 = 134218498;
        v309 = v289;
        sub_1A46911D0();
        *(_WORD *)(v81 + 12) = 2048;
        swift_beginAccess();
        v82 = v317;
        v309 = (uint64_t)v317[2].isa;
        sub_1A46911D0();
        *(_WORD *)(v81 + 22) = 2080;
        v83 = (int64_t)v82[2].isa;
        v4 = MEMORY[0x1E0DEE9D8];
        if (v83)
        {
          v301 = (unint64_t *)v81;
          v302 = v79;
          v306 = MEMORY[0x1E0DEE9D8];
          swift_bridgeObjectRetain();
          sub_1A445A8BC(0, v83, 0);
          v4 = v306;
          v300 = (unint64_t)v82;
          v84 = v82 + 5;
          v305 = 0x80000001A46BF6D0;
          do
          {
            v85 = (unint64_t)v84[-1].isa;
            v309 = 0;
            v310 = 0xE000000000000000;
            sub_1A4691410();
            sub_1A4690984();
            sub_1A4690D38();
            sub_1A4690984();
            v86 = v309;
            v87 = v310;
            v309 = 0;
            v310 = 0xE000000000000000;
            sub_1A4691410();
            swift_bridgeObjectRelease();
            v309 = 0x5B203A737470090ALL;
            v310 = 0xEB0000000009090ALL;
            Array<A>.truncatedLoggingDescription()(v85);
            sub_1A4690984();
            swift_bridgeObjectRelease();
            sub_1A4690984();
            v309 = v86;
            v310 = v87;
            swift_bridgeObjectRetain();
            sub_1A4690984();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v89 = v309;
            v88 = v310;
            v306 = v4;
            v91 = *(_QWORD *)(v4 + 16);
            v90 = *(_QWORD *)(v4 + 24);
            if (v91 >= v90 >> 1)
            {
              sub_1A445A8BC(v90 > 1, v91 + 1, 1);
              v4 = v306;
            }
            *(_QWORD *)(v4 + 16) = v91 + 1;
            v92 = v4 + 16 * v91;
            *(_QWORD *)(v92 + 32) = v89;
            *(_QWORD *)(v92 + 40) = v88;
            v84 += 2;
            --v83;
          }
          while (v83);
LABEL_290:
          swift_bridgeObjectRelease();
          v81 = (uint64_t)v301;
          v79 = v302;
        }
        v309 = v4;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
        sub_1A4469630();
        v252 = sub_1A4690828();
        v254 = v253;
        swift_bridgeObjectRelease();
        v309 = sub_1A4431120(v252, v254, (uint64_t *)&v308);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v79, (os_log_type_t)v304, "KMean: computeClusters() result: {iteration: %ld, clusters.count: %ld, clusters: \n%s}", (uint8_t *)v81, 0x20u);
        v255 = v303;
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v255, -1, -1);
        MEMORY[0x1A85A0114](v81, -1, -1);
      }

      swift_beginAccess();
      return (uint64_t)v317;
    }
  }
  v309 = MEMORY[0x1E0DEE9D8];
  v109 = &v309;
  v300 = v108;
  sub_1A445A87C(0, v108 & ~(v108 >> 63), 0);
  if ((v300 & 0x8000000000000000) != 0)
    goto LABEL_353;
  v57 = v293 + 16;
  v301 = (unint64_t *)(v293 + 24);
  swift_beginAccess();
  v110 = v300;
  v111 = 0;
  v298 = (unint64_t *)a1;
  v299 = isa;
  while (2)
  {
    if (__OFADD__(v111, 1))
    {
      __break(1u);
LABEL_327:
      __break(1u);
LABEL_328:
      __break(1u);
      goto LABEL_329;
    }
    if (v23 >= (uint64_t)a1 || (uint64_t)v111 >= (uint64_t)v110)
      goto LABEL_327;
    v19 = *(NSObject **)(isa + 8 * v23);
    v305 = (uint64_t)v19;
    v303 = (os_log_t)((char *)&v111->isa + 1);
    if (!(_DWORD)v4)
    {
      v17 = *v301;
      if ((*v301 & 0x8000000000000000) != 0)
        goto LABEL_339;
      if (v17)
      {
        v119 = v19 + 2;
        swift_beginAccess();
        swift_beginAccess();
        v120 = *(_QWORD *)v57;
        v121 = *(_QWORD *)(*(_QWORD *)v57 + 16);
        if (!v121)
          goto LABEL_305;
        v122 = v119->isa;
        v123 = *((_QWORD *)v119->isa + 2);
        if (!v123)
          goto LABEL_306;
        v124 = v120 + 32;
        v125 = (uint64_t)v122 + 32;
        v126 = (*(double *)(v120 + 32) - *((double *)v122 + 4)) * (*(double *)(v120 + 32) - *((double *)v122 + 4));
        if (v17 != 1)
        {
          v127 = v123 - 1;
          if (v123 - 1 >= v121 - 1)
            v127 = v121 - 1;
          if (v127 >= v17 - 2)
            v127 = v17 - 2;
          v128 = v127 + 1;
          if (v128 > 4)
          {
            v162 = v128 & 3;
            if ((v128 & 3) == 0)
              v162 = 4;
            v163 = v128 - v162;
            v129 = v163 + 1;
            v164 = (float64x2_t *)(v120 + 56);
            v165 = (float64x2_t *)((char *)v122 + 56);
            do
            {
              v166 = vsubq_f64(v164[-1], v165[-1]);
              v167 = vsubq_f64(*v164, *v165);
              v168 = vmulq_f64(v166, v166);
              v169 = vmulq_f64(v167, v167);
              v126 = v126 + v168.f64[0] + v168.f64[1] + v169.f64[0] + v169.f64[1];
              v164 += 2;
              v165 += 2;
              v163 -= 4;
            }
            while (v163);
          }
          else
          {
            v129 = 1;
          }
          while (v121 != v129)
          {
            if (v129 >= v123)
              goto LABEL_306;
            v126 = v126
                 + (*(double *)(v124 + 8 * v129) - *(double *)(v125 + 8 * v129))
                 * (*(double *)(v124 + 8 * v129) - *(double *)(v125 + 8 * v129));
            if (v17 == ++v129)
              goto LABEL_198;
          }
          goto LABEL_305;
        }
      }
      else
      {
        v126 = 0.0;
      }
LABEL_198:
      v161 = sqrt(v126);
      goto LABEL_209;
    }
    if ((_DWORD)v4 != 1)
    {
      v17 = *v301;
      if ((*v301 & 0x8000000000000000) != 0)
        goto LABEL_337;
      if (v17)
      {
        v130 = v19 + 2;
        swift_beginAccess();
        swift_beginAccess();
        v131 = *(_QWORD *)v57;
        v132 = *(_QWORD *)(*(_QWORD *)v57 + 16);
        if (!v132)
          goto LABEL_304;
        v133 = v130->isa;
        v134 = *((_QWORD *)v130->isa + 2);
        if (!v134)
          goto LABEL_307;
        v135 = v131 + 32;
        v136 = (uint64_t)v133 + 32;
        v137 = *((double *)v133 + 4);
        v138 = *(double *)(v131 + 32);
        v139 = v138 * v138;
        v140 = v137 * v137;
        v141 = v138 * v137 + 0.0;
        if (v17 != 1)
        {
          v142 = v134 - 1;
          if (v134 - 1 >= v132 - 1)
            v142 = v132 - 1;
          if (v142 >= v17 - 2)
            v142 = v17 - 2;
          v143 = v142 + 1;
          if (v143 > 4)
          {
            v170 = v143 & 3;
            if ((v143 & 3) == 0)
              v170 = 4;
            v171 = v143 - v170;
            v144 = v171 + 1;
            v172 = (float64x2_t *)(v131 + 56);
            v173 = (float64x2_t *)((char *)v133 + 56);
            do
            {
              v174 = v172[-1];
              v175 = v173[-1];
              v176 = vmulq_f64(v174, v174);
              v177 = vmulq_f64(*v172, *v172);
              v178 = vmulq_f64(v175, v175);
              v179 = vmulq_f64(*v173, *v173);
              v180 = vmulq_f64(v174, v175);
              v181 = vmulq_f64(*v172, *v173);
              v141 = v141 + v180.f64[0] + v180.f64[1] + v181.f64[0] + v181.f64[1];
              v139 = v139 + v176.f64[0] + v176.f64[1] + v177.f64[0] + v177.f64[1];
              v140 = v140 + v178.f64[0] + v178.f64[1] + v179.f64[0] + v179.f64[1];
              v172 += 2;
              v173 += 2;
              v171 -= 4;
            }
            while (v171);
          }
          else
          {
            v144 = 1;
          }
          while (v132 != v144)
          {
            if (v144 >= v134)
              goto LABEL_307;
            v182 = *(double *)(v135 + 8 * v144);
            v183 = *(double *)(v136 + 8 * v144);
            v139 = v139 + v182 * v182;
            v140 = v140 + v183 * v183;
            v141 = v141 + v182 * v183;
            if (v17 == ++v144)
              goto LABEL_206;
          }
LABEL_304:
          __break(1u);
LABEL_305:
          __break(1u);
LABEL_306:
          __break(1u);
LABEL_307:
          __break(1u);
          goto LABEL_308;
        }
      }
      else
      {
        v141 = 0.0;
        v139 = 0.0;
        v140 = 0.0;
      }
LABEL_206:
      v184 = sqrt(v139) * sqrt(v140);
      v185 = v141 / v184;
      if ((*(_QWORD *)&v184 & 0x7FFFFFFFFFFFFFFFLL) == 0)
        v185 = 0.0;
      v161 = acos(v185) / 3.14159265;
LABEL_209:
      swift_retain();
      goto LABEL_210;
    }
    a1 = *v301;
    if ((*v301 & 0x8000000000000000) != 0)
      goto LABEL_338;
    if (a1)
    {
      v112 = v19 + 2;
      swift_retain_n();
      swift_beginAccess();
      swift_beginAccess();
      v113 = 0;
      v114 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      while (v113 < *(_QWORD *)(*(_QWORD *)v57 + 16))
      {
        if (v113 >= *((_QWORD *)v112->isa + 2))
          goto LABEL_294;
        v115 = *(double *)(*(_QWORD *)v57 + 8 * v113 + 32);
        v116 = *((double *)v112->isa + v113 + 4);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v114 = sub_1A4438D64(0, v114[2] + 1, 1, v114);
        v118 = v114[2];
        v117 = v114[3];
        v17 = v118 + 1;
        if (v118 >= v117 >> 1)
          v114 = sub_1A4438D64((_QWORD *)(v117 > 1), v118 + 1, 1, v114);
        ++v113;
        v114[2] = v17;
        *(double *)&v114[v118 + 4] = v115 - v116;
        if (a1 == v113)
          goto LABEL_170;
      }
      __break(1u);
LABEL_294:
      __break(1u);
      goto LABEL_295;
    }
    swift_retain_n();
    v114 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_170:
    type metadata accessor for RDVector();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = v114;
    v146 = v114[2];
    *(_QWORD *)(inited + 24) = v146;
    if (!v146)
    {
      swift_release();
      v4 = v302;
      a1 = (unint64_t)v298;
      isa = v299;
      goto LABEL_189;
    }
    v4 = v302;
    a1 = (unint64_t)v298;
    isa = v299;
    if ((v114[4] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    {
      v19 = v305;
      goto LABEL_173;
    }
    v19 = v305;
    if (v146 == 1)
    {
LABEL_188:
      swift_release();
LABEL_189:
      swift_release();
      v161 = 0.0;
    }
    else
    {
      if ((v114[5] & 0x7FFFFFFFFFFFFFFFLL) == 0)
      {
        if (v146 != 2)
        {
          v190 = 6;
          while (1)
          {
            v191 = v190 - 3;
            if (__OFADD__(v190 - 4, 1))
              goto LABEL_341;
            if ((v114[v190] & 0x7FFFFFFFFFFFFFFFLL) != 0)
              goto LABEL_173;
            ++v190;
            if (v191 == v146)
              goto LABEL_188;
          }
        }
        goto LABEL_188;
      }
LABEL_173:
      swift_bridgeObjectRelease();
      v17 = *v301;
      if ((*v301 & 0x8000000000000000) != 0)
        goto LABEL_340;
      if (v17)
      {
        v49 = (uint64_t)&v19[2];
        swift_beginAccess();
        swift_beginAccess();
        v147 = *(_QWORD *)v57;
        v148 = *(_QWORD *)(*(_QWORD *)v57 + 16);
        if (!v148)
          goto LABEL_316;
        v149.isa = *(Class *)v49;
        v150 = *(_QWORD *)(*(_QWORD *)v49 + 16);
        if (!v150)
          goto LABEL_317;
        v151 = v147 + 32;
        v152 = (char *)v149.isa + 32;
        v153 = *((double *)v149.isa + 4);
        v154 = *(double *)(v147 + 32);
        v155 = v154 * v154;
        v156 = v153 * v153;
        v157 = v154 * v153 + 0.0;
        if (v17 != 1)
        {
          v158 = v150 - 1;
          if (v150 - 1 >= v148 - 1)
            v158 = v148 - 1;
          if (v158 >= v17 - 2)
            v158 = v17 - 2;
          v159 = v158 + 1;
          if (v159 > 4)
          {
            v192 = v159 & 3;
            if ((v159 & 3) == 0)
              v192 = 4;
            v193 = v159 - v192;
            v160 = v193 + 1;
            v194 = (float64x2_t *)(v147 + 56);
            v195 = (float64x2_t *)((char *)v149.isa + 56);
            do
            {
              v196 = v194[-1];
              v197 = v195[-1];
              v198 = vmulq_f64(v196, v196);
              v199 = vmulq_f64(*v194, *v194);
              v200 = vmulq_f64(v197, v197);
              v201 = vmulq_f64(*v195, *v195);
              v202 = vmulq_f64(v196, v197);
              v203 = vmulq_f64(*v194, *v195);
              v157 = v157 + v202.f64[0] + v202.f64[1] + v203.f64[0] + v203.f64[1];
              v155 = v155 + v198.f64[0] + v198.f64[1] + v199.f64[0] + v199.f64[1];
              v156 = v156 + v200.f64[0] + v200.f64[1] + v201.f64[0] + v201.f64[1];
              v194 += 2;
              v195 += 2;
              v193 -= 4;
            }
            while (v193);
          }
          else
          {
            v160 = 1;
          }
          while (v148 != v160)
          {
            if (v160 >= v150)
              goto LABEL_317;
            v204 = *(double *)(v151 + 8 * v160);
            v205 = *(double *)&v152[8 * v160];
            v155 = v155 + v204 * v204;
            v156 = v156 + v205 * v205;
            v157 = v157 + v204 * v205;
            if (v17 == ++v160)
              goto LABEL_231;
          }
LABEL_316:
          __break(1u);
LABEL_317:
          __break(1u);
LABEL_318:
          __break(1u);
LABEL_319:
          __break(1u);
LABEL_320:
          swift_bridgeObjectRetain();
          v256 = sub_1A46916A4();
          swift_bridgeObjectRelease();
LABEL_321:
          v309 = v256;
          sub_1A46911D0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A442D000, (os_log_t)v49, (os_log_type_t)v23, "KMean: No point found. Cluster has %ld points", (uint8_t *)v17, 0xCu);
          MEMORY[0x1A85A0114](v17, -1, -1);

          goto LABEL_322;
        }
      }
      else
      {
        v157 = 0.0;
        v155 = 0.0;
        v156 = 0.0;
      }
LABEL_231:
      swift_release();
      v206 = sqrt(v155) * sqrt(v156);
      v207 = 1.0 - v157 / v206;
      if ((*(_QWORD *)&v206 & 0x7FFFFFFFFFFFFFFFLL) == 0)
        v207 = 1.0;
      v161 = sqrt(fabs(v207));
    }
LABEL_210:
    v109 = (uint64_t *)v309;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1A445A87C(0, v109[2] + 1, 1);
      v109 = (uint64_t *)v309;
    }
    v110 = v300;
    v187 = v109[2];
    v186 = v109[3];
    v17 = v187 + 1;
    if (v187 >= v186 >> 1)
    {
      sub_1A445A87C(v186 > 1, v187 + 1, 1);
      v110 = v300;
      v109 = (uint64_t *)v309;
    }
    v109[2] = v17;
    v188 = &v109[2 * v187];
    v188[4] = v305;
    *((double *)v188 + 5) = v161;
    if (__OFADD__(v23++, 1))
      goto LABEL_328;
    v111 = v303;
    if (v303 != v110)
      continue;
    break;
  }
  swift_unknownObjectRelease();
  v57 = (unint64_t)v296;
  v208 = v109[2];
  if (v208)
    goto LABEL_237;
LABEL_298:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v287 + 16))(v269, v290, v288);
  swift_bridgeObjectRetain_n();
  v109 = (uint64_t *)sub_1A469030C();
  LOBYTE(v23) = sub_1A4690FD8();
  if (os_log_type_enabled((os_log_t)v109, (os_log_type_t)v23))
  {
    v17 = swift_slowAlloc();
    *(_DWORD *)v17 = 134217984;
    if (v297)
    {
LABEL_329:
      swift_bridgeObjectRetain();
      v257 = sub_1A46916A4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v257 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v309 = v257;
    sub_1A46911D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, (os_log_t)v109, (os_log_type_t)v23, "KMean: Only one point. Cluster has %ld points", (uint8_t *)v17, 0xCu);
    MEMORY[0x1A85A0114](v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v287 + 8))(v269, v288);
  if (v297)
  {
    swift_bridgeObjectRetain();
    v265 = sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v265 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_1A451D1F4();
  swift_allocError();
  *v266 = v265;
  swift_willThrow();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t static KMeans._debug_computeClusters(_:points:distanceCalculator:)(unint64_t a1, unint64_t a2, unsigned __int8 *a3)
{
  unsigned __int8 v4;

  v4 = *a3;
  return sub_1A4517D88(a1, a2, &v4, 1);
}

uint64_t sub_1A451A53C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v17 = MEMORY[0x1E0DEE9D8];
  if (a2 < 0)
    goto LABEL_37;
  v3 = a3;
  v4 = a2;
  v5 = result;
  if (a2)
  {
    if ((result & 0xC000000000000001) != 0)
    {
      v6 = 0;
      do
      {
        MEMORY[0x1A859ECE0](v6, v5);
        MEMORY[0x1A859E3E0]();
        if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A4690BDC();
        ++v6;
        sub_1A4690C18();
        result = sub_1A4690BB8();
      }
      while (v4 != v6);
    }
    else
    {
      v7 = result + 32;
      v8 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
      v9 = a2;
      do
      {
        if (!v8)
          goto LABEL_36;
        v10 = swift_retain();
        MEMORY[0x1A859E3E0](v10);
        if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A4690BDC();
        sub_1A4690C18();
        result = sub_1A4690BB8();
        --v8;
        v7 += 8;
        --v9;
      }
      while (v9);
    }
  }
  if (v5 >> 62)
    goto LABEL_38;
  v11 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v12 = v11 == v4;
  if (v11 < v4)
  {
LABEL_39:
    __break(1u);
  }
  else
  {
    while (!v12)
    {
      v13 = v4;
      while (v13 < v11)
      {
        v14 = v4;
        __swift_mutable_project_boxed_opaque_existential_1(v3, *(_QWORD *)(v3 + 24));
        sub_1A451D260();
        sub_1A451D2A4();
        sub_1A46907D4();
        v4 = v16;
        if ((v16 & 0x8000000000000000) != 0)
          goto LABEL_33;
        if ((v5 & 0xC000000000000001) != 0)
        {
          v15 = MEMORY[0x1A859ECE0](v13, v5);
        }
        else
        {
          if (v13 >= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_34;
          v15 = *(_QWORD *)(v5 + 8 * v13 + 32);
          swift_retain();
        }
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v17 & 0x8000000000000000) != 0
          || (v17 & 0x4000000000000000) != 0)
        {
          sub_1A4614378(v17);
        }
        if (v16 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_35;
        ++v13;
        swift_release();
        *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v16 + 0x20) = v15;
        sub_1A4690BB8();
        v4 = v14;
        if (v11 == v13)
          return v17;
      }
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      v11 = sub_1A46916A4();
      result = swift_bridgeObjectRelease();
      v12 = v11 == v4;
      if (v11 < v4)
        goto LABEL_39;
    }
    return v17;
  }
  return result;
}

uint64_t KMeans.deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t KMeans.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for KMeans()
{
  return objc_opt_self();
}

uint64_t method lookup function for KMeans()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of KMeans.__allocating_init(k:pointCloud:maxIter:tolerance:randomGenerator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

_QWORD *sub_1A451A8EC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for KMeans.TrainingMetrics(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for KMeans.TrainingMetrics(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for KMeans.TrainingMetrics()
{
  return &type metadata for KMeans.TrainingMetrics;
}

_QWORD *initializeBufferWithCopyOfBuffer for KMeans.Cluster(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for KMeans.Cluster(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

_QWORD *assignWithTake for KMeans.Cluster(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for KMeans.Cluster()
{
  return &type metadata for KMeans.Cluster;
}

uint64_t initializeBufferWithCopyOfBuffer for KMeans.ClusterStats(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for KMeans.ClusterStats(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for KMeans.ClusterStats(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for KMeans.ClusterStats()
{
  return &type metadata for KMeans.ClusterStats;
}

uint64_t sub_1A451AB88(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double *v31;
  double v32;
  uint64_t v33;
  double *v34;
  double v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  char v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t i;
  double v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  unint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  double *__dst;

  v3 = a1[1];
  result = sub_1A46918CC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v88 = *a1;
      v89 = *a1 + 16;
      v90 = -1;
      for (i = 1; i != v3; ++i)
      {
        v92 = *(double *)(v88 + 24 * i + 16);
        v93 = v90;
        v94 = v89;
        do
        {
          if (*(double *)v94 >= v92)
            break;
          if (!v88)
            goto LABEL_141;
          v95 = *(_QWORD *)(v94 + 8);
          v96 = *(_QWORD *)(v94 + 16);
          *(_OWORD *)(v94 + 8) = *(_OWORD *)(v94 - 16);
          *(_QWORD *)(v94 + 24) = *(_QWORD *)v94;
          *(_QWORD *)(v94 - 16) = v95;
          *(_QWORD *)(v94 - 8) = v96;
          *(double *)v94 = v92;
          v94 -= 24;
        }
        while (!__CFADD__(v93++, 1));
        v89 += 24;
        --v90;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v106 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (double *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v98 = v12;
      v108 = v9;
      if (v13 >= 2)
      {
        v99 = *v106;
        do
        {
          v100 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v99)
            goto LABEL_145;
          v101 = v98;
          v102 = *(_QWORD *)&v98[16 * v100 + 32];
          v103 = *(_QWORD *)&v98[16 * v13 + 24];
          sub_1A451BEB8((double *)(v99 + 24 * v102), (double *)(v99 + 24 * *(_QWORD *)&v98[16 * v13 + 16]), v99 + 24 * v103, __dst);
          if (v1)
            break;
          if (v103 < v102)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v101 = sub_1A462EBC8((uint64_t)v101);
          if (v100 >= *((_QWORD *)v101 + 2))
            goto LABEL_134;
          v104 = &v101[16 * v100 + 32];
          *(_QWORD *)v104 = v102;
          *((_QWORD *)v104 + 1) = v103;
          v105 = *((_QWORD *)v101 + 2);
          if (v13 > v105)
            goto LABEL_135;
          memmove(&v101[16 * v13 + 16], &v101[16 * v13 + 32], 16 * (v105 - v13));
          v98 = v101;
          *((_QWORD *)v101 + 2) = v105 - 1;
          v13 = v105 - 1;
        }
        while (v105 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v108 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v108 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D0A0);
    v8 = sub_1A4690C00();
    *(_QWORD *)(v8 + 16) = v7;
    v108 = v8;
    __dst = (double *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v107 = *a1 + 64;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v109 = v6;
  v110 = v3;
  v111 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v11 + 24 * v10 + 16);
      v16 = *(double *)(v11 + 24 * v14 + 16);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (double *)(v107 + 24 * v14);
        v18 = v15;
        while (1)
        {
          v19 = v18;
          v18 = *v17;
          if (v16 < v15 == v19 >= *v17)
            break;
          ++v10;
          v17 += 3;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = 24 * v10;
          v21 = 24 * v14;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = v11 + v21;
              v25 = v11 + v20;
              v26 = *(_QWORD *)(v11 + v21);
              v27 = *(_QWORD *)(v11 + v21 + 8);
              v28 = *(_QWORD *)(v11 + v21 + 16);
              v29 = *(_QWORD *)(v11 + v20 - 8);
              *(_OWORD *)v24 = *(_OWORD *)(v11 + v20 - 24);
              *(_QWORD *)(v24 + 16) = v29;
              *(_QWORD *)(v25 - 24) = v26;
              *(_QWORD *)(v25 - 16) = v27;
              *(_QWORD *)(v25 - 8) = v28;
            }
            ++v23;
            v20 -= 24;
            v21 += 24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v30 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v30 >= v3)
      v30 = v3;
    if (v30 < v14)
      break;
    if (v10 != v30)
    {
      v31 = (double *)(v11 + 24 * v10);
      do
      {
        v32 = *(double *)(v11 + 24 * v10 + 16);
        v33 = v14;
        v34 = v31;
        do
        {
          if (*(v34 - 1) >= v32)
            break;
          if (!v11)
            goto LABEL_142;
          v35 = *v34;
          v36 = *((_QWORD *)v34 + 1);
          *(_OWORD *)v34 = *(_OWORD *)(v34 - 3);
          v34[2] = *(v34 - 1);
          *((_QWORD *)v34 - 2) = v36;
          *(v34 - 1) = v32;
          *(v34 - 3) = v35;
          v34 -= 3;
          ++v33;
        }
        while (v10 != v33);
        ++v10;
        v31 += 3;
      }
      while (v10 != v30);
      v10 = v30;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A462E5B0(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v38 = *((_QWORD *)v12 + 2);
    v37 = *((_QWORD *)v12 + 3);
    v13 = v38 + 1;
    v11 = v111;
    if (v38 >= v37 >> 1)
    {
      v87 = sub_1A462E5B0((char *)(v37 > 1), v38 + 1, 1, v12);
      v11 = v111;
      v12 = v87;
    }
    *((_QWORD *)v12 + 2) = v13;
    v39 = v12 + 32;
    v40 = &v12[16 * v38 + 32];
    *(_QWORD *)v40 = v14;
    *((_QWORD *)v40 + 1) = v10;
    if (v38)
    {
      while (1)
      {
        v41 = v13 - 1;
        if (v13 >= 4)
        {
          v46 = &v39[16 * v13];
          v47 = *((_QWORD *)v46 - 8);
          v48 = *((_QWORD *)v46 - 7);
          v52 = __OFSUB__(v48, v47);
          v49 = v48 - v47;
          if (v52)
            goto LABEL_120;
          v51 = *((_QWORD *)v46 - 6);
          v50 = *((_QWORD *)v46 - 5);
          v52 = __OFSUB__(v50, v51);
          v44 = v50 - v51;
          v45 = v52;
          if (v52)
            goto LABEL_121;
          v53 = v13 - 2;
          v54 = &v39[16 * v13 - 32];
          v56 = *(_QWORD *)v54;
          v55 = *((_QWORD *)v54 + 1);
          v52 = __OFSUB__(v55, v56);
          v57 = v55 - v56;
          if (v52)
            goto LABEL_123;
          v52 = __OFADD__(v44, v57);
          v58 = v44 + v57;
          if (v52)
            goto LABEL_126;
          if (v58 >= v49)
          {
            v76 = &v39[16 * v41];
            v78 = *(_QWORD *)v76;
            v77 = *((_QWORD *)v76 + 1);
            v52 = __OFSUB__(v77, v78);
            v79 = v77 - v78;
            if (v52)
              goto LABEL_130;
            v69 = v44 < v79;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v70 = *((_QWORD *)v12 + 4);
            v71 = *((_QWORD *)v12 + 5);
            v52 = __OFSUB__(v71, v70);
            v63 = v71 - v70;
            v64 = v52;
            goto LABEL_77;
          }
          v43 = *((_QWORD *)v12 + 4);
          v42 = *((_QWORD *)v12 + 5);
          v52 = __OFSUB__(v42, v43);
          v44 = v42 - v43;
          v45 = v52;
        }
        if ((v45 & 1) != 0)
          goto LABEL_122;
        v53 = v13 - 2;
        v59 = &v39[16 * v13 - 32];
        v61 = *(_QWORD *)v59;
        v60 = *((_QWORD *)v59 + 1);
        v62 = __OFSUB__(v60, v61);
        v63 = v60 - v61;
        v64 = v62;
        if (v62)
          goto LABEL_125;
        v65 = &v39[16 * v41];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v52 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v52)
          goto LABEL_128;
        if (__OFADD__(v63, v68))
          goto LABEL_129;
        if (v63 + v68 >= v44)
        {
          v69 = v44 < v68;
LABEL_83:
          if (v69)
            v41 = v53;
          goto LABEL_85;
        }
LABEL_77:
        if ((v64 & 1) != 0)
          goto LABEL_124;
        v72 = &v39[16 * v41];
        v74 = *(_QWORD *)v72;
        v73 = *((_QWORD *)v72 + 1);
        v52 = __OFSUB__(v73, v74);
        v75 = v73 - v74;
        if (v52)
          goto LABEL_127;
        if (v75 < v63)
          goto LABEL_15;
LABEL_85:
        v80 = v41 - 1;
        if (v41 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v81 = v12;
        v82 = &v39[16 * v80];
        v83 = *(_QWORD *)v82;
        v84 = &v39[16 * v41];
        v85 = *((_QWORD *)v84 + 1);
        sub_1A451BEB8((double *)(v11 + 24 * *(_QWORD *)v82), (double *)(v11 + 24 * *(_QWORD *)v84), v11 + 24 * v85, __dst);
        if (v1)
          goto LABEL_93;
        if (v85 < v83)
          goto LABEL_117;
        if (v41 > *((_QWORD *)v81 + 2))
          goto LABEL_118;
        *(_QWORD *)v82 = v83;
        *(_QWORD *)&v39[16 * v80 + 8] = v85;
        v86 = *((_QWORD *)v81 + 2);
        if (v41 >= v86)
          goto LABEL_119;
        v12 = v81;
        v13 = v86 - 1;
        memmove(&v39[16 * v41], v84 + 16, 16 * (v86 - 1 - v41));
        *((_QWORD *)v81 + 2) = v86 - 1;
        v11 = v111;
        if (v86 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v109;
    v3 = v110;
    if (v10 >= v110)
    {
      v9 = v108;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t sub_1A451B2A0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  char v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  unint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v3 = a1[1];
  result = sub_1A46918CC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_151;
    if (v3)
      return sub_1A451BCCC(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_159;
  v106 = v3;
  v102 = result;
  v100 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x1E0DEE9D8];
    v110 = MEMORY[0x1E0DEE9D8];
    v111 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_116:
      if (v12 >= 2)
      {
        v94 = *v100;
        do
        {
          v95 = v12 - 2;
          if (v12 < 2)
            goto LABEL_146;
          if (!v94)
            goto LABEL_158;
          v96 = *(_QWORD *)&v8[16 * v95 + 32];
          v97 = *(_QWORD *)&v8[16 * v12 + 24];
          sub_1A451C174((char *)(v94 + 24 * v96), (char *)(v94 + 24 * *(_QWORD *)&v8[16 * v12 + 16]), v94 + 24 * v97, v111);
          if (v1)
          {
            v91 = v110;
            goto LABEL_113;
          }
          if (v97 < v96)
            goto LABEL_147;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_1A462EBC8((uint64_t)v8);
          if (v95 >= *((_QWORD *)v8 + 2))
            goto LABEL_148;
          v98 = &v8[16 * v95 + 32];
          *(_QWORD *)v98 = v96;
          *((_QWORD *)v98 + 1) = v97;
          v99 = *((_QWORD *)v8 + 2);
          if (v12 > v99)
            goto LABEL_149;
          memmove(&v8[16 * v12 + 16], &v8[16 * v12 + 32], 16 * (v99 - v12));
          *((_QWORD *)v8 + 2) = v99 - 1;
          v12 = v99 - 1;
        }
        while (v99 > 2);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)(v110 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D080);
    v7 = sub_1A4690C00();
    *(_QWORD *)(v7 + 16) = v6;
    v110 = v7;
    v111 = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v101 = *a1 + 40;
  v8 = (char *)MEMORY[0x1E0DEE9D8];
  v11 = v106;
  v115 = *a1;
  while (2)
  {
    v13 = v9;
    v14 = v9 + 1;
    v107 = v8;
    if (v9 + 1 >= v11)
      goto LABEL_41;
    v15 = *(_QWORD *)(v10 + 24 * v14);
    v16 = *(_QWORD *)(v10 + 24 * v9);
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      v112 = sub_1A46916A4();
      swift_bridgeObjectRelease();
      if (!(v16 >> 62))
        goto LABEL_18;
LABEL_112:
      swift_bridgeObjectRetain();
      v108 = sub_1A46916A4();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    v112 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v16 >> 62)
      goto LABEL_112;
LABEL_18:
    v108 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_19:
    swift_bridgeObjectRelease();
    v14 = v13 + 2;
    v8 = v107;
    if (v13 + 2 >= v11)
    {
      v10 = v115;
      goto LABEL_32;
    }
    v104 = v13;
    v17 = v101 + 24 * v13;
    while (1)
    {
      v18 = v14;
      v19 = *(_QWORD *)(v17 - 16);
      v20 = *(_QWORD *)(v17 + 8);
      if (v20 >> 62)
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        v21 = sub_1A46916A4();
        swift_bridgeObjectRelease();
        if (!(v19 >> 62))
        {
LABEL_23:
          v22 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_24;
        }
      }
      else
      {
        v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (!(v19 >> 62))
          goto LABEL_23;
      }
      swift_bridgeObjectRetain();
      v22 = sub_1A46916A4();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_24:
      swift_bridgeObjectRelease();
      v8 = v107;
      v14 = v18;
      if (v108 < v112 == v22 >= v21)
        break;
      v14 = v18 + 1;
      v17 += 24;
      v11 = v106;
      v10 = v115;
      if (v106 == v18 + 1)
      {
        v14 = v106;
        goto LABEL_31;
      }
    }
    v11 = v106;
    v10 = v115;
LABEL_31:
    v13 = v104;
LABEL_32:
    if (v108 < v112)
    {
      if (v14 < v13)
        goto LABEL_152;
      if (v13 < v14)
      {
        v23 = 24 * v14;
        v24 = 24 * v13;
        v25 = v14;
        v26 = v13;
        do
        {
          if (v26 != --v25)
          {
            if (!v10)
              goto LABEL_157;
            v27 = v10 + v24;
            v28 = v10 + v23;
            v29 = *(_QWORD *)(v10 + v24);
            v30 = *(_QWORD *)(v10 + v24 + 8);
            v31 = *(_QWORD *)(v10 + v24 + 16);
            v32 = *(_QWORD *)(v10 + v23 - 8);
            *(_OWORD *)v27 = *(_OWORD *)(v10 + v23 - 24);
            *(_QWORD *)(v27 + 16) = v32;
            *(_QWORD *)(v28 - 24) = v29;
            *(_QWORD *)(v28 - 16) = v30;
            *(_QWORD *)(v28 - 8) = v31;
          }
          ++v26;
          v23 -= 24;
          v24 += 24;
        }
        while (v26 < v25);
      }
    }
LABEL_41:
    if (v14 >= v11)
      goto LABEL_64;
    if (__OFSUB__(v14, v13))
      goto LABEL_150;
    if (v14 - v13 >= v102)
      goto LABEL_64;
    if (__OFADD__(v13, v102))
      goto LABEL_153;
    if (v13 + v102 >= v11)
      v33 = v11;
    else
      v33 = v13 + v102;
    if (v33 >= v13)
    {
      if (v14 == v33)
        goto LABEL_64;
      v103 = v33;
      v105 = v13;
      v34 = (_QWORD *)(v10 + 24 * v14);
      while (2)
      {
        v35 = *(_QWORD *)(v10 + 24 * v14);
        v36 = v105;
        v109 = v34;
        v113 = v14;
        while (2)
        {
          v37 = *(v34 - 3);
          if (v35 >> 62)
          {
            swift_bridgeObjectRetain_n();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            v38 = sub_1A46916A4();
            swift_bridgeObjectRelease();
            if (v37 >> 62)
              goto LABEL_62;
LABEL_56:
            v39 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
          else
          {
            v38 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            if (!(v37 >> 62))
              goto LABEL_56;
LABEL_62:
            swift_bridgeObjectRetain();
            v39 = sub_1A46916A4();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          if (v39 < v38)
          {
            v10 = v115;
            if (!v115)
              goto LABEL_155;
            v35 = *v34;
            v40 = v34[1];
            v41 = v34[2];
            *(_OWORD *)v34 = *(_OWORD *)(v34 - 3);
            v34[2] = *(v34 - 1);
            *(v34 - 2) = v40;
            *(v34 - 1) = v41;
            *(v34 - 3) = v35;
            v34 -= 3;
            if (v113 == ++v36)
              goto LABEL_52;
            continue;
          }
          break;
        }
        v10 = v115;
LABEL_52:
        v14 = v113 + 1;
        v34 = v109 + 3;
        if (v113 + 1 != v103)
          continue;
        break;
      }
      v14 = v103;
      v8 = v107;
      v13 = v105;
LABEL_64:
      if (v14 < v13)
        goto LABEL_145;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1A462E5B0(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
      v43 = *((_QWORD *)v8 + 2);
      v42 = *((_QWORD *)v8 + 3);
      v12 = v43 + 1;
      v10 = v115;
      if (v43 >= v42 >> 1)
      {
        v93 = sub_1A462E5B0((char *)(v42 > 1), v43 + 1, 1, v8);
        v10 = v115;
        v8 = v93;
      }
      *((_QWORD *)v8 + 2) = v12;
      v44 = v8 + 32;
      v45 = &v8[16 * v43 + 32];
      *(_QWORD *)v45 = v13;
      *((_QWORD *)v45 + 1) = v14;
      v114 = v14;
      if (v43)
      {
        while (2)
        {
          v46 = v12 - 1;
          if (v12 >= 4)
          {
            v51 = &v44[16 * v12];
            v52 = *((_QWORD *)v51 - 8);
            v53 = *((_QWORD *)v51 - 7);
            v57 = __OFSUB__(v53, v52);
            v54 = v53 - v52;
            if (v57)
              goto LABEL_134;
            v56 = *((_QWORD *)v51 - 6);
            v55 = *((_QWORD *)v51 - 5);
            v57 = __OFSUB__(v55, v56);
            v49 = v55 - v56;
            v50 = v57;
            if (v57)
              goto LABEL_135;
            v58 = v12 - 2;
            v59 = &v44[16 * v12 - 32];
            v61 = *(_QWORD *)v59;
            v60 = *((_QWORD *)v59 + 1);
            v57 = __OFSUB__(v60, v61);
            v62 = v60 - v61;
            if (v57)
              goto LABEL_137;
            v57 = __OFADD__(v49, v62);
            v63 = v49 + v62;
            if (v57)
              goto LABEL_140;
            if (v63 >= v54)
            {
              v81 = &v44[16 * v46];
              v83 = *(_QWORD *)v81;
              v82 = *((_QWORD *)v81 + 1);
              v57 = __OFSUB__(v82, v83);
              v84 = v82 - v83;
              if (v57)
                goto LABEL_144;
              v74 = v49 < v84;
            }
            else
            {
LABEL_83:
              if ((v50 & 1) != 0)
                goto LABEL_136;
              v58 = v12 - 2;
              v64 = &v44[16 * v12 - 32];
              v66 = *(_QWORD *)v64;
              v65 = *((_QWORD *)v64 + 1);
              v67 = __OFSUB__(v65, v66);
              v68 = v65 - v66;
              v69 = v67;
              if (v67)
                goto LABEL_139;
              v70 = &v44[16 * v46];
              v72 = *(_QWORD *)v70;
              v71 = *((_QWORD *)v70 + 1);
              v57 = __OFSUB__(v71, v72);
              v73 = v71 - v72;
              if (v57)
                goto LABEL_142;
              if (__OFADD__(v68, v73))
                goto LABEL_143;
              if (v68 + v73 < v49)
                goto LABEL_95;
              v74 = v49 < v73;
            }
            if (v74)
              v46 = v58;
          }
          else
          {
            if (v12 == 3)
            {
              v48 = *((_QWORD *)v8 + 4);
              v47 = *((_QWORD *)v8 + 5);
              v57 = __OFSUB__(v47, v48);
              v49 = v47 - v48;
              v50 = v57;
              goto LABEL_83;
            }
            v75 = *((_QWORD *)v8 + 4);
            v76 = *((_QWORD *)v8 + 5);
            v57 = __OFSUB__(v76, v75);
            v68 = v76 - v75;
            v69 = v57;
LABEL_95:
            if ((v69 & 1) != 0)
              goto LABEL_138;
            v77 = &v44[16 * v46];
            v79 = *(_QWORD *)v77;
            v78 = *((_QWORD *)v77 + 1);
            v57 = __OFSUB__(v78, v79);
            v80 = v78 - v79;
            if (v57)
              goto LABEL_141;
            if (v80 < v68)
              goto LABEL_14;
          }
          v85 = v46 - 1;
          if (v46 - 1 >= v12)
          {
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
            goto LABEL_154;
          }
          if (!v10)
            goto LABEL_156;
          v86 = v8;
          v87 = &v44[16 * v85];
          v88 = *(_QWORD *)v87;
          v89 = &v44[16 * v46];
          v90 = *((_QWORD *)v89 + 1);
          sub_1A451C174((char *)(v10 + 24 * *(_QWORD *)v87), (char *)(v10 + 24 * *(_QWORD *)v89), v10 + 24 * v90, v111);
          v91 = v110;
          if (v1)
          {
LABEL_113:
            swift_bridgeObjectRelease();
            *(_QWORD *)(v91 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
          if (v90 < v88)
            goto LABEL_131;
          if (v46 > *((_QWORD *)v86 + 2))
            goto LABEL_132;
          *(_QWORD *)v87 = v88;
          *(_QWORD *)&v44[16 * v85 + 8] = v90;
          v92 = *((_QWORD *)v86 + 2);
          if (v46 >= v92)
            goto LABEL_133;
          v8 = v86;
          v12 = v92 - 1;
          memmove(&v44[16 * v46], v89 + 16, 16 * (v92 - 1 - v46));
          *((_QWORD *)v86 + 2) = v92 - 1;
          v10 = v115;
          if (v92 <= 2)
            goto LABEL_14;
          continue;
        }
      }
      v12 = 1;
LABEL_14:
      v11 = v106;
      v9 = v114;
      if (v114 >= v106)
        goto LABEL_116;
      continue;
    }
    break;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t sub_1A451BCCC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v13 = result;
  if (a3 != a2)
  {
    v15 = *a4;
    v4 = (_QWORD *)(*a4 + 24 * a3);
LABEL_5:
    v5 = *(_QWORD *)(v15 + 24 * a3);
    v6 = v13;
    v14 = v4;
    v16 = a3;
    while (1)
    {
      v7 = *(v4 - 3);
      if (v5 >> 62)
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        v8 = sub_1A46916A4();
        swift_bridgeObjectRelease();
        if (!(v7 >> 62))
        {
LABEL_8:
          v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_9;
        }
      }
      else
      {
        v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (!(v7 >> 62))
          goto LABEL_8;
      }
      swift_bridgeObjectRetain();
      v9 = sub_1A46916A4();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_9:
      result = swift_bridgeObjectRelease();
      if (v9 >= v8)
        goto LABEL_4;
      if (!v15)
      {
        __break(1u);
        return result;
      }
      v5 = *v4;
      v10 = v4[1];
      v11 = v4[2];
      *(_OWORD *)v4 = *(_OWORD *)(v4 - 3);
      v4[2] = *(v4 - 1);
      *(v4 - 2) = v10;
      *(v4 - 1) = v11;
      *(v4 - 3) = v5;
      v4 -= 3;
      if (v16 == ++v6)
      {
LABEL_4:
        a3 = v16 + 1;
        v4 = v14 + 3;
        if (v16 + 1 == a2)
          return result;
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_1A451BEB8(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  double *v13;
  double *v14;
  double *v15;
  __int128 v16;
  double *v17;
  unint64_t v18;
  double *v19;
  double *v20;
  __int128 v21;
  __int128 v22;
  uint64_t result;
  char *v24;
  double *v25;
  double *v26;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = ((char *)a2 - (char *)__src) / 24;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  v26 = __src;
  v25 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[3 * v11] <= __dst)
        memmove(__dst, a2, 24 * v11);
      v17 = &v4[3 * v11];
      v24 = (char *)v17;
      v26 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        v18 = a3 - 24;
        do
        {
          v19 = (double *)(v18 + 24);
          if (*(v6 - 1) >= *(v17 - 1))
          {
            v24 = (char *)(v17 - 3);
            if (v19 < v17 || v18 >= (unint64_t)v17 || v19 != v17)
            {
              v22 = *(_OWORD *)(v17 - 3);
              *(double *)(v18 + 16) = *(v17 - 1);
              *(_OWORD *)v18 = v22;
            }
            v20 = v6;
            v17 -= 3;
            if (v6 <= v7)
              break;
          }
          else
          {
            v20 = v6 - 3;
            if (v19 != v6 || v18 >= (unint64_t)v6)
            {
              v21 = *(_OWORD *)v20;
              *(double *)(v18 + 16) = *(v6 - 1);
              *(_OWORD *)v18 = v21;
            }
            v26 = v6 - 3;
            if (v20 <= v7)
              break;
          }
          v18 -= 24;
          v6 = v20;
        }
        while (v17 > v4);
      }
LABEL_40:
      sub_1A462E750((void **)&v26, (const void **)&v25, &v24);
      return 1;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[3 * v9] <= __dst)
      memmove(__dst, __src, 24 * v9);
    v12 = &v4[3 * v9];
    v24 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      v13 = v4;
      while (1)
      {
        if (v13[2] >= v6[2])
        {
          v4 = v13 + 3;
          v15 = v13;
          v14 = v6;
          if (v7 == v13)
          {
            v13 += 3;
            if (v7 < v4)
              goto LABEL_18;
          }
          else
          {
            v13 += 3;
          }
        }
        else
        {
          v14 = v6 + 3;
          v15 = v6;
          if (v7 == v6 && v7 < v14)
            goto LABEL_18;
        }
        v16 = *(_OWORD *)v15;
        v7[2] = v15[2];
        *(_OWORD *)v7 = v16;
LABEL_18:
        v7 += 3;
        if (v13 < v12)
        {
          v6 = v14;
          if ((unint64_t)v14 < a3)
            continue;
        }
        v25 = v4;
        v26 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A451C174(char *a1, char *__src, unint64_t a3, char *a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  char *v17;
  unint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  uint64_t result;
  char *v31;
  uint64_t v32;
  char *v34;
  char *v35;
  char *v36;
  char *v37;

  v4 = __src;
  v5 = __src - a1;
  v6 = (__src - a1) / 24;
  v7 = a3 - (_QWORD)__src;
  v8 = (uint64_t)(a3 - (_QWORD)__src) / 24;
  v37 = a1;
  v36 = a4;
  if (v6 >= v8)
  {
    if (v7 < -23)
      goto LABEL_52;
    if (a4 != __src || &__src[24 * v8] <= a4)
      memmove(a4, __src, 24 * v8);
    v17 = &a4[24 * v8];
    v35 = v17;
    v37 = v4;
    if (a1 >= v4 || v7 < 24)
    {
LABEL_51:
      sub_1A462E750((void **)&v37, (const void **)&v36, &v35);
      return 1;
    }
    v18 = a3 - 24;
    v19 = v4;
    while (1)
    {
      v34 = v17;
      v21 = *((_QWORD *)v17 - 3);
      v17 -= 24;
      v20 = v21;
      v23 = *((_QWORD *)v19 - 3);
      v19 -= 24;
      v22 = v23;
      if (v20 >> 62)
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        v32 = sub_1A46916A4();
        swift_bridgeObjectRelease();
        if (v22 >> 62)
        {
LABEL_49:
          swift_bridgeObjectRetain();
          v24 = sub_1A46916A4();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
      }
      else
      {
        v32 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v22 >> 62)
          goto LABEL_49;
      }
      v24 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
LABEL_35:
      v25 = (char *)(v18 + 24);
      swift_bridgeObjectRelease();
      if (v24 >= v32)
      {
        v35 = v17;
        if (v25 < v34 || v18 >= (unint64_t)v34 || v25 != v34)
        {
          v27 = *(_OWORD *)v17;
          *(_QWORD *)(v18 + 16) = *((_QWORD *)v17 + 2);
          *(_OWORD *)v18 = v27;
        }
        v19 = v4;
      }
      else
      {
        v17 = v34;
        if (v25 != v4 || v18 >= (unint64_t)v4)
        {
          v26 = *(_OWORD *)v19;
          *(_QWORD *)(v18 + 16) = *((_QWORD *)v19 + 2);
          *(_OWORD *)v18 = v26;
        }
        v37 = v19;
      }
      if (v19 > a1)
      {
        v18 -= 24;
        v4 = v19;
        if (v17 > a4)
          continue;
      }
      goto LABEL_51;
    }
  }
  if (v5 >= -23)
  {
    if (a4 != a1 || &a1[24 * v6] <= a4)
      memmove(a4, a1, 24 * v6);
    v31 = &a4[24 * v6];
    v35 = v31;
    if ((unint64_t)v4 < a3 && v5 >= 24)
    {
      v9 = a4;
      v10 = a1;
      while (1)
      {
        v11 = *(_QWORD *)v9;
        if (*(_QWORD *)v4 >> 62)
        {
          swift_bridgeObjectRetain_n();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          v12 = sub_1A46916A4();
          swift_bridgeObjectRelease();
          if (v11 >> 62)
          {
LABEL_24:
            swift_bridgeObjectRetain();
            v13 = sub_1A46916A4();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_12;
          }
        }
        else
        {
          v12 = *(_QWORD *)((*(_QWORD *)v4 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          if (v11 >> 62)
            goto LABEL_24;
        }
        v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
LABEL_12:
        swift_bridgeObjectRelease();
        if (v13 >= v12)
        {
          if (v10 != v9)
          {
            v16 = *(_OWORD *)v9;
            *((_QWORD *)v10 + 2) = *((_QWORD *)v9 + 2);
            *(_OWORD *)v10 = v16;
          }
          v9 += 24;
          v36 = v9;
          v14 = v4;
        }
        else
        {
          v14 = v4 + 24;
          if (v10 < v4 || v10 >= v14 || v10 != v4)
          {
            v15 = *(_OWORD *)v4;
            *((_QWORD *)v10 + 2) = *((_QWORD *)v4 + 2);
            *(_OWORD *)v10 = v15;
          }
        }
        v10 += 24;
        if (v9 < v31)
        {
          v4 = v14;
          if ((unint64_t)v14 < a3)
            continue;
        }
        v37 = v10;
        goto LABEL_51;
      }
    }
    goto LABEL_51;
  }
LABEL_52:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A451C640(uint64_t a1, unint64_t a2, unsigned __int8 *a3)
{
  unint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  double v24;
  double v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  double v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  double v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  float64x2_t *v78;
  float64x2_t *v79;
  float64x2_t v80;
  float64x2_t v81;
  float64x2_t v82;
  float64x2_t v83;
  uint64_t v84;
  unint64_t v85;
  float64x2_t *v86;
  float64x2_t *v87;
  float64x2_t v88;
  float64x2_t v89;
  float64x2_t v90;
  float64x2_t v91;
  float64x2_t v92;
  float64x2_t v93;
  float64x2_t v94;
  float64x2_t v95;
  double v96;
  double v97;
  uint64_t v98;
  unint64_t v99;
  float64x2_t *v100;
  float64x2_t *v101;
  float64x2_t v102;
  float64x2_t v103;
  float64x2_t v104;
  float64x2_t v105;
  float64x2_t v106;
  float64x2_t v107;
  float64x2_t v108;
  float64x2_t v109;
  double v110;
  double v111;
  double v112;
  double v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unsigned int v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t *v125;

  v3 = a2;
  v5 = *a3;
  if (a2 >> 62)
  {
LABEL_132:
    swift_bridgeObjectRetain();
    v6 = sub_1A46916A4();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      v7 = a1 + 16;
      v8 = v3 & 0xC000000000000001;
      v125 = (unint64_t *)(a1 + 24);
      swift_beginAccess();
      a1 = 0;
      v9 = 0;
      v122 = v3 & 0xFFFFFFFFFFFFFF8;
      v10 = 1.79769313e308;
      v118 = v3 & 0xC000000000000001;
      v119 = v3;
      v121 = v6;
      v120 = v5;
      while (1)
      {
        if (v8)
        {
          v18 = MEMORY[0x1A859ECE0](v9, v3);
          v19 = v9 + 1;
          if (__OFADD__(v9, 1))
            goto LABEL_126;
        }
        else
        {
          if (v9 >= *(_QWORD *)(v122 + 16))
            goto LABEL_127;
          v18 = swift_retain();
          v19 = v9 + 1;
          if (__OFADD__(v9, 1))
            goto LABEL_126;
        }
        if ((_DWORD)v5)
        {
          if ((_DWORD)v5 == 1)
          {
            v20 = a1;
            a1 = v6;
            v21 = v5;
            v5 = *v125;
            if ((*v125 & 0x8000000000000000) != 0)
              goto LABEL_128;
            v123 = v9;
            v124 = v18;
            if (v5)
            {
              v22 = v18 + 16;
              swift_beginAccess();
              swift_beginAccess();
              v3 = 0;
              v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
              while (v3 < *(_QWORD *)(*(_QWORD *)v7 + 16))
              {
                if (v3 >= *(_QWORD *)(*(_QWORD *)v22 + 16))
                  goto LABEL_119;
                v24 = *(double *)(*(_QWORD *)v7 + 8 * v3 + 32);
                v25 = *(double *)(*(_QWORD *)v22 + 8 * v3 + 32);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v23 = sub_1A4438D64(0, v23[2] + 1, 1, v23);
                v27 = v23[2];
                v26 = v23[3];
                if (v27 >= v26 >> 1)
                  v23 = sub_1A4438D64((_QWORD *)(v26 > 1), v27 + 1, 1, v23);
                ++v3;
                v23[2] = v27 + 1;
                *(double *)&v23[v27 + 4] = v24 - v25;
                if (v5 == v3)
                  goto LABEL_54;
              }
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
              goto LABEL_124;
            }
            v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_54:
            type metadata accessor for RDVector();
            result = swift_initStackObject();
            *(_QWORD *)(result + 16) = v23;
            v58 = v23[2];
            *(_QWORD *)(result + 24) = v58;
            if (v58)
            {
              v59 = v23[4];
              v3 = v119;
              v5 = v21;
              if ((v59 & 0x7FF0000000000000) != 0)
              {
                swift_release();
                v6 = a1;
                goto LABEL_63;
              }
              v6 = a1;
              if ((v59 & 0xFFFFFFFFFFFFFLL) != 0)
              {
                swift_release();
LABEL_63:
                a1 = v20;
LABEL_64:
                v8 = v118;
LABEL_65:
                v60 = *v125;
                if ((*v125 & 0x8000000000000000) != 0)
                  goto LABEL_131;
                if (v60)
                {
                  v61 = v124 + 16;
                  swift_beginAccess();
                  swift_beginAccess();
                  v62 = *(_QWORD *)v7;
                  v63 = *(_QWORD *)(*(_QWORD *)v7 + 16);
                  if (!v63)
                    goto LABEL_124;
                  v64 = *(_QWORD *)v61;
                  v65 = *(_QWORD *)(*(_QWORD *)v61 + 16);
                  if (!v65)
                    goto LABEL_125;
                  v66 = v62 + 32;
                  v67 = v64 + 32;
                  v68 = *(double *)(v64 + 32);
                  v69 = *(double *)(v62 + 32);
                  v70 = v69 * v69;
                  v71 = v68 * v68;
                  v72 = v69 * v68 + 0.0;
                  if (v60 != 1)
                  {
                    v73 = v65 - 1;
                    if (v65 - 1 >= v63 - 1)
                      v73 = v63 - 1;
                    if (v73 >= v60 - 2)
                      v73 = v60 - 2;
                    v74 = v73 + 1;
                    if (v74 > 4)
                    {
                      v98 = v74 & 3;
                      if ((v74 & 3) == 0)
                        v98 = 4;
                      v99 = v74 - v98;
                      v75 = v99 + 1;
                      v100 = (float64x2_t *)(v62 + 56);
                      v101 = (float64x2_t *)(v64 + 56);
                      do
                      {
                        v102 = v100[-1];
                        v103 = v101[-1];
                        v104 = vmulq_f64(v102, v102);
                        v105 = vmulq_f64(*v100, *v100);
                        v106 = vmulq_f64(v103, v103);
                        v107 = vmulq_f64(*v101, *v101);
                        v108 = vmulq_f64(v102, v103);
                        v109 = vmulq_f64(*v100, *v101);
                        v72 = v72 + v108.f64[0] + v108.f64[1] + v109.f64[0] + v109.f64[1];
                        v70 = v70 + v104.f64[0] + v104.f64[1] + v105.f64[0] + v105.f64[1];
                        v71 = v71 + v106.f64[0] + v106.f64[1] + v107.f64[0] + v107.f64[1];
                        v100 += 2;
                        v101 += 2;
                        v99 -= 4;
                      }
                      while (v99);
                    }
                    else
                    {
                      v75 = 1;
                    }
                    while (v63 != v75)
                    {
                      if (v75 >= v65)
                        goto LABEL_125;
                      v110 = *(double *)(v66 + 8 * v75);
                      v111 = *(double *)(v67 + 8 * v75);
                      v70 = v70 + v110 * v110;
                      v71 = v71 + v111 * v111;
                      v72 = v72 + v110 * v111;
                      if (v60 == ++v75)
                        goto LABEL_100;
                    }
LABEL_124:
                    __break(1u);
LABEL_125:
                    __break(1u);
LABEL_126:
                    __break(1u);
LABEL_127:
                    __break(1u);
LABEL_128:
                    __break(1u);
LABEL_129:
                    __break(1u);
LABEL_130:
                    __break(1u);
LABEL_131:
                    __break(1u);
                    goto LABEL_132;
                  }
                }
                else
                {
                  v72 = 0.0;
                  v70 = 0.0;
                  v71 = 0.0;
                }
LABEL_100:
                swift_release();
                v112 = sqrt(v70) * sqrt(v71);
                v113 = 1.0 - v72 / v112;
                if ((*(_QWORD *)&v112 & 0x7FFFFFFFFFFFFFFFLL) == 0)
                  v113 = 1.0;
                v16 = sqrt(fabs(v113));
LABEL_103:
                v17 = v19;
                v9 = v123;
                goto LABEL_9;
              }
              if (v58 == 1)
              {
                swift_release();
LABEL_59:
                a1 = v20;
                v8 = v118;
              }
              else
              {
                v114 = v23[5];
                a1 = v20;
                if ((v114 & 0x7FF0000000000000) != 0)
                {
                  swift_release();
                  goto LABEL_64;
                }
                v8 = v118;
                if ((v114 & 0xFFFFFFFFFFFFFLL) != 0)
                {
LABEL_109:
                  swift_release();
                  goto LABEL_65;
                }
                if (v58 != 2)
                {
                  v115 = 6;
                  while (1)
                  {
                    v116 = v115 - 3;
                    if (__OFADD__(v115 - 4, 1))
                      break;
                    v117 = v23[v115];
                    if ((v117 & 0x7FF0000000000000) != 0 || (v117 & 0xFFFFFFFFFFFFFLL) != 0)
                      goto LABEL_109;
                    ++v115;
                    if (v116 == v58)
                      goto LABEL_116;
                  }
                  __break(1u);
                  return result;
                }
LABEL_116:
                swift_release();
              }
              swift_release();
              v16 = 0.0;
              goto LABEL_103;
            }
            swift_release();
            v3 = v119;
            v5 = v21;
            v6 = a1;
            goto LABEL_59;
          }
          v43 = *v125;
          if ((*v125 & 0x8000000000000000) != 0)
            goto LABEL_130;
          v44 = v3;
          if (v43)
          {
            v3 = v18;
            v45 = v18 + 16;
            swift_beginAccess();
            swift_beginAccess();
            v46 = *(_QWORD *)v7;
            v47 = *(_QWORD *)(*(_QWORD *)v7 + 16);
            if (!v47)
              goto LABEL_121;
            v48 = *(_QWORD *)v45;
            v49 = *(_QWORD *)(*(_QWORD *)v45 + 16);
            if (!v49)
              goto LABEL_123;
            v50 = v46 + 32;
            v51 = v48 + 32;
            v52 = *(double *)(v48 + 32);
            v53 = *(double *)(v46 + 32);
            v12 = v53 * v53;
            v13 = v52 * v52;
            v11 = v53 * v52 + 0.0;
            if (v43 != 1)
            {
              v54 = v49 - 1;
              if (v49 - 1 >= v47 - 1)
                v54 = v47 - 1;
              if (v54 >= v43 - 2)
                v54 = v43 - 2;
              v55 = v54 + 1;
              if (v55 > 4)
              {
                v84 = v55 & 3;
                if ((v55 & 3) == 0)
                  v84 = 4;
                v85 = v55 - v84;
                v56 = v85 + 1;
                v86 = (float64x2_t *)(v46 + 56);
                v87 = (float64x2_t *)(v48 + 56);
                do
                {
                  v88 = v86[-1];
                  v89 = v87[-1];
                  v90 = vmulq_f64(v88, v88);
                  v91 = vmulq_f64(*v86, *v86);
                  v92 = vmulq_f64(v89, v89);
                  v93 = vmulq_f64(*v87, *v87);
                  v94 = vmulq_f64(v88, v89);
                  v95 = vmulq_f64(*v86, *v87);
                  v11 = v11 + v94.f64[0] + v94.f64[1] + v95.f64[0] + v95.f64[1];
                  v12 = v12 + v90.f64[0] + v90.f64[1] + v91.f64[0] + v91.f64[1];
                  v13 = v13 + v92.f64[0] + v92.f64[1] + v93.f64[0] + v93.f64[1];
                  v86 += 2;
                  v87 += 2;
                  v85 -= 4;
                }
                while (v85);
              }
              else
              {
                v56 = 1;
              }
              while (v47 != v56)
              {
                if (v56 >= v49)
                  goto LABEL_123;
                v96 = *(double *)(v50 + 8 * v56);
                v97 = *(double *)(v51 + 8 * v56);
                v12 = v12 + v96 * v96;
                v13 = v13 + v97 * v97;
                v11 = v11 + v96 * v97;
                if (v43 == ++v56)
                  goto LABEL_5;
              }
              goto LABEL_121;
            }
          }
          else
          {
            v11 = 0.0;
            v12 = 0.0;
            v13 = 0.0;
          }
LABEL_5:
          swift_release();
          v14 = sqrt(v12) * sqrt(v13);
          if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFLL) != 0)
            v15 = v11 / v14;
          else
            v15 = 0.0;
          v16 = acos(v15) / 3.14159265;
          v17 = v19;
          v3 = v44;
          v6 = v121;
        }
        else
        {
          v28 = *v125;
          if ((*v125 & 0x8000000000000000) != 0)
            goto LABEL_129;
          v5 = v8;
          v29 = v6;
          v30 = v3;
          if (v28)
          {
            v3 = v18;
            v31 = v18 + 16;
            swift_beginAccess();
            swift_beginAccess();
            v32 = *(_QWORD *)v7;
            v33 = *(_QWORD *)(*(_QWORD *)v7 + 16);
            if (!v33)
              goto LABEL_120;
            v34 = *(_QWORD *)v31;
            v35 = *(_QWORD *)(*(_QWORD *)v31 + 16);
            if (!v35)
              goto LABEL_122;
            v36 = v32 + 32;
            v37 = v34 + 32;
            v38 = *(double *)(v32 + 32) - *(double *)(v34 + 32);
            v39 = v38 * v38;
            if (v28 != 1)
            {
              v40 = v35 - 1;
              if (v35 - 1 >= v33 - 1)
                v40 = v33 - 1;
              if (v40 >= v28 - 2)
                v40 = v28 - 2;
              v41 = v40 + 1;
              if (v41 > 4)
              {
                v76 = v41 & 3;
                if ((v41 & 3) == 0)
                  v76 = 4;
                v77 = v41 - v76;
                v42 = v77 + 1;
                v78 = (float64x2_t *)(v32 + 56);
                v79 = (float64x2_t *)(v34 + 56);
                do
                {
                  v80 = vsubq_f64(v78[-1], v79[-1]);
                  v81 = vsubq_f64(*v78, *v79);
                  v82 = vmulq_f64(v80, v80);
                  v83 = vmulq_f64(v81, v81);
                  v39 = v39 + v82.f64[0] + v82.f64[1] + v83.f64[0] + v83.f64[1];
                  v78 += 2;
                  v79 += 2;
                  v77 -= 4;
                }
                while (v77);
              }
              else
              {
                v42 = 1;
              }
              while (v33 != v42)
              {
                if (v42 >= v35)
                  goto LABEL_122;
                v39 = v39
                    + (*(double *)(v36 + 8 * v42) - *(double *)(v37 + 8 * v42))
                    * (*(double *)(v36 + 8 * v42) - *(double *)(v37 + 8 * v42));
                if (v28 == ++v42)
                  goto LABEL_84;
              }
              goto LABEL_120;
            }
          }
          else
          {
            v39 = 0.0;
          }
LABEL_84:
          swift_release();
          v16 = sqrt(v39);
          v17 = v19;
          v3 = v30;
          v6 = v29;
          v8 = v5;
          v5 = v120;
        }
LABEL_9:
        if (v16 < v10)
        {
          a1 = v9;
          v10 = v16;
        }
        v9 = v17;
        if (v17 == v6)
        {
          swift_bridgeObjectRelease();
          return a1;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

double sub_1A451CF3C(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  double v9;
  _BYTE v10[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71F808);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A451D12C();
  sub_1A4691D28();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for RDVector();
    v10[15] = 0;
    sub_1A451D170(&qword_1EE71F818, (uint64_t)&protocol conformance descriptor for RDVector);
    sub_1A46917C4();
    v10[14] = 1;
    swift_retain();
    sub_1A46917A0();
    v2 = v9;
    v10[13] = 2;
    sub_1A46917AC();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_release();
  }
  return v2;
}

unint64_t sub_1A451D12C()
{
  unint64_t result;

  result = qword_1EE71F810;
  if (!qword_1EE71F810)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469DFF8, &type metadata for KMeans.ClusterStats.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71F810);
  }
  return result;
}

uint64_t sub_1A451D170(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for RDVector();
    result = MEMORY[0x1A85A0000](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A451D1B0()
{
  unint64_t result;

  result = qword_1EE71F830;
  if (!qword_1EE71F830)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469DFB8, &type metadata for KMeans.TooManyRecursionComputingClusters);
    atomic_store(result, (unint64_t *)&qword_1EE71F830);
  }
  return result;
}

unint64_t sub_1A451D1F4()
{
  unint64_t result;

  result = qword_1EE71F838;
  if (!qword_1EE71F838)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469DF78, &type metadata for KMeans.ClusterTooSmallToSplit);
    atomic_store(result, (unint64_t *)&qword_1EE71F838);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_1A451D260()
{
  unint64_t result;

  result = qword_1EE71F840;
  if (!qword_1EE71F840)
  {
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEBBE0], MEMORY[0x1E0DEBB98]);
    atomic_store(result, (unint64_t *)&qword_1EE71F840);
  }
  return result;
}

unint64_t sub_1A451D2A4()
{
  unint64_t result;

  result = qword_1EE71F848;
  if (!qword_1EE71F848)
  {
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEBBC0], MEMORY[0x1E0DEBB98]);
    atomic_store(result, (unint64_t *)&qword_1EE71F848);
  }
  return result;
}

ValueMetadata *type metadata accessor for KMeans.ClusterTooSmallToSplit()
{
  return &type metadata for KMeans.ClusterTooSmallToSplit;
}

ValueMetadata *type metadata accessor for KMeans.TooManyRecursionComputingClusters()
{
  return &type metadata for KMeans.TooManyRecursionComputingClusters;
}

uint64_t storeEnumTagSinglePayload for KMeans.ClusterStats.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A451D354 + 4 * byte_1A469DD75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A451D388 + 4 * byte_1A469DD70[v4]))();
}

uint64_t sub_1A451D388(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A451D390(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A451D398);
  return result;
}

uint64_t sub_1A451D3A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A451D3ACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A451D3B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A451D3B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KMeans.ClusterStats.CodingKeys()
{
  return &type metadata for KMeans.ClusterStats.CodingKeys;
}

unint64_t sub_1A451D3D8()
{
  unint64_t result;

  result = qword_1EE71F850;
  if (!qword_1EE71F850)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469DF50, &type metadata for KMeans.ClusterStats.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71F850);
  }
  return result;
}

unint64_t sub_1A451D420()
{
  unint64_t result;

  result = qword_1EE71F858;
  if (!qword_1EE71F858)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469DEC0, &type metadata for KMeans.ClusterStats.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71F858);
  }
  return result;
}

unint64_t sub_1A451D468()
{
  unint64_t result;

  result = qword_1EE71F860;
  if (!qword_1EE71F860)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469DEE8, &type metadata for KMeans.ClusterStats.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71F860);
  }
  return result;
}

uint64_t sub_1A451D4AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265746E6563 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65636E6169726176 && a2 == 0xE800000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t REMCustomSmartListFilterDescriptor.__allocating_init(data:minimumSupportedVersion:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  BOOL v4;
  BOOL v6;

  v4 = *MEMORY[0x1E0D84B50] != a3 && *MEMORY[0x1E0D84B40] == a3;
  v6 = v4;
  return sub_1A452280C(a1, a2, (unsigned __int8 *)&v6);
}

void *REMCustomSmartListFilterDescriptor.toData()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  BOOL v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter();
  v4 = v2 != *MEMORY[0x1E0D84B50] && v2 == *MEMORY[0x1E0D84B40];
  LOBYTE(v10[0]) = v4;
  sub_1A451DD90((unsigned __int8 *)v10);
  if (!v0)
  {
    v5 = (void *)objc_opt_self();
    v6 = (void *)sub_1A46906F0();
    swift_bridgeObjectRelease();
    v10[0] = 0;
    v7 = objc_msgSend(v5, sel_dataWithJSONObject_options_error_, v6, 0, v10);

    v8 = v10[0];
    if (v7)
    {
      v1 = (void *)sub_1A468FFC4();

    }
    else
    {
      v1 = v8;
      sub_1A468FE68();

      swift_willThrow();
    }
  }
  return v1;
}

uint64_t REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  BOOL v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *MEMORY[0x1E0D84B50];
  v10 = *MEMORY[0x1E0D84B40];
  if (*MEMORY[0x1E0D84B40] <= *MEMORY[0x1E0D84B50])
    v11 = *MEMORY[0x1E0D84B50];
  else
    v11 = *MEMORY[0x1E0D84B40];
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation))
    v12 = v11;
  else
    v12 = *MEMORY[0x1E0D84B50];
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
  if (v13)
  {
    if (v13 == 1)
    {
      sub_1A44F4804(1uLL);
      v15 = v9;
    }
    else
    {
      if (v13 == 2)
        goto LABEL_20;
      if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags + 16) & 1) == 0
        && *(_QWORD *)(*(_QWORD *)(v1
                                 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags
                                 + 8)
                     + 16) == 0)
      {
        v15 = *MEMORY[0x1E0D84B50];
      }
      else
      {
        v15 = *MEMORY[0x1E0D84B40];
      }
    }
  }
  else
  {
    sub_1A44F4804(0);
    v15 = v10;
  }
  if (v15 > v12)
    v12 = v15;
LABEL_20:
  sub_1A444ABF4(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v4, (uint64_t *)&unk_1EE71ED00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1A445404C((uint64_t)v4, (uint64_t *)&unk_1EE71ED00);
  }
  else
  {
    sub_1A452348C((uint64_t)v4, (uint64_t)v8);
    sub_1A451E440();
    if (v16 > v12)
      v12 = v16;
    sub_1A45234D0((uint64_t)v8);
  }
  v17 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
  v18 = v17 == 5;
  if (v17 >= 5)
  {
    v19 = v10;
    if (!v18)
      goto LABEL_29;
  }
  else
  {
    v19 = v9;
  }
  if (v19 > v12)
    v12 = v19;
LABEL_29:
  v20 = *(_QWORD **)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
  if (v20)
  {
    v21 = sub_1A4465258(v20, qword_1E4C105B8);
    v22 = v10 <= v12 ? v12 : v10;
    if (v21)
      v12 = v22;
  }
  v23 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
  if (v10 <= v12)
    v24 = v12;
  else
    v24 = v10;
  if ((v23 & 1) != 0 || v23 == 2)
    v26 = v12;
  else
    v26 = v24;
  v28 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  v27 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 8);
  v30 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 16);
  v29 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
  v31 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32);
  v32 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40);
  v33 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48);
  if (v33 > 1)
  {
    if (v33 == 255)
      goto LABEL_53;
    if (v30 | v27 | v28 | v29 | v31 | v32)
    {
      sub_1A44F4820(1, 0, 0, v29, *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 32), *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 40), 2);
      v9 = v10;
      goto LABEL_51;
    }
  }
  else if (*(_BYTE *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48))
  {
    v37 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 24);
    swift_bridgeObjectRetain();
    v29 = v37;
  }
  sub_1A44F4820(v28, v27, v30, v29, v31, v32, v33);
LABEL_51:
  if (v9 > v26)
    v26 = v9;
LABEL_53:
  if (v10 <= v26)
    v34 = v26;
  else
    v34 = v10;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists))
    return v34;
  else
    return v26;
}

uint64_t static REMCustomSmartListFilterDescriptor.DataSerializationVersion.< infix(_:_:)(_BYTE *a1, _BYTE *a2)
{
  return *a2 & ~*a1 & 1;
}

uint64_t REMCustomSmartListFilterDescriptor.DataSerializationVersion.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 2;
  else
    return 1;
}

uint64_t REMCustomSmartListFilterDescriptor.DataSerializationVersion.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if ((unsigned __int16)result == 2)
    v2 = 1;
  else
    v2 = 2;
  if ((unsigned __int16)result == 1)
    v3 = 0;
  else
    v3 = v2;
  *a2 = v3;
  return result;
}

uint64_t sub_1A451DAE8()
{
  sub_1A4691C8C();
  sub_1A4691CB0();
  return sub_1A4691CC8();
}

uint64_t sub_1A451DB34()
{
  return sub_1A4691CB0();
}

uint64_t sub_1A451DB68()
{
  sub_1A4691C8C();
  sub_1A4691CB0();
  return sub_1A4691CC8();
}

unsigned __int16 *sub_1A451DBB0@<X0>(unsigned __int16 *result@<X0>, char *a2@<X8>)
{
  int v2;
  char v3;
  char v4;

  v2 = *result;
  if (v2 == 2)
    v3 = 1;
  else
    v3 = 2;
  if (v2 == 1)
    v4 = 0;
  else
    v4 = v3;
  *a2 = v4;
  return result;
}

void sub_1A451DBD0(__int16 *a1@<X8>)
{
  _BYTE *v1;
  __int16 v2;

  if (*v1)
    v2 = 2;
  else
    v2 = 1;
  *a1 = v2;
}

uint64_t sub_1A451DBE8(_BYTE *a1, _BYTE *a2)
{
  return *a2 & ~*a1 & 1;
}

uint64_t sub_1A451DBFC(_BYTE *a1, _BYTE *a2)
{
  return *a2 & 1 | ((*a1 & 1) == 0);
}

uint64_t sub_1A451DC10(_BYTE *a1, _BYTE *a2)
{
  return *a1 & 1 | ((*a2 & 1) == 0);
}

uint64_t sub_1A451DC24(_BYTE *a1, _BYTE *a2)
{
  return *a1 & ~*a2 & 1;
}

uint64_t static REMCustomSmartListFilterDescriptor.toSerializationVersion(from:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  BOOL v3;

  v3 = *MEMORY[0x1E0D84B50] != result && *MEMORY[0x1E0D84B40] == result;
  *a2 = v3;
  return result;
}

void *REMCustomSmartListFilterDescriptor.toData(serializationVersion:)(_BYTE *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x1E0C80C00];
  LOBYTE(v8[0]) = *a1;
  sub_1A451DD90((unsigned __int8 *)v8);
  if (!v1)
  {
    v3 = (void *)objc_opt_self();
    v4 = (void *)sub_1A46906F0();
    swift_bridgeObjectRelease();
    v8[0] = 0;
    v5 = objc_msgSend(v3, sel_dataWithJSONObject_options_error_, v4, 0, v8);

    v6 = v8[0];
    if (v5)
    {
      v2 = (void *)sub_1A468FFC4();

    }
    else
    {
      v2 = v6;
      sub_1A468FE68();

      swift_willThrow();
    }
  }
  return v2;
}

uint64_t sub_1A451DD90(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  int v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  int v46;
  char v47;
  __int128 *v48;
  int v49;
  __int128 v50;
  unint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  _BYTE v58[4];
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  char v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;

  v3 = v2;
  v4 = v1;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v58[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v58[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *a1;
  v14 = MEMORY[0x1E0DEE9E0];
  if (v13 == 1)
  {
    v15 = *(_BYTE *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation) == 0;
    v16 = 6581857;
    if (*(_BYTE *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation))
      v16 = 29295;
    v17 = 0xE300000000000000;
    *((_QWORD *)&v64 + 1) = MEMORY[0x1E0DEA968];
    if (!v15)
      v17 = 0xE200000000000000;
    *(_QWORD *)&v63 = v16;
    *((_QWORD *)&v63 + 1) = v17;
    sub_1A444A940(&v63, &v67);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v69 = v14;
    sub_1A445DFA4(&v67, 0x6F6974617265706FLL, 0xE90000000000006ELL, isUniquelyReferenced_nonNull_native);
    v14 = v69;
    swift_bridgeObjectRelease();
  }
  v19 = v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags;
  if (*(_QWORD *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags) != 2)
  {
    v20 = *(_BYTE *)(v19 + 16);
    v21 = *(_QWORD *)(v19 + 8);
    *(_QWORD *)&v63 = *(_QWORD *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags);
    *((_QWORD *)&v63 + 1) = v21;
    LOBYTE(v64) = v20;
    LOBYTE(v67) = v13;
    v22 = sub_1A451E6F8(&v67);
    *((_QWORD *)&v64 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
    *(_QWORD *)&v63 = v22;
    sub_1A444A940(&v63, &v67);
    v23 = swift_isUniquelyReferenced_nonNull_native();
    v69 = v14;
    sub_1A445DFA4(&v67, 0x7367617468736168, 0xE800000000000000, v23);
    v14 = v69;
    swift_bridgeObjectRelease();
  }
  sub_1A444ABF4(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v8, (uint64_t *)&unk_1EE71ED00);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1A445404C((uint64_t)v8, (uint64_t *)&unk_1EE71ED00);
    goto LABEL_16;
  }
  sub_1A452348C((uint64_t)v8, (uint64_t)v12);
  if ((v13 & 1) != 0)
  {
    sub_1A451F550();
    if (v2)
    {
LABEL_13:
      sub_1A45234D0((uint64_t)v12);
LABEL_46:
      swift_bridgeObjectRelease();
      return v14;
    }
  }
  else
  {
    sub_1A451F0E0();
    if (v2)
      goto LABEL_13;
  }
  v25 = v24;
  *((_QWORD *)&v64 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
  *(_QWORD *)&v63 = v25;
  sub_1A444A940(&v63, &v67);
  v26 = swift_isUniquelyReferenced_nonNull_native();
  v69 = v14;
  sub_1A445DFA4(&v67, 1702125924, 0xE400000000000000, v26);
  v14 = v69;
  swift_bridgeObjectRelease();
  sub_1A45234D0((uint64_t)v12);
LABEL_16:
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time) == 6)
  {
    v62 = v14;
  }
  else
  {
    LOBYTE(v63) = *(_BYTE *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time);
    sub_1A452161C();
    v28 = v27;
    *((_QWORD *)&v64 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
    *(_QWORD *)&v63 = v28;
    sub_1A444A940(&v63, &v67);
    v29 = swift_isUniquelyReferenced_nonNull_native();
    v69 = v14;
    sub_1A445DFA4(&v67, 1701669236, 0xE400000000000000, v29);
    v62 = v69;
    swift_bridgeObjectRelease();
  }
  v30 = *(_QWORD *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities);
  if (v30)
  {
    v31 = *(_QWORD *)(v30 + 16);
    v32 = MEMORY[0x1E0DEE9D8];
    if (v31)
    {
      v59 = v13;
      v60 = v4;
      v61 = v2;
      *(_QWORD *)&v63 = MEMORY[0x1E0DEE9D8];
      sub_1A445A8BC(0, v31, 0);
      v32 = v63;
      v33 = (uint64_t *)(v30 + 32);
      do
      {
        v35 = *v33++;
        v34 = v35;
        v36 = v35 == 1;
        if (v35 == 1)
          v37 = 7827308;
        else
          v37 = 1701736302;
        if (v36)
          v38 = 0xE300000000000000;
        else
          v38 = 0xE400000000000000;
        if (v34 == 2)
        {
          v37 = 0x6D756964656DLL;
          v38 = 0xE600000000000000;
        }
        if (v34 == 3)
          v39 = 1751607656;
        else
          v39 = v37;
        if (v34 == 3)
          v40 = 0xE400000000000000;
        else
          v40 = v38;
        *(_QWORD *)&v63 = v32;
        v42 = *(_QWORD *)(v32 + 16);
        v41 = *(_QWORD *)(v32 + 24);
        if (v42 >= v41 >> 1)
        {
          sub_1A445A8BC(v41 > 1, v42 + 1, 1);
          v32 = v63;
        }
        *(_QWORD *)(v32 + 16) = v42 + 1;
        v43 = v32 + 16 * v42;
        *(_QWORD *)(v43 + 32) = v39;
        *(_QWORD *)(v43 + 40) = v40;
        --v31;
      }
      while (v31);
      v4 = v60;
      v3 = v61;
      v13 = v59;
    }
    *((_QWORD *)&v64 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    *(_QWORD *)&v63 = v32;
    sub_1A444A940(&v63, &v67);
    v44 = v62;
    v45 = swift_isUniquelyReferenced_nonNull_native();
    v69 = v44;
    sub_1A445DFA4(&v67, 0x697469726F697270, 0xEA00000000007365, v45);
    v14 = v69;
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = v62;
  }
  v46 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged);
  if (v46 != 2)
  {
    *((_QWORD *)&v64 + 1) = MEMORY[0x1E0DEAFA0];
    LOBYTE(v63) = v46 & 1;
    sub_1A444A940(&v63, &v67);
    v47 = swift_isUniquelyReferenced_nonNull_native();
    v69 = v14;
    sub_1A445DFA4(&v67, 0x64656767616C66, 0xE700000000000000, v47);
    v14 = v69;
    swift_bridgeObjectRelease();
  }
  v48 = (__int128 *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location);
  v49 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48);
  if (v49 != 255)
  {
    v50 = v48[1];
    v63 = *v48;
    v64 = v50;
    v65 = v48[2];
    v66 = v49;
    LOBYTE(v69) = v13;
    v51 = sub_1A451E804(&v69);
    if (v3)
      goto LABEL_46;
    v52 = v51;
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
    *(_QWORD *)&v67 = v52;
    sub_1A444A940(&v67, &v63);
    v53 = swift_isUniquelyReferenced_nonNull_native();
    v69 = v14;
    sub_1A445DFA4(&v63, 0x6E6F697461636F6CLL, 0xE800000000000000, v53);
    v14 = v69;
    swift_bridgeObjectRelease();
  }
  if (v13 && *(_QWORD *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists))
  {
    v54 = *(_QWORD *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists + 8);
    *(_QWORD *)&v63 = *(_QWORD *)(v4 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists);
    *((_QWORD *)&v63 + 1) = v54;
    v55 = sub_1A4521F40();
    *((_QWORD *)&v64 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
    *(_QWORD *)&v63 = v55;
    sub_1A444A940(&v63, &v67);
    v56 = swift_isUniquelyReferenced_nonNull_native();
    v69 = v14;
    sub_1A445DFA4(&v67, 0x737473696CLL, 0xE500000000000000, v56);
    v14 = v69;
    swift_bridgeObjectRelease();
  }
  return v14;
}

void sub_1A451E440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1A4523A0C(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1A451E4C4 + 4 * byte_1A469E050[swift_getEnumCaseMultiPayload()];
  __asm { BR              X11 }
}

uint64_t sub_1A451E4C4()
{
  uint64_t v0;

  sub_1A45234D0(v0);
  return *MEMORY[0x1E0D84B40];
}

void sub_1A451E4EC()
{
  JUMPOUT(0x1A451E4D4);
}

void sub_1A451E504()
{
  uint64_t v0;

  sub_1A45234D0(v0);
  JUMPOUT(0x1A451E4D4);
}

BOOL REMCustomSmartListFilterDescriptor.requiresSydneyRomeKincaid.getter()
{
  return REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter() >= *MEMORY[0x1E0D84B40];
}

uint64_t REMCustomSmartListFilterDescriptor.__allocating_init(data:serializationVersion:)(uint64_t a1, unint64_t a2, unsigned __int8 *a3)
{
  return sub_1A452280C(a1, a2, a3);
}

uint64_t sub_1A451E554@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;
  _OWORD v14[3];
  char v15;

  if ((*a2 & 1) != 0
    && (v6 = sub_1A4461598(a1), v7)
    && (*(_QWORD *)&v14[0] = v6,
        *((_QWORD *)&v14[0] + 1) = v7,
        sub_1A4690A50(),
        v8 = sub_1A469171C(),
        swift_bridgeObjectRelease(),
        !v8))
  {
    result = swift_bridgeObjectRelease();
    v10 = xmmword_1A4696750;
    v11 = 0uLL;
    v13 = 2;
    v12 = 0uLL;
  }
  else
  {
    result = sub_1A4521A58(a1, (uint64_t)v14);
    if (v3)
      return result;
    v10 = v14[0];
    v11 = v14[1];
    v12 = v14[2];
    v13 = v15;
  }
  *(_OWORD *)a3 = v10;
  *(_OWORD *)(a3 + 16) = v11;
  *(_OWORD *)(a3 + 32) = v12;
  *(_BYTE *)(a3 + 48) = v13;
  return result;
}

uint64_t REMCustomSmartListFilterDescriptor.__allocating_init(data:serializationVersion:)(uint64_t a1, unint64_t a2, __int16 a3)
{
  unsigned __int8 v5;
  _WORD *v8;
  unsigned __int8 v9;

  if (a3 == 1)
  {
    v5 = 0;
    goto LABEL_5;
  }
  if (a3 == 2)
  {
    v5 = 1;
LABEL_5:
    v9 = v5;
    return sub_1A452280C(a1, a2, &v9);
  }
  sub_1A452350C();
  swift_allocError();
  *v8 = a3;
  swift_willThrow();
  return sub_1A44695EC(a1, a2);
}

unint64_t sub_1A451E6F8(_BYTE *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v5;

  v2 = *v1;
  if ((*a1 & 1) != 0)
    return sub_1A451E8EC();
  if (!v2)
    return sub_1A443CDB8(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
  if (v2 == 1)
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A4695C10;
    *(_QWORD *)(inited + 32) = 7958113;
    *(_QWORD *)(inited + 40) = 0xE300000000000000;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0xE000000000000000;
  }
  else
  {
    v5 = swift_initStackObject();
    *(_OWORD *)(v5 + 16) = xmmword_1A4695C10;
    *(_QWORD *)(v5 + 32) = 0x7367617468736168;
    *(_QWORD *)(v5 + 40) = 0xE800000000000000;
    *(_QWORD *)(v5 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    *(_QWORD *)(v5 + 48) = v2;
    swift_bridgeObjectRetain();
    inited = v5;
  }
  return sub_1A443CDB8(inited);
}

unint64_t sub_1A451E804(_BYTE *a1)
{
  uint64_t v1;
  uint64_t inited;

  if ((*a1 & 1) == 0)
    return sub_1A4521730();
  if (*(unsigned __int8 *)(v1 + 48) < 2u
    || (*(_QWORD *)(v1 + 16) | *(_QWORD *)(v1 + 8) | *(_QWORD *)v1 | *(_QWORD *)(v1 + 32) | *(_QWORD *)(v1 + 24) | *(_QWORD *)(v1 + 40)) == 0)
  {
    return sub_1A4521730();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4695C10;
  *(_QWORD *)(inited + 32) = 0x697461636F4C6F6ELL;
  *(_QWORD *)(inited + 40) = 0xEA00000000006E6FLL;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = 0;
  *(_QWORD *)(inited + 56) = 0xE000000000000000;
  return sub_1A443CDB8(inited);
}

unint64_t sub_1A451E8EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v1 = *v0;
  if (!*v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
    inited = swift_initStackObject();
    v3 = inited;
    *(_OWORD *)(inited + 16) = xmmword_1A4695C10;
    v4 = 0x6465676761746E75;
    v5 = 0xE800000000000000;
    goto LABEL_5;
  }
  if (v1 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
    inited = swift_initStackObject();
    v3 = inited;
    *(_OWORD *)(inited + 16) = xmmword_1A4695C10;
    v4 = 7958113;
    v5 = 0xE300000000000000;
LABEL_5:
    *(_QWORD *)(inited + 32) = v4;
    *(_QWORD *)(inited + 40) = v5;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0xE000000000000000;
    return sub_1A443CDB8(v3);
  }
  v6 = *((_BYTE *)v0 + 16);
  v7 = v0[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
  v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1A4695C10;
  *(_QWORD *)(v3 + 32) = 0x7367617468736168;
  *(_QWORD *)(v3 + 40) = 0xE800000000000000;
  v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = xmmword_1A4695E60;
  *(_QWORD *)(v8 + 32) = 0x6564756C636E69;
  *(_QWORD *)(v8 + 40) = 0xE700000000000000;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  *(_QWORD *)(v8 + 48) = v1;
  *(_QWORD *)(v8 + 72) = v9;
  *(_QWORD *)(v8 + 80) = 0x6564756C637865;
  *(_QWORD *)(v8 + 88) = 0xE700000000000000;
  *(_QWORD *)(v8 + 96) = v7;
  *(_QWORD *)(v8 + 120) = v9;
  *(_QWORD *)(v8 + 128) = 0x6F6974617265706FLL;
  v10 = 29295;
  if ((v6 & 1) == 0)
    v10 = 6581857;
  v11 = 0xE200000000000000;
  if ((v6 & 1) == 0)
    v11 = 0xE300000000000000;
  *(_QWORD *)(v8 + 168) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 136) = 0xE90000000000006ELL;
  *(_QWORD *)(v8 + 144) = v10;
  *(_QWORD *)(v8 + 152) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_1A443CDB8(v8);
  *(_QWORD *)(v3 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
  *(_QWORD *)(v3 + 48) = v12;
  return sub_1A443CDB8(v3);
}

uint64_t sub_1A451EAE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD v16[4];
  _OWORD v17[2];
  uint64_t v18;

  v4 = sub_1A4461598(a1);
  if (!v5)
    goto LABEL_12;
  v6 = v4;
  v7 = v5;
  *(_QWORD *)&v17[0] = v4;
  *((_QWORD *)&v17[0] + 1) = v5;
  swift_bridgeObjectRetain();
  sub_1A4690A50();
  v8 = sub_1A469171C();
  swift_bridgeObjectRelease();
  if (v8 > 1)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    sub_1A4523A50();
    swift_allocError();
    *(_OWORD *)v13 = 0u;
    *(_OWORD *)(v13 + 16) = 0u;
    *(_BYTE *)(v13 + 32) = 0;
    return swift_willThrow();
  }
  if (*(_QWORD *)(a1 + 16) && (v9 = sub_1A443E4C8(v6, v7), (v10 & 1) != 0))
    sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v9, (uint64_t)v17);
  else
    memset(v17, 0, sizeof(v17));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    v12 = 0;
    v11 = 1;
    goto LABEL_14;
  }
  sub_1A444ABF4((uint64_t)v17, (uint64_t)v16, &qword_1ED243E68);
  if (v16[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v11 = v18;
      v12 = MEMORY[0x1E0DEE9D8];
LABEL_14:
      result = sub_1A445404C((uint64_t)v17, &qword_1ED243E68);
      *(_QWORD *)a2 = v11;
      *(_QWORD *)(a2 + 8) = v12;
      *(_BYTE *)(a2 + 16) = 0;
      return result;
    }
  }
  else
  {
    sub_1A445404C((uint64_t)v16, &qword_1ED243E68);
  }
  sub_1A4523A50();
  swift_allocError();
  *(_OWORD *)v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(_BYTE *)(v15 + 32) = 0;
  swift_willThrow();
  return sub_1A445404C((uint64_t)v17, &qword_1ED243E68);
}

uint64_t sub_1A451ECFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[2];

  v4 = sub_1A4461598(a1);
  if (!v5)
    goto LABEL_7;
  v6 = v4;
  v7 = v5;
  *(_QWORD *)&v26[0] = v4;
  *((_QWORD *)&v26[0] + 1) = v5;
  swift_bridgeObjectRetain();
  sub_1A4690A50();
  v8 = sub_1A469171C();
  swift_bridgeObjectRelease();
  if (v8 >= 3)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    sub_1A4523A50();
    swift_allocError();
    *(_QWORD *)v11 = 1;
    *(_QWORD *)(v11 + 8) = 0;
    *(_QWORD *)(v11 + 16) = 0;
    *(_QWORD *)(v11 + 24) = 0;
    *(_BYTE *)(v11 + 32) = 0;
    return swift_willThrow();
  }
  if (*(_QWORD *)(a1 + 16) && (v9 = sub_1A443E4C8(v6, v7), (v10 & 1) != 0))
    sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v9, (uint64_t)v26);
  else
    memset(v26, 0, sizeof(v26));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(_BYTE)v8)
  {
    v14 = v8;
    v13 = v8;
    goto LABEL_13;
  }
  if (v8 == 1)
  {
    v13 = 0;
    LOBYTE(v8) = 0;
    v14 = 1;
LABEL_13:
    result = sub_1A445404C((uint64_t)v26, &qword_1ED243E68);
    *(_QWORD *)a2 = v14;
    *(_QWORD *)(a2 + 8) = v13;
    *(_BYTE *)(a2 + 16) = v8;
    return result;
  }
  sub_1A444ABF4((uint64_t)v26, (uint64_t)&v24, &qword_1ED243E68);
  if (!*((_QWORD *)&v25 + 1))
    goto LABEL_34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
  if ((swift_dynamicCast() & 1) != 0)
  {
    if (!*(_QWORD *)(v23 + 16))
      goto LABEL_26;
    v15 = sub_1A443E4C8(0x6564756C636E69, 0xE700000000000000);
    if ((v16 & 1) == 0)
      goto LABEL_26;
    sub_1A44311F0(*(_QWORD *)(v23 + 56) + 32 * v15, (uint64_t)&v24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_26;
    v14 = v23;
    if (!*(_QWORD *)(v23 + 16)
      || (v17 = sub_1A443E4C8(0x6564756C637865, 0xE700000000000000), (v18 & 1) == 0)
      || (sub_1A44311F0(*(_QWORD *)(v23 + 56) + 32 * v17, (uint64_t)&v24), (swift_dynamicCast() & 1) == 0))
    {
LABEL_25:
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    v13 = v23;
    if (*(_QWORD *)(v23 + 16) && (v19 = sub_1A443E4C8(0x6F6974617265706FLL, 0xE90000000000006ELL), (v20 & 1) != 0))
    {
      sub_1A44311F0(*(_QWORD *)(v23 + 56) + 32 * v19, (uint64_t)&v24);
    }
    else
    {
      v24 = 0u;
      v25 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v25 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v21 = sub_1A469171C();
        swift_bridgeObjectRelease();
        if (v21 == 1)
        {
          LOBYTE(v8) = 1;
          goto LABEL_13;
        }
        if (!v21)
        {
          LOBYTE(v8) = 0;
          goto LABEL_13;
        }
      }
      goto LABEL_25;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_34:
    sub_1A445404C((uint64_t)&v24, &qword_1ED243E68);
  }
LABEL_35:
  sub_1A4523A50();
  swift_allocError();
  *(_QWORD *)v22 = 1;
  *(_QWORD *)(v22 + 8) = 0;
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)(v22 + 24) = 0;
  *(_BYTE *)(v22 + 32) = 0;
  swift_willThrow();
  return sub_1A445404C((uint64_t)v26, &qword_1ED243E68);
}

void sub_1A451F0E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  MEMORY[0x1E0C80A78](v2);
  sub_1A4523A0C(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)&loc_1A451F1A0 + dword_1A451F51C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A451F1B0()
{
  uint64_t v0;
  _WORD *v1;

  sub_1A45234D0(v0);
  sub_1A452350C();
  swift_allocError();
  *v1 = 1;
  swift_willThrow();
  return v0;
}

void sub_1A451F550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_1A46900B4();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  MEMORY[0x1E0C80A78](v2);
  sub_1A4523A0C(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)&loc_1A451F60C + *((int *)qword_1A451F9D8 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

unint64_t sub_1A451F61C()
{
  char *v0;
  char v1;
  uint64_t inited;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4695C10;
  *(_QWORD *)(inited + 32) = 0x7961646F74;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 48) = v1;
  return sub_1A443CDB8(inited);
}

uint64_t sub_1A451F9F8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t result;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  void *v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 *v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  char v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unsigned __int8 *v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unsigned __int8 *v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char v89;
  _BYTE *v90;
  uint64_t v91;
  unsigned __int8 *v92;
  unsigned int v93;
  uint64_t v94;
  char v95;
  _QWORD v96[2];
  _BYTE *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD v109[3];
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  _QWORD *v113;

  v104 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2422A0);
  v5 = MEMORY[0x1E0C80A78](v104);
  v102 = (char *)v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v98 = (char *)v96 - v7;
  v99 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
  MEMORY[0x1E0C80A78](v99);
  v101 = (char *)v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  MEMORY[0x1E0C80A78](v108);
  v100 = (uint64_t)v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v105 = (char *)v96 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v96 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v96 - v19;
  v21 = sub_1A46900B4();
  v106 = *(_QWORD *)(v21 - 8);
  v107 = v21;
  v22 = MEMORY[0x1E0C80A78](v21);
  v103 = (char *)v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)v96 - v24;
  v26 = sub_1A4461598(a1);
  if (!v27)
    goto LABEL_7;
  v28 = v26;
  v29 = v27;
  v97 = a2;
  v96[1] = v2;
  *(_QWORD *)&v111 = v26;
  *((_QWORD *)&v111 + 1) = v27;
  swift_bridgeObjectRetain();
  sub_1A4690A50();
  v30 = sub_1A469171C();
  swift_bridgeObjectRelease();
  if (v30 >= 3)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    sub_1A4523A50();
    swift_allocError();
    *(_OWORD *)v33 = 0u;
    *(_OWORD *)(v33 + 16) = 0u;
    *(_BYTE *)(v33 + 32) = 0;
    return swift_willThrow();
  }
  if (*(_QWORD *)(a1 + 16))
  {
    v31 = sub_1A443E4C8(v28, v29);
    if ((v32 & 1) != 0)
    {
      sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v31, (uint64_t)&v111);
    }
    else
    {
      v111 = 0u;
      v112 = 0u;
    }
  }
  else
  {
    v111 = 0u;
    v112 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(_BYTE)v30)
  {
    sub_1A445404C((uint64_t)&v111, &qword_1ED243E68);
    return swift_storeEnumTagMultiPayload();
  }
  if (v30 == 1)
  {
    sub_1A444ABF4((uint64_t)&v111, (uint64_t)v109, &qword_1ED243E68);
    if (v110)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v35 = v113;
        if (v113[2] == 2)
        {
          v36 = qword_1EE71C0D8;
          swift_bridgeObjectRetain();
          if (v36 != -1)
            swift_once();
          v37 = (void *)qword_1EE71F868;
          v38 = (void *)sub_1A469087C();
          v39 = objc_msgSend(v37, sel_dateFromString_, v38);

          if (v39)
          {
            sub_1A4690084();

            v40 = v106;
            v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v106 + 56);
            v42 = v18;
            v43 = 0;
          }
          else
          {
            v40 = v106;
            v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v106 + 56);
            v42 = v18;
            v43 = 1;
          }
          v47 = v107;
          v41(v42, v43, 1, v107);
          sub_1A44C6CC8((uint64_t)v18, (uint64_t)v20, &qword_1ED243190);
          swift_bridgeObjectRelease();
          v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
          if (v48(v20, 1, v47) == 1)
          {
            swift_bridgeObjectRelease();
            sub_1A445404C((uint64_t)v20, &qword_1ED243190);
            goto LABEL_88;
          }
          v46 = v41;
          v49 = v20;
          v50 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
          v50(v25, v49, v47);
          if (v35[2] >= 2uLL)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v51 = (void *)qword_1EE71F868;
            v52 = (void *)sub_1A469087C();
            v53 = objc_msgSend(v51, sel_dateFromString_, v52);

            if (v53)
            {
              sub_1A4690084();

              v54 = 0;
            }
            else
            {
              v54 = 1;
            }
            v61 = v107;
            v46(v13, v54, 1, v107);
            v62 = (uint64_t)v105;
            sub_1A44C6CC8((uint64_t)v13, (uint64_t)v105, &qword_1ED243190);
            swift_bridgeObjectRelease();
            if (v48((char *)v62, 1, v61) == 1)
            {
              (*(void (**)(char *, uint64_t))(v106 + 8))(v25, v61);
              sub_1A445404C(v62, &qword_1ED243190);
              goto LABEL_88;
            }
            v63 = v103;
            v64 = v50;
            v50(v103, (char *)v62, v61);
            sub_1A4523A94();
            v65 = v61;
            v66 = sub_1A469084C();
            result = sub_1A445404C((uint64_t)&v111, &qword_1ED243E68);
            if ((v66 & 1) != 0)
            {
              v67 = v104;
              v68 = v98;
              v69 = (uint64_t)&v98[*(int *)(v104 + 48)];
              v64(v98, v25, v65);
              v70 = v69;
              v105 = (char *)v69;
              v64((char *)v69, v63, v65);
              v71 = v102;
              v72 = &v102[*(int *)(v67 + 48)];
              v73 = v106;
              v74 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
              v74(v102, v68, v65);
              v74(v72, (char *)v70, v65);
              v75 = (uint64_t)v101;
              v64(v101, v71, v65);
              v76 = *(void (**)(char *, uint64_t))(v73 + 8);
              v76(v72, v65);
              v77 = &v71[*(int *)(v104 + 48)];
              v64(v71, v68, v65);
              v64(v77, v105, v65);
              v64((char *)(v75 + *(int *)(v99 + 36)), v77, v65);
              v76(v71, v65);
              v78 = v100;
              sub_1A44C6CC8(v75, v100, (uint64_t *)&unk_1ED243DF8);
              swift_storeEnumTagMultiPayload();
              return sub_1A452348C(v78, (uint64_t)v97);
            }
            __break(1u);
            goto LABEL_102;
          }
          __break(1u);
          while (1)
          {
            __break(1u);
LABEL_100:
            v58 = (unsigned __int8 *)sub_1A46914E8();
LABEL_43:
            v59 = (uint64_t)sub_1A45D828C(v58, v56, 10);
            LOBYTE(v44) = v60 & 1;
LABEL_83:
            if ((v44 & 1) != 0)
              break;
            if (v35[2] >= 3uLL)
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              v88 = sub_1A4522780();
              if (v88 == 5)
                goto LABEL_88;
              v89 = v88;
              sub_1A445404C((uint64_t)&v111, &qword_1ED243E68);
              v90 = v97;
              *v97 = (_BYTE)v46;
              *((_QWORD *)v90 + 1) = v59;
              v90[16] = v89;
              v90[17] = 0;
              return swift_storeEnumTagMultiPayload();
            }
          }
        }
LABEL_87:
        swift_bridgeObjectRelease();
      }
LABEL_88:
      sub_1A4523A50();
      swift_allocError();
      *(_OWORD *)v91 = 0u;
      *(_OWORD *)(v91 + 16) = 0u;
      *(_BYTE *)(v91 + 32) = 0;
      swift_willThrow();
      return sub_1A445404C((uint64_t)&v111, &qword_1ED243E68);
    }
LABEL_26:
    sub_1A445404C((uint64_t)v109, &qword_1ED243E68);
    goto LABEL_88;
  }
  sub_1A444ABF4((uint64_t)&v111, (uint64_t)v109, &qword_1ED243E68);
  if (!v110)
    goto LABEL_26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_88;
  v35 = v113;
  if (v113[2] != 3)
    goto LABEL_87;
  v44 = v113[5];
  swift_bridgeObjectRetain();
  v45 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  if (v45 == 1)
  {
    LOBYTE(v46) = 1;
  }
  else
  {
    if (v45)
      goto LABEL_87;
    LOBYTE(v46) = 0;
  }
  if (v35[2] < 2uLL)
  {
    __break(1u);
    goto LABEL_97;
  }
  v44 = v35[6];
  v30 = v35[7];
  v55 = HIBYTE(v30) & 0xF;
  v56 = v44 & 0xFFFFFFFFFFFFLL;
  if ((v30 & 0x2000000000000000) != 0)
    v57 = HIBYTE(v30) & 0xF;
  else
    v57 = v44 & 0xFFFFFFFFFFFFLL;
  if (!v57)
    goto LABEL_87;
  if ((v30 & 0x1000000000000000) != 0)
  {
LABEL_97:
    swift_bridgeObjectRetain();
    v59 = (uint64_t)sub_1A45D8530(v44, v30, 10);
    LOBYTE(v44) = v95;
    swift_bridgeObjectRelease();
    goto LABEL_83;
  }
  if ((v30 & 0x2000000000000000) == 0)
  {
    if ((v44 & 0x1000000000000000) == 0)
      goto LABEL_100;
    v58 = (unsigned __int8 *)((v30 & 0xFFFFFFFFFFFFFFFLL) + 32);
    goto LABEL_43;
  }
  v109[0] = v35[6];
  v109[1] = v30 & 0xFFFFFFFFFFFFFFLL;
  if (v44 != 43)
  {
    if (v44 == 45)
    {
      if (!v55)
      {
LABEL_102:
        __break(1u);
        goto LABEL_103;
      }
      if (v55 != 1 && (BYTE1(v44) - 48) <= 9u)
      {
        if (v55 == 2)
        {
          LOBYTE(v44) = 0;
          v59 = -(uint64_t)(BYTE1(v44) - 48);
          goto LABEL_83;
        }
        if ((BYTE2(v44) - 48) <= 9u)
        {
          v59 = -10 * (BYTE1(v44) - 48) - (BYTE2(v44) - 48);
          v87 = v55 - 3;
          if (!v87)
            goto LABEL_82;
          v92 = (unsigned __int8 *)v109 + 3;
          while (1)
          {
            v93 = *v92 - 48;
            if (v93 > 9)
              break;
            v94 = 10 * v59;
            if ((unsigned __int128)(v59 * (__int128)10) >> 64 != (10 * v59) >> 63)
              goto LABEL_95;
            v59 = v94 - v93;
            if (__OFSUB__(v94, v93))
              goto LABEL_95;
            LOBYTE(v44) = 0;
            ++v92;
            if (!--v87)
              goto LABEL_83;
          }
        }
      }
LABEL_70:
      v59 = 0;
      LOBYTE(v44) = 1;
      goto LABEL_83;
    }
    if (!v55 || (v44 - 48) > 9u)
      goto LABEL_70;
    v59 = (v44 - 48);
    if (v55 != 1)
    {
      if ((BYTE1(v44) - 48) > 9u)
        goto LABEL_70;
      v59 = 10 * (v44 - 48) + (BYTE1(v44) - 48);
      v83 = v55 - 2;
      if (v83)
      {
        v84 = (unsigned __int8 *)v109 + 2;
        while (1)
        {
          v85 = *v84 - 48;
          if (v85 > 9)
            goto LABEL_70;
          v86 = 10 * v59;
          if ((unsigned __int128)(v59 * (__int128)10) >> 64 != (10 * v59) >> 63)
            goto LABEL_95;
          v59 = v86 + v85;
          if (__OFADD__(v86, v85))
            goto LABEL_95;
          LOBYTE(v44) = 0;
          ++v84;
          if (!--v83)
            goto LABEL_83;
        }
      }
    }
    goto LABEL_82;
  }
  if (v55)
  {
    if (v55 == 1 || (BYTE1(v44) - 48) > 9u)
      goto LABEL_70;
    v59 = (BYTE1(v44) - 48);
    if (v55 != 2)
    {
      if ((BYTE2(v44) - 48) > 9u)
        goto LABEL_70;
      v59 = 10 * (BYTE1(v44) - 48) + (BYTE2(v44) - 48);
      v79 = v55 - 3;
      if (v79)
      {
        v80 = (unsigned __int8 *)v109 + 3;
        while (1)
        {
          v81 = *v80 - 48;
          if (v81 > 9)
            goto LABEL_70;
          v82 = 10 * v59;
          if ((unsigned __int128)(v59 * (__int128)10) >> 64 != (10 * v59) >> 63
            || (v59 = v82 + v81, __OFADD__(v82, v81)))
          {
LABEL_95:
            v59 = 0;
            LOBYTE(v44) = 1;
            goto LABEL_83;
          }
          LOBYTE(v44) = 0;
          ++v80;
          if (!--v79)
            goto LABEL_83;
        }
      }
    }
LABEL_82:
    LOBYTE(v44) = 0;
    goto LABEL_83;
  }
LABEL_103:
  __break(1u);
  return result;
}

void sub_1A45205A8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  _QWORD v31[9];
  uint64_t v32;
  _OWORD v33[2];
  uint64_t v34;

  v32 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  MEMORY[0x1E0C80A78](v32);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v8 = MEMORY[0x1E0C80A78](v7);
  v31[4] = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v31[6] = (char *)v31 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v31[2] = (char *)v31 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v31[5] = (char *)v31 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v16);
  v31[3] = (char *)v31 - v17;
  v18 = sub_1A46900B4();
  v31[7] = *(_QWORD *)(v18 - 8);
  v31[8] = v18;
  v19 = MEMORY[0x1E0C80A78](v18);
  v31[1] = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v21);
  v22 = sub_1A4461598(a1);
  if (v23)
  {
    v24 = v22;
    v25 = v23;
    v34 = a2;
    *(_QWORD *)&v33[0] = v22;
    *((_QWORD *)&v33[0] + 1) = v23;
    swift_bridgeObjectRetain();
    sub_1A4690A50();
    v26 = sub_1A45227C8();
    if (v26 != 6)
    {
      v28 = v26;
      if (*(_QWORD *)(a1 + 16) && (v29 = sub_1A443E4C8(v24, v25), (v30 & 1) != 0))
        sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v29, (uint64_t)v33);
      else
        memset(v33, 0, sizeof(v33));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __asm { BR              X10 }
    }
    swift_bridgeObjectRelease();
    a2 = v34;
  }
  sub_1A451F9F8(a1, v6);
  if (v2)
  {
    sub_1A4523A50();
    swift_allocError();
    *(_QWORD *)v27 = 1;
    *(_QWORD *)(v27 + 8) = 0;
    *(_QWORD *)(v27 + 16) = 0;
    *(_QWORD *)(v27 + 24) = 0;
    *(_BYTE *)(v27 + 32) = 0;
    swift_willThrow();

  }
  else
  {
    sub_1A452348C((uint64_t)v6, a2);
  }
}

void sub_1A4520EF0()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  uint64_t inited;
  _QWORD *v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *v0;
  v2 = v0[16];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
  inited = swift_initStackObject();
  v4 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_1A4699270;
  *(_QWORD *)(inited + 32) = 0x6F69746365726964;
  *(_QWORD *)(inited + 40) = 0xE90000000000006ELL;
  v5 = v1 == 0;
  v6 = 0x747361506E69;
  v7 = MEMORY[0x1E0DEA968];
  if (!v5)
    v6 = 0x7478654E6E69;
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = v7;
  *(_QWORD *)(inited + 80) = 0x647574696E67616DLL;
  *(_QWORD *)(inited + 88) = 0xE900000000000065;
  *(_QWORD *)(inited + 96) = sub_1A46918D8();
  v4[13] = v8;
  v4[15] = v7;
  v4[16] = 0x7374696E75;
  v4[17] = 0xE500000000000000;
  __asm { BR              X11 }
}

unint64_t sub_1A4521004()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 144) = 1920298856;
  *(_QWORD *)(v0 + 152) = 0xE400000000000000;
  *(_QWORD *)(v0 + 168) = v2;
  strcpy((char *)(v0 + 176), "includePastDue");
  *(_BYTE *)(v0 + 191) = -18;
  *(_QWORD *)(v0 + 216) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(v0 + 192) = v1;
  return sub_1A443CDB8(v0);
}

uint64_t sub_1A45210A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  unint64_t v31;
  char v32;
  unsigned __int8 *v33;
  unsigned int v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_22;
  v4 = sub_1A443E4C8(0x6F69746365726964, 0xE90000000000006ELL);
  if ((v5 & 1) == 0)
    goto LABEL_22;
  sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v39);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_22;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_21;
  v6 = sub_1A443E4C8(0x647574696E67616DLL, 0xE900000000000065);
  if ((v7 & 1) == 0)
    goto LABEL_21;
  sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v6, (uint64_t)&v39);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_21;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_20;
  v8 = sub_1A443E4C8(0x7374696E75, 0xE500000000000000);
  if ((v9 & 1) == 0)
    goto LABEL_20;
  sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v8, (uint64_t)&v39);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_20;
  v41 = v37;
  v10 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  if (v10 > 1)
    goto LABEL_20;
  v12 = HIBYTE(v38) & 0xF;
  v13 = v37 & 0xFFFFFFFFFFFFLL;
  if (!((v38 & 0x2000000000000000) != 0 ? HIBYTE(v38) & 0xF : v37 & 0xFFFFFFFFFFFFLL))
  {
LABEL_20:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if ((v38 & 0x1000000000000000) != 0)
  {
    v16 = (uint64_t)sub_1A45D8530(v37, v38, 10);
    v18 = v36;
    goto LABEL_59;
  }
  if ((v38 & 0x2000000000000000) == 0)
  {
    if ((v37 & 0x1000000000000000) != 0)
      v15 = (unsigned __int8 *)((v38 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v15 = (unsigned __int8 *)sub_1A46914E8();
    v16 = (uint64_t)sub_1A45D828C(v15, v13, 10);
    v18 = v17 & 1;
LABEL_59:
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      v29 = sub_1A4522780();
      if (v29 != 5)
      {
        v30 = v29;
        if (*(_QWORD *)(a1 + 16) && (v31 = sub_1A443E4C8(0x506564756C636E69, 0xEE00657544747361), (v32 & 1) != 0))
        {
          sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v31, (uint64_t)&v39);
        }
        else
        {
          v39 = 0u;
          v40 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v40 + 1))
        {
          result = swift_dynamicCast();
          if ((result & 1) != 0)
          {
            *(_BYTE *)a2 = v10;
            *(_QWORD *)(a2 + 8) = v16;
            *(_BYTE *)(a2 + 16) = v30;
            *(_BYTE *)(a2 + 17) = v37;
            return result;
          }
        }
        else
        {
          sub_1A445404C((uint64_t)&v39, &qword_1ED243E68);
        }
LABEL_23:
        sub_1A4523A50();
        swift_allocError();
        *(_QWORD *)v19 = 1;
        *(_QWORD *)(v19 + 8) = 0;
        *(_QWORD *)(v19 + 16) = 0;
        *(_QWORD *)(v19 + 24) = 0;
        *(_BYTE *)(v19 + 32) = 0;
        return swift_willThrow();
      }
LABEL_22:
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  *(_QWORD *)&v39 = v37;
  *((_QWORD *)&v39 + 1) = v38 & 0xFFFFFFFFFFFFFFLL;
  if (v37 == 43)
  {
    if (!v12)
      goto LABEL_79;
    if (v12 == 1 || (BYTE1(v37) - 48) > 9u)
      goto LABEL_46;
    v16 = (BYTE1(v37) - 48);
    if (v12 != 2)
    {
      if ((BYTE2(v37) - 48) > 9u)
        goto LABEL_46;
      v16 = 10 * (BYTE1(v37) - 48) + (BYTE2(v37) - 48);
      v20 = v12 - 3;
      if (v20)
      {
        v21 = (unsigned __int8 *)&v39 + 3;
        while (1)
        {
          v22 = *v21 - 48;
          if (v22 > 9)
            goto LABEL_46;
          v23 = 10 * v16;
          if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
            goto LABEL_46;
          v16 = v23 + v22;
          if (__OFADD__(v23, v22))
            goto LABEL_46;
          v18 = 0;
          ++v21;
          if (!--v20)
            goto LABEL_59;
        }
      }
    }
LABEL_58:
    v18 = 0;
    goto LABEL_59;
  }
  if (v37 != 45)
  {
    if (!v12 || (v37 - 48) > 9u)
      goto LABEL_46;
    v16 = (v37 - 48);
    if (v12 != 1)
    {
      if ((BYTE1(v37) - 48) > 9u)
        goto LABEL_46;
      v16 = 10 * (v37 - 48) + (BYTE1(v37) - 48);
      v24 = v12 - 2;
      if (v24)
      {
        v25 = (unsigned __int8 *)&v39 + 2;
        while (1)
        {
          v26 = *v25 - 48;
          if (v26 > 9)
            goto LABEL_46;
          v27 = 10 * v16;
          if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
            goto LABEL_46;
          v16 = v27 + v26;
          if (__OFADD__(v27, v26))
            goto LABEL_46;
          v18 = 0;
          ++v25;
          if (!--v24)
            goto LABEL_59;
        }
      }
    }
    goto LABEL_58;
  }
  if (v12)
  {
    if (v12 != 1 && (BYTE1(v37) - 48) <= 9u)
    {
      if (v12 == 2)
      {
        v18 = 0;
        v16 = -(uint64_t)(BYTE1(v37) - 48);
        goto LABEL_59;
      }
      if ((BYTE2(v37) - 48) <= 9u)
      {
        v16 = -10 * (BYTE1(v37) - 48) - (BYTE2(v37) - 48);
        v28 = v12 - 3;
        if (!v28)
          goto LABEL_58;
        v33 = (unsigned __int8 *)&v39 + 3;
        while (1)
        {
          v34 = *v33 - 48;
          if (v34 > 9)
            break;
          v35 = 10 * v16;
          if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
            break;
          v16 = v35 - v34;
          if (__OFSUB__(v35, v34))
            break;
          v18 = 0;
          ++v33;
          if (!--v28)
            goto LABEL_59;
        }
      }
    }
LABEL_46:
    v16 = 0;
    v18 = 1;
    goto LABEL_59;
  }
  __break(1u);
LABEL_79:
  __break(1u);
  return result;
}

void sub_1A452161C()
{
  __asm { BR              X10 }
}

unint64_t sub_1A452165C()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4695C10;
  *(_QWORD *)(inited + 32) = 0x676E696E726F6DLL;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = 0;
  *(_QWORD *)(inited + 56) = 0xE000000000000000;
  return sub_1A443CDB8(inited);
}

unint64_t sub_1A4521730()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _WORD *v17;
  unint64_t v19;

  v1 = *v0;
  if (*((_BYTE *)v0 + 48))
  {
    v2 = v0[1];
    v3 = v0[2];
    v5 = v0[3];
    v4 = v0[4];
    v6 = v0[5];
    if (*((_BYTE *)v0 + 48) == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1A4695C10;
      *(_QWORD *)(inited + 32) = 0x6E6F697461636F6CLL;
      *(_QWORD *)(inited + 40) = 0xE800000000000000;
      v8 = swift_initStackObject();
      v9 = v8;
      *(_OWORD *)(v8 + 16) = xmmword_1A469E270;
      v10 = 0xE500000000000000;
      *(_QWORD *)(v8 + 32) = 0x656C746974;
      *(_QWORD *)(v8 + 40) = 0xE500000000000000;
      v11 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v8 + 48) = v1;
      *(_QWORD *)(v8 + 56) = v2;
      *(_QWORD *)(v8 + 72) = v11;
      *(_QWORD *)(v8 + 80) = 0x656475746974616CLL;
      v12 = MEMORY[0x1E0DEB070];
      *(_QWORD *)(v8 + 88) = 0xE800000000000000;
      *(_QWORD *)(v8 + 96) = v3;
      *(_QWORD *)(v8 + 120) = v12;
      *(_QWORD *)(v8 + 128) = 0x64757469676E6F6CLL;
      *(_QWORD *)(v8 + 136) = 0xE900000000000065;
      *(_QWORD *)(v8 + 144) = v5;
      *(_QWORD *)(v8 + 168) = v12;
      *(_QWORD *)(v8 + 176) = 0x737569646172;
      *(_QWORD *)(v8 + 184) = 0xE600000000000000;
      *(_QWORD *)(v8 + 192) = v4;
      *(_QWORD *)(v8 + 216) = v12;
      *(_QWORD *)(v8 + 224) = 0x74696D69786F7270;
      *(_QWORD *)(v8 + 232) = 0xE900000000000079;
      if (v6)
      {
        if (v6 == 1)
        {
          v13 = 0x7265746E65;
        }
        else if (v6 == 2)
        {
          v13 = 0x657661656CLL;
        }
        else
        {
          v10 = 0xE400000000000000;
          v13 = 1701736302;
        }
      }
      else
      {
        v10 = 0xE400000000000000;
        v13 = 1701736302;
      }
      *(_QWORD *)(v8 + 264) = v11;
      *(_QWORD *)(v8 + 240) = v13;
      *(_QWORD *)(v8 + 248) = v10;
      swift_bridgeObjectRetain();
      v19 = sub_1A443CDB8(v9);
      *(_QWORD *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
      *(_QWORD *)(inited + 48) = v19;
      v14 = inited;
    }
    else
    {
      if (v3 | v2 | v1 | v5 | v4 | v6)
      {
        sub_1A452350C();
        swift_allocError();
        *v17 = 1;
        return swift_willThrow();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
      v14 = swift_initStackObject();
      *(_OWORD *)(v14 + 16) = xmmword_1A4695C10;
      *(_QWORD *)(v14 + 32) = 7958113;
      *(_QWORD *)(v14 + 40) = 0xE300000000000000;
      *(_QWORD *)(v14 + 72) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v14 + 48) = 0;
      *(_QWORD *)(v14 + 56) = 0xE000000000000000;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
    v14 = swift_initStackObject();
    *(_OWORD *)(v14 + 16) = xmmword_1A4695C10;
    *(_QWORD *)(v14 + 32) = 0x656C6369686576;
    *(_QWORD *)(v14 + 40) = 0xE700000000000000;
    v15 = 0xE400000000000000;
    v16 = 1701736302;
    if (v1 == 1)
    {
      v16 = 0x657463656E6E6F63;
      v15 = 0xE900000000000064;
    }
    if (v1 == 2)
      v16 = 0x656E6E6F63736964;
    *(_QWORD *)(v14 + 72) = MEMORY[0x1E0DEA968];
    if (v1 == 2)
      v15 = 0xEC00000064657463;
    *(_QWORD *)(v14 + 48) = v16;
    *(_QWORD *)(v14 + 56) = v15;
  }
  return sub_1A443CDB8(v14);
}

uint64_t sub_1A4521A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[2];
  unint64_t v35;

  v4 = sub_1A4461598(a1);
  if (!v5)
    goto LABEL_7;
  v6 = v4;
  v7 = v5;
  *(_QWORD *)&v34[0] = v4;
  *((_QWORD *)&v34[0] + 1) = v5;
  swift_bridgeObjectRetain();
  sub_1A4690A50();
  v8 = sub_1A469171C();
  swift_bridgeObjectRelease();
  if (v8 >= 3)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    sub_1A4523A50();
    swift_allocError();
    *(_OWORD *)v11 = 0u;
    *(_OWORD *)(v11 + 16) = 0u;
    *(_BYTE *)(v11 + 32) = 0;
    return swift_willThrow();
  }
  if (*(_QWORD *)(a1 + 16) && (v9 = sub_1A443E4C8(v6, v7), (v10 & 1) != 0))
    sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v9, (uint64_t)v34);
  else
    memset(v34, 0, sizeof(v34));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(_BYTE)v8)
  {
    v8 = v8;
    v18 = 2;
    v13 = v8;
    v14 = v8;
    v15 = v8;
    v16 = v8;
    v17 = v8;
    goto LABEL_16;
  }
  if (v8 != 1)
  {
    sub_1A444ABF4((uint64_t)v34, (uint64_t)&v32, &qword_1ED243E68);
    if (*((_QWORD *)&v33 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_44;
      if (*(_QWORD *)(v30 + 16))
      {
        v19 = sub_1A443E4C8(0x656C746974, 0xE500000000000000);
        if ((v20 & 1) != 0)
        {
          sub_1A44311F0(*(_QWORD *)(v30 + 56) + 32 * v19, (uint64_t)&v32);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v13 = v31;
            if (!*(_QWORD *)(v30 + 16))
              goto LABEL_34;
            v8 = v30;
            v21 = sub_1A443E4C8(0x656475746974616CLL, 0xE800000000000000);
            if ((v22 & 1) == 0)
              goto LABEL_34;
            sub_1A44311F0(*(_QWORD *)(v30 + 56) + 32 * v21, (uint64_t)&v32);
            if ((swift_dynamicCast() & 1) != 0
              && *(_QWORD *)(v30 + 16)
              && (v14 = v30, v23 = sub_1A443E4C8(0x64757469676E6F6CLL, 0xE900000000000065), (v24 & 1) != 0)
              && (sub_1A44311F0(*(_QWORD *)(v30 + 56) + 32 * v23, (uint64_t)&v32), (swift_dynamicCast() & 1) != 0)
              && *(_QWORD *)(v30 + 16)
              && (v35 = v30, v25 = sub_1A443E4C8(0x737569646172, 0xE600000000000000), (v26 & 1) != 0)
              && (sub_1A44311F0(*(_QWORD *)(v30 + 56) + 32 * v25, (uint64_t)&v32), (swift_dynamicCast() & 1) != 0))
            {
              v16 = v30;
              if (*(_QWORD *)(v30 + 16)
                && (v27 = sub_1A443E4C8(0x74696D69786F7270, 0xE900000000000079), (v28 & 1) != 0))
              {
                sub_1A44311F0(*(_QWORD *)(v30 + 56) + 32 * v27, (uint64_t)&v32);
              }
              else
              {
                v32 = 0u;
                v33 = 0u;
              }
              swift_bridgeObjectRelease();
              if (!*((_QWORD *)&v33 + 1))
              {
                swift_bridgeObjectRelease();
                goto LABEL_43;
              }
              if ((swift_dynamicCast() & 1) != 0)
              {
                v17 = sub_1A469171C();
                swift_bridgeObjectRelease();
                if (v17 < 3)
                {
                  v18 = 1;
                  v15 = v35;
                  goto LABEL_16;
                }
              }
            }
            else
            {
LABEL_34:
              swift_bridgeObjectRelease();
            }
          }
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_44;
    }
LABEL_43:
    sub_1A445404C((uint64_t)&v32, &qword_1ED243E68);
    goto LABEL_44;
  }
  sub_1A444ABF4((uint64_t)v34, (uint64_t)&v32, &qword_1ED243E68);
  if (!*((_QWORD *)&v33 + 1))
    goto LABEL_43;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v8 = sub_1A469171C();
    swift_bridgeObjectRelease();
    if (v8 < 3)
    {
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
      v17 = 0;
      v18 = 0;
LABEL_16:
      result = sub_1A445404C((uint64_t)v34, &qword_1ED243E68);
      *(_QWORD *)a2 = v8;
      *(_QWORD *)(a2 + 8) = v13;
      *(_QWORD *)(a2 + 16) = v14;
      *(_QWORD *)(a2 + 24) = v15;
      *(_QWORD *)(a2 + 32) = v16;
      *(_QWORD *)(a2 + 40) = v17;
      *(_BYTE *)(a2 + 48) = v18;
      return result;
    }
  }
LABEL_44:
  sub_1A4523A50();
  swift_allocError();
  *(_OWORD *)v29 = 0u;
  *(_OWORD *)(v29 + 16) = 0u;
  *(_BYTE *)(v29 + 32) = 0;
  swift_willThrow();
  return sub_1A445404C((uint64_t)v34, &qword_1ED243E68);
}

unint64_t sub_1A4521F40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t inited;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = sub_1A46900FC();
  v37 = *(_QWORD *)(v1 - 8);
  v38 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v4 = v0[1];
  if ((unint64_t)*v0 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = MEMORY[0x1E0DEE9D8];
  v36 = v4;
  if (v6)
  {
    v39 = MEMORY[0x1E0DEE9D8];
    result = sub_1A445A8BC(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
    {
      __break(1u);
      goto LABEL_32;
    }
    v9 = 0;
    v35 = v5 & 0xC000000000000001;
    v10 = v5;
    do
    {
      if (v35)
        v11 = (id)MEMORY[0x1A859ECE0](v9, v5);
      else
        v11 = *(id *)(v5 + 8 * v9 + 32);
      v12 = v11;
      v13 = objc_msgSend(v11, sel_uuid, v35);
      sub_1A46900F0();

      v14 = sub_1A46900CC();
      v16 = v15;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v3, v38);

      v7 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A445A8BC(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v39;
      }
      v18 = *(_QWORD *)(v7 + 16);
      v17 = *(_QWORD *)(v7 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1A445A8BC(v17 > 1, v18 + 1, 1);
        v7 = v39;
      }
      ++v9;
      *(_QWORD *)(v7 + 16) = v18 + 1;
      v19 = v7 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v14;
      *(_QWORD *)(v19 + 40) = v16;
      v5 = v10;
    }
    while (v6 != v9);
    v4 = v36;
  }
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v21 = MEMORY[0x1E0DEE9D8];
  if (!v20)
  {
LABEL_28:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A4696430;
    *(_QWORD *)(inited + 32) = 0x6564756C636E69;
    *(_QWORD *)(inited + 40) = 0xE700000000000000;
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    *(_QWORD *)(inited + 48) = v7;
    *(_QWORD *)(inited + 72) = v34;
    *(_QWORD *)(inited + 80) = 0x6564756C637865;
    *(_QWORD *)(inited + 120) = v34;
    *(_QWORD *)(inited + 88) = 0xE700000000000000;
    *(_QWORD *)(inited + 96) = v21;
    return sub_1A443CDB8(inited);
  }
  v39 = MEMORY[0x1E0DEE9D8];
  result = sub_1A445A8BC(0, v20 & ~(v20 >> 63), 0);
  if ((v20 & 0x8000000000000000) == 0)
  {
    v22 = 0;
    v23 = v4 & 0xC000000000000001;
    do
    {
      if (v23)
        v24 = (id)MEMORY[0x1A859ECE0](v22, v4);
      else
        v24 = *(id *)(v4 + 8 * v22 + 32);
      v25 = v24;
      v26 = objc_msgSend(v24, sel_uuid);
      sub_1A46900F0();

      v27 = sub_1A46900CC();
      v29 = v28;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v3, v38);

      v21 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A445A8BC(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v21 = v39;
      }
      v31 = *(_QWORD *)(v21 + 16);
      v30 = *(_QWORD *)(v21 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1A445A8BC(v30 > 1, v31 + 1, 1);
        v21 = v39;
      }
      ++v22;
      *(_QWORD *)(v21 + 16) = v31 + 1;
      v32 = v21 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v27;
      *(_QWORD *)(v32 + 40) = v29;
      v4 = v36;
    }
    while (v20 != v22);
    goto LABEL_28;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1A45222E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_7;
  v4 = sub_1A443E4C8(0x6564756C636E69, 0xE700000000000000);
  if ((v5 & 1) == 0)
    goto LABEL_7;
  sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_7;
  v6 = v16;
  if (*(_QWORD *)(a1 + 16) && (v7 = sub_1A443E4C8(0x6564756C637865, 0xE700000000000000), (v8 & 1) != 0))
  {
    sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v7, (uint64_t)&v14);
  }
  else
  {
    v14 = 0u;
    v15 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v15 + 1))
  {
    swift_bridgeObjectRelease();
    sub_1A445404C((uint64_t)&v14, &qword_1ED243E68);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
LABEL_8:
    sub_1A4523A50();
    swift_allocError();
    *(_QWORD *)v9 = 1;
    *(_QWORD *)(v9 + 8) = 0;
    *(_QWORD *)(v9 + 16) = 0;
    *(_QWORD *)(v9 + 24) = 0;
    *(_BYTE *)(v9 + 32) = 0;
    return swift_willThrow();
  }
  v11 = v16;
  v12 = sub_1A45224A4(v6);
  swift_bridgeObjectRelease();
  v13 = sub_1A45224A4(v11);
  result = swift_bridgeObjectRelease();
  *a2 = v12;
  a2[1] = v13;
  return result;
}

uint64_t sub_1A45224A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A46900FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0DEE9D8];
  v25 = MEMORY[0x1E0DEE9D8];
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    v21[1] = a1;
    v22 = v5;
    v10 = a1 + 40;
    v23 = v4;
    v11 = v24;
    do
    {
      swift_bridgeObjectRetain();
      sub_1A46900C0();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_1A445404C((uint64_t)v4, &qword_1ED243170);
        swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
        v12 = objc_msgSend((id)objc_opt_self(), sel_cdEntityName);
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v13 = v6;

        v14 = objc_allocWithZone((Class)type metadata accessor for REMObjectID_Codable());
        v15 = (void *)sub_1A46900D8();
        v16 = (void *)sub_1A469087C();
        v17 = v22;
        v4 = v23;
        swift_bridgeObjectRelease();
        v18 = objc_msgSend(v14, sel_initWithUUID_entityName_, v15, v16);

        v6 = v13;
        v19 = *(void (**)(char *, uint64_t))(v13 + 8);
        v5 = v17;
        v19(v11, v17);
        v20 = swift_bridgeObjectRelease();
        if (v18)
        {
          MEMORY[0x1A859E3E0](v20);
          if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A4690BDC();
          sub_1A4690C18();
          sub_1A4690BB8();
        }
      }
      v10 += 16;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    return v25;
  }
  return result;
}

void sub_1A452270C()
{
  id v0;
  void *v1;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v1 = (void *)sub_1A469087C();
  objc_msgSend(v0, sel_setDateFormat_, v1);

  qword_1EE71F868 = (uint64_t)v0;
}

uint64_t sub_1A4522780()
{
  unint64_t v0;

  v0 = sub_1A469171C();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1A45227C8()
{
  unint64_t v0;

  v0 = sub_1A469171C();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_1A452280C(uint64_t a1, unint64_t a2, unsigned __int8 *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  unint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  objc_class *v84;
  _BYTE *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  int v102;
  __int128 v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  objc_super v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  unsigned __int8 v118;
  uint64_t v119;

  v119 = *MEMORY[0x1E0C80C00];
  v6 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (uint64_t)&v95 - v12;
  MEMORY[0x1E0C80A78](v11);
  v106 = (uint64_t)&v95 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  v16 = MEMORY[0x1E0C80A78](v15);
  v107 = (uint64_t)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v95 - v19;
  MEMORY[0x1E0C80A78](v18);
  v109 = (uint64_t)&v95 - v21;
  v111 = *a3;
  v22 = (void *)objc_opt_self();
  v23 = (void *)sub_1A468FFAC();
  *(_QWORD *)&v114 = 0;
  v24 = objc_msgSend(v22, sel_JSONObjectWithData_options_error_, v23, 0, &v114);

  if (!v24)
  {
    v32 = (id)v114;
    sub_1A468FE68();

    swift_willThrow();
    v33 = a1;
    v34 = a2;
LABEL_14:
    sub_1A44695EC(v33, v34);
    return v13;
  }
  v108 = a2;
  v25 = (id)v114;
  sub_1A4691278();
  swift_unknownObjectRelease();
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E180);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1A4523A50();
    swift_allocError();
    *(_QWORD *)v35 = v111;
    *(_QWORD *)(v35 + 8) = 0;
    *(_QWORD *)(v35 + 16) = 0;
    *(_QWORD *)(v35 + 24) = 0;
    *(_BYTE *)(v35 + 32) = 0;
    swift_willThrow();
    v33 = a1;
LABEL_13:
    v34 = v108;
    goto LABEL_14;
  }
  v27 = v111;
  v26 = v112;
  v28 = a1;
  if (v111
    && *(_QWORD *)(v112 + 16)
    && (v29 = sub_1A443E4C8(0x6F6974617265706FLL, 0xE90000000000006ELL), (v30 & 1) != 0)
    && (sub_1A44311F0(*(_QWORD *)(v26 + 56) + 32 * v29, (uint64_t)&v114), (swift_dynamicCast() & 1) != 0))
  {
    v31 = sub_1A469171C();
    swift_bridgeObjectRelease();
    if (v31)
    {
      v27 = v111;
      if (v31 == 1)
      {
        v102 = 1;
        if (!*(_QWORD *)(v26 + 16))
          goto LABEL_25;
        goto LABEL_16;
      }
      swift_bridgeObjectRelease();
      sub_1A4523A50();
      swift_allocError();
      *(_QWORD *)v94 = 1;
      *(_QWORD *)(v94 + 8) = 0;
      *(_QWORD *)(v94 + 16) = 0;
      *(_QWORD *)(v94 + 24) = 0;
      *(_BYTE *)(v94 + 32) = 0;
      swift_willThrow();
      v33 = v28;
      goto LABEL_13;
    }
    v102 = 0;
    v27 = v111;
    if (!*(_QWORD *)(v26 + 16))
    {
LABEL_25:
      v104 = 0;
      v103 = 2uLL;
      goto LABEL_26;
    }
  }
  else
  {
    v102 = 0;
    if (!*(_QWORD *)(v26 + 16))
      goto LABEL_25;
  }
LABEL_16:
  v36 = sub_1A443E4C8(0x7367617468736168, 0xE800000000000000);
  if ((v37 & 1) == 0)
    goto LABEL_25;
  sub_1A44311F0(*(_QWORD *)(v26 + 56) + 32 * v36, (uint64_t)&v114);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_25;
  v38 = v110;
  if ((v27 & 1) != 0)
    sub_1A451ECFC(v112, (uint64_t)&v114);
  else
    sub_1A451EAE0(v112, (uint64_t)&v114);
  v110 = v38;
  if (!v38)
  {
    v103 = v114;
    v104 = v115;
LABEL_26:
    v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v39(v109, 1, 1, v6);
    if (*(_QWORD *)(v26 + 16))
    {
      v40 = sub_1A443E4C8(1702125924, 0xE400000000000000);
      if ((v41 & 1) != 0)
      {
        sub_1A44311F0(*(_QWORD *)(v26 + 56) + 32 * v40, (uint64_t)&v114);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v42 = v110;
          if ((v27 & 1) != 0)
          {
            sub_1A45205A8(v112, (uint64_t)v10);
            v13 = (uint64_t)v10;
          }
          else
          {
            sub_1A451F9F8(v112, (_BYTE *)v13);
          }
          v110 = v42;
          if (v42)
          {
            swift_bridgeObjectRelease();
            sub_1A44F4804(v103);
            sub_1A44695EC(v28, v108);
LABEL_78:
            sub_1A445404C(v109, (uint64_t *)&unk_1EE71ED00);
            return v13;
          }
          v43 = v13;
          v44 = v106;
          sub_1A452348C(v43, v106);
          sub_1A452348C(v44, (uint64_t)v20);
          v45 = v28;
          v46 = v109;
          sub_1A445404C(v109, (uint64_t *)&unk_1EE71ED00);
          v39((uint64_t)v20, 0, 1, v6);
          v47 = v46;
          v28 = v45;
          sub_1A44C6CC8((uint64_t)v20, v47, (uint64_t *)&unk_1EE71ED00);
        }
      }
    }
    if (*(_QWORD *)(v26 + 16)
      && (v48 = sub_1A443E4C8(1701669236, 0xE400000000000000), (v49 & 1) != 0)
      && (sub_1A44311F0(*(_QWORD *)(v26 + 56) + 32 * v48, (uint64_t)&v114), (swift_dynamicCast() & 1) != 0))
    {
      v13 = sub_1A4461598(v112);
      v51 = v50;
      v27 = v111;
      swift_bridgeObjectRelease();
      if (!v51
        || (*(_QWORD *)&v114 = v13,
            *((_QWORD *)&v114 + 1) = v51,
            sub_1A4690A50(),
            v13 = sub_1A45227C8(),
            v13 == 6))
      {
        sub_1A4523A50();
        swift_allocError();
        *(_OWORD *)v52 = 0u;
        *(_OWORD *)(v52 + 16) = 0u;
        *(_BYTE *)(v52 + 32) = 0;
        swift_willThrow();
        swift_bridgeObjectRelease();
        sub_1A44F4804(v103);
        sub_1A44695EC(v28, v108);
        sub_1A445404C(v109, (uint64_t *)&unk_1EE71ED00);
        return v13;
      }
    }
    else
    {
      LODWORD(v13) = 6;
    }
    v53 = *(_QWORD *)(v26 + 16);
    LODWORD(v106) = v13;
    if (v53
      && (v54 = sub_1A443E4C8(0x697469726F697270, 0xEA00000000007365), (v55 & 1) != 0)
      && (sub_1A44311F0(*(_QWORD *)(v26 + 56) + 32 * v54, (uint64_t)&v114),
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0),
          (swift_dynamicCast() & 1) != 0))
    {
      v56 = v112;
      v57 = *(_QWORD *)(v112 + 16);
      if (v57)
      {
        swift_bridgeObjectRetain();
        v101 = v56;
        v58 = v56 + 40;
        v59 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        do
        {
          swift_bridgeObjectRetain();
          v60 = sub_1A469171C();
          swift_bridgeObjectRelease();
          if (v60 <= 3)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v59 = sub_1A4439754(0, v59[2] + 1, 1, v59);
            v62 = v59[2];
            v61 = v59[3];
            if (v62 >= v61 >> 1)
              v59 = sub_1A4439754((_QWORD *)(v61 > 1), v62 + 1, 1, v59);
            v59[2] = v62 + 1;
            v59[v62 + 4] = v60;
          }
          v58 += 16;
          --v57;
        }
        while (v57);
        swift_bridgeObjectRelease();
        v27 = v111;
      }
      else
      {
        v59 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(v26 + 16))
        goto LABEL_62;
    }
    else
    {
      v59 = 0;
      if (!*(_QWORD *)(v26 + 16))
        goto LABEL_62;
    }
    v63 = sub_1A443E4C8(0x64656767616C66, 0xE700000000000000);
    if ((v64 & 1) != 0)
    {
      sub_1A44311F0(*(_QWORD *)(v26 + 56) + 32 * v63, (uint64_t)&v114);
      if (swift_dynamicCast())
      {
        v13 = v112;
        if (!*(_QWORD *)(v26 + 16))
          goto LABEL_67;
LABEL_63:
        v65 = sub_1A443E4C8(0x6E6F697461636F6CLL, 0xE800000000000000);
        if ((v66 & 1) != 0)
        {
          sub_1A44311F0(*(_QWORD *)(v26 + 56) + 32 * v65, (uint64_t)&v114);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v67 = v112;
            LOBYTE(v112) = v27;
            v68 = v110;
            sub_1A451E554(v67, &v112, (uint64_t)&v114);
            v110 = v68;
            if (v68)
            {
              swift_bridgeObjectRelease();
              sub_1A44695EC(v28, v108);
              sub_1A44F4804(v103);
              swift_bridgeObjectRelease();
              goto LABEL_78;
            }
            v70 = *((_QWORD *)&v114 + 1);
            v69 = v114;
            v72 = *((_QWORD *)&v115 + 1);
            v71 = v115;
            v73 = v116;
            v74 = v117;
            v75 = v118;
LABEL_68:
            v99 = v28;
            v98 = v69;
            v97 = v70;
            v96 = v71;
            v95 = v72;
            v111 = v73;
            v101 = v74;
            v100 = v75;
            if (v27)
            {
              if (*(_QWORD *)(v26 + 16) && (v76 = sub_1A443E4C8(0x737473696CLL, 0xE500000000000000), (v77 & 1) != 0))
              {
                sub_1A44311F0(*(_QWORD *)(v26 + 56) + 32 * v76, (uint64_t)&v114);
              }
              else
              {
                v114 = 0u;
                v115 = 0u;
              }
              swift_bridgeObjectRelease();
              if (*((_QWORD *)&v115 + 1))
              {
                if ((swift_dynamicCast() & 1) != 0)
                {
                  v79 = v110;
                  sub_1A45222E8(v112, (uint64_t *)&v114);
                  v110 = v79;
                  if (v79)
                  {
                    sub_1A44695EC(v28, v108);
                    swift_bridgeObjectRelease();
                    sub_1A44F4804(v103);
                    sub_1A44F4820(v69, v70, v71, v72, v111, v101, v100);
                    goto LABEL_78;
                  }
                  v78 = v13;
                  v81 = *((_QWORD *)&v114 + 1);
                  v80 = v114;
LABEL_82:
                  v82 = v109;
                  v83 = v107;
                  sub_1A444ABF4(v109, v107, (uint64_t *)&unk_1EE71ED00);
                  v84 = (objc_class *)type metadata accessor for REMCustomSmartListFilterDescriptor(0);
                  v85 = objc_allocWithZone(v84);
                  v85[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v102;
                  v86 = &v85[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
                  v87 = *((_QWORD *)&v103 + 1);
                  *(_QWORD *)v86 = v103;
                  *((_QWORD *)v86 + 1) = v87;
                  v86[16] = v104;
                  sub_1A444ABF4(v83, (uint64_t)&v85[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1EE71ED00);
                  v85[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = v106;
                  *(_QWORD *)&v85[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = v59;
                  v85[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = v78;
                  v88 = &v85[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
                  v89 = v97;
                  *(_QWORD *)v88 = v98;
                  *((_QWORD *)v88 + 1) = v89;
                  v90 = v95;
                  *((_QWORD *)v88 + 2) = v96;
                  *((_QWORD *)v88 + 3) = v90;
                  v91 = v101;
                  *((_QWORD *)v88 + 4) = v111;
                  *((_QWORD *)v88 + 5) = v91;
                  v88[48] = v100;
                  v92 = &v85[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
                  *v92 = v80;
                  v92[1] = v81;
                  v113.receiver = v85;
                  v113.super_class = v84;
                  v13 = (uint64_t)objc_msgSendSuper2(&v113, sel_init);
                  sub_1A445404C(v83, (uint64_t *)&unk_1EE71ED00);
                  sub_1A44695EC(v99, v108);
                  sub_1A445404C(v82, (uint64_t *)&unk_1EE71ED00);
                  return v13;
                }
                v78 = v13;
              }
              else
              {
                v78 = v13;
                sub_1A445404C((uint64_t)&v114, &qword_1ED243E68);
              }
            }
            else
            {
              v78 = v13;
              swift_bridgeObjectRelease();
            }
            v80 = 0;
            v81 = 0;
            goto LABEL_82;
          }
        }
LABEL_67:
        v69 = 0;
        v70 = 0;
        v71 = 0;
        v72 = 0;
        v73 = 0;
        v74 = 0;
        v75 = 255;
        goto LABEL_68;
      }
    }
LABEL_62:
    v13 = 2;
    if (!*(_QWORD *)(v26 + 16))
      goto LABEL_67;
    goto LABEL_63;
  }
  sub_1A44695EC(v28, v108);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1A452348C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A45234D0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A452350C()
{
  unint64_t result;

  result = qword_1EE71F870;
  if (!qword_1EE71F870)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.DataSerializationError, &type metadata for REMCustomSmartListFilterDescriptor.DataSerializationError);
    atomic_store(result, (unint64_t *)&qword_1EE71F870);
  }
  return result;
}

unint64_t sub_1A4523554()
{
  unint64_t result;

  result = qword_1EE71F878;
  if (!qword_1EE71F878)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.DataSerializationVersion, &type metadata for REMCustomSmartListFilterDescriptor.DataSerializationVersion);
    atomic_store(result, (unint64_t *)&qword_1EE71F878);
  }
  return result;
}

uint64_t _s24DataSerializationVersionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A45235E4 + 4 * byte_1A469E068[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A4523618 + 4 * byte_1A469E063[v4]))();
}

uint64_t sub_1A4523618(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4523620(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4523628);
  return result;
}

uint64_t sub_1A4523634(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A452363CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A4523640(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4523648(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.DataSerializationVersion()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.DataSerializationVersion;
}

_WORD *__swift_memcpy2_2(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s22DataSerializationErrorOwet(unsigned __int16 *a1, int a2)
{
  int v2;
  int v3;
  int v4;

  if (!a2)
    return 0;
  if ((a2 + 0xFFFF) <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if ((a2 + 0xFFFF) < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 0xFFFF;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        return 0;
      return (*a1 | (v4 << 16)) - 0xFFFF;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 0xFFFF;
  }
  return 0;
}

uint64_t _s22DataSerializationErrorOwst(_WORD *a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 0xFFFF) <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if ((a3 + 0xFFFF) < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (!a2)
    return ((uint64_t (*)(void))((char *)sub_1A4523758 + 4 * byte_1A469E072[v4]))();
  *a1 = a2 - 1;
  return ((uint64_t (*)(void))((char *)sub_1A4523738 + 4 * byte_1A469E06D[v4]))();
}

uint64_t sub_1A4523738(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A4523758(uint64_t result)
{
  *(_BYTE *)(result + 2) = 0;
  return result;
}

uint64_t sub_1A4523760(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A4523768(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A4523770(uint64_t result)
{
  *(_WORD *)(result + 2) = 0;
  return result;
}

uint64_t sub_1A4523778(uint64_t result)
{
  *(_DWORD *)(result + 2) = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.DataSerializationError()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.DataSerializationError;
}

uint64_t sub_1A4523794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 < 0)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t _s24DataDeserializationErrorOwxx(uint64_t a1)
{
  return sub_1A45237D8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_1A45237D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 < 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s24DataDeserializationErrorOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A4523794(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t _s24DataDeserializationErrorOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A4523794(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1A45237D8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t _s24DataDeserializationErrorOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1A45237D8(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t _s24DataDeserializationErrorOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s24DataDeserializationErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1A45239CC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 7;
}

uint64_t sub_1A45239D8(uint64_t result)
{
  *(_BYTE *)(result + 32) &= ~0x80u;
  return result;
}

uint64_t sub_1A45239E8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = *(_BYTE *)(result + 32) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for REMCustomSmartListFilterDescriptor.DataDeserializationError()
{
  return &type metadata for REMCustomSmartListFilterDescriptor.DataDeserializationError;
}

uint64_t sub_1A4523A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A4523A50()
{
  unint64_t result;

  result = qword_1EE71F880;
  if (!qword_1EE71F880)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.DataDeserializationError, &type metadata for REMCustomSmartListFilterDescriptor.DataDeserializationError);
    atomic_store(result, (unint64_t *)&qword_1EE71F880);
  }
  return result;
}

unint64_t sub_1A4523A94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED243CF8;
  if (!qword_1ED243CF8)
  {
    v1 = sub_1A46900B4();
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0CB08B0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED243CF8);
  }
  return result;
}

void Publisher.map<A, B>(executeOn:receiveOn:transform:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25[4];

  v25[1] = a7;
  v25[2] = a3;
  v25[3] = a5;
  v25[0] = a8;
  v12 = *(_QWORD *)(a6 - 8);
  v13 = MEMORY[0x1E0C80A78](a1);
  v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)v25 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v20, v23, v22);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v24(v18, a1, a6);
  v24(v15, a2, a6);
  Publishers.MapOnScheduler.init(upstream:executeOnScheduler:receiveOnScheduler:transform:)((uint64_t)v20, a4, v25[0]);
}

uint64_t sub_1A4523C04()
{
  return swift_retain();
}

void Publishers.MapOnScheduler.init(upstream:executeOnScheduler:receiveOnScheduler:transform:)(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for Publishers.MapOnScheduler();
}

uint64_t sub_1A4523CA4(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD *v10;

  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32);
  v8(v6 + a1[15], v5, v1);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v6 + a1[16], v4, v1);
  v10 = (_QWORD *)(v6 + a1[17]);
  *v10 = v3;
  v10[1] = v2;
  return result;
}

void type metadata accessor for Publishers.MapOnScheduler()
{
  JUMPOUT(0x1A859FF40);
}

uint64_t Publishers.MapOnScheduler.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Publishers.MapOnScheduler.executeOnScheduler.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 60));
}

uint64_t Publishers.MapOnScheduler.receiveOnScheduler.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 64));
}

uint64_t Publishers.MapOnScheduler.transform.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 68));
  swift_retain();
  return v2;
}

uint64_t Publishers.MapOnScheduler.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t AssociatedTypeWitness;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v82 = a3;
  v83 = a4;
  v84 = a1;
  v79 = *(_QWORD *)(a2 - 8);
  v81 = *(_QWORD *)(v79 + 64);
  MEMORY[0x1E0C80A78](a1);
  v80 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v6 + 48);
  v8 = *(_QWORD *)(v6 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v90 = sub_1A46911A0();
  v78 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v76 = (char *)&v54 - v9;
  v71 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(qword_1EE71F888);
  v63 = *(v71 - 1);
  MEMORY[0x1E0C80A78](v71);
  v62 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1A4690384();
  v11 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = *(_QWORD *)(a2 + 16);
  v14 = *(_QWORD *)(a2 + 40);
  v15 = a2;
  v56 = a2;
  v55 = v14;
  v16 = sub_1A46903CC();
  v17 = *(_QWORD *)(v16 - 8);
  v60 = v16;
  v74 = v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v54 - v18;
  v61 = MEMORY[0x1A85A0000](MEMORY[0x1E0C95AB8], v16);
  v91 = v16;
  v92 = v8;
  v85 = v8;
  v93 = v61;
  v94 = v7;
  v20 = sub_1A4690408();
  v77 = *(_QWORD *)(v20 - 8);
  v64 = v20;
  MEMORY[0x1E0C80A78](v20);
  v87 = (char *)&v54 - v21;
  v66 = *(_QWORD *)(v15 + 32);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  v22 = sub_1A4691CF8();
  v70 = v22;
  v23 = MEMORY[0x1A85A0000](MEMORY[0x1E0C964C8]);
  v69 = v23;
  v65 = MEMORY[0x1A85A0000](MEMORY[0x1E0C95CB8], v20);
  v91 = v22;
  v92 = v20;
  v93 = v23;
  v94 = v65;
  v24 = sub_1A46903D8();
  v75 = *(_QWORD *)(v24 - 8);
  v67 = v24;
  MEMORY[0x1E0C80A78](v24);
  v57 = (char *)&v54 - v25;
  v68 = MEMORY[0x1A85A0000](MEMORY[0x1E0C95B78], v24);
  v91 = v24;
  v92 = v8;
  v93 = v68;
  v94 = v7;
  v72 = sub_1A4690408();
  v73 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v59 = (char *)&v54 - v26;
  v27 = v11;
  v28 = *(void (**)(char *, _QWORD, uint64_t))(v11 + 104);
  v29 = v13;
  v30 = v58;
  v28(v13, *MEMORY[0x1E0C958B8], v58);
  v31 = v63;
  v32 = v62;
  v33 = v71;
  (*(void (**)(char *, _QWORD, _QWORD *))(v63 + 104))(v62, *MEMORY[0x1E0C958E8], v71);
  v34 = v19;
  v35 = v88;
  sub_1A4690534();
  (*(void (**)(char *, _QWORD *))(v31 + 8))(v32, v33);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v30);
  v36 = v56;
  v37 = v35;
  v71 = *(_QWORD **)(*(_QWORD *)(AssociatedTypeWitness - 8) + 56);
  v38 = v76;
  ((void (*)(char *, uint64_t, uint64_t))v71)(v76, 1, 1);
  v39 = v60;
  v40 = v85;
  sub_1A4690558();
  v78 = *(_QWORD *)(v78 + 8);
  ((void (*)(char *, uint64_t))v78)(v38, v90);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v34, v39);
  v41 = v79;
  v42 = v80;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v80, v37, v36);
  v43 = (*(unsigned __int8 *)(v41 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v44 = (char *)swift_allocObject();
  *((_QWORD *)v44 + 2) = v86;
  *((_QWORD *)v44 + 3) = v40;
  v45 = v82;
  v46 = v83;
  *((_QWORD *)v44 + 4) = v66;
  *((_QWORD *)v44 + 5) = v45;
  *((_QWORD *)v44 + 6) = v55;
  *((_QWORD *)v44 + 7) = v7;
  *((_QWORD *)v44 + 8) = v46;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v44[v43], v42, v36);
  v47 = v57;
  v48 = v64;
  v49 = v87;
  sub_1A469054C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v49, v48);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v71)(v38, 1, 1, AssociatedTypeWitness);
  v50 = v59;
  v51 = v67;
  sub_1A4690558();
  ((void (*)(char *, uint64_t))v78)(v38, v90);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v47, v51);
  v52 = v72;
  sub_1A46903FC();
  return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v50, v52);
}

uint64_t sub_1A4524404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v21 = a7;
  v22 = a8;
  v20 = a6;
  v23 = a9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  v15 = sub_1A4691D10();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v20 - v17;
  v24 = a3;
  v25 = a4;
  v26 = a5;
  v27 = v20;
  v28 = v21;
  v29 = v22;
  v30 = a10;
  v31 = a2;
  v32 = a1;
  sub_1A44E6940((void (*)(_BYTE *))sub_1A4524FC0, (uint64_t)&v20 - v17);
  sub_1A4691D04();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

void sub_1A452451C()
{
  type metadata accessor for Publishers.MapOnScheduler();
}

uint64_t sub_1A452455C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v5 = v2 + ((v4 + 72) & ~v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v5, v1);
  v6 = *(void (**)(uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v6(v5 + *(int *)(a1 + 60));
  v6(v5 + *(int *)(a1 + 64));
  swift_release();
  return swift_deallocObject();
}

void sub_1A4524600()
{
  type metadata accessor for Publishers.MapOnScheduler();
}

uint64_t sub_1A4524650(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return sub_1A4524404(v1, v2 + ((v11 + 72) & ~v11), v4, v5, v6, v7, v8, v9, v3, v10);
}

uint64_t sub_1A45246AC()
{
  return MEMORY[0x1E0DEDB38];
}

uint64_t sub_1A45246B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.MapOnScheduler.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t sub_1A45246CC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1A4524768(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(unint64_t, unint64_t, uint64_t);
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = v10 + v8;
  v12 = v10 + 7;
  v13 = ((v10 + 7 + ((v10 + v8 + (v9 & ~v8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16;
  v14 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v14 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0 || v13 > 0x18)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
  }
  else
  {
    v18 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v19 = ((unint64_t)a2 + v9) & v18;
    v20 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16);
    v20(((unint64_t)v4 + v9) & v18, v19, v5);
    v21 = (v11 + v19) & v18;
    v20((v11 + (((unint64_t)v4 + v9) & v18)) & v18, v21, v5);
    v22 = (_QWORD *)((v12 + v21) & 0xFFFFFFFFFFFFFFF8);
    v23 = v22[1];
    v24 = (_QWORD *)((v12 + ((v11 + (((unint64_t)v4 + v9) & v18)) & v18)) & 0xFFFFFFFFFFFFFFF8);
    *v24 = *v22;
    v24[1] = v23;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1A45248A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8) & ~v8;
  v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v10(v9, v6);
  v10((*(_QWORD *)(v7 + 64) + v8 + v9) & ~v8, v6);
  return swift_release();
}

uint64_t sub_1A4524940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v6 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v13(v11, v12, v7);
  v14 = *(_QWORD *)(v8 + 64);
  v15 = (v14 + v9 + v11) & ~v9;
  v16 = (v14 + v9 + v12) & ~v9;
  v13(v15, v16, v7);
  v17 = (uint64_t *)((v14 + 7 + v16) & 0xFFFFFFFFFFFFFFF8);
  v19 = *v17;
  v18 = v17[1];
  v20 = (_QWORD *)((v14 + 7 + v15) & 0xFFFFFFFFFFFFFFF8);
  *v20 = v19;
  v20[1] = v18;
  swift_retain();
  return a1;
}

uint64_t sub_1A4524A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v6 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  v13(v11, v12, v7);
  v14 = *(_QWORD *)(v8 + 64);
  v15 = (v14 + v9 + v11) & ~v9;
  v16 = (v14 + v9 + v12) & ~v9;
  v13(v15, v16, v7);
  v17 = (_QWORD *)((v14 + 7 + v15) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)((v14 + 7 + v16) & 0xFFFFFFFFFFFFFFF8);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1A4524AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v6 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  v13(v11, v12, v7);
  v14 = *(_QWORD *)(v8 + 64);
  v15 = (v14 + v9 + v11) & ~v9;
  v16 = (v14 + v9 + v12) & ~v9;
  v13(v15, v16, v7);
  *(_OWORD *)((v14 + 7 + v15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v14 + 7 + v16) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A4524BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v6 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  v13(v11, v12, v7);
  v14 = *(_QWORD *)(v8 + 64);
  v15 = (v14 + v9 + v11) & ~v9;
  v16 = (v14 + v9 + v12) & ~v9;
  v13(v15, v16, v7);
  *(_OWORD *)((v14 + 7 + v15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v14 + 7 + v16) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1A4524C8C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v19;
  unint64_t v20;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= v6)
    v9 = *(_DWORD *)(v5 + 84);
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (v9 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = *(_QWORD *)(v5 + 64) + v10;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = v12 + v10;
  v14 = v12 + 7;
  if (v9 >= a2)
  {
    if (v6 == v9)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), v4);
    }
    else
    {
      v19 = (v11 + a1) & ~v10;
      if (v8 == v9)
      {
        return (*(uint64_t (**)(uint64_t))(v7 + 48))(v19);
      }
      else
      {
        v20 = *(_QWORD *)((v14 + ((v13 + v19) & ~v10)) & 0xFFFFFFFFFFFFF8);
        if (v20 >= 0xFFFFFFFF)
          LODWORD(v20) = -1;
        return (v20 + 1);
      }
    }
  }
  else
  {
    if (((((v14 + ((v13 + (v11 & ~v10)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v15 = 2;
    else
      v15 = a2 - v9 + 1;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1A4524D38 + 4 * byte_1A469E280[v17]))();
  }
}

void sub_1A4524DE8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  if (v7 >= a3)
  {
    v10 = 0u;
    if (a2 <= v7)
      goto LABEL_19;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64)
         + 7
         + ((*(_DWORD *)(v6 + 64)
           + *(unsigned __int8 *)(v6 + 80)
           + ((*(_DWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~*(unsigned __int8 *)(v6 + 80))) & ~*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v8 = a3 - v7 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v7)
LABEL_19:
      __asm { BR              X4 }
  }
  if (((*(_DWORD *)(v6 + 64)
       + 7
       + ((*(_DWORD *)(v6 + 64)
         + *(unsigned __int8 *)(v6 + 80)
         + ((*(_DWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~*(unsigned __int8 *)(v6 + 80))) & ~*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v11 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64)+ 7+ ((*(_QWORD *)(v6 + 64)+ *(unsigned __int8 *)(v6 + 80)+ ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_1A4524F10()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1A4524FA8);
}

void sub_1A4524F18(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1A4524F20);
  JUMPOUT(0x1A4524FA8);
}

void sub_1A4524F64()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A4524FA8);
}

void sub_1A4524F6C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A4524FA8);
}

uint64_t sub_1A4524F74(uint64_t a1, int a2, int a3)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_WORD *)(v12 + v13) = 0;
  if (!a2)
    JUMPOUT(0x1A4524FA8);
  if (v6 == v9)
  {
    v3 = *(uint64_t (**)(uint64_t))(v10 + 56);
    v4 = v12;
  }
  else
  {
    v4 = (v11 + v12) & v7;
    if (a3 != v9)
      JUMPOUT(0x1A4524F80);
    v3 = *(uint64_t (**)(uint64_t))(v8 + 56);
  }
  return v3(v4);
}

void sub_1A4524FC0()
{
  type metadata accessor for Publishers.MapOnScheduler();
}

uint64_t sub_1A452500C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t))(v4 + *(int *)(a1 + 68)))(v3);
  if (v2)
    *v1 = v2;
  return result;
}

uint64_t static AsyncOperationError.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1A4525054()
{
  uint64_t v0;

  v0 = sub_1A4525C20();
  sub_1A44FC184(v0);
  return v0;
}

uint64_t sub_1A4525084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + qword_1EE71F918);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_1A443A6F8(v6);
}

uint64_t (*sub_1A45250E0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1A4525124()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1EE71F930);
}

void sub_1A4525134(char a1)
{
  void *v1;
  void *v3;
  id v4;

  v3 = (void *)sub_1A469087C();
  objc_msgSend(v1, sel_willChangeValueForKey_, v3);

  *((_BYTE *)v1 + qword_1EE71F930) = a1;
  v4 = (id)sub_1A469087C();
  objc_msgSend(v1, sel_didChangeValueForKey_, v4);

}

uint64_t sub_1A45251CC()
{
  uint64_t v0;

  v0 = sub_1A462EDF8((uint64_t)&unk_1E4C10E78);
  swift_arrayDestroy();
  return v0;
}

uint64_t sub_1A4525210()
{
  uint64_t v0;

  v0 = sub_1A462EDF8((uint64_t)&unk_1E4C10EA8);
  swift_arrayDestroy();
  return v0;
}

uint64_t sub_1A4525254()
{
  uint64_t v0;

  v0 = sub_1A462EDF8((uint64_t)&unk_1E4C10ED8);
  swift_arrayDestroy();
  return v0;
}

uint64_t AsyncOperationError.hash(into:)()
{
  return sub_1A4691C98();
}

uint64_t AsyncOperationError.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t sub_1A45252FC()
{
  return sub_1A4691C98();
}

BOOL sub_1A4525320(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1A4525330()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t sub_1A4525374()
{
  return sub_1A4525330();
}

uint64_t sub_1A4525380()
{
  return sub_1A45252FC();
}

uint64_t sub_1A452538C()
{
  sub_1A4691C8C();
  sub_1A45252FC();
  return sub_1A4691CC8();
}

BOOL sub_1A45253D0(char *a1, char *a2)
{
  return sub_1A4525320(*a1, *a2);
}

uint64_t AsyncOperation.operationID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + qword_1EE71F920);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A4525418@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (**a3)()@<X8>)
{
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD *)(a2 + a1 - 8);
  v5 = (uint64_t (*)())sub_1A4525C20();
  v6 = (uint64_t)v5;
  v8 = v7;
  if (v5)
  {
    v5 = (uint64_t (*)())swift_allocObject();
    *((_QWORD *)v5 + 2) = v4;
    *((_QWORD *)v5 + 3) = v6;
    *((_QWORD *)v5 + 4) = v8;
    v9 = sub_1A44DBD10;
  }
  else
  {
    v9 = 0;
  }
  *a3 = v9;
  a3[1] = v5;
  return sub_1A44FC184(v6);
}

uint64_t sub_1A4525490(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)();

  v4 = *a1;
  v5 = a1[1];
  if (*a1)
  {
    v6 = *(_QWORD *)(a4 + a3 - 8);
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = v6;
    v7[3] = v4;
    v7[4] = v5;
    v8 = sub_1A44DBD10;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  sub_1A44FC184(v4);
  return sub_1A4525084((uint64_t)v8, (uint64_t)v7);
}

uint64_t sub_1A452551C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  void (**v6)(uint64_t *);
  uint64_t result;
  void (*v8)(uint64_t *);
  uint64_t v9;
  void (*v10)(uint64_t (*)(uint64_t), uint64_t);
  _QWORD *v11;
  uint64_t v12;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  v2 = sub_1A4691D10();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v12 - v4);
  if ((objc_msgSend(v0, sel_isCancelled) & 1) != 0)
  {
    v6 = (void (**)(uint64_t *))((char *)v0 + qword_1EE71F918);
    result = swift_beginAccess();
    v8 = *v6;
    if (*v6)
    {
      sub_1A4525C90();
      *v5 = swift_allocError();
      swift_storeEnumTagMultiPayload();
      sub_1A44FC184((uint64_t)v8);
      v8(v5);
      sub_1A443A6F8((uint64_t)v8);
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    sub_1A4525134(1);
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v0;
    v10 = *(void (**)(uint64_t (*)(uint64_t), uint64_t))((*v1 & *v0) + 0xA0);
    v11 = v0;
    v10(sub_1A4525C88, v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A45256BC(uint64_t a1, uint64_t a2)
{
  void (**v4)(uint64_t);
  uint64_t result;
  void (*v6)(uint64_t);

  sub_1A4525134(2);
  v4 = (void (**)(uint64_t))(a2 + qword_1EE71F918);
  result = swift_beginAccess();
  v6 = *v4;
  if (*v4)
  {
    sub_1A44FC184((uint64_t)v6);
    v6(a1);
    return sub_1A443A6F8((uint64_t)v6);
  }
  return result;
}

void sub_1A4525740(void *a1)
{
  id v1;

  v1 = a1;
  sub_1A452551C();

}

uint64_t sub_1A4525774()
{
  return 1;
}

uint64_t sub_1A452577C(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v1 = a1;
  v5 = sub_1A45257AC((uint64_t)v1, v2, v3, v4);

  return v5 & 1;
}

id sub_1A45257AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  objc_super v7;

  if (*((_BYTE *)v4 + qword_1EE71F930))
    return 0;
  v6 = (objc_class *)type metadata accessor for AsyncOperation(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), a3, a4);
  v7.receiver = v4;
  v7.super_class = v6;
  return objc_msgSendSuper2(&v7, sel_isReady);
}

BOOL sub_1A4525810()
{
  return sub_1A4525834();
}

BOOL sub_1A4525834()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + qword_1EE71F930) == 1;
}

BOOL sub_1A452584C()
{
  return sub_1A4525870();
}

BOOL sub_1A4525870()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + qword_1EE71F930) == 2;
}

id sub_1A4525888(uint64_t a1, uint64_t a2)
{
  return sub_1A45258AC(a1, a2, (void (*)(void))sub_1A45251CC);
}

id sub_1A4525894(uint64_t a1, uint64_t a2)
{
  return sub_1A45258AC(a1, a2, (void (*)(void))sub_1A4525210);
}

id sub_1A45258A0(uint64_t a1, uint64_t a2)
{
  return sub_1A45258AC(a1, a2, (void (*)(void))sub_1A4525254);
}

id sub_1A45258AC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  void *v3;

  a3();
  v3 = (void *)sub_1A4690D5C();
  swift_bridgeObjectRelease();
  return v3;
}

id AsyncOperation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id AsyncOperation.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  objc_super v10;

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  v2 = (_QWORD *)((char *)v0 + qword_1EE71F920);
  v3 = v0;
  *v2 = sub_1A4525CE0();
  v2[1] = v4;
  v5 = (_QWORD *)((char *)v3 + qword_1EE71F918);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v3 + qword_1EE71F930) = 0;

  v8 = (objc_class *)type metadata accessor for AsyncOperation(0, *(_QWORD *)(v1 + 80), v6, v7);
  v10.receiver = v3;
  v10.super_class = v8;
  return objc_msgSendSuper2(&v10, sel_init);
}

id sub_1A45259A8()
{
  return AsyncOperation.init()();
}

id AsyncOperation.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for AsyncOperation(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1A4525A14(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_1A443A6F8(*(_QWORD *)(a1 + qword_1EE71F918));
}

uint64_t sub_1A4525A54()
{
  uint64_t result;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  result = sub_1A4690954();
  if (!result)
    goto LABEL_4;
  v1 = result;
  v2 = sub_1A4525BAC(result, 0);
  v3 = sub_1A4525AF4(&v4, v2 + 4, v1, 0xD000000000000010, 0x80000001A46BF750);
  result = swift_bridgeObjectRelease();
  if (v3 != (_QWORD *)v1)
  {
    __break(1u);
LABEL_4:
    v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  off_1EE71F910 = v2;
  return result;
}

_QWORD *sub_1A4525AF4(_QWORD *result, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = result;
  v6 = HIBYTE(a5) & 0xF;
  v12 = a4;
  v13 = a5;
  if ((a5 & 0x2000000000000000) == 0)
    v6 = a4 & 0xFFFFFFFFFFFFLL;
  v14 = v6;
  if (!a2)
  {
    v7 = 0;
LABEL_14:
    *v5 = a4;
    v5[1] = a5;
    v5[2] = 0;
    v5[3] = v6;
    return (_QWORD *)v7;
  }
  v7 = a3;
  if (!a3)
    goto LABEL_14;
  if ((a3 & 0x8000000000000000) == 0)
  {
    v8 = a2;
    v9 = 0;
    while (1)
    {
      v10 = sub_1A469099C();
      if (!v11)
        break;
      ++v9;
      *v8 = v10;
      v8[1] = v11;
      v8 += 2;
      if (v7 == v9)
      {
        a4 = v12;
        a5 = v13;
        goto LABEL_13;
      }
    }
    a4 = v12;
    a5 = v13;
    v7 = v9;
LABEL_13:
    v6 = v14;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A4525BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D068);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = a1;
  v4[3] = 2 * (v6 >> 4);
  return v4;
}

uint64_t sub_1A4525C20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_1EE71F918;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1A4525C64()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A4525C88(uint64_t a1)
{
  uint64_t v1;

  return sub_1A45256BC(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1A4525C90()
{
  unint64_t result;

  result = qword_1EE71F928;
  if (!qword_1EE71F928)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for AsyncOperationError, &type metadata for AsyncOperationError);
    atomic_store(result, (unint64_t *)&qword_1EE71F928);
  }
  return result;
}

uint64_t type metadata accessor for AsyncOperation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncOperation);
}

uint64_t sub_1A4525CE0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v13;
  uint64_t v14;

  v14 = MEMORY[0x1E0DEE9D8];
  sub_1A445A9D0(0, 16, 0);
  v0 = v14;
  if (qword_1EE71C0E0 != -1)
LABEL_15:
    swift_once();
  v1 = 0;
  do
  {
    v2 = off_1EE71F910;
    v3 = *((_QWORD *)off_1EE71F910 + 2);
    if (!v3)
    {
      __break(1u);
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    v13 = 0;
    swift_bridgeObjectRetain();
    MEMORY[0x1A85A012C](&v13, 8);
    v4 = (v13 * (unsigned __int128)v3) >> 64;
    if (v3 > v13 * v3)
    {
      v5 = -(uint64_t)v3 % v3;
      if (v5 > v13 * v3)
      {
        do
        {
          v13 = 0;
          MEMORY[0x1A85A012C](&v13, 8);
        }
        while (v5 > v13 * v3);
        v4 = (v13 * (unsigned __int128)v3) >> 64;
      }
    }
    if (v4 >= v2[2])
      goto LABEL_14;
    v6 = (char *)&v2[2 * v4];
    v8 = *((_QWORD *)v6 + 4);
    v7 = *((_QWORD *)v6 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v14 = v0;
    v10 = *(_QWORD *)(v0 + 16);
    v9 = *(_QWORD *)(v0 + 24);
    if (v10 >= v9 >> 1)
    {
      sub_1A445A9D0(v9 > 1, v10 + 1, 1);
      v0 = v14;
    }
    ++v1;
    *(_QWORD *)(v0 + 16) = v10 + 1;
    v11 = v0 + 16 * v10;
    *(_QWORD *)(v11 + 32) = v8;
    *(_QWORD *)(v11 + 40) = v7;
  }
  while (v1 != 16);
  v14 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71FA40);
  sub_1A4526150();
  return sub_1A4690A44();
}

unint64_t sub_1A4525E84()
{
  unint64_t result;

  result = qword_1EE71F938[0];
  if (!qword_1EE71F938[0])
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for AsyncOperationError, &type metadata for AsyncOperationError);
    atomic_store(result, qword_1EE71F938);
  }
  return result;
}

uint64_t sub_1A4525ED0()
{
  return 8;
}

_QWORD *sub_1A4525EDC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t storeEnumTagSinglePayload for AsyncOperationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A4525F28 + 4 * byte_1A469E320[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A4525F48 + 4 * byte_1A469E325[v4]))();
}

_BYTE *sub_1A4525F28(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A4525F48(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A4525F50(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A4525F58(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A4525F60(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A4525F68(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AsyncOperationError()
{
  return &type metadata for AsyncOperationError;
}

uint64_t sub_1A4525F84()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for AsyncOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AsyncOperation.completion.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of AsyncOperation.completion.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AsyncOperation.completion.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of AsyncOperation.perform(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t sub_1A4526054(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A45260A0 + 4 * byte_1A469E32F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A45260D4 + 4 * byte_1A469E32A[v4]))();
}

uint64_t sub_1A45260D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45260DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45260E4);
  return result;
}

uint64_t sub_1A45260F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45260F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A45260FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4526104(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for AsyncOperation.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncOperation.State);
}

void sub_1A452611C()
{
  JUMPOUT(0x1A85A0000);
}

uint64_t sub_1A452612C()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1A4526150()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE71FA48;
  if (!qword_1EE71FA48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71FA40);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EE71FA48);
  }
  return result;
}

uint64_t FloatingPoint.isAlmostZero(absoluteTolerance:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A4691BE4();
  v6 = sub_1A4690834();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a2);
  return v6 & 1;
}

uint64_t CLRegion.stringRepresentation.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v1 = objc_msgSend(v0, sel_identifier);
  v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  objc_opt_self();
  v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    v4 = (void *)v3;
    v5 = v0;
    objc_msgSend(v4, sel_center, 0, 0xE000000000000000);
    sub_1A4690D38();
    sub_1A4690984();
    objc_msgSend(v4, sel_center);
    sub_1A4690D38();
    objc_msgSend(v4, sel_radius, 0, 0xE000000000000000);
    sub_1A4690D38();
    objc_msgSend(v4, sel_geoReferenceFrame);
    sub_1A46918D8();
    sub_1A4690984();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A4690984();

    swift_bridgeObjectRelease();
  }
  return v2;
}

id EquatableCLCircularRegion.base.getter()
{
  id *v0;

  return *v0;
}

ReminderKitInternal::EquatableCLCircularRegion __swiftcall EquatableCLCircularRegion.init(_:)(ReminderKitInternal::EquatableCLCircularRegion result)
{
  ReminderKitInternal::EquatableCLCircularRegion *v1;

  v1->base.super.super.isa = result.base.super.super.isa;
  return result;
}

uint64_t static EquatableCLCircularRegion.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = CLRegion.stringRepresentation.getter();
  v2 = v1;
  if (v0 == CLRegion.stringRepresentation.getter() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1A45264C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = CLRegion.stringRepresentation.getter();
  v2 = v1;
  if (v0 == CLRegion.stringRepresentation.getter() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

ValueMetadata *type metadata accessor for EquatableCLCircularRegion()
{
  return &type metadata for EquatableCLCircularRegion;
}

Class CLPlacemark.normalizedMapRegionForLocationTrigger.getter()
{
  void *v0;
  id v1;
  void *v2;
  objc_class *v3;
  CLCircularRegion v4;
  double v5;
  double v6;
  void *v7;
  double v8;
  Swift::Double v9;

  v1 = objc_msgSend(v0, sel_region);
  if (!v1)
    return 0;
  v2 = v1;
  objc_opt_self();
  v3 = (objc_class *)swift_dynamicCastObjCClass();
  v4.super.super.isa = v3;
  if (v3)
  {
    -[objc_class radius](v3, sel_radius);
    v6 = v5;
    v7 = (void *)objc_opt_self();
    objc_msgSend(v7, sel_minimumRegionMonitoringDistance);
    if (v6 < v8)
    {
      sub_1A452663C();
      objc_msgSend(v7, sel_minimumRegionMonitoringDistance);
      return (Class)CLCircularRegion.init(circularRegion:radius:)(v4, v9);
    }
  }
  else
  {

  }
  return v4.super.super.isa;
}

unint64_t sub_1A452663C()
{
  unint64_t result;

  result = qword_1EE71FA50;
  if (!qword_1EE71FA50)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE71FA50);
  }
  return result;
}

id static CLPlacemark.testing_appleInc.getter()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97378]), sel_init);
  v1 = (void *)sub_1A469087C();
  objc_msgSend(v0, sel_setStreet_, v1);

  v2 = (void *)sub_1A469087C();
  objc_msgSend(v0, sel_setCity_, v2);

  v3 = (void *)sub_1A469087C();
  objc_msgSend(v0, sel_setState_, v3);

  v4 = (void *)sub_1A469087C();
  objc_msgSend(v0, sel_setPostalCode_, v4);

  v5 = (void *)sub_1A469087C();
  objc_msgSend(v0, sel_setCountry_, v5);

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3B8]), sel_initWithLatitude_longitude_, 37.332093, -122.030255);
  v7 = v0;
  v8 = (void *)sub_1A469087C();
  v9 = objc_msgSend((id)objc_opt_self(), sel_placemarkWithLocation_name_postalAddress_, v6, v8, v7);

  return v9;
}

id static CLPlacemark.testing_applePark.getter()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97378]), sel_init);
  v1 = (void *)sub_1A469087C();
  objc_msgSend(v0, sel_setStreet_, v1);

  v2 = (void *)sub_1A469087C();
  objc_msgSend(v0, sel_setCity_, v2);

  v3 = (void *)sub_1A469087C();
  objc_msgSend(v0, sel_setState_, v3);

  v4 = (void *)sub_1A469087C();
  objc_msgSend(v0, sel_setPostalCode_, v4);

  v5 = (void *)sub_1A469087C();
  objc_msgSend(v0, sel_setCountry_, v5);

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3B8]), sel_initWithLatitude_longitude_, 37.3349, -122.00902);
  v7 = v0;
  v8 = (void *)sub_1A469087C();
  v9 = objc_msgSend((id)objc_opt_self(), sel_placemarkWithLocation_name_postalAddress_, v6, v8, v7);

  return v9;
}

uint64_t REMApplicationShortcutUserInfoKeys.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t REMApplicationShortcutUserInfoKeys.rawValue.getter()
{
  return 0xD000000000000017;
}

unint64_t sub_1A4526AB0()
{
  unint64_t result;

  result = qword_1EE71FA58;
  if (!qword_1EE71FA58)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMApplicationShortcutUserInfoKeys, &type metadata for REMApplicationShortcutUserInfoKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FA58);
  }
  return result;
}

uint64_t sub_1A4526AF4()
{
  sub_1A4691C8C();
  sub_1A4690948();
  return sub_1A4691CC8();
}

uint64_t sub_1A4526B48()
{
  return sub_1A4690948();
}

uint64_t sub_1A4526B64()
{
  sub_1A4691C8C();
  sub_1A4690948();
  return sub_1A4691CC8();
}

uint64_t sub_1A4526BB4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A4526C04(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x80000001A46BC190;
}

uint64_t storeEnumTagSinglePayload for REMApplicationShortcutUserInfoKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A4526C64 + 4 * asc_1A469E530[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A4526C84 + 4 * byte_1A469E535[v4]))();
}

_BYTE *sub_1A4526C64(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A4526C84(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A4526C8C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A4526C94(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A4526C9C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A4526CA4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMApplicationShortcutUserInfoKeys()
{
  return &type metadata for REMApplicationShortcutUserInfoKeys;
}

uint64_t sub_1A4526CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE71FA60);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE71FA60);
  if (qword_1ED243128 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256898);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t REMRemindersListBatchDeleteInvocation.ListType.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71FA78);
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45270B0();
  sub_1A4691D28();
  if (!v1)
  {
    sub_1A45270F4();
    sub_1A46917C4();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1A45270B0()
{
  unint64_t result;

  result = qword_1EE71FA80;
  if (!qword_1EE71FA80)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469F010, &type metadata for REMRemindersListBatchDeleteInvocation.ListType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FA80);
  }
  return result;
}

unint64_t sub_1A45270F4()
{
  unint64_t result;

  result = qword_1EE71FA88;
  if (!qword_1EE71FA88)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EFE8, &type metadata for REMRemindersListBatchDeleteInvocation.ListType.Base);
    atomic_store(result, (unint64_t *)&qword_1EE71FA88);
  }
  return result;
}

void REMRemindersListBatchDeleteInvocation.ListType.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD v6[5];
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = sub_1A46900FC();
  MEMORY[0x1E0C80A78](v8);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71FA90);
  v6[3] = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v5 = *((unsigned __int8 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45270B0();
  v6[4] = v4;
  sub_1A4691D40();
  __asm { BR              X9 }
}

void sub_1A4527238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  *(_BYTE *)(v3 - 160) = 1;
  *(_BYTE *)(v3 - 112) = 0;
  sub_1A452A098();
  v4 = *(void **)(v3 - 216);
  v5 = v4;
  v6 = *(_QWORD *)(v3 - 232);
  v7 = *(_QWORD *)(v3 - 240);
  sub_1A4691890();
  if (v0)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 8))(v7, v6);
    sub_1A452A0DC(v4, 0);
  }
  else
  {
    v8 = (objc_class *)type metadata accessor for REMObjectID_Codable();
    v9 = objc_allocWithZone(v8);
    v10 = v5;
    v11 = objc_msgSend(v10, sel_uuid);
    sub_1A46900F0();

    v12 = (void *)sub_1A46900D8();
    (*(void (**)(uint64_t, _QWORD))(v1 + 8))(v2, *(_QWORD *)(v3 - 224));
    v13 = objc_msgSend(v10, sel_entityName);
    if (!v13)
    {
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v13 = (id)sub_1A469087C();
      swift_bridgeObjectRelease();
    }
    *(_QWORD *)(v3 - 208) = v9;
    *(_QWORD *)(v3 - 200) = v8;
    v14 = objc_msgSendSuper2((objc_super *)(v3 - 208), sel_initWithUUID_entityName_, v12, v13);
    v15 = *(void **)(v3 - 216);
    sub_1A452A0DC(v15, 0);

    *(_QWORD *)(v3 - 160) = v14;
    *(_BYTE *)(v3 - 112) = 1;
    sub_1A4436344(&qword_1ED243370, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    v17 = *(_QWORD *)(v3 - 240);
    v16 = *(_QWORD *)(v3 - 232);
    sub_1A4691890();
    sub_1A452A0DC(v15, 0);

    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 8))(v17, v16);
  }
}

void REMRemindersListBatchDeleteInvocation.ListType.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1A4527B0C()
{
  void *v0;
  id v1;

  sub_1A452A110(v0, 0);
  v1 = objc_msgSend(v0, sel_description);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  sub_1A452A0DC(v0, 0);
  return 0x287473696CLL;
}

void sub_1A4527D4C(char *a1)
{
  sub_1A4668E24(*a1);
}

void sub_1A4527D58()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A4691C8C();
  __asm { BR              X9 }
}

uint64_t sub_1A4527D9C()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4527E10()
{
  __asm { BR              X10 }
}

uint64_t sub_1A4527E44()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A4527EA4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A4691C8C();
  __asm { BR              X9 }
}

uint64_t sub_1A4527EE4()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A4527F58@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A452BDE8();
  *a1 = result;
  return result;
}

uint64_t sub_1A4527F84()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A4527FAC + 4 * byte_1A469E621[*v0]))();
}

void sub_1A4527FAC(_QWORD *a1@<X8>)
{
  *a1 = 0x44497473696CLL;
  a1[1] = 0xE600000000000000;
}

void sub_1A4527FC4(_QWORD *a1@<X8>)
{
  *a1 = 0x7265646E696D6572;
  a1[1] = 0xEB00000000734449;
}

void sub_1A4527FE8(_QWORD *a1@<X8>)
{
  *a1 = 0x444970756F7267;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1A4528004()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A452802C + 4 * byte_1A469E625[*v0]))(1702060386, 0xE400000000000000);
}

uint64_t sub_1A452802C()
{
  return 0x44497473696CLL;
}

uint64_t sub_1A4528040()
{
  return 0x7265646E696D6572;
}

uint64_t sub_1A4528060()
{
  return 0x444970756F7267;
}

uint64_t sub_1A4528078@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A452BDE8();
  *a1 = result;
  return result;
}

uint64_t sub_1A452809C()
{
  sub_1A45270B0();
  return sub_1A4691DB8();
}

uint64_t sub_1A45280C4()
{
  sub_1A45270B0();
  return sub_1A4691DC4();
}

void sub_1A45280EC(char *a1)
{
  sub_1A4668C9C(*a1);
}

void sub_1A45280F8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A4691C8C();
  __asm { BR              X9 }
}

uint64_t sub_1A452813C()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A45281C8()
{
  __asm { BR              X10 }
}

uint64_t sub_1A45281FC()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A4528274()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A4691C8C();
  __asm { BR              X9 }
}

uint64_t sub_1A45282B4()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A4528340@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A452BE74();
  *a1 = result;
  return result;
}

uint64_t sub_1A452836C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A4528394 + 4 * byte_1A469E638[*v0]))();
}

void sub_1A4528394(_QWORD *a1@<X8>)
{
  *a1 = 1953720684;
  a1[1] = 0xE400000000000000;
}

void sub_1A45283A8(_QWORD *a1@<X8>)
{
  *a1 = 0x6D536D6F74737563;
  a1[1] = 0xEF7473694C747261;
}

void sub_1A45283D0(_QWORD *a1@<X8>)
{
  *a1 = 0x7265646E696D6572;
  a1[1] = 0xE900000000000073;
}

void sub_1A45283F0(_QWORD *a1@<X8>)
{
  *a1 = 0x70756F7267;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1A4528408()
{
  sub_1A452BE30();
  return sub_1A4690B70();
}

uint64_t sub_1A4528464()
{
  sub_1A452BE30();
  return sub_1A4690B34();
}

uint64_t sub_1A45284B4(_QWORD *a1)
{
  return REMRemindersListBatchDeleteInvocation.ListType.init(from:)(a1);
}

void sub_1A45284C8(_QWORD *a1)
{
  REMRemindersListBatchDeleteInvocation.ListType.encode(to:)(a1);
}

uint64_t REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.hasReminders(completedBefore:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A46900B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A452A364(v1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1A445404C((uint64_t)v4, &qword_1ED243190);
    v9 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    sub_1A4436344((unint64_t *)&qword_1ED243CF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v9 = sub_1A4690834() ^ 1;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9 & 1;
}

unint64_t sub_1A4528624()
{
  return 0xD000000000000014;
}

uint64_t sub_1A4528640()
{
  sub_1A452A3AC();
  return sub_1A4691DB8();
}

uint64_t sub_1A4528668()
{
  sub_1A452A3AC();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.encode(to:)(_QWORD *a1)
{
  return sub_1A45291EC(a1, &qword_1EE71FAA0, (void (*)(void))sub_1A452A3AC);
}

uint64_t REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A4529338(a1, &qword_1EE71FAB0, type metadata accessor for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate, (void (*)(void))sub_1A452A3AC, a2);
}

uint64_t sub_1A45286F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.init(from:)(a1, a2);
}

uint64_t sub_1A4528704(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4529548(a1, a2, a3, &qword_1EE71FAA0, (void (*)(void))sub_1A452A3AC);
}

id REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.list.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)v1;
  *(_QWORD *)a1 = *(_QWORD *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  return sub_1A452A110(v2, v3);
}

uint64_t REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.completedBeforeDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1
     + *(int *)(type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(0) + 20);
  return sub_1A452A364(v3, a1);
}

uint64_t REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.init(list:completedBeforeDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4;
  uint64_t v5;

  v4 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a3 = *(_QWORD *)a1;
  *(_BYTE *)(a3 + 8) = v4;
  v5 = a3
     + *(int *)(type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(0) + 20);
  return sub_1A449C96C(a2, v5);
}

uint64_t sub_1A45287B8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 1953720684;
}

uint64_t sub_1A45287F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A452BEBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A4528814()
{
  sub_1A452A418();
  return sub_1A4691DB8();
}

uint64_t sub_1A452883C()
{
  sub_1A452A418();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71FAB8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A452A418();
  sub_1A4691D40();
  v9 = *((_BYTE *)v3 + 8);
  v12 = *v3;
  v13 = v9;
  v11[15] = 0;
  sub_1A4497EA4();
  sub_1A4691890();
  if (!v2)
  {
    type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(0);
    v11[14] = 1;
    sub_1A46900B4();
    sub_1A4436344(&qword_1ED243168, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1A4691848();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

void REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;

  v17 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v4);
  v18 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71FAC8);
  v6 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A452A418();
  sub_1A4691D28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v16 = a1;
    v12 = (uint64_t)v11;
    v13 = (uint64_t)v18;
    v23 = 0;
    sub_1A452A45C();
    v14 = v19;
    sub_1A46917C4();
    v15 = v21;
    *(_QWORD *)v12 = v20;
    *(_BYTE *)(v12 + 8) = v15;
    sub_1A46900B4();
    v22 = 1;
    sub_1A4436344((unint64_t *)&unk_1ED243010, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    sub_1A469177C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
    sub_1A449C96C(v13, v12 + *(int *)(v9 + 20));
    sub_1A4497EE8(v12, v17, type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    sub_1A452A4A0(v12);
  }
}

void sub_1A4528C58(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A4528C6C(_QWORD *a1)
{
  return REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.encode(to:)(a1);
}

uint64_t REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.deletedReminderIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.accounts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.init(deletedReminderIDs:accounts:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1A4528C98()
{
  _BYTE *v0;

  if (*v0)
    return 0x73746E756F636361;
  else
    return 0xD000000000000012;
}

uint64_t sub_1A4528CD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A452BF98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A4528CFC()
{
  sub_1A452A4DC();
  return sub_1A4691DB8();
}

uint64_t sub_1A4528D24()
{
  sub_1A452A4DC();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71FAD8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A452A4DC();
  sub_1A4691D40();
  v12 = v8;
  v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2440C0);
  sub_1A4474CE4((unint64_t *)&qword_1ED2439E0, &qword_1ED243370, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable, MEMORY[0x1E0DEB3B8]);
  sub_1A4691890();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71FAE8);
    sub_1A452A520();
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71FAF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A452A4DC();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2440C0);
  v13 = 0;
  sub_1A4474CE4((unint64_t *)&qword_1ED2440C8, &qword_1ED243F80, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable, MEMORY[0x1E0DEB3D8]);
  sub_1A46917C4();
  v9 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71FAE8);
  v13 = 1;
  sub_1A452A59C();
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v14;
  *a2 = v9;
  a2[1] = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45290C4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.init(from:)(a1, a2);
}

uint64_t sub_1A45290D8(_QWORD *a1)
{
  return REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.encode(to:)(a1);
}

uint64_t static REMRemindersListBatchDeleteInvocation.DeleteInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t static REMRemindersListBatchDeleteInvocation.CountInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result.oldestCompletionDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A452A364(v1, a1);
}

uint64_t REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result.init(oldestCompletionDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A449C96C(a1, a2);
}

uint64_t sub_1A4529148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A452C084(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A4529170()
{
  sub_1A452A618();
  return sub_1A4691DB8();
}

uint64_t sub_1A4529198()
{
  sub_1A452A618();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result.encode(to:)(_QWORD *a1)
{
  return sub_1A45291EC(a1, &qword_1EE71FB08, (void (*)(void))sub_1A452A618);
}

uint64_t sub_1A45291EC(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1A4691D40();
  sub_1A46900B4();
  sub_1A4436344(&qword_1ED243168, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1A4691848();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A4529338(a1, &qword_1EE71FB18, type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result, (void (*)(void))sub_1A452A618, a2);
}

uint64_t sub_1A4529338@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v19 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v9);
  v22 = (uint64_t)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v21 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a3;
  v14 = a3(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v19 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a4();
  v17 = v23;
  sub_1A4691D28();
  if (!v17)
  {
    sub_1A46900B4();
    sub_1A4436344((unint64_t *)&unk_1ED243010, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    sub_1A469177C();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v11);
    sub_1A449C96C(v22, (uint64_t)v16);
    sub_1A44683E0((uint64_t)v16, v19, v20);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A4529508@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result.init(from:)(a1, a2);
}

uint64_t sub_1A452951C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4529548(a1, a2, a3, &qword_1EE71FB08, (void (*)(void))sub_1A452A618);
}

uint64_t sub_1A4529548(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_1A4691D40();
  sub_1A46900B4();
  sub_1A4436344(&qword_1ED243168, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1A4691848();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t static REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.supportsSecureCoding.getter()
{
  return 1;
}

id REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t static REMRemindersListBatchDeleteInvocation.fetchCompletedReminderIDsToBeDeleted(in:completedBefore:store:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A452975C(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for REMRemindersListBatchDeleteInvocation.CountInvocation, (void (*)(uint64_t *__return_ptr, id, uint64_t))sub_1A44790B8, "REMRemindersListBatchDeleteInvocation_CountInvocation RESULT {list: %s, date: %s, reminder.count: %ld}");
}

uint64_t static REMRemindersListBatchDeleteInvocation.deleteCompletedReminders(in:completedBefore:store:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A452975C(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation, (void (*)(uint64_t *__return_ptr, id, uint64_t))sub_1A44790E4, "REMRemindersListBatchDeleteInvocation_DeleteInvocation RESULT {list: %s, date: %s, reminder.count: %ld}");
}

uint64_t sub_1A452975C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), void (*a5)(uint64_t *__return_ptr, id, uint64_t), const char *a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(uint64_t *__return_ptr, id, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t *__return_ptr, id, uint64_t);
  NSObject *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  os_log_type_t v43;
  uint64_t v44;
  const char *v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  int v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  id v57;
  const char *v58;
  void (*v59)(uint64_t *__return_ptr, id, uint64_t);
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;

  v58 = a6;
  v59 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (void (*)(uint64_t *__return_ptr, id, uint64_t))((char *)&v49 - v14);
  v16 = type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (uint64_t)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(void **)a1;
  v21 = *(_BYTE *)(a1 + 8);
  v22 = sub_1A452A364(a2, v19 + *(int *)(v17 + 20));
  *(_QWORD *)v19 = v20;
  *(_BYTE *)(v19 + 8) = v21;
  v23 = objc_allocWithZone((Class)a4(v22));
  sub_1A452A110(v20, v21);
  v24 = objc_msgSend(v23, sel_initWithFetchResultTokenToDiffAgainst_, 0);
  v59(&v60, v24, v19);
  if (v6)
  {

    sub_1A452A4A0(v19);
  }
  else
  {
    v55 = v13;
    v56 = v19;
    v59 = v15;
    v57 = v24;
    v19 = v60;
    v25 = v61;

    if (qword_1EE71C0E8 != -1)
      swift_once();
    v26 = sub_1A4690318();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EE71FA60);
    v27 = v59;
    sub_1A452A364(a2, (uint64_t)v59);
    sub_1A452A110(v20, v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A452A110(v20, v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = sub_1A469030C();
    v29 = sub_1A4691008();
    if (os_log_type_enabled(v28, (os_log_type_t)v29))
    {
      v51 = v29;
      v52 = v28;
      v53 = v25;
      v54 = 0;
      v30 = (uint64_t)v27;
      v31 = swift_slowAlloc();
      v50 = swift_slowAlloc();
      v63 = v50;
      *(_DWORD *)v31 = 136315650;
      v60 = (uint64_t)v20;
      LOBYTE(v61) = v21;
      REMRemindersListBatchDeleteInvocation.ListType.description.getter();
      v60 = sub_1A4431120(v32, v33, &v63);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      sub_1A452A0DC(v20, v21);
      sub_1A452A0DC(v20, v21);
      *(_WORD *)(v31 + 12) = 2080;
      v34 = (uint64_t)v55;
      sub_1A452A364(v30, (uint64_t)v55);
      v35 = sub_1A46900B4();
      v36 = *(_QWORD *)(v35 - 8);
      v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35);
      v38 = v56;
      if (v37 == 1)
      {
        sub_1A445404C(v34, &qword_1ED243190);
        v39 = 0xE300000000000000;
        v40 = 7104878;
      }
      else
      {
        v40 = sub_1A468FFF4();
        v39 = v42;
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
      }
      v60 = sub_1A4431120(v40, v39, &v63);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      sub_1A445404C((uint64_t)v59, &qword_1ED243190);
      *(_WORD *)(v31 + 22) = 2048;
      v43 = v51;
      if ((v19 & 0xC000000000000001) != 0)
        v44 = sub_1A4691308();
      else
        v44 = *(_QWORD *)(v19 + 16);
      v45 = v58;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v60 = v44;
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v46 = v52;
      _os_log_impl(&dword_1A442D000, v52, v43, v45, (uint8_t *)v31, 0x20u);
      v47 = v50;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v47, -1, -1);
      MEMORY[0x1A85A0114](v31, -1, -1);

      v41 = v38;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_1A445404C((uint64_t)v27, &qword_1ED243190);
      sub_1A452A0DC(v20, v21);
      sub_1A452A0DC(v20, v21);
      v41 = v56;
    }
    sub_1A452A4A0(v41);
  }
  return v19;
}

void static REMRemindersListBatchDeleteInvocation.completionDatePredicate(for:store:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;

  v47 = a2;
  v3 = type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D4F8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v41 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v41 - v16;
  v18 = *(void **)a1;
  v19 = *(_BYTE *)(a1 + 8);
  v20 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, 0);
  v21 = (uint64_t)v48;
  sub_1A4479C30((uint64_t)v20, (uint64_t)v18, v19, (uint64_t)v8);
  if (v21)
  {

  }
  else
  {
    v45 = v12;
    v46 = 0;
    v48 = v15;
    v22 = v47;
    sub_1A4497EE8((uint64_t)v8, (uint64_t)v5, type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result);
    sub_1A445404C((uint64_t)v8, &qword_1EE71D4F8);
    sub_1A449C96C((uint64_t)v5, (uint64_t)v17);
    v23 = (uint64_t)v17;
    if (qword_1EE71C0E8 != -1)
      swift_once();
    v24 = sub_1A4690318();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EE71FA60);
    v25 = (uint64_t)v17;
    v26 = (uint64_t)v48;
    sub_1A452A364(v25, (uint64_t)v48);
    sub_1A452A110(v18, v19);
    sub_1A452A110(v18, v19);
    v27 = sub_1A469030C();
    v28 = sub_1A4691008();
    if (os_log_type_enabled(v27, (os_log_type_t)v28))
    {
      v43 = v28;
      v44 = v23;
      v29 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v51 = v42;
      *(_DWORD *)v29 = 136315394;
      v49 = (uint64_t)v18;
      v50 = v19;
      REMRemindersListBatchDeleteInvocation.ListType.description.getter();
      v49 = sub_1A4431120(v30, v31, &v51);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      sub_1A452A0DC(v18, v19);
      sub_1A452A0DC(v18, v19);
      *(_WORD *)(v29 + 12) = 2080;
      v32 = v26;
      v33 = (uint64_t)v45;
      sub_1A452A364(v32, (uint64_t)v45);
      v34 = sub_1A46900B4();
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1)
      {
        sub_1A445404C(v33, &qword_1ED243190);
        v36 = 0xE300000000000000;
        v37 = 7104878;
      }
      else
      {
        v37 = sub_1A468FFF4();
        v36 = v39;
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
      }
      v49 = sub_1A4431120(v37, v36, &v51);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      sub_1A445404C((uint64_t)v48, &qword_1ED243190);
      _os_log_impl(&dword_1A442D000, v27, (os_log_type_t)v43, "REMRemindersListBatchDeleteInvocation_OldestCompletionDateInvocation RESULT {list: %s, oldestCompletionDate: %s}", (uint8_t *)v29, 0x16u);
      v40 = v42;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v40, -1, -1);
      MEMORY[0x1A85A0114](v29, -1, -1);

      v38 = v22;
      v23 = v44;
    }
    else
    {
      sub_1A452A0DC(v18, v19);
      sub_1A452A0DC(v18, v19);
      sub_1A445404C(v26, &qword_1ED243190);

      v38 = v22;
    }
    sub_1A449C96C(v23, v38);
  }
}

uint64_t REMRemindersListBatchDeleteInvocation.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t REMRemindersListBatchDeleteInvocation.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1A452A098()
{
  unint64_t result;

  result = qword_1EE71FA98;
  if (!qword_1EE71FA98)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EFC0, &type metadata for REMRemindersListBatchDeleteInvocation.ListType.Base);
    atomic_store(result, (unint64_t *)&qword_1EE71FA98);
  }
  return result;
}

void sub_1A452A0DC(id a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 3:

      break;
    case 2:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

id sub_1A452A110(id result, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 3:
      result = result;
      break;
    case 2:
      result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void _s19ReminderKitInternal37REMRemindersListBatchDeleteInvocationC0E4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1A452A17C()
{
  void *v0;
  char v1;
  void *v2;
  int v3;
  char v4;

  if (v3)
  {
    sub_1A452A110(v0, v3);
    sub_1A452A110(v2, v1);
    sub_1A452A0DC(v2, v1);
    sub_1A452A0DC(v0, v3);
    return 0;
  }
  else
  {
    sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
    sub_1A452A110(v0, 0);
    sub_1A452A110(v2, 0);
    v4 = sub_1A4691140();
    sub_1A452A0DC(v2, 0);
    sub_1A452A0DC(v0, 0);
    return v4 & 1;
  }
}

uint64_t sub_1A452A364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A452A3AC()
{
  unint64_t result;

  result = qword_1EE71FAA8;
  if (!qword_1EE71FAA8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EF70, &type metadata for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FAA8);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE71FCE8);
}

uint64_t type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE71FDA0);
}

unint64_t sub_1A452A418()
{
  unint64_t result;

  result = qword_1EE71FAC0;
  if (!qword_1EE71FAC0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EF20, &type metadata for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FAC0);
  }
  return result;
}

unint64_t sub_1A452A45C()
{
  unint64_t result;

  result = qword_1EE71FAD0;
  if (!qword_1EE71FAD0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListBatchDeleteInvocation.ListType, &type metadata for REMRemindersListBatchDeleteInvocation.ListType);
    atomic_store(result, (unint64_t *)&qword_1EE71FAD0);
  }
  return result;
}

uint64_t sub_1A452A4A0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A452A4DC()
{
  unint64_t result;

  result = qword_1EE71FAE0;
  if (!qword_1EE71FAE0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EED0, &type metadata for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FAE0);
  }
  return result;
}

unint64_t sub_1A452A520()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE71FAF0;
  if (!qword_1EE71FAF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71FAE8);
    v2 = sub_1A4436344(&qword_1ED242440, (uint64_t (*)(uint64_t))type metadata accessor for REMAccount_Codable, (uint64_t)&protocol conformance descriptor for REMAccount_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE71FAF0);
  }
  return result;
}

unint64_t sub_1A452A59C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE71FB00;
  if (!qword_1EE71FB00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71FAE8);
    v2 = sub_1A4436344(qword_1ED241B10, (uint64_t (*)(uint64_t))type metadata accessor for REMAccount_Codable, (uint64_t)&protocol conformance descriptor for REMAccount_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE71FB00);
  }
  return result;
}

unint64_t sub_1A452A618()
{
  unint64_t result;

  result = qword_1EE71FB10;
  if (!qword_1EE71FB10)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EE80, &type metadata for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FB10);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE71FE80);
}

uint64_t type metadata accessor for REMRemindersListBatchDeleteInvocation.CountInvocation()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation()
{
  return objc_opt_self();
}

uint64_t sub_1A452A6D0()
{
  return sub_1A4436344(&qword_1EE71FB20, type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters, (uint64_t)&protocol conformance descriptor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters);
}

uint64_t sub_1A452A6FC()
{
  return sub_1A4436344(&qword_1EE71D500, type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters, (uint64_t)&protocol conformance descriptor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters);
}

unint64_t sub_1A452A730()
{
  unint64_t result;

  result = qword_1EE71FB28;
  if (!qword_1EE71FB28)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result, &type metadata for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result);
    atomic_store(result, (unint64_t *)&qword_1EE71FB28);
  }
  return result;
}

uint64_t sub_1A452A77C()
{
  return sub_1A4436344(&qword_1EE71D4F0, type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result, (uint64_t)&protocol conformance descriptor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result);
}

uint64_t sub_1A452A7A8()
{
  return sub_1A4436344(&qword_1EE71FBB0, type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result, (uint64_t)&protocol conformance descriptor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result);
}

uint64_t type metadata accessor for REMRemindersListBatchDeleteInvocation()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMRemindersListBatchDeleteInvocation()
{
  return swift_lookUpClassMethod();
}

uint64_t initializeBufferWithCopyOfBuffer for REMRemindersListBatchDeleteInvocation.ListType(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A452A110(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for REMRemindersListBatchDeleteInvocation.ListType(uint64_t a1)
{
  sub_1A452A0DC(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for REMRemindersListBatchDeleteInvocation.ListType(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A452A110(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1A452A0DC(v5, v6);
  return a1;
}

uint64_t assignWithTake for REMRemindersListBatchDeleteInvocation.ListType(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1A452A0DC(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.ListType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.ListType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A452A96C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1A452A984(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListBatchDeleteInvocation.ListType()
{
  return &type metadata for REMRemindersListBatchDeleteInvocation.ListType;
}

uint64_t getEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1A452A9E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED243020)
  {
    sub_1A46900B4();
    v0 = sub_1A46911A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED243020);
  }
}

char *initializeBufferWithCopyOfBuffer for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v7;
  char v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v15[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = *((_BYTE *)a2 + 8);
    sub_1A452A110(*a2, v8);
    *(_QWORD *)a1 = v7;
    a1[8] = v8;
    v9 = *(int *)(a3 + 20);
    v10 = &a1[v9];
    v11 = (char *)a2 + v9;
    v12 = sub_1A46900B4();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t destroy for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_1A452A0DC(*(id *)a1, *(_BYTE *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1A46900B4();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  char v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(id *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_1A452A110(*(id *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(int *)(a3 + 20);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_1A46900B4();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  char v7;
  void *v8;
  char v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;

  v6 = *(id *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_1A452A110(*(id *)a2, v7);
  v8 = *(void **)a1;
  *(_QWORD *)a1 = v6;
  v9 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v7;
  sub_1A452A0DC(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = sub_1A46900B4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t initializeWithTake for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1A46900B4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  void *v7;
  char v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *(_BYTE *)(a2 + 8);
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v6;
  sub_1A452A0DC(v7, v8);
  v9 = *(int *)(a3 + 20);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_1A46900B4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A452AFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 251)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 4)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A452B040(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 251)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1A452B0B4()
{
  unint64_t v0;

  sub_1A452A9E8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result()
{
  return &type metadata for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result;
}

uint64_t *_s19ReminderKitInternal37REMRemindersListBatchDeleteInvocationC23CompletionDatePredicateVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_1A46900B4();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  return a1;
}

void *_s19ReminderKitInternal37REMRemindersListBatchDeleteInvocationC23CompletionDatePredicateVwcp_0(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1A46900B4();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *_s19ReminderKitInternal37REMRemindersListBatchDeleteInvocationC23CompletionDatePredicateVwca_0(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_1A46900B4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *_s19ReminderKitInternal37REMRemindersListBatchDeleteInvocationC23CompletionDatePredicateVwtk_0(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1A46900B4();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *_s19ReminderKitInternal37REMRemindersListBatchDeleteInvocationC23CompletionDatePredicateVwta_0(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_1A46900B4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_1A452B5D8()
{
  unint64_t v0;

  sub_1A452A9E8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result.CodingKeys()
{
  return &type metadata for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.CodingKeys()
{
  return &type metadata for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.CodingKeys;
}

uint64_t _s19ReminderKitInternal37REMRemindersListBatchDeleteInvocationC16DeleteInvocationC6ResultV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A452B6B4 + 4 * byte_1A469E64F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A452B6E8 + 4 * byte_1A469E64A[v4]))();
}

uint64_t sub_1A452B6E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A452B6F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A452B6F8);
  return result;
}

uint64_t sub_1A452B704(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A452B70CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A452B710(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A452B718(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.CodingKeys;
}

uint64_t _s19ReminderKitInternal37REMRemindersListBatchDeleteInvocationC30OldestCompletionDateInvocationC6ResultV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A452B774 + 4 * byte_1A469E654[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A452B794 + 4 * byte_1A469E659[v4]))();
}

_BYTE *sub_1A452B774(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A452B794(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A452B79C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A452B7A4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A452B7AC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A452B7B4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.CodingKeys()
{
  return &type metadata for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.ListType.Base(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A452B81C + 4 * byte_1A469E663[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A452B850 + 4 * byte_1A469E65E[v4]))();
}

uint64_t sub_1A452B850(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A452B858(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A452B860);
  return result;
}

uint64_t sub_1A452B86C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A452B874);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A452B878(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A452B880(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListBatchDeleteInvocation.ListType.Base()
{
  return &type metadata for REMRemindersListBatchDeleteInvocation.ListType.Base;
}

uint64_t storeEnumTagSinglePayload for REMRemindersListBatchDeleteInvocation.ListType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A452B8E8 + 4 * byte_1A469E66D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A452B91C + 4 * byte_1A469E668[v4]))();
}

uint64_t sub_1A452B91C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A452B924(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A452B92CLL);
  return result;
}

uint64_t sub_1A452B938(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A452B940);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A452B944(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A452B94C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListBatchDeleteInvocation.ListType.CodingKeys()
{
  return &type metadata for REMRemindersListBatchDeleteInvocation.ListType.CodingKeys;
}

unint64_t sub_1A452B96C()
{
  unint64_t result;

  result = qword_1EE71FEB8;
  if (!qword_1EE71FEB8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EAD8, &type metadata for REMRemindersListBatchDeleteInvocation.ListType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FEB8);
  }
  return result;
}

unint64_t sub_1A452B9B4()
{
  unint64_t result;

  result = qword_1EE71FEC0;
  if (!qword_1EE71FEC0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EB78, &type metadata for REMRemindersListBatchDeleteInvocation.ListType.Base);
    atomic_store(result, (unint64_t *)&qword_1EE71FEC0);
  }
  return result;
}

unint64_t sub_1A452B9FC()
{
  unint64_t result;

  result = qword_1EE71FEC8;
  if (!qword_1EE71FEC8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EC30, &type metadata for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FEC8);
  }
  return result;
}

unint64_t sub_1A452BA44()
{
  unint64_t result;

  result = qword_1EE71FED0;
  if (!qword_1EE71FED0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469ECE8, &type metadata for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FED0);
  }
  return result;
}

unint64_t sub_1A452BA8C()
{
  unint64_t result;

  result = qword_1EE71FED8;
  if (!qword_1EE71FED8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EDA0, &type metadata for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FED8);
  }
  return result;
}

unint64_t sub_1A452BAD4()
{
  unint64_t result;

  result = qword_1EE71FEE0;
  if (!qword_1EE71FEE0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EE58, &type metadata for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FEE0);
  }
  return result;
}

unint64_t sub_1A452BB1C()
{
  unint64_t result;

  result = qword_1EE71FEE8;
  if (!qword_1EE71FEE8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EDC8, &type metadata for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FEE8);
  }
  return result;
}

unint64_t sub_1A452BB64()
{
  unint64_t result;

  result = qword_1EE71FEF0;
  if (!qword_1EE71FEF0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EDF0, &type metadata for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FEF0);
  }
  return result;
}

unint64_t sub_1A452BBAC()
{
  unint64_t result;

  result = qword_1EE71FEF8;
  if (!qword_1EE71FEF8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469ED10, &type metadata for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FEF8);
  }
  return result;
}

unint64_t sub_1A452BBF4()
{
  unint64_t result;

  result = qword_1EE71FF00;
  if (!qword_1EE71FF00)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469ED38, &type metadata for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FF00);
  }
  return result;
}

unint64_t sub_1A452BC3C()
{
  unint64_t result;

  result = qword_1EE71FF08;
  if (!qword_1EE71FF08)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EC58, &type metadata for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FF08);
  }
  return result;
}

unint64_t sub_1A452BC84()
{
  unint64_t result;

  result = qword_1EE71FF10;
  if (!qword_1EE71FF10)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EC80, &type metadata for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FF10);
  }
  return result;
}

unint64_t sub_1A452BCCC()
{
  unint64_t result;

  result = qword_1EE71FF18;
  if (!qword_1EE71FF18)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EBA0, &type metadata for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FF18);
  }
  return result;
}

unint64_t sub_1A452BD14()
{
  unint64_t result;

  result = qword_1EE71FF20;
  if (!qword_1EE71FF20)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EBC8, &type metadata for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FF20);
  }
  return result;
}

unint64_t sub_1A452BD5C()
{
  unint64_t result;

  result = qword_1EE71FF28;
  if (!qword_1EE71FF28)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EA10, &type metadata for REMRemindersListBatchDeleteInvocation.ListType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FF28);
  }
  return result;
}

unint64_t sub_1A452BDA4()
{
  unint64_t result;

  result = qword_1EE71FF30;
  if (!qword_1EE71FF30)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EA38, &type metadata for REMRemindersListBatchDeleteInvocation.ListType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71FF30);
  }
  return result;
}

uint64_t sub_1A452BDE8()
{
  unint64_t v0;

  v0 = sub_1A469171C();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_1A452BE30()
{
  unint64_t result;

  result = qword_1EE71FF38;
  if (!qword_1EE71FF38)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469EB00, &type metadata for REMRemindersListBatchDeleteInvocation.ListType.Base);
    atomic_store(result, (unint64_t *)&qword_1EE71FF38);
  }
  return result;
}

uint64_t sub_1A452BE74()
{
  unint64_t v0;

  v0 = sub_1A469171C();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1A452BEBC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1953720684 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A46BF8F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A452BF98(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001A46BF910 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746E756F636361 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A452C084(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001A46BF8D0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t Optional.descriptionOrNil.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v14 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, v1) == 1)
    return 7104878;
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v8, v10, v1);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v8, v1);
  v12 = sub_1A46908E8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
  return v12;
}

uint64_t Optional.tryUnwrap(_:file:line:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v8 = v7;
  v23[2] = a4;
  v24 = a5;
  v23[0] = a7;
  v23[1] = a3;
  v25 = a1;
  v26 = a2;
  v10 = sub_1A468FF7C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](v12);
  v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v8, a6);
  v18 = *(_QWORD *)(a6 + 16);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
    return (*(uint64_t (**)(_QWORD, char *, uint64_t))(v19 + 32))(v23[0], v17, v18);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, a6);
  sub_1A468FEBC();
  sub_1A468FEC8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v20 = (void *)objc_opt_self();
  v27 = 0;
  v28 = 0xE000000000000000;
  sub_1A4691410();
  sub_1A4690984();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  v29 = v24;
  sub_1A46918D8();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  sub_1A4690984();
  sub_1A4690984();
  v21 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_internalErrorWithDebugDescription_, v21);

  return swift_willThrow();
}

uint64_t Publisher.sink<A>(weakTarget:receiveValue:receiveCompletion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a6;
  v14[3] = a7;
  v14[4] = a8;
  v14[5] = v13;
  v14[6] = a4;
  v14[7] = a5;
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = v15;
  v16[6] = a2;
  v16[7] = a3;
  swift_retain();
  sub_1A44FC184(a4);
  swift_retain();
  swift_retain();
  v17 = sub_1A469051C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v17;
}

uint64_t sub_1A452C62C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A452C650(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t result;

  v5 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1A85A01C8](v5);
  if (result)
  {
    if (a3)
      a3(result, a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1A452C6C4()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 48))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A452C6F8(uint64_t a1)
{
  return sub_1A44313E4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A452C650);
}

uint64_t Publisher.infiniteRetry()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A46903C0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v11 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  sub_1A46903B4();
  MEMORY[0x1A85A0000](MEMORY[0x1E0C95A88], v6);
  sub_1A46904EC();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t Publisher<>.sinkNextOutput(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  type metadata accessor for UnfairLock();
  v8 = swift_allocObject();
  v9 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v8 + 16) = v9;
  *v9 = 0;
  *(_DWORD *)(v8 + 24) = 0;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = v8;
  v12[5] = v10;
  v12[6] = v11;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a3;
  v13[3] = a4;
  v13[4] = sub_1A452CBB4;
  v13[5] = v12;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = sub_1A452CBB4;
  v14[5] = v12;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v15 = sub_1A469051C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_beginAccess();
  *(_QWORD *)(v11 + 16) = v15;
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A452CA10()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A452CA3C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A452CA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void (*v10)(uint64_t);
  _QWORD v11[8];
  void (*v12)(uint64_t);

  v11[7] = a2;
  v11[2] = a5;
  v11[3] = a6;
  v11[4] = a3 + 16;
  v11[5] = a4 + 16;
  v7 = type metadata accessor for UnfairLock();
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  sub_1A4691D10();
  swift_getFunctionTypeMetadata1();
  v8 = sub_1A46911A0();
  result = Lock.sync<A>(_:)((void (*)(uint64_t))sub_1A452D850, (uint64_t)v11, v7, v8, (uint64_t)&protocol witness table for UnfairLock);
  v10 = v12;
  if (v12)
  {
    swift_retain();
    v10(a1);
    sub_1A443A6F8((uint64_t)v10);
    return sub_1A443A6F8((uint64_t)v10);
  }
  return result;
}

uint64_t sub_1A452CB80()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A452CBB4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A452CA60(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t (*sub_1A452CBC4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)()@<X8>))()
{
  uint64_t (*result)();
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = (uint64_t (*)())swift_beginAccess();
  v11 = *a1;
  if (*a1)
  {
    v12 = a1[1];
    swift_beginAccess();
    if (*a2)
    {
      sub_1A44FC184(v11);
      swift_retain();
      sub_1A4690444();
      swift_release();
    }
    else
    {
      swift_retain();
    }
    swift_beginAccess();
    *a2 = 0;
    swift_release();
    swift_beginAccess();
    v13 = *a1;
    *a1 = 0;
    a1[1] = 0;
    sub_1A443A6F8(v13);
    result = (uint64_t (*)())swift_allocObject();
    *((_QWORD *)result + 2) = a3;
    *((_QWORD *)result + 3) = a4;
    *((_QWORD *)result + 4) = v11;
    *((_QWORD *)result + 5) = v12;
    *a5 = sub_1A452D85C;
    a5[1] = result;
  }
  else
  {
    *a5 = 0;
    a5[1] = 0;
  }
  return result;
}

uint64_t sub_1A452CCE4(void **a1, void (*a2)(uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  void *v8;
  id v9;
  uint64_t v11;

  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  v4 = sub_1A4691D10();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v11 - v6);
  v8 = *a1;
  if (v8)
  {
    *v7 = (uint64_t)v8;
    swift_storeEnumTagMultiPayload();
    v9 = v8;
  }
  else
  {
    sub_1A452D80C();
    *v7 = swift_allocError();
    swift_storeEnumTagMultiPayload();
  }
  a2(v7);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A452CE08()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A452CE2C(void **a1)
{
  uint64_t v1;

  return sub_1A452CCE4(a1, *(void (**)(uint64_t *))(v1 + 32));
}

uint64_t sub_1A452CE38(uint64_t a1, void (*a2)(char *))
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  v5 = sub_1A4691D10();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))((char *)&v10 - v7, a1, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A452CF34(uint64_t a1)
{
  uint64_t v1;

  return sub_1A452CE38(a1, *(void (**)(char *))(v1 + 32));
}

void Publisher<>.waitForNextOutput()(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a2;
  v31 = a3;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  v4 = sub_1A4691D10();
  v5 = sub_1A46911A0();
  v32 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(v4 - 8);
  v10 = MEMORY[0x1E0C80A78](v6);
  v28 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - v12;
  v14 = dispatch_group_create();
  v15 = swift_allocBox();
  v17 = v16;
  v29 = v4;
  v30 = v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v16, 1, 1, v4);
  dispatch_group_enter(v14);
  v18 = (_QWORD *)swift_allocObject();
  v19 = v33;
  v18[2] = a1;
  v18[3] = v19;
  v18[4] = v15;
  v18[5] = v14;
  swift_retain();
  v20 = v14;
  v21 = a1;
  v22 = v20;
  Publisher<>.sinkNextOutput(_:)((uint64_t)sub_1A452D38C, (uint64_t)v18, v21, v19);
  v23 = v32;
  swift_release();
  sub_1A469102C();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v8, v17, v5);
  v24 = v34;
  Optional.tryUnwrap(_:file:line:)(0xD000000000000021, 0x80000001A46BF9E0, 0xD000000000000071, 0x80000001A46BF960, 116, v5, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v5);
  if (!v24)
  {
    v26 = v29;
    v25 = v30;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v28, v13, v29);
    sub_1A44E65C0(v26, (uint64_t)&v35, v31);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
  }
  swift_release();

}

void sub_1A452D224(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  v5 = sub_1A4691D10();
  v6 = sub_1A46911A0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - v8;
  v10 = swift_projectBox();
  v11 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v5);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v10, v9, v6);
  dispatch_group_leave(a3);
}

uint64_t sub_1A452D360()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1A452D38C(uint64_t a1)
{
  uint64_t v1;

  sub_1A452D224(a1, *(_QWORD *)(v1 + 32), *(NSObject **)(v1 + 40));
}

uint64_t Publisher<>.legacyPromise()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for Promise(0, AssociatedTypeWitness, v6, v7);
  v9[2] = a1;
  v9[3] = a2;
  v10 = v2;
  return Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t (*)(void *, uint64_t, uint64_t, uint64_t), _QWORD *))sub_1A452D4B0, (uint64_t)v9);
}

uint64_t sub_1A452D410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a6;
  v13[3] = a7;
  v13[4] = a3;
  v13[5] = a4;
  v13[6] = a1;
  v13[7] = a2;
  swift_retain();
  swift_retain();
  Publisher<>.sinkNextOutput(_:)((uint64_t)sub_1A452D7FC, (uint64_t)v13, a6, a7);
  return swift_release();
}

uint64_t sub_1A452D4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_1A452D410(a1, a2, a3, a4, v4[4], v4[2], v4[3]);
}

void sub_1A452D4BC(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, void (*a4)(char *))
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v16 - v9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  v11 = sub_1A4691D10();
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v16 - v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v16 - v12, a1, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = (void *)*v13;
    a2(*v13);

  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v8 + 32))(v10, v13, AssociatedTypeWitness);
    a4(v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  }
}

uint64_t Publisher<>.rem_bufferedValues.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A452D640(a1, qword_1EE71F888, MEMORY[0x1E0C96330], a2);
}

{
  return sub_1A452D640(a1, &qword_1EE71FF40, MEMORY[0x1E0C96428], a2);
}

uint64_t sub_1A452D640@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, void (*a3)(uint64_t, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD v18[3];
  void (*v19)(uint64_t, uint64_t);

  v18[2] = a4;
  v19 = a3;
  v18[0] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A4690384();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A46903CC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v18 - v14;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0C958B8], v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0C958E8], v4);
  sub_1A4690534();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v16 = MEMORY[0x1A85A0000](MEMORY[0x1E0C95AB8], v12);
  v19(v12, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

ValueMetadata *type metadata accessor for PublisherFinishedWithoutOutputError()
{
  return &type metadata for PublisherFinishedWithoutOutputError;
}

void sub_1A452D7FC(uint64_t a1)
{
  uint64_t v1;

  sub_1A452D4BC(a1, *(void (**)(_QWORD))(v1 + 32), *(_QWORD *)(v1 + 40), *(void (**)(char *))(v1 + 48));
}

unint64_t sub_1A452D80C()
{
  unint64_t result;

  result = qword_1ED2420C8;
  if (!qword_1ED2420C8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for PublisherFinishedWithoutOutputError, &type metadata for PublisherFinishedWithoutOutputError);
    atomic_store(result, (unint64_t *)&qword_1ED2420C8);
  }
  return result;
}

uint64_t (*sub_1A452D850@<X0>(uint64_t (**a1)()@<X8>))()
{
  uint64_t v1;

  return sub_1A452CBC4(*(uint64_t **)(v1 + 32), *(_QWORD **)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1A452D85C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1A452D884()
{
  return sub_1A452D95C(&OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_primaryEmailMock);
}

uint64_t sub_1A452D890(uint64_t a1, uint64_t a2)
{
  return sub_1A452D9B8(a1, a2, &OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_primaryEmailMock);
}

uint64_t (*sub_1A452D89C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1A452D8EC(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a1;
  v5 = a1[1];
  v7 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A452D950()
{
  return sub_1A452D95C(&OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_altDSIDMock);
}

uint64_t sub_1A452D95C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1A452D9AC(uint64_t a1, uint64_t a2)
{
  return sub_1A452D9B8(a1, a2, &OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_altDSIDMock);
}

uint64_t sub_1A452D9B8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)(v3 + *a3);
  swift_beginAccess();
  *v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A452DA10())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_1A452DA60()
{
  void *v0;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v0 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_1A452DC68(char a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;

  if ((a1 & 1) != 0)
  {
    if (a2)
    {
      swift_beginAccess();
      sub_1A4466C5C(&v6, a2);
      v3 = v6;
      swift_endAccess();

      return;
    }
    __break(1u);
    goto LABEL_8;
  }
  if (!a2)
  {
LABEL_8:
    __break(1u);
    return;
  }
  swift_beginAccess();
  v4 = a2;
  v5 = (void *)sub_1A452E81C();
  swift_endAccess();

}

id MockACAccount.__allocating_init(accountType:)(void *a1)
{
  return sub_1A452DEE8(a1, (SEL *)&selRef_initWithAccountType_);
}

id MockACAccount.init(accountType:)(void *a1)
{
  return sub_1A452DF3C(a1, (SEL *)&selRef_initWithAccountType_);
}

id MockACAccount.__allocating_init(coder:)(void *a1)
{
  return sub_1A452DEE8(a1, (SEL *)&selRef_initWithCoder_);
}

id MockACAccount.init(coder:)(void *a1)
{
  return sub_1A452DF3C(a1, (SEL *)&selRef_initWithCoder_);
}

id MockACAccount.__allocating_init(managedAccount:)(void *a1)
{
  return sub_1A452DEE8(a1, (SEL *)&selRef_initWithManagedAccount_);
}

id sub_1A452DEE8(void *a1, SEL *a2)
{
  objc_class *v2;
  id v4;

  v4 = objc_msgSend(objc_allocWithZone(v2), *a2, a1);

  return v4;
}

id MockACAccount.init(managedAccount:)(void *a1)
{
  return sub_1A452DF3C(a1, (SEL *)&selRef_initWithManagedAccount_);
}

id sub_1A452DF3C(void *a1, SEL *a2)
{
  char *v2;
  char *v5;
  char *v6;
  id v7;
  objc_super v9;

  v5 = &v2[OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_primaryEmailMock];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = &v2[OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_altDSIDMock];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_mockChildren] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v2[OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_enabledDataClasses] = MEMORY[0x1E0DEE9E8];
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for MockACAccount();
  v7 = objc_msgSendSuper2(&v9, *a2, a1);

  return v7;
}

id sub_1A452DFE4(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  char *v6;
  char *v7;
  objc_super v9;

  v6 = &a1[OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_primaryEmailMock];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &a1[OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_altDSIDMock];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  *(_QWORD *)&a1[OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_mockChildren] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&a1[OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_enabledDataClasses] = MEMORY[0x1E0DEE9E8];
  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for MockACAccount();
  return objc_msgSendSuper2(&v9, *a4, a3);
}

id MockACAccount.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MockACAccount();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL static MockACAccount.MockACAccountSetUpError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MockACAccount.MockACAccountSetUpError.hash(into:)()
{
  return sub_1A4691C98();
}

uint64_t MockACAccount.MockACAccountSetUpError.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

id static MockACAccount.rem_setupRemindersEnabledMockAAAccount(with:aa_accountClass:childCalDAVAccountIdentifier:remAppleAccountUtilities:accountConfigBlock:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  _BYTE *v13;
  _BYTE *v14;
  _QWORD v16[3];

  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v4 = objc_allocWithZone(MEMORY[0x1E0C8F2C8]);
  v5 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_1A469087C();
  v7 = objc_msgSend(v4, sel_initWithIdentifier_description_, v5, v6);

  v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MockACAccount()), sel_initWithAccountType_, v7);
  if (v8)
  {
    objc_msgSend(v8, sel_aa_setAccountClass_, a3);
    v9 = (void *)sub_1A469087C();
    objc_msgSend(v8, sel_setIdentifier_, v9);

    objc_msgSend(v8, sel_setEnabled_forDataclass_, 1, *MEMORY[0x1E0C8EEF8]);
    v10 = (void *)sub_1A469087C();
    objc_msgSend(v8, sel_setAccountProperty_forKey_, v10, *MEMORY[0x1E0C8EFC8]);

    v11 = objc_msgSend(v8, sel_provisionedDataclasses);
    if (v11)
    {
      v12 = v11;
      v16[0] = 0;
      type metadata accessor for Dataclass(0);
      sub_1A4436344(&qword_1EE71C580, (uint64_t (*)(uint64_t))type metadata accessor for Dataclass, (uint64_t)&unk_1A46957F0);
      sub_1A4690D68();

    }
    sub_1A452EFEC();
    swift_allocError();
    *v13 = 2;
    swift_willThrow();

  }
  else
  {
    sub_1A452EFEC();
    swift_allocError();
    *v14 = 0;
    swift_willThrow();
  }
  return v8;
}

uint64_t static MockACAccount.make_aa_altDSIDMock(from:)()
{
  _QWORD v1[2];

  strcpy((char *)v1, "altDSIDMock:");
  sub_1A4690984();
  return v1[0];
}

uint64_t sub_1A452E81C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v23;

  v1 = v0;
  v2 = *v0;
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A4691C8C();
  swift_bridgeObjectRetain();
  sub_1A4690948();
  v3 = sub_1A4691CC8();
  swift_bridgeObjectRelease();
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = v3 & ~v4;
  if (((*(_QWORD *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  v6 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v8 = v7;
  if (v6 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v8 == v9)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      do
      {
        v5 = (v5 + 1) & v12;
        if (((*(_QWORD *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
          goto LABEL_15;
        v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v15 = v14;
        if (v13 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v15 == v16)
          goto LABEL_16;
        v18 = sub_1A4691A40();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v18 & 1) == 0);
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v1;
  v23 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A461F76C();
    v21 = v23;
  }
  v19 = *(_QWORD *)(*(_QWORD *)(v21 + 48) + 8 * v5);
  sub_1A452EA2C(v5);
  *v1 = v23;
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_1A452EA2C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1A46912B4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v6);
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        sub_1A4691C8C();
        v11 = v10;
        sub_1A4690948();
        v12 = sub_1A4691CC8();

        swift_bridgeObjectRelease();
        v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 < v9)
            goto LABEL_5;
        }
        else if (v13 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(v3 + 48);
          v15 = (_QWORD *)(v14 + 8 * v2);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v17 = *(_QWORD *)(v3 + 16);
  v18 = __OFSUB__(v17, 1);
  v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

id sub_1A452EC0C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t i;
  id v7;
  void *v8;
  unint64_t v9;
  id result;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v19;

  v19 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_27:
    v5 = sub_1A46916A4();
    if (v5)
      goto LABEL_3;
    return (id)MEMORY[0x1E0DEE9D8];
  }
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return (id)MEMORY[0x1E0DEE9D8];
LABEL_3:
  for (i = 0; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v7 = (id)MEMORY[0x1A859ECE0](i, a1);
    }
    else
    {
      if (i >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      v7 = *(id *)(a1 + 8 * i + 32);
    }
    v8 = v7;
    v9 = i + 1;
    if (__OFADD__(i, 1))
      goto LABEL_26;
    result = objc_msgSend(v7, sel_accountType);
    if (!result)
      break;
    v11 = result;
    v12 = objc_msgSend(result, sel_identifier);

    if (v12)
    {
      v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v15 = v14;

      if (!a3)
      {

        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      if (v13 == a2 && v15 == a3)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v17 = sub_1A4691A40();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
          goto LABEL_21;
      }
    }
    else if (a3)
    {
LABEL_21:

      goto LABEL_6;
    }
    sub_1A4691518();
    sub_1A4691548();
    sub_1A4691554();
    sub_1A4691524();
LABEL_6:
    if (v9 == v5)
      return (id)v19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A452EE04(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD v14[4];
  id v15;
  _OWORD v16[2];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = sub_1A468FE74();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v19 = MEMORY[0x1E0DEE9E8];
    v9 = a1;
    sub_1A4690FCC();
    sub_1A4436344((unint64_t *)&qword_1EE71FFA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
    sub_1A46911B8();
    while (v18)
    {
      sub_1A444A940(&v17, v16);
      sub_1A44311F0((uint64_t)v16, (uint64_t)v14);
      type metadata accessor for Dataclass(0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        if (v15)
        {
          v10 = v15;
          sub_1A4466C5C(v14, v10);
          v11 = (void *)v14[0];

        }
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      sub_1A46911B8();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);

    v12 = v19;
    v13 = (_QWORD *)(v2 + OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_enabledDataClasses);
    swift_beginAccess();
    *v13 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for MockACAccount()
{
  return objc_opt_self();
}

unint64_t sub_1A452EFEC()
{
  unint64_t result;

  result = qword_1EE71FF68;
  if (!qword_1EE71FF68)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for MockACAccount.MockACAccountSetUpError, &type metadata for MockACAccount.MockACAccountSetUpError);
    atomic_store(result, (unint64_t *)&qword_1EE71FF68);
  }
  return result;
}

unint64_t sub_1A452F034()
{
  unint64_t result;

  result = qword_1EE71FF70;
  if (!qword_1EE71FF70)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for MockACAccount.MockACAccountSetUpError, &type metadata for MockACAccount.MockACAccountSetUpError);
    atomic_store(result, (unint64_t *)&qword_1EE71FF70);
  }
  return result;
}

uint64_t sub_1A452F078@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_primaryEmailMock, a2);
}

uint64_t sub_1A452F084(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A452D8EC(a1, a2, a3, a4, &OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_primaryEmailMock);
}

uint64_t sub_1A452F0A0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_altDSIDMock, a2);
}

uint64_t keypath_getTm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)(*a1 + *a2);
  swift_beginAccess();
  v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A452F0FC(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A452D8EC(a1, a2, a3, a4, &OBJC_IVAR____TtC19ReminderKitInternal13MockACAccount_rem_aa_altDSIDMock);
}

uint64_t method lookup function for MockACAccount()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockACAccount.rem_aa_primaryEmailMock.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MockACAccount.rem_aa_primaryEmailMock.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MockACAccount.rem_aa_primaryEmailMock.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MockACAccount.rem_aa_altDSIDMock.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MockACAccount.rem_aa_altDSIDMock.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MockACAccount.rem_aa_altDSIDMock.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t storeEnumTagSinglePayload for MockACAccount.MockACAccountSetUpError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A452F218 + 4 * byte_1A469F0F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A452F24C + 4 * asc_1A469F0F0[v4]))();
}

uint64_t sub_1A452F24C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A452F254(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A452F25CLL);
  return result;
}

uint64_t sub_1A452F268(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A452F270);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A452F274(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A452F27C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MockACAccount.MockACAccountSetUpError()
{
  return &type metadata for MockACAccount.MockACAccountSetUpError;
}

uint64_t sub_1A452F298(unint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;

  v3 = v2;
  v5 = a1;
  if (a1 >> 62)
    goto LABEL_28;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  result = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v39 = MEMORY[0x1E0DEE9D8];
    sub_1A445AA18(0, v6 & ~(v6 >> 63), 0);
    if ((v6 & 0x8000000000000000) == 0)
    {
      v33 = v3;
      v34 = v6;
      v8 = 0;
      result = v39;
      v35 = v5;
      v36 = v5 & 0xC000000000000001;
      while (1)
      {
        if (v6 == v8)
        {
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          swift_bridgeObjectRetain();
          v6 = sub_1A46916A4();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
        v37 = result;
        if (v36)
          v9 = (id)MEMORY[0x1A859ECE0](v8, v5);
        else
          v9 = *(id *)(v5 + 8 * v8 + 32);
        v10 = v9;
        v11 = objc_msgSend(v9, sel_displayName, v33);
        v3 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v13 = v12;

        v14 = v10;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v16 = (_QWORD *)*a2;
        v38 = (_QWORD *)*a2;
        *a2 = 0x8000000000000000;
        v5 = sub_1A443E4C8(v3, v13);
        v18 = v16[2];
        v19 = (v17 & 1) == 0;
        v20 = v18 + v19;
        if (__OFADD__(v18, v19))
          goto LABEL_26;
        v21 = v17;
        if (v16[3] >= v20)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v24 = v38;
            if ((v17 & 1) != 0)
              goto LABEL_17;
          }
          else
          {
            sub_1A4448C90();
            v24 = v38;
            if ((v21 & 1) != 0)
              goto LABEL_17;
          }
        }
        else
        {
          sub_1A4443730(v20, isUniquelyReferenced_nonNull_native);
          v22 = sub_1A443E4C8(v3, v13);
          if ((v21 & 1) != (v23 & 1))
            goto LABEL_30;
          v5 = v22;
          v24 = v38;
          if ((v21 & 1) != 0)
          {
LABEL_17:
            v25 = v24[7];
            v26 = 8 * v5;

            *(_QWORD *)(v25 + v26) = v14;
            goto LABEL_21;
          }
        }
        v24[(v5 >> 6) + 8] |= 1 << v5;
        v27 = (uint64_t *)(v24[6] + 16 * v5);
        *v27 = v3;
        v27[1] = v13;
        *(_QWORD *)(v24[7] + 8 * v5) = v14;
        v28 = v24[2];
        v29 = __OFADD__(v28, 1);
        v30 = v28 + 1;
        if (v29)
          goto LABEL_27;
        v24[2] = v30;
        swift_bridgeObjectRetain();
LABEL_21:
        *a2 = v24;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = v37;
        v32 = *(_QWORD *)(v37 + 16);
        v31 = *(_QWORD *)(v37 + 24);
        v3 = v32 + 1;
        v6 = v34;
        v5 = v35;
        if (v32 >= v31 >> 1)
        {
          sub_1A445AA18(v31 > 1, v32 + 1, 1);
          result = v37;
        }
        ++v8;
        *(_QWORD *)(result + 16) = v3;
        if (v34 == v8)
          return result;
      }
    }
    __break(1u);
LABEL_30:
    result = sub_1A4691C08();
    __break(1u);
  }
  return result;
}

void sub_1A452F55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  _QWORD v10[4];

  v10[2] = a2;
  v10[3] = a3;
  sub_1A44A2DD8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1A44A37C8, (uint64_t)v10, a1);
  v4 = objc_allocWithZone(MEMORY[0x1E0D845A8]);
  sub_1A444AA40(0, (unint64_t *)&qword_1EE71D9B0);
  v5 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithMemberships_, v5);

  v7 = objc_msgSend(v3, sel_unsavedMembershipsOfRemindersInSections);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_mergingWith_mergePolicy_, v6, 0);
    objc_msgSend(v3, sel_setUnsavedMembershipsOfRemindersInSections_, v9);

    v6 = v9;
  }
  else
  {
    objc_msgSend(v3, sel_setUnsavedMembershipsOfRemindersInSections_, v6);
  }

}

id REMTestStorePopulator.store.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t REMTestStorePopulator.accountByName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.listByName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.listSectionByDisplayName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.customSmartListByName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.customSmartListSectionByDisplayName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.templateContentsByName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.templateSectionByDisplayName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.reminderByTitle.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.attachmentsByReminderName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A452F6D4()
{
  uint64_t result;

  result = _auto_REMAccountTypeForPrimaryCloudKit();
  qword_1EE71FFA8 = result;
  return result;
}

uint64_t static REMTestStorePopulator.defaultAccountType.getter()
{
  if (qword_1EE71C0F0 != -1)
    swift_once();
  return qword_1EE71FFA8;
}

uint64_t sub_1A452F730()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for DefaultDumpFormatter();
  result = swift_allocObject();
  qword_1EE71FFC8 = v0;
  unk_1EE71FFD0 = &off_1E4C1E050;
  qword_1EE71FFB0 = result;
  return result;
}

uint64_t static REMTestStorePopulator.defaultDumpFormatter.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EE71C0F8 != -1)
    swift_once();
  return sub_1A443E484((uint64_t)&qword_1EE71FFB0, a1);
}

uint64_t REMTestStorePopulator.__allocating_init(store:accounts:isSingleListMode:)(void *a1, uint64_t a2, char a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  REMTestStorePopulator.init(store:accounts:isSingleListMode:)(a1, a2, a3);
  return v6;
}

_QWORD *REMTestStorePopulator.init(store:accounts:isSingleListMode:)(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v5 = (_QWORD *)v3;
  *(_QWORD *)(v3 + 16) = a1;
  *(_BYTE *)(v3 + 96) = a3;
  v7 = a1;
  sub_1A452F964(a2, v7, v19);
  swift_bridgeObjectRelease();

  if (v4)
  {

    swift_deallocPartialClassInstance();
  }
  else
  {
    v8 = (void *)v19[1];
    v36 = v19[0];
    v9 = v20;
    v10 = v21;
    v34 = v21;
    v35 = v20;
    v5[3] = v19[0];
    v5[4] = v9;
    v11 = v22;
    v12 = v23;
    v32 = v23;
    v33 = v22;
    v5[5] = v10;
    v5[6] = v11;
    v13 = v24;
    v14 = v25;
    v31 = v24;
    v5[7] = v12;
    v5[8] = v13;
    v15 = v26;
    v16 = v27;
    v29 = v26;
    v30 = v14;
    v5[9] = v14;
    v5[10] = v15;
    v5[13] = v8;
    v28 = v16;
    v5[11] = v16;
    sub_1A4532734((uint64_t)&v36);
    sub_1A4532734((uint64_t)&v35);
    sub_1A4532734((uint64_t)&v34);
    v17 = v8;
    sub_1A4532734((uint64_t)&v33);
    sub_1A4532734((uint64_t)&v32);
    sub_1A4532734((uint64_t)&v31);
    sub_1A4532734((uint64_t)&v30);
    sub_1A4532734((uint64_t)&v29);
    sub_1A4532734((uint64_t)&v28);
    sub_1A453275C((uint64_t)v19);
  }
  return v5;
}

uint64_t sub_1A452F964@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  id v4;
  uint64_t result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  id v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char isUniquelyReferenced_nonNull_native;
  unsigned int v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  unsigned int v38;
  _QWORD *v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t *v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  unint64_t v57;
  id v58;
  int64_t v59;
  unint64_t v61;
  int64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  _QWORD *v66;
  id v67;
  _QWORD *v68;
  int64_t v69;
  id v70;
  id v71;
  uint64_t v72;
  void *v73;
  id v74;
  id v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  id v84;
  id v85;
  uint64_t v86;
  id v87;
  id v88;
  int64_t v89;
  int64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  id v94;
  id v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  id v106;
  id v107;
  id v108;
  uint64_t v109;
  id v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  _QWORD *v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int64_t v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  id v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  id v138[20];

  v138[18] = *(id *)MEMORY[0x1E0C80C00];
  result = sub_1A4542524(a1, a2);
  if (v3)
    return result;
  v10 = result;
  v11 = 0;
  v120 = v9;
  objc_msgSend(a2, sel_test_setupForManualHashtagLabelRefreshing);
  v117 = a2;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84650]), sel_initWithStore_, a2);
  v137 = MEMORY[0x1E0DEE9E0];
  v136 = MEMORY[0x1E0DEE9E0];
  v135 = MEMORY[0x1E0DEE9E0];
  v125 = v12;
  v123 = v10;
  v118 = *(_QWORD *)(a1 + 16);
  if (v118)
  {
    v115 = a3;
    v13 = a1 + 32;
    swift_bridgeObjectRetain();
    v14 = 0;
    v15 = MEMORY[0x1E0DEE9E0];
    v121 = MEMORY[0x1E0DEE9E0];
    v116 = a1 + 32;
    while (1)
    {
      v122 = v15;
      v16 = (uint64_t *)(v13 + 48 * v14);
      v17 = v16[1];
      if (!*(_QWORD *)(v10 + 16))
        break;
      v119 = v14;
      v18 = v16[3];
      v19 = *v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v20 = sub_1A443E4C8(v19, v17);
      if ((v21 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_38;
      }
      v22 = *(id *)(*(_QWORD *)(v10 + 56) + 8 * v20);
      swift_bridgeObjectRelease();
      sub_1A444AA40(0, &qword_1EE7206C8);
      v23 = (void *)REMManualOrdering.init(templates:)(MEMORY[0x1E0DEE9D8]);
      type metadata accessor for REMMutableManualOrdering();
      swift_allocObject();
      REMMutableManualOrdering.init(immutableManualOrdering:)(v23);
      v124 = objc_msgSend(v12, sel_updateAccount_, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v18 + 16))
      {
        swift_beginAccess();
        if (*(_QWORD *)(v18 + 16))
          __asm { BR              X9 }
        __break(1u);
        JUMPOUT(0x1A4531F2CLL);
      }
      swift_bridgeObjectRelease();
      swift_retain();
      v24 = sub_1A4560744();
      swift_release();
      if (v24 >> 62)
      {
        swift_bridgeObjectRetain();
        v25 = sub_1A46916A4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v25)
      {
        v26 = v22;
        v27 = REMMutableManualOrdering.immutableCopy()();
        v28 = v121;
        if ((v121 & 0xC000000000000001) != 0)
        {
          if (v121 < 0)
            v29 = v121;
          else
            v29 = v121 & 0xFFFFFFFFFFFFFF8;
          v30 = sub_1A4691308();
          if (__OFADD__(v30, 1))
          {
            __break(1u);
            goto LABEL_92;
          }
          v28 = sub_1A4561D54(v29, v30 + 1);
        }
        v31 = (void *)v28;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v138[0] = v31;
        sub_1A445E990((uint64_t)v27, v26, isUniquelyReferenced_nonNull_native);
        v121 = (uint64_t)v31;
        swift_release();

        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();

      }
      v14 = v119 + 1;

      v15 = v122;
      v13 = v116;
      if (v119 + 1 == v118)
      {
        swift_bridgeObjectRelease();
        a3 = v115;
        goto LABEL_24;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A454A7A8();
    swift_allocError();
    *v51 = 13;
    swift_willThrow();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  v122 = MEMORY[0x1E0DEE9E0];
  v121 = MEMORY[0x1E0DEE9E0];
LABEL_24:
  v138[0] = 0;
  v33 = objc_msgSend(v12, sel_saveSynchronouslyWithError_, v138);
  v34 = v138[0];
  if (!v33)
  {
    v42 = v138[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE68();

    swift_willThrow();
    goto LABEL_29;
  }
  v35 = v12;
  v115 = a3;
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
  v36 = v34;
  swift_bridgeObjectRetain();
  v37 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  v138[0] = 0;
  v38 = objc_msgSend(v117, sel_test_revertImageAttachmentsToUnDeduped_error_, v37, v138);

  if (!v38)
  {
    v43 = v138[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v44 = (void *)sub_1A468FE68();

    swift_willThrow();
    v45 = sub_1A468FE5C();
    sub_1A454A7A8();
    swift_allocError();
    *v46 = v45;
    swift_willThrow();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v39 = (_QWORD *)v121;
  if ((v121 & 0xC000000000000001) != 0)
  {
    v40 = v138[0];
    swift_bridgeObjectRetain();
    v41 = sub_1A4691308();
    swift_bridgeObjectRelease();
  }
  else
  {
    v41 = *(_QWORD *)(v121 + 16);
    v47 = v138[0];
  }
  if (!v41)
  {
LABEL_74:
    objc_msgSend(v117, sel_test_refreshHashtagLabelsImmediately);
    objc_msgSend(v117, sel_test_handleIncompleteTemplateOperationQueueItemsImmediately);
    objc_msgSend(v117, sel_test_handleIncompleteGroceryOperationQueueItemsImmediatelyWithTimeout_, 1.0);
    v39 = sub_1A4540860(v10);
    swift_bridgeObjectRelease();
    v72 = swift_bridgeObjectRetain();
    sub_1A445A2E0(v72);
    swift_bridgeObjectRelease();
    v73 = (void *)sub_1A4690B94();
    swift_release();
    v138[0] = 0;
    v74 = objc_msgSend(v117, sel_fetchListsWithObjectIDs_error_, v73, v138);

    v75 = v138[0];
    if (!v74)
    {
      v79 = v138[0];
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A468FE68();

      swift_willThrow();
      goto LABEL_29;
    }
    sub_1A444AA40(0, &qword_1EE71D5F0);
    sub_1A4460634();
    v76 = sub_1A4690708();
    v77 = v75;

    swift_bridgeObjectRetain();
    v78 = swift_bridgeObjectRetain();
    sub_1A4543140(v78, v76, &qword_1EE720728, &qword_1EE71D5F0, 0x1E0D84520, 8);
    v81 = v80;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v82 = swift_bridgeObjectRetain();
    sub_1A445A2E0(v82);
    swift_bridgeObjectRelease();
    v83 = (void *)sub_1A4690B94();
    swift_release();
    v138[0] = 0;
    v84 = objc_msgSend(v117, sel_fetchListSectionsWithObjectIDs_error_, v83, v138);

    v85 = v138[0];
    if (v84)
    {
      v131 = v81;
      sub_1A444AA40(0, &qword_1EE7206D0);
      v86 = sub_1A4690708();
      v87 = v85;

      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A4543140(v137, v86, &qword_1EE720720, &qword_1EE7206D0, 0x1E0D84548, 20);
      v90 = v89;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v35 = v117;
      v91 = swift_bridgeObjectRetain();
      v128 = (uint64_t)sub_1A4543490(v91, v35);
      v129 = v90;
      swift_bridgeObjectRelease();

      v92 = swift_bridgeObjectRetain();
      sub_1A445A2E0(v92);
      swift_bridgeObjectRelease();
      v93 = (void *)sub_1A4690B94();
      swift_release();
      v138[0] = 0;
      v94 = objc_msgSend(v35, sel_fetchSmartListSectionsWithObjectIDs_error_, v93, v138);

      v95 = v138[0];
      if (!v94)
      {
        v99 = v138[0];
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A468FE68();

        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      sub_1A444AA40(0, (unint64_t *)&qword_1ED23EC60);
      v96 = sub_1A4690708();
      v97 = v95;

      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A4543140(v136, v96, &qword_1EE720710, (unint64_t *)&qword_1ED23EC60, 0x1E0D84688, 21);
      v127 = v98;
      v48 = 0;
LABEL_89:
      v12 = v39;
      v11 = v131;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v4 = v35;
      v100 = swift_bridgeObjectRetain();
      sub_1A4543768(v100, v4);
      v29 = v48;
      if (v48)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
LABEL_92:
      v101 = v30;
      swift_bridgeObjectRelease();

      v102 = v4;
      swift_bridgeObjectRetain();
      sub_1A4540DB4(MEMORY[0x1E0DEE9E0], v122, v102);
      v126 = v103;
      if (v29)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }

      v104 = swift_bridgeObjectRetain();
      sub_1A445A2E0(v104);
      swift_bridgeObjectRelease();
      v105 = (void *)sub_1A4690B94();
      swift_release();
      v106 = objc_msgSend((id)objc_opt_self(), sel_fetchOptionsIncludingDueDateDeltaAlerts);
      v138[0] = 0;
      v107 = objc_msgSend(v102, sel_fetchRemindersWithObjectIDs_fetchOptions_error_, v105, v106, v138);

      v108 = v138[0];
      if (v107)
      {
        sub_1A444AA40(0, (unint64_t *)&qword_1EE71CF80);
        v109 = sub_1A4690708();
        v110 = v108;

        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A4543140(v135, v109, &qword_1EE71CB10, (unint64_t *)&qword_1EE71CF80, 0x1E0D845E0, 12);
        v113 = v112;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        sub_1A4540B40(v113);
        v134 = v114;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        *v115 = v12;
        v115[1] = v120;
        v115[2] = v11;
        v115[3] = v129;
        v115[4] = v128;
        v115[5] = v127;
        v115[6] = v101;
        v115[7] = v126;
        v115[8] = v113;
        v115[9] = v134;
        return result;
      }
      v111 = v138[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A468FE68();

      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v88 = v138[0];
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A468FE68();

      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  v133 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84650]), sel_initWithStore_, v117);
  if ((v121 & 0xC000000000000001) != 0)
  {
    v130 = 0;
    v48 = 0;
    v49 = 0;
    v50 = sub_1A46915FC() | 0x8000000000000000;
  }
  else
  {
    v52 = -1 << *(_BYTE *)(v121 + 32);
    v48 = ~v52;
    v130 = v121 + 64;
    v53 = -v52;
    if (v53 < 64)
      v54 = ~(-1 << v53);
    else
      v54 = -1;
    v49 = v54 & *(_QWORD *)(v121 + 64);
    v50 = v121;
  }
  swift_bridgeObjectRetain();
  v55 = 0;
  v128 = v50 & 0x7FFFFFFFFFFFFFFFLL;
  v129 = (unint64_t)(v48 + 64) >> 6;
  v127 = MEMORY[0x1E0DEE9B0] + 8;
  v131 = v48;
  v132 = (id)v50;
  while ((v50 & 0x8000000000000000) != 0)
  {
    if (!sub_1A4691620())
    {
      v35 = v125;
      goto LABEL_72;
    }
    sub_1A444AA40(0, &qword_1EE71CB20);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v58 = v138[0];
    swift_unknownObjectRelease();
    sub_1A444AA40(0, &qword_1EE7206C8);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v39 = v138[0];
    swift_unknownObjectRelease();
    v56 = v49;
LABEL_60:
    if (!v58)
    {
      v35 = v125;
      v10 = v123;
      goto LABEL_72;
    }
    v65 = v58;
    v66 = v39;
    v67 = objc_msgSend(v133, sel_updateAccount_, v65);
    v68 = objc_msgSend(v67, sel_templatesContextChangeItem);
    if (v68)
    {
      v39 = v68;
      objc_msgSend(v68, sel_updateManualOrdering_, v66);

    }
    v49 = v56;
    v35 = v125;
    v10 = v123;
    v48 = v131;
    v50 = (unint64_t)v132;
  }
  if (v49)
  {
    v56 = (v49 - 1) & v49;
    v57 = __clz(__rbit64(v49)) | (v55 << 6);
LABEL_59:
    v63 = 8 * v57;
    v64 = *(void **)(*(_QWORD *)(v50 + 56) + v63);
    v58 = *(id *)(*(_QWORD *)(v50 + 48) + v63);
    v39 = v64;
    goto LABEL_60;
  }
  v59 = v55;
  if (__OFADD__(v55++, 1))
  {
    __break(1u);
    goto LABEL_89;
  }
  if (v55 >= v129)
  {
LABEL_71:
    v10 = v123;
    goto LABEL_72;
  }
  v61 = *(_QWORD *)(v130 + 8 * v55);
  if (v61)
  {
LABEL_58:
    v56 = (v61 - 1) & v61;
    v57 = __clz(__rbit64(v61)) + (v55 << 6);
    goto LABEL_59;
  }
  v62 = v55 + 1;
  if (v55 + 1 >= v129)
    goto LABEL_71;
  v61 = *(_QWORD *)(v130 + 8 * v62);
  if (v61)
    goto LABEL_57;
  v62 = v55 + 2;
  if (v55 + 2 >= v129)
    goto LABEL_71;
  v61 = *(_QWORD *)(v130 + 8 * v62);
  if (v61)
  {
LABEL_57:
    v55 = v62;
    goto LABEL_58;
  }
  v55 += 3;
  if (v55 >= v129)
    goto LABEL_71;
  v61 = *(_QWORD *)(v130 + 8 * v55);
  if (v61)
    goto LABEL_58;
  v69 = v59 + 5;
  v10 = v123;
  while (v129 != v69)
  {
    v61 = *(_QWORD *)(v130 + 8 * v69++);
    if (v61)
    {
      v55 = v69 - 1;
      goto LABEL_58;
    }
  }
LABEL_72:
  sub_1A4460EDC();
  v138[0] = 0;
  if (objc_msgSend(v133, sel_saveSynchronouslyWithError_, v138))
  {
    v70 = v138[0];

    goto LABEL_74;
  }
  v71 = v138[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A468FE68();

  swift_willThrow();
LABEL_29:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_30:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4532734(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A453275C(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A45327FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _QWORD v27[9];
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;

  swift_bridgeObjectRetain();
  sub_1A4532A38(0x694C656C676E6953, 0xEA00000000007473, 0, 1, a1, (uint64_t)v27);
  v2 = v27[1];
  v3 = v27[3];
  v24 = v27[2];
  v25 = v27[0];
  v4 = v27[5];
  v5 = (void *)v27[6];
  v22 = v27[8];
  v23 = v27[4];
  v20 = (void *)v27[7];
  v21 = v28;
  v6 = v29;
  v7 = v30;
  v8 = 256;
  if (!v32)
    v8 = 0;
  v9 = v8 | v31;
  v10 = 0x10000;
  if (!v33)
    v10 = 0;
  v11 = v9 | v10;
  v13 = v34;
  v12 = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7206B8);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1A4695C10;
  *(_QWORD *)(v14 + 32) = v25;
  *(_QWORD *)(v14 + 40) = v2;
  *(_QWORD *)(v14 + 48) = v24;
  *(_QWORD *)(v14 + 56) = v3;
  *(_QWORD *)(v14 + 64) = v23;
  *(_QWORD *)(v14 + 72) = v4;
  *(_QWORD *)(v14 + 80) = v5;
  *(_QWORD *)(v14 + 88) = v20;
  *(_QWORD *)(v14 + 96) = v22;
  *(_QWORD *)(v14 + 104) = v21;
  *(_QWORD *)(v14 + 112) = v6;
  *(_QWORD *)(v14 + 120) = v7;
  *(_QWORD *)(v14 + 128) = v11;
  *(_QWORD *)(v14 + 136) = v13;
  *(_QWORD *)(v14 + 144) = v12;
  v15 = qword_1EE71C0F0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = v5;
  v16 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 != -1)
    swift_once();
  v17 = qword_1EE71FFA8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71FFF0);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1A4695C10;
  *(_QWORD *)(v18 + 32) = 0x64656C7469746E55;
  *(_QWORD *)(v18 + 40) = 0xE800000000000000;
  *(_QWORD *)(v18 + 48) = v17;
  *(_QWORD *)(v18 + 56) = v14;
  *(_QWORD *)(v18 + 64) = 0;
  *(_QWORD *)(v18 + 72) = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18;
}

double sub_1A4532A38@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  char v25;
  double result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  __int16 v35;
  char v36;

  v30 = a2;
  v31 = a3;
  v29 = a1;
  v9 = type metadata accessor for REMTestStorePopulator.TestReminder(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for REMTestStorePopulator.TestList.ListChild(0);
  v13 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = 0;
  v34 = 0;
  v36 = a4 & 1;
  v16 = *(_QWORD *)(a5 + 16);
  if (v16)
  {
    v28 = a6;
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1A445A9EC(0, v16, 0);
    v17 = *(unsigned __int8 *)(v10 + 80);
    v27 = a5;
    v18 = a5 + ((v17 + 32) & ~v17);
    v19 = *(_QWORD *)(v10 + 72);
    do
    {
      sub_1A4497EE8(v18, (uint64_t)v12, type metadata accessor for REMTestStorePopulator.TestReminder);
      sub_1A4497EE8((uint64_t)v12, (uint64_t)v15, type metadata accessor for REMTestStorePopulator.TestReminder);
      swift_storeEnumTagMultiPayload();
      sub_1A4497F2C((uint64_t)v12, type metadata accessor for REMTestStorePopulator.TestReminder);
      v20 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A445A9EC(0, *(_QWORD *)(v20 + 16) + 1, 1);
        v20 = v33;
      }
      v22 = *(_QWORD *)(v20 + 16);
      v21 = *(_QWORD *)(v20 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1A445A9EC(v21 > 1, v22 + 1, 1);
        v20 = v33;
      }
      *(_QWORD *)(v20 + 16) = v22 + 1;
      sub_1A44683E0((uint64_t)v15, v20+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v22, type metadata accessor for REMTestStorePopulator.TestList.ListChild);
      v18 += v19;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    a4 = v36;
    v23 = HIBYTE(v35);
    v24 = v35;
    v25 = v34;
    a6 = v28;
  }
  else
  {
    swift_bridgeObjectRelease();
    v25 = 0;
    v24 = 0;
    v23 = 0;
    v20 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)a6 = v29;
  *(_QWORD *)(a6 + 8) = v30;
  result = 0.0;
  *(_OWORD *)(a6 + 16) = 0u;
  *(_OWORD *)(a6 + 32) = 0u;
  *(_OWORD *)(a6 + 48) = 0u;
  *(_QWORD *)(a6 + 64) = v31;
  *(_BYTE *)(a6 + 72) = a4 & 1;
  *(_QWORD *)(a6 + 80) = v20;
  *(_QWORD *)(a6 + 88) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(a6 + 96) = v23;
  *(_BYTE *)(a6 + 97) = v24;
  *(_BYTE *)(a6 + 98) = v25;
  *(_QWORD *)(a6 + 104) = 0;
  *(_QWORD *)(a6 + 112) = 0;
  return result;
}

uint64_t static REMTestStorePopulator.TestStoreBuilder.buildExpression(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  void *v15;
  id v16;
  id v17;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(void **)(a1 + 48);
  v6 = *(unsigned __int8 *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  v10 = *(_QWORD *)(a1 + 104);
  v9 = *(_QWORD *)(a1 + 112);
  v11 = 256;
  if (!*(_BYTE *)(a1 + 97))
    v11 = 0;
  v12 = v11 | *(unsigned __int8 *)(a1 + 96);
  v13 = 0x10000;
  if (!*(_BYTE *)(a1 + 98))
    v13 = 0;
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 40) = v4;
  *(_QWORD *)(a2 + 48) = v5;
  v14 = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 56) = v14;
  *(_QWORD *)(a2 + 72) = v6;
  *(_QWORD *)(a2 + 80) = v8;
  *(_QWORD *)(a2 + 88) = v7;
  *(_QWORD *)(a2 + 96) = v12 | v13;
  v15 = (void *)v14;
  *(_QWORD *)(a2 + 104) = v10;
  *(_QWORD *)(a2 + 112) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = v5;
  v17 = v15;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(unsigned __int8 *)(a1 + 32);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 32) = v5;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = 0xC000000000000000;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = 0;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double static REMTestStorePopulator.TestStoreBuilder.buildBlock(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  v2 = qword_1EE71C0F0;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = qword_1EE71FFA8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71FFF0);
  v4 = swift_allocObject();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v4 + 16) = xmmword_1A4695C10;
  *(_QWORD *)(v4 + 32) = 0x64656C7469746E55;
  *(_QWORD *)(v4 + 40) = 0xE800000000000000;
  *(_QWORD *)(v4 + 48) = v3;
  *(_QWORD *)(v4 + 56) = a1;
  *(_QWORD *)(v4 + 64) = 0;
  *(_QWORD *)(v4 + 72) = 0;
  return result;
}

uint64_t REMTestStorePopulator.dump(formatter:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  __int128 v5;
  __int128 v6;
  id v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  _QWORD *v11;
  id *v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t (*v17)(void);
  id v18;
  id v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t (*v39)(void);
  id v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(id, uint64_t, uint64_t);
  id v60;
  _QWORD *v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  void *v73;
  id v74;
  id v75;
  id v76;
  void *v77;
  unint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  void *v83;
  uint64_t v84;
  id v85;
  _QWORD *v86;
  void *v87;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  unint64_t v92;
  _QWORD *v93;
  unint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void **v101;
  unint64_t v102;
  unint64_t v103;
  id v104;
  id v105;
  _QWORD **v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  unint64_t v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  _OWORD v124[11];
  _OWORD v125[9];
  __int128 v126;
  __int128 v127;
  uint64_t v128;

  v2 = v1;
  v128 = *MEMORY[0x1E0C80C00];
  v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMAccountsListDataView.Invocation()), sel_initWithFetchResultTokenToDiffAgainst_, 0);
  sub_1A447A848((uint64_t)v4, 0x100000001uLL, (uint64_t)v125);

  v121 = v125[8];
  v122 = v126;
  v123 = v127;
  v117 = v125[4];
  v118 = v125[5];
  v119 = v125[6];
  v120 = v125[7];
  v113 = v125[0];
  v114 = v125[1];
  v115 = v125[2];
  v116 = v125[3];
  v5 = v126;
  v6 = v127;
  sub_1A45439A4((uint64_t)&v113);
  v7 = *((id *)&v6 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A4543A28((uint64_t)&v113);
  v124[6] = v119;
  v124[7] = v120;
  v124[8] = v121;
  v124[2] = v115;
  v124[3] = v116;
  v124[4] = v117;
  v124[5] = v118;
  v124[0] = v113;
  v124[1] = v114;
  v124[9] = v5;
  v124[10] = v6;
  sub_1A45439A4((uint64_t)&v113);
  sub_1A4543A28((uint64_t)v124);
  v8 = (_QWORD *)v113;
  swift_bridgeObjectRetain();
  sub_1A4543AEC((uint64_t)&v113);
  v111 = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A4542484((uint64_t *)&v111, v2);
  swift_bridgeObjectRelease();
  swift_release();
  v9 = v111;
  v96 = v111[2];
  if (v96)
  {
    v10 = 0;
    v107 = a1;
    v108 = swift_allocObject();
    *(_QWORD *)(v108 + 16) = MEMORY[0x1E0DEE9D8];
    v106 = (_QWORD **)(v108 + 16);
    v11 = v9 + 4;
    v93 = v9;
    v90 = v9 + 4;
    v91 = v2;
    do
    {
      if (v10 >= v9[2])
        goto LABEL_62;
      v92 = v10;
      v12 = (id *)&v11[2 * v10];
      v13 = v12[1];
      v104 = v13;
      v95 = *v12;
      if (v96 == 1)
      {
        v14 = *v12;
        swift_bridgeObjectRetain();
      }
      else
      {
        v15 = a1[4];
        v16 = *v12;
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        v17 = *(uint64_t (**)(void))(v15 + 8);
        v18 = v16;
        swift_bridgeObjectRetain();
        v19 = v18;
        v20 = (_QWORD *)v17();
        v22 = v21;

        v23 = swift_allocObject();
        *(_QWORD *)(v23 + 16) = MEMORY[0x1E0DEE9D8];
        v111 = v20;
        v112 = v22;
        v24 = (_QWORD *)swift_allocObject();
        v24[2] = v23;
        v24[3] = 0;
        v24[4] = 0xE000000000000000;
        sub_1A4466118();
        swift_retain();
        sub_1A469120C();
        swift_release();
        swift_beginAccess();
        v111 = *(_QWORD **)(v23 + 16);
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
        sub_1A4469630();
        v25 = sub_1A4690828();
        v27 = v26;
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        v28 = *v106;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v28 = sub_1A4438920(0, v28[2] + 1, 1, v28);
        v30 = v28[2];
        v29 = v28[3];
        a1 = v107;
        if (v30 >= v29 >> 1)
          v28 = sub_1A4438920((_QWORD *)(v29 > 1), v30 + 1, 1, v28);
        v28[2] = v30 + 1;
        v31 = &v28[2 * v30];
        v31[4] = v25;
        v31[5] = v27;
        *v106 = v28;
        swift_endAccess();
        sub_1A4690984();
      }
      v97 = *((_QWORD *)v13 + 2);
      if (v97)
      {
        v99 = (uint64_t)v13 + 32;
        swift_bridgeObjectRetain();
        v32 = 0;
        while (1)
        {
          if (v32 >= *((_QWORD *)v13 + 2))
            goto LABEL_61;
          v33 = (unint64_t *)(v99 + 16 * v32);
          v35 = *v33;
          v34 = v33[1];
          v36 = *v33 >> 62;
          v102 = v32;
          if (!(_DWORD)v36)
            break;
          if ((_DWORD)v36 == 1)
          {
            sub_1A4467604(v35);
            sub_1A4467604(v35);
            swift_bridgeObjectRetain();
            sub_1A45350F0((void *)(v35 & 0x3FFFFFFFFFFFFFFFLL), 0, 0xE000000000000000, a1, v108, 538976288, 0xE400000000000000, v2);
LABEL_18:
            sub_1A4467654(v35);
            swift_bridgeObjectRelease();
            sub_1A4467654(v35);
            goto LABEL_19;
          }
          v38 = a1[4];
          __swift_project_boxed_opaque_existential_1(a1, a1[3]);
          v39 = *(uint64_t (**)(void))(v38 + 24);
          sub_1A4467604(v35);
          v94 = v35;
          v103 = v34;
          sub_1A4467604(v35);
          v40 = (id)(v35 & 0x3FFFFFFFFFFFFFFFLL);
          v41 = (_QWORD *)v39();
          v43 = v42;

          v44 = swift_allocObject();
          *(_QWORD *)(v44 + 16) = MEMORY[0x1E0DEE9D8];
          v111 = v41;
          v112 = v43;
          v45 = (_QWORD *)swift_allocObject();
          v45[2] = v44;
          v45[3] = 0;
          v45[4] = 0xE000000000000000;
          sub_1A4466118();
          swift_bridgeObjectRetain_n();
          swift_retain();
          sub_1A469120C();
          swift_release();
          swift_beginAccess();
          v111 = *(_QWORD **)(v44 + 16);
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
          sub_1A4469630();
          v46 = sub_1A4690828();
          v48 = v47;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_beginAccess();
          v49 = *v106;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v49 = sub_1A4438920(0, v49[2] + 1, 1, v49);
          v51 = v49[2];
          v50 = v49[3];
          v13 = v104;
          v52 = v103;
          if (v51 >= v50 >> 1)
            v49 = sub_1A4438920((_QWORD *)(v50 > 1), v51 + 1, 1, v49);
          v49[2] = v51 + 1;
          v53 = &v49[2 * v51];
          v53[4] = v46;
          v53[5] = v48;
          *v106 = v49;
          swift_endAccess();
          v111 = 0;
          v112 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          sub_1A4690984();
          v54 = v112;
          v100 = *(_QWORD *)(v103 + 16);
          if (!v100)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            sub_1A4467654(v35);
            sub_1A4467654(v35);
            swift_bridgeObjectRelease();
            a1 = v107;
            goto LABEL_19;
          }
          v101 = (void **)v111;
          swift_bridgeObjectRetain();
          v55 = 0;
          a1 = v107;
          v98 = v54;
          while (2)
          {
            if (v55 >= *(_QWORD *)(v52 + 16))
              goto LABEL_60;
            v56 = *(_QWORD *)(v103 + 32 + 8 * v55);
            if ((v56 & 0x8000000000000000) != 0)
            {
              v85 = (id)(v56 & 0x7FFFFFFFFFFFFFFFLL);
              sub_1A45350F0(v85, v101, v54, a1, v108, 538976288, 0xE400000000000000, v2);

              goto LABEL_30;
            }
            v109 = v54;
            v57 = a1[3];
            v58 = a1[4];
            __swift_project_boxed_opaque_existential_1(a1, v57);
            v59 = *(uint64_t (**)(id, uint64_t, uint64_t))(v58 + 24);
            v60 = (id)v56;
            swift_bridgeObjectRetain();
            v105 = v60;
            v61 = (_QWORD *)v59(v60, v57, v58);
            v63 = v62;
            v64 = swift_allocObject();
            *(_QWORD *)(v64 + 16) = MEMORY[0x1E0DEE9D8];
            v111 = v61;
            v112 = v63;
            v65 = (_QWORD *)swift_allocObject();
            v65[2] = v64;
            v65[3] = v101;
            v65[4] = v54;
            swift_bridgeObjectRetain();
            swift_retain();
            sub_1A469120C();
            swift_release();
            swift_beginAccess();
            v111 = *(_QWORD **)(v64 + 16);
            swift_bridgeObjectRetain();
            v66 = sub_1A4690828();
            v68 = v67;
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_beginAccess();
            v69 = *v106;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v69 = sub_1A4438920(0, v69[2] + 1, 1, v69);
            v71 = v69[2];
            v70 = v69[3];
            v13 = v104;
            if (v71 >= v70 >> 1)
              v69 = sub_1A4438920((_QWORD *)(v70 > 1), v71 + 1, 1, v69);
            v69[2] = v71 + 1;
            v72 = &v69[2 * v71];
            v72[4] = v66;
            v72[5] = v68;
            *v106 = v69;
            swift_endAccess();
            sub_1A4690984();
            v73 = v105;
            v74 = objc_msgSend(v105, sel_sectionContext);

            if (v74)
            {
              sub_1A453464C((uint64_t)v105, v101, v109, v108, 538976288, 0xE400000000000000, a1);
              v52 = v103;
LABEL_28:
              v54 = v98;
              goto LABEL_29;
            }
            v111 = 0;
            v75 = objc_msgSend(v105, sel_fetchRemindersWithError_, &v111);
            v76 = v111;
            v52 = v103;
            if (!v75)
            {
              v86 = v111;
              swift_bridgeObjectRelease();
              v87 = (void *)sub_1A468FE68();

              swift_willThrow();
              swift_bridgeObjectRelease();
              sub_1A4467654(v94);
              sub_1A4467654(v94);
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              *(_QWORD *)&v125[0] = 0x203A726F727245;
              *((_QWORD *)&v125[0] + 1) = 0xE700000000000000;
              swift_getErrorValue();
              Error.rem_errorDescription.getter(v110);
              sub_1A4690984();
              swift_bridgeObjectRelease();

              return *(_QWORD *)&v125[0];
            }
            v77 = v75;
            sub_1A444AA40(0, (unint64_t *)&qword_1EE71CF80);
            v78 = sub_1A4690BA0();
            v79 = v76;

            if (v78 >> 62)
            {
              swift_bridgeObjectRetain();
              v80 = sub_1A46916A4();
              swift_bridgeObjectRelease();
              if (!v80)
              {
LABEL_50:
                swift_bridgeObjectRelease();
                v2 = v91;
                v13 = v104;
                goto LABEL_28;
              }
            }
            else
            {
              v80 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (!v80)
                goto LABEL_50;
            }
            v81 = 4;
            do
            {
              if ((v78 & 0xC000000000000001) != 0)
                v82 = (id)MEMORY[0x1A859ECE0](v81 - 4, v78);
              else
                v82 = *(id *)(v78 + 8 * v81);
              v83 = v82;
              v84 = v81 - 3;
              if (__OFADD__(v81 - 4, 1))
              {
                __break(1u);
LABEL_60:
                __break(1u);
LABEL_61:
                __break(1u);
LABEL_62:
                __break(1u);
              }
              swift_bridgeObjectRetain();
              sub_1A4533DC4(v83, v101, v109, v108, v107, 538976288, 0xE400000000000000);

              swift_bridgeObjectRelease();
              ++v81;
            }
            while (v84 != v80);
            swift_bridgeObjectRelease();
            v2 = v91;
            a1 = v107;
            v13 = v104;
            v52 = v103;
            v54 = v98;
            v73 = v105;
LABEL_29:

            swift_bridgeObjectRelease();
LABEL_30:
            if (++v55 != v100)
              continue;
            break;
          }
          swift_bridgeObjectRelease();
          sub_1A4467654(v94);
          sub_1A4467654(v94);
          swift_bridgeObjectRelease();
LABEL_19:
          v32 = v102 + 1;
          if (v102 + 1 == v97)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_54;
          }
        }
        v37 = *(_BYTE *)(v2 + 96);
        sub_1A4467604(v35);
        sub_1A4467604(v35);
        swift_bridgeObjectRetain();
        sub_1A45341B8((void *)v35, 0, 0xE000000000000000, v37, v108, a1, 538976288, 0xE400000000000000);
        goto LABEL_18;
      }
      swift_bridgeObjectRelease();
LABEL_54:
      v10 = v92 + 1;

      swift_bridgeObjectRelease();
      v11 = v90;
      v9 = v93;
    }
    while (v92 + 1 != v96);
    swift_release();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    sub_1A4469630();
    v89 = sub_1A4690828();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    return 0x6F636361206F6E3CLL;
  }
  return v89;
}

id sub_1A4533DC4(void *a1, void *a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id result;
  void *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  unint64_t *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v37 = (unint64_t *)(a4 + 16);
  v12 = a5[3];
  v13 = a5[4];
  __swift_project_boxed_opaque_existential_1(a5, v12);
  v38 = a1;
  v14 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 40))(a1, v12, v13);
  v16 = v15;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = MEMORY[0x1E0DEE9D8];
  v46 = v14;
  v47 = v16;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v17;
  v18[3] = a2;
  v18[4] = a3;
  sub_1A4466118();
  swift_retain();
  v39 = a3;
  v19 = v37;
  swift_bridgeObjectRetain();
  sub_1A469120C();
  swift_release();
  swift_beginAccess();
  v44 = *(id *)(v17 + 16);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A4469630();
  v20 = sub_1A4690828();
  v22 = v21;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v23 = *(_QWORD *)(a4 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v40 = a4;
  *(_QWORD *)(a4 + 16) = v23;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_19;
  while (1)
  {
    v26 = *(_QWORD *)(v23 + 16);
    v25 = *(_QWORD *)(v23 + 24);
    if (v26 >= v25 >> 1)
    {
      v23 = (unint64_t)sub_1A4438920((_QWORD *)(v25 > 1), v26 + 1, 1, (_QWORD *)v23);
      *v19 = v23;
    }
    *(_QWORD *)(v23 + 16) = v26 + 1;
    v27 = v23 + 16 * v26;
    *(_QWORD *)(v27 + 32) = v20;
    *(_QWORD *)(v27 + 40) = v22;
    swift_endAccess();
    result = objc_msgSend(v38, sel_subtaskContext);
    if (!result)
      break;
    v29 = result;
    v44 = 0;
    v30 = objc_msgSend(result, sel_fetchRemindersWithError_, &v44);

    v31 = v44;
    if (!v30)
    {
      v36 = v44;
      sub_1A468FE68();

      return (id)swift_willThrow();
    }
    sub_1A444AA40(0, (unint64_t *)&qword_1EE71CF80);
    v23 = sub_1A4690BA0();
    v32 = v31;

    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      v22 = sub_1A46916A4();
      swift_bridgeObjectRelease();
      if (!v22)
        return (id)swift_bridgeObjectRelease();
    }
    else
    {
      v22 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v22)
        return (id)swift_bridgeObjectRelease();
    }
    v38 = (id)(v23 & 0xC000000000000001);
    v33 = 4;
    while (1)
    {
      v20 = v33 - 4;
      v34 = v38 ? (id)MEMORY[0x1A859ECE0](v33 - 4, v23) : *(id *)(v23 + 8 * v33);
      v35 = v34;
      v19 = (unint64_t *)(v33 - 3);
      if (__OFADD__(v20, 1))
        break;
      v44 = a2;
      v45 = v39;
      swift_bridgeObjectRetain();
      sub_1A4690984();
      sub_1A4533DC4(v35, v44, v45, v40, a5, a6, a7);

      swift_bridgeObjectRelease();
      if (!v7)
      {
        ++v33;
        if (v19 != (unint64_t *)v22)
          continue;
      }
      return (id)swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_19:
    v23 = (unint64_t)sub_1A4438920(0, *(_QWORD *)(v23 + 16) + 1, 1, (_QWORD *)v23);
    *v19 = v23;
  }
  return result;
}

uint64_t sub_1A45341B8(void *a1, void *a2, uint64_t a3, char a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  id v41;
  uint64_t v43;
  _QWORD **v44;
  unint64_t v45;
  uint64_t v46;
  id v51[7];

  v9 = v8;
  v10 = a6;
  v11 = a5;
  v51[6] = *(id *)MEMORY[0x1E0C80C00];
  if ((a4 & 1) == 0)
  {
    v46 = a5;
    v44 = (_QWORD **)(a5 + 16);
    v15 = a6[3];
    v16 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v15);
    v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 24);
    swift_bridgeObjectRetain();
    v45 = (unint64_t)a1;
    v18 = (void *)v17(a1, v15, v16);
    v20 = v19;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = MEMORY[0x1E0DEE9D8];
    v51[3] = v18;
    v51[4] = v20;
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v21;
    v22[3] = a2;
    v22[4] = a3;
    sub_1A4466118();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1A469120C();
    swift_release();
    swift_beginAccess();
    v23 = v44;
    v51[0] = *(id *)(v21 + 16);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    sub_1A4469630();
    v24 = (_QWORD *)sub_1A4690828();
    v43 = v25;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v26 = *v44;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v44 = v26;
    v28 = (unint64_t)v10;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  while (1)
  {
    v32 = objc_msgSend(a1, sel_sectionContext);

    if (v32)
    {
      sub_1A453464C((uint64_t)a1, a2, a3, v11, a7, a8, v10);
      return swift_bridgeObjectRelease();
    }
    v51[0] = 0;
    v33 = objc_msgSend(a1, sel_fetchRemindersWithError_, v51);
    v34 = v51[0];
    if (!v33)
    {
      v41 = v51[0];
      swift_bridgeObjectRelease();
      sub_1A468FE68();

      return swift_willThrow();
    }
    v35 = v33;
    sub_1A444AA40(0, (unint64_t *)&qword_1EE71CF80);
    v36 = sub_1A4690BA0();
    v37 = v34;

    v45 = v36;
    if (v36 >> 62)
      break;
    v23 = *(_QWORD **)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v23)
      goto LABEL_25;
LABEL_12:
    v46 = v11;
    v24 = v10;
    v28 = v45 & 0xC000000000000001;
    v38 = 4;
    while (1)
    {
      v39 = v28 ? (_QWORD *)MEMORY[0x1A859ECE0](v38 - 4, v45) : *(id *)(v45 + 8 * v38);
      v26 = v39;
      v40 = (_QWORD *)(v38 - 3);
      if (__OFADD__(v38 - 4, 1))
        break;
      swift_bridgeObjectRetain();
      sub_1A4533DC4(v26, a2, a3, v46, v24, a7, a8);
      if (v9)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease_n();
      }

      swift_bridgeObjectRelease();
      ++v38;
      if (v40 == v23)
        goto LABEL_25;
    }
    __break(1u);
LABEL_23:
    v26 = sub_1A4438920(0, v26[2] + 1, 1, v26);
    *v23 = v26;
LABEL_4:
    v30 = v26[2];
    v29 = v26[3];
    a1 = (void *)v45;
    if (v30 >= v29 >> 1)
    {
      v26 = sub_1A4438920((_QWORD *)(v29 > 1), v30 + 1, 1, v26);
      *v23 = v26;
    }
    v26[2] = v30 + 1;
    v31 = &v26[2 * v30];
    v31[4] = v24;
    v31[5] = v43;
    swift_endAccess();
    sub_1A4690984();
    v10 = (_QWORD *)v28;
    v11 = v46;
  }
  swift_bridgeObjectRetain();
  v23 = (_QWORD *)sub_1A46916A4();
  swift_bridgeObjectRelease();
  if (v23)
    goto LABEL_12;
LABEL_25:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1A453464C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  unint64_t v7;
  unint64_t v8;
  unint64_t Configuration;
  uint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  void *v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  id v34;
  unint64_t v35;
  _BYTE *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  _QWORD *v41;
  void *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void *v49;
  unint64_t v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD **v55;
  _QWORD *v56;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  unint64_t v62;
  void *v63;
  id v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  id v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  _QWORD *v77;
  _BYTE *v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  id v85;
  void *v86;
  uint64_t v87;
  void *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void **v95;
  id v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  id v100[14];

  v8 = v7;
  v89 = a7;
  v92 = a6;
  v91 = a5;
  v90 = a4;
  v87 = a3;
  v86 = a2;
  v100[13] = *(id *)MEMORY[0x1E0C80C00];
  Configuration = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  MEMORY[0x1E0C80A78](Configuration);
  v12 = (unint64_t)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100[0] = 0;
  v13 = objc_msgSend((id)a1, sel_fetchRemindersWithError_, v100);
  v14 = v100[0];
  if (!v13)
  {
    v40 = v100[0];
    sub_1A468FE68();

    swift_willThrow();
    return;
  }
  v15 = v13;
  v93 = sub_1A444AA40(0, (unint64_t *)&qword_1EE71CF80);
  v16 = sub_1A4690BA0();
  v17 = v14;

  v18 = sub_1A443D938(MEMORY[0x1E0DEE9D8]);
  if (v16 >> 62)
    goto LABEL_64;
  v19 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    v84 = Configuration;
    v85 = (id)a1;
    v88 = (void *)v8;
    v78 = (_BYTE *)v12;
    if (!v19)
    {
LABEL_27:
      swift_bridgeObjectRelease_n();
      v35 = v84;
      v36 = v78;
      type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
      swift_storeEnumTagMultiPayload();
      type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
      swift_storeEnumTagMultiPayload();
      *v36 = -127;
      v36[*(int *)(v35 + 24)] = 0;
      v36[*(int *)(v35 + 32)] = 1;
      v37 = v85;
      v38 = objc_msgSend(v85, sel_store);
      v39 = v88;
      static REMRemindersListDataView.fetchList_Sections(store:list:configuration:diffingAgainst:)((uint64_t)v38, v37, (uint64_t)v36, 0, (uint64_t)v100);
      if (v39)
      {
        sub_1A4497F2C((uint64_t)v36, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
        swift_bridgeObjectRelease();

        return;
      }

      v77 = v100[0];
      v16 = (unint64_t)v100[6];
      v8 = (unint64_t)v100[9];
      a1 = (uint64_t)v100[10];
      v96 = v100[12];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v41 = v77;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v74 = v41[2];
      if (!v74)
      {
LABEL_58:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A4497F2C((uint64_t)v78, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
        return;
      }
      v12 = 0;
      v73 = (_QWORD *)(v90 + 16);
      v76 = (char *)(v41 + 4);
      Configuration = v18 & 0xC000000000000001;
      v42 = (void *)(v18 & 0xFFFFFFFFFFFFFF8);
      if (v18 < 0)
        v42 = (void *)v18;
      v96 = v42;
      v94 = MEMORY[0x1E0DEE9B0] + 8;
      v75 = v18 & 0xC000000000000001;
      while (1)
      {
        if (v12 >= v41[2])
          goto LABEL_63;
        v43 = (uint64_t *)&v76[48 * v12];
        a1 = *v43;
        v8 = v43[1];
        v45 = v43[2];
        v44 = v43[3];
        v46 = v43[4];
        v16 = v43[5];
        v79 = v12;
        v85 = (id)v16;
        v82 = v44;
        v81 = v46;
        v84 = v45;
        v83 = a1;
        v80 = v8;
        if (a1)
        {
          v47 = swift_allocObject();
          *(_QWORD *)(v47 + 16) = MEMORY[0x1E0DEE9D8];
          v95 = (void **)(v47 + 16);
          v98 = (void *)v8;
          v99 = v45;
          v48 = (_QWORD *)swift_allocObject();
          v49 = v86;
          v48[2] = v47;
          v48[3] = v49;
          v48[4] = v87;
          v50 = (unint64_t)v85;
          sub_1A454A5D8(a1);
          sub_1A4466118();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1A469120C();
          swift_release();
          v51 = v95;
          swift_beginAccess();
          v98 = *v51;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
          sub_1A4469630();
          v52 = sub_1A4690828();
          v54 = v53;
          swift_release();
          swift_bridgeObjectRelease();
          v55 = (_QWORD **)v73;
          swift_beginAccess();
          v56 = *v55;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v55 = v56;
          v8 = v50;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v56 = sub_1A4438920(0, v56[2] + 1, 1, v56);
            *v73 = v56;
          }
          Configuration = v75;
          v59 = v56[2];
          v58 = v56[3];
          if (v59 >= v58 >> 1)
          {
            v56 = sub_1A4438920((_QWORD *)(v58 > 1), v59 + 1, 1, v56);
            *v73 = v56;
          }
          v56[2] = v59 + 1;
          v60 = &v56[2 * v59];
          v60[4] = v52;
          v60[5] = v54;
          swift_endAccess();
          v98 = v86;
          v99 = v87;
          swift_bridgeObjectRetain();
          sub_1A4690984();
          v88 = v98;
          v95 = (void **)v99;
          v16 = v8;
          a1 = v83;
          v61 = *(_QWORD *)(v8 + 16);
          if (v61)
          {
LABEL_43:
            swift_bridgeObjectRetain();
            v62 = v16 + 56;
            while (1)
            {
              v63 = *(void **)(v62 - 24);
              if (Configuration)
              {
                swift_bridgeObjectRetain();
                v64 = v63;
                v65 = sub_1A4691614();
                if (v65)
                {
                  v8 = v65;
                  v97 = v65;
                  swift_unknownObjectRetain();
                  swift_dynamicCast();
                  v66 = v98;
                  swift_unknownObjectRelease();

                  if (v66)
                    goto LABEL_54;
                }
                else
                {

                }
              }
              else
              {
                v67 = *(_QWORD *)(v18 + 16);
                swift_bridgeObjectRetain();
                v68 = v63;
                if (v67)
                {
                  v8 = (unint64_t)v68;
                  v69 = sub_1A443E750(v8);
                  if ((v70 & 1) != 0)
                  {
                    v66 = *(id *)(*(_QWORD *)(v18 + 56) + 8 * v69);

                    if (v66)
                    {
LABEL_54:
                      sub_1A4533DC4(v66, v88, (uint64_t)v95, v90, v89, v91, v92);

                      swift_bridgeObjectRelease();
                      goto LABEL_46;
                    }
                  }
                  else
                  {

                  }
                }
              }
              swift_bridgeObjectRelease();

LABEL_46:
              v62 += 32;
              if (!--v61)
              {
                swift_bridgeObjectRelease();
                v16 = (unint64_t)v85;
                swift_bridgeObjectRelease();
                a1 = v83;
                goto LABEL_35;
              }
            }
          }
        }
        else
        {
          sub_1A454A5D8(0);
          swift_bridgeObjectRetain();
          v71 = swift_bridgeObjectRetain();
          v88 = v86;
          v95 = (void **)v71;
          Configuration = v75;
          v61 = *(_QWORD *)(v16 + 16);
          if (v61)
            goto LABEL_43;
        }
        swift_bridgeObjectRelease();
LABEL_35:
        v12 = v79 + 1;
        sub_1A454A610((void *)a1);
        swift_bridgeObjectRelease();
        v41 = v77;
        if (v12 == v74)
          goto LABEL_58;
      }
    }
    v95 = (void **)v16;
    v96 = (id)(v16 & 0xC000000000000001);
    v20 = 4;
    v94 = v19;
LABEL_8:
    v21 = v96 ? (id)MEMORY[0x1A859ECE0](v20 - 4, v16) : *(id *)(v16 + 8 * v20);
    v22 = v21;
    Configuration = v20 - 3;
    if (!__OFADD__(v20 - 4, 1))
      break;
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    swift_bridgeObjectRetain_n();
    v19 = sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  v16 = (unint64_t)objc_msgSend(v21, sel_objectID);
  if ((v18 & 0xC000000000000001) != 0)
  {
    if (v18 < 0)
      v23 = v18;
    else
      v23 = v18 & 0xFFFFFFFFFFFFFF8;
    v24 = sub_1A4691308();
    if (__OFADD__(v24, 1))
      goto LABEL_61;
    v18 = sub_1A4561FA4(v23, v24 + 1);
  }
  a1 = swift_isUniquelyReferenced_nonNull_native();
  v100[0] = (id)v18;
  v8 = sub_1A443E750(v16);
  v26 = *(_QWORD *)(v18 + 16);
  v27 = (v25 & 1) == 0;
  v28 = v26 + v27;
  if (__OFADD__(v26, v27))
    goto LABEL_60;
  v12 = v25;
  if (*(_QWORD *)(v18 + 24) >= v28)
  {
    if ((a1 & 1) == 0)
      sub_1A4448ADC();
LABEL_24:
    v18 = (uint64_t)v100[0];
    if ((v12 & 1) != 0)
    {
      v12 = *((_QWORD *)v100[0] + 7);

      *(_QWORD *)(v12 + 8 * v8) = v22;
    }
    else
    {
      *((_QWORD *)v100[0] + (v8 >> 6) + 8) |= 1 << v8;
      *(_QWORD *)(*(_QWORD *)(v18 + 48) + 8 * v8) = v16;
      *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v8) = v22;
      v31 = *(_QWORD *)(v18 + 16);
      v32 = __OFADD__(v31, 1);
      v33 = v31 + 1;
      if (v32)
        goto LABEL_62;
      *(_QWORD *)(v18 + 16) = v33;
      v34 = (id)v16;
    }

    swift_bridgeObjectRelease();
    ++v20;
    v16 = (unint64_t)v95;
    if (Configuration == v94)
      goto LABEL_27;
    goto LABEL_8;
  }
  sub_1A444344C(v28, a1);
  v29 = sub_1A443E750(v16);
  if ((v12 & 1) == (v30 & 1))
  {
    v8 = v29;
    goto LABEL_24;
  }
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
  sub_1A4691C08();
  __break(1u);
}

void sub_1A45350F0(void *a1, void **a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, _QWORD *);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  BOOL v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  _BOOL8 v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void *v64;
  id v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  id v69;
  id v70;
  unint64_t v71;
  char v72;
  void **v73;
  uint64_t v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  _QWORD *v81;
  id v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _OWORD v91[8];
  uint64_t v92;
  _OWORD v93[2];
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  void **v101;
  uint64_t v102;
  char v103;
  char v104;

  v87 = a5;
  v78 = a8;
  v84 = a6;
  v85 = a7;
  v79 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  MEMORY[0x1E0C80A78](v79);
  v81 = (uint64_t *)((char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v77 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  MEMORY[0x1E0C80A78](v77);
  v80 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = a5 + 16;
  v101 = a2;
  v102 = a3;
  v15 = a4[3];
  v21 = (_QWORD *)a4[4];
  v83 = a4;
  __swift_project_boxed_opaque_existential_1(a4, v15);
  v16 = (uint64_t (*)(void *, uint64_t, _QWORD *))v21[4];
  swift_bridgeObjectRetain();
  v82 = a1;
  v17 = v16(a1, v15, v21);
  v19 = v18;
  LOBYTE(v21) = v20;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v93[0] = v17;
  *((_QWORD *)&v93[0] + 1) = v19;
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v22;
  v23[3] = a2;
  v23[4] = a3;
  sub_1A4466118();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A469120C();
  swift_release();
  swift_beginAccess();
  *(_QWORD *)&v93[0] = *(_QWORD *)(v22 + 16);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A4469630();
  v24 = sub_1A4690828();
  v26 = v25;
  swift_bridgeObjectRelease();
  v27 = v86;
  swift_release();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v28 = v87;
  v29 = *(_QWORD *)(v87 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v28 + 16) = v29;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_34;
  while (1)
  {
    v32 = *(_QWORD *)(v29 + 16);
    v31 = *(_QWORD *)(v29 + 24);
    if (v32 >= v31 >> 1)
    {
      v29 = (uint64_t)sub_1A4438920((_QWORD *)(v31 > 1), v32 + 1, 1, (_QWORD *)v29);
      *(_QWORD *)v27 = v29;
    }
    *(_QWORD *)(v29 + 16) = v32 + 1;
    v33 = v29 + 16 * v32;
    *(_QWORD *)(v33 + 32) = v24;
    *(_QWORD *)(v33 + 40) = v26;
    swift_endAccess();
    if ((v21 & 1) == 0)
      goto LABEL_53;
    v35 = v84;
    v34 = v85;
    sub_1A4690984();
    v36 = v82;
    v37 = objc_msgSend(v82, sel_sectionContext);

    v38 = v88;
    if (v37)
    {
      sub_1A45359E0(v36, v101, v102, v87, v35, v34, v83);
      swift_bridgeObjectRelease();
      return;
    }
    v39 = *(_QWORD *)(v78 + 16);
    v104 = 96;
    v40 = (uint64_t)v80;
    swift_storeEnumTagMultiPayload();
    v41 = (uint64_t)v81;
    *v81 = 0x7FFFFFFFFFFFFFFFLL;
    swift_storeEnumTagMultiPayload();
    v103 = 2;
    static REMRemindersListDataView.fetchCustomSmartList(store:smartList:sortingStyle:showCompleted:countCompleted:remindersPrefetch:fetchSubtasks:shouldFetchManualOrderingID:diffingAgainst:)(v39, v36, &v104, v40, 0, v41, &v103, 0, v93, 0);
    if (v38)
    {
      sub_1A4497F2C(v41, type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
      sub_1A4497F2C(v40, type metadata accessor for REMRemindersListDataView.ShowCompleted);
      swift_bridgeObjectRelease();
      return;
    }
    v88 = 0;
    sub_1A4497F2C(v41, type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
    sub_1A4497F2C(v40, type metadata accessor for REMRemindersListDataView.ShowCompleted);
    v91[6] = v98;
    v91[7] = v99;
    v92 = v100;
    v91[2] = v94;
    v91[3] = v95;
    v91[4] = v96;
    v91[5] = v97;
    v91[0] = v93[0];
    v91[1] = v93[1];
    v42 = *((_QWORD *)&v94 + 1);
    v26 = v94;
    v43 = v95;
    v80 = *(char **)&v93[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v79 = v42;
    swift_bridgeObjectRetain();
    v21 = (id)v43;
    sub_1A44962FC(*((void **)&v43 + 1));
    sub_1A454A698((uint64_t)v91);

    sub_1A4496404(*((void **)&v43 + 1));
    if (v26 >> 62)
      goto LABEL_37;
    v44 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v44)
      break;
LABEL_11:
    v86 = v26 & 0xC000000000000001;
    v24 = MEMORY[0x1E0DEE9E0];
    v29 = 4;
    v81 = (_QWORD *)v44;
    v82 = (id)v26;
    while (1)
    {
      v46 = v86 ? (id)MEMORY[0x1A859ECE0](v29 - 4, v26) : *(id *)(v26 + 8 * v29);
      v47 = v46;
      v26 = v29 - 3;
      if (__OFADD__(v29 - 4, 1))
        break;
      v48 = objc_msgSend(v46, sel_objectID);
      if ((v24 & 0xC000000000000001) != 0)
      {
        if (v24 >= 0)
          v24 &= 0xFFFFFFFFFFFFFF8uLL;
        v49 = sub_1A4691308();
        if (__OFADD__(v49, 1))
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          swift_bridgeObjectRetain_n();
          v44 = sub_1A46916A4();
          swift_bridgeObjectRelease();
          if (!v44)
            goto LABEL_38;
          goto LABEL_11;
        }
        v24 = sub_1A4561FA4(v24, v49 + 1);
      }
      v50 = swift_isUniquelyReferenced_nonNull_native();
      v90 = (_QWORD *)v24;
      v27 = sub_1A443E750((uint64_t)v48);
      v52 = *(_QWORD *)(v24 + 16);
      v53 = (v51 & 1) == 0;
      v54 = v52 + v53;
      if (__OFADD__(v52, v53))
        goto LABEL_33;
      LOBYTE(v21) = v51;
      if (*(_QWORD *)(v24 + 24) >= v54)
      {
        if ((v50 & 1) == 0)
          sub_1A4448ADC();
      }
      else
      {
        sub_1A444344C(v54, v50);
        v55 = sub_1A443E750((uint64_t)v48);
        if ((v21 & 1) != (v56 & 1))
        {
          sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
          sub_1A4691C08();
          __break(1u);
          return;
        }
        v27 = v55;
      }
      v24 = (uint64_t)v90;
      if ((v21 & 1) != 0)
      {
        v21 = (_QWORD *)v90[7];

        v21[v27] = v47;
      }
      else
      {
        v90[(v27 >> 6) + 8] |= 1 << v27;
        *(_QWORD *)(*(_QWORD *)(v24 + 48) + 8 * v27) = v48;
        *(_QWORD *)(*(_QWORD *)(v24 + 56) + 8 * v27) = v47;
        v57 = *(_QWORD *)(v24 + 16);
        v58 = __OFADD__(v57, 1);
        v59 = v57 + 1;
        if (v58)
          goto LABEL_36;
        *(_QWORD *)(v24 + 16) = v59;
        v60 = v48;
      }

      swift_bridgeObjectRelease();
      ++v29;
      v45 = v26 == (_QWORD)v81;
      v26 = (unint64_t)v82;
      if (v45)
        goto LABEL_39;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    v29 = (uint64_t)sub_1A4438920(0, *(_QWORD *)(v29 + 16) + 1, 1, (_QWORD *)v29);
    *(_QWORD *)v27 = v29;
  }
LABEL_38:
  v24 = MEMORY[0x1E0DEE9E0];
LABEL_39:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v61 = *((_QWORD *)v80 + 2);
  if (!v61)
  {
LABEL_52:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_53:
    swift_bridgeObjectRelease();
    return;
  }
  v62 = v24 & 0xFFFFFFFFFFFFFF8;
  if (v24 < 0)
    v62 = v24;
  v86 = v62;
  v63 = v80 + 56;
  v82 = (id)(MEMORY[0x1E0DEE9B0] + 8);
  while (1)
  {
    v64 = (void *)*((_QWORD *)v63 - 3);
    if ((v24 & 0xC000000000000001) == 0)
      break;
    swift_bridgeObjectRetain();
    v65 = v64;
    v66 = sub_1A4691614();
    if (!v66)
    {

      goto LABEL_57;
    }
    v89 = v66;
    sub_1A444AA40(0, (unint64_t *)&qword_1EE71CF80);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v67 = v90;
    swift_unknownObjectRelease();

    if (!v67)
      goto LABEL_57;
LABEL_50:
    v73 = v101;
    v74 = v102;
    swift_bridgeObjectRetain();
    v75 = v73;
    v76 = v88;
    sub_1A4533DC4(v67, v75, v74, v87, v83, v84, v85);
    v88 = v76;
    if (v76)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_53;
    }
    v63 += 32;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v61)
      goto LABEL_52;
  }
  v68 = *(_QWORD *)(v24 + 16);
  swift_bridgeObjectRetain();
  v69 = v64;
  if (!v68)
    goto LABEL_57;
  v70 = v69;
  v71 = sub_1A443E750((uint64_t)v70);
  if ((v72 & 1) != 0)
  {
    v67 = *(id *)(*(_QWORD *)(v24 + 56) + 8 * v71);

    if (!v67)
      goto LABEL_57;
    goto LABEL_50;
  }

LABEL_57:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A454A654();
  swift_allocError();
  swift_willThrow();
  swift_bridgeObjectRelease();

}

void sub_1A45359E0(void *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Configuration;
  uint64_t v13;
  _BYTE *v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  __int128 v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void **v28;
  void *v29;
  uint32_t *p_ivar_base_size;
  void *v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void **v54;
  char *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void **v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  void **v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD **v71;
  _QWORD *v72;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  void *v83;
  id v84;
  uint64_t v85;
  void **v86;
  uint64_t v87;
  id v88;
  id v89;
  _QWORD *v90;
  unint64_t v91;
  char v92;
  _QWORD *v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  _QWORD *v99;
  unint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  void **v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  void *v107;
  char *v108;
  void **v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  void **v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  void **v125;
  uint64_t v126;
  id v127[3];
  _OWORD v128[8];
  void *v129;
  _QWORD v130[3];
  char v131;
  char v132;
  void *v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  void **v137;
  unint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  void *v154;
  uint64_t v155;

  v115 = a6;
  v116 = a7;
  v114 = a5;
  v112 = a4;
  v109 = a2;
  v110 = a3;
  v155 = *MEMORY[0x1E0C80C00];
  v9 = type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation.Parameters(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Configuration = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  MEMORY[0x1E0C80A78](Configuration);
  v14 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  swift_storeEnumTagMultiPayload();
  *v14 = 96;
  v14[*(int *)(Configuration + 24)] = 0;
  v14[*(int *)(Configuration + 32)] = 1;
  v15 = (char *)objc_msgSend(a1, sel_store);
  objc_allocWithZone((Class)type metadata accessor for REMSmartList_Codable());
  v16 = a1;
  v17 = REMSmartList_Codable.init(_:)(v16);
  sub_1A4497EE8((uint64_t)v14, (uint64_t)&v11[*(int *)(v9 + 24)], type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  *(_QWORD *)v11 = v17;
  v11[8] = 0;
  v18 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, 0);
  sub_1A447B2C8((unint64_t)v18, (uint64_t)&v146);
  if (v7)
  {

    sub_1A4497F2C((uint64_t)v11, type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation.Parameters);
    sub_1A4497F2C((uint64_t)v14, type metadata accessor for REMRemindersListDataView.FetchConfiguration);

    return;
  }
  v113 = v16;
  v118 = 0;
  v102 = v14;

  sub_1A4497F2C((uint64_t)v11, type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation.Parameters);
  v128[5] = v151;
  v128[6] = v152;
  v128[7] = v153;
  v129 = v154;
  v128[2] = v148;
  v128[3] = v149;
  v128[4] = v150;
  v128[0] = v146;
  v128[1] = v147;
  v117 = (void **)*((_QWORD *)&v146 + 1);
  v111 = v146;
  v119 = (void *)v147;
  LODWORD(v120) = BYTE8(v147);
  LODWORD(v121) = BYTE9(v147);
  v106 = *((_QWORD *)&v148 + 1);
  v107 = (void *)v148;
  v19 = v149;
  v108 = v15;
  v100 = *((_QWORD *)&v150 + 1);
  v101 = v151;
  v99 = (_QWORD *)*((_QWORD *)&v152 + 1);
  v20 = v152;
  v122 = v153;
  v123 = (void *)*((_QWORD *)&v151 + 1);
  v21 = v154;
  v103 = (void **)v150;
  v104 = *((_QWORD *)&v153 + 1);
  v105 = v154;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = (id)v19;
  v98 = v22;
  sub_1A44962FC(*((void **)&v19 + 1));
  v23 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = v99;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = v104;
  swift_bridgeObjectRetain();
  sub_1A454A698((uint64_t)v128);

  v130[0] = v111;
  v130[1] = v117;
  v130[2] = v119;
  v131 = v120;
  v132 = v121;
  v133 = v107;
  v134 = v106;
  v135 = v22;
  v136 = *((_QWORD *)&v19 + 1);
  v137 = v103;
  v138 = v100;
  v139 = v101;
  v140 = v123;
  v141 = v20;
  v142 = v24;
  v143 = v122;
  v144 = v25;
  v145 = v105;
  v26 = v111;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = v98;
  sub_1A44962FC(*((void **)&v19 + 1));
  sub_1A454A698((uint64_t)v130);

  sub_1A4496404(*((void **)&v19 + 1));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = (void **)MEMORY[0x1E0DEE9D8];
  v127[0] = (id)MEMORY[0x1E0DEE9D8];
  v119 = *(void **)(v26 + 16);
  if (v119)
  {
    v117 = (void **)(v26 + 32);
    swift_bridgeObjectRetain();
    v29 = 0;
    p_ivar_base_size = (_DWORD *)(&REMRemindersListDataView_TemplateInvocation__metaData + 8);
    v31 = v113;
    do
    {
      v33 = (char *)&v117[6 * (_QWORD)v29];
      v34 = *((_QWORD *)v33 + 5);
      v35 = *(_QWORD *)(v34 + 16);
      if (v35)
      {
        v36 = *(void **)v33;
        v37 = *((_QWORD *)v33 + 1);
        v38 = *((_QWORD *)v33 + 2);
        v39 = *((_QWORD *)v33 + 3);
        v125 = v28;
        v122 = v37;
        v123 = v36;
        v120 = v39;
        v121 = v38;
        sub_1A454A5D8((uint64_t)v36);
        swift_bridgeObjectRetain_n();
        sub_1A469153C();
        v40 = 32;
        do
        {
          v41 = *(id *)(v34 + v40);
          sub_1A4691518();
          sub_1A4691548();
          sub_1A4691554();
          sub_1A4691524();
          v40 += 32;
          --v35;
        }
        while (v35);
        v32 = (unint64_t)v125;
        swift_bridgeObjectRelease();
        sub_1A454A610(v123);
        swift_bridgeObjectRelease();
        v28 = (void **)MEMORY[0x1E0DEE9D8];
        p_ivar_base_size = (_DWORD *)(&REMRemindersListDataView_TemplateInvocation__metaData + 8);
        v31 = v113;
      }
      else
      {
        v32 = (unint64_t)v28;
      }
      v29 = (char *)v29 + 1;
      sub_1A4458EB0(v32);
    }
    while (v29 != v119);
    swift_bridgeObjectRelease();
  }
  else
  {
    p_ivar_base_size = &REMRemindersListDataView_TemplateInvocation__metaData.ivar_base_size;
    v31 = v113;
  }
  v42 = objc_msgSend(v31, *((SEL *)p_ivar_base_size + 386));
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
  v43 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  v44 = objc_msgSend((id)objc_opt_self(), sel_fetchOptionsIncludingDueDateDeltaAlerts);
  v127[0] = 0;
  v45 = objc_msgSend(v42, sel_fetchRemindersWithObjectIDs_fetchOptions_error_, v43, v44, v127);

  v46 = v127[0];
  if (v45)
  {
    v47 = sub_1A444AA40(0, (unint64_t *)&qword_1EE71CF80);
    sub_1A4460634();
    v121 = v47;
    v48 = sub_1A4690708();
    v49 = v46;

    v123 = (void *)v48;
    if (v119)
    {
      v50 = 0;
      v51 = v111;
      v99 = (_QWORD *)(v112 + 16);
      v101 = v111 + 32;
      v52 = v48 & 0xFFFFFFFFFFFFFF8;
      if (v48 < 0)
        v52 = v48;
      v122 = v52;
      v120 = MEMORY[0x1E0DEE9B0] + 8;
      v54 = v109;
      v53 = v110;
      v100 = v48 & 0xC000000000000001;
      while (1)
      {
        if (v50 >= *(_QWORD *)(v51 + 16))
          __break(1u);
        v108 = (char *)v50;
        v58 = v101 + 48 * v50;
        v59 = *(void **)v58;
        v60 = *(void ***)(v58 + 8);
        v61 = *(_QWORD *)(v58 + 16);
        v62 = *(_QWORD *)(v58 + 24);
        v63 = *(void **)(v58 + 32);
        v113 = *(id *)(v58 + 40);
        v105 = v63;
        v106 = v62;
        v103 = v60;
        v104 = v61;
        v107 = v59;
        if (v59)
        {
          v64 = swift_allocObject();
          *(_QWORD *)(v64 + 16) = MEMORY[0x1E0DEE9D8];
          v117 = (void **)(v64 + 16);
          v125 = v60;
          v126 = v61;
          v65 = (_QWORD *)swift_allocObject();
          v65[2] = v64;
          v65[3] = v54;
          v65[4] = v53;
          sub_1A454A5D8((uint64_t)v59);
          sub_1A4466118();
          v66 = v113;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1A469120C();
          swift_release();
          v67 = v117;
          swift_beginAccess();
          v125 = (void **)*v67;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
          sub_1A4469630();
          v68 = sub_1A4690828();
          v70 = v69;
          swift_release();
          swift_bridgeObjectRelease();
          v71 = (_QWORD **)v99;
          swift_beginAccess();
          v72 = *v71;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v71 = v72;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v72 = sub_1A4438920(0, v72[2] + 1, 1, v72);
            *v99 = v72;
          }
          v74 = v100;
          v76 = v72[2];
          v75 = v72[3];
          v56 = v107;
          if (v76 >= v75 >> 1)
          {
            v72 = sub_1A4438920((_QWORD *)(v75 > 1), v76 + 1, 1, v72);
            *v99 = v72;
          }
          v72[2] = v76 + 1;
          v77 = &v72[2 * v76];
          v77[4] = v68;
          v77[5] = v70;
          swift_endAccess();
          v54 = v109;
          v53 = v110;
          v125 = v109;
          v126 = v110;
          swift_bridgeObjectRetain();
          sub_1A4690984();
          v78 = v126;
          v117 = v125;
          v79 = v66;
        }
        else
        {
          sub_1A454A5D8(0);
          v79 = v113;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v117 = v54;
          v78 = v53;
          v56 = 0;
          v74 = v100;
        }
        v80 = v79[2];
        v55 = v108;
        if (v80)
          break;
        swift_bridgeObjectRelease();
LABEL_19:
        v50 = (unint64_t)(v55 + 1);
        sub_1A454A610(v56);
        swift_bridgeObjectRelease();
        v57 = (uint64_t)v102;
        v51 = v111;
        if ((void *)v50 == v119)
          goto LABEL_47;
      }
      swift_bridgeObjectRetain();
      v81 = v79 + 7;
      v82 = v78;
      while (1)
      {
        v83 = (void *)*(v81 - 3);
        if (v74)
        {
          swift_bridgeObjectRetain();
          v84 = v83;
          v85 = sub_1A4691614();
          if (!v85)
          {

LABEL_31:
            swift_bridgeObjectRelease();

            goto LABEL_32;
          }
          v124 = v85;
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v86 = v125;
          swift_unknownObjectRelease();
        }
        else
        {
          v87 = *((_QWORD *)v123 + 2);
          swift_bridgeObjectRetain();
          v88 = v83;
          if (!v87)
            goto LABEL_31;
          v89 = v88;
          v90 = v123;
          v91 = sub_1A443E750((uint64_t)v89);
          if ((v92 & 1) == 0)
          {

            goto LABEL_31;
          }
          v86 = (void **)*(id *)(v90[7] + 8 * v91);
        }
        v93 = v116;

        if (!v86)
          goto LABEL_31;
        v94 = v118;
        sub_1A4533DC4(v86, v117, v82, v112, v93, v114, v115);
        v118 = v94;
        if (v94)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          sub_1A454A610(v107);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v96 = (uint64_t)v102;
          goto LABEL_48;
        }

        swift_bridgeObjectRelease();
LABEL_32:
        v81 += 4;
        if (!--v80)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v54 = v109;
          v53 = v110;
          v56 = v107;
          v55 = v108;
          goto LABEL_19;
        }
      }
    }
    v57 = (uint64_t)v102;
LABEL_47:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v96 = v57;
LABEL_48:
    sub_1A4497F2C(v96, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  }
  else
  {
    v95 = v127[0];
    swift_bridgeObjectRelease();
    sub_1A468FE68();

    swift_willThrow();
    sub_1A4497F2C((uint64_t)v102, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  }
}

Swift::String __swiftcall REMTestStorePopulator.dumpPinnedLists(skipsPredefinedSmartList:)(Swift::Bool skipsPredefinedSmartList)
{
  unint64_t v1;
  id v2;
  __int128 v3;
  void *v4;
  unint64_t v5;
  id v6;
  uint64_t v7;
  _BYTE *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  Swift::String result;
  _QWORD v42[4];
  uint64_t v43;
  int v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _OWORD v60[11];
  _OWORD v61[9];
  __int128 v62;
  __int128 v63;

  LODWORD(v1) = skipsPredefinedSmartList;
  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMAccountsListDataView.Invocation()), sel_initWithFetchResultTokenToDiffAgainst_, 0);
  sub_1A447A848((uint64_t)v2, 0x10000000000uLL, (uint64_t)v61);
  v46 = 0;

  v57 = v61[8];
  v58 = v62;
  v59 = v63;
  v53 = v61[4];
  v54 = v61[5];
  v55 = v61[6];
  v56 = v61[7];
  v49 = v61[0];
  v50 = v61[1];
  v51 = v61[2];
  v52 = v61[3];
  v3 = v62;
  v4 = (void *)*((_QWORD *)&v63 + 1);
  v5 = v63;
  sub_1A45439A4((uint64_t)&v49);
  v6 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A4543A28((uint64_t)&v49);
  v60[6] = v55;
  v60[7] = v56;
  v60[8] = v57;
  v60[2] = v51;
  v60[3] = v52;
  v60[4] = v53;
  v60[5] = v54;
  v60[0] = v49;
  v60[1] = v50;
  v60[9] = v3;
  v60[10] = __PAIR128__((unint64_t)v4, v5);
  v7 = *(_QWORD *)(*((_QWORD *)&v57 + 1) + 16);
  if (!v7)
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_24;
  }
  v43 = swift_bridgeObjectRetain();
  v8 = (_BYTE *)(v43 + 40);
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v44 = v1;
  do
  {
    v12 = (void *)*((_QWORD *)v8 - 1);
    if (*v8)
    {
      if (*v8 == 1)
      {
        v13 = v12;
        v14 = objc_msgSend(v13, sel_displayName);
      }
      else
      {
        v13 = v12;
        v14 = objc_msgSend(v13, sel_name, v43);
      }
      v27 = v14;
      v28 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v30 = v29;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_1A4438920(0, v9[2] + 1, 1, v9);
      v32 = v9[2];
      v31 = v9[3];
      if (v32 >= v31 >> 1)
        v9 = sub_1A4438920((_QWORD *)(v31 > 1), v32 + 1, 1, v9);
      v9[2] = v32 + 1;
      v10 = &v9[2 * v32];
      v10[4] = v28;
      v11 = v10 + 4;
LABEL_4:
      v11[1] = v30;

      goto LABEL_5;
    }
    if ((v1 & 1) == 0)
    {
      v45 = v9;
      v15 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v17 = v16;
      v47 = 46;
      v48 = 0xE100000000000000;
      MEMORY[0x1E0C80A78](v15);
      v42[2] = &v47;
      v18 = v12;
      swift_bridgeObjectRetain_n();
      v13 = v18;
      v19 = v46;
      v20 = sub_1A44AAF38(0x7FFFFFFFFFFFFFFFLL, 1, sub_1A44CF2DC, (uint64_t)v42, v15, v17);
      v46 = v19;
      swift_bridgeObjectRelease();
      v21 = *(_QWORD *)(v20 + 16);
      if (v21)
      {
        v22 = (uint64_t *)(v20 + 32 * v21);
        v23 = *v22;
        v24 = v22[1];
        v25 = v22[2];
        v26 = v22[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        MEMORY[0x1A859E164](v23, v24, v25, v26);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v47 = 60;
      v48 = 0xE100000000000000;
      sub_1A4690984();
      swift_bridgeObjectRelease();
      sub_1A4690984();
      v33 = v47;
      v30 = v48;
      v9 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_1A4438920(0, v9[2] + 1, 1, v9);
      v1 = v9[2];
      v34 = v9[3];
      if (v1 >= v34 >> 1)
        v9 = sub_1A4438920((_QWORD *)(v34 > 1), v1 + 1, 1, v9);
      v9[2] = v1 + 1;
      v35 = &v9[2 * v1];
      v35[4] = v33;
      v11 = v35 + 4;
      LOBYTE(v1) = v44;
      goto LABEL_4;
    }
LABEL_5:
    v8 += 16;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
LABEL_24:
  v47 = (uint64_t)v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A4469630();
  v36 = sub_1A4690828();
  v38 = v37;
  sub_1A4543A28((uint64_t)v60);
  swift_bridgeObjectRelease();
  v39 = v36;
  v40 = v38;
  result._object = v40;
  result._countAndFlagsBits = v39;
  return result;
}

uint64_t REMTestStorePopulator.dumpTemplates(formatter:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  BOOL v24;
  unint64_t v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  unint64_t v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  id v62;
  uint64_t v63;
  id v65;
  void *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  void *v80;
  _QWORD **v81;
  unint64_t v82;
  id v83;
  _QWORD *v84;
  unsigned __int8 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned __int8 v89;
  void *v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  _OWORD v94[8];
  uint64_t v95;
  _OWORD v96[8];
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  _OWORD v109[10];
  uint64_t v110;
  void *v111;
  _OWORD v112[9];
  __int128 v113;
  __int128 v114;
  uint64_t v115;

  v2 = v1;
  v4 = v112;
  v115 = *MEMORY[0x1E0C80C00];
  v5 = swift_allocObject();
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v5 + 16) = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(v1 + 16);
  v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMAccountsListDataView.Invocation()), sel_initWithFetchResultTokenToDiffAgainst_, 0);
  sub_1A447A848((uint64_t)v8, 0x100000001uLL, (uint64_t)v112);
  v84 = a1;
  v74 = v7;

  v106 = v112[8];
  v107 = v113;
  v108 = v114;
  v102 = v112[4];
  v103 = v112[5];
  v104 = v112[6];
  v105 = v112[7];
  v98 = v112[0];
  v99 = v112[1];
  v100 = v112[2];
  v101 = v112[3];
  v9 = v113;
  v11 = (void *)*((_QWORD *)&v114 + 1);
  v10 = v114;
  sub_1A45439A4((uint64_t)&v98);
  v12 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A4543A28((uint64_t)&v98);
  v109[6] = v104;
  v109[7] = v105;
  v109[8] = v106;
  v109[2] = v100;
  v109[3] = v101;
  v109[4] = v102;
  v109[5] = v103;
  v109[0] = v98;
  v109[1] = v99;
  v109[9] = v9;
  v110 = v10;
  v111 = v11;
  sub_1A45439A4((uint64_t)&v98);
  sub_1A4543A28((uint64_t)v109);
  v13 = v98;
  swift_bridgeObjectRetain();
  sub_1A4543AEC((uint64_t)&v98);
  *(_QWORD *)&v96[0] = v13;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A4542484((uint64_t *)v96, v2);
  swift_bridgeObjectRelease();
  swift_release();
  v14 = *(_QWORD *)&v96[0];
  v15 = *(_QWORD *)(*(_QWORD *)&v96[0] + 16);
  v81 = (_QWORD **)(v5 + 16);
  if (v15)
  {
    *(_QWORD *)&v96[0] = v6;
    sub_1A469153C();
    v16 = 32;
    do
    {
      v17 = *(id *)(v14 + v16);
      sub_1A4691518();
      sub_1A4691548();
      sub_1A4691554();
      sub_1A4691524();
      v16 += 16;
      --v15;
    }
    while (v15);
    v18 = *(_QWORD *)&v96[0];
    swift_release();
    v19 = v18;
  }
  else
  {
    swift_release();
    v19 = MEMORY[0x1E0DEE9D8];
  }
  v75 = v19;
  if (v19 >> 62)
    goto LABEL_49;
  v73 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v73)
  {
LABEL_50:
    swift_release();
    swift_bridgeObjectRelease();
    return 0x6F636361206F6E3CLL;
  }
LABEL_8:
  v20 = 0;
  v21 = v19 & 0xC000000000000001;
  v68 = v19 + 32;
  v69 = v19 & 0xFFFFFFFFFFFFFF8;
  v70 = v19 & 0xC000000000000001;
  while (1)
  {
    if (v21)
    {
      v22 = (id)MEMORY[0x1A859ECE0](v20, v19);
    }
    else
    {
      if (v20 >= *(_QWORD *)(v69 + 16))
        __break(1u);
      v22 = *(id *)(v68 + 8 * v20);
    }
    v23 = v22;
    v24 = __OFADD__(v20, 1);
    v25 = v20 + 1;
    if (v24)
      goto LABEL_47;
    v76 = v25;
    v26 = objc_msgSend(v22, sel_templatesContext);
    if (!v26)
      goto LABEL_41;
    v27 = v26;
    *(_QWORD *)&v96[0] = 0;
    v28 = objc_msgSend(v26, sel_fetchTemplatesWithError_, v96);

    v29 = *(void **)&v96[0];
    if (!v28)
      break;
    sub_1A444AA40(0, &qword_1EE71FFF8);
    v30 = sub_1A4690BA0();
    v31 = v29;

    v32 = v30;
    if (v30 >> 62)
    {
      swift_bridgeObjectRetain();
      v33 = sub_1A46916A4();
      swift_bridgeObjectRelease();
      if (v33)
      {
LABEL_18:
        v34 = 0;
        v79 = v32 & 0xC000000000000001;
        v80 = v23;
        v71 = v32 + 32;
        v72 = v32 & 0xFFFFFFFFFFFFFF8;
        v77 = v33;
        v78 = v32;
        while (1)
        {
          if (v79)
          {
            v35 = (id)MEMORY[0x1A859ECE0](v34, v32);
            v24 = __OFADD__(v34, 1);
            v36 = v34 + 1;
            if (v24)
              goto LABEL_46;
          }
          else
          {
            if (v34 >= *(_QWORD *)(v72 + 16))
              goto LABEL_48;
            v35 = *(id *)(v71 + 8 * v34);
            v24 = __OFADD__(v34, 1);
            v36 = v34 + 1;
            if (v24)
            {
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              swift_bridgeObjectRetain();
              v67 = sub_1A46916A4();
              swift_bridgeObjectRelease();
              v19 = v75;
              v73 = v67;
              if (!v67)
                goto LABEL_50;
              goto LABEL_8;
            }
          }
          v82 = v36;
          v83 = v35;
          v4 = (_QWORD *)v5;
          v86 = 0;
          v87 = 0xE000000000000000;
          v37 = objc_msgSend(v35, sel_name);
          v38 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          v40 = v39;

          v41 = swift_allocObject();
          *(_QWORD *)(v41 + 16) = MEMORY[0x1E0DEE9D8];
          *(_QWORD *)&v96[0] = v38;
          *((_QWORD *)&v96[0] + 1) = v40;
          v42 = (_QWORD *)swift_allocObject();
          v42[2] = v41;
          v42[3] = 0;
          v42[4] = 0xE000000000000000;
          sub_1A4466118();
          swift_retain();
          sub_1A469120C();
          swift_release();
          swift_beginAccess();
          *(_QWORD *)&v96[0] = *(_QWORD *)(v41 + 16);
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
          sub_1A4469630();
          v43 = sub_1A4690828();
          v45 = v44;
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_beginAccess();
          v46 = *v81;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v46 = sub_1A4438920(0, v46[2] + 1, 1, v46);
          v48 = v46[2];
          v47 = v46[3];
          if (v48 >= v47 >> 1)
            v46 = sub_1A4438920((_QWORD *)(v47 > 1), v48 + 1, 1, v46);
          v46[2] = v48 + 1;
          v49 = &v46[2 * v48];
          v49[4] = v43;
          v49[5] = v45;
          *v81 = v46;
          swift_endAccess();
          sub_1A4690984();
          v50 = objc_msgSend(v83, sel_sectionContext);

          if (v50)
          {
            sub_1A45378A4(v83, v86, v87, v2, v5, 538976288, 0xE400000000000000, v84);
            v51 = v80;
            v34 = v82;
            swift_bridgeObjectRelease();

            v32 = v78;
            if (v82 == v77)
              goto LABEL_38;
          }
          else
          {
            v52 = objc_msgSend(v83, sel_objectID);
            v89 = -127;
            v85 = 1;
            static REMRemindersListDataView.fetchListRepresentationOfTemplate(with:store:sortingStyle:fetchSubtasks:fetchManualOrderingID:diffingAgainst:)(v52, v74, &v89, &v85, 0, 0, (uint64_t)v96);
            v51 = v80;

            v94[2] = v96[2];
            v94[3] = v96[3];
            v95 = v97;
            v94[6] = v96[6];
            v94[7] = v96[7];
            v94[4] = v96[4];
            v94[5] = v96[5];
            v94[0] = v96[0];
            v94[1] = v96[1];
            v53 = *((_QWORD *)&v96[0] + 1);
            v54 = *(_QWORD *)(*((_QWORD *)&v96[0] + 1) + 16);
            if (v54)
            {
              v56 = v86;
              v55 = v87;
              swift_bridgeObjectRetain();
              v57 = (_QWORD *)(v53 + 56);
              do
              {
                v59 = *(v57 - 1);
                v60 = *v57;
                v61 = *((_BYTE *)v57 - 16);
                v90 = (void *)*(v57 - 3);
                v58 = v90;
                v91 = v61;
                v92 = v59;
                v93 = v60;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v62 = v58;
                sub_1A45374B0((uint64_t *)&v90, v56, v55, v2, (uint64_t)v4, v84, 538976288, 0xE400000000000000);
                v57 += 4;
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                --v54;
              }
              while (v54);

              sub_1A4543BAC((uint64_t)v94);
              v5 = (uint64_t)v4;
              v51 = v80;
            }
            else
            {
              swift_bridgeObjectRetain();

              sub_1A4543BAC((uint64_t)v94);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v32 = v78;
            v34 = v82;
            if (v82 == v77)
            {
LABEL_38:

              swift_bridgeObjectRelease();
              v4 = v112;
              goto LABEL_42;
            }
          }
        }
      }
    }
    else
    {
      v33 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v33)
        goto LABEL_18;
    }
    swift_bridgeObjectRelease();
LABEL_41:

LABEL_42:
    v19 = v75;
    v20 = v76;
    v21 = v70;
    if (v76 == v73)
    {
      swift_bridgeObjectRelease();
      swift_beginAccess();
      *(_QWORD *)&v94[0] = *(_QWORD *)(v5 + 16);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
      sub_1A4469630();
      v63 = sub_1A4690828();
      swift_release();
      swift_bridgeObjectRelease();
      return v63;
    }
  }
  v65 = *(id *)&v96[0];
  swift_bridgeObjectRelease();
  v66 = (void *)sub_1A468FE68();

  swift_willThrow();
  swift_release();

  *v4 = 0x203A726F727245;
  v4[1] = 0xE700000000000000;
  swift_getErrorValue();
  Error.rem_errorDescription.getter(v88);
  sub_1A4690984();
  swift_bridgeObjectRelease();

  return *v4;
}

void sub_1A45374B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(id, uint64_t, uint64_t);
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  id v41;
  id v42;
  uint64_t v43;
  _QWORD **v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v9 = v8;
  v55 = *MEMORY[0x1E0C80C00];
  v14 = *a1;
  v45 = a1[3];
  v15 = *(void **)(a4 + 16);
  v16 = objc_msgSend((id)objc_opt_self(), sel_fetchOptionsIncludingDueDateDeltaAlerts);
  v51 = 0;
  v17 = objc_msgSend(v15, sel_fetchReminderWithObjectID_fetchOptions_error_, v14, v16, &v51);

  v18 = v51;
  if (v17)
  {
    v46 = a5;
    v47 = a6;
    v44 = (_QWORD **)(a5 + 16);
    v19 = a6[3];
    v20 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v19);
    v21 = *(uint64_t (**)(id, uint64_t, uint64_t))(v20 + 40);
    v22 = v18;
    v23 = (void *)v21(v17, v19, v20);
    v25 = v24;
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = MEMORY[0x1E0DEE9D8];
    v51 = v23;
    v52 = v25;
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = v26;
    v27[3] = a2;
    v27[4] = a3;
    sub_1A4466118();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1A469120C();
    swift_release();
    swift_beginAccess();
    v51 = *(id *)(v26 + 16);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    sub_1A4469630();
    v28 = sub_1A4690828();
    v43 = v29;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v30 = *v44;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v44 = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v30 = sub_1A4438920(0, v30[2] + 1, 1, v30);
      *v44 = v30;
    }
    v33 = v30[2];
    v32 = v30[3];
    if (v33 >= v32 >> 1)
    {
      v30 = sub_1A4438920((_QWORD *)(v32 > 1), v33 + 1, 1, v30);
      *v44 = v30;
    }
    v30[2] = v33 + 1;
    v34 = &v30[2 * v33];
    v34[4] = v28;
    v34[5] = v43;
    swift_endAccess();
    if (v45 && (v35 = *(_QWORD *)(v45 + 16)) != 0)
    {
      v36 = (_QWORD *)(swift_bridgeObjectRetain() + 56);
      while (1)
      {
        v38 = *(v36 - 1);
        v39 = *v36;
        v40 = *((_BYTE *)v36 - 16);
        v51 = (id)*(v36 - 3);
        v37 = v51;
        LOBYTE(v52) = v40;
        v53 = v38;
        v54 = v39;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v41 = v37;
        sub_1A4690984();
        sub_1A45374B0(&v51, a2, a3, a4, v46, v47, a7, a8);
        if (v9)
          break;
        v36 += 4;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        if (!--v35)
        {

          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
LABEL_15:
      swift_bridgeObjectRelease();
    }
    else
    {

    }
  }
  else
  {
    v42 = v51;
    sub_1A468FE68();

    swift_willThrow();
  }
}

void sub_1A45378A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  uint64_t v8;
  uint64_t v14;
  id v15;
  uint64_t v16;
  __int128 v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  id v44;
  _QWORD **v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD v61[8];
  uint64_t v62;
  __int16 v63;
  char v64;
  _OWORD v65[3];
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;

  v72 = a7;
  v14 = *(_QWORD *)(a4 + 16);
  v15 = objc_msgSend(a1, sel_objectID);
  v63 = 385;
  v64 = 0;
  static REMRemindersListDataView.fetchListRepresentationOfTemplate_Sections(store:templateObjectID:configuration:diffingAgainst:)(v14, v15, (unsigned __int8 *)&v63, 0, (uint64_t)v65);
  if (v8)
  {

    return;
  }
  v52 = a2;
  v53 = a4;
  v54 = a5;
  v55 = a6;

  v61[2] = v65[2];
  v61[3] = v66;
  v61[4] = v67;
  v61[5] = v68;
  v61[6] = v69;
  v61[7] = v70;
  v62 = v71;
  v61[0] = v65[0];
  v61[1] = v65[1];
  v16 = *(_QWORD *)&v65[0];
  v17 = v66;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = (id)v17;
  sub_1A44962FC(*((void **)&v17 + 1));
  sub_1A454A698((uint64_t)v61);

  sub_1A4496404(*((void **)&v17 + 1));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = v16;
  v46 = *(_QWORD *)(v16 + 16);
  if (!v46)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return;
  }
  v20 = 0;
  v45 = (_QWORD **)(a5 + 16);
  v48 = v16 + 32;
  v49 = v16;
  v21 = a2;
  while (v20 < *(_QWORD *)(v19 + 16))
  {
    v22 = (uint64_t *)(v48 + 48 * v20);
    v24 = *v22;
    v23 = v22[1];
    v25 = v22[2];
    v26 = v22[5];
    v51 = (void *)*v22;
    v50 = v20;
    if (*v22)
    {
      v47 = swift_allocObject();
      *(_QWORD *)(v47 + 16) = MEMORY[0x1E0DEE9D8];
      v57 = (void *)v23;
      v58 = v25;
      v27 = (_QWORD *)swift_allocObject();
      v27[2] = v47;
      v27[3] = v52;
      v27[4] = a3;
      sub_1A454A5D8(v24);
      sub_1A4466118();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1A469120C();
      swift_release();
      swift_beginAccess();
      v57 = *(void **)(v47 + 16);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
      sub_1A4469630();
      v28 = sub_1A4690828();
      v30 = v29;
      swift_release();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v31 = *v45;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v45 = v31;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v31 = sub_1A4438920(0, v31[2] + 1, 1, v31);
        *v45 = v31;
      }
      v34 = v31[2];
      v33 = v31[3];
      if (v34 >= v33 >> 1)
      {
        v31 = sub_1A4438920((_QWORD *)(v33 > 1), v34 + 1, 1, v31);
        *v45 = v31;
      }
      v31[2] = v34 + 1;
      v35 = &v31[2 * v34];
      v35[4] = v28;
      v35[5] = v30;
      swift_endAccess();
      v21 = v52;
      v57 = (void *)v52;
      v58 = a3;
      swift_bridgeObjectRetain();
      sub_1A4690984();
      v37 = (uint64_t)v57;
      v36 = v58;
      v38 = *(_QWORD *)(v26 + 16);
      if (v38)
      {
LABEL_12:
        swift_bridgeObjectRetain();
        v39 = (_QWORD *)(v26 + 56);
        do
        {
          v41 = *(v39 - 1);
          v42 = *v39;
          v43 = *((_BYTE *)v39 - 16);
          v57 = (void *)*(v39 - 3);
          v40 = v57;
          LOBYTE(v58) = v43;
          v59 = v41;
          v60 = v42;
          swift_bridgeObjectRetain();
          v44 = v40;
          sub_1A45374B0((uint64_t *)&v57, v37, v36, v53, v54, a8, v55, v72);
          v39 += 4;
          swift_bridgeObjectRelease();

          --v38;
        }
        while (v38);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v21 = v52;
        goto LABEL_17;
      }
    }
    else
    {
      sub_1A454A5D8(0);
      swift_bridgeObjectRetain();
      v36 = a3;
      swift_bridgeObjectRetain();
      v37 = v21;
      v38 = *(_QWORD *)(v26 + 16);
      if (v38)
        goto LABEL_12;
    }
    swift_bridgeObjectRelease();
LABEL_17:
    v20 = v50 + 1;
    sub_1A454A610(v51);
    swift_bridgeObjectRelease();
    v19 = v49;
    if (v50 + 1 == v46)
      goto LABEL_18;
  }
  __break(1u);
}

uint64_t sub_1A4537DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_1A46900B4();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_1EE71FFD8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE71FFD8);
  sub_1A46900A8();
  sub_1A4690024();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

void sub_1A4537E74(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, id *a6, _QWORD *a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  void *v36;
  id v37;
  uint64_t *v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  void *v51;
  void *v52;
  id v53;
  void *v54;
  uint64_t v55;
  int v56;
  id v57;
  id v58;
  unsigned int v59;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  _QWORD *v65;
  id v66;
  uint64_t *v67;
  void *v68;
  void *v69;
  uint64_t v70;
  char *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  BOOL v80;
  char *v81;
  char *v82;
  id v83;
  void *v84;
  id v85;
  void *v86;
  id v87;
  void *v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t *v101;
  char v102;
  void *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  id v111;
  uint64_t v112;
  void *v113;
  id v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  uint64_t (*v123)(uint64_t);
  uint64_t v124;
  _QWORD *v125;
  _QWORD v126[2];
  char *v127;
  uint64_t v128;
  unsigned int v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  int v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  id *v149;
  _QWORD *v150;
  uint64_t v151;
  void *v152;
  char *v153;
  uint64_t v154;
  id v155;
  id v156;
  unint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  unint64_t v160;
  id v161;

  v150 = a7;
  v149 = a6;
  v136 = a5;
  v128 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v10);
  v133 = (char *)v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v12);
  v135 = (uint64_t)v126 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = type metadata accessor for REMTestStorePopulator.TestListSection(0);
  MEMORY[0x1E0C80A78](v141);
  v139 = (_QWORD *)((char *)v126 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for REMTestStorePopulator.TestReminder(0);
  v132 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v158 = (_QWORD *)((char *)v126 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v16);
  v145 = (_QWORD *)((char *)v126 - v18);
  v144 = type metadata accessor for REMTestStorePopulator.TestList.ListChild(0);
  v146 = *(_QWORD *)(v144 - 8);
  MEMORY[0x1E0C80A78](v144);
  v148 = (char *)v126 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1A46900B4();
  v142 = *(_QWORD *)(v20 - 8);
  v143 = v20;
  v21 = MEMORY[0x1E0C80A78](v20);
  v137 = (uint64_t)v126 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v131 = (char *)v126 - v24;
  MEMORY[0x1E0C80A78](v23);
  v127 = (char *)v126 - v25;
  v27 = *(_QWORD *)a2;
  v26 = *(_QWORD *)(a2 + 8);
  v28 = *(char **)(a2 + 16);
  v29 = *(_QWORD *)(a2 + 24);
  v30 = *(_QWORD *)(a2 + 40);
  v31 = *(_QWORD *)(a2 + 56);
  v156 = *(id *)(a2 + 48);
  v32 = *(_QWORD *)(a2 + 64);
  v153 = v28;
  v154 = v32;
  LODWORD(v157) = *(unsigned __int8 *)(a2 + 72);
  v147 = *(_QWORD *)(a2 + 80);
  v140 = *(_QWORD *)(a2 + 88);
  v134 = *(unsigned __int8 *)(a2 + 96);
  v129 = *(unsigned __int8 *)(a2 + 97);
  v126[1] = *(_QWORD *)(a2 + 104);
  v130 = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  v155 = a1;
  v33 = objc_msgSend(a1, sel_objectID);
  if (v33)
  {
    v34 = (uint64_t)v33;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v159 = *a4;
    *a4 = 0x8000000000000000;
    sub_1A445E974(v34, v27, v26, isUniquelyReferenced_nonNull_native);
    *a4 = v159;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v36 = (void *)sub_1A445DC80(v27, v26);
    swift_bridgeObjectRelease();

  }
  v37 = v155;
  v38 = v145;
  if (v30)
  {
    v39 = objc_allocWithZone(MEMORY[0x1E0D844B8]);
    swift_bridgeObjectRetain();
    v40 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v41 = objc_msgSend(v39, sel_initWithCKSymbolicColorName_hexString_, v40, 0);
    v42 = v138;
  }
  else
  {
    v42 = v138;
    if (!v29)
      goto LABEL_9;
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v43 = objc_allocWithZone(MEMORY[0x1E0D844B8]);
    swift_bridgeObjectRetain();
    v44 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v40 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v41 = objc_msgSend(v43, sel_initWithCKSymbolicColorName_hexString_, v44, v40);

    v38 = v145;
    v37 = v155;
  }

  objc_msgSend(v37, sel_setColor_, v41);
LABEL_9:
  if (v31)
    objc_msgSend(v37, sel_setSortingStyle_, v31);
  v45 = objc_msgSend(v37, sel_appearanceContext);
  objc_msgSend(v45, sel_setBadge_, v156);

  v46 = (uint64_t)v148;
  if ((v157 & 1) == 0)
    objc_msgSend(v37, sel_setSharingStatus_, v154);
  v47 = *(char **)(v140 + 16);
  if (v47)
  {
    v48 = swift_bridgeObjectRetain() + 48;
    do
    {
      v153 = v47;
      v54 = *(void **)(v48 - 8);
      v55 = *(_QWORD *)(v48 + 16);
      v56 = *(unsigned __int8 *)(v48 + 32);
      v154 = *(_QWORD *)(v48 + 40);
      v156 = v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      LODWORD(v157) = v56;
      sub_1A44D88E0();
      v57 = v155;
      v58 = objc_msgSend(v155, sel_accountCapabilities);
      v59 = objc_msgSend(v58, sel_supportsListSharees);

      if (!v59
        || (v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84570]), sel_initWithListChangeItem_, v57)) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A44D88F8();
        sub_1A454A7A8();
        swift_allocError();
        *v65 = 4;
        swift_willThrow();
        return;
      }
      v61 = v60;
      v62 = sub_1A469087C();
      v63 = sub_1A469087C();
      v151 = v55;
      v152 = (void *)v63;
      v64 = (void *)v62;
      if ((v157 & 1) != 0)
      {
        v159 = 0x3A6F746C69616DLL;
        v49 = 0xE700000000000000;
      }
      else
      {
        v159 = 980182388;
        v49 = 0xE400000000000000;
      }
      v160 = v49;
      sub_1A4690984();
      v50 = v153;
      v51 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      v52 = v152;
      v53 = objc_msgSend(v61, sel_addShareeWithDisplayName_firstName_lastName_address_status_accessLevel_, 0, v62, v152, v51, v154, 2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1A44D88F8();
      v48 += 64;
      v47 = v50 - 1;
    }
    while (v47);
    swift_bridgeObjectRelease();
    v42 = v138;
    v37 = v155;
    v38 = v145;
    v46 = (uint64_t)v148;
  }
  v66 = objc_msgSend(v37, sel_groceryContextChangeItem);
  v67 = v139;
  if (v66)
  {
    v68 = v66;
    objc_msgSend(v66, sel_setShouldCategorizeGroceryItems_, v129);
    if (v130)
      v69 = (void *)sub_1A469087C();
    else
      v69 = 0;
    objc_msgSend(v68, sel_setGroceryLocaleID_, v69);

  }
  if (!v134)
    goto LABEL_31;
  if (qword_1EE71C100 != -1)
    goto LABEL_67;
  while (1)
  {
    v70 = v143;
    __swift_project_value_buffer(v143, (uint64_t)qword_1EE71FFD8);
    v71 = v127;
    sub_1A4690024();
    v72 = (void *)sub_1A4690030();
    (*(void (**)(char *, uint64_t))(v142 + 8))(v71, v70);
    objc_msgSend(v37, sel_setPinnedDate_, v72);

LABEL_31:
    v73 = v147;
    v74 = *(_QWORD *)(v147 + 16);
    if (!v74)
      break;
    v154 = v147 + ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80));
    swift_bridgeObjectRetain();
    v75 = 0;
    v151 = v74;
    while (v75 < *(_QWORD *)(v73 + 16))
    {
      sub_1A4497EE8(v154 + *(_QWORD *)(v146 + 72) * v75, v46, type metadata accessor for REMTestStorePopulator.TestList.ListChild);
      v80 = swift_getEnumCaseMultiPayload() == 1;
      v157 = v75;
      if (v80)
      {
        sub_1A44683E0(v46, (uint64_t)v67, type metadata accessor for REMTestStorePopulator.TestListSection);
        v81 = (char *)objc_msgSend(v37, sel_sectionsContextChangeItem);
        if (!v81)
        {
          swift_bridgeObjectRelease();
          sub_1A454A7A8();
          swift_allocError();
          *v125 = 19;
          swift_willThrow();
          sub_1A4497F2C((uint64_t)v67, type metadata accessor for REMTestStorePopulator.TestListSection);
          return;
        }
        v82 = v81;
        v83 = objc_msgSend(v37, sel_saveRequest);
        swift_bridgeObjectRetain();
        v84 = (void *)sub_1A469087C();
        swift_bridgeObjectRelease();
        v153 = v82;
        v85 = objc_msgSend(v83, sel_addListSectionWithDisplayName_toListSectionContextChangeItem_, v84, v82);

        if (v67[3])
        {
          swift_bridgeObjectRetain();
          v86 = (void *)sub_1A469087C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v86 = 0;
        }
        v91 = v142;
        v90 = v143;
        v92 = MEMORY[0x1E0DEE9E8];
        objc_msgSend(v85, sel_setCanonicalName_, v86);

        v93 = v135;
        sub_1A444ABF4((uint64_t)v67 + *(int *)(v141 + 24), v135, &qword_1ED243190);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v93, 1, v90) == 1)
        {
          sub_1A445404C(v93, &qword_1ED243190);
        }
        else
        {
          v94 = v131;
          (*(void (**)(char *, uint64_t, uint64_t))(v91 + 32))(v131, v93, v90);
          v95 = v85;
          v96 = (void *)sub_1A4690030();
          objc_msgSend(v95, sel_setCreationDate_, v96);

          (*(void (**)(char *, uint64_t))(v91 + 8))(v94, v90);
        }
        v98 = *v67;
        v97 = v67[1];
        swift_bridgeObjectRetain();
        v99 = objc_msgSend(v85, sel_objectID);
        v156 = v85;
        if (v99)
        {
          v100 = (uint64_t)v99;
          v101 = v136;
          v102 = swift_isUniquelyReferenced_nonNull_native();
          v159 = *v101;
          *v101 = 0x8000000000000000;
          sub_1A445E974(v100, v98, v97, v102);
          *v101 = v159;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          v103 = (void *)sub_1A445DC80(v98, v97);
          swift_bridgeObjectRelease();

        }
        v159 = v92;
        v104 = *(_QWORD **)((char *)v67 + *(int *)(v141 + 28));
        v105 = v104[2];
        v106 = v158;
        if (v105)
        {
          v107 = v132;
          v108 = (uint64_t)v104
               + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
          v152 = v104;
          swift_bridgeObjectRetain();
          v109 = *(_QWORD *)(v107 + 72);
          while (1)
          {
            sub_1A4497EE8(v108, (uint64_t)v106, type metadata accessor for REMTestStorePopulator.TestReminder);
            v110 = v155;
            v111 = objc_msgSend(v155, sel_saveRequest);
            swift_bridgeObjectRetain();
            v112 = v42;
            v113 = (void *)sub_1A469087C();
            swift_bridgeObjectRelease();
            v114 = v110;
            v106 = v158;
            v115 = objc_msgSend(v111, sel_addReminderWithTitle_toListChangeItem_, v113, v114);

            sub_1A453949C(v115, v106, v149, v150);
            v42 = v112;
            if (v112)
              break;
            sub_1A4466E84(&v161, objc_msgSend(v115, sel_objectID));

            sub_1A4497F2C((uint64_t)v106, type metadata accessor for REMTestStorePopulator.TestReminder);
            v108 += v109;
            if (!--v105)
            {
              swift_bridgeObjectRelease();
              v116 = v159;
              v117 = v142;
              v92 = MEMORY[0x1E0DEE9E8];
              goto LABEL_57;
            }
          }

          sub_1A4497F2C((uint64_t)v106, type metadata accessor for REMTestStorePopulator.TestReminder);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v123 = type metadata accessor for REMTestStorePopulator.TestListSection;
          v124 = (uint64_t)v139;
          goto LABEL_60;
        }
        v116 = v92;
        v117 = v142;
LABEL_57:
        v118 = objc_msgSend(v156, sel_objectID);
        sub_1A4690090();
        sub_1A44A300C(v92, v116);
        v120 = v119;
        v67 = v139;
        if (v118)
        {
          v121 = objc_msgSend(v118, sel_uuid);
          v77 = (uint64_t)v133;
          sub_1A46900F0();

          v122 = sub_1A46900FC();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(v77, 0, 1, v122);
        }
        else
        {
          v76 = sub_1A46900FC();
          v77 = (uint64_t)v133;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v133, 1, 1, v76);
        }
        v78 = v137;
        v79 = v153;
        sub_1A452F55C(v120, v77, v137);
        swift_bridgeObjectRelease();
        sub_1A445404C(v77, &qword_1ED243170);

        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v78, v143);
        sub_1A4497F2C((uint64_t)v67, type metadata accessor for REMTestStorePopulator.TestListSection);
        v37 = v155;
        v38 = v145;
        v74 = v151;
      }
      else
      {
        sub_1A44683E0(v46, (uint64_t)v38, type metadata accessor for REMTestStorePopulator.TestReminder);
        v87 = objc_msgSend(v37, sel_saveRequest);
        swift_bridgeObjectRetain();
        v88 = (void *)sub_1A469087C();
        swift_bridgeObjectRelease();
        v89 = objc_msgSend(v87, sel_addReminderWithTitle_toListChangeItem_, v88, v37);

        sub_1A453949C(v89, v38, v149, v150);
        if (v42)
        {

          v123 = type metadata accessor for REMTestStorePopulator.TestReminder;
          v124 = (uint64_t)v38;
LABEL_60:
          sub_1A4497F2C(v124, v123);
LABEL_61:
          swift_bridgeObjectRelease();
          return;
        }
        sub_1A4497F2C((uint64_t)v38, type metadata accessor for REMTestStorePopulator.TestReminder);

      }
      v75 = v157 + 1;
      v73 = v147;
      v46 = (uint64_t)v148;
      if (v157 + 1 == v74)
        goto LABEL_61;
    }
    __break(1u);
LABEL_67:
    swift_once();
  }
}

void sub_1A4538DC0(id a1@<X1>, uint64_t *a2@<X0>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  id v4;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void **v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  unsigned __int8 v37;
  unsigned __int8 v38;
  _OWORD v39[8];
  uint64_t v40;
  _OWORD v41[8];
  uint64_t v42;
  uint64_t v43;

  v4 = a1;
  v43 = *MEMORY[0x1E0C80C00];
  v6 = *a2;
  *(_QWORD *)&v41[0] = 0;
  v7 = objc_msgSend(a1, sel_fetchTemplateWithObjectID_error_, v6, v41);
  if (v7)
  {
    v8 = v7;
    v9 = *(id *)&v41[0];
    v10 = objc_msgSend(v8, sel_objectID);
    v38 = -127;
    v37 = 1;
    static REMRemindersListDataView.fetchListRepresentationOfTemplate(with:store:sortingStyle:fetchSubtasks:fetchManualOrderingID:diffingAgainst:)(v10, (uint64_t)v4, &v38, &v37, 0, 0, (uint64_t)v41);
    if (v3)
    {

    }
    else
    {

      v39[7] = v41[7];
      v40 = v42;
      v39[0] = v41[0];
      v39[1] = v41[1];
      v39[2] = v41[2];
      v39[3] = v41[3];
      v39[5] = v41[5];
      v39[6] = v41[6];
      v39[4] = v41[4];
      v14 = *(void **)&v41[0];
      v15 = MEMORY[0x1E0DEE9E8];
      v36 = MEMORY[0x1E0DEE9E8];
      v16 = *(_QWORD *)(*((_QWORD *)&v41[0] + 1) + 16);
      if (v16)
      {
        v31 = *(void **)&v39[0];
        v32 = v4;
        v33 = v8;
        v34 = a3;
        v17 = *((_QWORD *)&v39[0] + 1) + 32;
        swift_bridgeObjectRetain_n();
        for (i = 0; i != v16; ++i)
        {
          v19 = v17 + 32 * i;
          v20 = *(void **)v19;
          v21 = *(_QWORD *)(v19 + 24);
          swift_bridgeObjectRetain();
          v22 = v20;
          sub_1A4466E84(&v35, v22);

          if (v21)
            v23 = v21;
          else
            v23 = MEMORY[0x1E0DEE9D8];
          v24 = *(_QWORD *)(v23 + 16);
          if (v24)
          {
            v25 = (void **)(v23 + 32);
            swift_bridgeObjectRetain();
            do
            {
              v26 = *v25;
              v25 += 4;
              sub_1A4466E84(&v35, v26);

              --v24;
            }
            while (v24);
            swift_bridgeObjectRelease();
          }

          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease_n();
        v15 = v36;
        a3 = v34;
        v4 = v32;
        v8 = v33;
        v14 = v31;
      }
      v27 = v4;
      sub_1A4540F64(MEMORY[0x1E0DEE9E0], v15, v27);
      v29 = v28;
      swift_bridgeObjectRelease();

      v30 = v14;
      sub_1A4543BAC((uint64_t)v39);
      *a3 = v8;
      a3[1] = v30;
      a3[2] = v29;
    }
  }
  else
  {
    v11 = *(id *)&v41[0];
    v12 = (void *)sub_1A468FE68();

    swift_willThrow();
    sub_1A454A7A8();
    swift_allocError();
    *v13 = 10;
    swift_willThrow();
  }
}

void sub_1A45390CC(id *a1, uint64_t *a2, void *a3)
{
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char isUniquelyReferenced_nonNull_native;
  id v16;
  _QWORD *v17;
  id v18[2];

  v18[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *a2;
  v6 = objc_msgSend((id)objc_opt_self(), sel_fetchOptionsIncludingDueDateDeltaAlerts);
  v18[0] = 0;
  v7 = objc_msgSend(a3, sel_fetchReminderWithObjectID_fetchOptions_error_, v5, v6, v18);

  if (v7)
  {
    v8 = v18[0];
    v9 = objc_msgSend(v7, sel_titleAsString);
    if (v9)
    {
      v10 = v9;
      v11 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v13 = v12;

      v14 = v7;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v18[0] = *a1;
      *a1 = (id)0x8000000000000000;
      sub_1A445EABC((uint64_t)v14, v11, v13, isUniquelyReferenced_nonNull_native);
      *a1 = v18[0];

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A454A7A8();
      swift_allocError();
      *v17 = 18;
      swift_willThrow();

    }
  }
  else
  {
    v16 = v18[0];
    sub_1A468FE68();

    swift_willThrow();
  }
}

void sub_1A4539280(_QWORD *a1, uint64_t *a2, id a3)
{
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  unint64_t v14;
  id v15;
  id v16;
  void *v17;
  _QWORD *v18;
  id v19;
  void *v20;
  _QWORD *v21;
  id v22[2];

  v22[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *a2;
  v22[0] = 0;
  v6 = objc_msgSend(a3, sel_fetchTemplateWithObjectID_error_, v5, v22);
  if (v6)
  {
    v7 = v6;
    v8 = v22[0];
    v9 = objc_msgSend(v7, sel_sectionContext);
    if (v9)
    {
      v10 = v9;
      v22[0] = 0;
      v11 = objc_msgSend(a3, sel_fetchTemplateSectionsForTemplateSectionContext_error_, v9, v22);
      v12 = v22[0];
      if (v11)
      {
        v13 = v11;
        sub_1A444AA40(0, &qword_1EE720700);
        v14 = sub_1A4690BA0();
        v15 = v12;

        sub_1A452F298(v14, a1);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return;
      }
      v19 = v22[0];
      v20 = (void *)sub_1A468FE68();

      swift_willThrow();
    }
    sub_1A454A7A8();
    swift_allocError();
    *v21 = 11;
    swift_willThrow();

  }
  else
  {
    v16 = v22[0];
    v17 = (void *)sub_1A468FE68();

    swift_willThrow();
    sub_1A454A7A8();
    swift_allocError();
    *v18 = 10;
    swift_willThrow();
  }
}

void sub_1A453949C(id a1, uint64_t *a2, id *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  int *v40;
  uint64_t v41;
  int v42;
  _QWORD *v43;
  int v44;
  void *v45;
  char **v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t);
  char *v51;
  void *v52;
  uint64_t v53;
  int *v54;
  unsigned int v55;
  uint64_t v56;
  int *v57;
  _QWORD *v58;
  char *v59;
  void *v60;
  char *v61;
  _BYTE *v62;
  id v63;
  void *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  id v70;
  void *v71;
  id v72;
  void *v73;
  id v74;
  unsigned int v75;
  id v76;
  void *v77;
  id v78;
  unint64_t v79;
  uint64_t v80;
  void *v81;
  id v82;
  id v83;
  unsigned int v84;
  id v85;
  void *v86;
  id v87;
  unint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  void *v97;
  uint64_t v98;
  void *v99;
  id v100;
  id v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  void *v106;
  uint64_t v107;
  void *v108;
  id v109;
  id v110;
  id v111;
  uint64_t *v112;
  uint64_t v113;
  _QWORD *v114;
  id v115;
  uint64_t (*v116)(uint64_t);
  uint64_t v117;
  _QWORD *v118;
  id v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  id v130;
  void *v131;
  void *v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  void *v140;
  uint64_t v141;
  void *v142;
  void *v143;
  id v144;
  void *v145;
  id v146;
  id v147;
  id v148;
  id v149;
  void *v150;
  id v151;
  id v152;
  id v153;
  void *v154;
  id v155;
  id v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char *v161;
  void *v162;
  void *v163;
  void *v164;
  void *v165;
  void *v166;
  id v167;
  uint64_t *v168;
  uint64_t v169;
  void *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  id v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  id *v199;
  id v200;
  void *v201;
  uint64_t v202;
  id v203;
  void *v204;
  id v205;
  id v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  void *v213;
  void (*v214)(char *, uint64_t);
  id v215;
  _QWORD *v216;
  _QWORD *v217;
  _QWORD *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  void *v223;
  uint64_t v224;
  uint64_t v225;
  id v226;
  uint64_t v227;
  id *v228;
  char isUniquelyReferenced_nonNull_native;
  void *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  id v234;
  id v235;
  void *v236;
  id v237;
  void *v238;
  id v239;
  uint64_t v240;
  _QWORD *v241;
  char *v242;
  uint64_t v243;
  _QWORD *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t (*v248)(char *, uint64_t, uint64_t);
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  unsigned int (*v255)(uint64_t, uint64_t, uint64_t);
  uint64_t v256;
  id *v257;
  id *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t *v281;
  id v282;
  uint64_t v283;
  uint64_t v284;
  id v285;
  uint64_t v286;

  v258 = a3;
  v286 = *MEMORY[0x1E0C80C00];
  v279 = type metadata accessor for REMTestStorePopulator.TestReminder(0);
  v259 = *(_QWORD *)(v279 - 8);
  MEMORY[0x1E0C80A78](v279);
  v250 = (char *)&v243 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v261 = type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert(0);
  v247 = *(_QWORD *)(v261 - 8);
  MEMORY[0x1E0C80A78](v261);
  v257 = (id *)((char *)&v243 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v271 = type metadata accessor for REMTestStorePopulator.TestReminder.Hashtag(0);
  v263 = *(_QWORD *)(v271 - 8);
  MEMORY[0x1E0C80A78](v271);
  v284 = (uint64_t)&v243 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v270 = type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment(0);
  v272 = *(_QWORD *)(v270 - 8);
  MEMORY[0x1E0C80A78](v270);
  v268 = (uint64_t)&v243 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7206D8);
  MEMORY[0x1E0C80A78](v11);
  v269 = (uint64_t)&v243 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v278 = type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment(0);
  v264 = *(_QWORD *)(v278 - 8);
  MEMORY[0x1E0C80A78](v278);
  v283 = (uint64_t)&v243 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v280 = type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment(0);
  v265 = *(_QWORD *)(v280 - 8);
  MEMORY[0x1E0C80A78](v280);
  v277 = (char *)&v243 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v16 = MEMORY[0x1E0C80A78](v15);
  v256 = (uint64_t)&v243 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v273 = (uint64_t)&v243 - v19;
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v243 - v20;
  v22 = sub_1A46900B4();
  v275 = *(_QWORD *)(v22 - 8);
  v276 = v22;
  v23 = MEMORY[0x1E0C80A78](v22);
  v254 = (char *)&v243 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v267 = (char *)&v243 - v26;
  MEMORY[0x1E0C80A78](v25);
  v266 = (char *)&v243 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
  v29 = MEMORY[0x1E0C80A78](v28);
  v249 = (uint64_t)&v243 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v243 - v31;
  v260 = sub_1A468FDE4();
  v33 = *(_QWORD *)(v260 - 8);
  v34 = MEMORY[0x1E0C80A78](v260);
  v245 = (char *)&v243 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v37 = (char *)&v243 - v36;
  v38 = a2[3];
  v281 = a2;
  if (v38)
  {
    v39 = (void *)sub_1A469087C();
    objc_msgSend(a1, sel_setNotesAsString_, v39);

    a2 = v281;
  }
  v40 = (int *)v279;
  sub_1A444ABF4((uint64_t)a2 + *(int *)(v279 + 24), (uint64_t)v32, &qword_1ED23E4C0);
  v41 = v260;
  v248 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v42 = v248(v32, 1, v260);
  v282 = a1;
  v246 = v33;
  if (v42 == 1)
  {
    sub_1A445404C((uint64_t)v32, &qword_1ED23E4C0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v37, v32, v41);
    v43 = a4;
    v44 = *((unsigned __int8 *)a2 + v40[7]);
    v45 = (void *)sub_1A468FD30();
    v46 = &selRef_setDueDateComponents_;
    v47 = v44 == 0;
    a4 = v43;
    a1 = v282;
    if (v47)
      v46 = &selRef_setDueDateComponentsWithAlarmsIfNeeded_;
    objc_msgSend(v282, *v46, v45);

    a2 = v281;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v37, v41);
  }
  objc_msgSend(a1, sel_setCompleted_, *((unsigned __int8 *)a2 + v40[8]));
  sub_1A444ABF4((uint64_t)a2 + v40[9], (uint64_t)v21, &qword_1ED243190);
  v49 = v275;
  v48 = v276;
  v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v275 + 48);
  if (v50(v21, 1, v276) == 1)
  {
    sub_1A445404C((uint64_t)v21, &qword_1ED243190);
  }
  else
  {
    v51 = v266;
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v266, v21, v48);
    v52 = (void *)sub_1A4690030();
    objc_msgSend(a1, sel_setCompletionDate_, v52);

    a2 = v281;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v51, v48);
  }
  v53 = v273;
  v54 = (int *)v279;
  sub_1A444ABF4((uint64_t)a2 + *(int *)(v279 + 40), v273, &qword_1ED243190);
  v55 = v50((char *)v53, 1, v48);
  v56 = v283;
  v255 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v50;
  if (v55 == 1)
  {
    sub_1A445404C(v53, &qword_1ED243190);
  }
  else
  {
    v57 = v54;
    v58 = a4;
    v59 = v267;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v267, v53, v48);
    v60 = (void *)sub_1A4690030();
    objc_msgSend(a1, sel_setCreationDate_, v60);

    a2 = v281;
    v61 = v59;
    a4 = v58;
    v54 = v57;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v61, v48);
  }
  v62 = v277;
  if (*((_BYTE *)a2 + v54[11]) == 1)
  {
    v63 = objc_msgSend(a1, sel_flaggedContext);
    if (!v63)
    {
      sub_1A454A7A8();
      swift_allocError();
      v113 = 7;
LABEL_145:
      *v112 = v113;
      swift_willThrow();
      return;
    }
    v64 = v63;
    objc_msgSend(v63, sel_setFlagged_, 1);

  }
  if (*(uint64_t *)((char *)a2 + v54[12]))
    objc_msgSend(a1, sel_setPriority_, REMReminderDefaultPriorityForPriorityLevel());
  if (*(uint64_t *)((char *)a2 + v54[13]))
    objc_msgSend(a1, sel_setContactHandles_);
  v65 = (uint64_t *)((char *)a2 + v54[14]);
  v66 = v65[1];
  if (!v66)
    goto LABEL_33;
  v67 = *v65;
  v69 = v65[2];
  v68 = (char *)v65[3];
  v70 = objc_msgSend(a1, sel_assignmentContext);
  if (!v70)
  {
LABEL_144:
    sub_1A454A7A8();
    swift_allocError();
    v113 = 6;
    goto LABEL_145;
  }
  v71 = v70;
  v72 = objc_msgSend(a1, sel_listChangeItem);
  if (!v72)
    goto LABEL_143;
  v73 = v72;
  v273 = v69;
  v277 = v68;
  v74 = objc_msgSend(v72, sel_accountCapabilities);
  v75 = objc_msgSend(v74, sel_supportsListSharees);

  if (!v75)
    goto LABEL_141;
  v76 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84570]), sel_initWithListChangeItem_, v73);
  if (!v76)
    goto LABEL_141;
  v77 = v76;
  v78 = objc_msgSend(v76, sel_sharees);
  v267 = (char *)sub_1A444AA40(0, &qword_1EE7206E8);
  v79 = sub_1A4690BA0();

  swift_bridgeObjectRetain();
  v80 = v274;
  v81 = sub_1A4541280(v79, v67, v66);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v81)
  {
LABEL_143:

    goto LABEL_144;
  }
  v82 = objc_msgSend(v282, sel_listChangeItem);
  if (!v82)
  {
LABEL_133:
    v73 = v71;
LABEL_142:

    v71 = v73;
    goto LABEL_143;
  }
  v73 = v82;
  v83 = objc_msgSend(v82, sel_accountCapabilities);
  v84 = objc_msgSend(v83, sel_supportsListSharees);

  if (!v84 || (v85 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84570]), sel_initWithListChangeItem_, v73)) == 0)
  {

LABEL_141:
    v81 = v71;
    goto LABEL_142;
  }
  v86 = v85;
  v87 = objc_msgSend(v85, sel_sharees);
  v88 = sub_1A4690BA0();

  v89 = (uint64_t)v277;
  swift_bridgeObjectRetain();
  v90 = sub_1A4541280(v88, v273, v89);
  v274 = v80;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v90)
    goto LABEL_133;
  v91 = objc_msgSend(v71, sel_addAssignmentWithAssignee_originator_status_, v81, v90, 1);

  a2 = v281;
  a1 = v282;
  v54 = (int *)v279;
  v56 = v283;
LABEL_33:
  v92 = *(char **)((char *)a2 + v54[15]);
  v93 = *((_QWORD *)v92 + 2);
  v244 = a4;
  if (v93)
  {
    v94 = (uint64_t)&v92[(*(unsigned __int8 *)(v265 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v265 + 80)];
    v95 = *(_QWORD *)(v265 + 72);
    v277 = v92;
    swift_bridgeObjectRetain();
    do
    {
      sub_1A4497EE8(v94, (uint64_t)v62, type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment);
      v96 = objc_msgSend(v282, sel_attachmentContext);
      if (!v96)
      {
        swift_bridgeObjectRelease();
        sub_1A454A7A8();
        swift_allocError();
        *v114 = 3;
        swift_willThrow();
LABEL_54:
        v116 = type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment;
        v117 = (uint64_t)v62;
        goto LABEL_132;
      }
      v97 = v96;
      v98 = sub_1A468FED4();
      if ((*(_QWORD *)&v62[*(int *)(v280 + 20)] & 0x8000000000000000) != 0
        || (*(_QWORD *)&v62[*(int *)(v280 + 24)] & 0x8000000000000000) != 0)
      {
LABEL_159:
        sub_1A469162C();
        __break(1u);
        return;
      }
      v99 = (void *)v98;
      v285 = 0;
      v100 = objc_msgSend(v97, sel_addImageAttachmentWithURL_width_height_error_, v98);

      if (!v100)
      {
        v115 = v285;
        swift_bridgeObjectRelease();
        sub_1A468FE68();

        swift_willThrow();
        goto LABEL_54;
      }
      v101 = v285;

      sub_1A4497F2C((uint64_t)v62, type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment);
      v94 += v95;
      --v93;
    }
    while (v93);
    swift_bridgeObjectRelease();
    a4 = v244;
    a1 = v282;
    v56 = v283;
    v54 = (int *)v279;
  }
  v102 = *(char **)((char *)v281 + v54[16]);
  v103 = *((_QWORD *)v102 + 2);
  if (!v103)
    goto LABEL_59;
  v104 = (uint64_t)&v102[(*(unsigned __int8 *)(v264 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v264 + 80)];
  v280 = *(_QWORD *)(v264 + 72);
  v277 = v102;
  swift_bridgeObjectRetain();
  do
  {
    sub_1A4497EE8(v104, v56, type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment);
    v105 = objc_msgSend(a1, sel_attachmentContext);
    if (!v105)
    {
      swift_bridgeObjectRelease();
      sub_1A454A7A8();
      swift_allocError();
      *v118 = 3;
      swift_willThrow();
      goto LABEL_57;
    }
    v106 = v105;
    v107 = sub_1A468FED4();
    if ((*(_QWORD *)(v56 + *(int *)(v278 + 20)) & 0x8000000000000000) != 0
      || (*(_QWORD *)(v56 + *(int *)(v278 + 24)) & 0x8000000000000000) != 0)
    {
      goto LABEL_159;
    }
    v108 = (void *)v107;
    v285 = 0;
    v109 = objc_msgSend(v106, sel_addImageAttachmentWithURL_width_height_error_, v107);

    if (!v109)
    {
      v119 = v285;
      swift_bridgeObjectRelease();
      sub_1A468FE68();

      swift_willThrow();
LABEL_57:
      v116 = type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment;
LABEL_58:
      v117 = v56;
LABEL_132:
      sub_1A4497F2C(v117, v116);
      return;
    }
    v110 = v285;
    v111 = objc_msgSend(v109, sel_remObjectID);
    MEMORY[0x1A859E3E0]();
    if (*(_QWORD *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1A4690BDC();
    sub_1A4690C18();
    sub_1A4690BB8();

    v56 = v283;
    sub_1A4497F2C(v283, type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment);
    v104 += v280;
    --v103;
    a1 = v282;
  }
  while (v103);
  swift_bridgeObjectRelease();
  v54 = (int *)v279;
LABEL_59:
  v120 = v281;
  v121 = *(uint64_t *)((char *)v281 + v54[17]);
  v122 = *(_QWORD *)(v121 + 16);
  if (v122)
  {
    v123 = v121 + ((*(unsigned __int8 *)(v272 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v272 + 80));
    v124 = *(_QWORD *)(v272 + 72);
    v283 = *(uint64_t *)((char *)v281 + v54[17]);
    swift_bridgeObjectRetain();
    while (1)
    {
      v125 = v269;
      sub_1A4497EE8(v123, v269, type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment);
      v126 = v272;
      v127 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v272 + 56);
      v128 = v270;
      v127(v125, 0, 1, v270);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v125, 1, v128) == 1)
        break;
      v129 = v268;
      sub_1A44683E0(v125, v268, type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment);
      v130 = objc_msgSend(v282, sel_attachmentContext);
      if (!v130)
      {
        swift_bridgeObjectRelease();
        sub_1A454A7A8();
        swift_allocError();
        *v217 = 3;
        swift_willThrow();
        v116 = type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment;
        v117 = v129;
        goto LABEL_132;
      }
      v131 = v130;
      v132 = (void *)sub_1A468FED4();
      v133 = objc_msgSend(v131, sel_addURLAttachmentWithURL_, v132);

      v54 = (int *)v279;
      sub_1A4497F2C(v129, type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment);
      v123 += v124;
      if (!--v122)
      {
        v120 = v281;
        goto LABEL_66;
      }
    }
    v120 = v281;
  }
  else
  {
    v127 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v272 + 56);
    swift_bridgeObjectRetain();
LABEL_66:
    v127(v269, 1, 1, v270);
  }
  swift_bridgeObjectRelease();
  v134 = *(uint64_t *)((char *)v120 + v54[18]);
  v135 = *(_QWORD *)(v134 + 16);
  if (!v135)
    goto LABEL_73;
  v136 = v134 + ((*(unsigned __int8 *)(v263 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v263 + 80));
  v137 = *(_QWORD *)(v263 + 72);
  v283 = *(uint64_t *)((char *)v120 + v54[18]);
  swift_bridgeObjectRetain();
  v138 = v284;
  do
  {
    sub_1A4497EE8(v136, v138, type metadata accessor for REMTestStorePopulator.TestReminder.Hashtag);
    v139 = objc_msgSend(v282, sel_hashtagContext);
    if (!v139)
    {
      swift_bridgeObjectRelease();
      sub_1A454A7A8();
      swift_allocError();
      *v216 = 14;
      swift_willThrow();
      v116 = type metadata accessor for REMTestStorePopulator.TestReminder.Hashtag;
      v117 = v138;
      goto LABEL_132;
    }
    v140 = v139;
    v141 = *(_QWORD *)(v284 + 16);
    swift_bridgeObjectRetain();
    v142 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v143 = (void *)sub_1A4690030();
    v144 = objc_msgSend(v140, sel_addHashtagWithType_name_creationDate_, v141, v142, v143);

    v138 = v284;
    sub_1A4497F2C(v138, type metadata accessor for REMTestStorePopulator.TestReminder.Hashtag);
    v136 += v137;
    --v135;
  }
  while (v135);
  swift_bridgeObjectRelease();
  v120 = v281;
  v54 = (int *)v279;
LABEL_73:
  v145 = *(void **)((char *)v120 + v54[19]);
  v146 = v282;
  if (v145)
  {
    v147 = objc_allocWithZone(MEMORY[0x1E0D84468]);
    v148 = v145;
    v149 = objc_msgSend(v147, sel_initWithTrigger_, v148);
    objc_msgSend(v146, sel_addAlarm_, v149);

    v120 = v281;
  }
  v150 = *(void **)((char *)v120 + v54[20]);
  if (v150)
  {
    v151 = objc_allocWithZone(MEMORY[0x1E0D84468]);
    v152 = v150;
    v153 = objc_msgSend(v151, sel_initWithTrigger_, v152);
    objc_msgSend(v146, sel_addAlarm_, v153);

    v120 = v281;
  }
  v154 = *(void **)((char *)v120 + v54[21]);
  if (v154)
  {
    v155 = objc_allocWithZone(MEMORY[0x1E0D84468]);
    v156 = v154;
    v157 = objc_msgSend(v155, sel_initWithTrigger_, v156);
    objc_msgSend(v146, sel_addAlarm_, v157);

    v120 = v281;
  }
  v158 = *(uint64_t *)((char *)v120 + v54[22]);
  v253 = *(_QWORD *)(v158 + 16);
  if (v253)
  {
    v251 = v158 + 32;
    v159 = swift_bridgeObjectRetain();
    v160 = 0;
    v252 = v159;
    while (1)
    {
      if (v160 >= *(_QWORD *)(v159 + 16))
      {
        __break(1u);
LABEL_158:
        __break(1u);
      }
      v273 = v160;
      v168 = (uint64_t *)(v251 + 80 * v160);
      v169 = *v168;
      v170 = (void *)v168[2];
      v269 = v168[1];
      v270 = v169;
      v268 = v168[3];
      v171 = v168[5];
      v172 = v168[6];
      v173 = v168[7];
      v174 = (char *)v168[8];
      v175 = (char *)v168[9];
      v280 = v168[4];
      v271 = (uint64_t)v170;
      if (v280)
      {
        sub_1A444AA40(0, &qword_1EE7206E0);
        v176 = v170;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v265 = sub_1A4690B94();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        v177 = v170;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v265 = 0;
      }
      v283 = v173;
      v284 = (uint64_t)v174;
      v278 = v172;
      if (v171)
      {
        v178 = *(_QWORD *)(v171 + 16);
        if (v178)
        {
          v285 = (id)MEMORY[0x1E0DEE9D8];
          swift_bridgeObjectRetain();
          sub_1A469153C();
          v179 = 0;
          do
          {
            v180 = v179 + 1;
            objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *(_QWORD *)(v171 + 8 * v179 + 32));
            sub_1A4691518();
            sub_1A4691548();
            sub_1A4691554();
            sub_1A4691524();
            v179 = v180;
          }
          while (v178 != v180);
          swift_bridgeObjectRelease();
          v173 = v283;
          v174 = (char *)v284;
        }
        sub_1A444AA40(0, (unint64_t *)&unk_1EE721780);
        v264 = sub_1A4690B94();
        swift_bridgeObjectRelease();
        v172 = v278;
        v272 = v171;
        if (!v278)
        {
LABEL_93:
          v263 = 0;
          if (!v173)
            goto LABEL_94;
          goto LABEL_102;
        }
      }
      else
      {
        v264 = 0;
        v272 = 0;
        if (!v172)
          goto LABEL_93;
      }
      v182 = v172;
      v183 = *(_QWORD *)(v172 + 16);
      if (v183)
      {
        v285 = (id)MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1A469153C();
        v184 = 0;
        do
        {
          v185 = v184 + 1;
          objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *(_QWORD *)(v182 + 8 * v184 + 32));
          sub_1A4691518();
          sub_1A4691548();
          sub_1A4691554();
          sub_1A4691524();
          v184 = v185;
        }
        while (v183 != v185);
        swift_bridgeObjectRelease();
        v173 = v283;
        v174 = (char *)v284;
      }
      sub_1A444AA40(0, (unint64_t *)&unk_1EE721780);
      v263 = sub_1A4690B94();
      swift_bridgeObjectRelease();
      if (!v173)
      {
LABEL_94:
        v262 = 0;
        if (v174)
          goto LABEL_107;
        goto LABEL_95;
      }
LABEL_102:
      v186 = *(_QWORD *)(v173 + 16);
      if (v186)
      {
        v285 = (id)MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1A469153C();
        v187 = 0;
        do
        {
          v188 = v187 + 1;
          objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *(_QWORD *)(v173 + 8 * v187 + 32));
          sub_1A4691518();
          sub_1A4691548();
          v173 = v283;
          sub_1A4691554();
          sub_1A4691524();
          v187 = v188;
        }
        while (v186 != v188);
        swift_bridgeObjectRelease();
        v174 = (char *)v284;
      }
      sub_1A444AA40(0, (unint64_t *)&unk_1EE721780);
      v262 = sub_1A4690B94();
      swift_bridgeObjectRelease();
      if (v174)
      {
LABEL_107:
        v189 = *((_QWORD *)v174 + 2);
        if (v189)
        {
          v285 = (id)MEMORY[0x1E0DEE9D8];
          swift_bridgeObjectRetain();
          sub_1A469153C();
          v190 = 0;
          do
          {
            v191 = v190 + 1;
            objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *(_QWORD *)&v174[8 * v190 + 32]);
            sub_1A4691518();
            sub_1A4691548();
            v174 = (char *)v284;
            sub_1A4691554();
            sub_1A4691524();
            v190 = v191;
          }
          while (v189 != v191);
          swift_bridgeObjectRelease();
        }
        sub_1A444AA40(0, (unint64_t *)&unk_1EE721780);
        v181 = (char *)sub_1A4690B94();
        swift_bridgeObjectRelease();
        goto LABEL_112;
      }
LABEL_95:
      v181 = 0;
LABEL_112:
      v267 = v175;
      v277 = v181;
      if (v175)
      {
        v192 = *((_QWORD *)v175 + 2);
        if (v192)
        {
          v285 = (id)MEMORY[0x1E0DEE9D8];
          swift_bridgeObjectRetain();
          sub_1A469153C();
          v193 = 0;
          do
          {
            v194 = v193 + 1;
            objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *(_QWORD *)&v175[8 * v193 + 32]);
            sub_1A4691518();
            sub_1A4691548();
            sub_1A4691554();
            sub_1A4691524();
            v193 = v194;
          }
          while (v192 != v194);
          swift_bridgeObjectRelease();
          v181 = v277;
        }
        sub_1A444AA40(0, (unint64_t *)&unk_1EE721780);
        v161 = (char *)sub_1A4690B94();
        swift_bridgeObjectRelease();
      }
      else
      {
        v161 = 0;
      }
      v266 = v161;
      v160 = v273 + 1;
      v162 = (void *)v271;
      v242 = v161;
      v163 = (void *)v262;
      v164 = (void *)v265;
      v165 = (void *)v264;
      v166 = (void *)v263;
      v167 = objc_msgSend(v282, sel_addRecurrenceRuleWithFrequency_interval_firstDayOfTheWeek_daysOfTheWeek_daysOfTheMonth_monthsOfTheYear_weeksOfTheYear_daysOfTheYear_setPositions_end_, v270, v269, v268, v265, v264, v263, v262, v181, v242, v271);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v159 = v252;
      v120 = v281;
      if (v160 == v253)
      {
        swift_bridgeObjectRelease();
        v54 = (int *)v279;
        v146 = v282;
        break;
      }
    }
  }
  v195 = *(uint64_t *)((char *)v120 + v54[23]);
  v196 = *(_QWORD *)(v195 + 16);
  if (v196)
  {
    v197 = v195 + ((*(unsigned __int8 *)(v247 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v247 + 80));
    v198 = *MEMORY[0x1E0D84B50];
    v284 = *(_QWORD *)(v247 + 72);
    v280 = v195;
    swift_bridgeObjectRetain();
    v199 = v257;
    v283 = v198;
    do
    {
      sub_1A4497EE8(v197, (uint64_t)v199, type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert);
      v200 = objc_msgSend(v146, sel_dueDateDeltaAlertContext);
      if (!v200)
      {
        swift_bridgeObjectRelease();
        sub_1A454A7A8();
        swift_allocError();
        *v218 = 15;
        swift_willThrow();
        v116 = type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert;
        v117 = (uint64_t)v199;
        goto LABEL_132;
      }
      v201 = v200;
      v202 = v261;
      v203 = *v199;
      v204 = (void *)sub_1A4690030();
      v205 = objc_msgSend(v201, sel_addDueDateDeltaAlertWithDueDateDelta_identifier_creationDate_, v203, 0, v204);

      v206 = objc_msgSend(v201, sel_updateDueDateDeltaAlert_, v205);
      v207 = *(int *)(v202 + 24);
      v208 = v276;
      v209 = (uint64_t)v199 + v207;
      v210 = v256;
      sub_1A444ABF4(v209, v256, &qword_1ED243190);
      if (v255(v210, 1, v208) == 1)
      {
        sub_1A445404C(v210, &qword_1ED243190);
      }
      else
      {
        v211 = v275;
        v212 = v254;
        (*(void (**)(char *, uint64_t, uint64_t))(v275 + 32))(v254, v210, v208);
        v213 = (void *)sub_1A4690030();

        v214 = *(void (**)(char *, uint64_t))(v211 + 8);
        v198 = v283;
        v214(v212, v208);
      }
      v199 = v257;
      if (v198 >= *(uint64_t *)((char *)v257 + *(int *)(v261 + 28)))
      {
        sub_1A4497F2C((uint64_t)v257, type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert);

      }
      else
      {
        v215 = objc_msgSend(v206, sel__setMinimumSupportedAppVersion_);

        sub_1A4497F2C((uint64_t)v199, type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert);
      }
      v197 += v284;
      --v196;
      v146 = v282;
    }
    while (v196);
    swift_bridgeObjectRelease();
    v120 = v281;
    v54 = (int *)v279;
  }
  v219 = v249;
  sub_1A444ABF4((uint64_t)v120 + v54[24], v249, &qword_1ED23E4C0);
  v220 = v260;
  if (v248((char *)v219, 1, v260) == 1)
  {
    sub_1A445404C(v219, &qword_1ED23E4C0);
  }
  else
  {
    v221 = v246;
    v222 = v245;
    (*(void (**)(char *, uint64_t, uint64_t))(v246 + 32))(v245, v219, v220);
    v223 = (void *)sub_1A468FD30();
    objc_msgSend(v146, sel_setAlternativeDisplayDateDateForCalendarWithDateComponents_, v223);

    v120 = v281;
    (*(void (**)(char *, uint64_t))(v221 + 8))(v222, v220);
  }
  v225 = *v120;
  v224 = v120[1];
  swift_bridgeObjectRetain();
  v226 = objc_msgSend(v146, sel_objectID);
  if (v226)
  {
    v227 = (uint64_t)v226;
    v228 = v258;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v285 = *v228;
    *v228 = (id)0x8000000000000000;
    sub_1A445E974(v227, v225, v224, isUniquelyReferenced_nonNull_native);
    *v228 = v285;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v230 = (void *)sub_1A445DC80(v225, v224);
    swift_bridgeObjectRelease();

  }
  v231 = *(uint64_t *)((char *)v281 + v54[25]);
  v232 = *(_QWORD *)(v231 + 16);
  v56 = (uint64_t)v250;
  if (v232)
  {
    v233 = v231 + ((*(unsigned __int8 *)(v259 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v259 + 80));
    swift_bridgeObjectRetain();
    while (1)
    {
      if (v232 > *(_QWORD *)(v231 + 16))
        goto LABEL_158;
      --v232;
      sub_1A4497EE8(v233 + *(_QWORD *)(v259 + 72) * v232, v56, type metadata accessor for REMTestStorePopulator.TestReminder);
      v234 = v282;
      v235 = objc_msgSend(v282, sel_subtaskContext);
      if (!v235)
      {
        swift_bridgeObjectRelease();
        sub_1A454A7A8();
        swift_allocError();
        *v241 = 2;
        swift_willThrow();
        v116 = type metadata accessor for REMTestStorePopulator.TestReminder;
        goto LABEL_58;
      }
      v236 = v235;
      v237 = objc_msgSend(v234, sel_saveRequest);
      swift_bridgeObjectRetain();
      v238 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      v239 = objc_msgSend(v237, sel_addReminderWithTitle_toReminderSubtaskContextChangeItem_, v238, v236);

      v240 = v274;
      sub_1A453949C(v239, v56, v258, v244);
      v274 = v240;
      if (v240)
        break;
      sub_1A4497F2C(v56, type metadata accessor for REMTestStorePopulator.TestReminder);

      if (!v232)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }

    sub_1A4497F2C(v56, type metadata accessor for REMTestStorePopulator.TestReminder);
    swift_bridgeObjectRelease();
  }
}

